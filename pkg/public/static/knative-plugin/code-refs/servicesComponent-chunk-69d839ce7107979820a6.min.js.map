{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/knative-plugin/src/components/revisions/index.ts","webpack:///./packages/knative-plugin/src/components/routes/index.ts","webpack:///./packages/knative-plugin/src/components/services/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./packages/knative-plugin/src/utils/condition-utils.ts","webpack:///./packages/knative-plugin/src/utils/serverless-tab-utils.ts","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","webpack:///./packages/knative-plugin/src/utils/usePodsForRevisions.ts","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","webpack:///./packages/knative-plugin/src/components/revisions/RevisionsPage.tsx","webpack:///./packages/knative-plugin/src/components/overview/RoutesUrlLink.tsx","webpack:///./packages/knative-plugin/src/components/routes/RoutesPage.tsx","webpack:///./packages/knative-plugin/src/components/revisions/revision-table.ts","webpack:///./packages/knative-plugin/src/components/revisions/RevisionDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/route-table.ts","webpack:///./packages/knative-plugin/src/components/functions/ServiceTypeContext.ts","webpack:///./packages/knative-plugin/src/components/overview/RevisionsOverviewList.tsx","webpack:///./packages/knative-plugin/src/components/overview/RevisionsOverviewListItem.tsx","webpack:///./packages/knative-plugin/src/components/services/ServicesPage.tsx","webpack:///./packages/knative-plugin/src/components/services/service-table.ts","webpack:///./packages/knative-plugin/src/components/revisions/RevisionList.tsx","webpack:///./packages/knative-plugin/src/components/revisions/RevisionHeader.tsx","webpack:///./packages/knative-plugin/src/components/revisions/RevisionRow.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteList.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteHeader.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteRow.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceHeader.tsx","webpack:///./packages/knative-plugin/src/components/functions/GetConditionsForStatus.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceList.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceRow.tsx"],"names":["StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","spec","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","resource","owner","name","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","namespace","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","obj","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","getType","groupResources","groupResource","nextResource","resourceKind","Error","t","kind","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","type","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","metadata","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","className","htmlFor","onChange","id","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","status","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","labels","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","element","NodeType","EdgeType","KameletType","getConditionOKCount","True","getConditionString","getConditionStats","OKcount","conditionsSize","getCondition","serverlessTab","ClipboardCopyToggle","_a","textId","contentId","isExpanded","assign","clipboardCopyToggleIcon","displayName","ClipboardCopyExpanded","isReadOnly","isCode","suppressContentEditableWarning","clipboardCopyExpandableContent","onInput","innerText","contentEditable","dir","defaultProps","usePodsForRevisions","revisionIds","setLoaded","setLoadError","setPods","watchedResources","replicaSets","updateResults","updatedResources","errorKey","revisionsPods","controller","debouncedUpdateResources","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","newText","textWhenExpanded","componentWillUnmount","window","clearTimeout","expandContent","_event","expanded","updateText","updateTextWhenExpanded","render","isBlock","exitDelay","maxWidth","entryDelay","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","additionalActions","ouiaId","ouiaSafe","divProps","clipboardCopy","modifiers","inline","block","clipboardCopyText","code","clipboardCopyActions","clipboardCopyActionsItem","copied","onTooltipHidden","clipboardCopyGroup","readOnlyVariant","top","navigator","clipboard","writeText","customData","canCreate","ListComponent","selector","selectResourcesForName","urls","link","additionalClassName","tableColumnClasses","columnClass","location","isAdminPerspective","pages","details","editYaml","breadcrumbs","breadcrumbsFor","customActionMenu","kindObjData","context","actions","options","DROPDOWN","RouteDetails","isPrivateKSVC","hideEmpty","KnativeServiceTypeContext","service","hideSectionHeading","canSetTrafficDistribution","filteredRevisions","revWithTraffic","revWithoutTraffic","to","searchQuery","URLSearchParams","append","getRevisionsLink","revLength","revision","current","deploymentData","availableReplicas","standalone","size","innerRadius","outerRadius","titleComponent","fontSize","showTooltip","filterGroupName","Function","reducer","filterValue","functionIndicator","rowFilters","Header","Row","virtualize","sortField","transforms","revisionReference","serviceReference","readyCondition","Ready","columnID","timestamp","creationTimestamp","lineClamp","ServiceDetails","revisionLoaded","revisionErrorLoad","podSelector","showNodeSelector","containers","FunctionsPods","showTitle","showNamespaceOverride","serviceTypeValue","nameKey","component","pageData","routeReference","hideIcon","successCount","failureCount","generation"],"mappings":"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","file":"knative-plugin/code-refs/servicesComponent-chunk-69d839ce7107979820a6.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export { default as RevisionsPage } from './RevisionsPage';\nexport { default as RevisionDetailsPage } from './RevisionDetailsPage';\n","export { default as RouteDetailsPage } from './RouteDetailsPage';\nexport { default as RoutesPage } from './RoutesPage';\n","export { default as ServiceDetailsPage } from './ServiceDetailsPage';\nexport { default as ServicesPage } from './ServicesPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"clipboardCopy\": \"pf-v5-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-v5-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-v5-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-v5-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-v5-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-v5-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-v5-c-clipboard-copy__toggle-icon\",\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import * as _ from 'lodash';\nimport { K8sResourceCondition, K8sResourceConditionStatus } from '@console/internal/module/k8s';\n\nexport const getConditionOKCount = (conditions: K8sResourceCondition[]): number =>\n  _.sumBy<any>(conditions, (c) => Number(c.status === K8sResourceConditionStatus.True));\n\nexport const getConditionString = (conditions: K8sResourceCondition[]): string =>\n  `${getConditionOKCount(conditions)} OK / ${_.size(conditions)}`;\n\nexport const getConditionStats = (\n  conditions: K8sResourceCondition[],\n): { OKcount: number; conditionsSize: number } => {\n  return {\n    OKcount: getConditionOKCount(conditions),\n    conditionsSize: _.size(conditions),\n  };\n};\n\nexport const getCondition = (\n  conditions: K8sResourceCondition[],\n  type: K8sResourceCondition['type'],\n): K8sResourceCondition | undefined => _.find(conditions, (c) => c.type === type);\n","import {\n  RevisionModel,\n  ServiceModel,\n  RouteModel,\n  EventingBrokerModel,\n  EventingTriggerModel,\n  EventingSubscriptionModel,\n} from '../models';\n\nexport const serverlessTab = (kind: string) => {\n  switch (kind) {\n    case ServiceModel.kind:\n    case 'EventSource':\n      return '';\n    case RevisionModel.kind:\n      return 'revisions';\n    case RouteModel.kind:\n      return 'routes';\n    case EventingBrokerModel.kind:\n      return 'brokers';\n    case EventingTriggerModel.kind:\n      return 'triggers';\n    case EventingSubscriptionModel.kind:\n      return 'subscriptions';\n    case 'Channel':\n      return 'channels';\n    default:\n      return null;\n  }\n};\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": contentId, \"aria-expanded\": isExpanded }, props),\n        React.createElement(\"div\", { className: css(styles.clipboardCopyToggleIcon) },\n            React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nclass ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e, e.target.innerText), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", { dir: \"ltr\" }, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\nexport { ClipboardCopyExpanded };\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { DeploymentModel } from '@console/internal/models';\nimport {\n  apiVersionForModel,\n  K8sResourceCommon,\n  K8sResourceKind,\n} from '@console/internal/module/k8s';\nimport {\n  getReplicaSetsForResource,\n  PodControllerOverviewItem,\n  useDeepCompareMemoize,\n  useDebounceCallback,\n} from '@console/shared';\n\nexport const usePodsForRevisions = (\n  revisionIds: string | string[],\n  namespace: string,\n): { loaded: boolean; loadError: string; pods: PodControllerOverviewItem[] } => {\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const [pods, setPods] = React.useState<PodControllerOverviewItem[]>([]);\n  const revisions = useDeepCompareMemoize(Array.isArray(revisionIds) ? revisionIds : [revisionIds]);\n  const watchedResources = React.useMemo(\n    () => ({\n      deployments: {\n        isList: true,\n        kind: 'Deployment',\n        namespace,\n      },\n      replicaSets: {\n        isList: true,\n        kind: 'ReplicaSet',\n        namespace,\n      },\n      pods: {\n        isList: true,\n        kind: 'Pod',\n        namespace,\n      },\n    }),\n    [namespace],\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceCommon[] }>(watchedResources);\n\n  const updateResults = React.useCallback(\n    (updatedResources) => {\n      const errorKey = Object.keys(updatedResources).find((key) => updatedResources[key].loadError);\n      if (errorKey) {\n        setLoadError(updatedResources[errorKey].loadError?.message);\n        return;\n      }\n      if (\n        Object.keys(updatedResources).length > 0 &&\n        Object.keys(updatedResources).every((key) => updatedResources[key].loaded)\n      ) {\n        const revisionsPods = revisions.reduce((acc, uid) => {\n          const associatedDeployment = _.filter(\n            updatedResources?.deployments?.data,\n            ({ metadata: { ownerReferences } }) =>\n              _.some(ownerReferences, {\n                uid,\n                controller: true,\n              }),\n          );\n          if (associatedDeployment?.[0]) {\n            const depObj: K8sResourceKind = {\n              ...associatedDeployment[0],\n              apiVersion: apiVersionForModel(DeploymentModel),\n              kind: DeploymentModel.kind,\n            };\n            acc.push(...getReplicaSetsForResource(depObj, updatedResources));\n          }\n          return acc;\n        }, []);\n        setLoaded(true);\n        setLoadError(null);\n        setPods(revisionsPods);\n      }\n    },\n    [revisions],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(updateResults, 250);\n\n  React.useEffect(() => {\n    debouncedUpdateResources(resources);\n  }, [debouncedUpdateResources, resources]);\n\n  return useDeepCompareMemoize({ loaded, loadError, pods });\n};\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipPosition } from '../Tooltip';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (_event, text) => {\n    try {\n        navigator.clipboard.writeText(text.toString());\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Clipboard API not found, this copy function will not work. This is likely because you're using an\", \"unsupported browser or you're not using HTTPS. \\n\\nIf you're a developer building an application which needs\", \"to support copying to the clipboard without the clipboard API, you'll have to create your own copy\", 'function and pass it to the ClipboardCopy component as the onCopy prop. For more information see', 'https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard');\n        // eslint-disable-next-line no-console\n        console.error(error);\n    }\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nclass ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                const newText = this.props.children;\n                this.setState({ text: newText, textWhenExpanded: newText });\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        this.expandContent = (_event) => {\n            this.setState((prevState) => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (event, text) => {\n            this.setState({ text });\n            this.props.onChange(event, text);\n        };\n        this.updateTextWhenExpanded = (event, text) => {\n            this.setState({ textWhenExpanded: text });\n            this.props.onChange(event, text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: (_event) => {\n                                this.expandContent(_event);\n                                if (this.state.expanded) {\n                                    this.setState({ text: this.state.textWhenExpanded });\n                                }\n                                else {\n                                    this.setState({ textWhenExpanded: this.state.text });\n                                }\n                            }, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, Object.assign({ readOnlyVariant: isReadOnly || this.state.expanded ? 'default' : undefined, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }, (isCode && { dir: 'ltr' }))),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.expanded ? this.state.textWhenExpanded : this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateTextWhenExpanded }, this.state.text))))))));\n        };\n        const text = Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children;\n        this.state = {\n            text,\n            expanded: this.props.isExpanded,\n            copied: false,\n            textWhenExpanded: text\n        };\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: TooltipPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true\n};\nexport { ClipboardCopy };\n//# sourceMappingURL=ClipboardCopy.js.map","import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RevisionModel } from '../../models';\nimport RevisionList from './RevisionList';\n\nconst RevisionsPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { customData } = props;\n  return (\n    <ListPage\n      {...props}\n      canCreate={false}\n      kind={referenceForModel(RevisionModel)}\n      ListComponent={RevisionList}\n      selector={\n        customData?.selectResourcesForName\n          ? { matchLabels: { 'serving.knative.dev/service': customData.selectResourcesForName } }\n          : null\n      }\n    />\n  );\n};\n\nexport default RevisionsPage;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core/dist/dynamic/components/ClipboardCopy';\nimport { ExternalLinkWithCopy } from '@console/internal/components/utils';\n\nexport type RoutesUrlLinkProps = {\n  urls: string[];\n  title?: string;\n};\n\nconst RoutesUrlLink: React.FC<RoutesUrlLinkProps> = ({ urls = [], title }) =>\n  urls.length > 0 && (\n    <>\n      {title && <span className=\"text-muted\">{title}: </span>}\n      {urls.map((url) =>\n        url?.endsWith('svc.cluster.local') ? (\n          <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n            {url}\n          </ClipboardCopy>\n        ) : (\n          <ExternalLinkWithCopy\n            key={url}\n            link={url}\n            text={url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        ),\n      )}\n    </>\n  );\n\nexport default RoutesUrlLink;\n","import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RouteModel } from '../../models';\nimport RouteList from './RouteList';\n\nconst RoutesPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { customData } = props;\n  return (\n    <ListPage\n      {...props}\n      canCreate={false}\n      kind={referenceForModel(RouteModel)}\n      ListComponent={RouteList}\n      selector={\n        customData?.selectResourcesForName\n          ? { matchLabels: { 'serving.knative.dev/service': customData.selectResourcesForName } }\n          : null\n      }\n    />\n  );\n};\n\nexport default RoutesPage;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  'pf-m-hidden pf-m-visible-on-sm', // service\n  'pf-m-hidden pf-m-visible-on-lg', // created\n  'pf-m-hidden pf-m-visible-on-xl', // conditions\n  'pf-m-hidden pf-m-visible-on-xl', // ready\n  'pf-m-hidden pf-m-visible-on-2xl', // reason\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { DetailsForKind } from '@console/internal/components/default-resource';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { navFactory } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport {\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n  ActionMenu,\n} from '@console/shared';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\n\nconst RevisionDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const location = useLocation();\n  const params = useParams();\n  const { kindObj } = props;\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [navFactory.details(DetailsForKind), navFactory.editYaml()];\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'serving',\n    serverlessTab(kindObj.kind),\n    undefined,\n    isAdminPerspective,\n  );\n\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n    />\n  );\n};\n\nexport default RevisionDetailsPage;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { RoutesDetailsProps } from '@console/internal/components/routes';\nimport {\n  DetailsItem,\n  detailsPage,\n  ExternalLinkWithCopy,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport {\n  ActionMenu,\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n} from '@console/shared';\nimport { PRIVATE_KNATIVE_SERVING_LABEL } from '../../const';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\n\nconst RouteDetails: React.FC<RoutesDetailsProps> = ({ obj: route }) => {\n  const { t } = useTranslation();\n  const isPrivateKSVC =\n    route?.metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] === 'cluster-local';\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Route details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={route} />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl>\n              <DetailsItem\n                label={t('knative-plugin~Location')}\n                obj={route}\n                path=\"status.url\"\n                hideEmpty\n              >\n                {isPrivateKSVC ? (\n                  <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n                    {route?.status?.url}\n                  </ClipboardCopy>\n                ) : (\n                  <ExternalLinkWithCopy\n                    link={route?.status?.url}\n                    text={route?.status?.url}\n                    additionalClassName=\"co-external-link--block\"\n                  />\n                )}\n              </DetailsItem>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Conditions')} />\n        <Conditions conditions={route?.status?.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst RouteDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const { kindObj } = props;\n  const params = useParams();\n  const location = useLocation();\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [navFactory.details(detailsPage(RouteDetails)), navFactory.editYaml()];\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'serving',\n    serverlessTab(kindObj.kind),\n    undefined,\n    isAdminPerspective,\n  );\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n    />\n  );\n};\n\nexport default RouteDetailsPage;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  'pf-m-hidden pf-m-visible-on-sm', // url\n  'pf-m-hidden pf-m-visible-on-lg', // created\n  'pf-m-hidden pf-m-visible-on-xl', // conditions\n  'pf-m-hidden pf-m-visible-on-2xl', // traffic\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { ServiceTypeValue } from '../../types';\n\nexport const KnativeServiceTypeContext = React.createContext(ServiceTypeValue.Service);\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { SidebarSectionHeading, useAccessReview } from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel, RevisionModel } from '../../models';\nimport { setTrafficDistributionModal } from '../modals';\nimport RevisionsOverviewListItem from './RevisionsOverviewListItem';\nimport './RevisionsOverviewList.scss';\n\nexport type RevisionsOverviewListProps = {\n  revisions: K8sResourceKind[];\n  service: K8sResourceKind;\n  hideSectionHeading?: boolean;\n};\n\nconst MAX_REVISIONS: number = 3;\n\nconst RevisionsOverviewList: React.FC<RevisionsOverviewListProps> = ({\n  revisions,\n  service,\n  hideSectionHeading,\n}) => {\n  const { t } = useTranslation();\n  const canSetTrafficDistribution = useAccessReview({\n    group: ServiceModel.apiGroup,\n    resource: ServiceModel.plural,\n    namespace: service.metadata.namespace,\n    verb: 'update',\n  });\n\n  const namespace = service.metadata?.namespace;\n  const traffic = service.status?.traffic;\n  const name = service.metadata?.name;\n\n  const filteredRevisions: K8sResourceKind[] = React.useMemo(() => {\n    if (!revisions || !revisions.length) {\n      return [];\n    }\n    const [revWithTraffic, revWithoutTraffic] = _.partition(revisions, (element) => {\n      return traffic ? _.find(traffic, { revisionName: element.metadata?.name }) : false;\n    }).map((element) => _.sortBy(element, ['metadata.creationTimestamp']));\n    return revWithTraffic.length < MAX_REVISIONS\n      ? _.concat(revWithTraffic, revWithoutTraffic.slice(0, MAX_REVISIONS - revWithTraffic.length))\n      : revWithTraffic;\n  }, [revisions, traffic]);\n\n  const getRevisionsLink = () => {\n    const url = `/search/ns/${namespace}`;\n    const searchQuery = `serving.knative.dev/service=${name}`;\n    const params = new URLSearchParams();\n    params.append('kind', referenceForModel(RevisionModel));\n    params.append('q', searchQuery);\n    return `${url}?${params.toString()}`;\n  };\n\n  return (\n    <>\n      {!hideSectionHeading && (\n        <SidebarSectionHeading\n          text={t('knative-plugin~Revisions')}\n          className=\"revision-overview-list\"\n        >\n          {revisions?.length > MAX_REVISIONS && (\n            <Link className=\"sidebar__section-view-all\" to={getRevisionsLink()}>\n              {t('knative-plugin~View all ({{revLength}})', { revLength: revisions.length })}\n            </Link>\n          )}\n\n          {canSetTrafficDistribution && (\n            <Button\n              variant=\"secondary\"\n              onClick={() => setTrafficDistributionModal({ obj: service })}\n              isDisabled={!(revisions && revisions.length)}\n            >\n              {t('knative-plugin~Set traffic distribution')}\n            </Button>\n          )}\n        </SidebarSectionHeading>\n      )}\n      {_.isEmpty(revisions) ? (\n        <span className=\"text-muted\">\n          {t('knative-plugin~No Revisions found for this resource.')}\n        </span>\n      ) : (\n        <ul className=\"list-group\">\n          {_.map(filteredRevisions, (revision) => (\n            <RevisionsOverviewListItem\n              key={revision.metadata.uid}\n              revision={revision}\n              service={service}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default RevisionsOverviewList;\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { K8sResourceKind, OwnerReference, referenceForModel } from '@console/internal/module/k8s';\nimport { PodStatus } from '@console/shared';\nimport { RevisionModel } from '../../models';\nimport { getTrafficByRevision } from '../../utils/get-knative-resources';\nimport { usePodsForRevisions } from '../../utils/usePodsForRevisions';\nimport RoutesUrlLink from './RoutesUrlLink';\n\nimport './RevisionsOverviewListItem.scss';\n\nexport type RevisionsOverviewListItemProps = {\n  revision: K8sResourceKind;\n  service: K8sResourceKind;\n};\n\nconst RevisionsOverviewListItem: React.FC<RevisionsOverviewListItemProps> = ({\n  revision,\n  service,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = revision;\n  const { pods } = usePodsForRevisions(revision.metadata.uid, namespace);\n  const current = pods?.[0];\n  const deploymentData = current?.obj?.metadata.ownerReferences?.[0] || ({} as OwnerReference);\n  const availableReplicas = current?.obj?.status?.availableReplicas || '0';\n  const { urls = [], percent: trafficPercent } = getTrafficByRevision(name, service);\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col-sm-8 col-xs-9\">\n          <ResourceLink kind={referenceForModel(RevisionModel)} name={name} namespace={namespace} />\n        </div>\n        {trafficPercent && (\n          <span className=\"col-sm-4 col-xs-3 pf-v5-u-text-align-right\">{trafficPercent}</span>\n        )}\n      </div>\n      {deploymentData.name && (\n        <div className=\"odc-revision-deployment-list\">\n          <div className=\"row\">\n            <div className=\"col-sm-8 col-xs-9\">\n              <ResourceLink\n                kind={deploymentData.kind}\n                name={deploymentData.name}\n                namespace={namespace}\n              />\n            </div>\n            <div className=\"col-sm-4 col-xs-3\">\n              <div className=\"odc-revision-deployment-list__pod\">\n                <PodStatus\n                  standalone\n                  data={current ? current.pods : []}\n                  size={25}\n                  innerRadius={8}\n                  outerRadius={12}\n                  title={availableReplicas}\n                  titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n                  showTooltip={false}\n                />\n              </div>\n            </div>\n          </div>\n          {urls.length > 0 && (\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <RoutesUrlLink urls={urls} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default RevisionsOverviewListItem;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { ListPage } from '@console/internal/components/factory';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel } from '../../models';\nimport { isServerlessFunction } from '../../topology/knative-topology-utils';\nimport { ServiceKind, ServiceTypeValue } from '../../types';\nimport ServiceList from './ServiceList';\n\nconst ServicesPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { t } = useTranslation();\n\n  const filterReducer = (service): ServiceTypeValue => {\n    if (isServerlessFunction(service)) return ServiceTypeValue.Function;\n    return ServiceTypeValue.Service;\n  };\n\n  const filters: RowFilter<ServiceKind>[] = [\n    {\n      type: 'type',\n      filterGroupName: t('knative-plugin~Type'),\n      items: [\n        { id: ServiceTypeValue.Function, title: t('knative-plugin~Functions') },\n        { id: ServiceTypeValue.Service, title: t('knative-plugin~Non-functions') },\n      ],\n      reducer: filterReducer,\n      filter: (filterValue, service) => {\n        const functionIndicator = isServerlessFunction(service)\n          ? ServiceTypeValue.Function\n          : ServiceTypeValue.Service;\n        return !filterValue?.selected?.length || filterValue?.selected.includes(functionIndicator);\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('knative-plugin~Services')}</title>\n      </Helmet>\n      <ListPage\n        canCreate\n        {...props}\n        kind={referenceForModel(ServiceModel)}\n        ListComponent={ServiceList}\n        rowFilters={filters}\n      />\n    </>\n  );\n};\n\nexport default ServicesPage;\n","import * as classNames from 'classnames';\nimport { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm'), // url\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // conditions\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // ready\n  classNames('pf-m-hidden', 'pf-m-visible-on-2xl'), // reason\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // revision\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // created\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport RevisionHeader from './RevisionHeader';\nimport RevisionRow from './RevisionRow';\n\nconst RevisionList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Revisions')}\n      Header={RevisionHeader(t)}\n      Row={RevisionRow}\n      virtualize\n    />\n  );\n};\n\nexport default RevisionList;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './revision-table';\n\nconst RevisionHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~Service'),\n      sortField: 'metadata.labels[\"serving.knative.dev/service\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Ready'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('knative-plugin~Reason'),\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[7] },\n    },\n  ];\n};\n\nexport default RevisionHeader;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp } from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { ClampedText, LazyActionMenu } from '@console/shared';\nimport { RevisionModel, ServiceModel } from '../../models';\nimport { RevisionKind, ConditionTypes } from '../../types';\nimport { getConditionString, getCondition } from '../../utils/condition-utils';\nimport { tableColumnClasses } from './revision-table';\n\nconst revisionReference = referenceForModel(RevisionModel);\nconst serviceReference = referenceForModel(ServiceModel);\n\nconst RevisionRow: React.FC<RowFunctionArgs<RevisionKind>> = ({ obj }) => {\n  const readyCondition = obj.status\n    ? getCondition(obj.status.conditions, ConditionTypes.Ready)\n    : null;\n  const service = _.get(obj.metadata, `labels[\"serving.knative.dev/service\"]`);\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={revisionReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[2], 'co-break-word')}>\n        {service && (\n          <ResourceLink\n            kind={serviceReference}\n            name={service}\n            namespace={obj.metadata.namespace}\n            title={service}\n          />\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.status ? getConditionString(obj.status.conditions) : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {(readyCondition && readyCondition.status) || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        {(readyCondition?.message && (\n          <ClampedText lineClamp={5}>{readyCondition?.message}</ClampedText>\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RevisionRow;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { PodsPage } from '@console/internal/components/pod';\nimport {\n  ContainerTable,\n  DetailsItem,\n  ExternalLink,\n  ResourceSummary,\n  SectionHeading,\n  navFactory,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel, K8sKind } from '@console/internal/module/k8s';\nimport {\n  ActionMenu,\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n} from '@console/shared';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { isServerlessFunction } from '../../topology/knative-topology-utils';\nimport { RevisionKind, ServiceKind, ServiceTypeValue } from '../../types';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\nimport { KnativeServiceTypeContext } from '../functions/ServiceTypeContext';\nimport RevisionsOverviewList from '../overview/RevisionsOverviewList';\nimport { RevisionsPage } from '../revisions';\nimport { RoutesPage } from '../routes';\n\ntype FunctionsPodsProps = {\n  obj: K8sResourceKind;\n};\n\nconst ServiceDetails: React.FC<{ obj: ServiceKind }> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [revisions, revisionLoaded, revisionErrorLoad] = useK8sWatchResource<RevisionKind[]>({\n    kind: referenceForModel(RevisionModel),\n    namespace: obj.metadata.namespace,\n    isList: true,\n    selector: { matchLabels: { 'serving.knative.dev/service': obj.metadata.name } },\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary\n              resource={obj}\n              podSelector=\"spec.podSelector\"\n              showNodeSelector={false}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <dl>\n              {isServerlessFunction(obj) && (\n                <DetailsItem label={t('knative-plugin~Type')} obj={obj}>\n                  {t('knative-plugin~Function')}\n                </DetailsItem>\n              )}\n              {obj?.status?.url && (\n                <DetailsItem label={t('knative-plugin~URL')} obj={obj} path=\"status.url\">\n                  <ExternalLink\n                    href={obj.status.url}\n                    additionalClassName=\"co-external-link--block\"\n                    text={obj.status.url}\n                  />\n                </DetailsItem>\n              )}\n              {revisions && revisionLoaded && !revisionErrorLoad && (\n                <DetailsItem label={t('knative-plugin~Revisions')} obj={obj} path=\"status.traffic\">\n                  <RevisionsOverviewList revisions={revisions} service={obj} hideSectionHeading />\n                </DetailsItem>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Containers')} />\n        <ContainerTable containers={obj.spec.template.spec.containers} />\n      </div>\n      {_.isArray(obj?.status?.conditions) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('knative-plugin~Conditions')} />\n          <Conditions conditions={obj.status.conditions} />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst FunctionsPods: React.FC<FunctionsPodsProps> = ({ obj }) => (\n  <PodsPage\n    showTitle={false}\n    selector={{ matchLabels: { 'serving.knative.dev/service': obj.metadata.name } }}\n    showNamespaceOverride\n    canCreate={false}\n    namespace={obj.metadata.namespace}\n  />\n);\n\nconst ServiceDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const { t } = useTranslation();\n  const serviceTypeValue = React.useContext(KnativeServiceTypeContext);\n  const { kindObj } = props;\n  const params = useParams();\n  const location = useLocation();\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [\n    navFactory.details(ServiceDetails),\n    navFactory.editYaml(),\n    {\n      href: RevisionModel.plural,\n      // t('knative-plugin~Revisions')\n      nameKey: 'knative-plugin~Revisions',\n      component: RevisionsPage,\n      pageData: {\n        kind: referenceForModel(RevisionModel),\n        namespace: params.ns,\n        showTitle: false,\n        name: '',\n      },\n    },\n    {\n      href: RouteModel.plural,\n      // t('knative-plugin~Routes')\n      nameKey: 'knative-plugin~Routes',\n      component: RoutesPage,\n      pageData: {\n        kind: referenceForModel(RouteModel),\n        namespace: params.ns,\n        showTitle: false,\n        name: '',\n      },\n    },\n    navFactory.pods(FunctionsPods),\n  ];\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    serviceTypeValue === ServiceTypeValue.Function ? 'functions' : 'serving',\n    serverlessTab(kindObj.kind),\n    serviceTypeValue === ServiceTypeValue.Function ? t('knative-plugin~Functions') : undefined,\n    serviceTypeValue === ServiceTypeValue.Function ? true : isAdminPerspective,\n    serviceTypeValue === ServiceTypeValue.Function ? t('knative-plugin~Function') : undefined,\n  );\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n      customData={{ selectResourcesForName: params.name }}\n    />\n  );\n};\n\nexport default ServiceDetailsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport RouteHeader from './RouteHeader';\nimport RouteRow from './RouteRow';\n\nconst RouteList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Routes')}\n      Header={RouteHeader(t)}\n      Row={RouteRow}\n      virtualize\n    />\n  );\n};\n\nexport default RouteList;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './route-table';\n\nconst RouteHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~URL'),\n      sortField: 'status.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Traffic'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nexport default RouteHeader;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, ExternalLinkWithCopy } from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { LazyActionMenu } from '@console/shared/src';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { RouteKind } from '../../types';\nimport { getConditionString } from '../../utils/condition-utils';\nimport { tableColumnClasses } from './route-table';\n\nconst routeReference = referenceForModel(RouteModel);\nconst revisionReference = referenceForModel(RevisionModel);\n\nconst RouteRow: React.FC<RowFunctionArgs<RouteKind>> = ({ obj }) => {\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={routeReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {(obj.status && obj.status.url && (\n          <ExternalLinkWithCopy\n            link={obj.status.url}\n            text={obj.status.url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.status ? getConditionString(obj.status.conditions) : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {obj.status && obj.status.traffic\n          ? obj.status.traffic.map((t, i) => (\n              <React.Fragment key={t.revisionName}>\n                {i > 0 ? ', ' : ''}\n                {`${t.percent}% → `}\n                <ResourceLink\n                  namespace={obj.metadata.namespace}\n                  kind={revisionReference}\n                  name={t.revisionName}\n                  inline\n                  hideIcon\n                />\n              </React.Fragment>\n            ))\n          : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RouteRow;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './service-table';\n\nconst ServiceHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~URL'),\n      sortField: 'status.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Ready'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Reason'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('knative-plugin~Revision'),\n      sortField: 'metadata.generation',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ];\n};\n\nexport default ServiceHeader;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\nimport { GreenCheckCircleIcon, RedExclamationCircleIcon } from '@console/shared/';\nimport { getConditionOKCount } from '../../utils/condition-utils';\n\nexport type GetConditionsForStatusProps = {\n  conditions: K8sResourceCondition[];\n};\n\nconst GetConditionsForStatus: React.FC<GetConditionsForStatusProps> = ({ conditions }) => {\n  const successCount = getConditionOKCount(conditions);\n  const failureCount = _.size(conditions) - successCount;\n  return (\n    <div>\n      <span>\n        {' '}\n        <GreenCheckCircleIcon /> {successCount} &nbsp;|&nbsp; <RedExclamationCircleIcon />{' '}\n        {failureCount}\n      </span>\n    </div>\n  );\n};\n\nexport default GetConditionsForStatus;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport ServiceHeader from './ServiceHeader';\nimport ServiceRow from './ServiceRow';\n\nconst ServiceList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Services')}\n      Header={ServiceHeader(t)}\n      Row={ServiceRow}\n      virtualize\n    />\n  );\n};\n\nexport default ServiceList;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, ExternalLink } from '@console/internal/components/utils';\nimport { referenceForModel, referenceFor } from '@console/internal/module/k8s';\nimport { LazyActionMenu, ClampedText } from '@console/shared';\nimport { ServiceModel } from '../../models';\nimport { ServiceKind, ConditionTypes } from '../../types';\nimport { getCondition } from '../../utils/condition-utils';\nimport GetConditionsForStatus from '../functions/GetConditionsForStatus';\nimport { tableColumnClasses } from './service-table';\n\nconst serviceReference = referenceForModel(ServiceModel);\n\nconst ServiceRow: React.FC<RowFunctionArgs<ServiceKind>> = ({ obj }) => {\n  const readyCondition = obj.status\n    ? getCondition(obj.status.conditions, ConditionTypes.Ready)\n    : null;\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={serviceReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[2], 'co-break-word')}>\n        {(obj.status && obj.status.url && (\n          <ExternalLink\n            href={obj.status.url}\n            additionalClassName=\"co-external-link--block\"\n            text={obj.status.url}\n          />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {obj.status ? <GetConditionsForStatus conditions={obj.status.conditions} /> : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {(readyCondition && readyCondition.status) || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {(readyCondition?.message && (\n          <ClampedText lineClamp={5}>{readyCondition?.message}</ClampedText>\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>{obj.metadata.generation || '-'}</TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default ServiceRow;\n"],"sourceRoot":""}