{"version":3,"sources":["webpack:///./public/components/resource-quota.jsx","webpack:///./public/components/namespace.jsx","webpack:///./packages/knative-plugin/src/components/overview/index.ts","webpack:///./packages/console-shared/src/components/dashboard/inventory-card/utils.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/knative-plugin/src/components/revisions/index.ts","webpack:///./packages/knative-plugin/src/components/routes/index.ts","webpack:///./packages/knative-plugin/src/components/services/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard-context.tsx","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./public/components/dashboard/with-dashboard-resources.tsx","webpack:///./packages/console-app/src/components/resource-quota/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utils.ts","webpack:///./packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/health-item.tsx","webpack:///./packages/console-shared/src/promql/project-dashboard.ts","webpack:///./packages/console-shared/src/promql/cluster-dashboard.ts","webpack:///./packages/console-app/src/components/resource-quota/ResourceQuotaCharts.tsx","webpack:///./packages/console-app/src/components/resource-quota/AppliedClusterResourceQuotaCharts.tsx","webpack:///./public/components/graphs/donut.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/QuotaSummary.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/context.ts","webpack:///./packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/status-card.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","webpack:///./public/components/graphs/gauge.tsx","webpack:///./public/components/dashboard/project-dashboard/project-dashboard.tsx","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./public/components/overview/index.tsx","webpack:///./public/components/dashboard/project-dashboard/details-card.tsx","webpack:///./public/components/dashboard/project-dashboard/status-card.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-card.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/inventory-card.tsx","webpack:///./public/components/dashboard/project-dashboard/activity-card.tsx","webpack:///./public/components/dashboard/project-dashboard/launcher-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherItem.tsx","webpack:///./public/components/dashboard/project-dashboard/resource-quota-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem.tsx","webpack:///./packages/console-app/src/components/resource-quota/ClusterResourceQuotaCharts.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem.tsx","webpack:///./packages/knative-plugin/src/utils/condition-utils.ts","webpack:///./packages/knative-plugin/src/utils/serverless-tab-utils.ts","webpack:///./packages/knative-plugin/src/utils/usePodsForRevisions.ts","webpack:///./packages/dev-console/src/utils/useAddActionExtensions.ts","webpack:///./packages/knative-plugin/src/components/revisions/RevisionsPage.tsx","webpack:///./packages/knative-plugin/src/components/overview/RoutesUrlLink.tsx","webpack:///./packages/knative-plugin/src/components/routes/RoutesPage.tsx","webpack:///./packages/knative-plugin/src/components/revisions/revision-table.ts","webpack:///./packages/knative-plugin/src/components/revisions/RevisionDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/route-table.ts","webpack:///./packages/knative-plugin/src/components/functions/ServiceTypeContext.ts","webpack:///./packages/knative-plugin/src/components/overview/RevisionsOverviewList.tsx","webpack:///./packages/knative-plugin/src/components/overview/RevisionsOverviewListItem.tsx","webpack:///./packages/knative-plugin/src/components/services/ServicesPage.tsx","webpack:///./packages/knative-plugin/src/components/services/service-table.ts","webpack:///./packages/knative-plugin/src/components/revisions/RevisionList.tsx","webpack:///./packages/knative-plugin/src/components/revisions/RevisionHeader.tsx","webpack:///./packages/knative-plugin/src/components/revisions/RevisionRow.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteList.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteHeader.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteRow.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceHeader.tsx","webpack:///./packages/knative-plugin/src/components/functions/GetConditionsForStatus.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceList.tsx","webpack:///./packages/knative-plugin/src/components/services/ServiceRow.tsx","webpack:///./packages/knative-plugin/src/components/overview/KnativeServingDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/overview/serving-list/ServingListsPage.tsx","webpack:///./packages/knative-plugin/src/components/functions/FunctionsPage.tsx","webpack:///./packages/knative-plugin/src/components/functions/CreateActionDropdown.tsx","webpack:///./packages/knative-plugin/src/components/functions/FunctionDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/functions/FunctionsList.tsx","webpack:///./packages/knative-plugin/src/components/functions/FunctionRow.tsx","webpack:///./packages/knative-plugin/src/components/functions/GettingStartedSection.tsx","webpack:///./packages/knative-plugin/src/components/functions/FunctionsDocsGettingStartedCard.tsx","webpack:///./packages/knative-plugin/src/components/functions/QuickStartGettingStartedCard.tsx","webpack:///./packages/knative-plugin/src/components/functions/SamplesGettingStartedCard.tsx"],"names":["common","factory","resourceQuotaMenuActions","getExtensionsActionsForKind","clusterResourceQuotaMenuActions","appliedClusterResourceQuotaMenuActions","namespace","ModifyLabels","ModifyAnnotations","kind","obj","labelKey","href","metadata","name","accessReview","group","apiGroup","resource","plural","verb","Delete","isClusterQuota","quota","clusterQuotaReference","appliedClusterQuotaReference","quotaActions","customData","getQuotaResourceTypes","specHard","sort","getACRQResourceUsage","resourceType","used","status","namespaces","filter","ns","cluster","total","totalUsed","max","hard","spec","percentNamespace","percentOtherNamespaces","percent","otherNamespaces","unused","getResourceUsage","isCluster","statusPath","specPath","usedPath","tableColumnClasses","columnClass","acrqTableColumnClasses","UsageIcon","usageIcon","className","ResourceUsageRow","QuotaScopesInline","scopes","join","QuotaScopesList","t","quotaScopes","Terminating","description","NotTerminating","BestEffort","NotBestEffort","map","scope","scopeObj","key","hasComputeResources","resourceTypes","length","Details","rq","params","reference","isACRQ","text","charts","appliedClusterResourceQuota","clusterResourceQuota","resourceQuota","canListCRQ","label","path","labels","selector","matchLabels","annotations","style","display","marginBottom","type","ResourceQuotaTableRow","actions","resourcesAtQuota","Object","keys","reduce","acc","dataTest","columnID","count","timestamp","creationTimestamp","AppliedClusterResourceQuotaTableRow","ResourceQuotasList","props","Header","title","sortField","transforms","id","Row","virtualize","AppliedClusterResourceQuotasList","quotaType","flatten","resources","data","ResourceQuotasPage","OPENSHIFT","flags","mock","showTitle","namespaced","rowFilters","push","optional","filterGroupName","reducer","items","labelPluralKey","createNS","model","canCreate","createAccessReview","createButtonText","createProps","to","ListComponent","AppliedClusterResourceQuotasPage","ResourceQuotasDetailsPage","menuActions","pages","details","editYaml","AppliedClusterResourceQuotasDetailsPage","getDisplayName","getFilters","requester","ME","USER","SYSTEM","hideIfEmpty","deleteModal","labelKind","weight","tooltip","callback","undefined","phase","content","nsMenuActions","Edit","fetchNamespaceMetrics","promises","query","url","then","result","value","Number","metric","Promise","all","catch","console","error","namespaceColumnInfo","freeze","classes","displayName","memory","cpu","created","NamespacesTableHeader","sortFunc","additional","NamespacesColumnManagementID","getNamespacesSelectedColumns","Set","column","NamespacesTableRow","tableColumns","metrics","UI","getIn","bytes","cores","columns","NamespacesNotFoundMessage","Icon","NamespacesEmptyMessage","NamespacesList","dispatch","updateMetrics","setInterval","clearInterval","selectedColumns","activeColumns","columnManagementID","EmptyMsg","NoDataEmptyMsg","NamespacesPage","createNamespaceModal","createHandler","columnLayout","projectMenuActions","projectColumnManagementID","projectTableHeader","showMetrics","showActions","ProjectLink","project","setLastNamespace","URL","window","location","URLSearchParams","search","basePath","pathname","has","delete","newUrl","toString","hash","namespacedPath","onClick","e","sessionStorage","setItem","projectHeaderWithoutActions","ProjectTableRow","ProjectLinkComponent","actionsEnabled","isColumnManagementEnabled","getProjectSelectedColumns","ProjectsTable","headerWithMetrics","headerNoMetrics","ProjectNotFoundMessage","canCreateNs","CAN_CREATE_NS","canCreateProject","CAN_CREATE_PROJECT","ProjectEmptyMessage","icon","ProjectList","tableProps","canGetNS","CAN_GET_NS","screen","width","ProjectsPage","createProjectModal","filterLabel","skipAccessReview","textFilter","PullSecret","isLoading","setIsLoading","setData","setError","canViewSecrets","serviceAccount","imagePullSecrets","err","modal","pullSecret","variant","isInline","secret","linkTo","NamespaceLineCharts","humanize","byteDataType","BinaryBytes","TopPodsBarChart","ResourceUsage","NamespaceSummary","serviceMeshEnabled","canListSecrets","showLabelEditor","NamespaceDetails","perspective","consoleLinks","isList","links","hideHeading","link","uid","RolesPage","createPath","NamespacesDetailsPage","roles","ProjectsDetailsPage","nameKey","component","workloads","POD_PHASE_GROUP_MAPPING","NOT_MAPPED","ERROR","PROGRESS","WARN","PVC_STATUS_GROUP_MAPPING","PV_STATUS_GROUP_MAPPING","NODE_STATUS_GROUP_MAPPING","VS_STATUS_GROUP_MAPPING","getStatusGroups","mapping","mapper","filterType","groups","UNKNOWN","statusIDs","forEach","find","includes","getPodStatusGroups","getNodeStatusGroups","getPVCStatusGroups","pvc","getPVStatusGroups","pv","getVSStatusGroups","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","DroppableFileInput","loader","c","API_PROXY_URL","convertHeaders","headers","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","onCancel","navigate","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","when","is","deploymentValidationSchema","replicas","transform","cv","min","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","request","requestUnit","limitUnit","ensure","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","abbr","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","associateServiceAccountToSecret","isImageSecret","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","ownerReferences","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","ProjectDashboardContext","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","mapDispatchToProps","watchURL","stopWatchURL","watchPrometheusQuery","stopWatchPrometheusQuery","mapStateToProps","dashboards","PROMETHEUS","notificationAlerts","observe","withDashboardResources","WrappedComponent","urls","queries","watchingAlerts","watchPrometheus","queryKey","q","watchAlerts","stopWatchAlerts","watchK8sResource","k8sResources","stopWatchK8sResource","getExternalProps","nextProps","nextState","urlResultChanged","urlKey","queryResultChanged","alertsResultChanged","k8sResourcesChanged","nextExternalProps","externalProps","urlResults","prometheusResults","genericCountResources","getUsedPercentage","usedNum","hardNum","parseInt","getLabelAndUsage","resourceName","useCount","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","element","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getNamespacedDynamicModelFactories","flattenedResource","resourceKey","opts","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","NodeType","EdgeType","KameletType","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","uniqueResource","ConsumerPopover","consumers","top","isOpen","setOpen","onShow","onHide","headerContent","bodyContent","PopoverBody","enableFlip","maxWidth","getLimitIcon","LimitsBody","limitState","requestedState","available","requested","OK","currentConsumer","setCurrentConsumer","activePerspective","canAccessMonitoring","SERVER_FLAGS","prometheusBaseURL","fieldSelector","k8sResource","getResourceToWatch","consumerData","consumerLoaded","consumersLoadError","top5Data","bodyData","consumer","monitoringParams","set","dropdownItems","onDropdownChange","monitoringURL","String","ListItem","toLowerCase","OperatorRow","operatorStatus","isResolved","Component","LoadingComponent","ResolvedComponent","operators","OperatorsPopup","operatorExtensions","dynamicOperatorSubsystems","sections","o","operatorResources","getOperatorsWithStatuses","viewAllLink","operatorRowLoader","reverse","hasGutter","OperatorHealthItem","healthStatuses","health","NOT_AVAILABLE","LOADING","operatorStatuses","importantStatuses","operatorsHealth","detailMessage","popupTitle","URLHealthItem","subsystem","modelExists","additionalResource","healthResult","healthResultError","k8sResult","healthState","healthHandler","popupBodyContent","popupComponent","hide","PrometheusHealthItem","infrastructure","queryResults","popupClassname","popupKeepOnOutsideClick","responses","ResourceHealthItem","resourcesWithNamespace","imageManifestVuln","resourcesResult","ProjectQueries","CPU_USAGE","CPU_REQUESTS","MEMORY_USAGE","MEMORY_REQUESTS","POD_COUNT","FILESYSTEM_USAGE","NETWORK_IN_UTILIZATION","NETWORK_OUT_UTILIZATION","top25Queries","PODS_BY_CPU","PODS_BY_MEMORY","PODS_BY_FILESYSTEM","PODS_BY_NETWORK_IN","PODS_BY_NETWORK_OUT","getMultilineQueries","NETWORK_UTILIZATION","desc","getUtilizationQueries","getTopConsumerQueries","OverviewQuery","PODS_BY_STORAGE","NODES_BY_CPU","NODES_BY_MEMORY","NODES_BY_STORAGE","NODES_BY_PODS","NODES_BY_NETWORK_IN","NODES_BY_NETWORK_OUT","PROJECTS_BY_CPU","PROJECTS_BY_MEMORY","PROJECTS_BY_STORAGE","PROJECTS_BY_PODS","PROJECTS_BY_NETWORK_IN","PROJECTS_BY_NETWORK_OUT","overviewQueries","MEMORY_TOTAL","MEMORY_UTILIZATION","CPU_UTILIZATION","CPU_TOTAL","STORAGE_UTILIZATION","STORAGE_TOTAL","POD_UTILIZATION","getTop25ConsumerQueries","utilization","thresholds","nsQuotas","clusterHard","clusterUsed","nsUsed","clusterUsage","nsUsage","DonutChart","ariaChartLinkLabel","ariaChartTitle","ariaDescription","usedLabel","secondaryTitle","usedLabelText","secondaryTitleText","labelText","namespaceData","datum","ariaTitle","ariaDesc","subTitle","colorScale","ClusterDashboardContext","infrastructureLoaded","infrastructureError","OperatorsSection","sortedOperatorStatuses","localeCompare","operatorsHealthy","RowLoading","firstColumn","operatorStatusLength","secondColumn","cvResource","DashboardAlerts","hasCVResource","CLUSTER_VERSION","cvLoaded","showClusterUpdate","StatusCard","k8sModels","k8s","subsystemExtensions","dynamicSubsystemExtensions","subsystems","filterSubsystems","popup","operatorSubsystemIndex","healthItems","disallowedControlPlaneTopology","controlPlaneTopology","operatorSubsystems","isClickable","isSelectable","hasNoOffset","CreateAProjectButton","openProjectModal","onCreate","setActiveNamespace","createNamespaceOrProjectModal","networkPopovers","PrometheusUtilizationItem","utilizationQuery","totalQuery","TopConsumerPopover","humanizeValue","limitQuery","requestQuery","setLimitReqState","utilizationError","totalError","limitError","requestError","PrometheusMultilineUtilizationItem","TopConsumerPopovers","stats","hasError","responseError","UtilizationCardNodeFilter","machineConfigPools","onNodeSelect","selectedNodes","setIsOpen","selectOptions","order","indexA","indexOf","indexB","mcp","mcpName","hasCheckbox","isSelected","role","onSelect","onOpenChange","open","toggle","toggleRef","isRead","UtilizationCard","machineConfigPoolsLoaded","setSelectedNodes","dynamicItemExtensions","dynamicMultilineItemExtensions","utilizationQueries","multilineQueries","selection","selectionUpdated","getUtilizationQuery","getTotalQuery","getRequestQuery","getLimitQuery","DEFAULT_THRESHOLDS","GaugeChart","invert","loading","remainderLabel","themeColor","green","ready","Gauge","QUERY","mainCards","Card","leftCards","rightCards","getNamespaceDashboardConsoleLinks","ProjectDashboard","namespaceLinks","context","hasNamespaceLinks","rc","badge","listComponent","listPageProps","OverviewListPageLoader","m","OverviewListPage","DetailsCard","labelsSubset","firstThreelabels","detailsLink","projectName","ClusterUtilizationContext","useConsumers","nsQuery","podQuery","nodeQuery","consumerQueries","CPUPopover","MemoryPopover","StoragePopover","PodPopover","NetworkInPopover","NetworkOutPopover","ProjectUtilizationContext","FilesystemPopover","ProjectInventoryItem","additionalResources","additionalDynamicResources","createFirehoseResource","resourceLoaded","resourceLoadError","additionalResourcesData","additionalResourcesLoaded","additionalResourcesLoadError","dynamicResources","dynamicResourcesError","dynamicResourcesLoaded","InventoryCard","itemExtensions","inventoryExtensions","RecentEvent","viewEvents","eventsResource","getEventsResource","moreLink","OngoingActivity","resourceActivityExtensions","dynamicResourceActivityExtensions","resourceActivities","allResourceActivities","isActivity","getTimestamp","resourcesLoaded","size","ActivityCard","LauncherCard","nl","consoleLink","additionalClassName","dataTestID","ResourceQuotaCard","quotas","rqLoaded","rqLoadError","groupVersionKind","clusterQuotas","acrqLoaded","acrqLoadError","noText","cq","isExpanded","setExpanded","isFilled","onToggle","_event","toggleContent","inline","truncate","getConditionOKCount","True","getConditionString","getConditionStats","OKcount","conditionsSize","getCondition","serverlessTab","usePodsForRevisions","revisionIds","setLoaded","setLoadError","setPods","replicaSets","updateResults","errorKey","revisionsPods","controller","getDisabledAddActions","addPage","disabledActions","useAddActionExtensions","allAddActionExtensions","resolved","allAddActionsDisabled","addActionExtension","selectResourcesForName","isReadOnly","hoverTip","clickTip","isAdminPerspective","breadcrumbs","breadcrumbsFor","customActionMenu","kindObjData","options","DROPDOWN","RouteDetails","isPrivateKSVC","hideEmpty","KnativeServiceTypeContext","service","hideSectionHeading","canSetTrafficDistribution","filteredRevisions","revWithTraffic","revWithoutTraffic","searchQuery","append","getRevisionsLink","revLength","revision","deploymentData","availableReplicas","standalone","innerRadius","outerRadius","titleComponent","fontSize","showTooltip","Function","filterValue","functionIndicator","revisionReference","serviceReference","readyCondition","Ready","lineClamp","ServiceDetails","revisionLoaded","revisionErrorLoad","podSelector","showNodeSelector","containers","FunctionsPods","showNamespaceOverride","serviceTypeValue","pageData","routeReference","hideIcon","successCount","failureCount","generation","knativeServingReference","telemetryPrefix","PageContentsWithStartGuide","light","CreateActionDropdown","activeNamespace","importfromGit","onSelection","functionsUsingSamples","menuAction","menuClassName","noSelection","actionName","selectedMenuItem","newNamespace","FunctionIcon","src","alt","sm","headingLevel","GettingStartedSection","isGettingStartedSectionOpen","setIsGettingStartedSectionOpen","toggleText","displaySize","marginLeft","featured","FunctionsDocsGettingStartedCard","external","titleColor","orderQuickStarts","allQuickStarts","allQuickStartStates","orderedQuickStarts","filteredQuickStarts","featuredQuickStartsByName","quickStartName","quickStart","COMPLETE","QuickStartGettingStartedCard","setActiveQuickStart","quickStarts","slicedQuickStarts","SampleGettingStartedCard","isSampleTypeEnabled","disabledAddActions","catalogId","slicedCatalogItems","allCatalogItems","orderedCatalogItems","ci","catalogItem","orderCatalogItems","typeLabel","cta"],"mappings":"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","file":"knative-plugin/code-refs/overviewComponent-chunk-6e6adfc9e85a673bf68f.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-circle-icon';\nimport { ResourcesAlmostEmptyIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-empty-icon';\nimport { ResourcesAlmostFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-full-icon';\nimport { ResourcesFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport { UnknownIcon } from '@patternfly/react-icons/dist/esm/icons/unknown-icon';\n\nimport { useTranslation } from 'react-i18next';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport ClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/ClusterResourceQuotaCharts';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { DetailsPage, MultiListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  SectionHeading,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  convertToBaseValue,\n  FieldLevelHelp,\n  useAccessReview,\n  LabelList,\n  Selector,\n  Timestamp,\n  DetailsItem,\n} from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { flagPending } from '../reducers/features';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport {\n  AppliedClusterResourceQuotaModel,\n  ResourceQuotaModel,\n  ClusterResourceQuotaModel,\n} from '../models';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\n\nconst { common } = Kebab.factory;\n\nconst resourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ResourceQuotaModel),\n  ...common,\n];\nconst clusterResourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  ...common,\n];\nconst appliedClusterResourceQuotaMenuActions = (namespace) => [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (kind, obj) => {\n    return {\n      // t('public~Edit AppliedClusterResourceQuota')\n      labelKey: 'public~Edit AppliedClusterResourceQuota',\n      href: `/k8s/ns/${namespace}/${referenceForModel(AppliedClusterResourceQuotaModel)}/${\n        obj.metadata.name\n      }/yaml`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace,\n        verb: 'update',\n      },\n    };\n  },\n  Kebab.factory.Delete,\n];\n\nconst isClusterQuota = (quota) => !quota.metadata.namespace;\n\nconst clusterQuotaReference = referenceForModel(ClusterResourceQuotaModel);\nconst appliedClusterQuotaReference = referenceForModel(AppliedClusterResourceQuotaModel);\n\nconst quotaActions = (quota, customData = undefined) => {\n  if (quota.metadata.namespace) {\n    return resourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'ClusterResourceQuota') {\n    return clusterResourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'AppliedClusterResourceQuota') {\n    return appliedClusterResourceQuotaMenuActions(customData.namespace);\n  }\n};\n\nexport const getQuotaResourceTypes = (quota) => {\n  const specHard = isClusterQuota(quota)\n    ? _.get(quota, 'spec.quota.hard')\n    : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nexport const getACRQResourceUsage = (quota, resourceType, namespace) => {\n  let used;\n  if (namespace) {\n    const allNamespaceData = quota.status?.namespaces;\n    const currentNamespaceData = allNamespaceData.filter((ns) => ns.namespace === namespace);\n    used = {\n      namespace: currentNamespaceData[0]?.status?.used[resourceType],\n      cluster: quota.status?.total?.used[resourceType],\n    };\n  } else {\n    used = { namespace: 0, cluster: quota.status?.total?.used[resourceType] };\n  }\n  const totalUsed = quota.status?.total?.used[resourceType];\n  const max = quota.status?.total?.hard[resourceType] || quota.spec?.quota?.hard[resourceType];\n  const percentNamespace =\n    !max || !used.namespace\n      ? 0\n      : (convertToBaseValue(used.namespace) / convertToBaseValue(max)) * 100;\n  const percentCluster =\n    !max || !used.cluster ? 0 : (convertToBaseValue(used.cluster) / convertToBaseValue(max)) * 100;\n  const percentOtherNamespaces = percentCluster - percentNamespace;\n\n  return {\n    used,\n    totalUsed,\n    max,\n    percent: {\n      namespace: percentNamespace,\n      otherNamespaces: percentOtherNamespaces,\n      unused: 100 - (percentNamespace + percentOtherNamespaces),\n    },\n  };\n};\n\nexport const getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max =\n    _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst acrqTableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType, namespace = undefined }) => {\n  const reference = referenceFor(quota);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  if (isACRQ) {\n    const { used, totalUsed, max, percent } = getACRQResourceUsage(quota, resourceType, namespace);\n    return (\n      <div className=\"row co-m-row\">\n        <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n        <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n          <UsageIcon percent={percent.namespace} />\n        </div>\n        <div className=\"col-sm-2 col-xs-2\">{used.namespace}</div>\n        <div className=\"col-sm-2 col-xs-2\">{totalUsed}</div>\n        <div className=\"col-sm-2 col-xs-2\">{max}</div>\n      </div>\n    );\n  }\n\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes }) => {\n  return <span>({scopes.join(', ')})</span>;\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  const { t } = useTranslation();\n  const quotaScopes = {\n    Terminating: {\n      description: t(\n        'public~Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n      ),\n    },\n    NotTerminating: {\n      description: t(\n        'public~Affects pods that do not have an active deadline. These pods usually include your applications.',\n      ),\n    },\n    BestEffort: {\n      description: t(\n        'public~Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n      ),\n    },\n    NotBestEffort: {\n      description: t(\n        'public~Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n      ),\n    },\n  };\n  return scopes.map((scope) => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scope}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = (resourceTypes) => {\n  const chartResourceTypes = [\n    'requests.cpu',\n    'cpu',\n    'limits.cpu',\n    'requests.memory',\n    'memory',\n    'limits.memory',\n  ];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const scopes = rq.spec?.scopes ?? rq.spec?.quota?.scopes;\n  const reference = referenceFor(rq);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  const namespace = params?.ns;\n  let text;\n  let charts;\n  switch (reference) {\n    case appliedClusterQuotaReference:\n      text = t('public~AppliedClusterResourceQuota details');\n      charts = (\n        <AppliedClusterResourceQuotaCharts appliedClusterResourceQuota={rq} namespace={namespace} />\n      );\n      break;\n    case clusterQuotaReference:\n      text = t('public~ClusterResourceQuota details');\n      charts = <ClusterResourceQuotaCharts clusterResourceQuota={rq} />;\n      break;\n    default:\n      text = t('public~ResourceQuota details');\n      charts = <ResourceQuotaCharts resourceQuota={rq} />;\n  }\n  const canListCRQ = useAccessReview({\n    group: ClusterResourceQuotaModel.apiGroup,\n    resource: ClusterResourceQuotaModel.plural,\n    verb: 'list',\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} />\n        {charts}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq}>\n              {canListCRQ && (\n                <DetailsItem\n                  label={t('public~ClusterResourceQuota')}\n                  obj={rq}\n                  path=\"rq.metadata.name\"\n                >\n                  <ResourceLink kind={clusterQuotaReference} name={rq.metadata.name} />\n                </DetailsItem>\n              )}\n              <DetailsItem\n                label={t('public~Label selector')}\n                obj={rq}\n                path=\"spec.selector.labels.matchLabels\"\n              >\n                <LabelList\n                  kind={appliedClusterQuotaReference}\n                  labels={rq.spec?.selector?.labels?.matchLabels}\n                />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Project annotations')}\n                obj={rq}\n                path=\"spec.selector.annotations\"\n              >\n                <Selector selector={rq.spec?.selector?.annotations} namespace={namespace} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('public~Scopes')}</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>\n              {t(\n                'public~Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~A cluster administrator can establish limits on both the amount you can request and your limits with a ResourceQuota.',\n              )}\n            </p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('public~Resource type')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('public~Capacity')}</div>\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Used')}\n            </div>\n            {isACRQ && <div className=\"col-sm-2 col-xs-2\">{t('public~Total used')}</div>}\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Max')}\n            </div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map((type) => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} namespace={namespace} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  let resourcesAtQuota;\n  if (rq.kind === ResourceQuotaModel.kind) {\n    resourcesAtQuota = Object.keys(rq?.status?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.hard[resource], rq?.status?.used?.[resource]) >= 100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  } else {\n    resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n        100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  }\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceFor(rq)}\n          name={rq.metadata.name}\n          namespace={\n            referenceFor(rq) === appliedClusterQuotaReference\n              ? customData.namespace\n              : rq.metadata.namespace\n          }\n          className=\"co-resource-item__resource-name\"\n          dataTest=\"resource-quota-link\"\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        {rq.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} />\n        ) : (\n          t('public~None')\n        )}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={referenceFor(rq)}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst AppliedClusterResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  const resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n    (acc, resource) =>\n      getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n      100\n        ? acc + 1\n        : acc,\n    0,\n  );\n  return (\n    <>\n      <TableData className={acrqTableColumnClasses[0]}>\n        <ResourceLink\n          kind={appliedClusterQuotaReference}\n          name={rq.metadata.name}\n          namespace={customData.namespace}\n          className=\"co-resource-item__resource-name\"\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[1], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[2], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[3], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={acrqTableColumnClasses[4]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={acrqTableColumnClasses[5]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={appliedClusterQuotaReference}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const ResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: tableColumnClasses[4] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[6] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ResourceQuotas')}\n      Header={ResourceQuotaTableHeader}\n      Row={ResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const AppliedClusterResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[0] },\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[1] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[2] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: acrqTableColumnClasses[3] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: acrqTableColumnClasses[5] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~AppliedClusterResourceQuotas')}\n      Header={AppliedClusterResourceQuotaTableHeader}\n      Row={AppliedClusterResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const quotaType = (quota) => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = (resources) => _.flatMap(resources, (resource) => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(\n  ({ namespace, flags, mock, showTitle }) => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters = null;\n\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n      return <LoadingBox />;\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n      if (!namespace) {\n        resources.push({\n          kind: referenceForModel(ClusterResourceQuotaModel),\n          namespaced: false,\n          optional: true,\n        });\n      } else {\n        resources.push({\n          kind: referenceForModel(AppliedClusterResourceQuotaModel),\n          namespaced: true,\n          namespace,\n          optional: true,\n        });\n      }\n\n      rowFilters = [\n        {\n          filterGroupName: t('public~Role'),\n          type: 'role-kind',\n          reducer: quotaType,\n          items: [\n            {\n              id: 'cluster',\n              title: t('public~Cluster-wide {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n            {\n              id: 'namespace',\n              title: t('public~Namespace {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n          ],\n        },\n      ];\n    }\n    const createNS = namespace || 'default';\n    const accessReview = {\n      model: ResourceQuotaModel,\n      namespace: createNS,\n    };\n    return (\n      <MultiListPage\n        canCreate={true}\n        createAccessReview={accessReview}\n        createButtonText={t('public~Create ResourceQuota')}\n        createProps={{ to: `/k8s/ns/${createNS}/resourcequotas/~new` }}\n        ListComponent={ResourceQuotasList}\n        resources={resources}\n        label={t(ResourceQuotaModel.labelPluralKey)}\n        namespace={namespace}\n        flatten={flatten}\n        title={t(ResourceQuotaModel.labelPluralKey)}\n        rowFilters={rowFilters}\n        mock={mock}\n        showTitle={showTitle}\n      />\n    );\n  },\n);\n\nexport const AppliedClusterResourceQuotasPage = ({ namespace, mock, showTitle }) => {\n  const { t } = useTranslation();\n  const resources = [\n    {\n      kind: referenceForModel(AppliedClusterResourceQuotaModel),\n      namespaced: true,\n      namespace,\n      optional: true,\n    },\n  ];\n\n  return (\n    <MultiListPage\n      ListComponent={AppliedClusterResourceQuotasList}\n      resources={resources}\n      label={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      namespace={namespace}\n      flatten={flatten}\n      title={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      mock={mock}\n      showTitle={showTitle}\n    />\n  );\n};\n\nexport const ResourceQuotasDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={resourceQuotaMenuActions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasDetailsPage = (props) => {\n  const params = useParams();\n  const actions = appliedClusterResourceQuotaMenuActions(params?.ns);\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={actions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert, Button, Tooltip } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Status,\n  getRequester,\n  getDescription,\n  FLAGS,\n  GreenCheckCircleIcon,\n  getName,\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  isModifiedEvent,\n  REQUESTER_FILTER,\n  useFlag,\n  usePrometheusGate,\n} from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport * as k8sActions from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  ConsoleLinkModel,\n  NamespaceModel,\n  ProjectModel,\n  SecretModel,\n  ServiceAccountModel,\n} from '../models';\nimport { coFetchJSON } from '../co-fetch';\nimport { k8sGet, referenceForModel } from '../module/k8s';\nimport * as UIActions from '../actions/ui';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  DetailsItem,\n  ExternalLink,\n  Kebab,\n  LabelList,\n  LoadingInline,\n  ConsoleEmptyState,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  formatBytesAsMiB,\n  formatCores,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  navFactory,\n  useAccessReview,\n} from './utils';\nimport { deleteNamespaceModal, configureNamespacePullSecretModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { Bar, Area, PROMETHEUS_BASE_PATH } from './graphs';\nimport { flagPending } from '../reducers/features';\nimport { OpenShiftGettingStarted } from './start-guide';\nimport { OverviewListPage } from './overview';\nimport {\n  getNamespaceDashboardConsoleLinks,\n  ProjectDashboard,\n} from './dashboard/project-dashboard/project-dashboard';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport {\n  isCurrentUser,\n  isOtherUser,\n  isSystemNamespace,\n} from '@console/shared/src/components/namespace';\nimport { useCreateNamespaceModal } from '@console/shared/src/hooks/useCreateNamespaceModal';\nimport { useCreateProjectModal } from '@console/shared/src/hooks/useCreateProjectModal';\n\nconst getDisplayName = (obj) =>\n  _.get(obj, ['metadata', 'annotations', 'openshift.io/display-name']);\n\n// KKD CHECK TO SEE THAT ITEMS CHANGE WHEN LANGUAGE CHANGES\nconst getFilters = () => [\n  {\n    filterGroupName: i18next.t('public~Requester'),\n    type: 'requester',\n    reducer: (namespace) => {\n      const name = namespace.metadata?.name;\n      const requester = namespace.metadata?.annotations?.['openshift.io/requester'];\n      if (isCurrentUser(requester)) {\n        return REQUESTER_FILTER.ME;\n      }\n      if (isOtherUser(requester, name)) {\n        return REQUESTER_FILTER.USER;\n      }\n      if (isSystemNamespace({ title: name })) {\n        return REQUESTER_FILTER.SYSTEM;\n      }\n    },\n    items: [\n      { id: REQUESTER_FILTER.ME, title: i18next.t('public~Me') },\n      { id: REQUESTER_FILTER.USER, title: i18next.t('public~User') },\n      { id: REQUESTER_FILTER.SYSTEM, title: i18next.t('public~System'), hideIfEmpty: true },\n    ],\n  },\n];\n\nexport const deleteModal = (kind, ns) => {\n  const { labelKey, labelKind, weight, accessReview } = Kebab.factory.Delete(kind, ns);\n  let callback = undefined;\n  let tooltip;\n  let label;\n\n  if (ns.metadata.name === 'default') {\n    tooltip = `${kind.label} default cannot be deleted`;\n  } else if (ns.status?.phase === 'Terminating') {\n    tooltip = `${kind.label} is already terminating`;\n  } else {\n    callback = () => deleteNamespaceModal({ kind, resource: ns });\n  }\n  if (tooltip) {\n    label = (\n      <div className=\"dropdown__disabled\">\n        <Tooltip content={tooltip}>\n          <span>{i18next.t(labelKey, labelKind)}</span>\n        </Tooltip>\n      </div>\n    );\n  }\n  return { label, labelKey, labelKind, weight, callback, accessReview };\n};\n\nconst nsMenuActions = [\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  Kebab.factory.Edit,\n  deleteModal,\n];\n\nconst fetchNamespaceMetrics = () => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: 'sum by(namespace) (container_memory_working_set_bytes{container=\"\",pod!=\"\"})',\n    },\n    {\n      key: 'cpu',\n      query: 'namespace:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(({ key, query }) => {\n    const url = `${PROMETHEUS_BASE_PATH}/api/v1/query?&query=${query}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      return result.reduce((acc, data) => {\n        const value = Number(data.value[1]);\n        return _.set(acc, [key, data.metric.namespace], value);\n      }, {});\n    });\n  });\n  return (\n    Promise.all(promises)\n      .then((data) => _.assign({}, ...data))\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n\nconst namespaceColumnInfo = Object.freeze({\n  name: {\n    classes: '',\n    id: 'name',\n  },\n  displayName: {\n    classes: 'co-break-word',\n    id: 'displayName',\n  },\n  status: {\n    classes: '',\n    id: 'status',\n  },\n  requester: {\n    classes: '',\n    id: 'requester',\n  },\n  memory: {\n    classes: '',\n    id: 'memory',\n  },\n  cpu: {\n    classes: '',\n    id: 'cpu',\n  },\n  created: {\n    classes: '',\n    id: 'created',\n  },\n  description: {\n    classes: '',\n    id: 'description',\n  },\n  labels: {\n    classes: '',\n    id: 'labels',\n  },\n});\n\nconst NamespacesTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    {\n      title: i18next.t('public~Memory'),\n      id: namespaceColumnInfo.memory.id,\n      sortFunc: 'namespaceMemory',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.memory.classes },\n    },\n    {\n      title: i18next.t('public~CPU'),\n      id: namespaceColumnInfo.cpu.id,\n      sortFunc: 'namespaceCPU',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.cpu.classes },\n    },\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    { title: '', props: { className: Kebab.columnClass } },\n  ];\n};\nNamespacesTableHeader.displayName = 'NamespacesTableHeader';\n\nconst NamespacesColumnManagementID = referenceForModel(NamespaceModel);\n\nconst getNamespacesSelectedColumns = () => {\n  return new Set(\n    NamespacesTableHeader().reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst NamespacesTableRow = ({ obj: ns, customData: { tableColumns } }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(ns);\n  const requester = getRequester(ns);\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(ns);\n  const labels = ns.metadata.labels;\n  const columns = tableColumns?.length > 0 ? new Set(tableColumns) : getNamespacesSelectedColumns();\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        <ResourceLink kind=\"Namespace\" name={ns.metadata.name} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(ns) || <span className=\"text-muted\">{t('public~No display name')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.status.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={ns.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.memory.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.memory.id}\n      >\n        {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.cpu.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.cpu.id}\n      >\n        {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={ns.metadata.creationTimestamp} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.description.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.description.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.labels.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.labels.id}\n      >\n        <LabelList kind=\"Namespace\" labels={labels} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab actions={nsMenuActions} kind=\"Namespace\" resource={ns} />\n      </TableData>\n    </>\n  );\n};\n\nconst NamespacesNotFoundMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No Namespaces found')} Icon={SearchIcon}>\n      {t('public~No results were found for the requested Namespaces.')}\n    </ConsoleEmptyState>\n  );\n};\n\nconst NamespacesEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Namespaces')} Icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const NamespacesList = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    const updateMetrics = () =>\n      fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n    updateMetrics();\n    const id = setInterval(updateMetrics, 30 * 1000);\n    return () => clearInterval(id);\n  }, [dispatch]);\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : null;\n\n  const customData = React.useMemo(\n    () => ({\n      tableColumns: tableColumns?.[NamespacesColumnManagementID],\n    }),\n    [tableColumns],\n  );\n\n  return (\n    <Table\n      {...props}\n      activeColumns={selectedColumns}\n      columnManagementID={NamespacesColumnManagementID}\n      aria-label={t('public~Namespaces')}\n      Header={NamespacesTableHeader}\n      Row={NamespacesTableRow}\n      customData={customData}\n      virtualize\n      EmptyMsg={NamespacesEmptyMessage}\n      NoDataEmptyMsg={NamespacesNotFoundMessage}\n    />\n  );\n};\n\nexport const NamespacesPage = (props) => {\n  const { t } = useTranslation();\n  const createNamespaceModal = useCreateNamespaceModal();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : getNamespacesSelectedColumns();\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={NamespacesList}\n      canCreate={true}\n      createHandler={() => createNamespaceModal()}\n      columnLayout={{\n        columns: NamespacesTableHeader(null, t).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: NamespacesColumnManagementID,\n        selectedColumns,\n        type: t('public~Namespaces'),\n      }}\n    />\n  );\n};\n\nexport const projectMenuActions = [Kebab.factory.Edit, deleteModal];\n\nconst projectColumnManagementID = referenceForModel(ProjectModel);\n\nconst projectTableHeader = ({ showMetrics, showActions }) => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    ...(showMetrics\n      ? [\n          {\n            title: i18next.t('public~Memory'),\n            id: namespaceColumnInfo.memory.id,\n            sortFunc: 'namespaceMemory',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.memory.classes },\n          },\n          {\n            title: i18next.t('public~CPU'),\n            id: namespaceColumnInfo.cpu.id,\n            sortFunc: 'namespaceCPU',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.cpu.classes },\n          },\n        ]\n      : []),\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    ...(showActions ? [{ title: '', props: { className: Kebab.columnClass } }] : []),\n  ];\n};\n\nconst getProjectSelectedColumns = ({ showMetrics, showActions }) => {\n  return new Set(\n    projectTableHeader({ showMetrics, showActions }).reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst ProjectLink = ({ project }) => {\n  const dispatch = useDispatch();\n  const [, setLastNamespace] = useUserSettingsCompatibility(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.search);\n  const basePath = url.pathname;\n  if (params.has('project-name')) {\n    // clear project-name query param from the url\n    params.delete('project-name');\n  }\n  const newUrl = {\n    search: `?${params.toString()}`,\n    hash: url.hash,\n  };\n  const namespacedPath = UIActions.formatNamespaceRoute(project.metadata.name, basePath, newUrl);\n\n  const handleClick = (e) => {\n    // Don't set last namespace if its modified click (Ctrl+Click).\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    setLastNamespace(project.metadata.name);\n    // update last namespace in session storage (persisted only for current browser tab). Used to remember/restore if\n    // \"All Projects\" was selected when returning to the list view (typically from details view) via breadcrumb or\n    // sidebar navigation\n    sessionStorage.setItem(LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY, project.metadata.name);\n    // clear project-name filter when active namespace is changed\n    dispatch(k8sActions.filterList(referenceForModel(ProjectModel), 'project-name', ''));\n  };\n\n  return (\n    <span className=\"co-resource-item co-resource-item--truncate\">\n      <ResourceIcon kind=\"Project\" />\n      <Link to={namespacedPath} className=\"co-resource-item__resource-name\" onClick={handleClick}>\n        {project.metadata.name}\n      </Link>\n    </span>\n  );\n};\nconst projectHeaderWithoutActions = () =>\n  projectTableHeader({ showMetrics: false, showActions: false });\n\nconst ProjectTableRow = ({ obj: project, customData = {} }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(project);\n  const requester = getRequester(project);\n  const {\n    ProjectLinkComponent,\n    actionsEnabled = true,\n    showMetrics,\n    showActions,\n    isColumnManagementEnabled = true,\n    tableColumns,\n  } = customData;\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(project);\n  const labels = project.metadata.labels;\n  const columns = isColumnManagementEnabled\n    ? tableColumns?.length > 0\n      ? new Set(tableColumns)\n      : getProjectSelectedColumns({ showMetrics, showActions })\n    : null;\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        {customData && ProjectLinkComponent ? (\n          <ProjectLinkComponent project={project} />\n        ) : (\n          <span className=\"co-resource-item\">\n            <ResourceLink kind=\"Project\" name={project.metadata.name} />\n          </span>\n        )}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(project) || (\n            <span className=\"text-muted\">{t('public~No display name')}</span>\n          )}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.status.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={project.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      {showMetrics && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.memory.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.memory.id}\n          >\n            {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.cpu.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.cpu.id}\n          >\n            {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n          </TableData>\n        </>\n      )}\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={project.metadata.creationTimestamp} />\n      </TableData>\n      {isColumnManagementEnabled && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.description.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.description.id}\n          >\n            <span className=\"co-break-word co-line-clamp\">\n              {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n            </span>\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.labels.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.labels.id}\n          >\n            <LabelList labels={labels} kind=\"Project\" />\n          </TableData>\n        </>\n      )}\n      {actionsEnabled && (\n        <TableData className={Kebab.columnClass}>\n          <ResourceKebab actions={projectMenuActions} kind=\"Project\" resource={project} />\n        </TableData>\n      )}\n    </>\n  );\n};\nProjectTableRow.displayName = 'ProjectTableRow';\n\nexport const ProjectsTable = (props) => {\n  const { t } = useTranslation();\n  const customData = React.useMemo(\n    () => ({\n      ProjectLinkComponent: ProjectLink,\n      actionsEnabled: false,\n      isColumnManagementEnabled: false,\n    }),\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Projects')}\n      Header={projectHeaderWithoutActions}\n      Row={ProjectTableRow}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nconst headerWithMetrics = () => projectTableHeader({ showMetrics: true, showActions: true });\nconst headerNoMetrics = () => projectTableHeader({ showMetrics: false, showActions: true });\n\nconst ProjectNotFoundMessage = () => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const canCreate = canCreateNs || canCreateProject;\n  return (\n    <ConsoleEmptyState title={t('public~Welcome to OpenShift')}>\n      <OpenShiftGettingStarted canCreate={canCreate} />\n    </ConsoleEmptyState>\n  );\n};\n\nconst ProjectEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Projects')} icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const ProjectList = ({ data, ...tableProps }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const customData = React.useMemo(\n    () => ({\n      showMetrics,\n      tableColumns: tableColumns?.[projectColumnManagementID],\n    }),\n    [showMetrics, tableColumns],\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [dispatch, showMetrics]);\n  const selectedColumns =\n    tableColumns?.[projectColumnManagementID]?.length > 0\n      ? new Set(tableColumns[projectColumnManagementID])\n      : null;\n\n  // Don't render the table until we know whether we can get metrics. It's\n  // not possible to change the table headers once the component is mounted.\n  if (flagPending(canGetNS)) {\n    return null;\n  }\n\n  return (\n    <Table\n      {...tableProps}\n      activeColumns={selectedColumns}\n      columnManagementID={projectColumnManagementID}\n      aria-label={t('public~Projects')}\n      data={data}\n      Header={showMetrics ? headerWithMetrics : headerNoMetrics}\n      Row={ProjectTableRow}\n      NoDataEmptyMsg={ProjectNotFoundMessage}\n      EmptyMsg={ProjectEmptyMessage}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nexport const ProjectsPage = (props) => {\n  const { t } = useTranslation();\n  const createProjectModal = useCreateProjectModal();\n  // Skip self-subject access review for projects since they use a special project request API.\n  // `FLAGS.CAN_CREATE_PROJECT` determines if the user can create projects.\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const showActions = showMetrics;\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={ProjectList}\n      canCreate={canCreateProject}\n      createHandler={() => createProjectModal()}\n      filterLabel={t('public~by name or display name')}\n      skipAccessReview\n      textFilter=\"project-name\"\n      kind=\"Project\"\n      columnLayout={{\n        columns: projectTableHeader({ showMetrics, showActions }).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: projectColumnManagementID,\n        selectedColumns:\n          tableColumns?.[projectColumnManagementID]?.length > 0\n            ? new Set(tableColumns[projectColumnManagementID])\n            : null,\n        type: t('public~Project'),\n      }}\n    />\n  );\n};\n\n/** @type {React.SFC<{namespace: K8sResourceKind}>} */\nexport const PullSecret = (props) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n  const { t } = useTranslation();\n  const { namespace, canViewSecrets } = props;\n\n  React.useEffect(() => {\n    k8sGet(ServiceAccountModel, 'default', namespace.metadata.name, {})\n      .then((serviceAccount) => {\n        setIsLoading(false);\n        setData(serviceAccount.imagePullSecrets ?? []);\n        setError(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setData([]);\n        setError(true);\n        // eslint-disable-next-line no-console\n        console.error('Error getting default ServiceAccount', err);\n      });\n  }, [namespace.metadata.name]);\n\n  const modal = () => configureNamespacePullSecretModal({ namespace, pullSecret: undefined });\n\n  const secrets = () => {\n    if (error) {\n      return <Alert variant=\"danger\" isInline title={t('Error loading default pull Secrets')} />;\n    }\n    return data.length > 0 ? (\n      data.map((secret) => (\n        <div key={secret.name}>\n          <ResourceLink\n            kind=\"Secret\"\n            name={secret.name}\n            namespace={namespace.metadata.name}\n            linkTo={canViewSecrets}\n          />\n        </div>\n      ))\n    ) : (\n      <Button variant=\"link\" type=\"button\" isInline onClick={modal}>\n        {t('public~Not configured')}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <dt>{t('public~Default pull Secret', { count: data.length })}</dt>\n      <dd>{isLoading ? <LoadingInline /> : secrets()}</dd>\n    </>\n  );\n};\n\nexport const NamespaceLineCharts = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~CPU usage')}\n          humanize={humanizeCpuCores}\n          namespace={ns.metadata.name}\n          query={`namespace:container_cpu_usage:sum{namespace='${ns.metadata.name}'}`}\n        />\n      </div>\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~Memory usage')}\n          humanize={humanizeBinaryBytes}\n          byteDataType={ByteDataTypes.BinaryBytes}\n          namespace={ns.metadata.name}\n          query={`sum by(namespace) (container_memory_working_set_bytes{namespace=\"${ns.metadata.name}\",container=\"\",pod!=\"\"})`}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TopPodsBarChart = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <Bar\n      title={t('public~Memory usage by pod (top 10)')}\n      namespace={ns.metadata.name}\n      query={`sort_desc(topk(10, sum by (pod)(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace=\"${ns.metadata.name}\"})))`}\n      humanize={humanizeBinaryBytes}\n      metric=\"pod\"\n    />\n  );\n};\n\nconst ResourceUsage = ({ ns }) => {\n  const { t } = useTranslation();\n  const isPrometheusAvailable = usePrometheusGate();\n  return isPrometheusAvailable ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('public~Resource usage')} />\n      <NamespaceLineCharts ns={ns} />\n      <TopPodsBarChart ns={ns} />\n    </div>\n  ) : null;\n};\n\nexport const NamespaceSummary = ({ ns }) => {\n  const { t } = useTranslation();\n  const displayName = getDisplayName(ns);\n  const description = getDescription(ns);\n  const requester = getRequester(ns);\n  const serviceMeshEnabled = ns.metadata?.labels?.['maistra.io/member-of'];\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'patch',\n    namespace: ns.metadata.name,\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-12\">\n        {/* Labels aren't editable on kind Project, only Namespace. */}\n        <ResourceSummary resource={ns} showLabelEditor={ns.kind === 'Namespace'}>\n          <dt>{t('public~Display name')}</dt>\n          <dd\n            className={classNames({\n              'text-muted': !displayName,\n            })}\n          >\n            {displayName || t('public~No display name')}\n          </dd>\n          <dt>{t('public~Description')}</dt>\n          <dd>\n            <p\n              className={classNames({\n                'text-muted': !description,\n                'co-pre-wrap': description,\n                'co-namespace-summary__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </p>\n          </dd>\n          {requester && <dt>Requester</dt>}\n          {requester && <dd>{requester}</dd>}\n        </ResourceSummary>\n      </div>\n      <div className=\"col-sm-6 col-xs-12\">\n        <dl className=\"co-m-pane__details\">\n          <DetailsItem label={t('public~Status')} obj={ns} path=\"status.phase\">\n            <Status status={ns.status?.phase} />\n          </DetailsItem>\n          <PullSecret namespace={ns} canViewSecrets={canListSecrets} />\n          <dt>{t('public~NetworkPolicies')}</dt>\n          <dd>\n            <Link to={`/k8s/ns/${ns.metadata.name}/networkpolicies`}>\n              {t('public~NetworkPolicies')}\n            </Link>\n          </dd>\n          {serviceMeshEnabled && (\n            <>\n              <dt>{t('public~Service mesh')}</dt>\n              <dd>\n                <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n              </dd>\n            </>\n          )}\n        </dl>\n      </div>\n    </div>\n  );\n};\n\nexport const NamespaceDetails = ({ obj: ns, customData }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const links = getNamespaceDashboardConsoleLinks(ns, consoleLinks);\n  return (\n    <div>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project details')}</title>\n        </Helmet>\n      )}\n      <div className=\"co-m-pane__body\">\n        {!customData?.hideHeading && (\n          <SectionHeading text={t('public~{{kind}} details', { kind: ns.kind })} />\n        )}\n        <NamespaceSummary ns={ns} />\n      </div>\n      {ns.kind === 'Namespace' && <ResourceUsage ns={ns} />}\n      {!_.isEmpty(links) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Launcher')} />\n          <ul className=\"pf-v5-c-list pf-m-plain\">\n            {_.map(_.sortBy(links, 'spec.text'), (link) => {\n              return (\n                <li key={link.metadata.uid}>\n                  <ExternalLink href={link.spec.href} text={link.spec.text} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RolesPage = ({ obj: { metadata } }) => {\n  return (\n    <RoleBindingsPage\n      createPath={`/k8s/ns/${metadata.name}/rolebindings/~new`}\n      namespace={metadata.name}\n      showTitle={false}\n    />\n  );\n};\n\nexport const NamespacesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={nsMenuActions}\n    pages={[\n      navFactory.details(NamespaceDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RolesPage),\n    ]}\n  />\n);\n\nexport const ProjectsDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={projectMenuActions}\n      pages={[\n        {\n          href: '',\n          // t('public~Overview')\n          nameKey: 'public~Overview',\n          component: ProjectDashboard,\n        },\n        {\n          href: 'details',\n          // t('public~Details')\n          nameKey: 'public~Details',\n          component: NamespaceDetails,\n        },\n        navFactory.editYaml(),\n        navFactory.workloads(OverviewListPage),\n        navFactory.roles(RolesPage),\n      ]}\n    />\n  );\n};\n","export { default as KnativeServingDetailsPage } from './KnativeServingDetailsPage';\nexport { default as ServingListPage } from './serving-list/ServingListsPage';\nexport { default as FunctionsPage } from '../functions/FunctionsPage';\nexport { default as FunctionDetailsPage } from '../functions/FunctionDetailsPage';\n","import { nodeStatus } from '@console/app/src/status/node';\nimport { volumeSnapshotStatus } from '@console/app/src/status/snapshot';\nimport { podPhaseFilterReducer } from '@console/internal/module/k8s';\nimport { StatusGroupMapper } from './InventoryItem';\nimport { InventoryStatusGroup } from './status-group';\n\nconst POD_PHASE_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Running', 'Succeeded'],\n  [InventoryStatusGroup.ERROR]: ['CrashLoopBackOff', 'Failed'],\n  [InventoryStatusGroup.PROGRESS]: ['Terminating', 'Pending'],\n  [InventoryStatusGroup.WARN]: ['Unknown'],\n};\n\nconst PVC_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Bound'],\n  [InventoryStatusGroup.ERROR]: ['Lost'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n};\n\nconst PV_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Available', 'Bound'],\n  [InventoryStatusGroup.PROGRESS]: ['Released'],\n  [InventoryStatusGroup.ERROR]: ['Failed'],\n};\n\nconst NODE_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n};\n\nconst VS_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n  [InventoryStatusGroup.ERROR]: ['Error'],\n};\n\nexport const getStatusGroups = (resources, mapping, mapper, filterType) => {\n  const groups = {\n    [InventoryStatusGroup.UNKNOWN]: {\n      statusIDs: [],\n      count: 0,\n    },\n  };\n  Object.keys(mapping).forEach((key) => {\n    groups[key] = {\n      statusIDs: [...mapping[key]],\n      count: 0,\n      filterType,\n    };\n  });\n\n  resources.forEach((resource) => {\n    const status = mapper(resource);\n    const group =\n      Object.keys(mapping).find((key) => mapping[key].includes(status)) ||\n      InventoryStatusGroup.UNKNOWN;\n    groups[group].count++;\n  });\n\n  return groups;\n};\n\nexport const getPodStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, POD_PHASE_GROUP_MAPPING, podPhaseFilterReducer, 'pod-status');\nexport const getNodeStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, NODE_STATUS_GROUP_MAPPING, nodeStatus, 'node-status');\nexport const getPVCStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PVC_STATUS_GROUP_MAPPING, (pvc) => pvc.status.phase, 'pvc-status');\nexport const getPVStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PV_STATUS_GROUP_MAPPING, (pv) => pv.status.phase, 'pv-status');\nexport const getVSStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, VS_STATUS_GROUP_MAPPING, volumeSnapshotStatus, 'snapshot-status');\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export { default as RevisionsPage } from './RevisionsPage';\nexport { default as RevisionDetailsPage } from './RevisionDetailsPage';\n","export { default as RouteDetailsPage } from './RouteDetailsPage';\nexport { default as RoutesPage } from './RoutesPage';\n","export { default as ServiceDetailsPage } from './ServiceDetailsPage';\nexport { default as ServicesPage } from './ServicesPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../module/k8s';\n\nexport const ProjectDashboardContext = React.createContext<ProjectDashboardContext>({});\n\n// eslint-disable-next-line no-redeclare\ntype ProjectDashboardContext = {\n  obj?: K8sResourceKind;\n  namespaceLinks?: K8sResourceKind[];\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/observe';\nimport {\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind, AppliedClusterResourceQuotaKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\nimport { Fetch, RequestMap } from '@console/dynamic-plugin-sdk/src/api/internal-types';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.observe.get('notificationAlerts'),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]:\n      | FirehoseResult\n      | FirehoseResult<K8sResourceKind>\n      | FirehoseResult<AppliedClusterResourceQuotaKind>;\n  };\n};\n","import { convertToBaseValue, humanizePercentage } from '@console/internal/components/utils';\n\nconst genericCountResources = [\n  'configmaps',\n  'persistentvolumeclaims',\n  'pods',\n  'replicationcontrollers',\n  'resourcequotas',\n  'services',\n  'services.loadbalancers',\n  'services.nodeports',\n  'secrets',\n  'openshift.io/imagestreams',\n];\n\nexport const getUsedPercentage = (hard: string, used: string) => {\n  let usedNum = convertToBaseValue(used);\n  let hardNum = convertToBaseValue(hard);\n\n  if (!usedNum || !hardNum) {\n    // try to get the value without unit\n    usedNum = parseInt(usedNum, 10);\n    hardNum = parseInt(hardNum, 10);\n  }\n\n  return !usedNum || !hardNum ? 0 : (usedNum / hardNum) * 100;\n};\n\nexport const getLabelAndUsage = ({\n  resourceName,\n  used,\n  hard,\n}: {\n  resourceName: string;\n  used: string;\n  hard: string;\n}) => {\n  const useCount =\n    resourceName.startsWith('count/') || genericCountResources.includes(resourceName);\n\n  const percent = getUsedPercentage(hard, used);\n\n  return {\n    label: useCount ? `${used || 0} of ${hard}` : humanizePercentage(percent).string,\n    percent,\n  };\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { FirehoseResource } from '../../../utils';\n\nexport const uniqueResource = (\n  resource: FirehoseResource,\n  prefix: string | number,\n): FirehoseResource => ({\n  ...resource,\n  prop: `${prefix}-${resource.prop}`,\n});\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useActivePerspective, LIMIT_STATE, Humanize } from '@console/dynamic-plugin-sdk';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getName, getNamespace, useFlag } from '../../..';\nimport { FLAGS } from '../../../constants';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({\n    current,\n    title,\n    humanize,\n    consumers,\n    namespace,\n    position = PopoverPosition.top,\n    description,\n    children,\n  }) => {\n    const { t } = useTranslation();\n    const [isOpen, setOpen] = React.useState(false);\n    const onShow = React.useCallback(() => setOpen(true), []);\n    const onHide = React.useCallback(() => setOpen(false), []);\n    if (!current) {\n      return null;\n    }\n    return (\n      <Popover\n        position={position}\n        headerContent={t('console-shared~{{title}} breakdown', { title })}\n        bodyContent={\n          <PopoverBody\n            humanize={humanize}\n            consumers={consumers}\n            namespace={namespace}\n            isOpen={isOpen}\n            description={description}\n          >\n            {children}\n          </PopoverBody>\n        }\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <Button variant=\"link\" isInline>\n          {current}\n        </Button>\n      </Popover>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) => {\n  const { t } = useTranslation();\n  return (\n    ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n      (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n      <ul className=\"co-utilization-card-popover__consumer-list\">\n        <Status value={total}>{t('console-shared~Total capacity')}</Status>\n        <Status value={limit} icon={getLimitIcon(limitState)}>\n          {t('console-shared~Total limit')}\n        </Status>\n        <Status value={current}>{t('console-shared~Current utilization')}</Status>\n        <Status value={available}>{t('console-shared~Current available capacity')}</Status>\n        <Status value={requested} icon={getLimitIcon(requestedState)}>\n          {t('console-shared~Total requested')}\n        </Status>\n      </ul>\n    )\n  );\n};\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const { t } = useTranslation();\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      const activePerspective = useActivePerspective()[0];\n      const canAccessMonitoring =\n        useFlag(FLAGS.CAN_GET_NS) && !!window.SERVER_FLAGS.prometheusBaseURL;\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (k8sResource && consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = t('console-shared~By {{label}}', {\n              label: curr.model.labelKey ? t(curr.model.labelKey) : curr.model.label,\n            });\n            return items;\n          }, {}),\n        [consumers, t],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL =\n        canAccessMonitoring && activePerspective === 'admin'\n          ? `/monitoring/query-browser?${monitoringParams.toString()}`\n          : `/dev-monitoring/ns/${namespace}/metrics?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={t('console-shared~Top consumer by {{label}}', { label: model.label })}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>{t('console-shared~View more')}</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? t('console-shared~Top {{label}} consumers', {\n                  label: currentConsumer.model.label.toLowerCase(),\n                })\n              : t('console-shared~Top consumers')}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label={t('console-shared~Select consumer type')}\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: string;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport {\n  DashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem,\n  SubsystemHealth,\n  OperatorRowProps,\n  LazyLoader,\n} from '@console/plugin-sdk';\nimport {\n  ResolvedExtension,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem as DynamicDashboardsOverviewHealthResourceSubsystem,\n  WatchK8sResources,\n  WatchK8sResults,\n  ResourcesObject,\n} from '@console/dynamic-plugin-sdk';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { OperatorsSection } from '@console/shared/src/components/dashboard/status-card/OperatorStatusBody';\nimport {\n  getOperatorsHealthState,\n  getMostImportantStatuses,\n} from '@console/shared/src/components/dashboard/status-card/state-utils';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { K8sKind } from '../../../../module/k8s';\nimport { FirehoseResourcesResult, AsyncComponent, resourcePath } from '../../../utils';\nimport { useK8sWatchResources } from '../../../utils/k8s-watch-hook';\nimport { withDashboardResources, DashboardItemProps } from '../../with-dashboard-resources';\nimport { uniqueResource } from './utils';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { ClusterDashboardContext } from './context';\n\nconst OperatorRow: React.FC<\n  OperatorRowProps & {\n    LoadingComponent: () => JSX.Element;\n    Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n    key: string;\n    isResolved: boolean;\n  }\n> = ({ operatorStatus, isResolved, key, Component, LoadingComponent }) => {\n  const ResolvedComponent = Component as React.ComponentType<OperatorRowProps>;\n  return isResolved ? (\n    <ResolvedComponent key={key} operatorStatus={operatorStatus} />\n  ) : (\n    <AsyncComponent\n      key={operatorStatus.operators[0].metadata.uid}\n      operatorStatus={operatorStatus}\n      loader={Component}\n      LoadingComponent={LoadingComponent}\n    />\n  );\n};\n\nexport const OperatorsPopup: React.FC<OperatorsPopupProps> = ({\n  resources,\n  operatorExtensions,\n  dynamicOperatorSubsystems,\n}) => {\n  const { t } = useTranslation();\n  const sections = [\n    ...operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved={false}\n          />\n        </StackItem>\n      );\n    }),\n    ...dynamicOperatorSubsystems.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved\n          />\n        </StackItem>\n      );\n    }),\n  ].reverse();\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        {t(\n          'public~Operators create, configure, and manage applications by extending the Kubernetes API.',\n        )}\n      </StackItem>\n      {sections}\n    </Stack>\n  );\n};\n\nexport const OperatorHealthItem = withDashboardResources<OperatorHealthItemProps>(\n  ({\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    operatorExtensions,\n    dynamicOperatorSubsystems,\n  }) => {\n    const { t } = useTranslation();\n    React.useEffect(() => {\n      operatorExtensions.forEach((o, index) =>\n        o.resources.forEach((r) => watchK8sResource(uniqueResource(r, index))),\n      );\n      return () => {\n        operatorExtensions.forEach((o, index) =>\n          o.resources.forEach((r) => stopWatchK8sResource(uniqueResource(r, index))),\n        );\n      };\n    }, [watchK8sResource, stopWatchK8sResource, operatorExtensions]);\n\n    const healthStatuses = operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop] || {};\n        return acc;\n      }, {});\n      if (\n        Object.keys(operatorResources).some((resource) => operatorResources[resource].loadError)\n      ) {\n        return { health: HealthState.NOT_AVAILABLE };\n      }\n      if (Object.keys(operatorResources).some((resource) => !operatorResources[resource].loaded)) {\n        return { health: HealthState.LOADING };\n      }\n      const operatorStatuses = o.getOperatorsWithStatuses(operatorResources);\n      if (!operatorStatuses.length) {\n        return { health: HealthState.OK };\n      }\n      const importantStatuses = getMostImportantStatuses(operatorStatuses);\n      return {\n        health: importantStatuses[0].status.health,\n        count: importantStatuses.length,\n      };\n    });\n\n    const operatorsHealth = getOperatorsHealthState(healthStatuses, t);\n\n    return (\n      <HealthItem\n        title={t('public~Operators')}\n        state={operatorsHealth.health}\n        details={operatorsHealth.detailMessage}\n        popupTitle={t('public~Operator status')}\n      >\n        <OperatorsPopup\n          resources={resources}\n          operatorExtensions={operatorExtensions}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      </HealthItem>\n    );\n  },\n);\n\nexport const URLHealthItem = withDashboardResources<URLHealthItemProps>(\n  ({\n    watchURL,\n    stopWatchURL,\n    urlResults,\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    subsystem,\n    models,\n  }) => {\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      watchURL(\n        subsystem.url,\n        (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          ? (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          : undefined,\n      );\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        stopWatchURL(subsystem.url);\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [watchURL, stopWatchURL, watchK8sResource, stopWatchK8sResource, subsystem, modelExists]);\n\n    const healthResult = urlResults.getIn([subsystem.url, 'data']);\n    const healthResultError = urlResults.getIn([subsystem.url, 'loadError']);\n\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(healthResult, healthResultError, k8sResult);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  healthResult={healthResult}\n                  healthResultError={healthResultError}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const PrometheusHealthItem = withDashboardResources<PrometheusHealthItemProps>(\n  ({\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    subsystem,\n    models,\n  }) => {\n    const { t } = useTranslation();\n    const { infrastructure } = React.useContext(ClusterDashboardContext);\n\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      subsystem.queries.forEach((q) => watchPrometheus(q));\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        subsystem.queries.forEach((q) => stopWatchPrometheusQuery(q));\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [\n      watchK8sResource,\n      stopWatchK8sResource,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      subsystem,\n      modelExists,\n    ]);\n\n    const queryResults = React.useMemo(\n      () =>\n        subsystem.queries.map((q) => {\n          const [response, error] = getPrometheusQueryResponse(prometheusResults, q);\n          return {\n            response,\n            error,\n          };\n        }),\n      [prometheusResults, subsystem.queries],\n    );\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(queryResults, t, k8sResult, infrastructure);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupClassname={subsystem.popupClassname}\n        popupKeepOnOutsideClick={subsystem.popupKeepOnOutsideClick}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  responses={queryResults}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const ResourceHealthItem: React.FC<ResourceHealthItemProps> = ({ subsystem, namespace }) => {\n  const { t } = useTranslation();\n\n  const { title, resources, healthHandler, popupComponent, popupTitle } = subsystem;\n\n  const resourcesWithNamespace: WatchK8sResources<ResourcesObject> = React.useMemo(() => {\n    return {\n      ...resources,\n      ...(resources.imageManifestVuln && {\n        imageManifestVuln: { ...resources.imageManifestVuln, namespace },\n      }),\n    };\n  }, [resources, namespace]);\n\n  const resourcesResult: WatchK8sResults<ResourcesObject> = useK8sWatchResources(\n    resourcesWithNamespace,\n  );\n  const healthState: SubsystemHealth = healthHandler(resourcesResult, t);\n\n  return (\n    <HealthItem\n      title={title}\n      state={healthState.state}\n      details={healthState.message}\n      popupTitle={popupTitle}\n    >\n      {popupComponent && resourcesResult && (\n        <AsyncComponent loader={popupComponent} {...resourcesResult} namespace={namespace} />\n      )}\n    </HealthItem>\n  );\n};\n\ntype OperatorHealthItemProps = DashboardItemProps & {\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n\ntype URLHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthURLSubsystem<any>['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem<any>>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype PrometheusHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthPrometheusSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype ResourceHealthItemProps = {\n  subsystem:\n    | DashboardsOverviewHealthResourceSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthResourceSubsystem>['properties'];\n  namespace?: string;\n};\n\ntype OperatorsPopupProps = {\n  resources: FirehoseResourcesResult;\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum ProjectQueries {\n  CPU_USAGE = 'CPU_USAGE',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  MEMORY_USAGE = 'MEMORY_USAGE',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  POD_COUNT = 'POD_COUNT',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_FILESYSTEM = 'PODS_BY_FILESYSTEM',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  FILESYSTEM_USAGE = 'FILESYSTEM_USAGE',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n}\n\nconst queries = {\n  [ProjectQueries.CPU_USAGE]: _.template(\n    `namespace:container_cpu_usage:sum{namespace='<%= project %>'}`,\n  ),\n  [ProjectQueries.CPU_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"cpu\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_USAGE]: _.template(\n    `sum(container_memory_working_set_bytes{namespace='<%= project %>',container=\"\",pod!=\"\"}) BY (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"memory\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.POD_COUNT]: _.template(\n    `count(kube_running_pod_ready{namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.FILESYSTEM_USAGE]: _.template(\n    `sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_IN_UTILIZATION]: _.template(\n    `sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_OUT_UTILIZATION]: _.template(\n    `sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n};\n\nconst top25Queries = {\n  [ProjectQueries.PODS_BY_CPU]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_MEMORY]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n};\n\nexport const getMultilineQueries = (\n  project: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [ProjectQueries.NETWORK_UTILIZATION]: [\n    {\n      query: queries[ProjectQueries.NETWORK_IN_UTILIZATION]({ project }),\n      desc: 'in',\n    },\n    {\n      query: queries[ProjectQueries.NETWORK_OUT_UTILIZATION]({ project }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getUtilizationQueries = (project: string) => ({\n  [ProjectQueries.CPU_USAGE]: queries[ProjectQueries.CPU_USAGE]({ project }),\n  [ProjectQueries.CPU_REQUESTS]: queries[ProjectQueries.CPU_REQUESTS]({ project }),\n  [ProjectQueries.MEMORY_USAGE]: queries[ProjectQueries.MEMORY_USAGE]({ project }),\n  [ProjectQueries.MEMORY_REQUESTS]: queries[ProjectQueries.MEMORY_REQUESTS]({ project }),\n  [ProjectQueries.POD_COUNT]: queries[ProjectQueries.POD_COUNT]({ project }),\n  [ProjectQueries.FILESYSTEM_USAGE]: queries[ProjectQueries.FILESYSTEM_USAGE]({\n    project,\n  }),\n});\n\nexport const getTopConsumerQueries = (project: string) => ({\n  [ProjectQueries.PODS_BY_CPU]: top25Queries[ProjectQueries.PODS_BY_CPU]({ project }),\n  [ProjectQueries.PODS_BY_MEMORY]: top25Queries[ProjectQueries.PODS_BY_MEMORY]({ project }),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: top25Queries[ProjectQueries.PODS_BY_FILESYSTEM]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: top25Queries[ProjectQueries.PODS_BY_NETWORK_IN]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: top25Queries[ProjectQueries.PODS_BY_NETWORK_OUT]({\n    project,\n  }),\n});\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        avg_over_time(instance:node_cpu:rate:sum[5m])\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum by (instance) (max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"}))\n          -\n          sum by (instance) (max by (device, instance) (node_filesystem_avail_bytes{device=~\"/.*\"}))\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(avg_over_time(kubelet_running_pods[5m])) BY (node)\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_receive_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_transmit_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n\n  [OverviewQuery.PROJECTS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        count by (namespace) (\n            topk without(uid) (1, kube_running_pod_ready)\n            *\n            ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n          *\n          on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})))\n        ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: _.template(\n    `\n      sum(\n        node_memory_MemTotal_bytes\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_UTILIZATION]: _.template(\n    `\n      sum(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"memory\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          instance:node_network_transmit_bytes_excluding_lo:rate1m\n          +\n          instance:node_network_receive_bytes_excluding_lo:rate1m\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_UTILIZATION]: _.template(\n    `\n      sum(\n        1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~\"idle|iowait|steal\"}[2m]))\n        *\n        on(instance) group_left() (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\",\"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_TOTAL]: _.template(\n    `\n      sum(\n        kube_node_status_capacity{resource=\"cpu\",unit=\"core\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"cpu\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n          -\n          max by (device, instance) (node_filesystem_free_bytes{device=~\"/.*\"})\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_TOTAL]: _.template(\n    `\n      sum(\n        max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.POD_UTILIZATION]: _.template(\n    `\n      count(\n        (\n          topk without(uid) (1, kube_running_pod_ready)\n          *\n          ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n        )\n        *\n        on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_receive_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_transmit_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n};\n\nexport const getMultilineQueries = (\n  nodeType: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION]({ nodeType }),\n      desc: 'in',\n    },\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION]({ nodeType }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getTop25ConsumerQueries = (nodeType: string) => ({\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU]({ nodeType }),\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS]({ nodeType }),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n});\n\nexport const getUtilizationQueries = (nodeType: string) => ({\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.CPU_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.CPU_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.MEMORY_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL]({ nodeType }),\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION]({ nodeType }),\n  },\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GaugeChart } from '@console/internal/components/graphs/gauge';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ResourceQuotaChartsProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n\nconst ResourceQuotaCharts = ({ resourceQuota }: ResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(resourceQuota.status?.hard ?? {}).map((resourceName) => {\n    const hard = resourceQuota.status.hard[resourceName];\n    const used = resourceQuota.status.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({ resourceName, used, hard });\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <GaugeChart\n          data={{\n            x: `${percent}%`,\n            y: percent,\n          }}\n          thresholds={[{ value: 90 }, { value: 101 }]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ResourceQuotaCharts;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getUsedPercentage, getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype AppliedClusterResourceQuotaChartsProps = {\n  appliedClusterResourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n\nconst AppliedClusterResourceQuotaCharts = ({\n  appliedClusterResourceQuota,\n  namespace,\n}: AppliedClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const nsQuotas = appliedClusterResourceQuota.status?.namespaces?.find(\n    (ns) => ns.namespace === namespace,\n  );\n\n  const charts = Object.keys(nsQuotas?.status?.hard ?? {}).map((resourceName) => {\n    const clusterHard = appliedClusterResourceQuota.status.total?.hard?.[resourceName];\n    const clusterUsed = appliedClusterResourceQuota.status.total?.used?.[resourceName];\n    const nsUsed = nsQuotas.status.used?.[resourceName];\n    const clusterUsage = getUsedPercentage(clusterHard, clusterUsed);\n    const unused = 100 - clusterUsage;\n\n    const { label, percent: nsUsage } = getLabelAndUsage({\n      resourceName,\n      used: nsUsed,\n      hard: clusterHard,\n    });\n\n    const percentOtherNamespaces = clusterUsage - nsUsage;\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Namespace',\n              y: nsUsage,\n            },\n            {\n              x: 'Other namespaces',\n              y: percentOtherNamespaces,\n            },\n            {\n              x: 'Unused',\n              y: unused,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default AppliedClusterResourceQuotaCharts;\n","/* eslint-disable camelcase */\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  chart_color_black_100,\n  chart_color_green_300,\n  chart_color_green_500,\n  chart_color_gold_400,\n  chart_color_gold_500,\n} from '@patternfly/react-tokens';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { useRefWidth } from '../utils';\nimport { DataPoint } from '.';\n\nexport const DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  query = '',\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  ariaDescription,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || t('No data');\n\n  const labels = ({ datum: { x, y } }) => t('public~{{x}}: {{y}}%', { x, y });\n\n  const namespaceData = data.filter((datum) => datum.x === 'Namespace');\n\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonut\n          ariaTitle={ariaChartTitle || title}\n          ariaDesc={ariaDescription}\n          data={data}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          labels={labels}\n          width={width}\n          subTitle={secondaryTitleText}\n          colorScale={\n            namespaceData[0]?.y === 100\n              ? [\n                  chart_color_gold_400.value,\n                  chart_color_gold_500.value,\n                  chart_color_black_100.value,\n                ]\n              : [\n                  chart_color_green_300.value,\n                  chart_color_green_500.value,\n                  chart_color_black_100.value,\n                ]\n          }\n          title={labelText}\n        />\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\ntype DonutChartProps = {\n  data: DataPoint[];\n  label: string;\n  query?: string;\n  secondaryTitle?: string;\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  ariaDescription?: string;\n  usedLabel?: string;\n  className?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { YellowExclamationTriangleIcon } from '../../status';\n\nimport './quota-summary.scss';\n\ntype QuotaSummaryProps = {\n  hard: { [key: string]: string };\n  used: { [key: string]: string };\n};\n\nconst QuotaSummary = ({ hard, used }: QuotaSummaryProps): JSX.Element => {\n  const { t } = useTranslation();\n  const resourcesAtQuota = Object.keys(hard || {}).reduce(\n    (acc, resource) => (getUsedPercentage(hard[resource], used?.[resource]) >= 100 ? acc + 1 : acc),\n    0,\n  );\n\n  return (\n    <div className=\"co-resource-quota__summary\">\n      {t('console-shared~{{count}} resource', { count: Object.keys(hard || {}).length })}\n      {', '}\n      {resourcesAtQuota > 0 ? (\n        <>\n          <YellowExclamationTriangleIcon />{' '}\n          {t('console-shared~{{count}} resource reached quota', { count: resourcesAtQuota })}\n        </>\n      ) : (\n        t('console-shared~none are at quota')\n      )}\n    </div>\n  );\n};\n\nexport default QuotaSummary;\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../../module/k8s';\n\nexport const ClusterDashboardContext = React.createContext<ClusterDashboardContext>({\n  infrastructureLoaded: true,\n  infrastructureError: null,\n});\n\n// eslint-disable-next-line no-redeclare\ntype ClusterDashboardContext = {\n  infrastructure?: K8sResourceKind;\n  infrastructureLoaded: boolean;\n  infrastructureError: any;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { GetOperatorsWithStatuses, LazyLoader, OperatorRowProps } from '@console/plugin-sdk';\nimport { getMostImportantStatuses } from './state-utils';\nimport { HealthState } from './states';\nimport StatusItem, { StatusPopupSection } from './StatusPopup';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({\n  resources,\n  getOperatorsWithStatuses,\n  title,\n  linkTo,\n  Row,\n  Component,\n  isResolved,\n}) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some((r) => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) =>\n    a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name),\n  );\n  const operatorsHealthy = sortedOperatorStatuses.every((o) => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  if (!operatorStatuses.length) {\n    return null;\n  }\n\n  return (\n    <StatusPopupSection\n      firstColumn={\n        <>\n          <span>{title}</span>\n          <span className=\"text-secondary co-status__operator-detail\">\n            {' '}\n            {t('console-shared~({{operatorStatusLength}} installed)', {\n              operatorStatusLength: operatorStatuses.length,\n            })}\n          </span>\n        </>\n      }\n      secondColumn={t('console-shared~Status')}\n    >\n      {error ? (\n        <div className=\"text-secondary\">{t('console-shared~Not available')}</div>\n      ) : (\n        !operatorsHealthy &&\n        sortedOperatorStatuses.map((operatorStatus) => (\n          <Row\n            key={operatorStatus.operators[0].metadata.uid}\n            Component={Component}\n            operatorStatus={operatorStatus}\n            LoadingComponent={RowLoading}\n            isResolved={isResolved}\n          />\n        ))\n      )}\n      <StatusItem\n        value={t('console-shared~All {{status}}', {\n          status: operatorStatuses[0].status.title.toLowerCase(),\n        })}\n        icon={operatorStatuses[0].status.icon}\n      >\n        <Link to={linkTo}>{t('console-shared~View all')}</Link>\n      </StatusItem>\n    </StatusPopupSection>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  Row: React.ComponentType<\n    OperatorRowProps & {\n      LoadingComponent: () => JSX.Element;\n      Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n      key: string;\n      isResolved: boolean;\n    }\n  >;\n  isResolved: boolean;\n  Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useExtensions,\n  DashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthOperator,\n} from '@console/plugin-sdk';\nimport {\n  DashboardsOverviewHealthSubsystem as DynamicDashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem as isDynamicDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem as isDynamicDashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem as isDynamicDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthURLSubsystem,\n  isResolvedDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthResourceSubsystem,\n  isResolvedDashboardsOverviewHealthOperator,\n  ResolvedExtension,\n  useResolvedExtensions,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport { Gallery, GalleryItem, Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport { BlueArrowCircleUpIcon, FLAGS, useCanClusterUpgrade } from '@console/shared';\n\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport AlertItem, {\n  StatusItem,\n} from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '../../../monitoring/utils';\nimport {\n  ClusterVersionKind,\n  referenceForModel,\n  hasAvailableUpdates,\n  K8sKind,\n  ObjectMetadata,\n} from '../../../../module/k8s';\nimport { ClusterVersionModel } from '../../../../models';\nimport { RootState } from '../../../../redux';\nimport {\n  OperatorHealthItem,\n  PrometheusHealthItem,\n  URLHealthItem,\n  ResourceHealthItem,\n} from './health-item';\nimport { useK8sWatchResource } from '../../../utils/k8s-watch-hook';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { useNotificationAlerts } from '@console/shared/src/hooks/useNotificationAlerts';\n\nconst filterSubsystems = (\n  subsystems: (\n    | DashboardsOverviewHealthSubsystem\n    | ResolvedExtension<DynamicDashboardsOverviewHealthSubsystem>\n  )[],\n  k8sModels: ImmutableMap<string, K8sKind>,\n) =>\n  subsystems.filter((s) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(s) ||\n      isDashboardsOverviewHealthPrometheusSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthURLSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthPrometheusSubsystem(s)\n    ) {\n      const subsystem = s as\n        | DashboardsOverviewHealthPrometheusSubsystem\n        | DashboardsOverviewHealthURLSubsystem\n        | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>\n        | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem>;\n      return subsystem.properties.additionalResource &&\n        !subsystem.properties.additionalResource.optional\n        ? !!k8sModels.get(subsystem.properties.additionalResource.kind)\n        : true;\n    }\n    return true;\n  });\n\nconst cvResource: WatchK8sResource = {\n  kind: referenceForModel(ClusterVersionModel),\n  namespaced: false,\n  name: 'version',\n  isList: false,\n};\n\nexport const DashboardAlerts: React.FC<DashboardAlertsProps> = ({ labelSelector }) => {\n  const { t } = useTranslation();\n  const hasCVResource = useFlag(FLAGS.CLUSTER_VERSION);\n  const [alerts, , loadError] = useNotificationAlerts(labelSelector);\n  const [cv, cvLoaded] = useK8sWatchResource<ClusterVersionKind>(\n    hasCVResource ? cvResource : ({} as WatchK8sResource),\n  );\n  const canUpgrade = useCanClusterUpgrade();\n\n  const showClusterUpdate =\n    canUpgrade && hasCVResource && cvLoaded && hasAvailableUpdates(cv) && !labelSelector;\n  return (\n    <AlertsBody error={!_.isEmpty(loadError)}>\n      {showClusterUpdate && (\n        <StatusItem\n          key=\"clusterUpdate\"\n          Icon={BlueArrowCircleUpIcon}\n          message={t('public~A cluster version update is available')}\n        >\n          <Link to=\"/settings/cluster?showVersions\">{t('public~Update cluster')}</Link>\n        </StatusItem>\n      )}\n      {alerts.map((alert) => (\n        <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n      ))}\n    </AlertsBody>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const StatusCard = connect<StatusCardProps>(mapStateToProps)(({ k8sModels }) => {\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const [dynamicSubsystemExtensions] = useResolvedExtensions<\n    DynamicDashboardsOverviewHealthSubsystem\n  >(isDynamicDashboardsOverviewHealthSubsystem);\n\n  const subsystems = React.useMemo(() => {\n    const filteredSubsystems = filterSubsystems(\n      [...subsystemExtensions, ...dynamicSubsystemExtensions],\n      k8sModels,\n    );\n    return filteredSubsystems.map((e) => {\n      if (\n        isResolvedDashboardsOverviewHealthURLSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthPrometheusSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthResourceSubsystem(e)\n      ) {\n        const popup = e.properties.popupComponent\n          ? { popupComponent: () => Promise.resolve(e.properties.popupComponent) }\n          : {};\n        return {\n          ...e,\n          properties: {\n            ...e.properties,\n            ...popup,\n          },\n        };\n      }\n      return e;\n    });\n  }, [subsystemExtensions, dynamicSubsystemExtensions, k8sModels]);\n\n  const operatorSubsystemIndex = React.useMemo(\n    () =>\n      subsystems.findIndex(\n        (e) =>\n          isDashboardsOverviewHealthOperator(e) || isResolvedDashboardsOverviewHealthOperator(e),\n      ),\n    [subsystems],\n  );\n  const { t } = useTranslation();\n  const healthItems: { title: string; Component: React.ReactNode }[] = [];\n  subsystems.forEach((subsystem) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthURLSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <URLHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthPrometheusSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthPrometheusSubsystem(subsystem)\n    ) {\n      const { disallowedControlPlaneTopology } = subsystem.properties;\n      if (\n        disallowedControlPlaneTopology?.length &&\n        disallowedControlPlaneTopology.includes(window.SERVER_FLAGS.controlPlaneTopology)\n      ) {\n        return;\n      }\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <PrometheusHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthResourceSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthResourceSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <ResourceHealthItem subsystem={subsystem.properties} />,\n      });\n    }\n  });\n\n  if (operatorSubsystemIndex !== -1) {\n    const operatorSubsystems: DashboardsOverviewHealthOperator['properties'][] = [];\n    const dynamicOperatorSubsystems: ResolvedExtension<\n      DynamicDashboardsOverviewHealthOperator\n    >['properties'][] = [];\n    subsystems.forEach((e) => {\n      if (isResolvedDashboardsOverviewHealthOperator(e)) {\n        dynamicOperatorSubsystems.push(e.properties);\n      } else if (isDashboardsOverviewHealthOperator(e)) {\n        operatorSubsystems.push(e.properties);\n      }\n    });\n    healthItems.splice(operatorSubsystemIndex, 0, {\n      title: 'Operators',\n      Component: (\n        <OperatorHealthItem\n          operatorExtensions={operatorSubsystems}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      ),\n    });\n  }\n\n  return (\n    <Card\n      data-test-id=\"status-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to=\"/monitoring/alerts\" data-test=\"status-card-view-alerts\">\n                {t('public~View alerts')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      <HealthBody>\n        <Gallery className=\"co-overview-status__health\" hasGutter>\n          {healthItems.map((item) => {\n            return (\n              <GalleryItem key={item.title} data-test={item.title}>\n                {item.Component}\n              </GalleryItem>\n            );\n          })}\n        </Gallery>\n      </HealthBody>\n      <DashboardAlerts />\n    </Card>\n  );\n});\n\ntype StatusCardProps = {\n  k8sModels: ImmutableMap<string, K8sKind>;\n};\n\ntype DashboardAlertsProps = {\n  labelSelector?: ObjectMetadata['labels'];\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardTitle,\n  MenuToggle,\n  MenuToggleElement,\n  Select,\n  SelectList,\n  SelectOption,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  ClusterOverviewUtilizationItem,\n  isClusterOverviewUtilizationItem,\n  ClusterOverviewMultilineUtilizationItem,\n  isClusterOverviewMultilineUtilizationItem,\n  useResolvedExtensions,\n  Humanize,\n  TopConsumerPopoverProps,\n} from '@console/dynamic-plugin-sdk';\nimport UtilizationItem, {\n  MultilineUtilizationItem,\n  QueryWithDescription,\n  LimitRequested,\n  trimSecondsXMutator,\n} from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport {\n  getMultilineQueries,\n  getUtilizationQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport { MachineConfigPoolModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { MachineConfigPoolKind, referenceForModel } from '@console/internal/module/k8s';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport { useUtilizationDuration } from '@console/shared/src/hooks/useUtilizationDuration';\nimport {\n  ClusterUtilizationContext,\n  CPUPopover,\n  MemoryPopover,\n  StoragePopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  PodPopover,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    utilizationQuery,\n    totalQuery,\n    title,\n    TopConsumerPopover,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n    limitQuery,\n    requestQuery,\n    setLimitReqState,\n  }) => {\n    let utilization: PrometheusResponse, utilizationError: any;\n    let total: PrometheusResponse, totalError: any;\n    let max: DataPoint<number>[];\n    let limit: PrometheusResponse, limitError: any;\n    let request: PrometheusResponse, requestError: any;\n    let isLoading = false;\n    const { duration } = useUtilizationDuration();\n\n    React.useEffect(() => {\n      if (!isDisabled) {\n        watchPrometheus(utilizationQuery, namespace, duration);\n        totalQuery && watchPrometheus(totalQuery, namespace);\n        limitQuery && watchPrometheus(limitQuery, namespace, duration);\n        requestQuery && watchPrometheus(requestQuery, namespace, duration);\n        return () => {\n          stopWatchPrometheusQuery(utilizationQuery, duration);\n          totalQuery && stopWatchPrometheusQuery(totalQuery);\n          limitQuery && stopWatchPrometheusQuery(limitQuery, duration);\n          requestQuery && stopWatchPrometheusQuery(requestQuery, duration);\n        };\n      }\n    }, [\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      duration,\n      utilizationQuery,\n      totalQuery,\n      namespace,\n      isDisabled,\n      limitQuery,\n      requestQuery,\n    ]);\n\n    if (!isDisabled) {\n      [utilization, utilizationError] = getPrometheusQueryResponse(\n        prometheusResults,\n        utilizationQuery,\n        duration,\n      );\n      [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n      [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, duration);\n      [request, requestError] = getPrometheusQueryResponse(\n        prometheusResults,\n        requestQuery,\n        duration,\n      );\n\n      max = getInstantVectorStats(total);\n      isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n\n    return (\n      <UtilizationItem\n        title={title}\n        utilization={utilization}\n        limit={limit}\n        requested={request}\n        error={utilizationError || totalError || limitError || requestError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        query={[utilizationQuery, limitQuery, requestQuery]}\n        max={max && max.length ? max[0].y : null}\n        TopConsumerPopover={TopConsumerPopover}\n        setLimitReqState={setLimitReqState}\n      />\n    );\n  },\n);\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<\n  PrometheusMultilineUtilizationItemProps\n>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    queries,\n    title,\n    TopConsumerPopovers,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n  }) => {\n    const { duration } = useUtilizationDuration();\n    React.useEffect(() => {\n      if (!isDisabled) {\n        queries.forEach((q) => watchPrometheus(q.query, namespace, duration));\n        return () => {\n          queries.forEach((q) => stopWatchPrometheusQuery(q.query, duration));\n        };\n      }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled]);\n\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n      queries.forEach((query) => {\n        const [response, responseError] = getPrometheusQueryResponse(\n          prometheusResults,\n          query.query,\n          duration,\n        );\n        if (responseError) {\n          hasError = true;\n          return false;\n        }\n        if (!response) {\n          isLoading = true;\n          return false;\n        }\n        stats.push(getRangeVectorStats(response, query.desc, null, trimSecondsXMutator)?.[0] || []);\n      });\n    }\n\n    return (\n      <MultilineUtilizationItem\n        title={title}\n        data={stats}\n        error={hasError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        queries={queries}\n        TopConsumerPopovers={TopConsumerPopovers}\n      />\n    );\n  },\n);\n\nconst UtilizationCardNodeFilter: React.FC<UtilizationCardNodeFilterProps> = ({\n  machineConfigPools,\n  onNodeSelect,\n  selectedNodes,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const sortedMCPs = machineConfigPools.sort((a, b) => {\n    const order = ['worker', 'master'];\n    const indexA = order.indexOf(a.metadata.name);\n    const indexB = order.indexOf(b.metadata.name);\n    if (indexA === -1 && indexB === -1) {\n      return a.metadata.name.localeCompare(b.metadata.name);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  });\n\n  const selectOptions = sortedMCPs.map((mcp) => {\n    const mcpName = mcp.metadata.name === 'master' ? 'control plane' : mcp.metadata.name;\n    return (\n      <SelectOption\n        hasCheckbox\n        key={mcp.metadata.name}\n        value={mcpName}\n        isSelected={selectedNodes.includes(mcp.metadata.name)}\n      >\n        {mcpName}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={(open) => setIsOpen(open)} variant=\"plainText\">\n      {t('public~Filter by Node type')}\n      {selectedNodes.length > 0 && (\n        <Badge className=\"pf-v5-u-ml-sm\" isRead>\n          {selectedNodes.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      aria-label={t('public~Filter by Node type')}\n      onSelect={onNodeSelect}\n      isOpen={isOpen}\n      selected={selectedNodes}\n      onOpenChange={(open) => setIsOpen(open)}\n      toggle={toggle}\n    >\n      <SelectList>{selectOptions}</SelectList>\n    </Select>\n  );\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const [machineConfigPools, machineConfigPoolsLoaded] = useK8sWatchResource<\n    MachineConfigPoolKind[]\n  >({\n    isList: true,\n    kind: referenceForModel(MachineConfigPoolModel),\n  });\n  // TODO: add `useUserSettings` to get default selected\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ClusterOverviewUtilizationItem>(\n    isClusterOverviewUtilizationItem,\n  );\n  const [dynamicMultilineItemExtensions] = useResolvedExtensions<\n    ClusterOverviewMultilineUtilizationItem\n  >(isClusterOverviewMultilineUtilizationItem);\n\n  // TODO: add `useUserSettingsCompatibility` to store selectedNodes\n  const onNodeSelect = (event: React.MouseEvent, selection: string) => {\n    const selectionUpdated = selection === 'control plane' ? 'master' : selection;\n    if (selectedNodes.includes(selectionUpdated)) {\n      setSelectedNodes(selectedNodes.filter((item) => item !== selectionUpdated));\n    } else {\n      setSelectedNodes([...selectedNodes, selectionUpdated]);\n    }\n  };\n  // if no filter is applied, show all nodes using regex\n  const nodeType = _.isEmpty(selectedNodes) ? '.+' : selectedNodes.join('|');\n  const [utilizationQueries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(nodeType), getMultilineQueries(nodeType)],\n    [nodeType],\n  );\n  return (\n    machineConfigPoolsLoaded && (\n      <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n        <CardHeader\n          actions={{\n            actions: (\n              <>\n                <Split>\n                  <SplitItem>\n                    <UtilizationCardNodeFilter\n                      machineConfigPools={machineConfigPools}\n                      onNodeSelect={onNodeSelect}\n                      selectedNodes={selectedNodes}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <UtilizationDurationDropdown />\n                  </SplitItem>\n                </Split>\n              </>\n            ),\n            hasNoOffset: false,\n            className: undefined,\n          }}\n        >\n          <CardTitle data-test=\"utilization-card__title\">\n            {t('public~Cluster utilization')}\n          </CardTitle>\n        </CardHeader>\n        <UtilizationBody>\n          <ClusterUtilizationContext.Provider value={nodeType}>\n            <PrometheusUtilizationItem\n              title={t('public~CPU')}\n              utilizationQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].requests}\n              TopConsumerPopover={CPUPopover}\n              humanizeValue={humanizeCpuCores}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Memory')}\n              utilizationQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].requests}\n              TopConsumerPopover={MemoryPopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Filesystem')}\n              utilizationQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].total}\n              TopConsumerPopover={StoragePopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusMultilineUtilizationItem\n              title={t('public~Network transfer')}\n              queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]}\n              humanizeValue={humanizeDecimalBytesPerSec}\n              TopConsumerPopovers={networkPopovers}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Pod count')}\n              utilizationQuery={utilizationQueries[OverviewQuery.POD_UTILIZATION].utilization}\n              TopConsumerPopover={PodPopover}\n              humanizeValue={humanizeNumber}\n            />\n            {dynamicItemExtensions.map(({ uid, properties }) => (\n              <PrometheusUtilizationItem\n                key={uid}\n                title={properties.title}\n                utilizationQuery={properties.getUtilizationQuery(selectedNodes)}\n                totalQuery={properties.getTotalQuery?.(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopover={properties.TopConsumerPopover}\n                requestQuery={properties.getRequestQuery?.(selectedNodes)}\n                limitQuery={properties.getLimitQuery?.(selectedNodes)}\n              />\n            ))}\n            {dynamicMultilineItemExtensions.map(({ uid, properties }) => (\n              <PrometheusMultilineUtilizationItem\n                key={uid}\n                title={properties.title}\n                queries={properties.getUtilizationQueries(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopovers={properties.TopConsumerPopovers}\n              />\n            ))}\n          </ClusterUtilizationContext.Provider>\n        </UtilizationBody>\n      </Card>\n    )\n  );\n};\n\ntype PrometheusCommonProps = {\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProps>;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProps>[];\n  };\n\ntype UtilizationCardNodeFilterProps = {\n  machineConfigPools: MachineConfigPoolKind[];\n  onNodeSelect: (event: React.MouseEvent, selection: string) => void;\n  selectedNodes: string[];\n};\n","import * as React from 'react';\nimport {\n  ChartDonutThreshold,\n  ChartDonutUtilization,\n  ChartThemeColor,\n} from '@patternfly/react-charts';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { useRefWidth, humanizePercentage, Humanize } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { DataPoint } from '.';\n\nconst DEFAULT_THRESHOLDS = [{ value: 67 }, { value: 92 }];\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  error,\n  humanize = humanizePercentage,\n  invert = false,\n  loading,\n  query = '',\n  remainderLabel,\n  themeColor = ChartThemeColor.green,\n  thresholds = DEFAULT_THRESHOLDS,\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n  const ready = !error && !loading;\n\n  const status = loading ? t('Loading') : error;\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || (data ? humanize(data.y).string : undefined) || t('No data');\n\n  const labels = ({ datum: { x, y } }) =>\n    x ? `${x} ${usedLabelText}` : `${y} ${remainderLabel || t('available')}`;\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonutThreshold\n          ariaTitle={ariaChartTitle || title}\n          data={thresholds}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          width={width}\n          y=\"value\"\n        >\n          <ChartDonutUtilization\n            labels={labels}\n            data={ready ? data : { y: 0 }}\n            invert={invert}\n            padding={0}\n            subTitle={ready ? secondaryTitleText : ''}\n            themeColor={themeColor}\n            thresholds={thresholds}\n            title={status || labelText}\n          />\n        </ChartDonutThreshold>\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\nexport const Gauge: React.FC<GaugeProps> = ({\n  humanize = humanizePercentage,\n  invert,\n  namespace,\n  percent = 0,\n  query,\n  remainderLabel,\n  secondaryTitle,\n  thresholds,\n  title,\n  usedLabel,\n}) => {\n  const { t } = useTranslation();\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n\n  const [data] = response\n    ? getInstantVectorStats(response, null, humanize).map(({ label, y }) => ({ x: label, y }))\n    : [{ x: humanize(percent).string, y: percent }];\n  return (\n    <GaugeChart\n      data={data}\n      error={!!error && t('No data')}\n      invert={invert}\n      label={data.x}\n      loading={loading}\n      query={query}\n      remainderLabel={remainderLabel}\n      secondaryTitle={secondaryTitle}\n      thresholds={thresholds}\n      title={title}\n      usedLabel={usedLabel}\n    />\n  );\n};\n\ntype GaugeChartProps = {\n  data: DataPoint;\n  error?: string;\n  humanize?: Humanize;\n  invert?: boolean;\n  isLoaded?: boolean;\n  label?: string;\n  loading?: boolean;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  themeColor?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  usedLabel?: string;\n  className?: string;\n};\n\ntype GaugeProps = {\n  humanize?: Humanize;\n  invert?: boolean;\n  namespace?: string;\n  percent?: number;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  usedLabel?: string;\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, LabelSelector, referenceForModel, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nexport const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project overview')}</title>\n        </Helmet>\n      )}\n      <ProjectDashboardContext.Provider value={context}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n        </Dashboard>\n      </ProjectDashboardContext.Provider>\n    </>\n  );\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as React from 'react';\nimport { AsyncComponent } from '../utils';\n\nexport const OverviewListPageLoader = () =>\n  import('./OverviewListPage' /* webpackChunkName: \"overview-list-page\" */).then(\n    (m) => m.OverviewListPage,\n  );\n\nexport const OverviewListPage: React.FC = (props) => {\n  return <AsyncComponent loader={OverviewListPageLoader} {...props} />;\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle, Button } from '@patternfly/react-core';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport { OverviewDetailItem } from '@openshift-console/plugin-shared/src';\nimport { getName, getRequester, GreenCheckCircleIcon } from '@console/shared';\nimport { LabelList, resourcePathFromModel } from '../../utils';\nimport { ProjectModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { Link } from 'react-router-dom-v5-compat';\n\nexport const DetailsCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const keys = _.keys(obj.metadata.labels).sort();\n  const labelsSubset = _.take(keys, 3);\n  const firstThreelabels = _.pick(obj.metadata.labels, labelsSubset);\n  const description = obj.metadata.annotations?.['openshift.io/description'];\n  const detailsLink = `${resourcePathFromModel(ProjectModel, obj.metadata.name)}/details`;\n  const serviceMeshEnabled = obj.metadata?.labels?.['maistra.io/member-of'];\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"details-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={detailsLink} data-test=\"details-card-view-all\">\n                {t('public~View all')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Details')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DetailsBody>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Name')}>\n            {getName(obj)}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Requester')}>\n            {getRequester(obj) || <span className=\"text-muted\">{t('public~No requester')}</span>}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Labels')}>\n            <div className=\"co-project-dashboard__details-labels\">\n              <LabelList kind={ProjectModel.kind} labels={firstThreelabels} />\n              {keys.length > 3 && (\n                <Button variant=\"link\">\n                  <Link to={detailsLink}>{t('public~View all')}</Link>\n                </Button>\n              )}\n            </div>\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Description')}>\n            <span\n              className={cx({\n                'text-muted': !description,\n                'co-project-dashboard-details-card__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </span>\n          </OverviewDetailItem>\n          {serviceMeshEnabled && (\n            <OverviewDetailItem isLoading={!obj} title={t('public~Service mesh')}>\n              <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n            </OverviewDetailItem>\n          )}\n        </DetailsBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle, Gallery } from '@patternfly/react-core';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport { Status } from '@console/shared';\nimport { LoadingInline } from '@console/internal/components/utils/status-box';\nimport {\n  DashboardsOverviewHealthResourceSubsystem,\n  DashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthSubsystem,\n  useExtensions,\n} from '@console/plugin-sdk';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceHealthItem } from '../dashboards-page/cluster-dashboard/health-item';\n\nimport { DashboardAlerts } from '../dashboards-page/cluster-dashboard/status-card';\n\nexport const StatusCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const filterSubsystems = (subsystems: DashboardsOverviewHealthSubsystem[]) =>\n    subsystems.filter(isDashboardsOverviewHealthResourceSubsystem);\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const subsystem: DashboardsOverviewHealthResourceSubsystem = React.useMemo(\n    () =>\n      filterSubsystems(subsystemExtensions).find(\n        (s) => s.properties.title === 'Image Vulnerabilities',\n      ),\n    [subsystemExtensions],\n  );\n  const {\n    metadata: { name: namespace },\n  } = obj;\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"status-card\" className=\"co-overview-card--gradient\">\n      <CardHeader>\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      {obj ? (\n        <>\n          <HealthBody>\n            <Gallery className=\"co-overview-status__health\" hasGutter>\n              <div className=\"co-status-card__health-item\" data-test=\"project-status\">\n                <Status status={obj.status?.phase} className=\"co-icon-and-text--lg\" />\n              </div>\n              {subsystem && (\n                <ResourceHealthItem subsystem={subsystem.properties} namespace={namespace} />\n              )}\n            </Gallery>\n          </HealthBody>\n          <DashboardAlerts labelSelector={{ namespace }} />\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  isProjectOverviewUtilizationItem,\n  ProjectOverviewUtilizationItem,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n  humanizeNumber,\n} from '../../utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  getUtilizationQueries,\n  ProjectQueries,\n  getMultilineQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport {\n  PrometheusUtilizationItem,\n  PrometheusMultilineUtilizationItem,\n} from '../dashboards-page/cluster-dashboard/utilization-card';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport {\n  CPUPopover,\n  FilesystemPopover,\n  MemoryPopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  ProjectUtilizationContext,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const UtilizationCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = obj?.metadata?.name;\n  const [queries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(projectName), getMultilineQueries(projectName)],\n    [projectName],\n  );\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ProjectOverviewUtilizationItem>(\n    isProjectOverviewUtilizationItem,\n  );\n\n  return (\n    <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <UtilizationDurationDropdown />\n            </>\n          ),\n          hasNoOffset: false,\n          className: undefined,\n        }}\n      >\n        <CardTitle>{t('public~Utilization')}</CardTitle>\n      </CardHeader>\n      <UtilizationBody>\n        <ProjectUtilizationContext.Provider value={projectName}>\n          <PrometheusUtilizationItem\n            title={t('public~CPU')}\n            humanizeValue={humanizeCpuCores}\n            utilizationQuery={queries[ProjectQueries.CPU_USAGE]}\n            requestQuery={queries[ProjectQueries.CPU_REQUESTS]}\n            TopConsumerPopover={CPUPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Memory')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.MEMORY_USAGE]}\n            requestQuery={queries[ProjectQueries.MEMORY_REQUESTS]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={MemoryPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Filesystem')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.FILESYSTEM_USAGE]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={FilesystemPopover}\n            namespace={projectName}\n          />\n          <PrometheusMultilineUtilizationItem\n            title={t('public~Network transfer')}\n            humanizeValue={humanizeDecimalBytesPerSec}\n            queries={multilineQueries[ProjectQueries.NETWORK_UTILIZATION]}\n            TopConsumerPopovers={networkPopovers}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Pod count')}\n            humanizeValue={humanizeNumber}\n            utilizationQuery={queries[ProjectQueries.POD_COUNT]}\n            namespace={projectName}\n          />\n          {dynamicItemExtensions.map(({ uid, properties }) => (\n            <PrometheusUtilizationItem\n              key={uid}\n              title={properties.title}\n              humanizeValue={properties.humanize}\n              utilizationQuery={properties.getUtilizationQuery(projectName)}\n              requestQuery={properties.getRequestQuery?.(projectName)}\n              limitQuery={properties.getLimitQuery?.(projectName)}\n              totalQuery={properties.getTotalQuery?.(projectName)}\n              namespace={projectName}\n              TopConsumerPopover={properties.TopConsumerPopover}\n            />\n          ))}\n        </ProjectUtilizationContext.Provider>\n      </UtilizationBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport {\n  getTop25ConsumerQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ProjectModel, PodModel, NodeModel } from '../../../../models';\nimport {\n  humanizeCpuCores,\n  humanizeBinaryBytes,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils';\n\nexport const ClusterUtilizationContext = React.createContext('.+');\n\nconst useConsumers = (\n  nsQuery: OverviewQuery,\n  podQuery: OverviewQuery,\n  nodeQuery: OverviewQuery,\n) => {\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  return React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[nsQuery],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[podQuery],\n        model: PodModel,\n        metric: 'pod',\n      },\n      {\n        query: consumerQueries[nodeQuery],\n        model: NodeModel,\n        metric: 'instance',\n      },\n    ];\n  }, [nodeQuery, nodeType, nsQuery, podQuery]);\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_CPU,\n    OverviewQuery.PODS_BY_CPU,\n    OverviewQuery.NODES_BY_CPU,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeCpuCores}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_MEMORY,\n    OverviewQuery.PODS_BY_MEMORY,\n    OverviewQuery.NODES_BY_MEMORY,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const StoragePopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_STORAGE,\n    OverviewQuery.PODS_BY_STORAGE,\n    OverviewQuery.NODES_BY_STORAGE,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const PodPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  const consumers = React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n      },\n    ];\n  }, [nodeType]);\n  return (\n    <ConsumerPopover\n      title={t('public~Pod count')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeNumber}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_IN,\n    OverviewQuery.PODS_BY_NETWORK_IN,\n    OverviewQuery.NODES_BY_NETWORK_IN,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_OUT,\n    OverviewQuery.PODS_BY_NETWORK_OUT,\n    OverviewQuery.NODES_BY_NETWORK_OUT,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport {\n  ProjectQueries,\n  getTopConsumerQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport { PodModel } from '../../../models';\nimport { humanizeCpuCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec } from '../../utils';\n\nexport const ProjectUtilizationContext = React.createContext('');\n\nconst useConsumers = (query: ProjectQueries) => {\n  const namespace = React.useContext(ProjectUtilizationContext);\n  const consumers = React.useMemo(\n    () => [\n      {\n        query: getTopConsumerQueries(namespace)[query],\n        model: PodModel,\n        metric: 'pod',\n      },\n    ],\n    [query, namespace],\n  );\n  return {\n    consumers,\n    namespace,\n  };\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_CPU);\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      humanize={humanizeCpuCores}\n      {...consumers}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_MEMORY);\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const FilesystemPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_FILESYSTEM);\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_IN);\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_OUT);\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  PodModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  PersistentVolumeClaimModel,\n  ServiceModel,\n  StatefulSetModel,\n  RouteModel,\n  ConfigMapModel,\n  SecretModel,\n  VolumeSnapshotModel,\n} from '../../../models';\nimport {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport {\n  getPodStatusGroups,\n  getPVCStatusGroups,\n  getVSStatusGroups,\n} from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { FirehoseResult, FirehoseResource, useAccessReview } from '../../utils';\nimport { K8sKind, referenceForModel } from '../../../module/k8s';\nimport { getName } from '@console/shared';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  useExtensions,\n  ProjectDashboardInventoryItem,\n  isProjectDashboardInventoryItem,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsProjectOverviewInventoryItem as DynamicProjectDashboardInventoryItem,\n  isDashboardsProjectOverviewInventoryItem as isDynamicProjectDashboardInventoryItem,\n  K8sResourceCommon,\n  WatchK8sResources,\n  ProjectOverviewInventoryItem,\n  isProjectOverviewInventoryItem,\n} from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\n\nconst createFirehoseResource = (model: K8sKind, projectName: string): FirehoseResource => ({\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  isList: true,\n  prop: 'resource',\n  namespace: projectName,\n});\n\nconst ProjectInventoryItem = withDashboardResources(\n  ({\n    projectName,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    model,\n    mapper,\n    additionalResources,\n    additionalDynamicResources,\n  }: ProjectInventoryItemProps) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const resource = createFirehoseResource(model, projectName);\n        watchK8sResource(resource);\n        if (additionalResources) {\n          additionalResources.forEach((r) => watchK8sResource({ ...r, namespace: projectName }));\n        }\n        return () => {\n          stopWatchK8sResource(resource);\n          if (additionalResources) {\n            additionalResources.forEach(stopWatchK8sResource);\n          }\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, model, additionalResources]);\n\n    const resourceData = _.get(resources.resource, 'data', []) as FirehoseResult['data'];\n    const resourceLoaded = _.get(resources.resource, 'loaded');\n    const resourceLoadError = _.get(resources.resource, 'loadError');\n\n    const additionalResourcesData = additionalResources\n      ? additionalResources.reduce((acc, r) => {\n          acc[r.prop] = _.get(resources[r.prop], 'data');\n          return acc;\n        }, {})\n      : {};\n    const additionalResourcesLoaded = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .every((r) => _.get(resources[r.prop], 'loaded'))\n      : true;\n    const additionalResourcesLoadError = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .some((r) => !!_.get(resources[r.prop], 'loadError'))\n      : false;\n\n    const dynamicResources = useK8sWatchResources(additionalDynamicResources || {});\n    const dynamicResourcesError = Object.values(dynamicResources).find((r) => r.loadError)\n      ?.loadError;\n    const dynamicResourcesLoaded = Object.keys(dynamicResources).every(\n      (key) => dynamicResources[key].loaded,\n    );\n\n    return (\n      <StackItem>\n        <ResourceInventoryItem\n          kind={model}\n          isLoading={\n            !projectName || !resourceLoaded || !additionalResourcesLoaded || !dynamicResourcesLoaded\n          }\n          namespace={projectName}\n          error={!!resourceLoadError || additionalResourcesLoadError || dynamicResourcesError}\n          resources={resourceData}\n          additionalResources={additionalResourcesData}\n          mapper={mapper}\n          dataTest=\"resource-inventory-item\"\n        />\n      </StackItem>\n    );\n  },\n);\n\nexport const InventoryCard = () => {\n  const itemExtensions = useExtensions<ProjectDashboardInventoryItem>(\n    isProjectDashboardInventoryItem,\n  );\n  const [dynamicItemExtensions] = useResolvedExtensions<DynamicProjectDashboardInventoryItem>(\n    isDynamicProjectDashboardInventoryItem,\n  );\n  const [inventoryExtensions] = useResolvedExtensions<ProjectOverviewInventoryItem>(\n    isProjectOverviewInventoryItem,\n  );\n\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    namespace: projectName,\n    verb: 'list',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"inventory-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Inventory')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Stack hasGutter>\n          <ProjectInventoryItem projectName={projectName} model={DeploymentModel} />\n          <ProjectInventoryItem projectName={projectName} model={DeploymentConfigModel} />\n          <ProjectInventoryItem projectName={projectName} model={StatefulSetModel} />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PodModel}\n            mapper={getPodStatusGroups}\n          />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PersistentVolumeClaimModel}\n            mapper={getPVCStatusGroups}\n          />\n          <ProjectInventoryItem projectName={projectName} model={ServiceModel} />\n          <ProjectInventoryItem projectName={projectName} model={RouteModel} />\n          <ProjectInventoryItem projectName={projectName} model={ConfigMapModel} />\n          {canListSecrets && <ProjectInventoryItem projectName={projectName} model={SecretModel} />}\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={VolumeSnapshotModel}\n            mapper={getVSStatusGroups}\n          />\n          {itemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalResources={item.properties.additionalResources}\n            />\n          ))}\n          {dynamicItemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalDynamicResources={item.properties.additionalResources}\n            />\n          ))}\n          {inventoryExtensions.map(({ uid, properties: { component: Component } }) => (\n            <ErrorBoundary key={uid}>\n              <StackItem>\n                <Component projectName={projectName} />\n              </StackItem>\n            </ErrorBoundary>\n          ))}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\ntype ProjectInventoryItemProps = DashboardItemProps & {\n  projectName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n  additionalResources?: FirehoseResource[];\n  additionalDynamicResources?: WatchK8sResources<{\n    [key: string]: K8sResourceCommon[];\n  }>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsOverviewResourceActivity as DynamicDashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity as isDynamicDashboardsOverviewResourceActivity,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n      const [dynamicResourceActivityExtensions] = useResolvedExtensions<\n        DynamicDashboardsOverviewResourceActivity\n      >(isDynamicDashboardsOverviewResourceActivity);\n\n      const resourceActivities = React.useMemo(\n        () =>\n          [...resourceActivityExtensions, ...dynamicResourceActivityExtensions].filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, dynamicResourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: (a as DashboardsOverviewResourceActivity)?.properties?.loader,\n                  component: (a as ResolvedExtension<DynamicDashboardsOverviewResourceActivity>)\n                    ?.properties?.component,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  const { t } = useTranslation();\n  return (\n    <Card\n      data-test-id=\"activity-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={viewEvents} data-test=\"view-events-link\">\n                {t('public~View events')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Activity')}</CardTitle>\n      </CardHeader>\n      <ActivityBody className=\"co-project-dashboard__activity-body\">\n        <OngoingActivity projectName={projectName} />\n        <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n      </ActivityBody>\n    </Card>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport LauncherBody from '@console/shared/src/components/dashboard/launcher-card/LauncherBody';\nimport LauncherItem from '@console/shared/src/components/dashboard/launcher-card/LauncherItem';\nimport { ProjectDashboardContext } from './project-dashboard-context';\n\nexport const LauncherCard: React.FC = () => {\n  const { namespaceLinks } = React.useContext(ProjectDashboardContext);\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"launcher-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Launcher')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <LauncherBody>\n          {_.sortBy(namespaceLinks, 'spec.text').map((nl) => (\n            <LauncherItem key={nl.metadata.uid} consoleLink={nl} />\n          ))}\n        </LauncherBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport './launcher-card.scss';\n\nconst LauncherBody: React.FC = ({ children }) => (\n  <div className=\"co-launcher-card__body\">{children}</div>\n);\n\nexport default LauncherBody;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nconst LauncherItem: React.FC<LauncherItemProps> = ({ consoleLink }) => (\n  <ExternalLink\n    additionalClassName=\"co-launcher-card__item\"\n    href={consoleLink.spec.href}\n    text={consoleLink.spec.text}\n    dataTestID=\"launcher-item\"\n  />\n);\n\nexport default LauncherItem;\n\ntype LauncherItemProps = {\n  consoleLink: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport ResourceQuotaBody from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody';\nimport ResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem';\nimport AppliedClusterResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceQuotaKind, AppliedClusterResourceQuotaKind } from '../../../module/k8s';\n\nexport const ResourceQuotaCard = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n\n  const [quotas, rqLoaded, rqLoadError] = useK8sWatchResource<ResourceQuotaKind[]>({\n    groupVersionKind: {\n      kind: ResourceQuotaModel.kind,\n      version: ResourceQuotaModel.apiVersion,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const [clusterQuotas, acrqLoaded, acrqLoadError] = useK8sWatchResource<\n    AppliedClusterResourceQuotaKind[]\n  >({\n    groupVersionKind: {\n      kind: AppliedClusterResourceQuotaModel.kind,\n      version: AppliedClusterResourceQuotaModel.apiVersion,\n      group: AppliedClusterResourceQuotaModel.apiGroup,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"resource-quotas-card\">\n      <CardHeader>\n        <CardTitle>{t('public~ResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody error={!!rqLoadError} isLoading={!rqLoaded}>\n          {quotas.length ? (\n            <Stack hasGutter>\n              {quotas.map((rq) => (\n                <StackItem key={rq.metadata.uid}>\n                  <ResourceQuotaItem resourceQuota={rq} />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n      <CardHeader>\n        <CardTitle>{t('public~AppliedClusterResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody\n          error={!!acrqLoadError}\n          isLoading={!acrqLoaded}\n          noText={t('public~No AppliedClusterResourceQuotas')}\n        >\n          {clusterQuotas.length ? (\n            <Stack hasGutter>\n              {clusterQuotas.map((cq) => (\n                <StackItem key={cq.metadata.uid}>\n                  <AppliedClusterResourceQuotaItem\n                    resourceQuota={cq}\n                    namespace={obj.metadata.name}\n                  />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './resource-quota-card.scss';\n\nconst ResourceQuotaBody: React.FC<ResourceQuotaBodyProps> = ({\n  error,\n  isLoading,\n  noText,\n  children,\n}) => {\n  let body: React.ReactNode;\n  const { t } = useTranslation();\n  if (error) {\n    body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n  } else if (isLoading) {\n    body = <div className=\"skeleton-quota\" />;\n  } else if (!React.Children.count(children)) {\n    body = <div className=\"text-secondary\">{noText || t('console-shared~No ResourceQuotas')}</div>;\n  }\n\n  return <>{body || children}</>;\n};\n\nexport default ResourceQuotaBody;\n\ntype ResourceQuotaBodyProps = {\n  error: boolean;\n  isLoading: boolean;\n  noText?: string;\n};\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { ResourceQuotaModel } from '@console/internal/models';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst ResourceQuotaItem: React.FC<ResourceQuotaItemProps> = ({ resourceQuota }) => {\n  const resources = Object.keys(resourceQuota.status?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n\n  const scopes = resourceQuota.spec?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: ResourceQuotaModel.kind,\n                  version: ResourceQuotaModel.apiVersion,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={resourceQuota.metadata.namespace}\n                inline\n                truncate\n                dataTest=\"resource-quota-link\"\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary hard={resourceQuota.status?.hard} used={resourceQuota.status?.used} />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <ResourceQuotaCharts resourceQuota={resourceQuota} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResourceQuotaItem;\n\ntype ResourceQuotaItemProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { ClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ClusterResourceQuotaChartsProps = {\n  clusterResourceQuota: ClusterResourceQuotaKind;\n};\n\nconst ClusterResourceQuotaCharts = ({\n  clusterResourceQuota,\n}: ClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(clusterResourceQuota.status?.total?.hard ?? {}).map((resourceName) => {\n    const clusterHard = clusterResourceQuota.status.total.hard[resourceName];\n    const clusterUsed = clusterResourceQuota.status.total.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({\n      resourceName,\n      used: clusterUsed,\n      hard: clusterHard,\n    });\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Used',\n              y: percent,\n            },\n            {\n              x: 'Unused',\n              y: 100 - percent,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ClusterResourceQuotaCharts;\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst AppliedClusterResourceQuotaItem: React.FC<AppliedClusterResourceQuotaItemProps> = ({\n  resourceQuota,\n  namespace,\n}) => {\n  const resources = Object.keys(resourceQuota.status?.total?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n  const scopes = resourceQuota?.spec?.quota?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen: boolean) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: AppliedClusterResourceQuotaModel.kind,\n                  version: AppliedClusterResourceQuotaModel.apiVersion,\n                  group: AppliedClusterResourceQuotaModel.apiGroup,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={namespace}\n                inline\n                truncate\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary\n            hard={resourceQuota.status?.total?.hard}\n            used={resourceQuota.status?.total?.used}\n          />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <AppliedClusterResourceQuotaCharts\n            appliedClusterResourceQuota={resourceQuota}\n            namespace={namespace}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AppliedClusterResourceQuotaItem;\n\ntype AppliedClusterResourceQuotaItemProps = {\n  resourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n","import * as _ from 'lodash';\nimport { K8sResourceCondition, K8sResourceConditionStatus } from '@console/internal/module/k8s';\n\nexport const getConditionOKCount = (conditions: K8sResourceCondition[]): number =>\n  _.sumBy<any>(conditions, (c) => Number(c.status === K8sResourceConditionStatus.True));\n\nexport const getConditionString = (conditions: K8sResourceCondition[]): string =>\n  `${getConditionOKCount(conditions)} OK / ${_.size(conditions)}`;\n\nexport const getConditionStats = (\n  conditions: K8sResourceCondition[],\n): { OKcount: number; conditionsSize: number } => {\n  return {\n    OKcount: getConditionOKCount(conditions),\n    conditionsSize: _.size(conditions),\n  };\n};\n\nexport const getCondition = (\n  conditions: K8sResourceCondition[],\n  type: K8sResourceCondition['type'],\n): K8sResourceCondition | undefined => _.find(conditions, (c) => c.type === type);\n","import {\n  RevisionModel,\n  ServiceModel,\n  RouteModel,\n  EventingBrokerModel,\n  EventingTriggerModel,\n  EventingSubscriptionModel,\n} from '../models';\n\nexport const serverlessTab = (kind: string) => {\n  switch (kind) {\n    case ServiceModel.kind:\n    case 'EventSource':\n      return '';\n    case RevisionModel.kind:\n      return 'revisions';\n    case RouteModel.kind:\n      return 'routes';\n    case EventingBrokerModel.kind:\n      return 'brokers';\n    case EventingTriggerModel.kind:\n      return 'triggers';\n    case EventingSubscriptionModel.kind:\n      return 'subscriptions';\n    case 'Channel':\n      return 'channels';\n    default:\n      return null;\n  }\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { DeploymentModel } from '@console/internal/models';\nimport {\n  apiVersionForModel,\n  K8sResourceCommon,\n  K8sResourceKind,\n} from '@console/internal/module/k8s';\nimport {\n  getReplicaSetsForResource,\n  PodControllerOverviewItem,\n  useDeepCompareMemoize,\n  useDebounceCallback,\n} from '@console/shared';\n\nexport const usePodsForRevisions = (\n  revisionIds: string | string[],\n  namespace: string,\n): { loaded: boolean; loadError: string; pods: PodControllerOverviewItem[] } => {\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const [pods, setPods] = React.useState<PodControllerOverviewItem[]>([]);\n  const revisions = useDeepCompareMemoize(Array.isArray(revisionIds) ? revisionIds : [revisionIds]);\n  const watchedResources = React.useMemo(\n    () => ({\n      deployments: {\n        isList: true,\n        kind: 'Deployment',\n        namespace,\n      },\n      replicaSets: {\n        isList: true,\n        kind: 'ReplicaSet',\n        namespace,\n      },\n      pods: {\n        isList: true,\n        kind: 'Pod',\n        namespace,\n      },\n    }),\n    [namespace],\n  );\n\n  const resources = useK8sWatchResources<{ [key: string]: K8sResourceCommon[] }>(watchedResources);\n\n  const updateResults = React.useCallback(\n    (updatedResources) => {\n      const errorKey = Object.keys(updatedResources).find((key) => updatedResources[key].loadError);\n      if (errorKey) {\n        setLoadError(updatedResources[errorKey].loadError?.message);\n        return;\n      }\n      if (\n        Object.keys(updatedResources).length > 0 &&\n        Object.keys(updatedResources).every((key) => updatedResources[key].loaded)\n      ) {\n        const revisionsPods = revisions.reduce((acc, uid) => {\n          const associatedDeployment = _.filter(\n            updatedResources?.deployments?.data,\n            ({ metadata: { ownerReferences } }) =>\n              _.some(ownerReferences, {\n                uid,\n                controller: true,\n              }),\n          );\n          if (associatedDeployment?.[0]) {\n            const depObj: K8sResourceKind = {\n              ...associatedDeployment[0],\n              apiVersion: apiVersionForModel(DeploymentModel),\n              kind: DeploymentModel.kind,\n            };\n            acc.push(...getReplicaSetsForResource(depObj, updatedResources));\n          }\n          return acc;\n        }, []);\n        setLoaded(true);\n        setLoadError(null);\n        setPods(revisionsPods);\n      }\n    },\n    [revisions],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(updateResults, 250);\n\n  React.useEffect(() => {\n    debouncedUpdateResources(resources);\n  }, [debouncedUpdateResources, resources]);\n\n  return useDeepCompareMemoize({ loaded, loadError, pods });\n};\n","import {\n  ResolvedExtension,\n  useResolvedExtensions,\n  AddAction,\n  isAddAction,\n} from '@console/dynamic-plugin-sdk';\n\ninterface AddPage {\n  disabledActions?: string[];\n}\n\nexport const getDisabledAddActions = (): string[] | undefined => {\n  if (window.SERVER_FLAGS.addPage) {\n    const addPage: AddPage = JSON.parse(window.SERVER_FLAGS.addPage);\n    const { disabledActions } = addPage;\n    return disabledActions;\n  }\n  return undefined;\n};\n\nexport const useAddActionExtensions = (): [ResolvedExtension<AddAction>[], boolean, boolean] => {\n  const [allAddActionExtensions, resolved] = useResolvedExtensions<AddAction>(isAddAction);\n  const disabledActions = getDisabledAddActions();\n  const allAddActionsDisabled = disabledActions?.length === allAddActionExtensions?.length;\n\n  if (allAddActionExtensions && disabledActions && disabledActions.length > 0) {\n    const filteredAddActionExtensions = allAddActionExtensions.filter(\n      (addActionExtension) => !disabledActions.includes(addActionExtension.properties.id),\n    );\n    return [filteredAddActionExtensions, resolved, allAddActionsDisabled];\n  }\n\n  return [allAddActionExtensions, resolved, allAddActionsDisabled];\n};\n","import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RevisionModel } from '../../models';\nimport RevisionList from './RevisionList';\n\nconst RevisionsPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { customData } = props;\n  return (\n    <ListPage\n      {...props}\n      canCreate={false}\n      kind={referenceForModel(RevisionModel)}\n      ListComponent={RevisionList}\n      selector={\n        customData?.selectResourcesForName\n          ? { matchLabels: { 'serving.knative.dev/service': customData.selectResourcesForName } }\n          : null\n      }\n    />\n  );\n};\n\nexport default RevisionsPage;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core/dist/dynamic/components/ClipboardCopy';\nimport { ExternalLinkWithCopy } from '@console/internal/components/utils';\n\nexport type RoutesUrlLinkProps = {\n  urls: string[];\n  title?: string;\n};\n\nconst RoutesUrlLink: React.FC<RoutesUrlLinkProps> = ({ urls = [], title }) =>\n  urls.length > 0 && (\n    <>\n      {title && <span className=\"text-muted\">{title}: </span>}\n      {urls.map((url) =>\n        url?.endsWith('svc.cluster.local') ? (\n          <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n            {url}\n          </ClipboardCopy>\n        ) : (\n          <ExternalLinkWithCopy\n            key={url}\n            link={url}\n            text={url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        ),\n      )}\n    </>\n  );\n\nexport default RoutesUrlLink;\n","import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RouteModel } from '../../models';\nimport RouteList from './RouteList';\n\nconst RoutesPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { customData } = props;\n  return (\n    <ListPage\n      {...props}\n      canCreate={false}\n      kind={referenceForModel(RouteModel)}\n      ListComponent={RouteList}\n      selector={\n        customData?.selectResourcesForName\n          ? { matchLabels: { 'serving.knative.dev/service': customData.selectResourcesForName } }\n          : null\n      }\n    />\n  );\n};\n\nexport default RoutesPage;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  'pf-m-hidden pf-m-visible-on-sm', // service\n  'pf-m-hidden pf-m-visible-on-lg', // created\n  'pf-m-hidden pf-m-visible-on-xl', // conditions\n  'pf-m-hidden pf-m-visible-on-xl', // ready\n  'pf-m-hidden pf-m-visible-on-2xl', // reason\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { DetailsForKind } from '@console/internal/components/default-resource';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { navFactory } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport {\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n  ActionMenu,\n} from '@console/shared';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\n\nconst RevisionDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const location = useLocation();\n  const params = useParams();\n  const { kindObj } = props;\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [navFactory.details(DetailsForKind), navFactory.editYaml()];\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'serving',\n    serverlessTab(kindObj.kind),\n    undefined,\n    isAdminPerspective,\n  );\n\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n    />\n  );\n};\n\nexport default RevisionDetailsPage;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { RoutesDetailsProps } from '@console/internal/components/routes';\nimport {\n  DetailsItem,\n  detailsPage,\n  ExternalLinkWithCopy,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport {\n  ActionMenu,\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n} from '@console/shared';\nimport { PRIVATE_KNATIVE_SERVING_LABEL } from '../../const';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\n\nconst RouteDetails: React.FC<RoutesDetailsProps> = ({ obj: route }) => {\n  const { t } = useTranslation();\n  const isPrivateKSVC =\n    route?.metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] === 'cluster-local';\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Route details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={route} />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl>\n              <DetailsItem\n                label={t('knative-plugin~Location')}\n                obj={route}\n                path=\"status.url\"\n                hideEmpty\n              >\n                {isPrivateKSVC ? (\n                  <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n                    {route?.status?.url}\n                  </ClipboardCopy>\n                ) : (\n                  <ExternalLinkWithCopy\n                    link={route?.status?.url}\n                    text={route?.status?.url}\n                    additionalClassName=\"co-external-link--block\"\n                  />\n                )}\n              </DetailsItem>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Conditions')} />\n        <Conditions conditions={route?.status?.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst RouteDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const { kindObj } = props;\n  const params = useParams();\n  const location = useLocation();\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [navFactory.details(detailsPage(RouteDetails)), navFactory.editYaml()];\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'serving',\n    serverlessTab(kindObj.kind),\n    undefined,\n    isAdminPerspective,\n  );\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n    />\n  );\n};\n\nexport default RouteDetailsPage;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  'pf-m-hidden pf-m-visible-on-sm', // url\n  'pf-m-hidden pf-m-visible-on-lg', // created\n  'pf-m-hidden pf-m-visible-on-xl', // conditions\n  'pf-m-hidden pf-m-visible-on-2xl', // traffic\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { ServiceTypeValue } from '../../types';\n\nexport const KnativeServiceTypeContext = React.createContext(ServiceTypeValue.Service);\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { SidebarSectionHeading, useAccessReview } from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel, RevisionModel } from '../../models';\nimport { setTrafficDistributionModal } from '../modals';\nimport RevisionsOverviewListItem from './RevisionsOverviewListItem';\nimport './RevisionsOverviewList.scss';\n\nexport type RevisionsOverviewListProps = {\n  revisions: K8sResourceKind[];\n  service: K8sResourceKind;\n  hideSectionHeading?: boolean;\n};\n\nconst MAX_REVISIONS: number = 3;\n\nconst RevisionsOverviewList: React.FC<RevisionsOverviewListProps> = ({\n  revisions,\n  service,\n  hideSectionHeading,\n}) => {\n  const { t } = useTranslation();\n  const canSetTrafficDistribution = useAccessReview({\n    group: ServiceModel.apiGroup,\n    resource: ServiceModel.plural,\n    namespace: service.metadata.namespace,\n    verb: 'update',\n  });\n\n  const namespace = service.metadata?.namespace;\n  const traffic = service.status?.traffic;\n  const name = service.metadata?.name;\n\n  const filteredRevisions: K8sResourceKind[] = React.useMemo(() => {\n    if (!revisions || !revisions.length) {\n      return [];\n    }\n    const [revWithTraffic, revWithoutTraffic] = _.partition(revisions, (element) => {\n      return traffic ? _.find(traffic, { revisionName: element.metadata?.name }) : false;\n    }).map((element) => _.sortBy(element, ['metadata.creationTimestamp']));\n    return revWithTraffic.length < MAX_REVISIONS\n      ? _.concat(revWithTraffic, revWithoutTraffic.slice(0, MAX_REVISIONS - revWithTraffic.length))\n      : revWithTraffic;\n  }, [revisions, traffic]);\n\n  const getRevisionsLink = () => {\n    const url = `/search/ns/${namespace}`;\n    const searchQuery = `serving.knative.dev/service=${name}`;\n    const params = new URLSearchParams();\n    params.append('kind', referenceForModel(RevisionModel));\n    params.append('q', searchQuery);\n    return `${url}?${params.toString()}`;\n  };\n\n  return (\n    <>\n      {!hideSectionHeading && (\n        <SidebarSectionHeading\n          text={t('knative-plugin~Revisions')}\n          className=\"revision-overview-list\"\n        >\n          {revisions?.length > MAX_REVISIONS && (\n            <Link className=\"sidebar__section-view-all\" to={getRevisionsLink()}>\n              {t('knative-plugin~View all ({{revLength}})', { revLength: revisions.length })}\n            </Link>\n          )}\n\n          {canSetTrafficDistribution && (\n            <Button\n              variant=\"secondary\"\n              onClick={() => setTrafficDistributionModal({ obj: service })}\n              isDisabled={!(revisions && revisions.length)}\n            >\n              {t('knative-plugin~Set traffic distribution')}\n            </Button>\n          )}\n        </SidebarSectionHeading>\n      )}\n      {_.isEmpty(revisions) ? (\n        <span className=\"text-muted\">\n          {t('knative-plugin~No Revisions found for this resource.')}\n        </span>\n      ) : (\n        <ul className=\"list-group\">\n          {_.map(filteredRevisions, (revision) => (\n            <RevisionsOverviewListItem\n              key={revision.metadata.uid}\n              revision={revision}\n              service={service}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default RevisionsOverviewList;\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { K8sResourceKind, OwnerReference, referenceForModel } from '@console/internal/module/k8s';\nimport { PodStatus } from '@console/shared';\nimport { RevisionModel } from '../../models';\nimport { getTrafficByRevision } from '../../utils/get-knative-resources';\nimport { usePodsForRevisions } from '../../utils/usePodsForRevisions';\nimport RoutesUrlLink from './RoutesUrlLink';\n\nimport './RevisionsOverviewListItem.scss';\n\nexport type RevisionsOverviewListItemProps = {\n  revision: K8sResourceKind;\n  service: K8sResourceKind;\n};\n\nconst RevisionsOverviewListItem: React.FC<RevisionsOverviewListItemProps> = ({\n  revision,\n  service,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = revision;\n  const { pods } = usePodsForRevisions(revision.metadata.uid, namespace);\n  const current = pods?.[0];\n  const deploymentData = current?.obj?.metadata.ownerReferences?.[0] || ({} as OwnerReference);\n  const availableReplicas = current?.obj?.status?.availableReplicas || '0';\n  const { urls = [], percent: trafficPercent } = getTrafficByRevision(name, service);\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n        <div className=\"col-sm-8 col-xs-9\">\n          <ResourceLink kind={referenceForModel(RevisionModel)} name={name} namespace={namespace} />\n        </div>\n        {trafficPercent && (\n          <span className=\"col-sm-4 col-xs-3 pf-v5-u-text-align-right\">{trafficPercent}</span>\n        )}\n      </div>\n      {deploymentData.name && (\n        <div className=\"odc-revision-deployment-list\">\n          <div className=\"row\">\n            <div className=\"col-sm-8 col-xs-9\">\n              <ResourceLink\n                kind={deploymentData.kind}\n                name={deploymentData.name}\n                namespace={namespace}\n              />\n            </div>\n            <div className=\"col-sm-4 col-xs-3\">\n              <div className=\"odc-revision-deployment-list__pod\">\n                <PodStatus\n                  standalone\n                  data={current ? current.pods : []}\n                  size={25}\n                  innerRadius={8}\n                  outerRadius={12}\n                  title={availableReplicas}\n                  titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n                  showTooltip={false}\n                />\n              </div>\n            </div>\n          </div>\n          {urls.length > 0 && (\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <RoutesUrlLink urls={urls} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default RevisionsOverviewListItem;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { ListPage } from '@console/internal/components/factory';\nimport { RowFilter } from '@console/internal/components/filter-toolbar';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel } from '../../models';\nimport { isServerlessFunction } from '../../topology/knative-topology-utils';\nimport { ServiceKind, ServiceTypeValue } from '../../types';\nimport ServiceList from './ServiceList';\n\nconst ServicesPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { t } = useTranslation();\n\n  const filterReducer = (service): ServiceTypeValue => {\n    if (isServerlessFunction(service)) return ServiceTypeValue.Function;\n    return ServiceTypeValue.Service;\n  };\n\n  const filters: RowFilter<ServiceKind>[] = [\n    {\n      type: 'type',\n      filterGroupName: t('knative-plugin~Type'),\n      items: [\n        { id: ServiceTypeValue.Function, title: t('knative-plugin~Functions') },\n        { id: ServiceTypeValue.Service, title: t('knative-plugin~Non-functions') },\n      ],\n      reducer: filterReducer,\n      filter: (filterValue, service) => {\n        const functionIndicator = isServerlessFunction(service)\n          ? ServiceTypeValue.Function\n          : ServiceTypeValue.Service;\n        return !filterValue?.selected?.length || filterValue?.selected.includes(functionIndicator);\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{t('knative-plugin~Services')}</title>\n      </Helmet>\n      <ListPage\n        canCreate\n        {...props}\n        kind={referenceForModel(ServiceModel)}\n        ListComponent={ServiceList}\n        rowFilters={filters}\n      />\n    </>\n  );\n};\n\nexport default ServicesPage;\n","import * as classNames from 'classnames';\nimport { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm'), // url\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // conditions\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'), // ready\n  classNames('pf-m-hidden', 'pf-m-visible-on-2xl'), // reason\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // revision\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'), // created\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport RevisionHeader from './RevisionHeader';\nimport RevisionRow from './RevisionRow';\n\nconst RevisionList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Revisions')}\n      Header={RevisionHeader(t)}\n      Row={RevisionRow}\n      virtualize\n    />\n  );\n};\n\nexport default RevisionList;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './revision-table';\n\nconst RevisionHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~Service'),\n      sortField: 'metadata.labels[\"serving.knative.dev/service\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Ready'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('knative-plugin~Reason'),\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[7] },\n    },\n  ];\n};\n\nexport default RevisionHeader;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp } from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { ClampedText, LazyActionMenu } from '@console/shared';\nimport { RevisionModel, ServiceModel } from '../../models';\nimport { RevisionKind, ConditionTypes } from '../../types';\nimport { getConditionString, getCondition } from '../../utils/condition-utils';\nimport { tableColumnClasses } from './revision-table';\n\nconst revisionReference = referenceForModel(RevisionModel);\nconst serviceReference = referenceForModel(ServiceModel);\n\nconst RevisionRow: React.FC<RowFunctionArgs<RevisionKind>> = ({ obj }) => {\n  const readyCondition = obj.status\n    ? getCondition(obj.status.conditions, ConditionTypes.Ready)\n    : null;\n  const service = _.get(obj.metadata, `labels[\"serving.knative.dev/service\"]`);\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={revisionReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[2], 'co-break-word')}>\n        {service && (\n          <ResourceLink\n            kind={serviceReference}\n            name={service}\n            namespace={obj.metadata.namespace}\n            title={service}\n          />\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.status ? getConditionString(obj.status.conditions) : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {(readyCondition && readyCondition.status) || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        {(readyCondition?.message && (\n          <ClampedText lineClamp={5}>{readyCondition?.message}</ClampedText>\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RevisionRow;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { PodsPage } from '@console/internal/components/pod';\nimport {\n  ContainerTable,\n  DetailsItem,\n  ExternalLink,\n  ResourceSummary,\n  SectionHeading,\n  navFactory,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel, K8sKind } from '@console/internal/module/k8s';\nimport {\n  ActionMenu,\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n} from '@console/shared';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { isServerlessFunction } from '../../topology/knative-topology-utils';\nimport { RevisionKind, ServiceKind, ServiceTypeValue } from '../../types';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\nimport { KnativeServiceTypeContext } from '../functions/ServiceTypeContext';\nimport RevisionsOverviewList from '../overview/RevisionsOverviewList';\nimport { RevisionsPage } from '../revisions';\nimport { RoutesPage } from '../routes';\n\ntype FunctionsPodsProps = {\n  obj: K8sResourceKind;\n};\n\nconst ServiceDetails: React.FC<{ obj: ServiceKind }> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [revisions, revisionLoaded, revisionErrorLoad] = useK8sWatchResource<RevisionKind[]>({\n    kind: referenceForModel(RevisionModel),\n    namespace: obj.metadata.namespace,\n    isList: true,\n    selector: { matchLabels: { 'serving.knative.dev/service': obj.metadata.name } },\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary\n              resource={obj}\n              podSelector=\"spec.podSelector\"\n              showNodeSelector={false}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <dl>\n              {isServerlessFunction(obj) && (\n                <DetailsItem label={t('knative-plugin~Type')} obj={obj}>\n                  {t('knative-plugin~Function')}\n                </DetailsItem>\n              )}\n              {obj?.status?.url && (\n                <DetailsItem label={t('knative-plugin~URL')} obj={obj} path=\"status.url\">\n                  <ExternalLink\n                    href={obj.status.url}\n                    additionalClassName=\"co-external-link--block\"\n                    text={obj.status.url}\n                  />\n                </DetailsItem>\n              )}\n              {revisions && revisionLoaded && !revisionErrorLoad && (\n                <DetailsItem label={t('knative-plugin~Revisions')} obj={obj} path=\"status.traffic\">\n                  <RevisionsOverviewList revisions={revisions} service={obj} hideSectionHeading />\n                </DetailsItem>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Containers')} />\n        <ContainerTable containers={obj.spec.template.spec.containers} />\n      </div>\n      {_.isArray(obj?.status?.conditions) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('knative-plugin~Conditions')} />\n          <Conditions conditions={obj.status.conditions} />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst FunctionsPods: React.FC<FunctionsPodsProps> = ({ obj }) => (\n  <PodsPage\n    showTitle={false}\n    selector={{ matchLabels: { 'serving.knative.dev/service': obj.metadata.name } }}\n    showNamespaceOverride\n    canCreate={false}\n    namespace={obj.metadata.namespace}\n  />\n);\n\nconst ServiceDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const { t } = useTranslation();\n  const serviceTypeValue = React.useContext(KnativeServiceTypeContext);\n  const { kindObj } = props;\n  const params = useParams();\n  const location = useLocation();\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [\n    navFactory.details(ServiceDetails),\n    navFactory.editYaml(),\n    {\n      href: RevisionModel.plural,\n      // t('knative-plugin~Revisions')\n      nameKey: 'knative-plugin~Revisions',\n      component: RevisionsPage,\n      pageData: {\n        kind: referenceForModel(RevisionModel),\n        namespace: params.ns,\n        showTitle: false,\n        name: '',\n      },\n    },\n    {\n      href: RouteModel.plural,\n      // t('knative-plugin~Routes')\n      nameKey: 'knative-plugin~Routes',\n      component: RoutesPage,\n      pageData: {\n        kind: referenceForModel(RouteModel),\n        namespace: params.ns,\n        showTitle: false,\n        name: '',\n      },\n    },\n    navFactory.pods(FunctionsPods),\n  ];\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    serviceTypeValue === ServiceTypeValue.Function ? 'functions' : 'serving',\n    serverlessTab(kindObj.kind),\n    serviceTypeValue === ServiceTypeValue.Function ? t('knative-plugin~Functions') : undefined,\n    serviceTypeValue === ServiceTypeValue.Function ? true : isAdminPerspective,\n    serviceTypeValue === ServiceTypeValue.Function ? t('knative-plugin~Function') : undefined,\n  );\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n      customData={{ selectResourcesForName: params.name }}\n    />\n  );\n};\n\nexport default ServiceDetailsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport RouteHeader from './RouteHeader';\nimport RouteRow from './RouteRow';\n\nconst RouteList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Routes')}\n      Header={RouteHeader(t)}\n      Row={RouteRow}\n      virtualize\n    />\n  );\n};\n\nexport default RouteList;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './route-table';\n\nconst RouteHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~URL'),\n      sortField: 'status.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Traffic'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nexport default RouteHeader;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, ExternalLinkWithCopy } from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { LazyActionMenu } from '@console/shared/src';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { RouteKind } from '../../types';\nimport { getConditionString } from '../../utils/condition-utils';\nimport { tableColumnClasses } from './route-table';\n\nconst routeReference = referenceForModel(RouteModel);\nconst revisionReference = referenceForModel(RevisionModel);\n\nconst RouteRow: React.FC<RowFunctionArgs<RouteKind>> = ({ obj }) => {\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={routeReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {(obj.status && obj.status.url && (\n          <ExternalLinkWithCopy\n            link={obj.status.url}\n            text={obj.status.url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.status ? getConditionString(obj.status.conditions) : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {obj.status && obj.status.traffic\n          ? obj.status.traffic.map((t, i) => (\n              <React.Fragment key={t.revisionName}>\n                {i > 0 ? ', ' : ''}\n                {`${t.percent}% → `}\n                <ResourceLink\n                  namespace={obj.metadata.namespace}\n                  kind={revisionReference}\n                  name={t.revisionName}\n                  inline\n                  hideIcon\n                />\n              </React.Fragment>\n            ))\n          : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RouteRow;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './service-table';\n\nconst ServiceHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~URL'),\n      sortField: 'status.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Ready'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Reason'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: t('knative-plugin~Revision'),\n      sortField: 'metadata.generation',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[6] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[7] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[8] },\n    },\n  ];\n};\n\nexport default ServiceHeader;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\nimport { GreenCheckCircleIcon, RedExclamationCircleIcon } from '@console/shared/';\nimport { getConditionOKCount } from '../../utils/condition-utils';\n\nexport type GetConditionsForStatusProps = {\n  conditions: K8sResourceCondition[];\n};\n\nconst GetConditionsForStatus: React.FC<GetConditionsForStatusProps> = ({ conditions }) => {\n  const successCount = getConditionOKCount(conditions);\n  const failureCount = _.size(conditions) - successCount;\n  return (\n    <div>\n      <span>\n        {' '}\n        <GreenCheckCircleIcon /> {successCount} &nbsp;|&nbsp; <RedExclamationCircleIcon />{' '}\n        {failureCount}\n      </span>\n    </div>\n  );\n};\n\nexport default GetConditionsForStatus;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport ServiceHeader from './ServiceHeader';\nimport ServiceRow from './ServiceRow';\n\nconst ServiceList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Services')}\n      Header={ServiceHeader(t)}\n      Row={ServiceRow}\n      virtualize\n    />\n  );\n};\n\nexport default ServiceList;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, ExternalLink } from '@console/internal/components/utils';\nimport { referenceForModel, referenceFor } from '@console/internal/module/k8s';\nimport { LazyActionMenu, ClampedText } from '@console/shared';\nimport { ServiceModel } from '../../models';\nimport { ServiceKind, ConditionTypes } from '../../types';\nimport { getCondition } from '../../utils/condition-utils';\nimport GetConditionsForStatus from '../functions/GetConditionsForStatus';\nimport { tableColumnClasses } from './service-table';\n\nconst serviceReference = referenceForModel(ServiceModel);\n\nconst ServiceRow: React.FC<RowFunctionArgs<ServiceKind>> = ({ obj }) => {\n  const readyCondition = obj.status\n    ? getCondition(obj.status.conditions, ConditionTypes.Ready)\n    : null;\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={serviceReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[2], 'co-break-word')}>\n        {(obj.status && obj.status.url && (\n          <ExternalLink\n            href={obj.status.url}\n            additionalClassName=\"co-external-link--block\"\n            text={obj.status.url}\n          />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {obj.status ? <GetConditionsForStatus conditions={obj.status.conditions} /> : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {(readyCondition && readyCondition.status) || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {(readyCondition?.message && (\n          <ClampedText lineClamp={5}>{readyCondition?.message}</ClampedText>\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>{obj.metadata.generation || '-'}</TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default ServiceRow;\n","import * as React from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\nimport { breadcrumbsForGlobalConfig } from '@console/internal/components/cluster-settings/global-config';\nimport { DetailsForKind } from '@console/internal/components/default-resource';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { navFactory } from '@console/internal/components/utils';\nimport { K8sResourceKindReference, referenceForModel } from '@console/internal/module/k8s';\nimport { KnativeServingModel } from '../../models';\n\nconst knativeServingReference: K8sResourceKindReference = referenceForModel(KnativeServingModel);\n\nconst KnativeServingDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const pages = [navFactory.details(DetailsForKind), navFactory.editYaml()];\n  const location = useLocation();\n\n  return (\n    <DetailsPage\n      {...props}\n      kind={knativeServingReference}\n      pages={pages}\n      breadcrumbsFor={() =>\n        breadcrumbsForGlobalConfig(KnativeServingModel.label, location.pathname)\n      }\n    />\n  );\n};\n\nexport default KnativeServingDetailsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport { Page } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { MenuActions, MultiTabListPage } from '@console/shared';\nimport { ServiceModel, RevisionModel, RouteModel } from '../../../models';\nimport RevisionsPage from '../../revisions/RevisionsPage';\nimport RoutesPage from '../../routes/RoutesPage';\nimport ServicesPage from '../../services/ServicesPage';\n\nconst ServingListPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const [showTitle, canCreate] = [false, false];\n  const menuActions: MenuActions = {\n    service: { label: t('knative-plugin~Service'), model: ServiceModel },\n  };\n  const pages: Page[] = [\n    {\n      href: '',\n      // t('knative-plugin~Services')\n      nameKey: 'knative-plugin~Services',\n      component: ServicesPage,\n      pageData: {\n        kind: referenceForModel(ServiceModel),\n        canCreate,\n        namespace,\n        showTitle,\n      },\n    },\n    {\n      href: RevisionModel.plural,\n      // t('knative-plugin~Revisions')\n      nameKey: 'knative-plugin~Revisions',\n      component: RevisionsPage,\n      pageData: {\n        kind: referenceForModel(RevisionModel),\n        canCreate,\n        namespace,\n        showTitle,\n      },\n    },\n    {\n      href: RouteModel.plural,\n      // t('knative-plugin~Routes')\n      nameKey: 'knative-plugin~Routes',\n      component: RoutesPage,\n      pageData: {\n        kind: referenceForModel(RouteModel),\n        canCreate,\n        namespace,\n        showTitle,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <NamespaceBar />\n      <MultiTabListPage\n        pages={pages}\n        title={t('knative-plugin~Serving')}\n        menuActions={menuActions}\n        telemetryPrefix=\"Serving\"\n      />\n    </>\n  );\n};\n\nexport default ServingListPage;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport CreateProjectListPage, {\n  CreateAProjectButton,\n} from '@console/dev-console/src/components/projects/CreateProjectListPage';\nimport { ListPage } from '@console/internal/components/factory';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport { PageHeading } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ServiceModel } from '../../models';\nimport { ServiceTypeValue } from '../../types';\nimport { CreateActionDropdown } from './CreateActionDropdown';\nimport FunctionsList from './FunctionsList';\nimport { GettingStartedSection } from './GettingStartedSection';\nimport { KnativeServiceTypeContext } from './ServiceTypeContext';\n\nimport './FunctionsPage.scss';\n\nconst FunctionsListPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  return params.ns ? (\n    <KnativeServiceTypeContext.Provider value={ServiceTypeValue.Function}>\n      <Helmet>\n        <title>{t('knative-plugin~Functions')}</title>\n      </Helmet>\n      <div className=\"odc-functions-list-page__heading\">\n        <PageHeading title={t('knative-plugin~Functions')} />\n        <div className=\"co-m-nav-title\">\n          <CreateActionDropdown />\n        </div>\n      </div>\n      <GettingStartedSection />\n      <ListPage\n        showTitle={false}\n        {...props}\n        kind={referenceForModel(ServiceModel)}\n        ListComponent={FunctionsList}\n        selector={{ matchLabels: { 'function.knative.dev': 'true' } }}\n      />\n    </KnativeServiceTypeContext.Provider>\n  ) : (\n    <CreateProjectListPage title={t('knative-plugin~Functions')}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"knative-plugin\">\n          Select a Project to view its details\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(FunctionsListPage);\n\nconst FunctionsPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} hideApplications>\n      <PageContentsWithStartGuide {...props} />\n    </NamespacedPage>\n  );\n};\n\nexport default FunctionsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history, Dropdown } from '@console/internal/components/utils';\nimport { MenuAction, MenuActions, useActiveNamespace } from '@console/shared/src';\n\nexport const CreateActionDropdown: React.FC = () => {\n  const { t } = useTranslation();\n  const [activeNamespace] = useActiveNamespace();\n\n  const menuActions: MenuActions = {\n    importfromGit: {\n      label: t('knative-plugin~Import from Git'),\n      onSelection: () => `/serverless-function/ns/${activeNamespace}`,\n    },\n    functionsUsingSamples: {\n      label: t('knative-plugin~Samples'),\n      onSelection: () => `/samples/ns/${activeNamespace}?sampleType=Serverless function`,\n    },\n  };\n\n  const items = menuActions\n    ? Object.keys(menuActions).reduce<Record<string, string>>((acc, key) => {\n        const menuAction: MenuAction = menuActions[key];\n        const { label } = menuAction;\n        if (!label) return acc;\n\n        return {\n          ...acc,\n          [key]: label,\n        };\n      }, {})\n    : undefined;\n\n  const onSelectCreateAction = (actionName: string): void => {\n    const selectedMenuItem: MenuAction = menuActions[actionName];\n    let url: string;\n    if (selectedMenuItem.onSelection) {\n      url = selectedMenuItem.onSelection(actionName, selectedMenuItem, url);\n    }\n    if (url) {\n      history.push(url);\n    }\n  };\n\n  return (\n    <Dropdown\n      buttonClassName=\"pf-m-primary\"\n      menuClassName=\"pf-m-align-right-on-md\"\n      title={t('knative-plugin~Create function')}\n      noSelection\n      items={items}\n      onChange={onSelectCreateAction}\n      className=\"\"\n    />\n  );\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { history } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport { ServiceModel } from '../../models';\nimport { ServiceTypeValue } from '../../types';\nimport { ServiceDetailsPage } from '../services';\nimport { KnativeServiceTypeContext } from './ServiceTypeContext';\n\nconst FunctionDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = () => {\n  const params = useParams();\n  const handleNamespaceChange = (newNamespace: string): void => {\n    if (newNamespace === ALL_NAMESPACES_KEY) {\n      history.push('/functions/all-namespaces');\n    } else {\n      history.push('/functions/ns/:ns');\n    }\n  };\n  return (\n    <KnativeServiceTypeContext.Provider value={ServiceTypeValue.Function}>\n      <NamespacedPage\n        variant={NamespacedPageVariants.light}\n        hideApplications\n        onNamespaceChange={handleNamespaceChange}\n      >\n        <ServiceDetailsPage\n          kind={referenceForModel(ServiceModel)}\n          kindObj={ServiceModel}\n          name={params.name}\n          namespace={params.ns}\n        />\n      </NamespacedPage>\n    </KnativeServiceTypeContext.Provider>\n  );\n};\n\nexport default FunctionDetailsPage;\n","import * as React from 'react';\nimport { EmptyState, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport ServiceHeader from '../services/ServiceHeader';\nimport { CreateActionDropdown } from './CreateActionDropdown';\nimport FunctionRow from './FunctionRow';\n\nimport './FunctionsPage.scss';\n\nconst FunctionIcon = () => (\n  <img\n    className=\"odc-functions__empty-list__image\"\n    src={getImageForIconClass('icon-serverless-function')}\n    alt=\"\"\n  />\n);\n\nconst FunctionsList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  const EmptyMsg = () => (\n    <EmptyState variant={EmptyStateVariant.sm}>\n      <EmptyStateIcon icon={FunctionIcon} className=\"odc-functions__empty-list__icon\" />\n      <Title data-test=\"empty-state-title\" headingLevel=\"h3\">\n        {t('knative-plugin~No functions found')}\n      </Title>\n      <span>\n        {t(\n          'knative-plugin~Serverless functions are single-purpose, programmatic functions that are hosted on managed infrastructure.',\n        )}\n      </span>\n      <div className=\"odc-functions__empty-list__dropdown\">\n        <CreateActionDropdown />\n      </div>\n    </EmptyState>\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Functions')}\n      Header={ServiceHeader(t)}\n      Row={FunctionRow}\n      virtualize\n      EmptyMsg={EmptyMsg}\n    />\n  );\n};\n\nexport default FunctionsList;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport {\n  ResourceLink,\n  Timestamp,\n  ExternalLink,\n  ResourceIcon,\n} from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { LazyActionMenu, ClampedText } from '@console/shared';\nimport { ServiceModel } from '../../models';\nimport { ServiceKind, ConditionTypes } from '../../types';\nimport { getCondition } from '../../utils/condition-utils';\nimport { tableColumnClasses } from '../services/service-table';\nimport GetConditionsForStatus from './GetConditionsForStatus';\n\nconst serviceReference = referenceForModel(ServiceModel);\n\nconst FunctionRow: React.FC<RowFunctionArgs<ServiceKind>> = ({ obj }) => {\n  const readyCondition = obj.status\n    ? getCondition(obj.status.conditions, ConditionTypes.Ready)\n    : null;\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceIcon kind={serviceReference} />\n        <Link\n          to={`/functions/ns/${obj.metadata.namespace}/${obj.metadata.name}`}\n          title={obj.metadata.name}\n          className=\"co-resource-item__resource-name\"\n        >\n          {obj.metadata.name}\n        </Link>\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[2], 'co-break-word')}>\n        {(obj.status && obj.status.url && (\n          <ExternalLink\n            href={obj.status.url}\n            additionalClassName=\"co-external-link--block\"\n            text={obj.status.url}\n          />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        {obj.status ? <GetConditionsForStatus conditions={obj.status.conditions} /> : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {(readyCondition && readyCondition.status) || '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {(readyCondition?.message && (\n          <ClampedText lineClamp={5}>{readyCondition?.message}</ClampedText>\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>{obj.metadata.generation || '-'}</TableData>\n      <TableData className={tableColumnClasses[7]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[8]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default FunctionRow;\n","import * as React from 'react';\nimport { Card, CardBody, ExpandableSection } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useUserSettings } from '@console/shared';\nimport { FUNCTIONS_GETTING_STARTED_SECTION_USER_SETTING_KEY } from '../../const';\nimport { FunctionsDocsGettingStartedCard } from './FunctionsDocsGettingStartedCard';\nimport { QuickStartGettingStartedCard } from './QuickStartGettingStartedCard';\nimport { SampleGettingStartedCard } from './SamplesGettingStartedCard';\n\nimport './GettingStartedSection.scss';\n\nexport const GettingStartedSection: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [isGettingStartedSectionOpen, setIsGettingStartedSectionOpen] = useUserSettings<boolean>(\n    FUNCTIONS_GETTING_STARTED_SECTION_USER_SETTING_KEY,\n    true,\n  );\n\n  return (\n    <div className=\"odc-functions-getting-started-section\">\n      <ExpandableSection\n        toggleText={t('knative-plugin~Get started with functions')}\n        onToggle={() => setIsGettingStartedSectionOpen(!isGettingStartedSectionOpen)}\n        isExpanded={isGettingStartedSectionOpen}\n        displaySize=\"lg\"\n      >\n        <Card className=\"odc-functions-getting-started-grid\" data-test=\"getting-started\">\n          <span style={{ marginLeft: '16px' }}>\n            {t('knative-plugin~Choose how to create a function from below methods')}\n          </span>\n          <CardBody className=\"odc-functions-getting-started-grid__content\">\n            <SampleGettingStartedCard />\n            <QuickStartGettingStartedCard\n              featured={['serverless-functions-using-cli', 'serverless-functions-using-ide']}\n              title={t('knative-plugin~Create function with guided documentation')}\n              description={t(\n                'knative-plugin~Follow guided documentation to create serverless functions.',\n              )}\n            />\n            <FunctionsDocsGettingStartedCard />\n          </CardBody>\n        </Card>\n      </ExpandableSection>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { FlagIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport {\n  GettingStartedLink,\n  GettingStartedCard,\n} from '@console/shared/src/components/getting-started';\n\nexport const FunctionsDocsGettingStartedCard: React.FC = () => {\n  const { t } = useTranslation();\n  const links: GettingStartedLink[] = [];\n\n  links.push(\n    {\n      id: 'learn-more-about-functions-link',\n      title: t('knative-plugin~Learn more about Serverless Functions'),\n      href: 'https://www.youtube.com/watch?v=lNeieapAhnc',\n      external: true,\n    },\n    {\n      id: 'learn-more-about-containers-link',\n      title: t('knative-plugin~Learn more about Serverless Containers'),\n      href: 'https://www.youtube.com/watch?v=oKIHoDzw1RI',\n      external: true,\n    },\n    {\n      id: 'event-driven-apps-link',\n      title: t('knative-plugin~Explore how to create Event Driven Apps using OpenShift Serverless'),\n      href: 'https://access.redhat.com/documentation/en-us/red_hat_openshift_serverless/',\n      external: true,\n    },\n  );\n\n  return (\n    <GettingStartedCard\n      id=\"serverless-features\"\n      icon={<FlagIcon color=\"var(--co-global--palette--orange-400)\" aria-hidden=\"true\" />}\n      title={t('knative-plugin~Explore serverless functions')}\n      titleColor={'var(--co-global--palette--orange-400)'}\n      description={t(\n        'knative-plugin~Explore new features and resources within the serverless functions.',\n      )}\n      links={links}\n    />\n  );\n};\n","import * as React from 'react';\nimport {\n  AllQuickStartStates,\n  QuickStart,\n  QuickStartStatus,\n  getQuickStartStatus,\n} from '@patternfly/quickstarts';\nimport { RouteIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport QuickStartsLoader from '@console/app/src/components/quick-starts/loader/QuickStartsLoader';\nimport {\n  GettingStartedCard,\n  GettingStartedLink,\n} from '@console/shared/src/components/getting-started';\nimport { useQuickStartContext } from '@console/shared/src/hooks/useQuickStartContext';\n\ninterface QuickStartGettingStartedCardProps {\n  featured?: string[];\n  title?: string;\n  description?: string;\n  filter?: (QuickStart) => boolean;\n}\n\nconst orderQuickStarts = (\n  allQuickStarts: QuickStart[],\n  allQuickStartStates: AllQuickStartStates,\n  featured: string[],\n  filter?: (QuickStart) => boolean,\n): QuickStart[] => {\n  const orderedQuickStarts: QuickStart[] = [];\n\n  const filteredQuickStarts = filter ? allQuickStarts.filter(filter) : allQuickStarts;\n\n  const getStatus = (quickStart: QuickStart) =>\n    getQuickStartStatus(allQuickStartStates, quickStart.metadata.name);\n\n  // Prioritize featured quick starts and keep specified order\n  if (featured) {\n    const featuredQuickStartsByName = filteredQuickStarts.reduce((acc, q) => {\n      acc[q.metadata.name] = q;\n      return acc;\n    }, {} as Record<string, QuickStart>);\n    featured.forEach((quickStartName) => {\n      if (\n        featuredQuickStartsByName[quickStartName] &&\n        getStatus(featuredQuickStartsByName[quickStartName]) !== QuickStartStatus.COMPLETE\n      ) {\n        orderedQuickStarts.push(featuredQuickStartsByName[quickStartName]);\n      }\n    });\n  }\n\n  return orderedQuickStarts;\n};\n\nexport const QuickStartGettingStartedCard: React.FC<QuickStartGettingStartedCardProps> = ({\n  featured,\n  title,\n  description,\n  filter,\n}) => {\n  const { t } = useTranslation();\n  const { allQuickStartStates, setActiveQuickStart } = useQuickStartContext();\n\n  return (\n    <QuickStartsLoader>\n      {(quickStarts, loaded) => {\n        const orderedQuickStarts = orderQuickStarts(\n          quickStarts,\n          allQuickStartStates,\n          featured,\n          filter,\n        );\n        const slicedQuickStarts = orderedQuickStarts.slice(0, 2);\n\n        let links: GettingStartedLink[] = [];\n        if (loaded && slicedQuickStarts.length === 0) {\n          links.push(\n            {\n              id: 'serverless-functions-using-cli-link',\n              title: t('knative-plugin~Create Serverless functions using CLI'),\n              href:\n                'https://access.redhat.com/documentation/en-us/red_hat_openshift_serverless/1.30/html/functions/index',\n              external: true,\n            },\n            {\n              id: 'serverless-functions-using-ide-link',\n              href:\n                'https://github.com/redhat-developer/vscode-openshift-tools/blob/main/README.serverlessfn.md',\n              title: t('knative-plugin~Create Serverless functions using IDE'),\n              external: true,\n            },\n          );\n        } else {\n          links = loaded\n            ? slicedQuickStarts.map((quickStart: QuickStart) => ({\n                id: quickStart.metadata.name,\n                title: quickStart.spec.displayName,\n                onClick: () => {\n                  setActiveQuickStart(quickStart.metadata.name, quickStart.spec.tasks.length);\n                },\n              }))\n            : featured?.map((name) => ({\n                id: name,\n                loading: true,\n              }));\n        }\n        return (\n          <GettingStartedCard\n            id=\"quick-start\"\n            icon={<RouteIcon color=\"var(--co-global--palette--purple-600)\" aria-hidden=\"true\" />}\n            title={title || t('knative-plugin~Build with guided documentation')}\n            titleColor={'var(--co-global--palette--purple-700)'}\n            description={\n              description ||\n              t(\n                'knative-plugin~Follow guided documentation to build applications and familiarize yourself with key features.',\n              )\n            }\n            links={links}\n          />\n        );\n      }}\n    </QuickStartsLoader>\n  );\n};\n","import * as React from 'react';\nimport { CatalogIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\nimport { SAMPLE_CATALOG_TYPE_ID } from '@console/dev-console/src/const';\nimport { getDisabledAddActions } from '@console/dev-console/src/utils/useAddActionExtensions';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport {\n  CatalogServiceProvider,\n  isCatalogTypeEnabled,\n  ALL_NAMESPACES_KEY,\n  useActiveNamespace,\n} from '@console/shared';\nimport {\n  GettingStartedLink,\n  GettingStartedCard,\n} from '@console/shared/src/components/getting-started';\n\ninterface SampleGettingStartedCardProps {\n  featured?: string[];\n}\n\nconst orderCatalogItems = (allCatalogItems: CatalogItem[], featured: string[]): CatalogItem[] => {\n  const orderedCatalogItems: CatalogItem[] = [];\n\n  const isNotFeatured = (catalogItem: CatalogItem) => !featured?.includes(catalogItem.uid);\n\n  // Prioritze featured catalog items\n  if (featured) {\n    const featuredQuickStartsByName = allCatalogItems.reduce((acc, ci) => {\n      acc[ci.uid] = ci;\n      return acc;\n    }, {} as Record<string, CatalogItem>);\n    featured.forEach((uid) => {\n      if (featuredQuickStartsByName[uid]) {\n        orderedCatalogItems.push(featuredQuickStartsByName[uid]);\n      }\n    });\n  }\n\n  // All all other catalog items\n  orderedCatalogItems.push(...allCatalogItems.filter(isNotFeatured));\n\n  return orderedCatalogItems;\n};\n\nexport const SampleGettingStartedCard: React.FC<SampleGettingStartedCardProps> = ({\n  featured = [],\n}) => {\n  const { t } = useTranslation();\n  const [activeNamespace] = useActiveNamespace();\n  const isSampleTypeEnabled = isCatalogTypeEnabled(SAMPLE_CATALOG_TYPE_ID);\n\n  const disabledAddActions = getDisabledAddActions();\n  if (disabledAddActions?.includes('import-from-samples') || !isSampleTypeEnabled) {\n    return null;\n  }\n\n  const moreLink: GettingStartedLink = {\n    id: 'all-samples',\n    title: t('knative-plugin~View all samples'),\n    href:\n      activeNamespace && activeNamespace !== ALL_NAMESPACES_KEY\n        ? `/samples/ns/${activeNamespace}?sampleType=Serverless function`\n        : '/samples/all-namespaces?sampleType=Serverless function',\n  };\n\n  return (\n    <CatalogServiceProvider namespace={activeNamespace} catalogId=\"samples-catalog\">\n      {(service) => {\n        const orderedCatalogItems = orderCatalogItems(service.items || [], featured);\n\n        const orderedCatalogItemsTemp = orderedCatalogItems.filter((item) => {\n          return (\n            item?.typeLabel === 'Serverless function' ||\n            item?.data?.metadata?.labels['sample-type'] === 'Serverless function'\n          );\n        });\n\n        const slicedCatalogItems = orderedCatalogItemsTemp.slice(0, 2);\n\n        if (slicedCatalogItems.length === 0) {\n          return null;\n        }\n\n        const links: GettingStartedLink[] = service.loaded\n          ? slicedCatalogItems.map((item) => {\n              return {\n                id: item.uid,\n                title: item.name,\n                href: item.cta?.href,\n                onClick: item.cta?.callback,\n              };\n            })\n          : featured.map((uid) => {\n              return {\n                id: uid,\n                loading: true,\n              };\n            });\n\n        return (\n          <GettingStartedCard\n            id=\"samples\"\n            icon={<CatalogIcon color=\"var(--co-global--palette--blue-400)\" aria-hidden=\"true\" />}\n            title={t('knative-plugin~Create functions using samples')}\n            titleColor={'var(--co-global--palette--blue-400)'}\n            description={t('knative-plugin~Choose a code sample to create a function.')}\n            links={links}\n            moreLink={moreLink}\n          />\n        );\n      }}\n    </CatalogServiceProvider>\n  );\n};\n"],"sourceRoot":""}