{"version":3,"sources":["webpack:///./packages/operator-lifecycle-manager/src/components/modals/edit-default-sources-modal.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/operator-hub/operator-hub-details.tsx","webpack:///./public/components/checkbox.tsx"],"names":["editDefaultSourcesModal","cancel","close","operatorHub","handlePromise","errorMessage","t","userSelectedDefaultSourceToggleState","setUserSelectedDefaultSourceToggleState","spec","sources","reduce","acc","source","name","disabled","submit","event","preventDefault","patch","op","path","value","Object","keys","map","onToggle","sourceName","checked","currState","onSubmit","className","fieldId","label","status","sort","a","b","localeCompare","key","onChange","currentTarget","values","includes","variant","title","isInline","inProgress","submitText","OperatorHubDetails","obj","canEditDefaultSources","group","apiGroup","resource","plural","verb","text","podSelector","showNodeSelector","canEdit","onEdit","editAsGroup","hideEmpty","idx","Sources","props","showTitle","OperatorHubDetailsPage","pages","details","editYaml","href","nameKey","component","menuActions","factory","common","Checkbox","type"],"mappings":"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","file":"369-chunk-6482dc9fcf7b15bfc19c.min.js","sourcesContent":["import * as React from 'react';\nimport { Alert, Form, FormGroup } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Checkbox } from '@console/internal/components/checkbox';\nimport {\n  ModalTitle,\n  ModalBody,\n  createModalLauncher,\n  ModalComponentProps,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '@console/internal/components/utils';\nimport { k8sPatch } from '@console/internal/module/k8s';\nimport { OperatorHubModel } from '../../models';\nimport { OperatorHubKind } from '../operator-hub';\n\nconst EditDefaultSourcesModal: React.FC<EditDefaultSourcesModalProps> = ({\n  cancel,\n  close,\n  operatorHub,\n  handlePromise,\n  errorMessage,\n}) => {\n  const { t } = useTranslation();\n  // state to maintain user selection of toggle, maintained as an [] of {defaultCatalogSourceName: <booleanFlagForToggle>}\n  const [\n    userSelectedDefaultSourceToggleState,\n    setUserSelectedDefaultSourceToggleState,\n  ] = React.useState(\n    (operatorHub.spec.sources ?? []).reduce(\n      (acc, source) => ({\n        ...acc,\n        [source.name]: source.disabled,\n      }),\n      {},\n    ),\n  );\n\n  const submit = React.useCallback(\n    (event: React.FormEvent<EventTarget>): void => {\n      event.preventDefault();\n      const patch = [\n        {\n          op: 'replace',\n          path: '/spec/sources',\n          value: Object.keys(userSelectedDefaultSourceToggleState).map((name) => ({\n            name,\n            disabled: userSelectedDefaultSourceToggleState[name],\n          })),\n        },\n      ];\n      return handlePromise(k8sPatch(OperatorHubModel, operatorHub, patch), close);\n    },\n    [close, handlePromise, operatorHub, userSelectedDefaultSourceToggleState],\n  );\n\n  const onToggle = React.useCallback((sourceName, checked) => {\n    setUserSelectedDefaultSourceToggleState((currState) => ({\n      ...currState,\n      [sourceName]: !checked,\n    }));\n  }, []);\n\n  return (\n    <Form onSubmit={submit}>\n      <div className=\"modal-content\">\n        <ModalTitle>{t('olm~Edit default sources')}</ModalTitle>\n        <ModalBody>\n          <FormGroup fieldId=\"enabled-default-sources\" label={t('olm~Enabled default sources')}>\n            {operatorHub.status.sources\n              .sort((a, b) => (a.name ?? '').localeCompare(b.name ?? ''))\n              .map((source) => {\n                const checked = !userSelectedDefaultSourceToggleState[source.name] ?? true;\n                return (\n                  <Checkbox\n                    name={source.name}\n                    key={source.name}\n                    label={source.name}\n                    checked={checked}\n                    onChange={({ currentTarget }) => onToggle(source.name, currentTarget.checked)}\n                  />\n                );\n              })}\n          </FormGroup>\n          {Object.values(userSelectedDefaultSourceToggleState).includes(true) && (\n            <Alert\n              variant=\"warning\"\n              className=\"co-alert\"\n              title={t('olm~Disable CatalogSource')}\n              isInline\n            >\n              <p>\n                {t(\n                  'olm~By disabling a default source, the operators it provides will no longer appear in OperatorHub and any operator that has been installed from this source will no longer receive updates until the source is re-enabled. Disabling the source will also remove the corresponding OperatorSource and CatalogSource resources from the cluster.',\n                )}\n              </p>\n            </Alert>\n          )}\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={errorMessage}\n          inProgress={false}\n          submitText={t('public~Save')}\n          cancel={cancel}\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport const editDefaultSourcesModal = createModalLauncher(\n  withHandlePromise(EditDefaultSourcesModal),\n);\n\ntype EditDefaultSourcesModalProps = {\n  operatorHub: OperatorHubKind;\n} & ModalComponentProps &\n  HandlePromiseProps;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport {\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  Kebab,\n  DetailsItem,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { OperatorHubModel } from '../../models';\nimport { CatalogSourceListPage, CatalogSourceListPageProps } from '../catalog-source';\nimport { editDefaultSourcesModal } from '../modals/edit-default-sources-modal';\nimport { OperatorHubKind } from '.';\n\nconst OperatorHubDetails: React.FC<OperatorHubDetailsProps> = ({ obj: operatorHub }) => {\n  const { t } = useTranslation();\n\n  const canEditDefaultSources = useAccessReview({\n    group: OperatorHubModel.apiGroup,\n    resource: OperatorHubModel.plural,\n    verb: 'patch',\n  });\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('olm~OperatorHub details')} />\n      <div className=\"row\">\n        <div className=\"col-sm-6 col-xs-12\">\n          <ResourceSummary\n            resource={operatorHub}\n            podSelector=\"spec.podSelector\"\n            showNodeSelector={false}\n          />\n        </div>\n        <div className=\"col-sm-6 col-xs-12\">\n          <div className=\"co-m-pane__details\">\n            <DetailsItem\n              label={t('olm~Default sources')}\n              obj={operatorHub}\n              path=\"status.sources\"\n              canEdit={canEditDefaultSources}\n              onEdit={() => editDefaultSourcesModal({ operatorHub })}\n              editAsGroup\n              hideEmpty\n            >\n              {operatorHub?.status?.sources\n                .sort((a, b) => (a.name ?? '').localeCompare(b.name ?? ''))\n                .map((source, idx) => {\n                  return (\n                    <dl key={source.name}>\n                      <DetailsItem\n                        label={source.name}\n                        obj={operatorHub}\n                        path={`status.sources[${idx}]`}\n                      >\n                        <p data-test={`status_${source.name}`}>\n                          {source.disabled ? t('public~Disabled') : t('public~Enabled')}\n                        </p>\n                      </DetailsItem>\n                    </dl>\n                  );\n                })}\n            </DetailsItem>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Sources: React.FC<CatalogSourceListPageProps> = (props) => (\n  <CatalogSourceListPage showTitle={false} {...props} />\n);\n\nexport const OperatorHubDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const pages = [\n    navFactory.details(OperatorHubDetails),\n    navFactory.editYaml(),\n    {\n      href: 'sources',\n      // t('olm~Sources')\n      nameKey: 'olm~Sources',\n      component: Sources,\n    },\n  ];\n  return <DetailsPage {...props} menuActions={Kebab.factory.common} pages={pages} />;\n};\n\ntype OperatorHubDetailsProps = {\n  obj: OperatorHubKind;\n};\n","import * as React from 'react';\n\nexport const Checkbox: React.SFC<CheckboxProps> = ({ name, label, checked, onChange }) => (\n  <div className=\"form-group\">\n    <div className=\"checkbox\">\n      <label className=\"control-label\">\n        <input\n          data-test={`${label}__checkbox`}\n          className=\"form-checkbox\"\n          name={name}\n          onChange={onChange}\n          checked={checked}\n          data-checked-state={checked}\n          type=\"checkbox\"\n        />\n        {label}\n      </label>\n    </div>\n  </div>\n);\n\nexport type CheckboxProps = {\n  name: string;\n  label: string;\n  onChange: React.ReactEventHandler<HTMLInputElement>;\n  checked: boolean;\n};\n"],"sourceRoot":""}