{"version":3,"sources":["webpack:///./public/components/modals/alert-routing-modal.tsx"],"names":["updateAlertRoutingProperty","config","propertyName","newValue","oldValue","AlertRoutingModal","secret","cancel","close","errorMessage","setErrorMessage","inProgress","setInProgress","t","onSubmit","event","preventDefault","groupByNew","target","elements","value","replace","groupWaitNew","groupIntervalNew","repeatIntervalNew","groupByOld","groupWaitOld","groupIntervalOld","repeatIntervalOld","split","then","err","message","name","className","htmlFor","placeholder","type","id","defaultValue","submitText","cancelText","createAlertRoutingModal"],"mappings":"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","file":"alert-routing-modal-chunk-f041978eb07a9c7369da.min.js","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { K8sResourceKind } from '../../module/k8s';\nimport { AlertmanagerConfig } from '../monitoring/alertmanager/alertmanager-config';\nimport { patchAlertmanagerConfig } from '../monitoring/alertmanager/alertmanager-utils';\n\nconst updateAlertRoutingProperty = (\n  config: any,\n  propertyName: string,\n  newValue: string,\n  oldValue: string,\n) => {\n  if (!_.isEqual(newValue, oldValue)) {\n    if (_.isEmpty(newValue)) {\n      _.unset(config, ['route', propertyName]); // unset so global/default value will be used\n    } else {\n      _.set(config, ['route', propertyName], newValue);\n    }\n  }\n};\n\nexport const AlertRoutingModal: React.FC<AlertRoutingModalProps> = ({\n  config,\n  secret,\n  cancel,\n  close,\n}) => {\n  const [errorMessage, setErrorMessage] = React.useState();\n  const [inProgress, setInProgress] = React.useState(false);\n  const { t } = useTranslation();\n\n  const submit = (event): void => {\n    event.preventDefault();\n\n    let groupByNew = event.target.elements['input-group-by'].value.replace(/\\s+/g, '');\n    const groupWaitNew = event.target.elements['input-group-wait'].value;\n    const groupIntervalNew = event.target.elements['input-group-interval'].value;\n    const repeatIntervalNew = event.target.elements['input-repeat-interval'].value;\n\n    const groupByOld = _.get(config, ['route', 'group_by'], []);\n    const groupWaitOld = _.get(config, ['route', 'group_wait'], '');\n    const groupIntervalOld = _.get(config, ['route', 'group_interval'], '');\n    const repeatIntervalOld = _.get(config, ['route', 'repeat_interval'], '');\n\n    groupByNew = groupByNew === '' ? [] : groupByNew.split(',');\n    updateAlertRoutingProperty(config, 'group_by', groupByNew, groupByOld);\n    updateAlertRoutingProperty(config, 'group_wait', groupWaitNew, groupWaitOld);\n    updateAlertRoutingProperty(config, 'group_interval', groupIntervalNew, groupIntervalOld);\n    updateAlertRoutingProperty(config, 'repeat_interval', repeatIntervalNew, repeatIntervalOld);\n\n    setInProgress(true);\n    patchAlertmanagerConfig(secret, config).then(close, (err) => {\n      setErrorMessage(err.message);\n      setInProgress(false);\n    });\n  };\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n      <ModalTitle className=\"modal-header\">{t('public~Edit routing configuration')}</ModalTitle>\n      <ModalBody>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"group-by\" className=\"control-label\">\n              {t('public~Group by')}\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-v5-c-input-group\">\n                <input\n                  placeholder=\"cluster, alertname\"\n                  type=\"text\"\n                  className=\"pf-v5-c-form-control\"\n                  id=\"input-group-by\"\n                  data-test-id=\"input-group-by\"\n                  defaultValue={_.get(config, ['route', 'group_by'])}\n                  aria-describedby=\"input-group-by-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"group-wait\" className=\"control-label\">\n              {t('public~Group wait')}\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-v5-c-input-group\">\n                <input\n                  placeholder=\"30s\"\n                  type=\"text\"\n                  className=\"pf-v5-c-form-control\"\n                  id=\"input-group-wait\"\n                  data-test-id=\"input-group-wait\"\n                  defaultValue={_.get(config, ['route', 'group_wait'])}\n                  aria-describedby=\"input-group-wait-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"group-interval\" className=\"control-label\">\n              {t('public~Group interval')}\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-v5-c-input-group\">\n                <input\n                  placeholder=\"5m\"\n                  type=\"text\"\n                  className=\"pf-v5-c-form-control\"\n                  id=\"input-group-interval\"\n                  data-test-id=\"input-group-interval\"\n                  defaultValue={_.get(config, ['route', 'group_interval'])}\n                  aria-describedby=\"input-group-interval-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row co-m-form-row\">\n          <div className=\"col-sm-12\">\n            <label htmlFor=\"repeat-interval\" className=\"control-label\">\n              {t('public~Repeat interval')}\n            </label>\n          </div>\n          <div className=\"co-m-form-col col-sm-12\">\n            <div className=\"form-inline\">\n              <div className=\"pf-v5-c-input-group\">\n                <input\n                  placeholder=\"3h\"\n                  type=\"text\"\n                  className=\"pf-v5-c-form-control\"\n                  id=\"input-repeat-interval\"\n                  data-test-id=\"input-repeat-interval\"\n                  defaultValue={_.get(config, ['route', 'repeat_interval'])}\n                  aria-describedby=\"input-repeat-interval-help\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        inProgress={inProgress}\n        errorMessage={errorMessage}\n        cancel={cancel}\n        submitText={t('public~Save')}\n        cancelText={t('public~Cancel')}\n      />\n    </form>\n  );\n};\n\nexport const createAlertRoutingModal = createModalLauncher<AlertRoutingModalProps>(\n  AlertRoutingModal,\n);\n\nexport type AlertRoutingModalProps = {\n  cancel: () => void;\n  close: () => void;\n  config: AlertmanagerConfig;\n  secret: K8sResourceKind;\n};\n"],"sourceRoot":""}