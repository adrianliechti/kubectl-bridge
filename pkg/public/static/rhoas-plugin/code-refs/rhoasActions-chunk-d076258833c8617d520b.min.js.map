{"version":3,"sources":["webpack:///./packages/rhoas-plugin/src/actions/index.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/rhoas-plugin/src/actions/provider.ts"],"names":["CommonActionFactory","Delete","kind","obj","relatedResource","message","id","label","t","cta","resource","accessReview","Edit","href","crd","ModifyLabels","blocking","ModifyAnnotations","ModifyCount","resourceKind","ModifyPodSelector","ModifyTolerations","modalClassName","AddStorage","getCommonResourceActions","undefined","useKafkaConnectionActionProvider","kindObj","inFlight","managedServicesProvider","setFeatureFlag"],"mappings":"6FAAA,mJ,kCCAA,uGAsBO,MAAMA,EAA6C,CACxDC,OAAQ,CACNC,EACAC,EACAC,EACAC,KACW,CACXC,GAAI,kBACJC,MAAO,IAAQC,EAAE,8BAA+B,CAAEN,KAAMA,EAAKA,OAC7DO,IAAK,IACH,YAAY,CACVP,OACAQ,SAAUP,EACVE,YAEJM,aAAc,aAAeT,EAAMC,EAAK,YAE1CS,KAAM,CAACV,EAAeC,KAAiC,CACrDG,GAAI,gBACJC,MAAO,IAAQC,EAAE,4BAA6B,CAAEN,KAAMA,EAAKA,OAC3DO,IAAK,CACHI,KAAS,aAAgBV,EAAKD,EAAKY,IAAM,aAAkBZ,GAAQA,EAAKA,MAAlE,SAGRS,aAAc,aAAeT,EAAMC,EAAK,YAE1CY,aAAc,CAACb,EAAeC,KAAiC,CAC7DG,GAAI,cACJC,MAAO,IAAQC,EAAE,2BACjBC,IAAK,IACH,YAAoB,CAClBP,OACAQ,SAAUP,EACVa,UAAU,IAEdL,aAAc,aAAeT,EAAMC,EAAK,WAE1Cc,kBAAmB,CAACf,EAAeC,KAAiC,CAClEG,GAAI,mBACJC,MAAO,IAAQC,EAAE,gCACjBC,IAAK,IACH,YAAyB,CACvBP,OACAQ,SAAUP,EACVa,UAAU,IAEdL,aAAc,aAAeT,EAAMC,EAAK,WAE1Ce,YAAa,CAAChB,EAAeC,KAAiC,CAC5DG,GAAI,iBACJC,MAAO,IAAQC,EAAE,8BACjBC,IAAK,IACH,YAA2B,CACzBU,aAAcjB,EACdQ,SAAUP,IAEdQ,aAAc,aAAeT,EAAMC,EAAK,QAAS,WAEnDiB,kBAAmB,CAAClB,EAAeC,KAAiC,CAClEG,GAAI,oBACJC,MAAO,IAAQC,EAAE,iCACjBC,IAAK,IACH,YAAiB,CACfP,OACAQ,SAAUP,EACVa,UAAU,IAEdL,aAAc,aAAeT,EAAMC,EAAK,WAE1CkB,kBAAmB,CAACnB,EAAeC,KAAiC,CAClEG,GAAI,kBACJC,MAAO,IAAQC,EAAE,gCACjBC,IAAK,IACH,YAAiB,CACfU,aAAcjB,EACdQ,SAAUP,EACVmB,eAAgB,aAEpBX,aAAc,aAAeT,EAAMC,EAAK,WAE1CoB,WAAY,CAACrB,EAAeC,KAAiC,CAC3DG,GAAI,cACJC,MAAO,IAAQC,EAAE,2BACjBC,IAAK,CACHI,KAAS,aACPV,EACAD,EAAKY,IAAM,aAAkBZ,GAAQA,EAAKA,MAFtC,mBAKRS,aAAc,aAAeT,EAAMC,EAAK,YAI/BqB,EAA2B,CACtCtB,EACAC,EACAE,IAEO,CACLL,EAAoBe,aAAab,EAAMC,GACvCH,EAAoBiB,kBAAkBf,EAAMC,GAC5CH,EAAoBY,KAAKV,EAAMC,GAC/BH,EAAoBC,OAAOC,EAAMC,OAAKsB,EAAWpB,K,kCC5HrD,0HAQO,MAAMqB,EAAoChB,IAC/C,MAAOiB,EAASC,GAAY,YAAY,aAAalB,IAKrD,MAAO,CAJS,kBAAQ,IACf,YAAyBiB,EAASjB,GACxC,CAACiB,EAASjB,KAEKkB,OAAUH,IAGjBI,EAA2BC,IACtCA,EACE,qCACA,aAAqB","file":"rhoas-plugin/code-refs/rhoasActions-chunk-d076258833c8617d520b.min.js","sourcesContent":["export * from './provider';\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { useMemo } from 'react';\nimport { getCommonResourceActions } from '@console/app/src/actions/creators/common-factory';\nimport { SetFeatureFlag } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { isCatalogTypeEnabled } from '@console/shared';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { FLAG_MANAGED_SERVICES_CATALOG_TYPE, MANAGED_SERVICES_CATALOG_TYPE_ID } from '../const';\n\nexport const useKafkaConnectionActionProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const actions = useMemo(() => {\n    return getCommonResourceActions(kindObj, resource);\n  }, [kindObj, resource]);\n\n  return [actions, !inFlight, undefined];\n};\n\nexport const managedServicesProvider = (setFeatureFlag: SetFeatureFlag) => {\n  setFeatureFlag(\n    FLAG_MANAGED_SERVICES_CATALOG_TYPE,\n    isCatalogTypeEnabled(MANAGED_SERVICES_CATALOG_TYPE_ID),\n  );\n};\n"],"sourceRoot":""}