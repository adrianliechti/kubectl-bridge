{"version":3,"sources":["webpack:///./packages/rhoas-plugin/src/topology/components/DetailsComponent.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/ResourceComponent.tsx","webpack:///./packages/rhoas-plugin/src/topology/sidebar/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/rhoas-plugin/src/topology/sidebar/kafka-connection-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/sidebar/KafkaConnectionPanelResourceLink.tsx","webpack:///./packages/rhoas-plugin/src/topology/sidebar/useKafkaConnectionAlert.tsx"],"names":["DetailsComponent","obj","t","boostrapServerHost","status","bootstrapServerHost","url","metadata","cloudUI","className","resource","href","rel","target","ResourcesComponent","serviceAccountSecretName","spec","credentials","namespace","link","kind","name","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","type","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","htmlFor","onChange","id","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","labels","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","deployment","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","n","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","collapsed","labelPosition","bottom","shallow","nodes","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","children","isVisible","getInternalBounds","rect","padding","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","width","height","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","metrics","podData","currentPods","current","pods","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","createConnection","sourceNode","targetNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","element","editAccess","canEdit","displayName","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","useDetailsTabSectionForTopologySideBar","useResourceTabSectionForTopologySideBar","kindReference","to","useKafkaConnectionAlert","dismissible"],"mappings":"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","file":"rhoas-plugin/code-refs/rhoasTopologySidebar-chunk-eaaf07faa351ef137aeb.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { KafkaConnection } from '../../utils/rhoas-types';\n\nexport const DetailsComponent: React.FC<{ obj: KafkaConnection }> = ({ obj }) => {\n  const { t } = useTranslation();\n  const boostrapServerHost = obj.status?.bootstrapServerHost;\n  const url = obj.status?.metadata?.cloudUI;\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <ResourceSummary resource={obj} />\n        </div>\n        {boostrapServerHost && (\n          <dl className=\"co-m-pane__details\">\n            <dt>{t('rhoas-plugin~Bootstrap Server')}</dt>\n            <dd>{boostrapServerHost}</dd>\n          </dl>\n        )}\n        {url && (\n          <dl className=\"co-m-pane__details\">\n            <dt>{t('rhoas-plugin~URL')}</dt>\n            <dd>\n              <a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n                {url}\n              </a>\n            </dd>\n          </dl>\n        )}\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { KafkaConnection } from '../../utils/rhoas-types';\n\nexport const ResourcesComponent: React.FC<{ obj: KafkaConnection }> = ({ obj }) => {\n  const serviceAccountSecretName = obj?.spec?.credentials?.serviceAccountSecretName;\n  const { namespace } = obj.metadata;\n  const { t } = useTranslation();\n\n  const link = (\n    <ResourceLink\n      kind={referenceForModel(SecretModel)}\n      name={serviceAccountSecretName}\n      namespace={namespace}\n    />\n  );\n\n  return (\n    <ul>\n      <h3>{t('rhoas-plugin~Secret')}</h3>\n      {!serviceAccountSecretName ? (\n        <span className=\"text-muted\">{t('rhoas-plugin~No Secret')}</span>\n      ) : (\n        <li className=\"list-group-item container-fluid\">\n          <div className=\"row\">\n            <span className=\"col-xs-12\">{link}</span>\n          </div>\n        </li>\n      )}\n    </ul>\n  );\n};\n","export { default as getKafkaConnectionPanelResourceLink } from './KafkaConnectionPanelResourceLink';\nexport { useKafkaConnectionAlert } from './useKafkaConnectionAlert';\nexport {\n  useDetailsTabSectionForTopologySideBar,\n  useResourceTabSectionForTopologySideBar,\n} from './kafka-connection-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { getResource } from '@console/topology/src/utils';\nimport { KafkaConnection } from '../../utils/rhoas-types';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '../components/const';\nimport { DetailsComponent } from '../components/DetailsComponent';\nimport { ResourcesComponent } from '../components/ResourceComponent';\n\nexport const useDetailsTabSectionForTopologySideBar: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  if (element.getType() !== TYPE_MANAGED_KAFKA_CONNECTION) {\n    return [undefined, true, undefined];\n  }\n  const resource = getResource<KafkaConnection>(element);\n  const section = <DetailsComponent obj={resource} />;\n  return [section, true, undefined];\n};\n\nexport const useResourceTabSectionForTopologySideBar: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  if (element.getType() !== TYPE_MANAGED_KAFKA_CONNECTION) {\n    return [undefined, true, undefined];\n  }\n  const resource = getResource<KafkaConnection>(element);\n  const section = <ResourcesComponent obj={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '@console/topology/src/utils';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '../components/const';\n\nconst KafkaConnectionPanelResourceLink = (element: GraphElement) => {\n  if (element.getType() !== TYPE_MANAGED_KAFKA_CONNECTION) return undefined;\n  const resource = getResource(element);\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n\nexport default KafkaConnectionPanelResourceLink;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology/src/types';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsResourceAlertContent } from '@console/dynamic-plugin-sdk';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '../components/const';\n\nexport const useKafkaConnectionAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  if (element.getType() !== TYPE_MANAGED_KAFKA_CONNECTION) return null;\n  return {\n    title: t('rhoas-plugin~Cloud Service'),\n    dismissible: true,\n    content: (\n      <>{t('rhoas-plugin~This resource represents service that exist outside your cluster')}</>\n    ),\n    variant: 'custom',\n  };\n};\n"],"sourceRoot":""}