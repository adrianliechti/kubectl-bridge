{"version":3,"sources":["webpack:///./packages/rhoas-plugin/src/topology/index.ts","webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/topology/src/operators/operators-data-transformer.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/components/graph-view/index.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx","webpack:///./packages/topology/src/behavior/index.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/BindableNode.tsx","webpack:///./packages/topology/src/utils/relationship-provider-utils.ts","webpack:///./packages/rhoas-plugin/src/topology/relationship-provider.ts","webpack:///./packages/rhoas-plugin/src/topology/components/rhoasComponentFactory.ts","webpack:///./packages/rhoas-plugin/src/topology/rhoas-data-transformer.ts"],"names":["useTopologyWorkloadActionProvider","element","resource","actions","getType","k8sKind","undefined","useTopologyVisualConnectorActionProvider","getSource","kindObj","inFlight","ModifyCount","AddStorage","common","factory","menuActions","kind","obj","labelKey","callback","dc","req","apiVersion","name","metadata","latest","force","opts","ns","namespace","path","rollout","catch","err","error","message","accessReview","group","apiGroup","plural","subresource","verb","spec","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","status","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","t","timeout","updatePeriod","interval","triggers","join","className","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","variant","title","href","deprecatedDeploymentConfig","text","additionalClassName","DeploymentConfigsDetails","model","key","uid","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","props","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","to","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","creationTimestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","labels","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","edgesFromServiceBinding","source","sbrs","sourceBindings","forEach","sbr","edgeExists","reference","application","labelSelector","matchLabels","matches","push","getServiceBindingEdges","obsGroups","installedOperators","edges","length","services","bss","targetGroup","find","target","data","getOperatorGroupResource","resources","clusterServiceVersions","operatorBackedServiceKindMap","ownerReference","ownerReferences","ownerUid","nodeResourceKind","operatorBackedServiceKind","appGroup","operator","op","csvName","operatorName","groupUid","operatorGroupItem","getOperatorGroupResources","groupResource","getOperatorTopologyDataModel","workloads","operatorsDataModel","nodes","serviceBindingRequests","Promise","resolve","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","filter","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","groupResources","nextResource","Error","all","createTopologyResourceConnection","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","labelPluralKey","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","targetNode","edgeApiVersion","edgeKind","edgeName","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","jobs","cronJobs","statefulSets","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","size","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","editAccess","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","radius","ariaLabel","external","rest","decorator","showBackground","rel","stopPropagation","role","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","onSelect","controlled","getDataFromAdapter","resolvedExtensions","properties","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","setLoaded","setLoadError","watchedResources","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","expand","DEFAULT_SUPPORTED_FILTER_IDS","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","NodeType","EdgeType","KameletType","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","customData","WorkloadTableHeader","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","innerRadius","icon","hoverRef","onShowCreateConnector","onContextMenu","contextMenuOpen","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","hover","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","filtered","showLabel","kindData","detailsLevel","getDetailsLevel","showDetails","low","badgeClassName","kindStr","toLowerCase","kindColor","prev","truncateLength","scaleNode","high","badge","kindAbbr","badgeColor","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","bgClassName","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","rx","ry","iconClass","TOP_MARGIN","top","triggerRef","textAnchor","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","getTargetEdges","highlightNode","monitor","getOperation","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","collect","dragging","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","accept","canDrop","dropTarget","isOver","edgeDragging","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","dropHint","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","getter","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","resourceTypes","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","subTitle","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","getAppliedFilters","useFilterContextValues","appliedFilters","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","getTopologyFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","Provider","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","extensionsLoaded","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","dismissible","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","link","left","iconOnly","noTooltip","workloadData","cheEnabled","editUrl","repoIcon","right","dispatch","showMonitoringOverview","firingAlerts","severityAlertType","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","delay","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","onCreate","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","dragRef","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","open","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","hasError","ERROR","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","dragNodeRef","needsHintRef","needsHint","groupClasses","StatusSeverities","warning","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","animationDuration","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","routeDecoratorIcon","routeURL","fillRule","stroke","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","fieldId","_","toggle","toggleRef","isFullWidth","onOpenChange","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","lastUpdated","spin","BuildOverviewList","canStartBuild","inline","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","location","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","dndDropRef","badgeTextColor","badgeBorderColor","badgeLocation","labelIconClass","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","dragLabelRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","paddingX","paddingY","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","groups","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend","tooltipLabel","nodeElement","dndDropProps","iconData","getRelationshipProvider","getSourceNode","isEdgeConnected","getRelExtension","topologyRelationshipExtensions","relationshipExtension","provides","tooltip","providerProvidesKafkaConnection","providerCreateKafkaConnection","getRhoasComponentFactory","KAFKA_PROPS","createOverviewItem","getTopologyRhoasNodes","resKindMap","csvData","trapezoid","getRhoasTopologyDataModel","rhoasDataModel","rhoasNodes","getRhoasServiceBindingEdges"],"mappings":"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","file":"rhoas-plugin/code-refs/topology-chunk-d4a5d0acd77eb55cba1b.min.js","sourcesContent":["export { getRhoasComponentFactory } from './components/rhoasComponentFactory';\nexport { getRhoasTopologyDataModel } from './rhoas-data-transformer';\nexport {\n  providerProvidesKafkaConnection,\n  providerCreateKafkaConnection,\n} from './relationship-provider';\n","export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology/dist/esm/types';\nimport * as _ from 'lodash';\nimport {\n  K8sResourceKind,\n  LabelSelector,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedKnResource } from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager/src';\nimport {\n  isOperatorBackedService,\n  getOperatorBackedServiceKindMap,\n} from '@console/shared/src/utils/operator-utils';\nimport { TYPE_SERVICE_BINDING } from '../const';\nimport { getTopologyEdgeItems } from '../data-transforms/transform-utils';\nimport { TopologyDataResources } from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const edgesFromServiceBinding = (\n  source: K8sResourceKind,\n  sbrs: K8sResourceKind[],\n): K8sResourceKind[] => {\n  const sourceBindings = [];\n  if (!sbrs) {\n    return sourceBindings;\n  }\n  sbrs.forEach((sbr) => {\n    let edgeExists = false;\n    const reference = referenceFor(source);\n    if (reference && sbr?.spec?.application?.resource === modelFor(reference)?.plural) {\n      if (sbr?.spec?.application?.name === source.metadata.name) {\n        edgeExists = true;\n      } else {\n        const matchLabels = sbr?.spec?.application?.labelSelector?.matchLabels;\n        if (matchLabels) {\n          const sbrSelector = new LabelSelector(sbr.spec.application.labelSelector);\n          if (sbrSelector.matches(source)) {\n            edgeExists = true;\n          }\n        }\n      }\n    }\n    edgeExists && sourceBindings.push(sbr);\n  });\n  return sourceBindings;\n};\n\nexport const getServiceBindingEdges = (\n  dc: K8sResourceKind,\n  obsGroups: K8sResourceKind[],\n  sbrs: K8sResourceKind[],\n  installedOperators: K8sResourceKind[],\n): EdgeModel[] => {\n  const edges = [];\n  if (!sbrs?.length || !installedOperators?.length) {\n    return edges;\n  }\n\n  _.forEach(edgesFromServiceBinding(dc, sbrs), (sbr) => {\n    _.forEach(sbr.spec.services, (bss) => {\n      if (bss) {\n        const targetGroup = obsGroups.find(\n          (group) => group.kind === bss.kind && group.metadata.name === bss.name,\n        );\n        const target = targetGroup?.metadata.uid;\n        const source = dc.metadata.uid;\n        if (source && target) {\n          edges.push({\n            id: `${source}_${target}`,\n            type: TYPE_SERVICE_BINDING,\n            source,\n            target,\n            resource: sbr,\n            data: { sbr },\n          });\n        }\n      }\n    });\n  });\n\n  return edges;\n};\n\nexport const getOperatorGroupResource = (\n  resource: K8sResourceKind,\n  resources?: TopologyDataResources,\n): { operatorGroupItem: K8sResourceKind; csvName: string } => {\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  const operatorBackedServiceKindMap = getOperatorBackedServiceKindMap(installedOperators);\n  // added this as needs to hide operator backed if belong to source\n  if (resources && isOperatorBackedKnResource(resource, resources)) {\n    return null;\n  }\n\n  if (isOperatorBackedService(resource, installedOperators)) {\n    const ownerReference = resource?.metadata?.ownerReferences?.[0];\n    const ownerUid = ownerReference?.uid;\n    const nodeResourceKind = ownerReference?.kind;\n    const operatorBackedServiceKind = operatorBackedServiceKindMap?.[nodeResourceKind];\n    const appGroup = resource?.metadata?.labels?.['app.kubernetes.io/part-of'];\n    const operator: K8sResourceKind =\n      (installedOperators.find((op) => op.metadata.uid === ownerUid) as K8sResourceKind) ||\n      operatorBackedServiceKind;\n    const csvName = operator.metadata.name;\n    const operatorName =\n      ownerReference?.name ?? appGroup\n        ? `${appGroup}:${operator.metadata.name}`\n        : operator.metadata.name;\n\n    const groupUid = ownerReference?.uid ?? `${operatorName}:${operator.metadata.uid}`;\n    const operatorGroupItem = _.merge({}, operator, {\n      apiVersion: ownerReference?.apiVersion ?? '',\n      kind: ownerReference?.kind ?? 'Operator',\n      metadata: {\n        name: ownerReference?.name ?? operator.metadata.name,\n        uid: groupUid,\n      },\n    });\n    return { operatorGroupItem, csvName };\n  }\n  return null;\n};\n\nexport const getOperatorGroupResources = (resources: TopologyDataResources) => {\n  const obsGroups = [];\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources[key]?.data && resources[key].data.length) {\n      resources[key].data.forEach((resource) => {\n        const groupResource = getOperatorGroupResource(resource, resources);\n        if (!groupResource?.operatorGroupItem) {\n          return;\n        }\n        obsGroups.push(groupResource.operatorGroupItem);\n      });\n    }\n  });\n  return obsGroups;\n};\n\nexport const getOperatorTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n): Promise<Model> => {\n  const operatorsDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n  const obsGroups = getOperatorGroupResources(resources);\n  const serviceBindingRequests = resources?.serviceBindingRequests?.data;\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  if (installedOperators?.length) {\n    workloads.forEach((dc) => {\n      operatorsDataModel.edges.push(\n        ...[\n          ...getServiceBindingEdges(dc, obsGroups, serviceBindingRequests, installedOperators),\n          ...getTopologyEdgeItems(dc, obsGroups),\n        ],\n      );\n    });\n  }\n\n  return Promise.resolve(operatorsDataModel);\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","export * from './components';\nexport { default as Topology } from './Topology';\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n","export { default as useHover } from './useHover';\nexport * from './withCreateConnector';\n","import * as React from 'react';\nimport {\n  observer,\n  Node,\n  useDndDrop,\n  WithContextMenuProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport openshiftImg from '@console/internal/imgs/logos/openshift.svg';\nimport { modelFor, referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { WithCreateConnectorProps } from '@console/topology/src/behavior';\nimport { getTopologyResourceObject } from '../../../../utils';\nimport { getRelationshipProvider } from '../../../../utils/relationship-provider-utils';\nimport BaseNode from './BaseNode';\n\ntype BindableNodeProps = {\n  element: GraphElement;\n  tooltipLabel?: string;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\nconst BindableNode: React.FC<BindableNodeProps> = ({\n  element,\n  selected,\n  onSelect,\n  tooltipLabel,\n  ...rest\n}) => {\n  const nodeElement = element as Node;\n  const spec = React.useMemo(() => getRelationshipProvider(), []);\n  const { width, height } = nodeElement.getBounds();\n  const iconRadius = Math.min(width, height) * 0.25;\n  const [dndDropProps, dndDropRef] = useDndDrop(spec, { element: nodeElement, ...rest });\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconData = element.getData()?.data?.icon || openshiftImg;\n  const kind = resourceModel && referenceForModel(resourceModel);\n\n  return (\n    <BaseNode\n      className=\"bindable-node\"\n      tooltipLabel={tooltipLabel}\n      onSelect={onSelect}\n      icon={iconData}\n      kind={kind}\n      innerRadius={iconRadius}\n      selected={selected}\n      element={nodeElement}\n      {...rest}\n      dndDropRef={dndDropRef}\n      {...dndDropProps}\n    />\n  );\n};\n\nexport default observer(BindableNode);\n","import {\n  CREATE_CONNECTOR_DROP_TYPE,\n  DropTargetSpec,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n} from '@patternfly/react-topology';\nimport {\n  canDropEdgeOnNode,\n  EDGE_DRAG_TYPE,\n  NodeComponentProps,\n  nodesEdgeIsDragging,\n} from '../components/graph-view';\nimport { OdcBaseEdge, OdcBaseNode } from '../elements';\n\nexport const getRelationshipProvider = (): DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean; tooltipLabel: string },\n  NodeComponentProps\n> => {\n  const getSourceNode = (monitor) =>\n    monitor.getItem() instanceof OdcBaseEdge ? monitor.getItem().getSource() : monitor.getItem();\n\n  const isEdgeConnected = (monitor, targetNode) => {\n    const sourceNode = getSourceNode(monitor);\n    return (\n      sourceNode instanceof OdcBaseNode &&\n      sourceNode.getSourceEdges().find((e) => e.getTarget() === targetNode)\n    );\n  };\n\n  const getRelExtension = (monitor, props) => {\n    const sourceNode = getSourceNode(monitor);\n    const targetNode = props.element;\n\n    const topologyRelationshipExtensions = targetNode.getGraph()?.getData()\n      ?.relationshipProviderExtensions;\n    const relationshipExtension =\n      sourceNode instanceof OdcBaseNode &&\n      targetNode instanceof OdcBaseNode &&\n      isNode(sourceNode) &&\n      isNode(targetNode)\n        ? topologyRelationshipExtensions?.filter(({ properties: { provides } }) =>\n            provides(sourceNode, targetNode),\n          )\n        : [];\n    return (\n      relationshipExtension.length > 0 &&\n      relationshipExtension.sort((a, b) => b.properties?.priority - a.properties?.priority)[0]\n    );\n  };\n\n  return {\n    accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n    canDrop: (item, monitor, props) => {\n      const node = props.element as Node;\n      if (isEdge(item)) {\n        return canDropEdgeOnNode(monitor.getOperation()?.type, item, node);\n      }\n      if (!node || item === node) {\n        return false;\n      }\n      const relationshipExtension = getRelExtension(monitor, props);\n      return !!relationshipExtension && !isEdgeConnected(monitor, node);\n    },\n    collect: (monitor, props) => {\n      const relationshipExtension = getRelExtension(monitor, props);\n      return {\n        canDrop: !!relationshipExtension && !isEdgeConnected(monitor, props.element),\n        dropTarget: monitor.isOver({ shallow: true }),\n        edgeDragging: nodesEdgeIsDragging(monitor, props),\n        tooltipLabel: relationshipExtension?.properties?.tooltip,\n      };\n    },\n    dropHint: (item, monitor, props) => {\n      const relationshipExtension = getRelExtension(monitor, props);\n      return relationshipExtension?.uid;\n    },\n  };\n};\n","import { Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { errorModal } from '@console/internal/components/modals';\nimport { EVENT_SOURCE_KAFKA_KIND } from '@console/knative-plugin';\nimport { createEventSourceKafkaConnection } from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { getResource } from '@console/topology/src/utils';\nimport { KafkaConnectionModel } from '../models/rhoas';\n\nexport const providerProvidesKafkaConnection = (source: Node, target: Node) => {\n  if (!source || !target) return false;\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  return (\n    sourceObj &&\n    targetObj &&\n    sourceObj !== targetObj &&\n    sourceObj.kind === EVENT_SOURCE_KAFKA_KIND &&\n    targetObj.kind === KafkaConnectionModel.kind\n  );\n};\n\nexport const providerCreateKafkaConnection = (source: Node, target: Node) =>\n  createEventSourceKafkaConnection(source, target)\n    .then(() => null)\n    .catch((error) => {\n      errorModal({\n        title: i18next.t('rhoas-plugin~Error moving event source kafka connector'),\n        error: error.message,\n        showIcon: true,\n      });\n    });\n","import * as React from 'react';\nimport { GraphElement, withDragNode, withSelection } from '@patternfly/react-topology';\nimport { contextMenuActions } from '@console/topology/src/actions/contextMenuActions';\nimport { withCreateConnector } from '@console/topology/src/behavior';\nimport {\n  createConnectorCallback,\n  nodeDragSourceSpec,\n  withContextMenu,\n  CreateConnector,\n} from '@console/topology/src/components/graph-view';\nimport BindableNode from '@console/topology/src/components/graph-view/components/nodes/BindableNode';\nimport { withEditReviewAccess } from '@console/topology/src/utils';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from './const';\n\nexport const getRhoasComponentFactory = (\n  kind,\n  type,\n): React.ComponentType<{ element: GraphElement }> | undefined => {\n  switch (type) {\n    // Using resource kind as model kind for simplicity\n    case TYPE_MANAGED_KAFKA_CONNECTION:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withEditReviewAccess('patch')(\n          withDragNode(nodeDragSourceSpec(type))(\n            withSelection({ controlled: true })(withContextMenu(contextMenuActions)(BindableNode)),\n          ),\n        ),\n      );\n    default:\n      return undefined;\n  }\n};\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology/dist/esm/types';\nimport {\n  apiVersionForModel,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager/src/types';\nimport {\n  getDefaultOperatorIcon,\n  getImageForCSVIcon,\n  getOperatorBackedServiceKindMap,\n  OverviewItem,\n} from '@console/shared/src';\nimport { TYPE_SERVICE_BINDING } from '@console/topology/src/const';\nimport { getTopologyNodeItem } from '@console/topology/src/data-transforms/transform-utils';\nimport { edgesFromServiceBinding } from '@console/topology/src/operators/operators-data-transformer';\nimport { TopologyDataObject, TopologyDataResources } from '@console/topology/src/topology-types';\nimport { KafkaConnectionModel } from '../models';\nimport {\n  KAFKA_HEIGHT,\n  KAFKA_PADDING,\n  KAFKA_WIDTH,\n  TYPE_MANAGED_KAFKA_CONNECTION,\n} from './components/const';\n\nconst KAFKA_PROPS = {\n  width: KAFKA_WIDTH,\n  height: KAFKA_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: KAFKA_PADDING,\n  },\n};\n\nexport const createOverviewItem = (obj: K8sResourceKind): OverviewItem<K8sResourceKind> => {\n  if (!obj.apiVersion) {\n    obj.apiVersion = apiVersionForModel(KafkaConnectionModel);\n  }\n  if (!obj.kind) {\n    obj.kind = KafkaConnectionModel.kind;\n  }\n\n  return {\n    isOperatorBackedService: true,\n    obj,\n  };\n};\n\nexport const getTopologyRhoasNodes = (\n  kafkaConnections: K8sResourceKind[],\n  resources: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  for (const obj of kafkaConnections) {\n    const resKindMap = getOperatorBackedServiceKindMap(\n      resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[],\n    );\n    const csvData = resKindMap?.[obj.kind];\n    const data: TopologyDataObject = {\n      id: obj.metadata.uid,\n      name: obj.metadata.name,\n      type: TYPE_MANAGED_KAFKA_CONNECTION,\n      resource: obj,\n      // resources is poorly named, should be overviewItem, eventually going away.\n      resources: createOverviewItem(obj),\n      data: {\n        resource: obj,\n        icon: getImageForCSVIcon(csvData?.spec?.icon?.[0]) || getDefaultOperatorIcon(),\n      },\n    };\n    nodes.push(\n      getTopologyNodeItem(\n        obj,\n        TYPE_MANAGED_KAFKA_CONNECTION,\n        data,\n        KAFKA_PROPS,\n        undefined,\n        undefined,\n        NodeShape.trapezoid,\n      ),\n    );\n  }\n\n  return nodes;\n};\n\nexport const getRhoasServiceBindingEdges = (\n  dc: K8sResourceKind,\n  rhoasNodes: NodeModel[],\n  sbrs: K8sResourceKind[],\n): EdgeModel[] => {\n  const edges = [];\n  if (!sbrs?.length || !rhoasNodes?.length) {\n    return edges;\n  }\n\n  edgesFromServiceBinding(dc, sbrs).forEach((sbr) => {\n    sbr.spec.services?.forEach((bss) => {\n      if (bss) {\n        const targetNode = rhoasNodes.find(\n          (node) =>\n            (bss.kind === node.data.resource.kind ||\n              bss.resource === modelFor(referenceFor(node.data.resource)).plural) &&\n            node.data.resource.metadata.name === bss.name,\n        );\n        if (targetNode) {\n          const target = targetNode.data.resource.metadata.uid;\n          const source = dc.metadata.uid;\n          if (source && target) {\n            edges.push({\n              id: `${source}_${target}`,\n              type: TYPE_SERVICE_BINDING,\n              source,\n              target,\n              resource: sbr,\n              data: { sbr },\n            });\n          }\n        }\n      }\n    });\n  });\n\n  return edges;\n};\nexport const getRhoasTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n): Promise<Model> => {\n  const serviceBindingRequests = resources?.serviceBindingRequests?.data;\n  const rhoasDataModel: Model = {\n    nodes: getTopologyRhoasNodes(resources.kafkaConnections.data, resources),\n    edges: [],\n  };\n  if (rhoasDataModel.nodes?.length) {\n    workloads.forEach((dc) => {\n      rhoasDataModel.edges.push(\n        ...getRhoasServiceBindingEdges(dc, rhoasDataModel.nodes, serviceBindingRequests),\n      );\n    });\n  }\n  return Promise.resolve(rhoasDataModel);\n};\n"],"sourceRoot":""}