{"version":3,"sources":["webpack:///./public/components/job.tsx"],"names":["menuActions","kind","obj","labelKey","callback","resourceKind","resource","accessReview","group","apiGroup","plural","name","metadata","namespace","verb","getExtensionsActionsForKind","factory","common","tableColumnClasses","columnClass","JobTableRow","job","type","completions","context","t","className","columnID","labels","to","title","jobsSucceeded","status","succeeded","JobDetails","text","showPodSelector","label","path","spec","activeDeadlineSeconds","count","conditions","timestamp","startTime","completionTime","defaultValue","containers","template","JobPods","props","showNodes","details","pods","editYaml","events","JobsDetailsPage","getResourceStatus","customActionMenu","kindObj","actions","options","loaded","variant","DROPDOWN","pages","JobsList","labelPlural","Header","sortField","transforms","id","sortFunc","Row","virtualize","JobsPage","ListComponent","canCreate"],"mappings":"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","file":"job-chunk-5ce862c590f9152862cc.min.js","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  LazyActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport {\n  getJobTypeAndCompletions,\n  K8sKind,\n  JobKind,\n  K8sResourceKind,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { Conditions } from './conditions';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { configureJobParallelismModal } from './modals';\nimport {\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  LabelList,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  navFactory,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { JobModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst ModifyJobParallelism: KebabAction = (kind: K8sKind, obj: JobKind) => ({\n  // t('public~Edit parallelism')\n  labelKey: 'public~Edit parallelism',\n  callback: () =>\n    configureJobParallelismModal({\n      resourceKind: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\nexport const menuActions: KebabAction[] = [\n  ModifyJobParallelism,\n  ...Kebab.getExtensionsActionsForKind(JobModel),\n  ...Kebab.factory.common,\n];\n\nconst kind = 'Job';\n\nconst tableColumnClasses = [\n  'pf-v5-u-w-25-on-2xl',\n  'pf-v5-u-w-25-on-2xl',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-25-on-2xl',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst JobTableRow: React.FC<RowFunctionArgs<JobKind>> = ({ obj: job }) => {\n  const { type, completions } = getJobTypeAndCompletions(job);\n  const resourceKind = referenceFor(job);\n  const context = { [resourceKind]: job };\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={job.metadata.name} namespace={job.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={job.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={kind} labels={job.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Link to={`/k8s/ns/${job.metadata.namespace}/jobs/${job.metadata.name}/pods`} title=\"pods\">\n          {t('public~{{jobsSucceeded}} of {{completions}}', {\n            jobsSucceeded: job.status.succeeded || 0,\n            completions,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>{type}</TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const JobDetails: React.FC<JobsDetailsProps> = ({ obj: job }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('public~Job details')} />\n            <ResourceSummary resource={job} showPodSelector>\n              <DetailsItem\n                label={t('public~Desired completions')}\n                obj={job}\n                path=\"spec.completions\"\n              />\n              <DetailsItem label={t('public~Parallelism')} obj={job} path=\"spec.parallelism\" />\n              <DetailsItem\n                label={t('public~Active deadline seconds')}\n                obj={job}\n                path=\"spec.activeDeadlineSeconds\"\n              >\n                {job.spec.activeDeadlineSeconds\n                  ? t('public~{{count}} second', { count: job.spec.activeDeadlineSeconds })\n                  : t('public~Not configured')}\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <SectionHeading text={t('public~Job status')} />\n            <dl className=\"co-m-pane__details\">\n              <dt>{t('public~Status')}</dt>\n              <dd>\n                <Status\n                  status={job?.status ? job?.status?.conditions?.[0]?.type || 'In progress' : null}\n                />\n              </dd>\n              <DetailsItem label={t('public~Start time')} obj={job} path=\"status.startTime\">\n                <Timestamp timestamp={job.status.startTime} />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Completion time')}\n                obj={job}\n                path=\"status.completionTime\"\n              >\n                <Timestamp timestamp={job.status.completionTime} />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Succeeded pods')}\n                obj={job}\n                path=\"status.succeeded\"\n                defaultValue=\"0\"\n              />\n              <DetailsItem\n                label={t('public~Active pods')}\n                obj={job}\n                path=\"status.active\"\n                defaultValue=\"0\"\n              />\n              <DetailsItem\n                label={t('public~Failed pods')}\n                obj={job}\n                path=\"status.failed\"\n                defaultValue=\"0\"\n              />\n              <PodDisruptionBudgetField obj={job} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={job.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={job.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst JobPods: React.FC<JobPodsProps> = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, pods, editYaml, events } = navFactory;\nconst JobsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(job: JobKind) =>\n        job?.status ? job?.status?.conditions?.[0]?.type || 'In progress' : null\n      }\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[details(JobDetails), editYaml(), pods(JobPods), events(ResourceEventStream)]}\n    />\n  );\n};\nconst JobsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const JobTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Completions'),\n      sortFunc: 'jobCompletionsSucceeded',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Type'),\n      sortFunc: 'jobType',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={JobModel.labelPlural}\n      Header={JobTableHeader}\n      Row={JobTableRow}\n      virtualize\n    />\n  );\n};\n\nconst JobsPage: React.FC<JobsPageProps> = (props) => (\n  <ListPage ListComponent={JobsList} kind={kind} canCreate={true} {...props} />\n);\nexport { JobsList, JobsPage, JobsDetailsPage };\n\ntype JobsDetailsProps = {\n  obj: JobKind;\n};\n\ntype JobsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype JobPodsProps = {\n  obj: K8sResourceKind;\n};\n"],"sourceRoot":""}