(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{4510:function(e,a,t){"use strict";t.r(a),t.d(a,"HorizontalPodAutoscalersDetails",(function(){return N})),t.d(a,"HorizontalPodAutoscalersDetailsPage",(function(){return k})),t.d(a,"HorizontalPodAutoscalersPage",(function(){return R}));var l=t(0),r=t(745),c=t(16),s=t(18),n=t(54),o=t(7),i=t(10),m=t(972),d=t(40),u=t(5),p=t(409);const{common:b}=u.F.factory,v=[...u.F.getExtensionsActionsForKind(i.HorizontalPodAutoscalerModel),...b],E=({type:e,current:a,target:t})=>l.createElement("div",{className:"row"},l.createElement("div",{className:"col-xs-6"},e),l.createElement("div",{className:"col-xs-3"},a||"-"),l.createElement("div",{className:"col-xs-3"},t||"-")),g=({obj:e})=>{const{t:a}=Object(o.useTranslation)(),t=(e,t,c)=>{var s,n;const{resource:o}=e,i=o.target.averageUtilization,m=a("public~resource {{name}}",{name:o.name}),d=i?l.createElement(l.Fragment,null,m,"Â ",l.createElement("span",{className:"small text-muted"},a("public~(as a percentage of request)"))):m,u=i?(e=>{var a,t,l,c;const s=null===(t=null===(a=null==e?void 0:e.resource)||void 0===a?void 0:a.current)||void 0===t?void 0:t.averageUtilization;if(!r.a(s))return null;const n=null===(c=null===(l=null==e?void 0:e.resource)||void 0===l?void 0:l.current)||void 0===c?void 0:c.averageValue;return n&&"0"!==n?`${s}% (${n})`:s+"%"})(t):null===(n=null===(s=null==t?void 0:t.resource)||void 0===s?void 0:s.current)||void 0===n?void 0:n.averageValue,p=i?i+"%":o.target.averageValue;return l.createElement(E,{key:c,type:d,current:u,target:p})};return l.createElement(l.Fragment,null,l.createElement(u.ob,{text:a("public~Metrics")}),l.createElement("div",{className:"co-m-table-grid co-m-table-grid--bordered"},l.createElement("div",{className:"row co-m-table-grid__head"},l.createElement("div",{className:"col-xs-6"},a("public~Type")),l.createElement("div",{className:"col-xs-3"},a("public~Current")),l.createElement("div",{className:"col-xs-3"},a("public~Target"))),l.createElement("div",{className:"co-m-table-grid__body"},e.spec.metrics.map((r,s)=>{const n=c.a(e,["status","currentMetrics",s]);switch(r.type){case"External":return((e,a,t)=>{var r,c,s,n;const{external:o}=e,i=o.metric.name,m=(null===(c=null===(r=null==a?void 0:a.external)||void 0===r?void 0:r.current)||void 0===c?void 0:c.averageValue)||(null===(n=null===(s=null==a?void 0:a.external)||void 0===s?void 0:s.current)||void 0===n?void 0:n.value),d=o.target.averageValue||o.target.value;return l.createElement(E,{key:t,type:i,current:m,target:d})})(r,n,s);case"Object":return((e,t,r,c,s)=>{var n;const{object:i}=e,m=i.metric.name,d=l.createElement(o.Trans,{t:a,ns:"public"},{name:m}," on",l.createElement(u.hb,{kind:s.kind,name:s.name,namespace:r,title:i.metric.name})),p=null===(n=null==t?void 0:t.object)||void 0===n?void 0:n.current.value,b=i.target.value;return l.createElement(E,{key:c,type:d,current:p,target:b})})(r,n,e.metadata.namespace,s,e.spec.scaleTargetRef);case"Pods":return((e,t,r)=>{var c;const{pods:s}=e,n=a("public~{{name}} on pods",{name:s.metric.name}),o=null===(c=null==t?void 0:t.pods)||void 0===c?void 0:c.current.averageValue,i=s.target.averageValue;return l.createElement(E,{key:r,type:n,current:o,target:i})})(r,n,s);case"Resource":return t(r,n,s);default:return l.createElement("div",{key:s,className:"row"},l.createElement("div",{className:"col-xs-12"},r.type," ",l.createElement("span",{className:"small text-muted"},a("public~(unrecognized type)"))))}}))))},N=({obj:e})=>{const{t:a}=Object(o.useTranslation)();return l.createElement(l.Fragment,null,l.createElement("div",{className:"co-m-pane__body"},l.createElement(u.ob,{text:a("public~HorizontalPodAutoscaler details")}),l.createElement("div",{className:"row"},l.createElement("div",{className:"col-sm-6"},l.createElement(u.lb,{resource:e})),l.createElement("div",{className:"col-sm-6"},l.createElement("dl",{className:"co-m-pane__details"},l.createElement(u.r,{label:a("public~Scale target"),obj:e,path:"spec.scaleTargetRef"},l.createElement(u.hb,{kind:e.spec.scaleTargetRef.kind,name:e.spec.scaleTargetRef.name,namespace:e.metadata.namespace,title:e.spec.scaleTargetRef.name})),l.createElement(u.r,{label:a("public~Min replicas"),obj:e,path:"spec.minReplicas"}),l.createElement(u.r,{label:a("public~Max replicas"),obj:e,path:"spec.maxReplicas"}),l.createElement(u.r,{label:a("public~Last scale time"),obj:e,path:"status.lastScaleTime"},l.createElement(u.xb,{timestamp:e.status.lastScaleTime})),l.createElement(u.r,{label:a("public~Current replicas"),obj:e,path:"status.currentReplicas"}),l.createElement(u.r,{label:a("public~Desired replicas"),obj:e,path:"status.desiredReplicas"}))))),l.createElement("div",{className:"co-m-pane__body"},l.createElement(g,{obj:e})),l.createElement("div",{className:"co-m-pane__body"},l.createElement(u.ob,{text:a("public~Conditions")}),l.createElement(m.b,{conditions:e.status.conditions})))},f=[u.mc.details(N),u.mc.editYaml(),u.mc.events(p.ResourceEventStream)],k=e=>l.createElement(d.a,Object.assign({},e,{kind:"HorizontalPodAutoscaler",menuActions:v,pages:f}));k.displayName="HorizontalPodAutoscalersDetailsPage";const x=["","","pf-m-hidden pf-m-visible-on-md","pf-m-hidden pf-m-visible-on-lg","pf-m-hidden pf-m-visible-on-xl","pf-m-hidden pf-m-visible-on-xl",u.F.columnClass],y=({obj:e})=>l.createElement(l.Fragment,null,l.createElement(d.k,{className:x[0]},l.createElement(u.hb,{kind:"HorizontalPodAutoscaler",name:e.metadata.name,namespace:e.metadata.namespace})),l.createElement(d.k,{className:s(x[1],"co-break-word"),columnID:"namespace"},l.createElement(u.hb,{kind:"Namespace",name:e.metadata.namespace})),l.createElement(d.k,{className:x[2]},l.createElement(u.L,{kind:"HorizontalPodAutoscaler",labels:e.metadata.labels})),l.createElement(d.k,{className:s(x[3],"co-break-word")},l.createElement(u.hb,{kind:e.spec.scaleTargetRef.kind,name:e.spec.scaleTargetRef.name,namespace:e.metadata.namespace,title:e.spec.scaleTargetRef.name})),l.createElement(d.k,{className:x[4]},e.spec.minReplicas),l.createElement(d.k,{className:x[5]},e.spec.maxReplicas),l.createElement(d.k,{className:x[6]},l.createElement(u.gb,{actions:v,kind:"HorizontalPodAutoscaler",resource:e}))),j=e=>{const{t:a}=Object(o.useTranslation)();return l.createElement(d.j,Object.assign({},e,{"aria-label":a("public~HorizontalPodAutoScalers"),Header:()=>[{title:a("public~Name"),sortField:"metadata.name",transforms:[n.a],props:{className:x[0]}},{title:a("public~Namespace"),sortField:"metadata.namespace",transforms:[n.a],props:{className:x[1]},id:"namespace"},{title:a("public~Labels"),sortField:"metadata.labels",transforms:[n.a],props:{className:x[2]}},{title:a("public~Scale target"),sortField:"spec.scaleTargetRef.name",transforms:[n.a],props:{className:x[3]}},{title:a("public~Min pods"),sortField:"spec.minReplicas",transforms:[n.a],props:{className:x[4]}},{title:a("public~Max pods"),sortField:"spec.maxReplicas",transforms:[n.a],props:{className:x[5]}},{title:"",props:{className:x[6]}}],Row:y,virtualize:!0}))};j.displayName="HorizontalPodAutoscalersList";const R=e=>l.createElement(d.c,Object.assign({},e,{kind:"HorizontalPodAutoscaler",ListComponent:j,canCreate:!0}));R.displayName="HorizontalPodAutoscalersListPage"}}]);
//# sourceMappingURL=hpa-chunk-3a3b2479f4a9339581ed.min.js.map