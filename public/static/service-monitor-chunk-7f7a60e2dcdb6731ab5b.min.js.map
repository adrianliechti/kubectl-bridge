{"version":3,"sources":["webpack:///./public/components/service-monitor.jsx"],"names":["Edit","Delete","factory","menuActions","tableColumnClasses","columnClass","ServiceMonitorTableRow","obj","sm","metadata","className","kind","name","namespace","title","uid","spec","namespaces","length","n","key","selector","serviceSelectorLinks","namespaceSelectorLinks","actions","resource","ServiceMonitorTableHeader","sortField","transforms","props","displayName","ServiceMonitorsList","Header","Row","virtualize","ServiceMonitorsPage","canCreate","ListComponent"],"mappings":"6FAAA,gLAQA,MAAM,KAAEA,EAAI,OAAEC,GAAW,IAAMC,QACzBC,EAAc,CAACH,EAAMC,GA4BrBG,EAAqB,CACzB,GACA,GACA,iCACA,iCACA,IAAMC,aAGFC,EAAyB,EAAGC,IAAKC,MACrC,MAAM,SAAEC,GAAaD,EACrB,OACE,gCACE,gBAAC,IAAS,CAACE,UAAWN,EAAmB,IACvC,gBAAC,KAAY,CACXO,KAAM,aAAkB,uBACxBC,KAAMH,EAASG,KACfC,UAAWJ,EAASI,UACpBC,MAAOL,EAASM,OAGpB,gBAAC,IAAS,CAACL,UAAWN,EAAmB,IACvC,gBAAC,KAAY,CAACO,KAAK,YAAYC,KAAMH,EAASI,UAAWC,MAAOL,EAASI,aAE3E,gBAAC,IAAS,CAACH,UAAWN,EAAmB,IApClB,GAAGY,WAC9B,MAAMC,EAAa,IAAMD,EAAM,+BAAgC,IAC/D,OAAIC,EAAWC,OACN,IAAMD,EAAaE,GACxB,wBAAMC,IAAKD,GACT,gBAAC,KAAQ,CAACE,SAAUL,EAAKK,SAAUV,KAAK,UAAUE,UAAWM,I,OAK5D,gBAAC,KAAQ,CAACE,SAAUL,EAAKK,SAAUV,KAAK,aA0BGW,CAAqBd,IACnE,gBAAC,IAAS,CAACE,UAAWN,EAAmB,IACvC,yBAnDuB,GAAGY,WAChC,MAAMC,EAAa,IAAMD,EAAM,+BAAgC,IAC/D,OAAIC,EAAWC,OACN,IAAMD,EAAaE,GACxB,wBAAMC,IAAKD,GACT,gBAAC,KAAY,CAACR,KAAK,YAAYC,KAAMO,EAAGL,MAAOK,I,OAK9C,wBAAMT,UAAU,cAAY,OAyCzBa,CAAuBf,KAE7B,gBAAC,IAAS,CAACE,UAAWN,EAAmB,IACvC,gBAAC,KAAa,CACZoB,QAASrB,EACTQ,KAAM,aAAkB,uBACxBc,SAAUjB,OAOdkB,EAA4B,IACzB,CACL,CACEZ,MAAO,OACPa,UAAW,gBACXC,WAAY,CAAC,KACbC,MAAO,CAAEnB,UAAWN,EAAmB,KAEzC,CACEU,MAAO,YACPa,UAAW,qBACXC,WAAY,CAAC,KACbC,MAAO,CAAEnB,UAAWN,EAAmB,KAEzC,CACEU,MAAO,mBACPa,UAAW,gBACXC,WAAY,CAAC,KACbC,MAAO,CAAEnB,UAAWN,EAAmB,KAEzC,CACEU,MAAO,uBACPa,UAAW,yBACXC,WAAY,CAAC,KACbC,MAAO,CAAEnB,UAAWN,EAAmB,KAEzC,CACEU,MAAO,GACPe,MAAO,CAAEnB,UAAWN,EAAmB,MAI7CsB,EAA0BI,YAAc,4BAEjC,MAAMC,EAAuBF,GAClC,gBAAC,IAAK,iBACAA,EAAK,cACE,mBACXG,OAAQN,EACRO,IAAK3B,EACL4B,YAAU,KAIDC,EAAuBN,GAClC,gBAAC,IAAQ,iBACHA,EAAK,CACTO,WAAW,EACXzB,KAAM,aAAkB,uBACxB0B,cAAeN","file":"service-monitor-chunk-7f7a60e2dcdb6731ab5b.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { ListPage, Table, TableData } from './factory';\nimport { Kebab, ResourceKebab, ResourceLink, Selector } from './utils';\nimport { ServiceMonitorModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\n\nconst { Edit, Delete } = Kebab.factory;\nconst menuActions = [Edit, Delete];\n\nconst namespaceSelectorLinks = ({ spec }) => {\n  const namespaces = _.get(spec, 'namespaceSelector.matchNames', []);\n  if (namespaces.length) {\n    return _.map(namespaces, (n) => (\n      <span key={n}>\n        <ResourceLink kind=\"Namespace\" name={n} title={n} />\n        &nbsp;&nbsp;\n      </span>\n    ));\n  }\n  return <span className=\"text-muted\">--</span>;\n};\n\nconst serviceSelectorLinks = ({ spec }) => {\n  const namespaces = _.get(spec, 'namespaceSelector.matchNames', []);\n  if (namespaces.length) {\n    return _.map(namespaces, (n) => (\n      <span key={n}>\n        <Selector selector={spec.selector} kind=\"Service\" namespace={n} />\n        &nbsp;&nbsp;\n      </span>\n    ));\n  }\n  return <Selector selector={spec.selector} kind=\"Service\" />;\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-md',\n  Kebab.columnClass,\n];\n\nconst ServiceMonitorTableRow = ({ obj: sm }) => {\n  const { metadata } = sm;\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(ServiceMonitorModel)}\n          name={metadata.name}\n          namespace={metadata.namespace}\n          title={metadata.uid}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <ResourceLink kind=\"Namespace\" name={metadata.namespace} title={metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{serviceSelectorLinks(sm)}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <p>{namespaceSelectorLinks(sm)}</p>\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab\n          actions={menuActions}\n          kind={referenceForModel(ServiceMonitorModel)}\n          resource={sm}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst ServiceMonitorTableHeader = () => {\n  return [\n    {\n      title: 'Name',\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: 'Namespace',\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: 'Service Selector',\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: 'Monitoring Namespace',\n      sortField: 'spec.namespaceSelector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[4] },\n    },\n  ];\n};\nServiceMonitorTableHeader.displayName = 'ServiceMonitorTableHeader';\n\nexport const ServiceMonitorsList = (props) => (\n  <Table\n    {...props}\n    aria-label=\"Service Monitors\"\n    Header={ServiceMonitorTableHeader}\n    Row={ServiceMonitorTableRow}\n    virtualize\n  />\n);\n\nexport const ServiceMonitorsPage = (props) => (\n  <ListPage\n    {...props}\n    canCreate={true}\n    kind={referenceForModel(ServiceMonitorModel)}\n    ListComponent={ServiceMonitorsList}\n  />\n);\n"],"sourceRoot":""}