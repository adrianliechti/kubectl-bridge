{"version":3,"sources":["webpack:///./public/components/storage/attach-storage.tsx"],"names":["AttachStorage_","props","storageProviders","activeProvider","setActiveProvider","memoizedStorageProviders","kindObj","kindsInFlight","params","t","storageProvidersMap","providers","name","Component","then","m","AttachStorage","forEach","item","i","properties","handleChange","e","id","currentTarget","className","ns","inline","kind","namespace","Object","keys","length","entries","map","k","v","key","isChecked","onChange","label","value","loader"],"mappings":"qHAAA,4JA2BA,MA6EMA,EAAiB,YA7EuCC,I,MAC5D,MAAMC,EAAmB,YAA+B,OACjDC,EAAgBC,GAAqB,WAAe,KACrDC,EAA2B,aAAsBH,GAAkB,IACnE,QAAEI,EAAO,cAAEC,GAAkBN,EAC7BO,EAAS,uBAET,EAAEC,GAAM,2BAERC,EAA0C,UAAc,KAC5D,MAAMC,EAAY,CAChB,EAAK,CACHC,KAAMH,EAAE,gCACRI,UAAW,IAAM,yDAA+BC,KAAMC,GAAMA,EAAEC,iBASlE,OANAX,EAAyBY,QAAQ,CAACC,EAAMC,KACtCR,EAAU,IAAGQ,EAAI,IAAO,CACtBP,KAAMM,EAAKE,WAAWR,KACtBC,UAAWK,EAAKE,WAAWP,aAGxBF,GACN,CAACN,EAA0BI,IAExBY,EAAgBC,I,MACpB,MAAMC,EAAqB,QAAhB,EAAAD,aAAC,EAADA,EAAGE,qBAAa,eAAED,GAC7BnB,EAAkBmB,IAGpB,OAAQjB,GAAWC,EACjB,gBAAC,IAAU,MAEX,uBAAKkB,UAAU,mBACb,gBAAC,IAAM,KACL,6BAAQhB,EAAE,wBAEZ,uBAAKgB,UAAU,+BACb,gBAAC,QAAK,CAAChB,EAAGA,EAAGiB,GAAG,UACd,sBAAID,UAAU,sBAAoB,eAClC,uBAAKA,UAAU,uDACZ,I,KACE,IACH,gBAAC,KAAY,CACXE,QAAM,EACNC,KAAoB,QAAd,EAAA3B,aAAK,EAALA,EAAOK,eAAO,eAAEsB,KACtBhB,KAAMJ,EAAOI,KACbiB,UAAWrB,EAAOkB,QAKzBI,OAAOC,KAAKrB,GAAqBsB,OAAS,GACzC,gCACE,yBAAOP,UAAU,eAAehB,EAAE,wBAClC,uBAAKgB,UAAU,yBACZK,OAAOG,QAAQvB,GAAqBwB,IAAI,EAAEC,EAAGC,KAC5C,gBAAC,IAAK,CACJC,IAAKF,EACLG,UAAWnC,IAAmBgC,EAC9BI,SAAUlB,EACVmB,MAAOJ,EAAExB,KACTW,GAAIY,EACJM,MAAOL,EAAExB,KACTA,KAAMwB,EAAExB,UAMlB,gBAAC,IAAiB,KAChB,gBAAC,IAAc,eAAC8B,OAAQhC,EAAoBP,GAAgBU,WAAeZ,QAQtEe,EAAiBf,IAC5B,MAAMO,EAAS,sBACf,OAAO,gBAACR,EAAc,iBAAKC,EAAK,CAAEO,OAAQA,MAG7B","file":"attach-storage-chunk-5a4d008d19c6b1714135.min.js","sourcesContent":["import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { Radio } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { useExtensions } from '@console/plugin-sdk';\nimport { isStorageProvider, StorageProvider } from '@console/dynamic-plugin-sdk';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { ErrorBoundaryPage } from '@console/shared/src/components/error';\nimport { K8sKind } from '../../module/k8s';\nimport { AsyncComponent, ResourceLink, LoadingBox } from '../utils';\nimport { connectToPlural } from '../../kinds';\nimport './attach-storage.scss';\n\nexport type AttachStorageFormProps = {\n  kindObj: K8sKind;\n  kindsInFlight: any;\n  history: History;\n};\n\ntype StorageProviderMap = {\n  [key: string]: {\n    name: string;\n    Component: () => Promise<any>;\n  };\n};\n\nconst AttachStorageInner: React.FC<AttachStorageFormProps> = (props) => {\n  const storageProviders = useExtensions<StorageProvider>(isStorageProvider);\n  const [activeProvider, setActiveProvider] = React.useState('0');\n  const memoizedStorageProviders = useDeepCompareMemoize(storageProviders, true);\n  const { kindObj, kindsInFlight } = props;\n  const params = useParams();\n\n  const { t } = useTranslation();\n\n  const storageProvidersMap: StorageProviderMap = React.useMemo(() => {\n    const providers = {\n      '0': {\n        name: t('public~PersistentVolumeClaim'),\n        Component: () => import('./attach-pvc-storage').then((m) => m.AttachStorage),\n      },\n    };\n    memoizedStorageProviders.forEach((item, i) => {\n      providers[`${i + 1}`] = {\n        name: item.properties.name,\n        Component: item.properties.Component,\n      };\n    });\n    return providers;\n  }, [memoizedStorageProviders, t]);\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const id = e?.currentTarget?.id;\n    setActiveProvider(id as string);\n  };\n\n  return !kindObj && kindsInFlight ? (\n    <LoadingBox />\n  ) : (\n    <div className=\"co-m-pane__body\">\n      <Helmet>\n        <title>{t('public~Add Storage')}</title>\n      </Helmet>\n      <div className=\"co-storage-heading__wrapper\">\n        <Trans t={t} ns=\"public\">\n          <h1 className=\"co-m-pane__heading\">Add Storage</h1>\n          <div className=\"co-m-pane__explanation co-storage-heading__subtitle\">\n            {' '}\n            to{' '}\n            <ResourceLink\n              inline\n              kind={props?.kindObj?.kind}\n              name={params.name}\n              namespace={params.ns}\n            />\n          </div>\n        </Trans>\n      </div>\n      {Object.keys(storageProvidersMap).length > 1 && (\n        <>\n          <label className=\"co-required\">{t('public~Storage type')}</label>\n          <div className=\"co-storage__selection\">\n            {Object.entries(storageProvidersMap).map(([k, v]) => (\n              <Radio\n                key={k}\n                isChecked={activeProvider === k}\n                onChange={handleChange}\n                label={v.name}\n                id={k}\n                value={v.name}\n                name={v.name}\n              />\n            ))}\n          </div>\n        </>\n      )}\n      <ErrorBoundaryPage>\n        <AsyncComponent loader={storageProvidersMap[activeProvider].Component} {...props} />\n      </ErrorBoundaryPage>\n    </div>\n  );\n};\n\nconst AttachStorage_ = connectToPlural(AttachStorageInner);\n\nexport const AttachStorage = (props) => {\n  const params = useParams();\n  return <AttachStorage_ {...props} params={params} />;\n};\n\nexport default AttachStorage;\n"],"sourceRoot":""}