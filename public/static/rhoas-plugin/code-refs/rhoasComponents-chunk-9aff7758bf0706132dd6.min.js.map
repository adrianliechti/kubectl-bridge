{"version":3,"sources":["webpack:///./packages/rhoas-plugin/src/components/service-list/ServiceInstance.tsx","webpack:///./packages/rhoas-plugin/src/components/service-table/ServiceInstanceFilter.tsx","webpack:///./packages/rhoas-plugin/src/components/service-table/ServiceInstanceTable.tsx","webpack:///./packages/rhoas-plugin/src/components/service-table/ServiceIconStatus.tsx","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/rhoas-plugin/src/components/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/rhoas-plugin/src/utils/conditionHandler.ts","webpack:///./packages/rhoas-plugin/src/utils/resourceCreators.ts","webpack:///./packages/rhoas-plugin/src/components/service-list/ServiceListPage.tsx","webpack:///./packages/rhoas-plugin/src/components/states/index.ts","webpack:///./packages/rhoas-plugin/src/components/states/ServicesEmptyState.tsx"],"names":["kafkaArray","selectedKafka","setSelectedKafka","currentKafkaConnections","createKafkaConnectionFlow","isSubmitting","currentNamespace","connectionError","textInputNameValue","setTextInputNameValue","pageKafkas","filter","kafka","name","includes","t","noKafkaInstancesExist","ns","href","rel","target","isInline","variant","onClick","push","flexLayout","style","borderTop","fullWidth","title","message","actionLabel","action","icon","length","currentServices","every","service","id","status","handleSubmit","errorMessage","submitLabel","disableSubmit","undefined","resetLabel","sticky","handleCancel","goBack","className","value","type","onChange","_event","placeholder","focusFilterInput","formattedKafkas","setFormattedKafkas","kafkaRows","setKafkaRows","sortBy","setSortBy","formatTableRowData","updatedRows","tableRow","map","provider","region","owner","createdAt","cells","timestamp","disableSelection","tableColumns","transforms","emptyStateRows","colSpan","sm","titleText","headingLevel","rows","onSelect","event","isSelected","rowId","row","index","selected","selectVariant","radio","onSort","direction","filterKey","sortedRows","sort","a","b","keyA","keyB","asc","reverse","text","size","spacer","default","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","spec","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","resource","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","namespace","filterBasedOnActiveApplication","data","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","resources","obj","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","kind","all","createTopologyResourceConnection","source","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","metadata","setSecret","inProgress","setInProgress","error","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","err","onNameChanged","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","required","onFormDisable","disable","onSubmit","submitText","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","children","extraMargin","dataTest","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","labels","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","dataSelector","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","opts","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","factory","dataModelFactory","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alerts","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","dispatch","app","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","getCondition","getFinishedCondition","isResourceStatusSuccessful","isAccessTokenSecretValid","createCloudServicesRequestIfNeeded","currentRequest","info","toISOString","mkRequest","accessTokenSecretName","createCloudServicesRequest","createSecretIfNeeded","apiTokenValue","currentSecret","createServiceAccountIfNeeded","rhoasServiceAccount","patchServiceAccountRequest","serviceAcct","serviceAccountName","serviceAccountDescription","serviceAccountSecretName","createManagedServiceAccount","errorToLog","createKafkaConnection","kafkaId","kafkaName","kafkaConnection","createdConnection","deleteKafkaConnection","listOfCurrentKafkaConnectionsById","kafkaConnections","setCurrentKafkaConnections","setSubmitting","setConnectionError","isManagedServicesTypeEnabled","currentKafka","connectionErrorObj","watchedKafkaRequest","remoteKafkaInstances","userKafkas","hasGutter","light","fieldId","ServicesEmptyState","iconClass"],"mappings":"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","file":"rhoas-plugin/code-refs/rhoasComponents-chunk-9aff7758bf0706132dd6.min.js","sourcesContent":["import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\nimport { useTranslation, Trans } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { history } from '@console/internal/components/utils';\nimport { FormFooter, FormBody } from '@console/shared';\nimport { CloudKafka } from '../../utils/rhoas-types';\nimport ServiceInstanceFilter from '../service-table/ServiceInstanceFilter';\nimport ServiceInstanceTable from '../service-table/ServiceInstanceTable';\nimport { ServicesEmptyState } from '../states';\n\ntype ConnectionErrorProps = {\n  title: string;\n  message: string;\n  action: () => void;\n  actionLabel: string;\n};\n\ntype ServiceInstanceProps = {\n  kafkaArray: CloudKafka[];\n  selectedKafka: number;\n  setSelectedKafka: (selectedKafka: number) => void;\n  currentKafkaConnections: string[];\n  createKafkaConnectionFlow: () => void;\n  isSubmitting: boolean;\n  currentNamespace: string;\n  connectionError: ConnectionErrorProps;\n};\n\nconst areAllServicesSelected = (currentServices: string[], listOfServices: CloudKafka[]) =>\n  listOfServices.every(\n    (service) => currentServices.includes(service.id) || service.status !== 'ready',\n  );\n\nconst ServiceInstance: React.FC<ServiceInstanceProps> = ({\n  kafkaArray,\n  selectedKafka,\n  setSelectedKafka,\n  currentKafkaConnections,\n  createKafkaConnectionFlow,\n  isSubmitting,\n  currentNamespace,\n  connectionError,\n}: ServiceInstanceProps) => {\n  const [textInputNameValue, setTextInputNameValue] = React.useState<string>('');\n  const pageKafkas = React.useMemo(\n    () => kafkaArray.filter((kafka) => kafka.name.includes(textInputNameValue)),\n    [kafkaArray, textInputNameValue],\n  );\n\n  const { t } = useTranslation();\n\n  const noKafkaInstancesExist = (\n    <Trans t={t} ns=\"rhoas-plugin\">\n      To make sure the instance exists and that you&lsquo;re authorized to access it, you can see\n      your Kafka instances at{' '}\n      <a\n        href=\"https://console.redhat.com/openshift/token\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        https://console.redhat.com.\n      </a>{' '}\n      To discover more managed services, go to the{' '}\n      <Button\n        isInline\n        variant=\"link\"\n        onClick={() => history.push(`/catalog/ns/${currentNamespace}?catalogType=managedservices`)}\n      >\n        managed services catalog.\n      </Button>\n    </Trans>\n  );\n\n  return (\n    <>\n      <FormBody flexLayout style={{ borderTop: 0 }}>\n        <FormSection fullWidth>\n          {connectionError ? (\n            <ServicesEmptyState\n              title={connectionError.title}\n              message={connectionError.message}\n              actionLabel={connectionError.actionLabel}\n              action={connectionError.action}\n              icon={TimesCircleIcon}\n            />\n          ) : kafkaArray.length === 0 ? (\n            <ServicesEmptyState\n              title={t('rhoas-plugin~Could not connect to Kafka instances')}\n              message={noKafkaInstancesExist}\n              icon={TimesCircleIcon}\n            />\n          ) : areAllServicesSelected(currentKafkaConnections, kafkaArray) ? (\n            <ServicesEmptyState\n              title={t('rhoas-plugin~All available Kafka instances are connected to this project')}\n              actionLabel={t('rhoas-plugin~See Kafka instances in topology view')}\n              action={() => history.push(`/topology/ns/${currentNamespace}`)}\n              icon={TimesCircleIcon}\n            />\n          ) : (\n            <>\n              <ServiceInstanceFilter\n                textInputNameValue={textInputNameValue}\n                setTextInputNameValue={setTextInputNameValue}\n              />\n              <ServiceInstanceTable\n                kafkaArray={kafkaArray}\n                pageKafkas={pageKafkas}\n                setTextInputNameValue={setTextInputNameValue}\n                selectedKafka={selectedKafka}\n                setSelectedKafka={setSelectedKafka}\n                currentKafkaConnections={currentKafkaConnections}\n              />\n            </>\n          )}\n        </FormSection>\n      </FormBody>\n      <FormFooter\n        handleSubmit={createKafkaConnectionFlow}\n        isSubmitting={isSubmitting}\n        errorMessage=\"\"\n        submitLabel={t('rhoas-plugin~Next')}\n        disableSubmit={selectedKafka === undefined || connectionError !== undefined || isSubmitting}\n        resetLabel={t('rhoas-plugin~Cancel')}\n        sticky\n        handleCancel={history.goBack}\n      />\n    </>\n  );\n};\n\nexport default ServiceInstance;\n","import * as React from 'react';\nimport {\n  TextInput,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  ToolbarGroup,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { KEYBOARD_SHORTCUTS } from '@console/shared';\n\ntype ServiceInstanceFilterProps = {\n  textInputNameValue: string;\n  setTextInputNameValue: (textInputNameValue: string) => void;\n};\n\nconst ServiceInstanceFilter: React.FC<ServiceInstanceFilterProps> = ({\n  textInputNameValue,\n  setTextInputNameValue,\n}: ServiceInstanceFilterProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Toolbar data-test-id=\"toolbar-filter-instances\">\n      <ToolbarContent>\n        <ToolbarGroup variant=\"filter-group\">\n          <ToolbarItem>\n            <div className=\"has-feedback\">\n              <TextInput\n                value={textInputNameValue}\n                type=\"text\"\n                onChange={(_event, value) => setTextInputNameValue(value)}\n                aria-label={t('rhoas-plugin~Search by name')}\n                placeholder={`${t('rhoas-plugin~Search by name')}...`}\n                className=\"co-text-filter\"\n              />\n              <span className=\"co-text-filter-feedback\">\n                <kbd className=\"co-kbd co-kbd__filter-input\">\n                  {KEYBOARD_SHORTCUTS.focusFilterInput}\n                </kbd>\n              </span>\n            </div>\n          </ToolbarItem>\n        </ToolbarGroup>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\nexport default ServiceInstanceFilter;\n","import * as React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Bullseye,\n  EmptyStateIcon,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  sortable,\n  RowSelectVariant,\n  SortByDirection,\n  Tbody,\n  Tr,\n  Td,\n} from '@patternfly/react-table';\nimport {\n  Table as TableDeprecated,\n  TableHeader as TableHeaderDeprecated,\n  TableBody as TableBodyDeprecated,\n} from '@patternfly/react-table/deprecated';\nimport { useTranslation } from 'react-i18next';\nimport { Timestamp } from '@console/internal/components/utils';\nimport { CloudKafka } from '../../utils/rhoas-types';\nimport ServiceIconStatus from './ServiceIconStatus';\nimport './ServiceInstanceTable.scss';\n\ntype FormattedKafkas = {\n  cells: JSX.Element[];\n  selected: boolean;\n};\n\ntype ServiceInstanceTableProps = {\n  kafkaArray: CloudKafka[];\n  pageKafkas: CloudKafka[];\n  selectedKafka: number;\n  setSelectedKafka: (selectedKafka: number) => void;\n  currentKafkaConnections: string[];\n  setTextInputNameValue: (input: string) => void;\n};\n\nconst ServiceInstanceTable: React.FC<ServiceInstanceTableProps> = ({\n  pageKafkas,\n  setSelectedKafka,\n  currentKafkaConnections,\n  setTextInputNameValue,\n}: ServiceInstanceTableProps) => {\n  const [formattedKafkas, setFormattedKafkas] = React.useState<FormattedKafkas[]>([]);\n  const [kafkaRows, setKafkaRows] = React.useState(pageKafkas);\n  const [sortBy, setSortBy] = React.useState({});\n  const { t } = useTranslation();\n\n  const formatTableRowData = React.useCallback(\n    (updatedRows) => {\n      const tableRow =\n        updatedRows &&\n        updatedRows.map(({ id, name, status, provider, region, owner, createdAt }) => {\n          return {\n            cells: [\n              { title: name },\n              { title: provider === 'aws' ? 'Amazon Web Services' : provider },\n              { title: region === 'us-east-1' ? 'US East, N.Virginia' : region },\n              { title: owner },\n              { title: <ServiceIconStatus status={status} /> },\n              { title: <Timestamp timestamp={createdAt} /> },\n            ],\n            ...((currentKafkaConnections.includes(id) || status !== 'ready') && {\n              disableSelection: true,\n            }),\n          };\n        });\n\n      setFormattedKafkas(tableRow);\n    },\n    [currentKafkaConnections],\n  );\n\n  React.useEffect(() => {\n    setKafkaRows(pageKafkas);\n    formatTableRowData(kafkaRows);\n  }, [pageKafkas, currentKafkaConnections, formatTableRowData, kafkaRows]);\n\n  const tableColumns = [\n    { title: t('rhoas-plugin~Name'), transforms: [sortable] },\n    { title: t('rhoas-plugin~Cloud provider'), transforms: [sortable] },\n    { title: t('rhoas-plugin~Region'), transforms: [sortable] },\n    { title: t('rhoas-plugin~Owner'), transforms: [sortable] },\n    { title: t('rhoas-plugin~Status'), transforms: [sortable] },\n    { title: t('rhoas-plugin~Created'), transforms: [sortable] },\n  ];\n\n  const clearFilters = () => {\n    const value = '';\n    setTextInputNameValue(value);\n  };\n\n  const emptyStateRows = (\n    <Tbody>\n      <Tr>\n        <Td colSpan={7}>\n          <Bullseye>\n            <EmptyState variant={EmptyStateVariant.sm}>\n              <EmptyStateHeader\n                titleText={<>{t('rhoas-plugin~No Kafka instances found')}</>}\n                icon={<EmptyStateIcon icon={SearchIcon} />}\n                headingLevel=\"h2\"\n              />\n              <EmptyStateBody>\n                {t('rhoas-plugin~No results match the filter criteria.')}\n              </EmptyStateBody>\n              <EmptyStateFooter>\n                <Button variant=\"link\" onClick={clearFilters}>\n                  {t('rhoas-plugin~Clear filters')}\n                </Button>\n              </EmptyStateFooter>\n            </EmptyState>\n          </Bullseye>\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n\n  const onSelectTableRow = (event, isSelected, rowId) => {\n    const rows = formattedKafkas.map((row, index) => {\n      row.selected = rowId === index;\n      return row;\n    });\n    setFormattedKafkas(rows);\n    setSelectedKafka(rowId);\n  };\n\n  const onSort = (_event, index, direction) => {\n    let filterKey = '';\n    const filterColumns = ['name', 'provider', 'region', 'owner', 'status', 'createdAt'];\n    filterKey = filterColumns[index - 1];\n\n    const sortedRows = kafkaRows.sort((a, b) => {\n      const keyA = a[filterKey];\n      const keyB = b[filterKey];\n      if (keyA < keyB) {\n        return -1;\n      }\n      if (keyA > keyB) {\n        return 1;\n      }\n      return 0;\n    });\n    setSortBy({ index, direction });\n    formatTableRowData(direction === SortByDirection.asc ? sortedRows : sortedRows.reverse());\n    setKafkaRows(direction === SortByDirection.asc ? sortedRows : sortedRows.reverse());\n  };\n\n  return formattedKafkas && pageKafkas ? (\n    <TableDeprecated\n      aria-label={t('rhoas-plugin~List of Kafka Instances')}\n      cells={tableColumns}\n      rows={formattedKafkas}\n      onSelect={onSelectTableRow}\n      selectVariant={RowSelectVariant.radio}\n      className=\"rhoas-service-instance-table\"\n      onSort={onSort}\n      sortBy={sortBy}\n    >\n      <TableHeaderDeprecated />\n      {pageKafkas.length === 0 ? emptyStateRows : <TableBodyDeprecated />}\n    </TableDeprecated>\n  ) : null;\n};\n\nexport default ServiceInstanceTable;\n","import * as React from 'react';\nimport { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  GreenCheckCircleIcon,\n  YellowExclamationTriangleIcon,\n  RedExclamationCircleIcon,\n} from '@console/shared';\n\ntype ServiceIconStatusProps = {\n  status: string;\n};\n\nconst ServiceIconStatus: React.FC<ServiceIconStatusProps> = ({\n  status,\n}: ServiceIconStatusProps) => {\n  const { t } = useTranslation();\n  let icon;\n  let text;\n\n  switch (status) {\n    case 'ready':\n      icon = <GreenCheckCircleIcon />;\n      text = t('rhoas-plugin~Ready');\n      break;\n    case 'accepted':\n      icon = <YellowExclamationTriangleIcon />;\n      text = t('rhoas-plugin~Creation pending');\n      break;\n    case 'provisioning':\n    case 'preparing':\n      icon = (\n        <Spinner\n          size=\"md\"\n          aria-label={t('rhoas-plugin~Creation in progress')}\n          aria-valuetext={t('rhoas-plugin~Creation in progress')}\n        />\n      );\n      text = t('rhoas-plugin~Creation in progress');\n      break;\n    case 'failed':\n      icon = <RedExclamationCircleIcon />;\n      text = t('rhoas-plugin~Failed');\n      break;\n    case 'deprovision':\n      text = t('rhoas-plugin~Deletion in progress');\n      break;\n    default:\n      icon = <YellowExclamationTriangleIcon />;\n      text = t('rhoas-plugin~Creation pending');\n      break;\n  }\n\n  return (\n    <Flex>\n      {icon && <FlexItem spacer={{ default: 'spacerSm' }}>{icon}</FlexItem>}\n      <FlexItem>{text}</FlexItem>\n    </Flex>\n  );\n};\n\nexport default ServiceIconStatus;\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export { default as ServiceListPage } from './service-list/ServiceListPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { StatusCondition } from './rhoas-types';\n\nexport const getCondition = (request: K8sResourceKind, name: string) => {\n  if (request?.status?.conditions) {\n    return request.status.conditions.find((condition: StatusCondition) => condition.type === name);\n  }\n  return undefined;\n};\n\nexport const getFinishedCondition = (request: K8sResourceKind) => getCondition(request, 'Finished');\n\nexport const isResourceStatusSuccessful = (request: K8sResourceKind) => {\n  const condition = getCondition(request, 'Finished');\n  return condition?.status === 'True';\n};\n\nexport const isAccessTokenSecretValid = (request: K8sResourceKind) =>\n  getCondition(request, 'AcccesTokenSecretValid')?.status === 'True';\n","import { SecretModel } from '@console/internal/models';\nimport {\n  k8sWaitForUpdate,\n  k8sCreate,\n  k8sGet,\n  k8sPatch,\n  k8sUpdate,\n  k8sKillByName,\n} from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport {\n  AccessTokenSecretName,\n  ServiceAccountCRName,\n  ServiceAccountSecretName,\n  ServicesRequestCRName,\n} from '../const';\nimport {\n  KafkaConnectionModel,\n  CloudServiceAccountRequest,\n  CloudServicesRequestModel,\n} from '../models/rhoas';\nimport { getFinishedCondition, isResourceStatusSuccessful } from './conditionHandler';\n\n/**\n * Create service account for purpose of supplying connection credentials\n *\n * @param currentNamespace\n */\nexport const createManagedServiceAccount = async (currentNamespace: string) => {\n  const serviceAcct = {\n    apiVersion: `${CloudServicesRequestModel.apiGroup}/${CloudServicesRequestModel.apiVersion}`,\n    kind: CloudServiceAccountRequest.kind,\n    metadata: {\n      name: ServiceAccountCRName,\n      namespace: currentNamespace,\n    },\n    spec: {\n      accessTokenSecretName: AccessTokenSecretName,\n      serviceAccountName: `rhoas-operator-${getRandomChars(4)}`,\n      serviceAccountDescription: 'Created by rhoas operator',\n      serviceAccountSecretName: ServiceAccountSecretName,\n    },\n  };\n\n  return k8sCreate(CloudServiceAccountRequest, serviceAcct);\n};\n\n/**\n * Create request to fetch all kafkas from upstream\n */\nexport const createCloudServicesRequest = async (currentNamespace: string) => {\n  const mkRequest = {\n    apiVersion: `${CloudServicesRequestModel.apiGroup}/${CloudServicesRequestModel.apiVersion}`,\n    kind: CloudServicesRequestModel.kind,\n    metadata: {\n      name: ServicesRequestCRName,\n      namespace: currentNamespace,\n    },\n    spec: {\n      accessTokenSecretName: AccessTokenSecretName,\n    },\n  };\n\n  return k8sCreate(CloudServicesRequestModel, mkRequest);\n};\n\nexport const patchServiceAccountRequest = async (request: any) => {\n  const path = '/spec/forceRefresh';\n  return k8sPatch(CloudServiceAccountRequest, request, [\n    {\n      path,\n      op: 'add',\n      value: new Date().toISOString(),\n    },\n  ]);\n};\n\nexport const patchCloudServicesRequest = async (request: any) => {\n  const path = '/spec/forceRefresh';\n\n  return k8sPatch(CloudServicesRequestModel, request, [\n    {\n      path,\n      op: 'add',\n      value: new Date().toISOString(),\n    },\n  ]);\n};\n\nexport const createCloudServicesRequestIfNeeded = async (currentNamespace) => {\n  let currentRequest;\n  try {\n    currentRequest = await k8sGet(\n      CloudServicesRequestModel,\n      ServicesRequestCRName,\n      currentNamespace,\n    );\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.info('rhoas: CloudServicesRequest already exist');\n  }\n\n  if (currentRequest) {\n    return patchCloudServicesRequest(currentRequest);\n  }\n  return createCloudServicesRequest(currentNamespace);\n};\n\nexport const createSecretIfNeeded = async (currentNamespace: string, apiTokenValue: string) => {\n  let currentSecret;\n  try {\n    currentSecret = await k8sGet(SecretModel, AccessTokenSecretName, currentNamespace);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.info(\"rhoas: auth secret doesn't exist\");\n  }\n\n  if (currentSecret) {\n    delete currentSecret.data;\n    currentSecret.stringData = { value: apiTokenValue };\n    return k8sUpdate(SecretModel, currentSecret);\n  }\n  const secret = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      name: AccessTokenSecretName,\n      namespace: currentNamespace,\n    },\n    stringData: {\n      value: apiTokenValue,\n    },\n  };\n  return k8sCreate(SecretModel, secret);\n};\n\nexport const createServiceAccountIfNeeded = async (currentNamespace) => {\n  let rhoasServiceAccount;\n  try {\n    rhoasServiceAccount = await k8sGet(\n      CloudServiceAccountRequest,\n      ServiceAccountCRName,\n      currentNamespace,\n    );\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.info(\"rhoas: ServiceAccount doesn't exist. Creating new ServiceAccount\");\n  }\n  let request;\n  if (rhoasServiceAccount) {\n    request = await patchServiceAccountRequest(rhoasServiceAccount);\n  } else {\n    request = await createManagedServiceAccount(currentNamespace);\n  }\n\n  await k8sWaitForUpdate(\n    CloudServiceAccountRequest,\n    request,\n    (resource) => {\n      const condition = getFinishedCondition(resource);\n\n      if (condition) {\n        if (isResourceStatusSuccessful(resource)) {\n          return true;\n        }\n        const errorToLog = condition.message;\n        throw new Error(errorToLog);\n      }\n      return false;\n    },\n    50000,\n  );\n};\n\nexport const createKafkaConnection = async (\n  kafkaId: string,\n  kafkaName: string,\n  currentNamespace: string,\n) => {\n  const kafkaConnection = {\n    apiVersion: `${CloudServicesRequestModel.apiGroup}/${CloudServicesRequestModel.apiVersion}`,\n    kind: KafkaConnectionModel.kind,\n    metadata: {\n      name: kafkaName,\n      namespace: currentNamespace,\n      labels: {\n        'app.kubernetes.io/component': 'external-service',\n      },\n    },\n    spec: {\n      kafkaId,\n      accessTokenSecretName: AccessTokenSecretName,\n      credentials: {\n        serviceAccountSecretName: ServiceAccountSecretName,\n      },\n    },\n  };\n\n  const createdConnection = await k8sCreate(KafkaConnectionModel, kafkaConnection);\n  return k8sWaitForUpdate(\n    KafkaConnectionModel,\n    createdConnection,\n    (resource) => {\n      const condition = getFinishedCondition(resource);\n\n      if (condition) {\n        if (condition.status === 'True') {\n          return true;\n        }\n        throw new Error(condition.message);\n      }\n      return false;\n    },\n    20000,\n  );\n};\n\nexport const deleteKafkaConnection = (kafkaName: string, currentNamespace: string) =>\n  k8sKillByName(KafkaConnectionModel, kafkaName, currentNamespace);\n\nexport const listOfCurrentKafkaConnectionsById = async (currentNamespace: string) => {\n  const kafkaConnections = await k8sGet(KafkaConnectionModel, null, currentNamespace);\n  if (kafkaConnections) {\n    return kafkaConnections.items.map((kafka) => kafka.spec.kafkaId);\n  }\n\n  return Promise.resolve([]);\n};\n","import * as React from 'react';\nimport { FormGroup, Title, Split, SplitItem } from '@patternfly/react-core';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { history, LoadingBox } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport {\n  isCatalogTypeEnabled,\n  FormHeader,\n  FlexForm,\n  FormBody,\n  useActiveNamespace,\n  TechPreviewBadge,\n} from '@console/shared';\nimport { MANAGED_SERVICES_CATALOG_TYPE_ID, ServicesRequestCRName } from '../../const';\nimport { CloudServicesRequestModel } from '../../models/rhoas';\nimport {\n  isResourceStatusSuccessful,\n  isAccessTokenSecretValid,\n  getFinishedCondition,\n} from '../../utils/conditionHandler';\nimport {\n  createKafkaConnection,\n  createCloudServicesRequestIfNeeded,\n  deleteKafkaConnection,\n  listOfCurrentKafkaConnectionsById,\n} from '../../utils/resourceCreators';\nimport { KafkaRequest } from '../../utils/rhoas-types';\nimport { ServicesEmptyState } from '../states';\nimport ServiceInstance from './ServiceInstance';\n\ntype ConnectionErrorProps = {\n  title: string;\n  message: string;\n  action: () => void;\n  actionLabel: string;\n};\n\nconst ServiceListPage: React.FC = () => {\n  const [currentNamespace] = useActiveNamespace();\n  const [selectedKafka, setSelectedKafka] = React.useState<number>();\n  const [currentKafkaConnections, setCurrentKafkaConnections] = React.useState<string[]>();\n  const [isSubmitting, setSubmitting] = React.useState<boolean>(false);\n  const [connectionError, setConnectionError] = React.useState<ConnectionErrorProps>();\n  const isManagedServicesTypeEnabled = isCatalogTypeEnabled(MANAGED_SERVICES_CATALOG_TYPE_ID);\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    const createKafkaRequestFlow = async () => {\n      try {\n        await createCloudServicesRequestIfNeeded(currentNamespace);\n        const currentKafka = await listOfCurrentKafkaConnectionsById(currentNamespace);\n        if (currentKafka) {\n          setCurrentKafkaConnections(currentKafka);\n        }\n      } catch (error) {\n        const connectionErrorObj = {\n          title: t('rhoas-plugin~Could not fetch services'),\n          message: t('rhoas-plugin~Failed to load list of services', {\n            error,\n          }),\n          action: () => history.push(`/catalog/ns/${currentNamespace}?catalogType=managedservices`),\n          actionLabel: t('rhoas-plugin~Go back to Services Catalog'),\n        };\n        setConnectionError(connectionErrorObj);\n      }\n    };\n    createKafkaRequestFlow();\n  }, [currentNamespace, t]);\n\n  const [watchedKafkaRequest] = useK8sWatchResource<KafkaRequest>({\n    kind: referenceForModel(CloudServicesRequestModel),\n    name: ServicesRequestCRName,\n    namespace: currentNamespace,\n    isList: false,\n    optional: true,\n  });\n\n  const remoteKafkaInstances = React.useMemo(() => watchedKafkaRequest?.status?.userKafkas || [], [\n    watchedKafkaRequest,\n  ]);\n\n  const createKafkaConnectionFlow = React.useCallback(async () => {\n    setSubmitting(true);\n    const { id, name } = remoteKafkaInstances[selectedKafka];\n    try {\n      await createKafkaConnection(id, name, currentNamespace);\n      history.push(`/topology/ns/${currentNamespace}`);\n      setSubmitting(false);\n    } catch (error) {\n      deleteKafkaConnection(name, currentNamespace);\n\n      const connectionErrorObj = {\n        title: t('rhoas-plugin~Failed to create connection'),\n        message: t('rhoas-plugin~Please try again', {\n          error,\n        }),\n        action: () =>\n          isManagedServicesTypeEnabled\n            ? history.push(`/catalog/ns/${currentNamespace}?catalogType=managedservices`)\n            : null,\n        actionLabel: isManagedServicesTypeEnabled\n          ? t('rhoas-plugin~Go back to Services Catalog')\n          : null,\n      };\n      setConnectionError(connectionErrorObj);\n\n      setSubmitting(false);\n    }\n  }, [currentNamespace, isManagedServicesTypeEnabled, remoteKafkaInstances, selectedKafka, t]);\n\n  if (\n    !watchedKafkaRequest ||\n    !watchedKafkaRequest.status ||\n    currentKafkaConnections === undefined\n  ) {\n    return <LoadingBox />;\n  }\n\n  const title = (\n    <Split className=\"odc-form-section-pipeline\" hasGutter>\n      <SplitItem className=\"odc-form-section__heading\">\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          {t('rhoas-plugin~Select Kafka Instance')}\n        </Title>\n      </SplitItem>\n      <SplitItem>\n        <TechPreviewBadge />\n      </SplitItem>\n    </Split>\n  );\n\n  return (\n    <NamespacedPage variant={NamespacedPageVariants.light} disabled hideApplications>\n      <FlexForm>\n        <FormBody>\n          <FormHeader\n            title={title}\n            helpText={t(\n              'rhoas-plugin~The selected Kafka instance will be added to the topology view.',\n            )}\n          />\n        </FormBody>\n        {!isResourceStatusSuccessful(watchedKafkaRequest) &&\n        !isAccessTokenSecretValid(watchedKafkaRequest) ? (\n          <FormGroup fieldId=\"emptystate1\">\n            <ServicesEmptyState\n              title={t('rhoas-plugin~Could not fetch services')}\n              message={t('rhoas-plugin~Could not connect to RHOAS with API Token')}\n              action={() =>\n                isManagedServicesTypeEnabled\n                  ? history.push(`/catalog/ns/${currentNamespace}?catalogType=managedservices`)\n                  : null\n              }\n              actionLabel={\n                isManagedServicesTypeEnabled ? t('rhoas-plugin~Go back to Services Catalog') : null\n              }\n              icon={TimesCircleIcon}\n            />\n          </FormGroup>\n        ) : !isResourceStatusSuccessful(watchedKafkaRequest) ? (\n          <FormGroup fieldId=\"emptystate2\">\n            <FormSection fullWidth>\n              <ServicesEmptyState\n                title={t('rhoas-plugin~Could not fetch services')}\n                message={t('rhoas-plugin~Failed to load list of services', {\n                  error: getFinishedCondition(watchedKafkaRequest)?.message,\n                })}\n                action={() =>\n                  isManagedServicesTypeEnabled\n                    ? history.push(`/catalog/ns/${currentNamespace}?catalogType=managedservices`)\n                    : null\n                }\n                actionLabel={\n                  isManagedServicesTypeEnabled\n                    ? t('rhoas-plugin~Go back to Services Catalog')\n                    : null\n                }\n                icon={TimesCircleIcon}\n              />\n            </FormSection>\n          </FormGroup>\n        ) : (\n          <ServiceInstance\n            kafkaArray={remoteKafkaInstances}\n            selectedKafka={selectedKafka}\n            setSelectedKafka={setSelectedKafka}\n            currentKafkaConnections={currentKafkaConnections}\n            createKafkaConnectionFlow={createKafkaConnectionFlow}\n            isSubmitting={isSubmitting}\n            currentNamespace={currentNamespace}\n            connectionError={connectionError}\n          />\n        )}\n      </FlexForm>\n    </NamespacedPage>\n  );\n};\n\nexport default ServiceListPage;\n","export * from './ServicesEmptyState';\n","import * as React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { history } from '@console/internal/components/utils';\n\ntype ServicesEmptyStateProps = {\n  title: string;\n  message?: string | JSX.Element;\n  actionLabel?: string;\n  action?: () => void;\n  icon?: React.ComponentClass | JSX.Element | any;\n  iconClass?: string;\n};\n\nexport const ServicesEmptyState = ({\n  title,\n  message,\n  action,\n  actionLabel,\n  icon,\n  iconClass,\n}: ServicesEmptyStateProps) => (\n  <EmptyState>\n    <EmptyStateHeader\n      titleText={<>{title}</>}\n      icon={<EmptyStateIcon className={iconClass} icon={icon} />}\n      headingLevel=\"h4\"\n    />\n    <EmptyStateFooter>\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n      {action && (\n        <Button variant=\"link\" onClick={action || history.goBack}>\n          {actionLabel}\n        </Button>\n      )}\n    </EmptyStateFooter>\n  </EmptyState>\n);\n"],"sourceRoot":""}