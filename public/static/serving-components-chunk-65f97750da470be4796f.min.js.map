{"version":3,"sources":["webpack:///./packages/knative-plugin/src/topology/data-transformer.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts"],"names":["addKnativeTopologyData","graphModel","knativeResources","type","resources","utils","length","knativeResourceDataModel","getKnativeTopologyDataUtils","getKafkaSinkKnativeTopologyData","namespace","knativeTopologyGraphModel","nodes","edges","kafkaSinks","kafkasinks","data","KnResources","KafkaSink","Promise","resolve","getKnativeServingTopologyDataModel","knativeServingTopologyGraphModel","knSvcResources","ksservices","knRevResources","revisions","camelSinkKameletBindings","KnService","revisionData","forEach","n","groupResources","children","map","id","find","c","Revision","knativeGraphNodes","filter","findIndex","binding","resource","metadata","labels","startsWith","name","getKnativeEventingTopologyDataModel","eventSourceProps","channelResourceProps","knativeEventingTopologyGraphModel","allKnEventSources","knEventSourcesKafka","knEventSource","kind","knEventSources","knChannelResources","knBrokerResources","brokers","addTopologyData","EventSource","EventSourceKafka","PubSub","getKnativeKameletsTopologyDataModel","knativeKameletsTopologyGraphModel","camelSourceKameletBindings","EventSink","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","spec","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","obj","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","push","getType","groupResource","nextResource","resourceKind","Error","t","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","className","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","status","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","dataModelDepicters","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","getKnNodeModelProps","rhombus","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","evSrc","sinkRes","sink","getPubSubSubscribers","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","getKnativeServiceData","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","sinkResource","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","element","NodeType","EdgeType","KameletType"],"mappings":"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","file":"serving-components-chunk-65f97750da470be4796f.min.js","sourcesContent":["import { Model } from '@patternfly/react-topology/dist/esm/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { addToTopologyDataModel } from '@console/topology/src/data-transforms/transform-utils';\nimport { OdcNodeModel, TopologyDataResources } from '@console/topology/src/topology-types';\nimport { CAMEL_SOURCE_INTEGRATION, EVENT_SOURCE_KAFKA_KIND } from '../const';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport {\n  getKnativeServingConfigurations,\n  getKnativeServingDomainMapping,\n  getKnativeServingRevisions,\n  getKnativeServingRoutes,\n  getKnativeServingServices,\n} from '../utils/get-knative-resources';\nimport {\n  getRevisionsData,\n  transformKnNodeData,\n  getKnativeDynamicResources,\n  getKameletSinkAndSourceBindings,\n} from './knative-topology-utils';\nimport { KnativeUtil, NodeType } from './topology-types';\n\nconst addKnativeTopologyData = (\n  graphModel: Model,\n  knativeResources: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n) => {\n  if (!knativeResources?.length) {\n    return;\n  }\n\n  const knativeResourceDataModel = transformKnNodeData(knativeResources, type, resources, utils);\n\n  addToTopologyDataModel(knativeResourceDataModel, graphModel);\n};\n\nconst getKnativeTopologyDataUtils = () => [\n  getKnativeServingRevisions,\n  getKnativeServingConfigurations,\n  getKnativeServingRoutes,\n  getKnativeServingServices,\n  getKnativeServingDomainMapping,\n];\n\nexport const getKafkaSinkKnativeTopologyData = (\n  namespace: string,\n  resources: TopologyDataResources,\n): Promise<Model> => {\n  const knativeTopologyGraphModel: Model = { nodes: [], edges: [] };\n  const kafkaSinks = resources?.kafkasinks?.data ?? [];\n  const addTopologyData = (KnResources: K8sResourceKind[], type?: string) => {\n    addKnativeTopologyData(\n      knativeTopologyGraphModel,\n      KnResources,\n      type,\n      resources,\n      getKnativeTopologyDataUtils(),\n    );\n  };\n  addTopologyData(kafkaSinks, NodeType.KafkaSink);\n  return Promise.resolve(knativeTopologyGraphModel);\n};\n\nexport const getKnativeServingTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n): Promise<Model> => {\n  const knativeServingTopologyGraphModel: Model = { nodes: [], edges: [] };\n  const knSvcResources: K8sResourceKind[] = resources?.ksservices?.data ?? [];\n  const knRevResources: K8sResourceKind[] = resources?.revisions?.data ?? [];\n  const { camelSinkKameletBindings } = getKameletSinkAndSourceBindings(resources);\n  const addTopologyData = (KnResources: K8sResourceKind[], type?: string) => {\n    addKnativeTopologyData(\n      knativeServingTopologyGraphModel,\n      KnResources,\n      type,\n      resources,\n      getKnativeTopologyDataUtils(),\n    );\n  };\n\n  addTopologyData(knSvcResources, NodeType.KnService);\n\n  const revisionData = getRevisionsData(knRevResources, resources, getKnativeTopologyDataUtils());\n\n  knativeServingTopologyGraphModel.nodes.forEach((n) => {\n    if (n.type === NodeType.KnService) {\n      n.data.groupResources =\n        n.children?.map((id) => knativeServingTopologyGraphModel.nodes.find((c) => id === c.id)) ??\n        [];\n    }\n    if (n.type === NodeType.Revision) {\n      n.data = revisionData[n.id];\n    }\n  });\n  // filter out knative services/revision that belong to a integration type created by kamelet sinks\n  const knativeGraphNodes = knativeServingTopologyGraphModel.nodes.filter((n: OdcNodeModel) => {\n    if (n.type === NodeType.KnService) {\n      if (\n        camelSinkKameletBindings.findIndex((binding) =>\n          n.resource.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(\n            binding.metadata?.name,\n          ),\n        ) > -1\n      ) {\n        return false;\n      }\n      return true;\n    }\n    if (n.type === NodeType.Revision) {\n      if (\n        camelSinkKameletBindings.findIndex((binding) =>\n          n.resource.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(\n            binding.metadata?.name,\n          ),\n        ) > -1\n      ) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  });\n\n  knativeServingTopologyGraphModel.nodes = knativeGraphNodes;\n\n  return Promise.resolve(knativeServingTopologyGraphModel);\n};\n\nexport const getKnativeEventingTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n): Promise<Model> => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  const channelResourceProps = getDynamicChannelModelRefs();\n  const knativeEventingTopologyGraphModel: Model = { nodes: [], edges: [] };\n  const allKnEventSources: K8sResourceKind[] = getKnativeDynamicResources(\n    resources,\n    eventSourceProps,\n  );\n  const knEventSourcesKafka: K8sResourceKind[] = allKnEventSources.filter(\n    (knEventSource) => knEventSource.kind === EVENT_SOURCE_KAFKA_KIND,\n  );\n  const knEventSources: K8sResourceKind[] = allKnEventSources.filter(\n    (knEventSource) => knEventSource.kind !== EVENT_SOURCE_KAFKA_KIND,\n  );\n  const knChannelResources: K8sResourceKind[] = getKnativeDynamicResources(\n    resources,\n    channelResourceProps,\n  );\n  const knBrokerResources: K8sResourceKind[] = resources?.brokers?.data ?? [];\n  const addTopologyData = (KnResources: K8sResourceKind[], type?: string) => {\n    addKnativeTopologyData(\n      knativeEventingTopologyGraphModel,\n      KnResources,\n      type,\n      resources,\n      getKnativeTopologyDataUtils(),\n    );\n  };\n\n  addTopologyData(knEventSources, NodeType.EventSource);\n  addTopologyData(knEventSourcesKafka, NodeType.EventSourceKafka);\n  addTopologyData(knChannelResources, NodeType.PubSub);\n  addTopologyData(knBrokerResources, NodeType.PubSub);\n  return Promise.resolve(knativeEventingTopologyGraphModel);\n};\n\nexport const getKnativeKameletsTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n): Promise<Model> => {\n  const knativeKameletsTopologyGraphModel: Model = { nodes: [], edges: [] };\n  const { camelSinkKameletBindings, camelSourceKameletBindings } = getKameletSinkAndSourceBindings(\n    resources,\n  );\n  const addTopologyData = (KnResources: K8sResourceKind[], type?: string) => {\n    addKnativeTopologyData(knativeKameletsTopologyGraphModel, KnResources, type, resources);\n  };\n\n  addTopologyData(camelSourceKameletBindings, NodeType.EventSource);\n  addTopologyData(camelSinkKameletBindings, NodeType.EventSink);\n\n  return Promise.resolve(knativeKameletsTopologyGraphModel);\n};\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n"],"sourceRoot":""}