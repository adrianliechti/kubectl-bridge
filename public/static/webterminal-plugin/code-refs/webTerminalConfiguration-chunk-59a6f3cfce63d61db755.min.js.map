{"version":3,"sources":["webpack:///./packages/webterminal-plugin/src/utils/customization-utils.ts","webpack:///./packages/webterminal-plugin/src/components/cloud-shell/WebTerminalConfiguration.tsx","webpack:///./packages/console-shared/src/components/cluster-configuration/useConsoleOperatorConfig.ts","webpack:///./packages/console-shared/src/components/cluster-configuration/patchConsoleOperatorConfig.ts","webpack:///./packages/console-shared/src/components/cluster-configuration/FormLayout.tsx","webpack:///./packages/console-shared/src/components/cluster-configuration/LoadError.tsx","webpack:///./packages/console-shared/src/components/cluster-configuration/SaveStatus.tsx","webpack:///./packages/console-shared/src/components/cluster-configuration/index.ts"],"names":["getUpdatedComponentTimeout","existingTerminalExecComponents","timeout","terminalExecResource","length","name","container","env","value","image","terminalIdleTimeoutEnvVariable","find","e","newEnvVariables","filter","updatedWebTerminalExec","webTerminalExec","timeoutCheckBox","csTimeout","metadata","annotations","spec","components","getUpdatedComponentImage","existingTerminalToolingComponents","newImage","terminalToolingResource","updatedWebTerminalTooling","webTerminalTooling","imageCheckBox","readonly","t","fireTelemetryEvent","operatorNamespace","unit","setUnit","setValue","setImage","setTimeoutCheckBox","setImageCheckBox","saveStatus","setSaveStatus","webTerminalExecResource","kind","namespaced","isList","namespace","webTerminalToolingResource","isLoaded","loadError","iswebTerminalToolingLoaded","webTerminalToolingloadError","terminalExecComponent","initialUnit","match","join","initialTimeOutValue","parseInt","TimeoutUnits","s","m","h","ms","title","label","fieldId","className","onChange","event","status","currentTarget","changeValueBy","changeBy","newValue","Number","isFinite","id","min","disabled","selectedKey","items","newUnit","ariaLabel","sizeUnit","isChecked","key","isDisabled","_event","type","variant","onClick","newWebTerminalExec","newWebTerminalTooling","model","data","ns","customize","error","groupVersionKind","resource","url","headers","Accept","body","JSON","stringify","children","isHorizontal","isWidthLimited","form","modifiers","horizontal","limitWidth","isInline","message","toString","SaveStatus"],"mappings":"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","file":"webterminal-plugin/code-refs/webTerminalConfiguration-chunk-59a6f3cfce63d61db755.min.js","sourcesContent":["import {\n  CloudShellComponent,\n  CloudShellResource,\n} from '../components/cloud-shell/cloud-shell-utils';\n\nexport const getUpdatedComponentTimeout = (\n  existingTerminalExecComponents: CloudShellComponent[],\n  timeout: string,\n  terminalExecResource: CloudShellComponent,\n) => {\n  if (\n    (!existingTerminalExecComponents || existingTerminalExecComponents?.length === 0) &&\n    timeout\n  ) {\n    return [\n      {\n        name: 'web-terminal-exec',\n        container: {\n          env: [{ name: 'WEB_TERMINAL_IDLE_TIMEOUT', value: timeout }],\n          image: '',\n        },\n      },\n    ];\n  }\n\n  const terminalIdleTimeoutEnvVariable = terminalExecResource?.container?.env?.find(\n    (e) => e.name === 'WEB_TERMINAL_IDLE_TIMEOUT',\n  );\n\n  if (terminalExecResource && !terminalIdleTimeoutEnvVariable?.value && timeout) {\n    let newEnvVariables;\n    if (terminalExecResource?.container?.env) {\n      newEnvVariables = [\n        ...terminalExecResource.container.env,\n        { name: 'WEB_TERMINAL_IDLE_TIMEOUT', value: timeout },\n      ];\n    } else {\n      newEnvVariables = [{ name: 'WEB_TERMINAL_IDLE_TIMEOUT', value: timeout }];\n    }\n    terminalExecResource.container = {\n      ...terminalExecResource.container,\n      env: newEnvVariables,\n    };\n    return existingTerminalExecComponents;\n  }\n  if (terminalExecResource) {\n    if (timeout && terminalIdleTimeoutEnvVariable?.value) {\n      terminalIdleTimeoutEnvVariable.value = timeout;\n    } else if (terminalIdleTimeoutEnvVariable && !timeout) {\n      terminalExecResource.container.env = terminalExecResource.container.env.filter(\n        (e) => e.name !== 'WEB_TERMINAL_IDLE_TIMEOUT',\n      );\n    }\n    return existingTerminalExecComponents;\n  }\n  if (timeout) {\n    return [\n      ...existingTerminalExecComponents,\n      {\n        name: 'web-terminal-exec',\n        container: {\n          env: [{ name: 'WEB_TERMINAL_IDLE_TIMEOUT', value: timeout }],\n          image: '',\n        },\n      },\n    ];\n  }\n  return existingTerminalExecComponents;\n};\n\nexport const updatedWebTerminalExec = (\n  webTerminalExec: CloudShellResource,\n  timeoutCheckBox: boolean,\n  terminalExecResource: CloudShellComponent,\n  csTimeout: string,\n): CloudShellResource => {\n  return {\n    ...webTerminalExec,\n    metadata: {\n      ...webTerminalExec?.metadata,\n      annotations: {\n        ...webTerminalExec?.metadata?.annotations,\n        'web-terminal.redhat.com/unmanaged-state': timeoutCheckBox ? 'true' : 'false',\n      },\n    },\n    spec: {\n      ...webTerminalExec?.spec,\n      components: getUpdatedComponentTimeout(\n        webTerminalExec?.spec?.components,\n        csTimeout,\n        terminalExecResource,\n      ),\n    },\n  };\n};\n\nexport const getUpdatedComponentImage = (\n  existingTerminalToolingComponents: CloudShellComponent[],\n  newImage: string,\n  terminalToolingResource: CloudShellComponent,\n) => {\n  if (!existingTerminalToolingComponents || existingTerminalToolingComponents?.length === 0) {\n    return [\n      {\n        name: 'web-terminal-tooling',\n        container: {\n          image: newImage,\n        },\n      },\n    ];\n  }\n  if (terminalToolingResource) {\n    terminalToolingResource.container.image = newImage;\n    return existingTerminalToolingComponents;\n  }\n  return [\n    ...existingTerminalToolingComponents,\n    {\n      name: 'web-terminal-tooling',\n      container: {\n        image: newImage,\n      },\n    },\n  ];\n};\n\nexport const updatedWebTerminalTooling = (\n  webTerminalTooling: CloudShellResource,\n  imageCheckBox: boolean,\n  terminalToolingResource: CloudShellComponent,\n  image: string,\n): CloudShellResource => {\n  return {\n    ...webTerminalTooling,\n    metadata: {\n      ...webTerminalTooling?.metadata,\n      annotations: {\n        ...webTerminalTooling?.metadata?.annotations,\n        'web-terminal.redhat.com/unmanaged-state': imageCheckBox ? 'true' : 'false',\n      },\n    },\n    spec: {\n      ...webTerminalTooling?.spec,\n      components: getUpdatedComponentImage(\n        webTerminalTooling?.spec?.components,\n        image,\n        terminalToolingResource,\n      ),\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  Button,\n  Checkbox,\n  FormGroup,\n  FormHelperText,\n  FormSection,\n  HelperText,\n  HelperTextItem,\n  TextInput,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { k8sUpdateResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { NumberSpinner } from '@console/internal/components/utils/number-spinner';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useTelemetry } from '@console/shared';\nimport {\n  LoadError,\n  SaveStatus,\n  SaveStatusProps,\n} from '@console/shared/src/components/cluster-configuration';\nimport { DevWorkspaceTemplateModel } from '../../../models';\nimport { DEFAULT_NS_OPERATORS } from '../../const';\nimport { updatedWebTerminalExec, updatedWebTerminalTooling } from '../../utils/customization-utils';\nimport { CloudShellResource } from './cloud-shell-utils';\nimport { getCloudShellTimeout } from './setup/cloud-shell-setup-utils';\nimport useCloudShellNamespace from './useCloudShellNamespace';\n\nconst WebTerminalConfiguration: React.FC<{ readonly: boolean }> = ({ readonly }) => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const [operatorNamespace] = useCloudShellNamespace();\n  const [unit, setUnit] = React.useState<string>('m');\n  const [value, setValue] = React.useState<number>(0);\n  const [image, setImage] = React.useState('');\n  const [timeoutCheckBox, setTimeoutCheckBox] = React.useState(false);\n  const [imageCheckBox, setImageCheckBox] = React.useState(false);\n  const [saveStatus, setSaveStatus] = React.useState<SaveStatusProps>();\n\n  const webTerminalExecResource: WatchK8sResource = React.useMemo(() => {\n    return {\n      kind: referenceForModel(DevWorkspaceTemplateModel),\n      namespaced: true,\n      isList: false,\n      name: 'web-terminal-exec',\n      namespace: operatorNamespace || DEFAULT_NS_OPERATORS,\n    };\n  }, [operatorNamespace]);\n\n  const webTerminalToolingResource: WatchK8sResource = React.useMemo(() => {\n    return {\n      kind: referenceForModel(DevWorkspaceTemplateModel),\n      namespaced: true,\n      isList: false,\n      name: 'web-terminal-tooling',\n      namespace: operatorNamespace || DEFAULT_NS_OPERATORS,\n    };\n  }, [operatorNamespace]);\n\n  const [webTerminalExec, isLoaded, loadError] = useK8sWatchResource<CloudShellResource>(\n    webTerminalExecResource,\n  );\n\n  const [\n    webTerminalTooling,\n    iswebTerminalToolingLoaded,\n    webTerminalToolingloadError,\n  ] = useK8sWatchResource<CloudShellResource>(webTerminalToolingResource);\n\n  const terminalExecResource =\n    webTerminalExec &&\n    isLoaded &&\n    !loadError &&\n    webTerminalExec?.spec?.components?.find((e) => e.name === 'web-terminal-exec');\n\n  const terminalToolingResource =\n    webTerminalTooling &&\n    iswebTerminalToolingLoaded &&\n    !webTerminalToolingloadError &&\n    webTerminalTooling?.spec?.components?.find((e) => e.name === 'web-terminal-tooling');\n  React.useEffect(() => {\n    if (isLoaded && !loadError && terminalExecResource) {\n      const terminalExecComponent = terminalExecResource?.container?.env?.find(\n        (e) => e.name === 'WEB_TERMINAL_IDLE_TIMEOUT',\n      );\n      if (terminalExecComponent?.value) {\n        const initialUnit = terminalExecComponent.value.match(/[a-z]+/gi).join('');\n        const initialTimeOutValue = terminalExecComponent.value.match(/\\d+/g).join('');\n        setUnit(initialUnit);\n        setValue(parseInt(initialTimeOutValue, 10));\n      }\n      if (webTerminalExec?.metadata?.annotations) {\n        setTimeoutCheckBox(\n          webTerminalExec.metadata.annotations['web-terminal.redhat.com/unmanaged-state'] ===\n            'true',\n        );\n      }\n    }\n  }, [webTerminalExec, isLoaded, loadError, terminalExecResource]);\n\n  React.useEffect(() => {\n    if (iswebTerminalToolingLoaded && !webTerminalToolingloadError && terminalToolingResource) {\n      if (terminalToolingResource?.container?.image) {\n        setImage(terminalToolingResource.container.image);\n      }\n      if (webTerminalTooling?.metadata?.annotations) {\n        setImageCheckBox(\n          webTerminalTooling.metadata.annotations['web-terminal.redhat.com/unmanaged-state'] ===\n            'true',\n        );\n      }\n    }\n  }, [\n    webTerminalTooling,\n    iswebTerminalToolingLoaded,\n    webTerminalToolingloadError,\n    terminalToolingResource,\n  ]);\n\n  const TimeoutUnits = {\n    s: t('webterminal-plugin~Seconds'),\n    m: t('webterminal-plugin~Minutes'),\n    h: t('webterminal-plugin~Hours'),\n    ms: t('webterminal-plugin~Milliseconds'),\n  };\n\n  const onValueChange: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    setSaveStatus({ status: null });\n    setValue(parseInt(event.currentTarget.value, 10));\n  };\n\n  const onImageChange = (_event, newValue: string) => {\n    setSaveStatus({ status: null });\n    setImage(newValue);\n  };\n\n  const onUnitChange = (newUnit: string) => {\n    setSaveStatus({ status: null });\n    setUnit(newUnit);\n  };\n\n  const changeValueBy = (changeBy: number) => {\n    // When default defaultRequestSizeValue is not set, value becomes NaN and increment decrement buttons of NumberSpinner don't work.\n    const newValue = Number.isFinite(value) ? value + changeBy : 0 + changeBy;\n    setValue(newValue);\n    setSaveStatus({ status: null });\n  };\n\n  const submit = async () => {\n    setSaveStatus({ status: 'pending' });\n\n    const csTimeout = getCloudShellTimeout(value, unit) || '';\n    const newWebTerminalExec = updatedWebTerminalExec(\n      webTerminalExec,\n      timeoutCheckBox,\n      terminalExecResource,\n      csTimeout,\n    );\n    const newWebTerminalTooling = updatedWebTerminalTooling(\n      webTerminalTooling,\n      imageCheckBox,\n      terminalToolingResource,\n      image,\n    );\n    try {\n      k8sUpdateResource({\n        model: DevWorkspaceTemplateModel,\n        data: newWebTerminalExec,\n        name: 'web-terminal-exec',\n        ns: operatorNamespace || DEFAULT_NS_OPERATORS,\n      });\n      k8sUpdateResource({\n        model: DevWorkspaceTemplateModel,\n        data: newWebTerminalTooling,\n        name: 'web-terminal-tooling',\n        ns: operatorNamespace || DEFAULT_NS_OPERATORS,\n      });\n      fireTelemetryEvent('Console cluster configuration changed', {\n        customize: 'Web Terminal configuration items',\n        timeout: csTimeout,\n        image,\n      });\n      setSaveStatus({ status: 'successful' });\n    } catch (e) {\n      setSaveStatus({ status: 'error', error: e });\n    }\n  };\n  return (\n    <FormSection\n      title={t('webterminal-plugin~Web Terminal Configuration')}\n      data-test=\"web-terminal form-section\"\n    >\n      <FormHelperText>\n        <HelperText>\n          <HelperTextItem>\n            {t(\n              'webterminal-plugin~As admin you can change the default timeout and image of Web Terminal.',\n            )}\n          </HelperTextItem>\n        </HelperText>\n      </FormHelperText>\n      <FormGroup label={t('webterminal-plugin~Timeout')} fieldId=\"timeout-value\">\n        <div className=\"pf-v5-c-input-group\">\n          <NumberSpinner\n            onChange={onValueChange}\n            changeValueBy={changeValueBy}\n            name=\"timeout-value\"\n            id=\"timeout-value\"\n            data-test=\"timeout-value\"\n            value={value}\n            min={0}\n            disabled={readonly}\n          />\n          <Dropdown\n            title={TimeoutUnits[unit]}\n            selectedKey={unit}\n            name=\"timeout-unit\"\n            className=\"request-size-input__unit\"\n            items={TimeoutUnits}\n            onChange={onUnitChange}\n            ariaLabel={t('webterminal-plugin~Number of {{sizeUnit}}', {\n              sizeUnit: TimeoutUnits[unit],\n            })}\n            disabled={readonly}\n          />\n        </div>\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>{t('webterminal-plugin~Set timeout for the terminal.')}</HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n      <FormGroup>\n        <Checkbox\n          id=\"timeout-value-checkbox\"\n          data-test=\"timeout-value-checkbox\"\n          isChecked={timeoutCheckBox}\n          key=\"timeout-value-checkbox\"\n          onChange={() => setTimeoutCheckBox(!timeoutCheckBox)}\n          label={t(\n            'webterminal-plugin~Mark the configuration resource as \"Unmanaged\" to keep the default timeout even after operator restart or update.',\n          )}\n          isDisabled={readonly}\n        />\n      </FormGroup>\n\n      <FormGroup label={t('webterminal-plugin~Image')} fieldId=\"web-terminal-image\">\n        <TextInput\n          value={image}\n          onChange={onImageChange}\n          name=\"web-terminal-image\"\n          id=\"web-terminal-image\"\n          type=\"text\"\n          aria-label=\"web-terminal-image\"\n          className=\"pf-v5-c-form-control\"\n          data-test=\"web-terminal-image\"\n          isDisabled={readonly}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t('webterminal-plugin~Set custom image for the terminal.')}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n      <FormGroup>\n        <Checkbox\n          id=\"image-value-checkbox\"\n          data-test=\"image-value-checkbox\"\n          isChecked={imageCheckBox}\n          key=\"image-value-checkbox\"\n          onChange={() => setImageCheckBox(!imageCheckBox)}\n          label={t(\n            'webterminal-plugin~Mark the configuration resource as \"Unmanaged\" to keep the default image even after operator restart or update.',\n          )}\n          isDisabled={readonly}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Button\n          variant=\"primary\"\n          onClick={submit}\n          data-test=\"save-button\"\n          isDisabled={readonly || loadError || webTerminalToolingloadError}\n        >\n          {t('webterminal-plugin~Save')}\n        </Button>\n      </FormGroup>\n      <LoadError error={loadError || webTerminalToolingloadError} />\n      <SaveStatus {...saveStatus} />\n    </FormSection>\n  );\n};\n\nexport default WebTerminalConfiguration;\n","import { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks/useK8sWatchResource';\nimport { ConsoleOperatorConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CONSOLE_OPERATOR_CONFIG_NAME } from '../../constants/resource';\n\nconst useConsoleOperatorConfig = <R extends K8sResourceKind>() => {\n  return useK8sWatchResource<R>({\n    groupVersionKind: getGroupVersionKindForModel(ConsoleOperatorConfigModel),\n    isList: false,\n    name: CONSOLE_OPERATOR_CONFIG_NAME,\n  });\n};\n\nexport default useConsoleOperatorConfig;\n","import { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/utils/fetch/console-fetch';\nimport { ConsoleOperatorConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, resourceURL } from '@console/internal/module/k8s';\nimport { CONSOLE_OPERATOR_CONFIG_NAME } from '../../constants/resource';\n\n/**\n * JSON Merge Patch instead of JSON patch to update also properties that doesn't exist yet.\n *\n * See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/#use-a-json-merge-patch-to-update-a-deployment\n */\nconst patchConsoleOperatorConfig = <R extends K8sResourceKind>(resource: R): Promise<R> => {\n  const url = resourceURL(ConsoleOperatorConfigModel, { name: CONSOLE_OPERATOR_CONFIG_NAME });\n  return consoleFetchJSON(url, 'PATCH', {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/merge-patch+json;charset=UTF-8',\n    },\n    body: JSON.stringify(resource),\n  });\n};\n\nexport default patchConsoleOperatorConfig;\n","import * as React from 'react';\nimport { FormProps } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\n\nexport type FormLayoutProps = Pick<FormProps, 'children' | 'isHorizontal' | 'isWidthLimited'>;\n\nconst FormLayout: React.FC<FormLayoutProps> = ({\n  children,\n  isHorizontal = false,\n  isWidthLimited = true,\n}) => {\n  return (\n    <div\n      className={css(\n        formStyles.form,\n        isHorizontal && formStyles.modifiers.horizontal,\n        isWidthLimited && formStyles.modifiers.limitWidth,\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default FormLayout;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nconst LoadError: React.FC<{ error?: Error }> = ({ error }) => {\n  const { t } = useTranslation();\n  if (!error) {\n    return null;\n  }\n  return (\n    <Alert variant=\"warning\" isInline title={t('console-shared~Could not load configuration.')}>\n      {error.message?.toString?.() || error.toString?.()}\n    </Alert>\n  );\n};\n\nexport default LoadError;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nexport type SaveStatusProps = {\n  status: 'pending' | 'in-progress' | 'successful' | 'error';\n  error?: Error;\n};\n\nexport const SaveStatus: React.FC<SaveStatusProps> = ({ status, error }) => {\n  const { t } = useTranslation();\n  if (status === 'successful') {\n    return (\n      <Alert\n        variant=\"success\"\n        data-test=\"success-alert\"\n        isInline\n        title={t('console-shared~Saved.')}\n      >\n        {t(\n          'console-shared~This config update requires a console rollout, this can take up to a minute and require a browser refresh.',\n        )}\n      </Alert>\n    );\n  }\n  if (status === 'error') {\n    return (\n      <Alert variant=\"danger\" isInline title={t('console-shared~Could not save configuration.')}>\n        {error?.message?.toString?.() || error?.toString?.()}\n      </Alert>\n    );\n  }\n  return null;\n};\n","export { useDebounceCallback } from '../../hooks/debounce';\n\nexport { default as useConsoleOperatorConfig } from './useConsoleOperatorConfig';\nexport { default as patchConsoleOperatorConfig } from './patchConsoleOperatorConfig';\nexport { default as FormLayout } from './FormLayout';\nexport { default as LoadError } from './LoadError';\nexport * from './SaveStatus';\nexport * from './path-utils';\n"],"sourceRoot":""}