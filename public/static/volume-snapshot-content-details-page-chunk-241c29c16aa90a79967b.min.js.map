{"version":3,"sources":["webpack:///./packages/console-app/src/components/volume-snapshot/volume-snapshot-content-details.tsx"],"names":["editYaml","events","Details","obj","t","deletionPolicy","driver","spec","volumeHandle","snapshotHandle","source","name","snapshotName","namespace","snapshotNamespace","volumeSnapshotRef","size","status","restoreSize","sizeMetrics","string","className","text","resource","kind","volumeSnapshotClassName","props","pages","href","nameKey","component","getResourceStatus","menuActions","factory","common"],"mappings":"6FAAA,kFAiBA,MAAM,SAAEA,EAAQ,OAAEC,GAAW,KAEvBC,EAAkC,EAAGC,U,YACzC,MAAM,EAAEC,GAAM,4BACR,eAAEC,EAAc,OAAEC,GAAWH,aAAG,EAAHA,EAAKI,MAClC,aAAEC,EAAY,eAAEC,IAA4B,QAAT,EAAAN,aAAG,EAAHA,EAAKI,YAAI,eAAEG,SAAU,IACtDC,KAAMC,EAAcC,UAAWC,IAA+B,QAAT,EAAAX,aAAG,EAAHA,EAAKI,YAAI,eAAEQ,oBAAqB,GACvFC,EAAiB,QAAV,EAAAb,EAAIc,cAAM,eAAEC,YACnBC,EAAcH,EAAO,aAAoBA,GAAMI,OAAS,IAE9D,OACE,uBAAKC,UAAU,mBACb,gBAAC,KAAc,CAACC,KAAMlB,EAAE,+CACxB,uBAAKiB,UAAU,OACb,uBAAKA,UAAU,sBACb,gBAAC,KAAe,CAACE,SAAUpB,GACzB,0BAAKC,EAAE,uBACP,0BACE,gBAAC,KAAM,CAACa,OAAQ,YAAqBd,QAI3C,uBAAKkB,UAAU,YACb,sBAAIA,UAAU,sBACXL,GACC,gCACE,0BAAKZ,EAAE,qBACP,0BAAKe,IAGT,0BAAKf,EAAE,+BACP,0BACE,gBAAC,KAAY,CACXoB,KAAM,aAAkB,uBACxBb,KAAMC,EACNC,UAAWC,KAGf,0BAAKV,EAAE,oCACP,0BACE,gBAAC,KAAY,CACXoB,KAAM,aAAkB,4BACxBb,KAAe,QAAT,EAAAR,aAAG,EAAHA,EAAKI,YAAI,eAAEkB,2BAGrB,0BAAKrB,EAAE,gCACP,0BAAKC,GACL,0BAAKD,EAAE,uBACP,0BAAKE,GACJE,GACC,gCACE,0BAAKJ,EAAE,8BACP,0BAAKI,IAGRC,GACC,gCACE,0BAAKL,EAAE,gCACP,0BAAKK,SAmCN,UAzBuDiB,IACpE,MAAMC,EAAQ,CACZ,CACEC,KAAM,GAENC,QAAS,sBACTC,UAAW5B,GAEbF,IACAC,EAAO,wBAET,OACE,gBAAC,IAAW,iBACNyB,EAAK,CACTK,kBAAmB,IACnBC,YAAa,IAAMC,QAAQC,OAC3BP,MAAOA","file":"volume-snapshot-content-details-page-chunk-241c29c16aa90a79967b.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceEventStream } from '@console/internal/components/events';\nimport { DetailsPage, DetailsPageProps } from '@console/internal/components/factory';\nimport {\n  SectionHeading,\n  ResourceSummary,\n  ResourceLink,\n  navFactory,\n  Kebab,\n  humanizeBinaryBytes,\n} from '@console/internal/components/utils';\nimport { VolumeSnapshotClassModel, VolumeSnapshotModel } from '@console/internal/models';\nimport { referenceForModel, VolumeSnapshotContentKind } from '@console/internal/module/k8s';\nimport { Status } from '@console/shared';\nimport { volumeSnapshotStatus } from '../../status';\n\nconst { editYaml, events } = navFactory;\n\nconst Details: React.FC<DetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const { deletionPolicy, driver } = obj?.spec;\n  const { volumeHandle, snapshotHandle } = obj?.spec?.source || {};\n  const { name: snapshotName, namespace: snapshotNamespace } = obj?.spec?.volumeSnapshotRef || {};\n  const size = obj.status?.restoreSize;\n  const sizeMetrics = size ? humanizeBinaryBytes(size).string : '-';\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('console-app~VolumeSnapshotContent details')} />\n      <div className=\"row\">\n        <div className=\"col-md-6 col-xs-12\">\n          <ResourceSummary resource={obj}>\n            <dt>{t('console-app~Status')}</dt>\n            <dd>\n              <Status status={volumeSnapshotStatus(obj)} />\n            </dd>\n          </ResourceSummary>\n        </div>\n        <div className=\"col-md-6\">\n          <dl className=\"co-m-pane__details\">\n            {size && (\n              <>\n                <dt>{t('console-app~Size')}</dt>\n                <dd>{sizeMetrics}</dd>\n              </>\n            )}\n            <dt>{t('console-app~VolumeSnapshot')}</dt>\n            <dd>\n              <ResourceLink\n                kind={referenceForModel(VolumeSnapshotModel)}\n                name={snapshotName}\n                namespace={snapshotNamespace}\n              />\n            </dd>\n            <dt>{t('console-app~VolumeSnapshotClass')}</dt>\n            <dd>\n              <ResourceLink\n                kind={referenceForModel(VolumeSnapshotClassModel)}\n                name={obj?.spec?.volumeSnapshotClassName}\n              />\n            </dd>\n            <dt>{t('console-app~Deletion policy')}</dt>\n            <dd>{deletionPolicy}</dd>\n            <dt>{t('console-app~Driver')}</dt>\n            <dd>{driver}</dd>\n            {volumeHandle && (\n              <>\n                <dt>{t('console-app~Volume handle')}</dt>\n                <dd>{volumeHandle}</dd>\n              </>\n            )}\n            {snapshotHandle && (\n              <>\n                <dt>{t('console-app~Snapshot handle')}</dt>\n                <dd>{snapshotHandle}</dd>\n              </>\n            )}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst VolumeSnapshotContentDetailsPage: React.FC<DetailsPageProps> = (props) => {\n  const pages = [\n    {\n      href: '',\n      // t('console-app~Details')\n      nameKey: 'console-app~Details',\n      component: Details,\n    },\n    editYaml(),\n    events(ResourceEventStream),\n  ];\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={volumeSnapshotStatus}\n      menuActions={Kebab.factory.common}\n      pages={pages}\n    />\n  );\n};\n\ntype DetailsProps = {\n  obj: VolumeSnapshotContentKind;\n};\n\nexport default VolumeSnapshotContentDetailsPage;\n"],"sourceRoot":""}