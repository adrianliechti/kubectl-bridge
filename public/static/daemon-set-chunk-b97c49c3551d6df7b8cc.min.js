(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{4371:function(e,a,t){"use strict";t.r(a),t.d(a,"menuActions",(function(){return h})),t.d(a,"DaemonSetDetailsList",(function(){return j})),t.d(a,"DaemonSets",(function(){return w})),t.d(a,"DaemonSetsPage",(function(){return F})),t.d(a,"DaemonSetsDetailsPage",(function(){return y}));var n=t(0),s=t(14),c=t(18),l=t(54),r=t(7),o=t(5721),m=t(15),i=t(8),d=t(40),u=t(5),p=t(409),b=t(2226),E=t(10),v=t(2224);const h=[o.a,u.F.factory.AddStorage,...u.F.getExtensionsActionsForKind(E.DaemonSetModel),o.b,...u.F.factory.common],N="DaemonSet",f=["","",c("pf-m-hidden","pf-m-visible-on-sm","pf-v5-u-w-16-on-lg"),c("pf-m-hidden","pf-m-visible-on-lg"),c("pf-m-hidden","pf-m-visible-on-lg"),u.F.columnClass],j=({ds:e})=>{const{t:a}=Object(r.useTranslation)();return n.createElement("dl",{className:"co-m-pane__details"},n.createElement(u.r,{label:a("public~Current count"),obj:e,path:"status.currentNumberScheduled"}),n.createElement(u.r,{label:a("public~Desired count"),obj:e,path:"status.desiredNumberScheduled"}),n.createElement(v.a,{obj:e}))},g=({obj:e})=>{const{t:a}=Object(r.useTranslation)(),{podData:t,loaded:s}=Object(m.Se)(e);return n.createElement(n.Fragment,null,n.createElement("div",{className:"co-m-pane__body"},n.createElement(u.ob,{text:a("public~DaemonSet details")}),s?n.createElement(m.Ab,{key:e.metadata.uid,pods:(null==t?void 0:t.pods)||[],obj:e,resourceKind:E.DaemonSetModel,enableScaling:!1}):n.createElement(u.T,null),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-lg-6"},n.createElement(u.lb,{resource:e,showPodSelector:!0,showNodeSelector:!0,showTolerations:!0})),n.createElement("div",{className:"col-lg-6"},n.createElement(j,{ds:e})))),n.createElement("div",{className:"co-m-pane__body"},n.createElement(u.ob,{text:a("public~Containers")}),n.createElement(u.k,{containers:e.spec.template.spec.containers})),n.createElement("div",{className:"co-m-pane__body"},n.createElement(b.a,{resource:e,heading:a("public~Volumes")})))},k=e=>n.createElement(u.c,Object.assign({loader:()=>Promise.all([t.e(2),t.e(28)]).then(t.bind(null,4361)).then(e=>e.EnvironmentPage)},e)),S=["spec","template","spec","containers"],D=e=>n.createElement(k,{obj:e.obj,rawEnvData:e.obj.spec.template.spec,envPath:S,readOnly:!1}),O=({obj:e})=>{const{t:a}=Object(r.useTranslation)(),t={[Object(i.Db)(e)]:e};return n.createElement(n.Fragment,null,n.createElement(d.k,{className:f[0]},n.createElement(u.hb,{kind:N,name:e.metadata.name,namespace:e.metadata.namespace})),n.createElement(d.k,{className:c(f[1],"co-break-word"),columnID:"namespace"},n.createElement(u.hb,{kind:"Namespace",name:e.metadata.namespace})),n.createElement(d.k,{className:f[2]},n.createElement(s.Link,{to:`/k8s/ns/${e.metadata.namespace}/daemonsets/${e.metadata.name}/pods`,title:"pods"},a("public~{{currentNumber}} of {{desiredNumber}} pods",{currentNumber:e.status.currentNumberScheduled,desiredNumber:e.status.desiredNumberScheduled}))),n.createElement(d.k,{className:f[3]},n.createElement(u.L,{kind:N,labels:e.metadata.labels})),n.createElement(d.k,{className:f[4]},n.createElement(u.pb,{selector:e.spec.selector,namespace:e.metadata.namespace})),n.createElement(d.k,{className:f[5]},n.createElement(m.hb,{context:t})))},w=e=>{const{t:a}=Object(r.useTranslation)();return n.createElement(d.j,Object.assign({},e,{"aria-label":a("public~DaemonSets"),Header:()=>[{title:a("public~Name"),sortField:"metadata.name",transforms:[l.a],props:{className:f[0]}},{title:a("public~Namespace"),sortField:"metadata.namespace",transforms:[l.a],props:{className:f[1]},id:"namespace"},{title:a("public~Status"),sortFunc:"daemonsetNumScheduled",transforms:[l.a],props:{className:f[2]}},{title:a("public~Labels"),sortField:"metadata.labels",transforms:[l.a],props:{className:f[3]}},{title:a("public~Pod selector"),sortField:"spec.selector",transforms:[l.a],props:{className:f[4]}},{title:"",props:{className:f[5]}}],Row:O,virtualize:!0}))},F=e=>n.createElement(d.c,Object.assign({canCreate:!0,ListComponent:w,kind:N},e)),P=e=>n.createElement(u.ab,Object.assign({},e,{showNodes:!0})),y=e=>{const a=Object(m.Ue)();return n.createElement(d.a,Object.assign({},e,{kind:N,customActionMenu:(e,a)=>{const t={[Object(i.Hb)(e)]:a};return n.createElement(m.j,{context:t},({actions:e,options:a,loaded:t})=>t&&n.createElement(m.h,{actions:e,options:a,variant:m.i.DROPDOWN}))},pages:[u.mc.details(Object(u.Kb)(g)),...a?[u.mc.metrics()]:[],u.mc.editYaml(),u.mc.pods(P),u.mc.envEditor(D),u.mc.events(p.ResourceEventStream)]}))}},5721:function(e,a,t){"use strict";t.d(a,"a",(function(){return r})),t.d(a,"b",(function(){return o}));var n=t(400),s=t(8);const c=e=>{var a,t,s;const c=null===(s=null===(t=null===(a=null==e?void 0:e.spec)||void 0===a?void 0:a.template)||void 0===t?void 0:t.spec)||void 0===s?void 0:s.containers;return n.a(c,e=>e.readinessProbe||e.livenessProbe||e.startupProbe)},l=(e,a)=>{var t,n,c,l;const{kind:r,metadata:{name:o,namespace:m}}=a,i=e.crd?Object(s.Db)(a):r,d=null===(c=null===(n=null===(t=null==a?void 0:a.spec)||void 0===t?void 0:t.template)||void 0===n?void 0:n.spec)||void 0===c?void 0:c.containers;return`/k8s/ns/${m}/${i}/${o}/containers/${null===(l=null==d?void 0:d[0])||void 0===l?void 0:l.name}/health-checks`},r=(e,a)=>({labelKey:"console-app~Add Health Checks",hidden:c(a),href:l(e,a),accessReview:{group:e.apiGroup,resource:e.plural,name:a.metadata.name,namespace:a.metadata.namespace,verb:"update"}}),o=(e,a)=>({labelKey:"console-app~Edit Health Checks",hidden:!c(a),href:l(e,a),accessReview:{group:e.apiGroup,resource:e.plural,name:a.metadata.name,namespace:a.metadata.namespace,verb:"get"}})}}]);
//# sourceMappingURL=daemon-set-chunk-b97c49c3551d6df7b8cc.min.js.map