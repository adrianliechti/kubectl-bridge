{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/console-app/src/actions/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-ref.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/console-fetch.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sModel.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/coreSelectors.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/actions/core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/console-fetch-utils.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/k8s/actions/k8s.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-utils.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/fetch/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/storeHandler.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/index.js","webpack:///./packages/console-app/src/actions/creators/pdb-factory.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s-resource.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/error/custom-error.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sModels.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sWatchResource.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/k8s-watcher.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useDeepCompareMemoize.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useModelsLoaded.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/useK8sWatchResources.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/index.js","webpack:///./packages/console-app/src/actions/creators/health-checks-factory.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/configSetup.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/actions/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/error/http-error.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/core/reducers/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/k8s.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/ws-factory.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/k8s/reducers/k8sSelector.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/k8s/hooks/usePrevious.js","webpack:///./packages/dev-console/src/actions/context-menu.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/status/StatusIconAndText.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/status/icons.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/utils/resource-status.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/utils/rbac.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/utils/camel-case-wrap.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/status/GenericStatus.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/status/PopoverStatus.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/status/statuses.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/safety-first.js","webpack:///./packages/console-app/src/actions/providers/index.ts","webpack:///./packages/console-app/src/actions/providers/deployment-provider.ts","webpack:///./packages/console-app/src/actions/creators/hpa-factory.ts","webpack:///./packages/console-app/src/actions/providers/deploymentconfig-provider.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/actions.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/cluster-configuration.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/console-types.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/resource-metadata.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/storage-class-provisioner.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/extensions/user-preferences.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/api/core-api.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/perspective/perspective-context.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/api/dynamic-core-api.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/constants.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/factory/ListPage/ListPageBody.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/components/status/Status.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/api/common-types.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/utils/flags.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/modal-support/useModal.js","webpack:///./packages/console-app/src/actions/providers/stateful-set-provider.ts","webpack:///./packages/console-app/src/actions/providers/daemon-set-provider.ts","webpack:///./packages/console-app/src/actions/providers/job-provider.ts","webpack:///./packages/console-app/src/actions/providers/cronjob-provider.ts","webpack:///./packages/console-app/src/actions/providers/service-binding-provider.ts","webpack:///./packages/console-app/src/actions/providers/replicaset-provider.ts","webpack:///./packages/console-app/src/actions/providers/replication-controllers-provider.ts","webpack:///./packages/console-app/src/actions/providers/pod-provider.ts","webpack:///./packages/console-app/src/actions/providers/perspective-state-provider.ts","webpack:///./packages/console-app/src/components/pdb/modals/index.ts","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/lib-core.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/models/index.js","webpack:///./packages/console-dynamic-plugin-sdk/dist/core/lib/app/modal-support/ModalProvider.js","webpack:///./packages/console-app/src/actions/creators/job-factory.ts","webpack:///./packages/console-app/src/actions/creators/cronjob-factory.ts","webpack:///./packages/console-app/src/actions/creators/replicaset-factory.ts","webpack:///./packages/console-app/src/actions/creators/replication-controller-factory.ts"],"names":["StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","spec","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","resource","owner","name","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","namespace","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","obj","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","push","getType","groupResources","groupResource","nextResource","resourceKind","Error","t","kind","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","type","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","metadata","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","className","htmlFor","onChange","id","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","status","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","labels","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","deployment","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","n","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","collapsed","labelPosition","bottom","shallow","nodes","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","children","isVisible","getInternalBounds","rect","padding","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","width","height","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","metrics","podData","currentPods","current","pods","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","createConnection","sourceNode","targetNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","element","editAccess","canEdit","displayName","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","CommonActionFactory","Delete","relatedResource","cta","accessReview","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyCount","ModifyPodSelector","ModifyTolerations","modalClassName","AddStorage","getCommonResourceActions","resourceLimitsModal","m","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","paused","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","latest","force","opts","deploymentConfigRollout","subresource","EditResourceLimits","CreateServiceBinding","getReference","getReferenceForModel","getGroupVersionKindForReference","referenceSplit","transformGroupVersionKindToReference","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","rejected","done","apply","consoleFetchCommon","options","timeout","allOptions","fetchPromise","appFetch","timeoutPromise","setTimeout","race","consoleFetch","dataPromise","isPlainText","parseData","warning","_a","warningData","getStore","dispatch","handleAdmissionWebhookWarning","consoleFetchJSON","consoleFetchSendJSON","delete","put","getK8sModel","k8s","k8sGroupVersionKind","kindReference","useK8sModel","getImpersonate","sdkCore","impersonate","ActionType","setAdmissionWebhookWarning","SetAdmissionWebhookWarning","getConsoleRequestHeaders","store","getState","document","cookie","updateListFromWS","k8sObjects","UpdateListFromWS","Loaded","bulkAddToList","BulkAddToList","startWatchK8sObject","StartWatchK8sObject","startWatchK8sList","query","StartWatchK8sList","modifyObject","ModifyObject","stopWatchK8s","StopWatchK8s","errored","Errored","partialObjectMetadataListHeader","partialObjectMetadataHeader","WS","POLLs","REF_COUNTS","stopK8sWatch","ws","destroy","poller","clearInterval","watchK8sList","k8skind","extraAction","partialMetadata","incrementallyLoad","continueToken","requestOptions","assign","continue","resourceVersion","pollAndWatch","window","subprotocols","onclose","code","ondestroy","timedOut","onbulkmessage","watchK8sObject","k8sModel","watch","o","setInterval","fieldSelector","object","resourceURL","u","isLegacy","getK8sAPIPath","encodeURIComponent","getK8sResourcePath","toArray","requirementToString","requirement","operator","selectorToString","selector","requirements","matchExpressions","isOldFormat","me","toRequirements","k8sWatch","wsOptions","wsOptionsUpdated","reconnect","jsonParse","bufferFlushInterval","bufferMax","encodedSelector","storeHandler","setStore","storeData","pdbRoute","PodDisruptionBudgetActionFactory","matchedPDB","insertBefore","workloadName","pdb","getPDBActions","usePDBActions","watchedResource","groupVersionKind","pdbResources","adapterFunc","func","knownArgs","arg","k8sGet","requestInit","k8sCreate","k8sList","_b","propagationPolicy","jsonData","raw","newVal","listURL","typedItems","CustomError","defineProperty","enumerable","configurable","captureStackTrace","constructor","stack","setPrototypeOf","prototype","useK8sWatchResource","initResource","modelsLoaded","reduxID","resourceK8s","NoModelError","INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL","Symbol","INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL","getReduxData","immutableData","toJSON","getIDAndDispatch","makeQuery","k8sKind","qs","makeReduxID","useDeepCompareMemoize","strinfigy","useModelsLoaded","inFlight","useK8sWatchResources","initResources","allK8sModels","prevK8sModels","prevResources","k8sModelsRef","modelReference","requiredModels","k8sModels","reduxIDs","ids","idAndDispatch","noModel","reduxIDKeys","resourceK8sSelectorCreator","oldK8s","newK8s","resourceK8sSelector","has","healthChecksUrl","containers","HealthChecksActionFactory","getHealthChecksAction","healthChecksAdded","getUtilsConfig","HttpError","messages","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","426","428","429","431","451","500","501","502","503","504","505","506","510","511","TimeoutError","ms","k8sBasePath","SERVER_FLAGS","basePath","WSFactory","handlers","open","bulkmessage","connect","flushCanceler","flushMessageBuffer","connectionAttempt","delay","attempt","clearTimeout","that","messageBuffer","location","protocol","createURL","WebSocket","onopen","triggerEvent","evt","onerror","onmessage","msg","fn","h","shift","invokeHandlers","registerHandler","eventData","send","getReduxIdPayload","reduxId","usePrevious","deps","DeleteApplicationAction","primaryResource","resourceName","resourceType","DeleteResourceAction","deleteAllResources","icon","spin","iconOnly","noTooltip","dataTest","GreenCheckCircleIcon","size","RedExclamationCircleIcon","YellowExclamationTriangleIcon","BlueInfoCircleIcon","impersonateKey","ssar","resourceAttributes","MEMO","words","rendered","word","__rest","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Icon","popoverTitle","restProps","renderIcon","statusBody","hideHeader","shouldClose","shouldOpen","onHide","onShow","right","headerContent","bodyContent","isInline","ErrorStatus","InfoStatus","ProgressStatus","SuccessStatus","useSafetyFirst","initialState","mounted","setValue","newValue","useDeploymentActionsProvider","hpaActions","relatedHPAs","pdbActions","hpaRoute","HpaActionFactory","relatedHPA","workload","hpa","getHpaActions","useHPAActions","watchedResources","hpas","optional","csvs","extraResources","supportsHPA","useRetryRolloutAction","dcModel","rcModel","rc","rcModelInFlight","useReplicationController","canRetry","latestVersion","insertAfter","useDeploymentConfigActionsProvider","retryRolloutAction","MenuOptionType","ClusterConfigurationFieldType","InventoryStatusGroup","HealthState","GridPosition","LIMIT_STATE","K8sResourceConditionStatus","ModelBadge","ProvisionerType","UserPreferenceFieldType","useResolvedExtensions","HorizontalNavFacade","TableData","useActiveColumns","ListPageCreateLink","ListPageCreateButton","ListPageCreateDropdown","useListPageFilter","ResourceLink","ResourceIcon","StatusPopupSection","InventoryItemTitle","InventoryItemBody","InventoryItemStatus","InventoryItemLoading","AsyncCodeEditor","AsyncResourceYAMLEditor","WrappedResourceEventStream","Timestamp","NamespaceBar","QueryBrowser","useAnnotationsModal","useDeleteModal","useLabelsModal","useActiveNamespace","useUserSettings","useQuickStartContext","DASH","Operator","BadgeType","PrometheusEndpoint","useStatefulSetActionsProvider","useDaemonSetActionsProvider","useJobActionsProvider","ModifyJobParallelism","useCronJobActionsProvider","StartJob","useCreateServiceBindingProvider","useReplicaSetActionsProvider","deploymentName","RollbackDeploymentAction","useReplicationControllerActionsProvider","deploymentPhase","dcName","CancelRollout","RollbackDeploymentConfigAction","usePodActionsProvider","useDeveloperPerspectiveStateProvider","setFeatureFlag","perspectives","devPerspective","visibility","Disabled","Enabled","AccessReview","res","deletePDBModal","ProjectModel","SelfSubjectAccessReviewModel","ModalContext","launchModal","closeModal","JobActionFactory","CronJobActionFactory","reqPayload","controller","jobTemplate","startJob","job","ReplicaSetFactory","INACTIVE_STATUSES","ReplicationControllerFactory","btnText","cancelText"],"mappings":"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","file":"app/code-refs/actions-chunk-3ac5111bc03995e811f7.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export * from './providers';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind Pass K8sGroupVersionKind which will have group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind.group Pass group of k8s resource or model.\n * @param K8sGroupVersionKind.version Pass version of k8s resource or model.\n * @param K8sGroupVersionKind.kind Pass kind of k8s resource or model.\n * @returns The reference for any k8s resource i.e `group~version~kind`.\n * If the group will not be present then \"core\" will be returned as part of the group in reference.\n */\nexport const getReference = ({ group, version, kind, }) => [group || 'core', version, kind].join('~');\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * @see getGroupVersionKindForModel\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s model.\n * @param model k8s model\n * @returns The reference for model i.e `group~version~kind`.\n */\nexport const getReferenceForModel = (model) => getReference({ group: model.apiGroup, version: model.apiVersion, kind: model.kind });\n/**\n * Provides `apiVersion` for a Kubernetes model.\n * @param model Kubernetes model\n * @returns The apiVersion for the model i.e `group/version`.\n * */\nexport const getAPIVersionForModel = (model) => !(model === null || model === void 0 ? void 0 : model.apiGroup) ? model.apiVersion : `${model.apiGroup}/${model.apiVersion}`;\n/**\n * Provides a group, version, and kind for a resource.\n * @param resource Kubernetes resource\n * @returns The group, version, kind for the provided resource.\n * If the resource does not have an API group, the group `core` is returned.\n * If the resource has an invalid apiVersion then it'll throw Error.\n * */\nexport const getGroupVersionKindForResource = (resource) => {\n    const apiVersion = resource === null || resource === void 0 ? void 0 : resource.apiVersion;\n    const kind = resource === null || resource === void 0 ? void 0 : resource.kind;\n    const apiVersionSplit = apiVersion === null || apiVersion === void 0 ? void 0 : apiVersion.split('/');\n    const apiVersionSplitLen = apiVersionSplit === null || apiVersionSplit === void 0 ? void 0 : apiVersionSplit.length;\n    if (apiVersionSplitLen > 2)\n        throw new Error('Provided resource has invalid apiVersion.');\n    return !apiVersion || !kind\n        ? undefined\n        : Object.assign(Object.assign({}, (apiVersionSplitLen === 2 && {\n            group: apiVersionSplit[0],\n        })), { version: apiVersionSplitLen === 2 ? apiVersionSplit[1] : resource === null || resource === void 0 ? void 0 : resource.apiVersion, kind });\n};\n/**\n * Provides a group, version, and kind for a k8s model.\n * @param model Kubernetes model\n * @returns The group, version, kind for the provided model.\n * If the model does not have an apiGroup, group `core` will be returned.\n * */\nexport const getGroupVersionKindForModel = ({ apiGroup, apiVersion: version, kind, }) => (Object.assign(Object.assign({}, (apiGroup && { group: apiGroup })), { version,\n    kind }));\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a group, version, and kind for a reference.\n * @param reference reference for group, version, kind i.e `group~version~kind`.\n * @returns The group, version, kind for the provided reference.\n * If the group's value is \"core\" it denotes resource does not have an API group.\n * */\nexport const getGroupVersionKindForReference = (reference) => {\n    const referenceSplit = reference.split('~');\n    if (referenceSplit.length > 3)\n        throw new Error('Provided reference is invalid.');\n    const [group, version, kind] = referenceSplit;\n    return {\n        group,\n        version,\n        kind,\n    };\n};\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of K8sGroupVersionKind.\n * @param kind kind can be of type K8sResourceKindReference or K8sGroupVersionKind\n * @returns The reference i.e `group~version~kind`.\n */\nexport const transformGroupVersionKindToReference = (kind) => kind && typeof kind !== 'string' ? getReference(kind) : kind;\n//# sourceMappingURL=k8s-ref.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { getUtilsConfig } from '../../app/configSetup';\nimport { setAdmissionWebhookWarning } from '../../app/core/actions';\nimport storeHandler from '../../app/storeHandler';\nimport { TimeoutError } from '../error/http-error';\nimport { getConsoleRequestHeaders } from './console-fetch-utils';\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * @param url The URL to fetch\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response.\n */\nexport const consoleFetch = (url, options = {}, timeout = 60000) => __awaiter(void 0, void 0, void 0, function* () {\n    const fetchPromise = getUtilsConfig().appFetch(url, options);\n    if (timeout <= 0) {\n        return fetchPromise;\n    }\n    const timeoutPromise = new Promise((resolve, reject) => {\n        setTimeout(() => reject(new TimeoutError(url, timeout)), timeout);\n    });\n    return Promise.race([fetchPromise, timeoutPromise]);\n});\nconst parseData = (response) => __awaiter(void 0, void 0, void 0, function* () {\n    const text = yield response.text();\n    const isPlainText = response.headers.get('Content-Type') === 'text/plain';\n    if (!text) {\n        return isPlainText ? '' : {};\n    }\n    return isPlainText || !response.ok ? text : JSON.parse(text);\n});\nconst handleAdmissionWebhookWarning = (warning, kind, name) => {\n    const store = storeHandler.getStore();\n    const id = `${kind}_${name}_${warning}`;\n    const warningData = { kind, name, warning };\n    store.dispatch(setAdmissionWebhookWarning(id, warningData));\n};\nconst consoleFetchCommon = (url, method = 'GET', options = {}, timeout) => __awaiter(void 0, void 0, void 0, function* () {\n    const headers = getConsoleRequestHeaders();\n    // Pass headers last to let callers to override Accept.\n    const allOptions = _.defaultsDeep({ method }, options, { headers });\n    const response = yield consoleFetch(url, allOptions, timeout);\n    const dataPromise = parseData(response);\n    const warning = response.headers.get('Warning');\n    // If the response has a warning header, store it in the redux store.\n    if (response.ok && warning && method !== 'GET') {\n        // Do nothing on error since this is a side-effect. Caller will handle the error.\n        dataPromise\n            .then((data) => { var _a; return handleAdmissionWebhookWarning(warning, data.kind, (_a = data.metadata) === null || _a === void 0 ? void 0 : _a.name); })\n            .catch(() => { });\n    }\n    return dataPromise;\n});\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * It returns the response as a JSON object.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text or JSON object.\n */\nexport const consoleFetchJSON = (url, method = 'GET', options = {}, timeout) => {\n    const allOptions = _.defaultsDeep({}, options, {\n        headers: { Accept: 'application/json' },\n    });\n    return consoleFetchCommon(url, method, allOptions, timeout);\n};\n/**\n * A custom wrapper around `fetch` that adds console-specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws an appropriate error or logs out the user if required.\n * It returns the response as a text.\n * Uses `consoleFetch` internally.\n * @param url The URL to fetch\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text or JSON object.\n */\nexport const consoleFetchText = (url, options = {}, timeout) => {\n    return consoleFetchCommon(url, 'GET', options, timeout);\n};\nconst consoleFetchSendJSON = (url, method, json = null, options = {}, timeout) => {\n    const allOptions = {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': `application/${method === 'PATCH' ? 'json-patch+json' : 'json'};charset=UTF-8`,\n        },\n    };\n    if (json) {\n        allOptions.body = JSON.stringify(json);\n    }\n    return consoleFetchJSON(url, method, _.defaultsDeep(allOptions, options), timeout);\n};\n/**\n * A custom DELETE method of consoleFetchJSON.\n * It sends an optional JSON object as the body of the request and adds extra headers for patch request.\n * @param url The URL to delete the object\n * @param json The JSON to delete the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.delete = (url, json = null, options = {}, timeout) => {\n    return json\n        ? consoleFetchSendJSON(url, 'DELETE', json, options, timeout)\n        : consoleFetchJSON(url, 'DELETE', options, timeout);\n};\n/**\n * A custom POST method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to post the object\n * @param json The JSON to POST the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.post = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'POST', json, options, timeout);\n/**\n * A custom PUT method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to put the object\n * @param json The JSON to PUT the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.put = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'PUT', json, options, timeout);\n/**\n * A custom PATCH method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to patch the object\n * @param json The JSON to PATCH the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n */\nconsoleFetchJSON.patch = (url, json, options = {}, timeout) => consoleFetchSendJSON(url, 'PATCH', json, options, timeout);\n//# sourceMappingURL=console-fetch.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { getGroupVersionKindForReference, transformGroupVersionKindToReference } from '../k8s-ref';\nexport const getK8sModel = (k8s, k8sGroupVersionKind) => {\n    var _a;\n    const kindReference = transformGroupVersionKindToReference(k8sGroupVersionKind);\n    return kindReference\n        ? (_a = k8s.getIn(['RESOURCES', 'models', kindReference])) !== null && _a !== void 0 ? _a : k8s.getIn(['RESOURCES', 'models', getGroupVersionKindForReference(kindReference).kind])\n        : undefined;\n};\n/**\n * Hook that retrieves the k8s model for provided K8sGroupVersionKind from redux.\n * @param groupVersionKind group, version, kind of k8s resource `K8sGroupVersionKind` is preferred alternatively can pass reference for group, version, kind which is deprecated i.e `group~version~kind` `K8sResourceKindReference`.\n * @returns An array with the first item as k8s model and second item as inFlight status\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const [model, inFlight] = useK8sModel({ group: 'app'; version: 'v1'; kind: 'Deployment' });\n *   return ...\n * }\n * ```\n */\nexport const useK8sModel = (k8sGroupVersionKind) => [\n    useSelector(({ k8s }) => getK8sModel(k8s, k8sGroupVersionKind)),\n    useSelector(({ k8s }) => { var _a; return (_a = k8s.getIn(['RESOURCES', 'inFlight'])) !== null && _a !== void 0 ? _a : false; }),\n];\n//# sourceMappingURL=useK8sModel.js.map","/**\n * It provides impersonation details from the redux store.\n * @param state the root state\n * @returns The the impersonate state.\n */\nexport const getImpersonate = (state) => state.sdkCore.impersonate;\n/**\n * It provides impersonation details from the redux store as a props object.\n * @param state the root state\n * @returns The the impersonation details props object.\n */\nexport const impersonateStateToProps = (state) => {\n    return { impersonate: getImpersonate(state) };\n};\n/**\n * It provides user details from the redux store.\n * @param state the root state\n * @returns The the user state.\n */\nexport const getUser = (state) => state.sdkCore.user;\n/**\n * It provides admission webhook warning data from the redux store.\n * @param state the root state\n * @returns The the admissionWebhookWarning state.\n */\nexport const getAdmissionWebhookWarnings = (state) => state.sdkCore.admissionWebhookWarnings;\n//# sourceMappingURL=coreSelectors.js.map","import { action } from 'typesafe-actions';\nexport var ActionType;\n(function (ActionType) {\n    ActionType[\"SetUser\"] = \"setUser\";\n    ActionType[\"BeginImpersonate\"] = \"beginImpersonate\";\n    ActionType[\"EndImpersonate\"] = \"endImpersonate\";\n    ActionType[\"SetActiveCluster\"] = \"setActiveCluster\";\n    ActionType[\"SetAdmissionWebhookWarning\"] = \"setAdmissionWebhookWarning\";\n    ActionType[\"RemoveAdmissionWebhookWarning\"] = \"removeAdmissionWebhookWarning\";\n})(ActionType || (ActionType = {}));\nexport const setUser = (userInfo) => action(ActionType.SetUser, { userInfo });\nexport const beginImpersonate = (kind, name, subprotocols) => action(ActionType.BeginImpersonate, { kind, name, subprotocols });\nexport const endImpersonate = () => action(ActionType.EndImpersonate);\nexport const setAdmissionWebhookWarning = (id, warning) => action(ActionType.SetAdmissionWebhookWarning, { id, warning });\nexport const removeAdmissionWebhookWarning = (id) => action(ActionType.RemoveAdmissionWebhookWarning, { id });\nconst coreActions = {\n    setUser,\n    beginImpersonate,\n    endImpersonate,\n    setAdmissionWebhookWarning,\n    removeAdmissionWebhookWarning,\n};\n//# sourceMappingURL=core.js.map","import { getImpersonate } from '../../app/core/reducers';\nimport storeHandler from '../../app/storeHandler';\nexport const getCSRFToken = () => {\n    const cookiePrefix = 'csrf-token=';\n    return (document &&\n        document.cookie &&\n        document.cookie\n            .split(';')\n            .map((c) => c.trim())\n            .filter((c) => c.startsWith(cookiePrefix))\n            .map((c) => c.slice(cookiePrefix.length))\n            .pop());\n};\n/**\n * A function that creates impersonation headers for API requests using current redux state.\n * @returns an object containing the appropriate impersonation requst headers, based on redux state\n */\nexport const getConsoleRequestHeaders = () => {\n    const store = storeHandler.getStore();\n    if (!store)\n        return undefined;\n    const state = store.getState();\n    const headers = {\n        'X-CSRFToken': getCSRFToken(),\n    };\n    // Set impersonation headers\n    const { kind, name } = getImpersonate(state) || {};\n    if ((kind === 'User' || kind === 'Group') && name) {\n        // Even if we are impersonating a group, we still need to set Impersonate-User to something or k8s will complain\n        headers['Impersonate-User'] = name;\n        if (kind === 'Group') {\n            headers['Impersonate-Group'] = name;\n        }\n    }\n    return headers;\n};\n//# sourceMappingURL=console-fetch-utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as _ from 'lodash';\nimport { action } from 'typesafe-actions';\nimport { getReferenceForModel } from '../../../utils/k8s/k8s-ref';\nimport { k8sList, k8sGet } from '../../../utils/k8s/k8s-resource';\nimport { k8sWatch } from '../../../utils/k8s/k8s-utils';\nimport { getImpersonate } from '../../core/reducers/coreSelectors';\nexport var ActionType;\n(function (ActionType) {\n    ActionType[\"ReceivedResources\"] = \"resources\";\n    ActionType[\"GetResourcesInFlight\"] = \"getResourcesInFlight\";\n    ActionType[\"StartWatchK8sObject\"] = \"startWatchK8sObject\";\n    ActionType[\"StartWatchK8sList\"] = \"startWatchK8sList\";\n    ActionType[\"ModifyObject\"] = \"modifyObject\";\n    ActionType[\"StopWatchK8s\"] = \"stopWatchK8s\";\n    ActionType[\"Errored\"] = \"errored\";\n    ActionType[\"Loaded\"] = \"loaded\";\n    ActionType[\"BulkAddToList\"] = \"bulkAddToList\";\n    ActionType[\"UpdateListFromWS\"] = \"updateListFromWS\";\n    ActionType[\"FilterList\"] = \"filterList\";\n})(ActionType || (ActionType = {}));\nexport const updateListFromWS = (id, k8sObjects) => action(ActionType.UpdateListFromWS, { id, k8sObjects });\nexport const loaded = (id, k8sObjects) => action(ActionType.Loaded, { id, k8sObjects });\nexport const bulkAddToList = (id, k8sObjects) => action(ActionType.BulkAddToList, { id, k8sObjects });\nexport const startWatchK8sObject = (id) => action(ActionType.StartWatchK8sObject, { id });\nexport const startWatchK8sList = (id, query) => action(ActionType.StartWatchK8sList, { id, query });\nexport const modifyObject = (id, k8sObjects) => action(ActionType.ModifyObject, { id, k8sObjects });\nexport const stopWatchK8s = (id) => action(ActionType.StopWatchK8s, { id });\nexport const errored = (id, k8sObjects) => action(ActionType.Errored, { id, k8sObjects });\nexport const filterList = (id, name, value) => action(ActionType.FilterList, { id, name, value });\nexport const partialObjectMetadataListHeader = {\n    Accept: 'application/json;as=PartialObjectMetadataList;v=v1;g=meta.k8s.io,application/json',\n};\nexport const partialObjectMetadataHeader = {\n    Accept: 'application/json;as=PartialObjectMetadata;v=v1;g=meta.k8s.io,application/json',\n};\nconst WS = {};\nconst POLLs = {};\nconst REF_COUNTS = {};\nconst paginationLimit = 250;\nexport const stopK8sWatch = (id) => (dispatch) => {\n    REF_COUNTS[id] -= 1;\n    if (REF_COUNTS[id] > 0) {\n        return _.noop;\n    }\n    const ws = WS[id];\n    if (ws) {\n        ws.destroy();\n        delete WS[id];\n    }\n    const poller = POLLs[id];\n    clearInterval(poller);\n    delete POLLs[id];\n    delete REF_COUNTS[id];\n    return dispatch(stopWatchK8s(id));\n};\nexport const watchK8sList = (id, query, k8skind, extraAction, partialMetadata = false) => (dispatch, getState) => {\n    // Only one watch per unique list ID\n    if (id in REF_COUNTS) {\n        REF_COUNTS[id] += 1;\n        return _.noop;\n    }\n    dispatch(startWatchK8sList(id, query));\n    REF_COUNTS[id] = 1;\n    const incrementallyLoad = (continueToken = '') => __awaiter(void 0, void 0, void 0, function* () {\n        // the list may not still be around...\n        if (!REF_COUNTS[id]) {\n            // let .then handle the cleanup\n            return null;\n        }\n        const requestOptions = partialMetadata\n            ? {\n                headers: partialObjectMetadataListHeader,\n            }\n            : {};\n        const response = yield k8sList(k8skind, Object.assign(Object.assign({ limit: paginationLimit }, query), (continueToken ? { continue: continueToken } : {})), true, requestOptions);\n        if (!REF_COUNTS[id]) {\n            return null;\n        }\n        if (!continueToken) {\n            [loaded, extraAction].forEach((f) => f && dispatch(f(id, response.items)));\n        }\n        else {\n            dispatch(bulkAddToList(id, response.items));\n        }\n        if (response.metadata.continue) {\n            return incrementallyLoad(response.metadata.continue);\n        }\n        return response.metadata.resourceVersion;\n    });\n    /**\n     * Incrementally fetch list (XHR) using k8s pagination then use its resourceVersion to\n     *  start listening on a WS (?resourceVersion=$resourceVersion)\n     *  start the process over when:\n     *   1. the WS closes abnormally\n     *   2. the WS can not establish a connection within $TIMEOUT\n     */\n    const pollAndWatch = () => __awaiter(void 0, void 0, void 0, function* () {\n        delete POLLs[id];\n        try {\n            const resourceVersion = yield incrementallyLoad();\n            // ensure this watch should still exist because pollAndWatch is recursiveish\n            if (!REF_COUNTS[id]) {\n                // eslint-disable-next-line no-console\n                console.log(`stopped watching ${id} before finishing incremental loading.`);\n                // call cleanup function out of abundance of caution...\n                dispatch(stopK8sWatch(id));\n                return;\n            }\n            if (WS[id]) {\n                // eslint-disable-next-line no-console\n                console.warn(`Attempted to create multiple websockets for ${id}.`);\n                return;\n            }\n            if (!_.get(k8skind, 'verbs', ['watch']).includes('watch')) {\n                // eslint-disable-next-line no-console\n                console.warn(`${getReferenceForModel(k8skind)} does not support watching, falling back to polling.`);\n                if (!POLLs[id]) {\n                    POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n                }\n                return;\n            }\n            const { subprotocols } = getImpersonate(getState()) || {};\n            WS[id] = k8sWatch(k8skind, Object.assign(Object.assign({}, query), { resourceVersion }), { subprotocols, timeout: 60 * 1000 });\n        }\n        catch (e) {\n            if (!REF_COUNTS[id]) {\n                // eslint-disable-next-line no-console\n                console.log(`stopped watching ${id} before finishing incremental loading with error ${e}!`);\n                // call cleanup function out of abundance of caution...\n                dispatch(stopK8sWatch(id));\n                return;\n            }\n            dispatch(errored(id, e));\n            if (!POLLs[id]) {\n                POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n            }\n            return;\n        }\n        WS[id]\n            .onclose((event) => {\n            // Close Frame Status Codes: https://tools.ietf.org/html/rfc6455#section-7.4.1\n            if (event.code !== 1006) {\n                return;\n            }\n            // eslint-disable-next-line no-console\n            console.log('WS closed abnormally');\n            const ws = WS[id];\n            const timedOut = true;\n            ws && ws.destroy(timedOut);\n        })\n            .ondestroy((timedOut) => {\n            if (!timedOut) {\n                return;\n            }\n            // If the WS is unsuccessful for timeout duration, assume it is less work\n            // to update the entire list and then start the WS again\n            // eslint-disable-next-line no-console\n            console.log(`WS ${id} timed out - restarting polling`);\n            delete WS[id];\n            if (POLLs[id]) {\n                return;\n            }\n            POLLs[id] = window.setTimeout(pollAndWatch, 15 * 1000);\n        })\n            .onbulkmessage((events) => [updateListFromWS, extraAction].forEach((f) => f && dispatch(f(id, events))));\n    });\n    return pollAndWatch();\n};\nexport const watchK8sObject = (id, name, namespace, query, k8sModel, partialMetadata = false) => (dispatch, getState) => {\n    if (id in REF_COUNTS) {\n        REF_COUNTS[id] += 1;\n        return _.noop;\n    }\n    const watch = dispatch(startWatchK8sObject(id));\n    REF_COUNTS[id] = 1;\n    const requestOptions = partialMetadata\n        ? {\n            headers: partialObjectMetadataHeader,\n        }\n        : {};\n    const poller = () => {\n        k8sGet(k8sModel, name, namespace, {}, requestOptions)\n            .then((o) => dispatch(modifyObject(id, o)), (e) => dispatch(errored(id, e)))\n            .catch((err) => {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        });\n    };\n    POLLs[id] = window.setInterval(poller, 30 * 1000);\n    poller();\n    if (!_.get(k8sModel, 'verbs', ['watch']).includes('watch')) {\n        // eslint-disable-next-line no-console\n        console.warn(`${getReferenceForModel(k8sModel)} does not support watching`);\n        return _.noop;\n    }\n    // Validate that a namespace is provided when watching a singular namespaced object. Must happen\n    // on frontend since we use field selectors against the list endpoint to watch singular resources.\n    if (k8sModel.namespaced && query.name && !query.ns) {\n        // eslint-disable-next-line no-console\n        console.error('Namespace required to watch namespaced resource: ', k8sModel.kind, query.name);\n        return _.noop;\n    }\n    if (query.name) {\n        query.fieldSelector = `metadata.name=${query.name}`;\n        delete query.name;\n    }\n    const { subprotocols } = getImpersonate(getState()) || {};\n    WS[id] = k8sWatch(k8sModel, query, {\n        subprotocols,\n    }).onbulkmessage((events) => events.forEach((e) => dispatch(modifyObject(id, e.object))));\n    return watch;\n};\nexport const receivedResources = (resources) => action(ActionType.ReceivedResources, { resources });\nexport const getResourcesInFlight = () => action(ActionType.GetResourcesInFlight);\nconst k8sActions = {\n    startWatchK8sObject,\n    startWatchK8sList,\n    modifyObject,\n    stopWatchK8s,\n    errored,\n    loaded,\n    bulkAddToList,\n    updateListFromWS,\n    filterList,\n    receivedResources,\n    getResourcesInFlight,\n};\n//# sourceMappingURL=k8s.js.map","import { Map as ImmutableMap } from 'immutable';\nimport * as _ from 'lodash';\nimport { k8sBasePath } from './k8s';\nimport { getReferenceForModel } from './k8s-ref';\nimport { WSFactory } from './ws-factory';\n// eslint-disable-next-line\nconst staticModels = require('@console/internal/models');\nconst getK8sAPIPath = ({ apiGroup = 'core', apiVersion }) => {\n    const isLegacy = apiGroup === 'core' && apiVersion === 'v1';\n    let p = isLegacy ? '/api/' : '/apis/';\n    if (!isLegacy && apiGroup) {\n        p += `${apiGroup}/`;\n    }\n    p += apiVersion;\n    return p;\n};\nexport const getK8sResourcePath = (model, options) => {\n    let u = getK8sAPIPath(model);\n    if (options.ns) {\n        u += `/namespaces/${options.ns}`;\n    }\n    u += `/${model.plural}`;\n    if (options.name) {\n        // Some resources like Users can have special characters in the name.\n        u += `/${encodeURIComponent(options.name)}`;\n    }\n    if (options.path) {\n        u += `/${options.path}`;\n    }\n    if (!_.isEmpty(options.queryParams)) {\n        const q = _.map(options.queryParams, (v, k) => {\n            return `${k}=${v}`;\n        });\n        u += `?${q.join('&')}`;\n    }\n    return u;\n};\nexport const resourceURL = (model, options) => `${k8sBasePath}${getK8sResourcePath(model, options)}`;\nconst toArray = (value) => (Array.isArray(value) ? value : [value]);\nexport const requirementToString = (requirement) => {\n    if (requirement.operator === 'Equals') {\n        return `${requirement.key}=${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'NotEquals') {\n        return `${requirement.key}!=${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'Exists') {\n        return requirement.key;\n    }\n    if (requirement.operator === 'DoesNotExist') {\n        return `!${requirement.key}`;\n    }\n    if (requirement.operator === 'In') {\n        return `${requirement.key} in (${toArray(requirement.values).join(',')})`;\n    }\n    if (requirement.operator === 'NotIn') {\n        return `${requirement.key} notin (${toArray(requirement.values).join(',')})`;\n    }\n    if (requirement.operator === 'GreaterThan') {\n        return `${requirement.key} > ${requirement.values[0]}`;\n    }\n    if (requirement.operator === 'LessThan') {\n        return `${requirement.key} < ${requirement.values[0]}`;\n    }\n    return '';\n};\nexport const createEquals = (key, value) => ({\n    key,\n    operator: 'Equals',\n    values: [value],\n});\nconst isOldFormat = (selector) => !selector.matchLabels && !selector.matchExpressions;\nexport const toRequirements = (selector = {}) => {\n    const requirements = [];\n    const matchLabels = isOldFormat(selector) ? selector : selector.matchLabels;\n    const { matchExpressions } = selector;\n    Object.keys(matchLabels || {})\n        .sort()\n        .forEach((k) => {\n        requirements.push(createEquals(k, matchLabels[k]));\n    });\n    (matchExpressions || []).forEach((me) => {\n        requirements.push(me);\n    });\n    return requirements;\n};\nexport const selectorToString = (selector) => {\n    const requirements = toRequirements(selector);\n    return requirements.map(requirementToString).join(',');\n};\nexport const k8sWatch = (kind, query = {}, wsOptions = {}) => {\n    const queryParams = { watch: 'true' };\n    const opts = { queryParams };\n    const wsOptionsUpdated = Object.assign({\n        host: 'auto',\n        reconnect: true,\n        jsonParse: true,\n        bufferFlushInterval: 500,\n        bufferMax: 1000,\n    }, wsOptions);\n    const { labelSelector } = query;\n    if (labelSelector) {\n        const encodedSelector = encodeURIComponent(selectorToString(labelSelector));\n        if (encodedSelector) {\n            queryParams.labelSelector = encodedSelector;\n        }\n    }\n    if (query.fieldSelector) {\n        queryParams.fieldSelector = encodeURIComponent(query.fieldSelector);\n    }\n    if (query.ns) {\n        opts.ns = query.ns;\n    }\n    if (query.resourceVersion) {\n        queryParams.resourceVersion = encodeURIComponent(query.resourceVersion);\n    }\n    const path = resourceURL(kind, opts);\n    wsOptionsUpdated.path = path;\n    return new WSFactory(path, wsOptionsUpdated);\n};\nlet pluginStore;\nexport const setPluginStore = (store) => {\n    pluginStore = store;\n};\nconst modelKey = (model) => {\n    // TODO: Use `referenceForModel` even for known API objects\n    return model.crd ? getReferenceForModel(model) : model.kind;\n};\nexport const modelsToMap = (models) => {\n    return ImmutableMap().withMutations((map) => {\n        models.forEach((model) => map.set(modelKey(model), model));\n    });\n};\nexport const isModelDefinition = (e) => {\n    return e.type === 'ModelDefinition';\n};\n/**\n * Contains static resource definitions for Kubernetes objects.\n * Keys are of type `group:version:Kind`, but TypeScript doesn't support regex types (https://github.com/Microsoft/TypeScript/issues/6579).\n */\nlet k8sModels;\nconst getK8sModels = () => {\n    if (!k8sModels) {\n        // TODO this was migrated from console and is only used for the fallback API discovery and can likely be removed\n        k8sModels = modelsToMap(_.values(staticModels));\n        const hasModel = (model) => k8sModels.has(modelKey(model));\n        k8sModels = k8sModels.withMutations((map) => {\n            const pluginModels = _.flatMap(pluginStore\n                .getExtensionsInUse()\n                .filter(isModelDefinition)\n                .map((md) => md.properties.models));\n            map.merge(modelsToMap(pluginModels.filter((model) => !hasModel(model))));\n        });\n    }\n    return k8sModels;\n};\n// URL routes that can be namespaced\nlet namespacedResources;\n/**\n * Provides a synchronous way to acquire all statically-defined Kubernetes models.\n * NOTE: This will not work for CRDs defined at runtime, use `connectToModels` instead.\n */\nexport const allModels = getK8sModels;\nexport const getNamespacedResources = () => {\n    if (!namespacedResources) {\n        namespacedResources = new Set();\n        allModels().forEach((v, k) => {\n            if (!v.namespaced) {\n                return;\n            }\n            if (v.crd) {\n                namespacedResources.add(k);\n            }\n            if (!v.crd || v.legacyPluralURL) {\n                namespacedResources.add(v.plural);\n            }\n        });\n    }\n    return namespacedResources;\n};\n//# sourceMappingURL=k8s-utils.js.map","export { consoleFetch, consoleFetchJSON, consoleFetchText } from './console-fetch';\nexport { getConsoleRequestHeaders } from './console-fetch-utils';\n//# sourceMappingURL=index.js.map","let store;\nconst storeHandler = {\n    setStore: (storeData) => {\n        store = storeData;\n    },\n    getStore: () => store,\n};\nexport default storeHandler;\n//# sourceMappingURL=storeHandler.js.map","export { useK8sModel } from './useK8sModel';\nexport { useK8sModels } from './useK8sModels';\nexport { useK8sWatchResource } from './useK8sWatchResource';\nexport { useK8sWatchResources } from './useK8sWatchResources';\n//# sourceMappingURL=index.js.map","import * as React from 'react';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  K8sResourceCommon,\n  K8sPodControllerKind,\n  K8sKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { deletePDBModal } from '../../components/pdb/modals';\nimport { PodDisruptionBudgetKind } from '../../components/pdb/types';\nimport { getPDBResource } from '../../components/pdb/utils/get-pdb-resources';\nimport { PodDisruptionBudgetModel } from '../../models';\nimport { ResourceActionFactory } from './common-factory';\n\nconst pdbRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kindObj: K8sKind) =>\n  `/k8s/ns/${namespace}/${referenceForModel(kindObj)}/form?name=${name}`;\n\nconst PodDisruptionBudgetActionFactory: ResourceActionFactory = {\n  AddPDB: (kindObj: K8sKind, obj: K8sPodControllerKind): Action => ({\n    id: 'add-pdb',\n    label: i18next.t('console-app~Add PodDisruptionBudget'),\n    cta: {\n      href: pdbRoute(obj, kindObj),\n    },\n    accessReview: asAccessReview(kindObj, obj, 'create'),\n  }),\n  EditPDB: (kindObj: K8sKind, obj: K8sPodControllerKind): Action => ({\n    id: 'edit-pdb',\n    label: i18next.t('console-app~Edit PodDisruptionBudget'),\n    cta: {\n      href: pdbRoute(obj, kindObj),\n    },\n    accessReview: asAccessReview(kindObj, obj, 'patch'),\n  }),\n  DeletePDB: (\n    kindObj: K8sKind,\n    obj: K8sPodControllerKind,\n    matchedPDB: PodDisruptionBudgetKind,\n  ): Action => ({\n    id: 'delete-pdb',\n    label: i18next.t('console-app~Remove PodDisruptionBudget'),\n    insertBefore: 'edit-resource-limits',\n    cta: () => {\n      deletePDBModal({\n        workloadName: obj.metadata.name,\n        pdb: matchedPDB,\n      });\n    },\n    accessReview: asAccessReview(kindObj, obj, 'delete'),\n  }),\n};\n\nconst getPDBActions = (\n  kind: K8sKind,\n  obj: K8sPodControllerKind,\n  matchedPDB: PodDisruptionBudgetKind,\n): Action[] => {\n  if (_.isEmpty(matchedPDB)) return [PodDisruptionBudgetActionFactory.AddPDB(kind, obj)];\n\n  return [\n    PodDisruptionBudgetActionFactory.EditPDB(kind, obj),\n    PodDisruptionBudgetActionFactory.DeletePDB(kind, obj, matchedPDB),\n  ];\n};\n\nexport const usePDBActions = (kindObj: K8sKind, resource: K8sPodControllerKind) => {\n  const namespace = resource?.metadata?.namespace;\n\n  const watchedResource = React.useMemo(\n    () => ({\n      isList: true,\n      groupVersionKind: {\n        group: PodDisruptionBudgetModel.apiGroup,\n        kind: PodDisruptionBudgetModel.kind,\n        version: PodDisruptionBudgetModel.apiVersion,\n      },\n      namespace,\n      namespaced: true,\n    }),\n    [namespace],\n  );\n\n  const [pdbResources] = useK8sWatchResource<PodDisruptionBudgetKind[]>(watchedResource);\n\n  const matchedPDB = getPDBResource(pdbResources, resource);\n\n  const result = React.useMemo(() => {\n    return [getPDBActions(kindObj, resource, matchedPDB)];\n  }, [kindObj, matchedPDB, resource]);\n\n  return result;\n};\n","import * as _ from 'lodash';\nimport { consoleFetchJSON as coFetchJSON } from '../fetch';\nimport { selectorToString, resourceURL } from './k8s-utils';\n/**\n * An adapter function to call the underlying APIs with provided options.\n * @param func The function to be called.\n * @param knownArgs  The list of arguments to be provided to underlying API in order.\n * @returns The function called with provided arguments.\n */\nconst adapterFunc = (func, knownArgs) => {\n    return (options) => {\n        const args = knownArgs.map((arg) => {\n            // forming opts to match underlying API signature if it's there in knownArgs\n            if (arg === 'opts') {\n                const { name, ns, path, queryParams } = options || {};\n                return Object.assign(Object.assign(Object.assign(Object.assign({}, (name && { name })), (ns && { ns })), (path && { path })), (queryParams && { queryParams }));\n            }\n            return options[arg];\n        });\n        return func(...args);\n    };\n};\n/**\n * @deprecated Use {@link k8sGetResource} instead. Support for k8sGet will be removed in a future release.\n * It fetches a resource from the cluster, based on the provided model, name, namespace.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param model Kubernetes model\n * @param name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param opts The options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more at https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resouces matching the model. In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sGet = (model, name, ns, opts, requestInit) => coFetchJSON(resourceURL(model, Object.assign({ ns, name }, opts)), 'GET', requestInit, null);\n/**\n * It fetches a resource from the cluster, based on the provided options.\n * If the name is provided it returns resource, else it returns all the resources matching the model.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model - Kubernetes model\n * @param options.name - The name of the resource, if not provided then it looks for all the resources matching the model.\n * @param options.ns - The namespace to look into, should not be specified for cluster-scoped resources.\n * @param options.path - Appends as subpath if provided\n * @param options.queryParams - The query parameters to be included in the URL.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, etc. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response as JSON object with a resource if the name is provided, else it returns all the resources matching the model. In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sGetResource = adapterFunc(k8sGet, [\n    'model',\n    'name',\n    'ns',\n    'opts',\n    'requestInit',\n]);\n/**\n * @deprecated Use {@link k8sCreateResource} instead. Support for k8sCreate will be removed in a future release.\n * It creates a resource in the cluster, based on the provided model and payload.\n * @param model Kubernetes model\n * @param data The payload for the resource to be created.\n * @param opts The options to pass.\n * @returns A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sCreate = (model, data, opts = {}) => {\n    var _a;\n    return coFetchJSON.post(resourceURL(model, Object.assign({ ns: (_a = data === null || data === void 0 ? void 0 : data.metadata) === null || _a === void 0 ? void 0 : _a.namespace }, opts)), data, null, null);\n};\n/**\n * It creates a resource in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model - Kubernetes model\n * @param options.data - payload for the resource to be created\n * @param options.path - Appends as subpath if provided\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource created.\n * In case of failure, the promise gets rejected with HTTP error response.\n */\nexport const k8sCreateResource = adapterFunc(k8sCreate, [\n    'model',\n    'data',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sUpdateResource} instead. Support for k8sUpdate will be removed in a future release.\n * It updates the entire resource in the cluster, based on the provided model, data, name, namespace.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param model Kubernetes model\n * @param data payload for the resource to be updated.\n * @param ns namespace to look into, it should not be specified for cluster-scoped resources.\n * @param name resource name to be updated.\n * @param opts The options to pass\n * @returns A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sUpdate = (model, data, ns, name, opts) => {\n    var _a, _b;\n    return coFetchJSON.put(resourceURL(model, Object.assign({ ns: ns || ((_a = data.metadata) === null || _a === void 0 ? void 0 : _a.namespace), name: name || ((_b = data.metadata) === null || _b === void 0 ? void 0 : _b.name) }, opts)), data, null, null);\n};\n/**\n * It updates the entire resource in the cluster, based on the provided options.\n * When a client needs to replace an existing resource entirely, the client can use k8sUpdate.\n * Alternatively, the client can use k8sPatch to perform the partial update.\n * @param options which are passed as key-value pair in the map\n * @param options.model - Kubernetes model\n * @param options.data - payload for the Kubernetes resource to be updated\n * @param options.ns - namespace to look into, it should not be specified for cluster-scoped resources.\n * @param options.name - resource name to be updated.\n * @param options.path - appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sUpdateResource = adapterFunc(k8sUpdate, [\n    'model',\n    'data',\n    'ns',\n    'name',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sPatchResource} instead. Support for k8sPatch will be removed in a future release.\n * It patches any resource in the cluster, based on provided model, resource, data.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more https://datatracker.ietf.org/doc/html/rfc6902\n * @param model Kubernetes model\n * @param resource The resource to be patched\n * @param data Only the data to be patched on existing resource with the operation, path, and value\n * @param opts The options to pass\n * @returns A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sPatch = (model, resource, data, opts = {}) => {\n    const patches = _.compact(data);\n    if (_.isEmpty(patches)) {\n        return Promise.resolve(resource);\n    }\n    return coFetchJSON.patch(resourceURL(model, Object.assign({\n        ns: resource.metadata.namespace,\n        name: resource.metadata.name,\n    }, opts)), patches, null, null);\n};\n/**\n * It patches any resource in the cluster, based on the provided options.\n * When a client needs to perform the partial update, the client can use k8sPatch.\n * Alternatively, the client can use k8sUpdate to replace an existing resource entirely.\n * See more https://datatracker.ietf.org/doc/html/rfc6902\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model - Kubernetes model\n * @param options.resource - The resource to be patched.\n * @param options.data - Only the data to be patched on existing resource with the operation, path, and value.\n * @param options.path - Appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @returns A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sPatchResource = adapterFunc(k8sPatch, [\n    'model',\n    'resource',\n    'data',\n    'opts',\n]);\n/**\n * @deprecated Use {@link k8sDeleteResource} instead. Support for k8sKill will be removed in a future release.\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * See more https://kubernetes.io/docs/concepts/architecture/garbage-collection/\n * @param model Kubernetes model\n * @param resource The resource to be deleted.\n * @param opts The Options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @param options.json - Can control garbage collection of resource explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @returns A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n */\nexport const k8sKill = (model, resource, opts = {}, requestInit = {}, json = null) => {\n    const { propagationPolicy } = model;\n    const jsonData = json !== null && json !== void 0 ? json : (propagationPolicy && { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy });\n    return coFetchJSON.delete(resourceURL(model, Object.assign({ ns: resource.metadata.namespace, name: resource.metadata.name }, opts)), jsonData, requestInit, null);\n};\n/**\n * It deletes resources from the cluster, based on the provided model and resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with `propagationPolicy` property in provided model or passed in json.\n * @param options which are passed as key-value pair in the map.\n * @param options.model - Kubernetes model\n * @param options.resource - The resource to be deleted.\n * @param options.path - Appends as subpath if provided.\n * @param options.queryParams - The query parameters to be included in the URL.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, etc. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @param options.json - Can control garbage collection of resources explicitly if provided else will default to model's `propagationPolicy`.\n * @example\n * ```\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * ```\n * @returns A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n *  */\nexport const k8sDeleteResource = adapterFunc(k8sKill, [\n    'model',\n    'resource',\n    'opts',\n    'requestInit',\n    'json',\n]);\n/**\n * @deprecated Use {@link k8sListResource} instead. Support for k8sList will be removed in a future release.\n * It lists the resources as an array in the cluster, based on the provided model, queryParams(label selector).\n * @param model Kubernetes model\n * @param queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param raw If true then returns raw data i.e if the query is for Pod then resolved resources will not be in an array but a resource will be returned of kind PodList\n * and it will have a key \"item\" which will be an array of Pod kind.\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response with the resources in an array.\n * In case of failure promise gets rejected with HTTP error response.\n * */\nexport const k8sList = (model, queryParams = {}, raw = false, requestInit = {}) => {\n    const query = _.map(_.omit(queryParams, 'ns'), (v, k) => {\n        let newVal;\n        if (k === 'labelSelector') {\n            newVal = selectorToString(v);\n        }\n        return `${encodeURIComponent(k)}=${encodeURIComponent(newVal !== null && newVal !== void 0 ? newVal : v)}`;\n    }).join('&');\n    const listURL = resourceURL(model, { ns: queryParams.ns });\n    return coFetchJSON(`${listURL}?${query}`, 'GET', requestInit, null).then((result) => {\n        var _a;\n        const typedItems = (_a = result.items) === null || _a === void 0 ? void 0 : _a.map((i) => (Object.assign({ kind: model.kind, apiVersion: result.apiVersion }, i)));\n        return raw ? Object.assign(Object.assign({}, result), { items: typedItems }) : typedItems;\n    });\n};\n/**\n * It lists the resources as an array in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model - Kubernetes model\n * @param options.queryParams - The query parameters to be included in the URL. It can also pass label selectors by using the `labelSelector` key.\n * @param options.requestInit - The fetch init object to use. This can have request headers, method, redirect, and so forth. See more https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html\n * @returns A promise that resolves to the response\n */\nexport const k8sListResource = adapterFunc(k8sList, [\n    'model',\n    'queryParams',\n    'raw',\n    'requestInit',\n]);\n/**\n * Same interface as k8sListResource but returns the sub items.\n * @see K8sListResource\n */\nexport const k8sListResourceItems = (options) => k8sListResource(options).then((response) => {\n    if (Array.isArray(response)) {\n        return response;\n    }\n    return response.items;\n});\n//# sourceMappingURL=k8s-resource.js.map","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n    constructor(message) {\n        super(message);\n        // set error name as constructor name, make it not enumerable to keep native Error behavior\n        // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n        Object.defineProperty(this, 'name', {\n            value: new.target.name,\n            enumerable: false,\n            configurable: true,\n        });\n        // Use captureStackTrace when available to remove contructor from stack trace\n        // Add message to the stack trace\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            this.stack = new Error(message).stack;\n        }\n        // fix the extended error prototype chain\n        // because typescript __extends implementation can't\n        // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexport class ErrorWithCause extends CustomError {\n    constructor(message, cause) {\n        super(message);\n        this.cause = cause;\n    }\n}\n//# sourceMappingURL=custom-error.js.map","import { Map as ImmutableMap } from 'immutable';\nimport { ActionType } from '../actions/core';\n/**\n * Reducer function for the core\n * @param state the reducer state\n * @param action provided associated action type alongwith payload\n * @param action.type type of the action\n * @param action.payload associated payload for the action\n * @see CoreAction\n * @returns The the updated state.\n */\nexport const coreReducer = (state = {\n    user: {},\n    admissionWebhookWarnings: ImmutableMap(),\n}, action) => {\n    switch (action.type) {\n        case ActionType.BeginImpersonate:\n            return Object.assign(Object.assign({}, state), { impersonate: {\n                    kind: action.payload.kind,\n                    name: action.payload.name,\n                    subprotocols: action.payload.subprotocols,\n                } });\n        case ActionType.EndImpersonate: {\n            const stateKeys = Object.keys(state);\n            return stateKeys.reduce((acc, key) => {\n                if (key !== 'impersonate') {\n                    return Object.assign(Object.assign({}, acc), { [key]: state[key] });\n                }\n                return acc;\n            }, {});\n        }\n        case ActionType.SetUser:\n            return Object.assign(Object.assign({}, state), { user: action.payload.userInfo });\n        case ActionType.SetAdmissionWebhookWarning:\n            return Object.assign(Object.assign({}, state), { admissionWebhookWarnings: state.admissionWebhookWarnings.set(action.payload.id, action.payload.warning) });\n        case ActionType.RemoveAdmissionWebhookWarning:\n            return Object.assign(Object.assign({}, state), { admissionWebhookWarnings: state.admissionWebhookWarnings.remove(action.payload.id) });\n        default:\n            return state;\n    }\n};\n//# sourceMappingURL=core.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\n/**\n * Hook that retrieves all current k8s models from redux.\n *\n * @returns An array with the first item as the list of k8s model and second item as inFlight status\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const [models, inFlight] = UseK8sModels();\n *   return ...\n * }\n * ```\n */\nexport const useK8sModels = () => {\n    var _a, _b, _c;\n    return [\n        (_b = (_a = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'models']))) === null || _a === void 0 ? void 0 : _a.toJS()) !== null && _b !== void 0 ? _b : {},\n        (_c = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']))) !== null && _c !== void 0 ? _c : false,\n    ];\n};\n//# sourceMappingURL=useK8sModels.js.map","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { getReduxIdPayload } from '../../../app/k8s/reducers/k8sSelector';\nimport { getIDAndDispatch, getReduxData, NoModelError } from './k8s-watcher';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { useK8sModel } from './useK8sModel';\nimport { useModelsLoaded } from './useModelsLoaded';\n/**\n * Hook that retrieves the Kubernetes resource along with their respective status for loaded and error.\n * @param initResource resources need to be watched as key-value pair, wherein key will be unique to resource and value will be options needed to watch for the respective resource.\n * @returns An array with first item as resource(s), second item as loaded status and third item as error state if any.\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const watchRes = {\n        ...\n      }\n *   const [data, loaded, error] = useK8sWatchResource(watchRes)\n *   return ...\n * }\n * ```\n */\nexport const useK8sWatchResource = (initResource) => {\n    const resource = useDeepCompareMemoize(initResource, true);\n    const modelsLoaded = useModelsLoaded();\n    const [k8sModel] = useK8sModel((resource === null || resource === void 0 ? void 0 : resource.groupVersionKind) || (resource === null || resource === void 0 ? void 0 : resource.kind));\n    const reduxID = React.useMemo(() => getIDAndDispatch(resource, k8sModel), [k8sModel, resource]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        if (reduxID) {\n            dispatch(reduxID.dispatch);\n        }\n        return () => {\n            if (reduxID) {\n                dispatch(k8sActions.stopK8sWatch(reduxID.id));\n            }\n        };\n    }, [dispatch, reduxID]);\n    const resourceK8s = useSelector((state) => reduxID ? getReduxIdPayload(state, reduxID.id) : null);\n    return React.useMemo(() => {\n        if (!resource) {\n            return [undefined, true, undefined];\n        }\n        if (!resourceK8s) {\n            const data = (resource === null || resource === void 0 ? void 0 : resource.isList) ? [] : {};\n            return modelsLoaded && !k8sModel\n                ? [data, true, new NoModelError()]\n                : [data, false, undefined];\n        }\n        const data = getReduxData(resourceK8s.get('data'), resource);\n        const loaded = resourceK8s.get('loaded');\n        const loadError = resourceK8s.get('loadError');\n        return [data, loaded, loadError];\n    }, [resource, resourceK8s, modelsLoaded, k8sModel]);\n};\n//# sourceMappingURL=useK8sWatchResource.js.map","import * as _ from 'lodash';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { CustomError } from '../../error/custom-error';\nimport { getReferenceForModel } from '../k8s-ref';\nexport class NoModelError extends CustomError {\n    constructor() {\n        super('Model does not exist');\n    }\n}\nexport const makeReduxID = (k8sKind, query) => {\n    let qs = '';\n    if (!_.isEmpty(query)) {\n        qs = `---${JSON.stringify(query)}`;\n    }\n    return `${getReferenceForModel(k8sKind || {})}${qs}`;\n};\nexport const makeQuery = (namespace, labelSelector, fieldSelector, name, limit) => {\n    const query = {};\n    if (!_.isEmpty(labelSelector)) {\n        query.labelSelector = labelSelector;\n    }\n    if (!_.isEmpty(namespace)) {\n        query.ns = namespace;\n    }\n    if (!_.isEmpty(name)) {\n        query.name = name;\n    }\n    if (fieldSelector) {\n        query.fieldSelector = fieldSelector;\n    }\n    if (limit) {\n        query.limit = limit;\n    }\n    return query;\n};\nexport const INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL = Symbol('_cachedToArrayResult');\nexport const INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL = Symbol('_cachedToJSONResult');\nexport const getReduxData = (immutableData, resource) => {\n    if (!immutableData) {\n        return null;\n    }\n    if (resource.isList && immutableData.toArray) {\n        if (!immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL]) {\n            immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL] = immutableData\n                .toArray()\n                .map((a) => {\n                if (a.toJSON) {\n                    if (!a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL]) {\n                        a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL] = a.toJSON();\n                    }\n                    return a[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL];\n                }\n                return a;\n            });\n        }\n        return immutableData[INTERNAL_REDUX_IMMUTABLE_TOARRAY_CACHE_SYMBOL];\n    }\n    if (immutableData.toJSON) {\n        if (!immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL]) {\n            immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL] = immutableData.toJSON();\n        }\n        return immutableData[INTERNAL_REDUX_IMMUTABLE_TOJSON_CACHE_SYMBOL];\n    }\n    return null;\n};\nexport const getIDAndDispatch = (resource, k8sModel) => {\n    if (!k8sModel || !resource) {\n        return null;\n    }\n    const query = makeQuery(resource.namespace, resource.selector, resource.fieldSelector, resource.name, resource.limit);\n    const id = makeReduxID(k8sModel, query);\n    const dispatch = resource.isList\n        ? k8sActions.watchK8sList(id, query, k8sModel, null, resource.partialMetadata)\n        : k8sActions.watchK8sObject(id, resource.name, resource.namespace, query, k8sModel, resource.partialMetadata);\n    return { id, dispatch };\n};\n//# sourceMappingURL=k8s-watcher.js.map","import * as React from 'react';\nimport * as _ from 'lodash';\nexport const useDeepCompareMemoize = (value, strinfigy) => {\n    const ref = React.useRef();\n    if (strinfigy\n        ? JSON.stringify(value) !== JSON.stringify(ref.current)\n        : !_.isEqual(value, ref.current)) {\n        ref.current = value;\n    }\n    return ref.current;\n};\n//# sourceMappingURL=useDeepCompareMemoize.js.map","import * as React from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\n/**\n * Wait until internal models (CRDs) are loaded.\n *\n * Note: When loading is 'in flight' (in progress) when the component\n * that uses this hook is mounted, this hook waits until this is resolved, too.\n */\nexport const useModelsLoaded = () => {\n    const ref = React.useRef(false);\n    const loaded = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'loaded']));\n    const inFlight = useSelector(({ k8s }) => k8s.getIn(['RESOURCES', 'inFlight']));\n    if (!ref.current && loaded && !inFlight) {\n        ref.current = true;\n    }\n    return ref.current;\n};\n//# sourceMappingURL=useModelsLoaded.js.map","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\nimport * as k8sActions from '../../../app/k8s/actions/k8s';\nimport { transformGroupVersionKindToReference, getReferenceForModel, getGroupVersionKindForReference, } from '../k8s-ref';\nimport { getIDAndDispatch, getReduxData, NoModelError } from './k8s-watcher';\nimport { useDeepCompareMemoize } from './useDeepCompareMemoize';\nimport { getK8sModel } from './useK8sModel';\nimport { useModelsLoaded } from './useModelsLoaded';\nimport { usePrevious } from './usePrevious';\n/**\n * Hook that retrieves the Kubernetes resources along with their respective status for loaded and error.\n * @param initResources resources need to be watched as key-value pair, wherein key will be unique to resource and value will be options needed to watch for the respective resource.\n * @returns A map where keys are as provided in initResouces and value has three properties data, loaded and error.\n * @example\n * ```ts\n * const Component: React.FC = () => {\n *   const watchResources = {\n        'deployment': {...},\n        'pod': {...}\n        ...\n      }\n *   const {deployment, pod} = useK8sWatchResources(watchResources)\n *   return ...\n * }\n * ```\n */\nexport const useK8sWatchResources = (initResources) => {\n    const resources = useDeepCompareMemoize(initResources, true);\n    const modelsLoaded = useModelsLoaded();\n    const allK8sModels = useSelector((state) => state.k8s.getIn(['RESOURCES', 'models']));\n    const prevK8sModels = usePrevious(allK8sModels);\n    const prevResources = usePrevious(resources);\n    const k8sModelsRef = React.useRef(ImmutableMap());\n    if (prevResources !== resources ||\n        (prevK8sModels !== allK8sModels &&\n            Object.values(resources).some((r) => {\n                const modelReference = transformGroupVersionKindToReference(r.groupVersionKind || r.kind);\n                return (getK8sModel(prevK8sModels, modelReference) !== getK8sModel(allK8sModels, modelReference));\n            }))) {\n        const requiredModels = Object.values(resources).map((r) => transformGroupVersionKindToReference(r.groupVersionKind || r.kind));\n        k8sModelsRef.current = allK8sModels.filter((model) => requiredModels.includes(getReferenceForModel(model)) || requiredModels.includes(model.kind));\n    }\n    const k8sModels = k8sModelsRef.current;\n    const reduxIDs = React.useMemo(() => modelsLoaded\n        ? Object.keys(resources).reduce((ids, key) => {\n            const modelReference = transformGroupVersionKindToReference(resources[key].groupVersionKind || resources[key].kind);\n            const resourceModel = modelReference &&\n                (k8sModels.get(modelReference) ||\n                    k8sModels.get(getGroupVersionKindForReference(modelReference).kind));\n            if (!resourceModel) {\n                ids[key] = {\n                    noModel: true,\n                };\n            }\n            else {\n                const idAndDispatch = getIDAndDispatch(resources[key], resourceModel);\n                if (idAndDispatch) {\n                    ids[key] = idAndDispatch;\n                }\n            }\n            return ids;\n        }, {})\n        : null, [k8sModels, modelsLoaded, resources]);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        const reduxIDKeys = Object.keys(reduxIDs || {});\n        reduxIDKeys.forEach((k) => {\n            if (reduxIDs[k].dispatch) {\n                dispatch(reduxIDs[k].dispatch);\n            }\n        });\n        return () => {\n            reduxIDKeys.forEach((k) => {\n                if (reduxIDs[k].dispatch) {\n                    dispatch(k8sActions.stopK8sWatch(reduxIDs[k].id));\n                }\n            });\n        };\n    }, [dispatch, reduxIDs]);\n    const resourceK8sSelectorCreator = React.useMemo(() => createSelectorCreator(\n    // specifying createSelectorCreator<ImmutableMap<string, K8sKind>> throws type error\n    defaultMemoize, (oldK8s, newK8s) => Object.keys(reduxIDs || {})\n        .filter((k) => !reduxIDs[k].noModel)\n        .every((k) => oldK8s.get(reduxIDs[k].id) === newK8s.get(reduxIDs[k].id))), [reduxIDs]);\n    const resourceK8sSelector = React.useMemo(() => resourceK8sSelectorCreator((state) => state.k8s, (k8s) => k8s), [resourceK8sSelectorCreator]);\n    const resourceK8s = useSelector(resourceK8sSelector);\n    const results = React.useMemo(() => Object.keys(resources).reduce((acc, key) => {\n        if (reduxIDs === null || reduxIDs === void 0 ? void 0 : reduxIDs[key].noModel) {\n            acc[key] = {\n                data: resources[key].isList ? [] : {},\n                loaded: true,\n                loadError: new NoModelError(),\n            };\n        }\n        else if (resourceK8s.has(reduxIDs === null || reduxIDs === void 0 ? void 0 : reduxIDs[key].id)) {\n            const data = getReduxData(resourceK8s.getIn([reduxIDs[key].id, 'data']), resources[key]);\n            const loaded = resourceK8s.getIn([reduxIDs[key].id, 'loaded']);\n            const loadError = resourceK8s.getIn([reduxIDs[key].id, 'loadError']);\n            acc[key] = { data, loaded, loadError };\n        }\n        else {\n            acc[key] = {\n                data: resources[key].isList ? [] : {},\n                loaded: false,\n                loadError: undefined,\n            };\n        }\n        return acc;\n    }, {}), [resources, reduxIDs, resourceK8s]);\n    return results;\n};\n//# sourceMappingURL=useK8sWatchResources.js.map","export * from './k8s-resource';\nexport * from './k8s-utils';\nexport * from './k8s-ref';\n//# sourceMappingURL=index.js.map","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind, referenceFor } from '@console/internal/module/k8s';\nimport { ResourceActionFactory } from './common-factory';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\nexport const HealthChecksActionFactory: ResourceActionFactory = {\n  AddHealthChecks: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-health-checks',\n    label: i18next.t('console-app~Add Health Checks'),\n    cta: { href: healthChecksUrl(kind, obj) },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  }),\n  EditHealthChecks: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-health-checks',\n    label: i18next.t('console-app~Edit Health Checks'),\n    cta: { href: healthChecksUrl(kind, obj) },\n    insertBefore: 'edit-labels',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  }),\n};\n\nexport const getHealthChecksAction = (kind: K8sKind, obj: K8sResourceKind): Action => {\n  const hasHealthChecks = healthChecksAdded(obj);\n  return hasHealthChecks\n    ? HealthChecksActionFactory.EditHealthChecks(kind, obj)\n    : HealthChecksActionFactory.AddHealthChecks(kind, obj);\n};\n","let config;\n/**\n * Set the {@link UtilsConfig} reference.\n *\n * This must be done before using any of the Kubernetes utilities.\n */\nexport const setUtilsConfig = (c) => {\n    if (config !== undefined) {\n        throw new Error('setUtilsConfig has already been called');\n    }\n    config = Object.freeze(Object.assign({}, c));\n};\n/**\n * Get the {@link UtilsConfig} reference.\n *\n * Throws an error if the reference isn't already set.\n */\nexport const getUtilsConfig = () => {\n    if (config === undefined) {\n        throw new Error('setUtilsConfig has not been called');\n    }\n    return config;\n};\n//# sourceMappingURL=configSetup.js.map","export * from './core';\n//# sourceMappingURL=index.js.map","import { CustomError } from './custom-error';\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n    constructor(message, code, response, json) {\n        super(message);\n        this.code = code;\n        this.response = response;\n        this.json = json;\n    }\n    static fromCode(code) {\n        return new HttpError(HttpError.messages[code], code);\n    }\n}\nHttpError.messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Payload Too Large',\n    414: 'URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable',\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\",\n    421: 'Misdirected Request',\n    426: 'Upgrade Required',\n    428: 'Precondition Required',\n    429: 'Too Many Requests',\n    431: 'Request Header Fields Too Large',\n    451: 'Unavailable For Legal Reasons',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates',\n    510: 'Not Extended',\n    511: 'Network Authentication Required', // RFC 6585\n};\nexport class TimeoutError extends CustomError {\n    constructor(url, ms) {\n        super(`Call to ${url} timed out after ${ms}ms.`);\n        this.url = url;\n        this.ms = ms;\n    }\n}\nexport class IncompleteDataError extends CustomError {\n    constructor(labels) {\n        super(`Could not fetch all data. This data are missing: ${labels.join(', ')}.`);\n        this.labels = labels;\n    }\n}\nexport class RetryError extends CustomError {\n}\n//# sourceMappingURL=http-error.js.map","export { coreReducer } from './core';\nexport * from './coreSelectors';\n//# sourceMappingURL=index.js.map","export const k8sBasePath = `${window.SERVER_FLAGS.basePath}api/kubernetes`;\n//# sourceMappingURL=k8s.js.map","const createURL = (host, path) => {\n    let url;\n    if (host === 'auto') {\n        if (window.location.protocol === 'https:') {\n            url = 'wss://';\n        }\n        else {\n            url = 'ws://';\n        }\n        url += window.location.host;\n    }\n    else {\n        url = host;\n    }\n    if (path) {\n        url += path;\n    }\n    return url;\n};\n/**\n * @class WebSocket factory and utility wrapper.\n */\nexport class WSFactory {\n    /**\n     * @param id - unique id for the WebSocket.\n     * @param options - websocket options to initate the WebSocket with.\n     */\n    constructor(id, options) {\n        this.id = id;\n        this.options = options;\n        this.bufferMax = options.bufferMax || 0;\n        this.paused = false;\n        this.handlers = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n            destroy: [],\n            bulkmessage: [],\n        };\n        this.connect();\n        if (this.bufferMax) {\n            this.flushCanceler = setInterval(this.flushMessageBuffer.bind(this), this.options.bufferFlushInterval || 500);\n        }\n    }\n    reconnect() {\n        if (this.connectionAttempt || this.state === 'destroyed') {\n            return;\n        }\n        let delay = 1000;\n        const attempt = () => {\n            if (!this.options.reconnect || this.state === 'open') {\n                clearTimeout(this.connectionAttempt);\n                this.connectionAttempt = null;\n                return;\n            }\n            if (this.options.timeout && delay > this.options.timeout) {\n                clearTimeout(this.connectionAttempt);\n                this.connectionAttempt = null;\n                this.destroy();\n                return;\n            }\n            this.connect();\n            delay = Math.round(Math.min(1.5 * delay, 60000));\n            this.connectionAttempt = setTimeout(attempt, delay);\n            // eslint-disable-next-line no-console\n            console.log(`attempting reconnect in ${delay / 1000} seconds...`);\n        };\n        this.connectionAttempt = setTimeout(attempt, delay);\n    }\n    connect() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        this.state = 'init';\n        this.messageBuffer = [];\n        const url = createURL(this.options.host, this.options.path);\n        try {\n            this.ws = new WebSocket(url, this.options.subprotocols);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error creating websocket:', e);\n            this.reconnect();\n            return;\n        }\n        this.ws.onopen = function () {\n            // eslint-disable-next-line no-console\n            console.log(`websocket open: ${that.id}`);\n            that.state = 'open';\n            that.triggerEvent('open', undefined);\n            if (that.connectionAttempt) {\n                clearTimeout(that.connectionAttempt);\n                that.connectionAttempt = null;\n            }\n        };\n        this.ws.onclose = function (evt) {\n            // eslint-disable-next-line no-console\n            console.log(`websocket closed: ${that.id}`, evt);\n            that.state = 'closed';\n            that.triggerEvent('close', evt);\n            that.reconnect();\n        };\n        this.ws.onerror = function (evt) {\n            // eslint-disable-next-line no-console\n            console.log(`websocket error: ${that.id}`);\n            that.state = 'error';\n            that.triggerEvent('error', evt);\n        };\n        this.ws.onmessage = function (evt) {\n            var _a;\n            const msg = ((_a = that.options) === null || _a === void 0 ? void 0 : _a.jsonParse) ? JSON.parse(evt.data) : evt.data;\n            // In some browsers, onmessage can fire after onclose/error. Don't update state to be incorrect.\n            if (that.state !== 'destroyed' && that.state !== 'closed') {\n                that.state = 'open';\n            }\n            that.triggerEvent('message', msg);\n        };\n    }\n    registerHandler(type, fn) {\n        if (this.state === 'destroyed') {\n            return;\n        }\n        this.handlers[type].push(fn);\n    }\n    /**\n     * Invoke all registered handler callbacks for a given event type.\n     */\n    invokeHandlers(type, data) {\n        const handlers = this.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        handlers.forEach(function (h) {\n            try {\n                h(data);\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                console.error('WS handling failed:', e);\n            }\n        });\n    }\n    /**\n     * Triggers event to be buffered or invoked depending on config.\n     */\n    triggerEvent(type, event) {\n        if (this.state === 'destroyed') {\n            return;\n        }\n        // Only buffer \"message\" events, so \"error\" and \"close\" etc can pass thru.\n        if (this.bufferMax && type === 'message') {\n            this.messageBuffer.push(event);\n            if (this.messageBuffer.length > this.bufferMax) {\n                this.messageBuffer.shift();\n            }\n            return;\n        }\n        this.invokeHandlers(type, event);\n    }\n    onmessage(fn) {\n        this.registerHandler('message', fn);\n        return this;\n    }\n    onbulkmessage(fn) {\n        this.registerHandler('bulkmessage', fn);\n        return this;\n    }\n    onerror(fn) {\n        this.registerHandler('error', fn);\n        return this;\n    }\n    onopen(fn) {\n        this.registerHandler('open', fn);\n        return this;\n    }\n    onclose(fn) {\n        this.registerHandler('close', fn);\n        return this;\n    }\n    ondestroy(fn) {\n        this.registerHandler('destroy', fn);\n        return this;\n    }\n    flushMessageBuffer() {\n        if (this.paused) {\n            return;\n        }\n        if (!this.messageBuffer.length) {\n            return;\n        }\n        if (this.handlers.bulkmessage.length) {\n            this.invokeHandlers('bulkmessage', this.messageBuffer);\n        }\n        else {\n            this.messageBuffer.forEach((e) => this.invokeHandlers('message', e));\n        }\n        this.messageBuffer = [];\n    }\n    /**\n     *  Pausing prevents any buffer flushing until unpaused.\n     */\n    pause() {\n        this.paused = true;\n    }\n    unpause() {\n        this.paused = false;\n        this.flushMessageBuffer();\n    }\n    isPaused() {\n        return this.paused;\n    }\n    getState() {\n        return this.state;\n    }\n    bufferSize() {\n        return this.messageBuffer.length;\n    }\n    destroy(eventData) {\n        // eslint-disable-next-line no-console\n        console.log(`destroying websocket: ${this.id}`);\n        if (this.state === 'destroyed') {\n            return;\n        }\n        try {\n            if (this.ws) {\n                this.ws.close();\n            }\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error while close WS socket', e);\n        }\n        clearInterval(this.flushCanceler);\n        clearTimeout(this.connectionAttempt);\n        if (this.ws) {\n            this.ws.onopen = null;\n            this.ws.onclose = null;\n            this.ws.onerror = null;\n            this.ws.onmessage = null;\n            delete this.ws;\n        }\n        try {\n            this.triggerEvent('destroy', eventData);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Error while trigger destroy event for WS socket', e);\n        }\n        this.state = 'destroyed';\n        this.messageBuffer = [];\n    }\n    send(data) {\n        this.ws && this.ws.send(data);\n    }\n}\n//# sourceMappingURL=ws-factory.js.map","export const getReduxIdPayload = (state, reduxId) => state.k8s.get(reduxId);\nexport const getK8sDataById = (state, id) => state.getIn([id, 'data']);\n//# sourceMappingURL=k8sSelector.js.map","import * as React from 'react';\nexport const usePrevious = (value, deps) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps || [value]);\n    return ref.current;\n};\n//# sourceMappingURL=usePrevious.js.map","import i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { TopologyApplicationObject } from '@console/dynamic-plugin-sdk/src/extensions/topology-types';\nimport { deleteModal } from '@console/internal/components/modals';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { deleteResourceModal } from '@console/shared';\nimport { ApplicationModel } from '@console/topology/src/models';\nimport { cleanUpWorkload } from '@console/topology/src/utils';\n\nexport const DeleteApplicationAction = (\n  application: TopologyApplicationObject,\n  resourceModel: K8sModel,\n): Action => {\n  // accessReview needs a resource but group is not a k8s resource,\n  // so currently picking the first resource to do the rbac checks (might change in future)\n  const primaryResource = application.resources[0].resource;\n  return {\n    id: 'delete-application',\n    label: i18next.t('devconsole~Delete application'),\n    cta: () => {\n      const reqs = [];\n      deleteResourceModal({\n        blocking: true,\n        resourceName: application.name,\n        resourceType: ApplicationModel.label,\n        onSubmit: () => {\n          application.resources.forEach((resource) => {\n            reqs.push(cleanUpWorkload(resource.resource));\n          });\n          return Promise.all(reqs);\n        },\n      });\n    },\n    accessReview: asAccessReview(resourceModel, primaryResource, 'delete'),\n  };\n};\n\nexport const DeleteResourceAction = (kind: K8sModel, obj: K8sResourceKind): Action => ({\n  id: `delete-resource`,\n  label: i18next.t('devconsole~Delete {{kind}}', { kind: kind.kind }),\n  cta: () =>\n    deleteModal({\n      kind,\n      resource: obj,\n      deleteAllResources: () => cleanUpWorkload(obj),\n    }),\n  accessReview: asAccessReview(kind, obj, 'delete'),\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { DASH } from '../../constants';\nimport CamelCaseWrap from '../utils/camel-case-wrap';\n/**\n * Component for displaying a status icon and text\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip won't be displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {React.ReactElement} [icon] - (optional) icon to be displayed\n * @param {boolean} [spin] - (optional) if true, icon rotates\n * @example\n * ```tsx\n * <StatusIconAndText title={title} icon={renderIcon} />\n * ```\n */\nconst StatusIconAndText = ({ icon, title, spin, iconOnly, noTooltip, className, }) => {\n    if (!title) {\n        return React.createElement(React.Fragment, null, DASH);\n    }\n    return (React.createElement(\"span\", { className: classNames('co-icon-and-text', className), title: iconOnly && !noTooltip ? title : undefined },\n        icon &&\n            React.cloneElement(icon, {\n                className: classNames(spin && 'fa-spin', icon.props.className, !iconOnly && 'co-icon-and-text__icon co-icon-flex-child'),\n            }),\n        !iconOnly && React.createElement(CamelCaseWrap, { value: title, dataTest: \"status-text\" })));\n};\nexport default StatusIconAndText;\n//# sourceMappingURL=StatusIconAndText.js.map","import * as React from 'react';\nimport { Icon } from '@patternfly/react-core';\nimport { CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, InfoCircleIcon, } from '@patternfly/react-icons';\nimport * as classNames from 'classnames';\nimport './icons.scss';\n/**\n * Component for displaying a green check mark circle icon.\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [title] - (optional) icon title\n * @param {string} [size] - (optional) icon size: ('sm', 'md', 'lg', 'xl')\n * @example\n * ```tsx\n * <GreenCheckCircleIcon title=\"Healthy\" />\n * ```\n */\nexport const GreenCheckCircleIcon = ({ className, title, size }) => {\n    const icon = (React.createElement(CheckCircleIcon, { \"data-test\": \"success-icon\", className: classNames('dps-icons__green-check-icon', className), title: title }));\n    if (size) {\n        return React.createElement(Icon, { size: size }, icon);\n    }\n    return icon;\n};\n/**\n * Component for displaying a red exclamation mark circle icon.\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [title] - (optional) icon title\n * @param {string} [size] - (optional) icon size: ('sm', 'md', 'lg', 'xl')\n * @example\n * ```tsx\n * <RedExclamationCircleIcon title=\"Failed\" />\n * ```\n */\nexport const RedExclamationCircleIcon = ({ className, title, size, }) => {\n    const icon = (React.createElement(ExclamationCircleIcon, { className: classNames('dps-icons__red-exclamation-icon', className), title: title }));\n    if (size) {\n        return React.createElement(Icon, { size: size }, icon);\n    }\n    return icon;\n};\n/**\n * Component for displaying a yellow triangle exclamation icon.\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [title] - (optional) icon title\n * @param {string} [size] - (optional) icon size: ('sm', 'md', 'lg', 'xl')\n * @param {string} [dataTest] - (optional) icon test id\n * @example\n * ```tsx\n * <YellowExclamationTriangleIcon title=\"Warning\" />\n * ```\n */\nexport const YellowExclamationTriangleIcon = ({ className, title, size, dataTest, }) => {\n    const icon = (React.createElement(ExclamationTriangleIcon, { className: classNames('dps-icons__yellow-exclamation-icon', className), title: title, \"data-test\": dataTest }));\n    if (size) {\n        return React.createElement(Icon, { size: size }, icon);\n    }\n    return icon;\n};\n/**\n * Component for displaying a blue info circle icon.\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [title] - (optional) icon title\n * @param {string} [size] - (optional) icon size: ('sm', 'md', 'lg', 'xl')\n * @example\n * ```tsx\n * <BlueInfoCircleIcon title=\"Info\" />\n * ```\n */\nexport const BlueInfoCircleIcon = ({ className, title, size }) => {\n    const icon = (React.createElement(InfoCircleIcon, { className: classNames('dps-icons__blue-info-icon', className), title: title }));\n    if (size) {\n        return React.createElement(Icon, { size: size }, icon);\n    }\n    return icon;\n};\n//# sourceMappingURL=icons.js.map","import * as React from 'react';\nimport { Badge } from '@patternfly/react-core';\nimport * as classNames from 'classnames';\nimport './resource-status.scss';\n/**\n * Component for displaying resource status badge.\n * Use this component to display status of given resource.\n * It accepts child element to be rendered inside the badge.\n * @component ResourceStatus\n * @example\n * ```ts\n * return (\n *  <ResourceStatus additionalClassNames=\"hidden-xs\">\n *    <Status status={resourceStatus} />\n *  </ResourceStatus>\n * )\n * ```\n */\nconst ResourceStatus = ({ additionalClassNames, badgeAlt, children, }) => {\n    return (React.createElement(\"span\", { className: classNames('dps-resource-item__resource-status', additionalClassNames) },\n        React.createElement(Badge, { className: classNames('dps-resource-item__resource-status-badge', {\n                'dps-resource-item__resource-status-badge--alt': badgeAlt,\n            }), isRead: true, \"data-test\": \"resource-status\" }, children)));\n};\nexport default ResourceStatus;\n//# sourceMappingURL=resource-status.js.map","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ProjectModel, SelfSubjectAccessReviewModel } from '../../../models';\nimport { k8sCreate } from '../../../utils/k8s/k8s-resource';\nimport { getImpersonate } from '../../core/reducers/coreSelectors';\nimport storeHandler from '../../storeHandler';\nimport { useSafetyFirst } from '../safety-first';\n/**\n * It provides impersonation key based on data from the redux store.\n */\nconst getImpersonateKey = (impersonate) => {\n    const newImpersonate = impersonate || getImpersonate(storeHandler.getStore().getState());\n    return newImpersonate ? `${newImpersonate.kind}~${newImpersonate.name}` : '';\n};\n/**\n * Memoizes the result so it is possible to only make the request once for each access review.\n * This does mean that the user will have to refresh the page to see updates.\n * Function takes in the destructured resource attributes so that the cache keys are stable.\n * `JSON.stringify` is not guaranteed to give the same result for equivalent objects.\n * Impersonate headers are added automatically by `k8sCreate`.\n * @param group resource group.\n * @param resource resource string.\n * @param subresource subresource string.\n * @param verb K8s verb.\n * @param namespace namespace.\n * @param impersonateKey parameter to include in the cache key even though it's not used in the function body.\n * @returns Memoized result of the access review.\n */\nconst checkAccessInternal = _.memoize((group, resource, subresource, verb, name, namespace, \n// eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\nimpersonateKey) => {\n    // Projects are a special case. `namespace` must be set to the project name\n    // even though it's a cluster-scoped resource.\n    const reviewNamespace = group === ProjectModel.apiGroup && resource === ProjectModel.plural ? name : namespace;\n    const ssar = {\n        apiVersion: 'authorization.k8s.io/v1',\n        kind: 'SelfSubjectAccessReview',\n        spec: {\n            resourceAttributes: {\n                group,\n                resource,\n                subresource,\n                verb,\n                name,\n                namespace: reviewNamespace,\n            },\n        },\n    };\n    return k8sCreate(SelfSubjectAccessReviewModel, ssar);\n}, (...args) => args.join('~'));\n/**\n * Provides information about user access to a given resource.\n * @param resourceAttributes resource attributes for access review\n * @param impersonate impersonation details\n * @returns Object with resource access information.\n */\nexport const checkAccess = (resourceAttributes, impersonate) => {\n    // Destructure the attributes with defaults so we can create a stable cache key.\n    const { group = '', resource = '', subresource = '', verb = '', name = '', namespace = '', } = resourceAttributes || {};\n    return checkAccessInternal(group, resource, subresource, verb, name, namespace, getImpersonateKey(impersonate));\n};\n/**\n * Hook that provides information about user access to a given resource.\n * @param resourceAttributes resource attributes for access review\n * @param impersonate impersonation details\n * @returns Array with `isAllowed` and `loading` values.\n */\nexport const useAccessReview = (resourceAttributes, impersonate) => {\n    const [loading, setLoading] = useSafetyFirst(true);\n    const [isAllowed, setAllowed] = useSafetyFirst(false);\n    // Destructure the attributes to pass them as dependencies to `useEffect`,\n    // which doesn't do deep comparison of object dependencies.\n    const { group = '', resource = '', subresource = '', verb = '', name = '', namespace = '', } = resourceAttributes;\n    const impersonateKey = getImpersonateKey(impersonate);\n    React.useEffect(() => {\n        checkAccessInternal(group, resource, subresource, verb, name, namespace, impersonateKey)\n            .then((result) => {\n            setAllowed(result.status.allowed);\n            setLoading(false);\n        })\n            .catch((e) => {\n            // eslint-disable-next-line no-console\n            console.warn('SelfSubjectAccessReview failed', e);\n            // Default to enabling the action if the access review fails so that we\n            // don't incorrectly block users from actions they can perform. The server\n            // still enforces access control.\n            setAllowed(true);\n            setLoading(false);\n        });\n    }, [setLoading, setAllowed, group, resource, subresource, verb, name, namespace, impersonateKey]);\n    return [isAllowed, loading];\n};\n/**\n * @deprecated - Use useAccessReview from \\@console/dynamic-plugin-sdk instead.\n * Hook that provides allowed status about user access to a given resource.\n * @param resourceAttributes resource attributes for access review\n * @param impersonate impersonation details\n * @returns The isAllowed boolean value.\n */\nexport const useAccessReviewAllowed = (resourceAttributes, impersonate) => {\n    return useAccessReview(resourceAttributes, impersonate)[0];\n};\n//# sourceMappingURL=rbac.js.map","import * as React from 'react';\nconst MEMO = {};\nconst CamelCaseWrap = ({ value, dataTest }) => {\n    if (!value) {\n        return '-';\n    }\n    if (MEMO[value]) {\n        return MEMO[value];\n    }\n    // Add word break points before capital letters (but keep consecutive capital letters together).\n    const words = value.match(/[A-Z]+[^A-Z]*|[^A-Z]+/g);\n    const rendered = (React.createElement(\"span\", { \"data-test\": dataTest }, words.map((word, i) => (\n    // eslint-disable-next-line react/no-array-index-key\n    React.createElement(React.Fragment, { key: i },\n        word,\n        i !== words.length - 1 && React.createElement(\"wbr\", null))))));\n    MEMO[value] = rendered;\n    return rendered;\n};\nexport default CamelCaseWrap;\n//# sourceMappingURL=camel-case-wrap.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PopoverStatus from './PopoverStatus';\nimport StatusIconAndText from './StatusIconAndText';\n/**\n * Component for a generic status popover\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip won't be displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [popoverTitle] - (optional) title for popover\n * @param {React.ComponentType} Icon - icon to be displayed\n * @param {ReactNode} [children] - (optional) children for the component\n * @example\n * ```tsx\n * <GenericStatus Icon={CircleIcon} />\n * ```\n */\nconst GenericStatus = (props) => {\n    const { Icon, children, popoverTitle, title, noTooltip, iconOnly } = props, restProps = __rest(props, [\"Icon\", \"children\", \"popoverTitle\", \"title\", \"noTooltip\", \"iconOnly\"]);\n    const renderIcon = iconOnly && !noTooltip ? React.createElement(Icon, { title: title }) : React.createElement(Icon, null);\n    const statusBody = (React.createElement(StatusIconAndText, Object.assign({}, restProps, { noTooltip: noTooltip, title: title, iconOnly: iconOnly, icon: renderIcon })));\n    return React.Children.toArray(children).length ? (React.createElement(PopoverStatus, Object.assign({ title: popoverTitle || title }, restProps, { statusBody: statusBody }), children)) : (statusBody);\n};\nexport default GenericStatus;\n//# sourceMappingURL=GenericStatus.js.map","import * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport './PopoverStatus.scss';\n/**\n * Component for creating a status popover item\n * @param {ReactNode} statusBody - content displayed within the popover.\n * @param {function} [onHide] - (optional) function invoked when popover begins to transition out\n * @param {function} [onShow] - (optional) function invoked when popover begins to appear\n * @param {string} [title] - (optional) title for the popover\n * @param {boolean} [hideHeader] - (optional) when true, header text is hidden\n * @param {boolean} [isVisible] - (optional) when true, the popover is displayed\n * @param {function} [shouldClose] - (optional) callback function invoked when the popover is closed only if isVisible is also controlled\n * @param {ReactNode} [children] - (optional) children for the component\n * @example\n * ```tsx\n * <PopoverStatus title={title} statusBody={statusBody}>\n *   {children}\n * </PopoverStatus>\n * ```\n */\nconst PopoverStatus = ({ hideHeader, children, isVisible = null, shouldClose = null, shouldOpen = null, statusBody, title, onHide, onShow, }) => {\n    return (React.createElement(Popover, { position: PopoverPosition.right, headerContent: hideHeader ? null : title, bodyContent: children, \"aria-label\": title, onHide: onHide, onShow: onShow, isVisible: isVisible, shouldClose: shouldClose, shouldOpen: shouldOpen },\n        React.createElement(Button, { variant: \"link\", isInline: true, className: \"co-popover-status-button\" }, statusBody)));\n};\nexport default PopoverStatus;\n//# sourceMappingURL=PopoverStatus.js.map","import * as React from 'react';\nimport { InProgressIcon } from '@patternfly/react-icons';\nimport GenericStatus from './GenericStatus';\nimport { RedExclamationCircleIcon, GreenCheckCircleIcon, BlueInfoCircleIcon } from './icons';\n/**\n * Component for displaying an error status popover.\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip is not displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [popoverTitle] - (optional) title for popover\n * @example\n * ```tsx\n * <ErrorStatus title={errorMsg} />\n * ```\n */\nexport const ErrorStatus = (props) => (React.createElement(GenericStatus, Object.assign({}, props, { Icon: RedExclamationCircleIcon })));\nErrorStatus.displayName = 'ErrorStatus';\n/**\n * Component for displaying an information status popover.\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip is not displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [popoverTitle] - (optional) title for popover\n * @example\n * ```tsx\n * <InfoStatus title={infoMsg} />\n * ```\n */\nexport const InfoStatus = (props) => (React.createElement(GenericStatus, Object.assign({}, props, { Icon: BlueInfoCircleIcon })));\nInfoStatus.displayName = 'InfoStatus';\n/**\n * Component for displaying a progressing status popover.\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip is not displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [popoverTitle] - (optional) title for popover\n * @example\n * ```tsx\n * <ProgressStatus title={progressMsg} />\n * ```\n */\nexport const ProgressStatus = (props) => (React.createElement(GenericStatus, Object.assign({}, props, { Icon: InProgressIcon })));\nProgressStatus.displayName = 'ProgressStatus';\n/**\n * Component for displaying a success status popover.\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip is not displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [popoverTitle] - (optional) title for popover\n * @example\n * ```tsx\n * <SuccessStatus title={successMsg} />\n * ```\n */\nexport const SuccessStatus = (props) => (React.createElement(GenericStatus, Object.assign({}, props, { Icon: GreenCheckCircleIcon })));\nSuccessStatus.displayName = 'SuccessStatus';\n//# sourceMappingURL=statuses.js.map","import * as React from 'react';\n/**\n * @deprecated - This hook is not related to console functionality.\n * Hook that ensures a safe asynchronnous setting of the React state in case a given component could be unmounted.\n * (https://github.com/facebook/react/issues/14113)\n * @param initialState initial state value\n * @returns An array with a pair of state value and it's set function.\n */\nexport const useSafetyFirst = (initialState) => {\n    const mounted = React.useRef(true);\n    React.useEffect(() => () => (mounted.current = false), []);\n    const [value, setValue] = React.useState(initialState);\n    const setValueSafe = React.useCallback((newValue) => {\n        if (mounted.current) {\n            setValue(newValue);\n        }\n    }, []);\n    return [value, setValueSafe];\n};\n//# sourceMappingURL=safety-first.js.map","export * from './deployment-provider';\nexport * from './deploymentconfig-provider';\nexport * from './stateful-set-provider';\nexport * from './daemon-set-provider';\nexport * from './job-provider';\nexport * from './cronjob-provider';\nexport * from './service-binding-provider';\nexport * from './replicaset-provider';\nexport * from './replication-controllers-provider';\nexport * from './pod-provider';\nexport * from './perspective-state-provider';\n","import * as React from 'react';\nimport { DeleteResourceAction } from '@console/dev-console/src/actions/context-menu';\nimport { Action } from '@console/dynamic-plugin-sdk/src';\nimport { DeploymentKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { CommonActionFactory } from '../creators/common-factory';\nimport { DeploymentActionFactory } from '../creators/deployment-factory';\nimport { getHealthChecksAction } from '../creators/health-checks-factory';\nimport { useHPAActions } from '../creators/hpa-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\n\nexport const useDeploymentActionsProvider = (resource: DeploymentKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [hpaActions, relatedHPAs] = useHPAActions(kindObj, resource);\n  const [pdbActions] = usePDBActions(kindObj, resource);\n\n  const deploymentActions = React.useMemo<Action[]>(\n    () => [\n      ...(relatedHPAs?.length === 0 ? [CommonActionFactory.ModifyCount(kindObj, resource)] : []),\n      ...hpaActions,\n      ...pdbActions,\n      DeploymentActionFactory.PauseRollout(kindObj, resource),\n      DeploymentActionFactory.RestartRollout(kindObj, resource),\n      getHealthChecksAction(kindObj, resource),\n      CommonActionFactory.AddStorage(kindObj, resource),\n      DeploymentActionFactory.UpdateStrategy(kindObj, resource),\n      DeploymentActionFactory.EditResourceLimits(kindObj, resource),\n      CommonActionFactory.ModifyLabels(kindObj, resource),\n      CommonActionFactory.ModifyAnnotations(kindObj, resource),\n      DeploymentActionFactory.EditDeployment(kindObj, resource),\n      ...(resource.metadata.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole'\n        ? [DeleteResourceAction(kindObj, resource)]\n        : [CommonActionFactory.Delete(kindObj, resource)]),\n    ],\n    [hpaActions, pdbActions, kindObj, relatedHPAs, resource],\n  );\n\n  return [deploymentActions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  referenceForModel,\n  K8sResourceCommon,\n  HorizontalPodAutoscalerKind,\n} from '@console/internal/module/k8s';\nimport {\n  ClusterServiceVersionModel,\n  ClusterServiceVersionKind,\n} from '@console/operator-lifecycle-manager';\nimport { deleteHPAModal, isHelmResource, isOperatorBackedService } from '@console/shared';\nimport { doesHpaMatch } from '@console/shared/src/utils/hpa-utils';\nimport { ResourceActionFactory } from './common-factory';\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nexport const HpaActionFactory: ResourceActionFactory = {\n  AddHorizontalPodAutoScaler: (kind: K8sKind, obj: K8sResourceKind) => ({\n    id: 'add-hpa',\n    label: i18next.t('console-app~Add HorizontalPodAutoscaler'),\n    cta: { href: hpaRoute(obj, kind) },\n    insertBefore: 'add-pdb',\n    accessReview: {\n      group: HorizontalPodAutoscalerModel.apiGroup,\n      resource: HorizontalPodAutoscalerModel.plural,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditHorizontalPodAutoScaler: (kind: K8sKind, obj: K8sResourceCommon) => ({\n    id: 'edit-hpa',\n    label: i18next.t('console-app~Edit HorizontalPodAutoscaler'),\n    cta: { href: hpaRoute(obj, kind) },\n    insertBefore: 'add-pdb',\n    accessReview: {\n      group: HorizontalPodAutoscalerModel.apiGroup,\n      resource: HorizontalPodAutoscalerModel.plural,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  }),\n  DeleteHorizontalPodAutoScaler: (\n    kind: K8sKind,\n    obj: K8sResourceCommon,\n    relatedHPA: HorizontalPodAutoscalerKind,\n  ) => ({\n    id: 'delete-hpa',\n    label: i18next.t('console-app~Remove HorizontalPodAutoscaler'),\n    insertBefore: 'delete-pdb',\n    cta: () => {\n      deleteHPAModal({\n        workload: obj,\n        hpa: relatedHPA,\n      });\n    },\n    accessReview: {\n      group: HorizontalPodAutoscalerModel.apiGroup,\n      resource: HorizontalPodAutoscalerModel.plural,\n      namespace: obj.metadata.namespace,\n      verb: 'delete',\n    },\n  }),\n};\n\nexport const getHpaActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedHPAs: K8sResourceKind[],\n): Action[] => {\n  if (relatedHPAs.length === 0) return [HpaActionFactory.AddHorizontalPodAutoScaler(kind, obj)];\n\n  return [\n    HpaActionFactory.EditHorizontalPodAutoScaler(kind, obj),\n    HpaActionFactory.DeleteHorizontalPodAutoScaler(kind, obj, relatedHPAs[0]),\n  ];\n};\n\ntype DeploymentActionExtraResources = {\n  hpas: HorizontalPodAutoscalerKind[];\n  csvs: ClusterServiceVersionKind[];\n};\n\nexport const useHPAActions = (kindObj: K8sKind, resource: K8sResourceKind) => {\n  const namespace = resource?.metadata?.namespace;\n\n  const watchedResources = React.useMemo(\n    () => ({\n      hpas: {\n        isList: true,\n        kind: HorizontalPodAutoscalerModel.kind,\n        namespace,\n        optional: true,\n      },\n      csvs: {\n        isList: true,\n        kind: referenceForModel(ClusterServiceVersionModel),\n        namespace,\n        optional: true,\n      },\n    }),\n    [namespace],\n  );\n  const extraResources = useK8sWatchResources<DeploymentActionExtraResources>(watchedResources);\n  const relatedHPAs = React.useMemo(() => extraResources.hpas.data.filter(doesHpaMatch(resource)), [\n    extraResources.hpas.data,\n    resource,\n  ]);\n\n  const supportsHPA = React.useMemo(\n    () =>\n      !(isHelmResource(resource) || isOperatorBackedService(resource, extraResources.csvs.data)),\n    [extraResources.csvs.data, resource],\n  );\n\n  const result = React.useMemo<[Action[], HorizontalPodAutoscalerKind[]]>(() => {\n    return [supportsHPA ? getHpaActions(kindObj, resource, relatedHPAs) : [], relatedHPAs];\n  }, [kindObj, relatedHPAs, resource, supportsHPA]);\n\n  return result;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DeleteResourceAction } from '@console/dev-console/src/actions/context-menu';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/dist/core/lib/lib-core';\nimport { Action, K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { errorModal } from '@console/internal/components/modals';\nimport { DeploymentConfigKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { CommonActionFactory } from '../creators/common-factory';\nimport { DeploymentActionFactory, retryRollout } from '../creators/deployment-factory';\nimport { getHealthChecksAction } from '../creators/health-checks-factory';\nimport { useHPAActions } from '../creators/hpa-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\n\nconst useReplicationController = (resource: DeploymentConfigKind) => {\n  const [rcModel, rcModelInFlight] = useK8sModel('ReplicationController');\n\n  const watch = !resource.spec?.paused && !rcModelInFlight;\n\n  return useK8sWatchResource<K8sResourceCommon>(\n    watch\n      ? {\n          kind: rcModel.kind,\n          namespace: resource.metadata.namespace,\n          namespaced: true,\n          selector: {\n            matchLabels: {\n              'openshift.io/deployment-config.name': resource.metadata.name,\n            },\n          },\n        }\n      : null,\n  );\n};\n\nconst useRetryRolloutAction = (resource: DeploymentConfigKind): Action => {\n  const { t } = useTranslation();\n  const [dcModel] = useK8sModel(referenceFor(resource));\n  const [rcModel] = useK8sModel('ReplicationController');\n  const [rc] = useReplicationController(resource);\n\n  const canRetry =\n    !resource.spec?.paused &&\n    rc?.metadata?.annotations?.['openshift.io/deployment.phase'] === 'Failed' &&\n    resource.status?.latestVersion !== 0;\n\n  return React.useMemo<Action>(\n    () => ({\n      id: 'retry-rollout',\n      label: t('console-app~Retry rollout'),\n      cta: () => retryRollout(rcModel, rc).catch((err) => errorModal({ error: err.message })),\n      insertAfter: 'start-rollout',\n      disabled: !canRetry,\n      disabledTooltip: !canRetry\n        ? t(\n            'console-app~This action is only enabled when the latest revision of the ReplicationController resource is in a failed state.',\n          )\n        : null,\n      accessReview: {\n        group: dcModel.apiGroup,\n        resource: dcModel.plural,\n        name: resource.metadata.name,\n        namespace: resource.metadata.namespace,\n        verb: 'patch',\n      },\n    }),\n    [t, dcModel, rcModel, rc, canRetry, resource],\n  );\n};\n\nexport const useDeploymentConfigActionsProvider = (resource: DeploymentConfigKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [hpaActions, relatedHPAs] = useHPAActions(kindObj, resource);\n  const [pdbActions] = usePDBActions(kindObj, resource);\n  const retryRolloutAction = useRetryRolloutAction(resource);\n\n  const deploymentConfigActions = React.useMemo(() => {\n    const actions = [\n      ...(relatedHPAs?.length === 0 ? [CommonActionFactory.ModifyCount(kindObj, resource)] : []),\n      ...hpaActions,\n      ...pdbActions,\n      getHealthChecksAction(kindObj, resource),\n      DeploymentActionFactory.StartDCRollout(kindObj, resource),\n      retryRolloutAction,\n      DeploymentActionFactory.PauseRollout(kindObj, resource),\n      CommonActionFactory.AddStorage(kindObj, resource),\n      DeploymentActionFactory.EditResourceLimits(kindObj, resource),\n      CommonActionFactory.ModifyLabels(kindObj, resource),\n      CommonActionFactory.ModifyAnnotations(kindObj, resource),\n      DeploymentActionFactory.EditDeployment(kindObj, resource),\n      ...(resource.metadata.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole'\n        ? [DeleteResourceAction(kindObj, resource)]\n        : [CommonActionFactory.Delete(kindObj, resource)]),\n    ];\n    return actions;\n  }, [resource, kindObj, hpaActions, pdbActions, relatedHPAs, retryRolloutAction]);\n\n  return [deploymentConfigActions, !inFlight, undefined];\n};\n","export * from './actions';\nexport * from './add-actions';\nexport * from './alerts';\nexport * from './breadcrumbs';\nexport * from './catalog';\nexport * from './cluster-configuration';\nexport * from './cluster-overview';\nexport * from './cluster-settings';\nexport * from './console-types';\nexport * from './context-providers';\nexport * from './create-resource';\nexport * from './dashboard-types';\nexport * from './dashboards';\nexport * from './details-item';\nexport * from './feature-flags';\nexport * from './file-upload';\nexport * from './horizontal-nav-tabs';\nexport * from './import-environments';\nexport * from './navigation';\nexport * from './notification-alert';\nexport * from './pages';\nexport * from './perspectives';\nexport * from './project-overview';\nexport * from './pvc';\nexport * from './redux';\nexport * from './resource-metadata';\nexport * from './storage-class-provisioner';\nexport * from './storage-provider';\nexport * from './telemetry';\nexport * from './topology-details';\nexport * from './topology';\nexport * from './user-preferences';\nexport * from './yaml-templates';\nexport * from './node';\nexport * from './create-project-modal';\n//# sourceMappingURL=index.js.map","// Type Guards\nexport const isActionProvider = (e) => {\n    return e.type === 'console.action/provider';\n};\nexport const isResourceActionProvider = (e) => {\n    return e.type === 'console.action/resource-provider';\n};\nexport const isActionGroup = (e) => {\n    return e.type === 'console.action/group';\n};\nexport const isActionFilter = (e) => {\n    return e.type === 'console.action/filter';\n};\nexport var MenuOptionType;\n(function (MenuOptionType) {\n    MenuOptionType[MenuOptionType[\"GROUP_MENU\"] = 0] = \"GROUP_MENU\";\n    MenuOptionType[MenuOptionType[\"SUB_MENU\"] = 1] = \"SUB_MENU\";\n    MenuOptionType[MenuOptionType[\"ATOMIC_MENU\"] = 2] = \"ATOMIC_MENU\";\n})(MenuOptionType || (MenuOptionType = {}));\n//# sourceMappingURL=actions.js.map","export var ClusterConfigurationFieldType;\n(function (ClusterConfigurationFieldType) {\n    ClusterConfigurationFieldType[\"text\"] = \"text\";\n    ClusterConfigurationFieldType[\"checkbox\"] = \"checkbox\";\n    ClusterConfigurationFieldType[\"dropdown\"] = \"dropdown\";\n    ClusterConfigurationFieldType[\"custom\"] = \"custom\";\n})(ClusterConfigurationFieldType || (ClusterConfigurationFieldType = {}));\n// Type guards\nexport const isClusterConfigurationGroup = (e) => {\n    return e.type === 'console.cluster-configuration/group';\n};\nexport const isClusterConfigurationItem = (e) => {\n    return e.type === 'console.cluster-configuration/item';\n};\n//# sourceMappingURL=cluster-configuration.js.map","var InventoryStatusGroup;\n(function (InventoryStatusGroup) {\n    InventoryStatusGroup[\"WARN\"] = \"WARN\";\n    InventoryStatusGroup[\"ERROR\"] = \"ERROR\";\n    InventoryStatusGroup[\"PROGRESS\"] = \"PROGRESS\";\n    InventoryStatusGroup[\"NOT_MAPPED\"] = \"NOT_MAPPED\";\n    InventoryStatusGroup[\"UNKNOWN\"] = \"UNKNOWN\";\n})(InventoryStatusGroup || (InventoryStatusGroup = {}));\nexport var HealthState;\n(function (HealthState) {\n    HealthState[\"OK\"] = \"OK\";\n    HealthState[\"ERROR\"] = \"ERROR\";\n    HealthState[\"WARNING\"] = \"WARNING\";\n    HealthState[\"LOADING\"] = \"LOADING\";\n    HealthState[\"UNKNOWN\"] = \"UNKNOWN\";\n    HealthState[\"UPDATING\"] = \"UPDATING\";\n    HealthState[\"PROGRESS\"] = \"PROGRESS\";\n    HealthState[\"UPGRADABLE\"] = \"UPGRADABLE\";\n    HealthState[\"NOT_AVAILABLE\"] = \"NOT_AVAILABLE\";\n})(HealthState || (HealthState = {}));\nexport var GridPosition;\n(function (GridPosition) {\n    GridPosition[\"MAIN\"] = \"MAIN\";\n    GridPosition[\"LEFT\"] = \"LEFT\";\n    GridPosition[\"RIGHT\"] = \"RIGHT\";\n})(GridPosition || (GridPosition = {}));\nexport var LIMIT_STATE;\n(function (LIMIT_STATE) {\n    LIMIT_STATE[\"ERROR\"] = \"ERROR\";\n    LIMIT_STATE[\"WARN\"] = \"WARN\";\n    LIMIT_STATE[\"OK\"] = \"OK\";\n})(LIMIT_STATE || (LIMIT_STATE = {}));\nexport var K8sResourceConditionStatus;\n(function (K8sResourceConditionStatus) {\n    K8sResourceConditionStatus[\"True\"] = \"True\";\n    K8sResourceConditionStatus[\"False\"] = \"False\";\n    K8sResourceConditionStatus[\"Unknown\"] = \"Unknown\";\n})(K8sResourceConditionStatus || (K8sResourceConditionStatus = {}));\n//# sourceMappingURL=console-types.js.map","export var ModelBadge;\n(function (ModelBadge) {\n    ModelBadge[\"DEV\"] = \"dev\";\n    ModelBadge[\"TECH\"] = \"tech\";\n})(ModelBadge || (ModelBadge = {}));\n// Type guards\nexport const isModelMetadata = (e) => e.type === 'console.model-metadata';\n//# sourceMappingURL=resource-metadata.js.map","export var ProvisionerType;\n(function (ProvisionerType) {\n    /** Container Storage Interface provisioner type */\n    ProvisionerType[\"CSI\"] = \"CSI\";\n    /** Other provisioner type */\n    ProvisionerType[\"OTHERS\"] = \"OTHERS\";\n})(ProvisionerType || (ProvisionerType = {}));\nexport const isStorageClassProvisioner = (e) => e.type === 'console.storage-class/provisioner';\n//# sourceMappingURL=storage-class-provisioner.js.map","export var UserPreferenceFieldType;\n(function (UserPreferenceFieldType) {\n    UserPreferenceFieldType[\"dropdown\"] = \"dropdown\";\n    UserPreferenceFieldType[\"checkbox\"] = \"checkbox\";\n    UserPreferenceFieldType[\"custom\"] = \"custom\";\n})(UserPreferenceFieldType || (UserPreferenceFieldType = {}));\n// Type guards\nexport const isUserPreferenceGroup = (e) => {\n    return e.type === 'console.user-preference/group';\n};\nexport const isUserPreferenceItem = (e) => {\n    return e.type === 'console.user-preference/item';\n};\n//# sourceMappingURL=user-preferences.js.map","/**\n * Hook that provides the currently active perspective and a callback for setting the active perspective\n * @returns A tuple containing the current active perspective and setter callback.\n * @example\n * ```tsx\n * const Component: React.FC = (props) => {\n *    const [activePerspective, setActivePerspective] = useActivePerspective();\n *    return <select\n *      value={activePerspective}\n *      onChange={(e) => setActivePerspective(e.target.value)}\n *    >\n *      {\n *        // ...perspective options\n *      }\n *    </select>\n * }\n * ```\n */\nexport const useActivePerspective = require('@console/dynamic-plugin-sdk/src/perspective/useActivePerspective')\n    .default;\nexport * from '../perspective/perspective-context';\n// Dynamic plugin SDK core APIs\nexport * from './dynamic-core-api';\n//# sourceMappingURL=core-api.js.map","import * as React from 'react';\n/**\n * Creates the perspective context\n * @deprecated - use the provided `usePerspectiveContext` instead\n * @param {PerspectiveContextType} PerspectiveContextType - object with active perspective and setter\n * @returns React context\n */\nexport const PerspectiveContext = React.createContext({});\n//# sourceMappingURL=perspective-context.js.map","export * from '../app/components';\nexport * from './common-types';\n/**\n * React hook for consuming Console extensions with resolved `CodeRef` properties.\n * This hook accepts the same argument(s) as `useExtensions` hook and returns an adapted list of extension instances, resolving all code references within each extension's properties.\n * Initially, the hook returns an empty array. Once the resolution is complete, the React component is re-rendered with the hook returning an adapted list of extensions.\n * When the list of matching extensions changes, the resolution is restarted. The hook will continue to return the previous result until the resolution completes.\n * The hook's result elements are guaranteed to be referentially stable across re-renders.\n * @example\n * ```ts\n * const [navItemExtensions, navItemsResolved] = useResolvedExtensions<NavItem>(isNavItem);\n * // process adapted extensions and render your component\n * ```\n * @param typeGuards A list of callbacks that each accept a dynamic plugin extension as an argument and return a boolean flag indicating whether or not the extension meets desired type constraints\n * @returns Tuple containing a list of adapted extension instances with resolved code references, a boolean flag indicating whether the resolution is complete, and a list of errors detected during the resolution.\n */\nexport const useResolvedExtensions = require('@console/dynamic-plugin-sdk/src/api/useResolvedExtensions')\n    .useResolvedExtensions;\n/**\n * A component that creates a Navigation bar for a page.\n * Routing is handled as part of the component.\n * `console.tab/horizontalNav` can be used to add additional content to any horizontal nav.\n * @param {object} [resource] - the resource associated with this Navigation, an object of K8sResourceCommon type\n * @param {NavPage[]} pages - an array of page objects\n * @example\n * ```ts\n * const HomePage: React.FC = (props) => {\n *     const page = {\n *       href: '/home',\n *       name: 'Home',\n *       component: () => <>Home</>\n *     }\n *     return <HorizontalNav pages={[page]} />\n * }\n * ```\n */\nexport const HorizontalNav = require('@console/internal/components/utils/horizontal-nav')\n    .HorizontalNavFacade;\n/**\n * A component for making virtualized tables\n * @param {D} data - data for table\n * @param {boolean} loaded - flag indicating data is loaded\n * @param {*} loadError - error object if issue loading data\n * @param {TableColumn[]} columns - column setup\n * @param {React.ComponentType} Row - row setup\n * @param {D} unfilteredData - original data without filter\n * @param {React.ComponentType} [NoDataEmptyMsg] - (optional) no data empty message component\n * @param {React.ComponentType} [EmptyMsg] - (optional) empty message component\n * @param {function} [scrollNode] - (optional) function to handle scroll\n * @param {string} [label] - (optional) label for table\n * @param {string} [ariaLabel] - (optional) aria label\n * @param {TableGridBreakpoint} [gridBreakPoint] - sizing of how to break up grid for responsiveness\n * @param {function} [onSelect] - (optional) function for handling select of table\n * @param {R} [rowData] - (optional) data specific to row\n * @param {number} [sortColumnIndex] - (optional) The index of the column to sort. The default is `0`\n * @param {SortByDirection.asc | SortByDirection.desc} [sortDirection] - (optional) The direction of the sort. The default is `SortByDirection.asc`\n * @param {function} [onRowsRendered] - (optional) Callback invoked with information about the slice of rows that were just rendered.\n * @example\n * ```ts\n * const MachineList: React.FC<MachineListProps> = (props) => {\n *   return (\n *     <VirtualizedTable<MachineKind>\n *      {...props}\n *      aria-label='Machines'\n *      columns={getMachineColumns}\n *      Row={getMachineTableRow}\n *     />\n *   );\n * }\n * ```\n */\nexport const VirtualizedTable = require('@console/internal/components/factory/Table/VirtualizedTable')\n    .default;\n/**\n * Component for displaying table data within a table row\n * @param {string} id - unique id for table\n * @param {Set<string>} activeColumnIDs - active columns\n * @param {string} [className] -  (optional) option class name for styling\n * @example\n * ```ts\n * const PodRow: React.FC<RowProps<K8sResourceCommon>> = ({ obj, activeColumnIDs }) => {\n *   return (\n *     <>\n *       <TableData id={columns[0].id} activeColumnIDs={activeColumnIDs}>\n *         <ResourceLink kind=\"Pod\" name={obj.metadata.name} namespace={obj.metadata.namespace} />\n *       </TableData>\n *       <TableData id={columns[1].id} activeColumnIDs={activeColumnIDs}>\n *         <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n *       </TableData>\n *       // Important:  the kebab menu cell should include the id and className prop values below\n *       <TableData id='' className='pf-v5-c-table__action' activeColumnIDs={activeColumnIDs}>\n *         <MockKebabMenu obj={obj} />\n *      </TableData>\n *     </>\n *   );\n * };\n * ```\n */\nexport const TableData = require('@console/internal/components/factory/Table/VirtualizedTable')\n    .TableData;\n/**\n * A hook that provides a list of user-selected active TableColumns.\n * @param {Object} options - Which are passed as a key-value in the map\n * @param options.columns - An array of all available TableColumns\n * @param options.showNamespaceOverride - (optional) If true, a namespace column will be included, regardless of column management selections\n * @param options.columnManagementID - (optional) A unique id used to persist and retrieve column management selections to and from user settings. Usually a `group~version~kind` string for a resource.\n * @returns A tuple containing the current user-selected active columns (a subset of options.columns), and a boolean flag indicating whether user settings have been loaded.\n * @example\n * ```tsx\n *   // See implementation for more details on TableColumn type\n *   const [activeColumns, userSettingsLoaded] = useActiveColumns({\n *     columns,\n *     showNamespaceOverride: false,\n *     columnManagementID,\n *   });\n *   return userSettingsAreLoaded ? <VirtualizedTable columns={activeColumns} {...otherProps} /> : null\n * ```\n */\nexport const useActiveColumns = require('@console/internal/components/factory/Table/active-columns-hook')\n    .useActiveColumns;\n/**\n * Component for generating a page header\n * @param {string} title - heading title\n * @param {ReactNode} [helpText] -  (optional) help section as react node\n * @param {ReactNode} [badge] -  (optional) badge icon as react node\n * @example\n * ```ts\n * const exampleList: React.FC = () => {\n *   return (\n *     <>\n *       <ListPageHeader title=\"Example List Page\"/>\n *     </>\n *   );\n * };\n * ```\n */\nexport const ListPageHeader = require('@console/internal/components/factory/ListPage/ListPageHeader')\n    .default;\n/**\n * Component for adding a create button for a specific resource kind that automatically generates a link to the create YAML for this resource.\n * @param groupVersionKind group, version, kind of k8s resource `K8sGroupVersionKind` is preferred alternatively can pass reference for group, version, kind which is deprecated i.e `group~version~kind` `K8sResourceKindReference`. Core resources with no API group should leave off the `group` property\n * @example\n * ```ts\n * const exampleList: React.FC<MyProps> = () => {\n *   return (\n *     <>\n *       <ListPageHeader title=\"Example List Page\"/>\n *         <ListPageCreate groupVersionKind={{ group: 'app'; version: 'v1'; kind: 'Deployment' }}>Create Deployment</ListPageCreate>\n *       </ListPageHeader>\n *     </>\n *   );\n * };\n * ```\n */\nexport const ListPageCreate = require('@console/internal/components/factory/ListPage/ListPageCreate')\n    .default;\n/**\n * Component for creating a stylized link.\n * @param {string} to - string location where link should direct\n * @param {object} [createAccessReview] -  (optional) object with namespace and kind used to determine access\n * @param {ReactNode} [children] -  (optional) children for the component\n * @example\n * ```ts\n * const exampleList: React.FC<MyProps> = () => {\n *  return (\n *   <>\n *    <ListPageHeader title=\"Example Pod List Page\"/>\n *       <ListPageCreateLink to={'/link/to/my/page'}>Create Item</ListPageCreateLink>\n *    </ListPageHeader>\n *   </>\n *  );\n * };\n * ```\n */\nexport const ListPageCreateLink = require('@console/internal/components/factory/ListPage/ListPageCreate')\n    .ListPageCreateLink;\n/**\n * Component for creating button.\n * @param {object} [createAccessReview] - (optional) object with namespace and kind used to determine access\n * @param {...object} [pfButtonProps] - (optional) Patternfly Button props\n * @example\n * ```ts\n * const exampleList: React.FC<MyProps> = () => {\n *   return (\n *     <>\n *       <ListPageHeader title=\"Example Pod List Page\"/>\n *         <ListPageCreateButton createAccessReview={access}>Create Pod</ListPageCreateButton>\n *       </ListPageHeader>\n *     </>\n *   );\n * };\n * ```\n */\nexport const ListPageCreateButton = require('@console/internal/components/factory/ListPage/ListPageCreate')\n    .ListPageCreateButton;\n/**\n * Component for creating a dropdown wrapped with permissions check.\n * @param {object} items - key:ReactNode pairs of items to display in dropdown component\n * @param {function} onClick - callback function for click on dropdown items\n * @param {object} [createAccessReview] - (optional) object with namespace and kind used to determine access\n * @param {ReactNode} [children] -  (optional) children for the dropdown toggle\n * @example\n * ```ts\n * const exampleList: React.FC<MyProps> = () => {\n *   const items = {\n *     SAVE: 'Save',\n *     DELETE: 'Delete',\n *   }\n *   return (\n *     <>\n *      <ListPageHeader title=\"Example Pod List Page\"/>\n *        <ListPageCreateDropdown createAccessReview={access} items={items}>Actions</ListPageCreateDropdown>\n *      </ListPageHeader>\n *     </>\n *   );\n * };\n * ```\n */\nexport const ListPageCreateDropdown = require('@console/internal/components/factory/ListPage/ListPageCreate')\n    .ListPageCreateDropdown;\n/**\n * Component that generates filter for list page.\n * @param {D} data - An array of data points\n * @param {boolean} loaded - indicates that data has loaded\n * @param {function} onFilterChange - callback function for when filter is updated\n * @param {RowFilter[]} [rowFilters] - (optional) An array of RowFilter elements that define the available filter options\n * @param {string} [labelFilter] - (optional) a unique name key for label filter. This may be useful if there are multiple `ListPageFilter` components rendered at once.\n * @param {string} [labelPath] - (optional) the path to labels to filter from\n * @param {string} [nameFilterTitle] - (optional) title for name filter\n * @param {string} [nameFilterPlaceholder] -  (optional) placeholder for name filter\n * @param {string} [labelFilterPlaceholder] -  (optional) placeholder for label filter\n * @param {boolean} [hideLabelFilter] -  (optional) only shows the name filter instead of both name and label filter\n * @param {boolean} [hideNameLabelFilter] -  (optional) hides both name and label filter\n * @param {ColumnLayout} [columnLayout] -  (optional) column layout object\n * @param {boolean} [hideColumnManagement] -  (optional) flag to hide the column management\n * @param {string} [nameFilter] - (optional) a unique name key for name filter. This may be useful if there are multiple `ListPageFilter` components rendered at once.\n * @param {RowSearchFilter[]} [rowSearchFilters] - (optional) An array of RowSearchFilters elements that define search text filters added on top of Name and Label filters\n * @example\n * ```tsx\n *   // See implementation for more details on RowFilter and FilterValue types\n *   const [staticData, filteredData, onFilterChange] = useListPageFilter(\n *     data,\n *     [...rowFilters, ...searchFilters],\n *     staticFilters,\n *   );\n *   // ListPageFilter updates filter state based on user interaction and resulting filtered data can be rendered in an independent component.\n *   return (\n *     <>\n *       <ListPageHeader />\n *       <ListPagBody>\n *         <ListPageFilter data={staticData} onFilterChange={onFilterChange} rowFilters={rowFilters} rowSearchFilters={searchFilters} />\n *         <List data={filteredData} />\n *       </ListPageBody>\n *     </>\n *   )\n * ```\n */\nexport const ListPageFilter = require('@console/internal/components/factory/ListPage/ListPageFilter')\n    .default;\n/**\n * A hook that manages filter state for the ListPageFilter component.\n * @param data - An array of data points\n * @param rowFilters - (optional) An array of RowFilter elements that define the available filter options\n * @param staticFilters - (optional) An array of FilterValue elements that are statically applied to the data\n * @returns A tuple containing the data filtered by all static filteres, the data filtered by all static and row filters, and a callback that updates rowFilters\n * @example\n * ```tsx\n *   // See implementation for more details on RowFilter and FilterValue types\n *   const [staticData, filteredData, onFilterChange] = useListPageFilter(\n *     data,\n *     rowFilters,\n *     staticFilters,\n *   );\n *   // ListPageFilter updates filter state based on user interaction and resulting filtered data can be rendered in an independent component.\n *   return (\n *     <>\n *       <ListPageHeader .../>\n *       <ListPagBody>\n *         <ListPageFilter data={staticData} onFilterChange={onFilterChange} />\n *         <List data={filteredData} />\n *       </ListPageBody>\n *     </>\n *   )\n * ```\n */\nexport const useListPageFilter = require('@console/internal/components/factory/ListPage/filter-hook')\n    .useListPageFilter;\n/**\n * Component that creates a link to a specific resource type with an icon badge.\n * @param {K8sResourceKindReference} [kind] - (optional) the kind of resource such as Pod, Deployment, Namespace\n * @param {K8sGroupVersionKind} [groupVersionKind] - (optional) object with group, version, and kind\n * @param {string} [className] -  (optional) class style for component\n * @param {string} [displayName] -  (optional) display name for component, overwrites the resource name if set\n * @param {boolean} [inline=false] -  (optional) flag to create icon badge and name inline with children\n * @param {boolean} [linkTo=true] -  (optional) flag to create a Link object, defaults to true\n * @param {string} [name] -  (optional) name of resource\n * @param {string} [namespace] -  (optional) specific namespace for the kind resource to link to\n * @param {boolean} [hideIcon] -  (optional) flag to hide the icon badge\n * @param {string} [title] -  (optional) title for the link object (not displayed)\n * @param {string} [dataTest] -  (optional) identifier for testing\n * @param {function} [onClick] -  (optional) callback function for when component is clicked\n * @param {boolean} [truncate=false] -  (optional) flag to truncate the link if too long\n * @example\n * ```tsx\n *   <ResourceLink\n *       kind=\"Pod\"\n *       name=\"testPod\"\n *       title={metadata.uid}\n *   />\n * ```\n */\nexport const ResourceLink = require('@console/internal/components/utils/resource-link')\n    .ResourceLink;\nexport { default as ResourceStatus } from '../app/components/utils/resource-status';\n/**\n * Component that creates an icon badge for a specific resource type.\n * @param {K8sResourceKindReference} [kind] - (optional) the kind of resource such as Pod, Deployment, Namespace\n * @param {K8sGroupVersionKind} [groupVersionKind] - (optional) object with group, version, and kind\n * @param {string} [className] -  (optional) class style for component\n * @example\n * ```tsx\n * <ResourceIcon kind=\"Pod\"/>\n * ```\n */\nexport const ResourceIcon = require('@console/internal/components/utils/resource-icon')\n    .ResourceIcon;\nexport { useK8sModel, useK8sModels, useK8sWatchResource, useK8sWatchResources, } from '../utils/k8s/hooks';\nexport { consoleFetch, consoleFetchJSON, consoleFetchText } from '../utils/fetch';\n// Expose K8s CRUD utilities as below\nexport { k8sGetResource as k8sGet, k8sCreateResource as k8sCreate, k8sUpdateResource as k8sUpdate, k8sPatchResource as k8sPatch, k8sDeleteResource as k8sDelete, k8sListResource as k8sList, k8sListResourceItems as k8sListItems, } from '../utils/k8s';\nexport { getAPIVersionForModel, getGroupVersionKindForResource, getGroupVersionKindForModel, } from '../utils/k8s/k8s-ref';\n/**\n * Component that shows the status in a popup window. Can be used when building `console.dashboards/overview/health/resource` extensions.\n * @param {ReactNode} firstColumn - values for first column of popup\n * @param {ReactNode} [secondColumn] - (optional) values for second column of popup\n * @param {ReactNode} [children] -  (optional) children for the popup\n * @example\n * ```tsx\n *   <StatusPopupSection\n *     firstColumn={\n *       <>\n *         <span>{title}</span>\n *         <span className=\"text-secondary\">\n *           My Example Item\n *         </span>\n *       </>\n *     }\n *     secondColumn='Status'\n *   >\n * ```\n */\nexport const StatusPopupSection = require('@console/shared/src/components/dashboard/status-card/StatusPopup')\n    .StatusPopupSection;\n/**\n * Status element used in status popup. Used in in `StatusPopupSection`.\n * @param {string} [value] - (optional) text value to display\n * @param {string} [icon] - (optional) icon to display\n * @param {React.ReactNode} children - child elements\n * @example\n * ```tsx\n * <StatusPopupSection\n *    firstColumn='Example'\n *    secondColumn='Status'\n * >\n *    <StatusPopupItem icon={healthStateMapping[MCGMetrics.state]?.icon}>\n *       Complete\n *    </StatusPopupItem>\n *    <StatusPopupItem icon={healthStateMapping[RGWMetrics.state]?.icon}>\n *        Pending\n *    </StatusPopupItem>\n * </StatusPopupSection>\n * ```\n */\nexport const StatusPopupItem = require('@console/shared/src/components/dashboard/status-card/StatusPopup')\n    .default;\n/**\n * Creates a wrapper component for a dashboard.\n * @param {string} [className] - (optional) style class for div\n * @param {React.ReactNode} [children] - (optional) elements of the dashboard\n * @example\n * ```tsx\n *     <Overview>\n *       <OverviewGrid mainCards={mainCards} leftCards={leftCards} rightCards={rightCards} />\n *     </Overview>\n *```\n */\nexport const Overview = require('@console/shared/src/components/dashboard/Dashboard')\n    .default;\n/**\n * Creates a grid of card elements for a dashboard. Used within `Overview`.\n * @param {OverviewGridCard[]} mainCards - cards for grid\n * @param {OverviewGridCard[]} [leftCards] - (optional) cards for left side of grid\n * @param {OverviewGridCard[]} [rightCards] - (optional) cards for right side of grid\n * @example\n * ```tsx\n *     <Overview>\n *       <OverviewGrid mainCards={mainCards} leftCards={leftCards} rightCards={rightCards} />\n *     </Overview>\n *```\n */\nexport const OverviewGrid = require('@console/shared/src/components/dashboard/DashboardGrid')\n    .default;\n/**\n * Creates an inventory card item.\n * @param {React.ReactNode} children - elements to render inside the item\n * @example\n * ```tsx\n *   return (\n *     <InventoryItem>\n *       <InventoryItemTitle>{title}</InventoryItemTitle>\n *       <InventoryItemBody error={loadError}>\n *         {loaded && <InventoryItemStatus count={workerNodes.length} icon={<MonitoringIcon />} />}\n *       </InventoryItemBody>\n *     </InventoryItem>\n *   )\n * ```\n */\nexport const InventoryItem = require('@console/shared/src/components/dashboard/inventory-card/InventoryCard')\n    .default;\n/**\n * Creates a title for an inventory card item. Used within `InventoryItem`.\n * @param {React.ReactNode} children - elements to render inside the title\n * @example\n *  ```tsx\n *   return (\n *     <InventoryItem>\n *       <InventoryItemTitle>{title}</InventoryItemTitle>\n *       <InventoryItemBody error={loadError}>\n *         {loaded && <InventoryItemStatus count={workerNodes.length} icon={<MonitoringIcon />} />}\n *       </InventoryItemBody>\n *     </InventoryItem>\n *   )\n * ```\n */\nexport const InventoryItemTitle = require('@console/shared/src/components/dashboard/inventory-card/InventoryCard')\n    .InventoryItemTitle;\n/**\n * Creates the body of an inventory card. Used within `InventoryCard` and can be used with `InventoryTitle`.\n * @param {React.ReactNode} children - elements to render inside the inventory card or title\n * @param {*} error - elements of the div\n * @example\n *  ```tsx\n *   return (\n *     <InventoryItem>\n *       <InventoryItemTitle>{title}</InventoryItemTitle>\n *       <InventoryItemBody error={loadError}>\n *         {loaded && <InventoryItemStatus count={workerNodes.length} icon={<MonitoringIcon />} />}\n *       </InventoryItemBody>\n *     </InventoryItem>\n *   )\n * ```\n */\nexport const InventoryItemBody = require('@console/shared/src/components/dashboard/inventory-card/InventoryCard')\n    .InventoryItemBody;\n/**\n * Creates a count and icon for an inventory card with optional link address. Used within `InventoryItemBody`.\n * @param {number} count - count for display\n * @param {React.ReactNode} icon - icon for display\n * @param {string} [linkTo] - (optional) link address\n * @example\n *  ```tsx\n *   return (\n *     <InventoryItem>\n *       <InventoryItemTitle>{title}</InventoryItemTitle>\n *       <InventoryItemBody error={loadError}>\n *         {loaded && <InventoryItemStatus count={workerNodes.length} icon={<MonitoringIcon />} />}\n *       </InventoryItemBody>\n *     </InventoryItem>\n *   )\n * ```\n */\nexport const InventoryItemStatus = require('@console/shared/src/components/dashboard/inventory-card/InventoryCard')\n    .InventoryItemStatus;\n/**\n * Creates a skeleton container for when an inventory card is loading. Used with `InventoryItem` and related components.\n * @example\n * ```tsx\n * if (loadError) {\n *    title = <Link to={workerNodesLink}>{t('Worker Nodes')}</Link>;\n * } else if (!loaded) {\n *   title = <><InventoryItemLoading /><Link to={workerNodesLink}>{t('Worker Nodes')}</Link></>;\n * }\n * return (\n *   <InventoryItem>\n *     <InventoryItemTitle>{title}</InventoryItemTitle>\n *   </InventoryItem>\n * )\n * ```\n */\nexport const InventoryItemLoading = require('@console/shared/src/components/dashboard/inventory-card/InventoryCard')\n    .InventoryItemLoading;\nexport { useFlag } from '../utils/flags';\n/**\n * @deprecated Use [CodeEditor](#codeeditor) instead.\n * A basic lazy loaded YAML editor with hover help and completion.\n * @example\n * ```tsx\n * <React.Suspense fallback={<LoadingBox />}>\n *   <YAMLEditor\n *     value={code}\n *   />\n * </React.Suspense>\n * ```\n * @param {YAMLEditorProps['value']} value - String representing the yaml code to render.\n * @param {CodeEditorProps['language']} language - String representing the language of the editor.\n * @param {YAMLEditorProps['options']} options - Monaco editor options. For more details, see https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IStandaloneEditorConstructionOptions.html.\n * @param {YAMLEditorProps['minHeight']} minHeight - Minimum editor height in valid CSS height values.\n * @param {YAMLEditorProps['showShortcuts']} showShortcuts - Boolean to show shortcuts on top of the editor.\n * @param {YAMLEditorProps['toolbarLinks']} toolbarLinks - Array of ReactNode rendered on the toolbar links section on top of the editor.\n * @param {YAMLEditorProps['onChange']} onChange - Callback for on code change event.\n * @param {YAMLEditorProps['onSave']} onSave - Callback called when the command `CTRL + S` / `CMD + S` is triggered.\n * @param {YAMLEditorRef} ref - React reference to `{ editor?: IStandaloneCodeEditor }`. Using the 'editor' property, you are able to access to all methods to control the editor. For more information, see https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IStandaloneCodeEditor.html.\n */\nexport const YAMLEditor = require('@console/internal/components/AsyncCodeEditor').AsyncCodeEditor;\n/**\n * A basic lazy loaded Code editor with hover help and completion.\n * @example\n * ```tsx\n * <React.Suspense fallback={<LoadingBox />}>\n *   <CodeEditor\n *     value={code}\n *     language=\"yaml\"\n *   />\n * </React.Suspense>\n * ```\n * @param {CodeEditorProps['value']} value - String representing the yaml code to render.\n * @param {CodeEditorProps['language']} language - String representing the language of the editor.\n * @param {CodeEditorProps['options']} options - Monaco editor options. For more details, please, visit https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IStandaloneEditorConstructionOptions.html.\n * @param {CodeEditorProps['minHeight']} minHeight - Minimum editor height in valid CSS height values.\n * @param {CodeEditorProps['showShortcuts']} showShortcuts - Boolean to show shortcuts on top of the editor.\n * @param {CodeEditorProps['toolbarLinks']} toolbarLinks - Array of ReactNode rendered on the toolbar links section on top of the editor.\n * @param {CodeEditorProps['onChange']} onChange - Callback for on code change event.\n * @param {CodeEditorProps['onSave']} onSave - Callback called when the command CTRL / CMD + S is triggered.\n * @param {CodeEditorRef} ref - React reference to `{ editor?: IStandaloneCodeEditor }`. Using the 'editor' property, you are able to access to all methods to control the editor. For more information, visit https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IStandaloneCodeEditor.html.\n */\nexport const CodeEditor = require('@console/internal/components/AsyncCodeEditor').AsyncCodeEditor;\n/**\n * A lazy loaded YAML editor for Kubernetes resources with hover help and completion.\n * The component uses the YAML editor and adds functionality, such as\n * resource update handling, alerts, save; cancel and reload buttons; and accessibility.\n * Unless `onSave` callback is provided, the resource update is automatically handled.\n * It should be wrapped in a `React.Suspense` component.\n * @example\n * ```tsx\n * <React.Suspense fallback={<LoadingBox />}>\n *   <ResourceYAMLEditor\n *     initialResource={resource}\n *     header=\"Create resource\"\n *     onSave={(content) => updateResource(content)}\n *   />\n * </React.Suspense>\n * ```\n * @param {ResourceYAMLEditorProps['initialResource']} initialResource - YAML/Object representing a resource to be shown by the editor. This prop is used only during the inital render.\n * @param {ResourceYAMLEditorProps['header']} header - Add a header on top of the YAML editor.\n * @param {ResourceYAMLEditorProps['onSave']} onSave - Callback for the Save button. Passing it will override the default update performed on the resource by the editor.\n * @param {ResourceYAMLEditorProps['readOnly']} readOnly - Sets the YAML editor to read-only mode.\n * @param {ResourceYAMLEditorProps['create']} create - Editor will be on creation mode. Create button will replace the Save and Cancel buttons. If no onSave method defined, the 'Create' button will trigger the creation of the defined resource. Default: false\n * @param {ResourceYAMLEditorProps['onChange']} onChange - Callback triggered at any editor change.\n * @param {ResourceYAMLEditorProps['hideHeader']} hideHeader - On creation mode the editor by default show an header that can be hided with this property\n */\nexport const ResourceYAMLEditor = require('@console/internal/components/AsyncResourceYAMLEditor')\n    .AsyncResourceYAMLEditor;\n/**\n * A component to show events related to a particular resource.\n * @example\n * ```tsx\n * const [resource, loaded, loadError] = useK8sWatchResource(clusterResource);\n * return <ResourceEventStream resource={resource} />\n * ```\n * @param {K8sResourceCommon} resource - An object whose related events should be shown.\n */\nexport const ResourceEventStream = require('@console/internal/components/events')\n    .WrappedResourceEventStream;\n/**\n * Sets up a poll to Prometheus for a single query.\n * @param {PrometheusEndpoint} endpoint - one of the PrometheusEndpoint (label, query, range, rules, targets)\n * @param {string} [query] - (optional) Prometheus query string. If empty or undefined, polling is not started.\n * @param {number} [delay] - (optional) polling delay interval (ms)\n * @param {number} [endTime] - (optional) for QUERY_RANGE enpoint, end of the query range\n * @param {number} [samples] - (optional) for QUERY_RANGE enpoint\n * @param {number} [timespan] - (optional) for QUERY_RANGE enpoint\n * @param {string} [namespace] - (optional) a search param to append\n * @param {string} [timeout] - (optional) a search param to append\n * @returns A tuple containing the query response, a boolean flag indicating whether the response has completed, and any errors encountered during the request or post-processing of the request\n */\nexport const usePrometheusPoll = (options) => {\n    const result = require('@console/internal/components/graphs/prometheus-poll-hook').usePrometheusPoll(options);\n    // unify order with the rest of API\n    return [result[0], !result[2], result[1]];\n};\n/**\n * A component to render timestamp.\n * The timestamps are synchronized between individual instances of the Timestamp component.\n * The provided timestamp is formatted according to user locale.\n *\n * @param {TimestampProps['timestamp']} timestamp - the timestamp to render. Format is expected to be ISO 8601 (used by Kubernetes), epoch timestamp, or an instance of a Date.\n * @param {TimestampProps['simple']} simple - render simple version of the component omitting icon and tooltip.\n * @param {TimestampProps['omitSuffix']} omitSuffix - formats the date ommiting the suffix.\n * @param {TimestampProps['className']} className - additional class name for the component.\n */\nexport const Timestamp = require('@console/internal/components/utils/timestamp')\n    .Timestamp;\nexport { useModal } from '../app/modal-support/useModal';\n/**\n * Component that allows to receive contributions from other plugins for the `console.action/provider` extension type.\n * See docs: https://github.com/openshift/console/blob/master/frontend/packages/console-dynamic-plugin-sdk/docs/console-extensions.md#consoleactionprovider\n *\n * @param {ActionServiceProviderProps[\"context\"]} context - Object with contextId and optional plugin data\n * @example\n * ```tsx\n *    const context: ActionContext = { 'a-context-id': { dataFromDynamicPlugin } };\n *\n *    ...\n *\n *    <ActionServiceProvider context={context}>\n *        {({ actions, options, loaded }) =>\n *          loaded && (\n *            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n *          )\n *        }\n *    </ActionServiceProvider>\n * ```\n */\nexport const ActionServiceProvider = require('@console/shared/src/components/actions/ActionServiceProvider')\n    .default;\n/**\n * A component that renders a horizontal toolbar with a namespace dropdown menu in the leftmost position. Additional components can be passed in as children and will be rendered to the right of the namespace dropdown. This component is designed to be used at the top of the page. It should be used on pages where the user needs to be able to change the active namespace, such as on pages with k8s resources.\n * @param {function} onNamespaceChange - (optional) A function that is executed when a namespace option is selected. It accepts the new namespace in the form of a string as its only argument. The active namespace is updated automatically when an option is selected, but additional logic can be applied through this function. When the namespace is changed, the namespace parameter in the URL will be changed from the previous namespace to the newly selected namespace.\n * @param {boolean} isDisabled - (optional) A boolean flag that disables the namespace dropdown if set to true. This option only applies to the namespace dropdown and has no effect on child components.\n * @param {React.ReactNode} children - (optional) Additional elements to be rendered inside the toolbar to the right of the namespace dropdown.\n * @example\n * ```tsx\n *    const logNamespaceChange = (namespace) => console.log(`New namespace: ${namespace}`);\n *\n *    ...\n *\n *    <NamespaceBar onNamespaceChange={logNamespaceChange}>\n *      <NamespaceBarApplicationSelector />\n *    </NamespaceBar>\n *    <Page>\n *\n *      ...\n * ```\n */\nexport const NamespaceBar = require('@console/internal/components/namespace-bar')\n    .NamespaceBar;\n/**\n * Creates a full page ErrorBoundaryFallbackPage component to display the \"Oh no! Something went wrong.\" message along with the stack trace and other helpful debugging information.\n * This is to be used in conjunction with an `ErrorBoundary` component.\n *\n * @param {string} errorMessage - text description of the error message\n * @param {string} componentStack - component trace of the exception\n * @param {string} stack - stack trace of the exception\n * @param {string} title - title to render as the header of the error boundary page\n * @example\n *  ```tsx\n *  //in ErrorBoundary component\n *   return (\n *     if (this.state.hasError) {\n *       return <ErrorBoundaryFallbackPage errorMessage={errorString} componentStack={componentStackString}\n *        stack={stackTraceString} title={errorString}/>;\n *     }\n *\n *     return this.props.children;\n *   }\n *  )\n * ```\n */\nexport const ErrorBoundaryFallbackPage = require('@console/shared/src/components/error/fallbacks/ErrorBoundaryFallbackPage')\n    .default;\n/**\n * A component that renders a graph of the results from a Prometheus PromQL query along with controls for interacting with the graph.\n * @param {CustomDataSource} customDataSource - (optional) Base URL of an API endpoint that handles PromQL queries. If provided, this is used instead of the default API for fetching data.\n * @param {number} defaultSamples - (optional) The default number of data samples plotted for each data series. If there are many data series, QueryBrowser might automatically pick a lower number of data samples than specified here.\n * @param {number} defaultTimespan - (optional) The default timespan for the graph in milliseconds - defaults to 1,800,000 (30 minutes).\n * @param {PrometheusLabels[][]} disabledSeries - (optional) Disable (don't display) data series with these exact label / value pairs.\n * @param {boolean} disableZoom - (optional) Flag to disable the graph zoom controls.\n * @param {PrometheusLabels} filterLabels - (optional) Optionally filter the returned data series to only those that match these label / value pairs.\n * @param {number} fixedEndTime - (optional) Set the end time for the displayed time range rather than showing data up to the current time.\n * @param {(labels: PrometheusLabels, i?: number) => string} formatSeriesTitle - (optional) Function that returns a string to use as the title for a single data series.\n * @param {React.ComponentType<{}>} GraphLink - (optional) Component for rendering a link to another page (for example getting more information about this query).\n * @param {boolean} hideControls - (optional) Flag to hide the graph controls for changing the graph timespan, and so on.\n * @param {boolean} isStack - (optional) Flag to display a stacked graph instead of a line graph. If showStackedControl is set, it will still be possible for the user to switch to a line graph.\n * @param {string} namespace - (optional) If provided, data is only returned for this namespace (only series that have this namespace label).\n * @param {GraphOnZoom} onZoom - (optional) Callback called when the graph is zoomed.\n * @param {number} pollInterval - (optional) If set, determines how often the graph is updated to show the latest data (in milliseconds).\n * @param {string[]} queries - Array of PromQL queries to run and display the results in the graph.\n * @param {boolean} showLegend - (optional) Flag to enable displaying a legend below the graph.\n * @param {boolean} showStackedControl - Flag to enable displaying a graph control for switching between stacked graph mode and line graph mode.\n * @param {number} timespan - (optional) The timespan that should be covered by the graph in milliseconds.\n * @param {string} units - (optional) Units to display on the Y-axis and in the tooltip.\n * @example\n * ```tsx\n * <QueryBrowser\n *   defaultTimespan={15 * 60 * 1000}\n *   namespace={namespace}\n *   pollInterval={30 * 1000}\n *   queries={[\n *     'process_resident_memory_bytes{job=\"console\"}',\n *     'sum(irate(container_network_receive_bytes_total[6h:5m])) by (pod)',\n *   ]}\n * />\n * ```\n */\nexport const QueryBrowser = require('@console/shared/src/components/query-browser')\n    .QueryBrowser;\n/**\n * A hook that provides a callback to launch a modal for editing Kubernetes resource annotations.\n *\n * @param {object} resource - The resource to edit annotations for, an object of K8sResourceCommon type.\n * @returns A function which will launch a modal for editing a resource's annotations.\n * @example\n * ```tsx\n * const PodAnnotationsButton = ({ pod }) => {\n *   const { t } = useTranslation();\n *   const launchAnnotationsModal = useAnnotationsModal(pod);\n *   return <button onClick={launchAnnotationsModal}>{t('Edit Pod Annotations')}</button>\n * }\n * ```\n */\nexport const useAnnotationsModal = require('@console/shared/src/hooks/useAnnotationsModal')\n    .useAnnotationsModal;\n/**\n * A hook that provides a callback to launch a modal for deleting a resource.\n *\n * @param resource - The resource to delete.\n * @param redirectTo - (optional) A location to redirect to after deleting the resource.\n * @param message - (optional) A message to display in the modal.\n * @param btnText - (optional) The text to display on the delete button.\n * @param deleteAllResources - (optional) A function to delete all resources of the same kind.\n * @returns A function which will launch a modal for deleting a resource.\n * @example\n * ```tsx\n * const DeletePodButton = ({ pod }) => {\n *   const { t } = useTranslation();\n *   const launchDeleteModal = useDeleteModal(pod);\n *   return <button onClick={launchDeleteModal}>{t('Delete Pod')}</button>\n * }\n * ```\n */\nexport const useDeleteModal = require('@console/shared/src/hooks/useDeleteModal')\n    .useDeleteModal;\n/**\n * A hook that provides a callback to launch a modal for editing Kubernetes resource labels.\n *\n * @param {object} resource - The resource to edit labels for, an object of K8sResourceCommon type.\n * @returns A function which will launch a modal for editing a resource's labels.\n * @example\n * ```tsx\n * const PodLabelsButton = ({ pod }) => {\n *   const { t } = useTranslation();\n *   const launchLabelsModal = useLabelsModal(pod);\n *   return <button onClick={launchLabelsModal}>{t('Edit Pod Labels')}</button>\n * }\n * ```\n */\nexport const useLabelsModal = require('@console/shared/src/hooks/useLabelsModal')\n    .useLabelsModal;\n/**\n * Hook that provides the currently active namespace and a callback for setting the active namespace.\n * @returns A tuple containing the current active namespace and setter callback.\n * @example\n * ```tsx\n * const Component: React.FC = (props) => {\n *    const [activeNamespace, setActiveNamespace] = useActiveNamespace();\n *    return <select\n *      value={activeNamespace}\n *      onChange={(e) => setActiveNamespace(e.target.value)}\n *    >\n *      {\n *        // ...namespace options\n *      }\n *    </select>\n * }\n * ```\n */\nexport const useActiveNamespace = require('@console/shared/src/hooks/useActiveNamespace')\n    .useActiveNamespace;\n/**\n * Hook that provides a user setting value and a callback for setting the user setting value.\n * @returns A tuple containing the user setting value, a setter callback, and a loaded boolean.\n * @example\n * ```tsx\n * const Component: React.FC = (props) => {\n *    const [state, setState, loaded] = useUserSettings(\n *      'devconsole.addPage.showDetails',\n *      true,\n *      true,\n *    );\n *    return loaded ? (\n *       <WrappedComponent {...props} userSettingState={state} setUserSettingState={setState} />\n *     ) : null;\n * };\n * ```\n */\nexport const useUserSettings = require('@console/shared/src/hooks/useUserSettings')\n    .useUserSettings;\n/**\n * Hook that provides the current quick start context values. This allows plugins to interop with Console\n * quick start functionality.\n * @returns Quick start context values object.\n * @example\n * ```tsx\n * const OpenQuickStartButton = ({ quickStartId }) => {\n *    const { setActiveQuickStart } = useQuickStartContext();\n *    const onClick = React.useCallback(() => {\n *        setActiveQuickStart(quickStartId);\n *    }, [quickStartId]);\n *    return <button onClick={onClick}>{t('Open Quick Start')}</button>\n * };\n * ```\n */\nexport const useQuickStartContext = require('@console/shared/src/hooks/useQuickStartContext')\n    .useQuickStartContext;\n//# sourceMappingURL=dynamic-core-api.js.map","export { default as CamelCaseWrap } from './utils/camel-case-wrap';\nexport { default as GenericStatus } from './status/GenericStatus';\nexport { default as ListPageBody } from './factory/ListPage/ListPageBody';\nexport { default as PopoverStatus } from './status/PopoverStatus';\nexport { default as StatusComponent } from './status/Status';\nexport { default as StatusIconAndText } from './status/StatusIconAndText';\nexport { default as ResourceStatus } from './utils/resource-status';\nexport * from './status/icons';\nexport * from './status/statuses';\nexport { checkAccess, useAccessReviewAllowed, useAccessReview } from './utils/rbac';\nexport { useSafetyFirst } from './safety-first';\n//# sourceMappingURL=index.js.map","export const DASH = '-';\n//# sourceMappingURL=constants.js.map","import * as React from 'react';\nconst ListPageBody = ({ children }) => {\n    return React.createElement(\"div\", { className: \"co-m-pane__body co-m-pane__body--no-top-margin\" }, children);\n};\nexport default ListPageBody;\n//# sourceMappingURL=ListPageBody.js.map","import * as React from 'react';\nimport { BanIcon, ClipboardListIcon, HourglassHalfIcon, HourglassStartIcon, NotStartedIcon, SyncAltIcon, UnknownIcon, } from '@patternfly/react-icons';\nimport { DASH } from '../../constants';\nimport { YellowExclamationTriangleIcon } from './icons';\nimport { ErrorStatus, InfoStatus, ProgressStatus, SuccessStatus } from './statuses';\nimport StatusIconAndText from './StatusIconAndText';\n/**\n * Component for displaying a status message\n * @param {string} status - type of status to be displayed\n * @param {string} [title] - (optional) status text\n * @param {boolean} [iconOnly] - (optional) if true, only displays icon\n * @param {boolean} [noTooltip] - (optional) if true, tooltip won't be displayed\n * @param {string} [className] - (optional) additional class name for the component\n * @param {string} [popoverTitle] - (optional) title for popover\n * @param {ReactNode} [children] - (optional) children for the component\n * @example\n * ```tsx\n * <Status status='Warning' />\n * ```\n */\nconst Status = ({ status, title, children, iconOnly, noTooltip, className, }) => {\n    const statusProps = { title: title || status, iconOnly, noTooltip, className };\n    switch (status) {\n        case 'New':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(HourglassStartIcon, null) }));\n        case 'Pending':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(HourglassHalfIcon, null) }));\n        case 'Planning':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(ClipboardListIcon, null) }));\n        case 'ContainerCreating':\n        case 'UpgradePending':\n        case 'PendingUpgrade':\n        case 'PendingRollback':\n            return React.createElement(ProgressStatus, Object.assign({}, statusProps));\n        case 'In Progress':\n        case 'Installing':\n        case 'InstallReady':\n        case 'Replacing':\n        case 'Running':\n        case 'Updating':\n        case 'Upgrading':\n        case 'PendingInstall':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(SyncAltIcon, null) }));\n        case 'Cancelled':\n        case 'Deleting':\n        case 'Expired':\n        case 'Not Ready':\n        case 'Cancelling':\n        case 'Terminating':\n        case 'Superseded':\n        case 'Uninstalling':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(BanIcon, null) }));\n        case 'Warning':\n        case 'RequiresApproval':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(YellowExclamationTriangleIcon, null) }));\n        case 'ContainerCannotRun':\n        case 'CrashLoopBackOff':\n        case 'Critical':\n        case 'ErrImagePull':\n        case 'Error':\n        case 'Failed':\n        case 'Failure':\n        case 'ImagePullBackOff':\n        case 'InstallCheckFailed':\n        case 'Lost':\n        case 'Rejected':\n        case 'UpgradeFailed':\n            return React.createElement(ErrorStatus, Object.assign({}, statusProps), children);\n        case 'Accepted':\n        case 'Active':\n        case 'Bound':\n        case 'Complete':\n        case 'Completed':\n        case 'Created':\n        case 'Enabled':\n        case 'Succeeded':\n        case 'Ready':\n        case 'Up to date':\n        case 'Loaded':\n        case 'Provisioned as node':\n        case 'Preferred':\n        case 'Connected':\n        case 'Deployed':\n            return React.createElement(SuccessStatus, Object.assign({}, statusProps));\n        case 'Info':\n            return React.createElement(InfoStatus, Object.assign({}, statusProps), children);\n        case 'Unknown':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(UnknownIcon, null) }));\n        case 'PipelineNotStarted':\n            return React.createElement(StatusIconAndText, Object.assign({}, statusProps, { icon: React.createElement(NotStartedIcon, null) }));\n        default:\n            return status ? React.createElement(StatusIconAndText, Object.assign({}, statusProps)) : React.createElement(React.Fragment, null, DASH);\n    }\n};\nexport default Status;\n//# sourceMappingURL=Status.js.map","export var Operator;\n(function (Operator) {\n    Operator[\"Exists\"] = \"Exists\";\n    Operator[\"DoesNotExist\"] = \"DoesNotExist\";\n    Operator[\"In\"] = \"In\";\n    Operator[\"NotIn\"] = \"NotIn\";\n    Operator[\"Equals\"] = \"Equals\";\n    Operator[\"NotEqual\"] = \"NotEqual\";\n    Operator[\"GreaterThan\"] = \"GreaterThan\";\n    Operator[\"LessThan\"] = \"LessThan\";\n    Operator[\"NotEquals\"] = \"NotEquals\";\n})(Operator || (Operator = {}));\nvar BadgeType;\n(function (BadgeType) {\n    BadgeType[\"DEV\"] = \"Dev Preview\";\n    BadgeType[\"TECH\"] = \"Tech Preview\";\n})(BadgeType || (BadgeType = {}));\nexport var PrometheusEndpoint;\n(function (PrometheusEndpoint) {\n    PrometheusEndpoint[\"LABEL\"] = \"api/v1/label\";\n    PrometheusEndpoint[\"QUERY\"] = \"api/v1/query\";\n    PrometheusEndpoint[\"QUERY_RANGE\"] = \"api/v1/query_range\";\n    PrometheusEndpoint[\"RULES\"] = \"api/v1/rules\";\n    PrometheusEndpoint[\"TARGETS\"] = \"api/v1/targets\";\n})(PrometheusEndpoint || (PrometheusEndpoint = {}));\n//# sourceMappingURL=common-types.js.map","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\n/**\n * Hook that returns the given feature flag from FLAGS redux state.\n * @param flag The feature flag to return\n * @returns the boolean value of the requested feature flag or undefined\n */\nexport const useFlag = (flag) => useSelector(({ FLAGS }) => FLAGS.get(flag));\n//# sourceMappingURL=flags.js.map","import * as React from 'react';\nimport { ModalContext } from './ModalProvider';\n/**\n * A hook to launch Modals.\n * @example\n *```tsx\n * const AppPage: React.FC = () => {\n *  const launchModal = useModal();\n *  const onClick = () => launchModal(ModalComponent);\n *  return (\n *    <Button onClick={onClick}>Launch a Modal</Button>\n *  )\n * }\n * ```\n */\nexport const useModal = () => {\n    const { launchModal } = React.useContext(ModalContext);\n    return launchModal;\n};\n//# sourceMappingURL=useModal.js.map","import * as React from 'react';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { CommonActionFactory, getCommonResourceActions } from '../creators/common-factory';\nimport { getHealthChecksAction } from '../creators/health-checks-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\n\nexport const useStatefulSetActionsProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [pdbActions] = usePDBActions(kindObj, resource);\n\n  const actions = React.useMemo(\n    () => [\n      CommonActionFactory.ModifyCount(kindObj, resource),\n      ...pdbActions,\n      getHealthChecksAction(kindObj, resource),\n      CommonActionFactory.AddStorage(kindObj, resource),\n      ...getCommonResourceActions(kindObj, resource),\n    ],\n    [kindObj, resource, pdbActions],\n  );\n\n  return [actions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { CommonActionFactory, getCommonResourceActions } from '../creators/common-factory';\nimport { getHealthChecksAction } from '../creators/health-checks-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\n\nexport const useDaemonSetActionsProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [pdbActions] = usePDBActions(kindObj, resource);\n\n  const actions = React.useMemo(\n    () => [\n      getHealthChecksAction(kindObj, resource),\n      ...pdbActions,\n      CommonActionFactory.AddStorage(kindObj, resource),\n      ...getCommonResourceActions(kindObj, resource),\n    ],\n    [kindObj, resource, pdbActions],\n  );\n\n  return [actions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport { JobKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { getCommonResourceActions } from '../creators/common-factory';\nimport { JobActionFactory } from '../creators/job-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\n\nexport const useJobActionsProvider = (resource: JobKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [pdbActions] = usePDBActions(kindObj, resource);\n\n  const actions = React.useMemo(\n    () => [\n      JobActionFactory.ModifyJobParallelism(kindObj, resource),\n      ...pdbActions,\n      ...getCommonResourceActions(kindObj, resource),\n    ],\n    [kindObj, resource, pdbActions],\n  );\n\n  return [actions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport { CronJobKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { getCommonResourceActions } from '../creators/common-factory';\nimport { CronJobActionFactory } from '../creators/cronjob-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\n\nexport const useCronJobActionsProvider = (resource: CronJobKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [pdbActions] = usePDBActions(kindObj, resource);\n\n  const actions = React.useMemo(\n    () => [\n      CronJobActionFactory.StartJob(kindObj, resource),\n      ...pdbActions,\n      ...getCommonResourceActions(kindObj, resource),\n    ],\n    [kindObj, pdbActions, resource],\n  );\n\n  return [actions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { DeploymentActionFactory } from '../creators/deployment-factory';\n\nexport const useCreateServiceBindingProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n\n  const deploymentActions = React.useMemo(\n    () => DeploymentActionFactory.CreateServiceBinding(kindObj, resource),\n    [kindObj, resource],\n  );\n\n  return [deploymentActions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport { DeploymentModel } from '@console/internal/models';\nimport { ReplicaSetKind, referenceFor } from '@console/internal/module/k8s';\nimport { getOwnerNameByKind } from '@console/shared/src';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { CommonActionFactory, getCommonResourceActions } from '../creators/common-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\nimport { ReplicaSetFactory } from '../creators/replicaset-factory';\n\nexport const useReplicaSetActionsProvider = (resource: ReplicaSetKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [pdbActions] = usePDBActions(kindObj, resource);\n  const deploymentName = getOwnerNameByKind(resource, DeploymentModel);\n\n  const actions = React.useMemo(\n    () => [\n      CommonActionFactory.ModifyCount(kindObj, resource),\n      ...pdbActions,\n      CommonActionFactory.AddStorage(kindObj, resource),\n      ...(resource?.status?.replicas > 0 || !deploymentName\n        ? []\n        : [ReplicaSetFactory.RollbackDeploymentAction(kindObj, resource)]),\n      ...getCommonResourceActions(kindObj, resource),\n    ],\n    [kindObj, resource, pdbActions, deploymentName],\n  );\n\n  return [actions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { ReplicationControllerKind, referenceFor } from '@console/internal/module/k8s';\nimport { getOwnerNameByKind } from '@console/shared/src';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { CommonActionFactory, getCommonResourceActions } from '../creators/common-factory';\nimport { usePDBActions } from '../creators/pdb-factory';\nimport { ReplicationControllerFactory } from '../creators/replication-controller-factory';\n\nexport const useReplicationControllerActionsProvider = (resource: ReplicationControllerKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const [pdbActions] = usePDBActions(kindObj, resource);\n  const deploymentPhase = resource?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const dcName = getOwnerNameByKind(resource, DeploymentConfigModel);\n\n  const actions = React.useMemo(\n    () => [\n      CommonActionFactory.ModifyCount(kindObj, resource),\n      ...(!_.isNil(deploymentPhase) && ['New', 'Pending', 'Running'].includes(deploymentPhase)\n        ? [ReplicationControllerFactory.CancelRollout(kindObj, resource)]\n        : []),\n      ...pdbActions,\n      CommonActionFactory.AddStorage(kindObj, resource),\n      ...(!deploymentPhase || resource?.status?.replicas > 0 || !dcName\n        ? []\n        : [ReplicationControllerFactory.RollbackDeploymentConfigAction(kindObj, resource)]),\n      ...getCommonResourceActions(kindObj, resource),\n    ],\n    [kindObj, resource, pdbActions, deploymentPhase, dcName],\n  );\n\n  return [actions, !inFlight, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { getCommonResourceActions } from '../creators/common-factory';\n\nexport const usePodActionsProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n\n  const actions = React.useMemo(() => [...getCommonResourceActions(kindObj, resource)], [\n    kindObj,\n    resource,\n  ]);\n\n  return [actions, !inFlight, undefined];\n};\n","import { SetFeatureFlag } from '@console/dynamic-plugin-sdk';\nimport {\n  hasReviewAccess,\n  Perspective,\n  PerspectiveVisibilityState,\n} from '@console/shared/src/hooks/perspective-utils';\nimport { FLAG_DEVELOPER_PERSPECTIVE } from '../../consts';\n\nexport const useDeveloperPerspectiveStateProvider = (setFeatureFlag: SetFeatureFlag) => {\n  if (!window.SERVER_FLAGS.perspectives) {\n    setFeatureFlag(FLAG_DEVELOPER_PERSPECTIVE, true);\n  } else {\n    const perspectives: Perspective[] = JSON.parse(window.SERVER_FLAGS.perspectives);\n    const devPerspective = perspectives?.find((p) => p.id === 'dev');\n    if (!devPerspective) {\n      setFeatureFlag(FLAG_DEVELOPER_PERSPECTIVE, true);\n    } else if (devPerspective.visibility.state === PerspectiveVisibilityState.Disabled) {\n      setFeatureFlag(FLAG_DEVELOPER_PERSPECTIVE, false);\n    } else if (devPerspective.visibility.state === PerspectiveVisibilityState.Enabled) {\n      setFeatureFlag(FLAG_DEVELOPER_PERSPECTIVE, true);\n    } else if (devPerspective.visibility.state === PerspectiveVisibilityState.AccessReview) {\n      hasReviewAccess(devPerspective?.visibility?.accessReview)\n        .then((res) => {\n          setFeatureFlag(FLAG_DEVELOPER_PERSPECTIVE, res);\n        })\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.warn('Could not check access', e);\n        });\n    }\n  }\n};\n","import { DeletePDBModalProps } from './DeletePDBModal';\n\nexport const deletePDBModal = (props: DeletePDBModalProps) =>\n  import('./DeletePDBModal' /* webpackChunkName: \"shared-modals\" */).then((m) =>\n    m.deletePDBModal(props),\n  );\n","/**\n * @file Entrypoint for the `@openshift-console/dynamic-plugin-sdk` package published to npmjs.\n *\n * Provides core APIs, types and utilities used by dynamic plugins at runtime.\n */\nexport * from './extensions';\nexport * from './api/core-api';\n//# sourceMappingURL=lib-core.js.map","export const ProjectModel = {\n    abbr: 'PR',\n    label: 'Project',\n    apiVersion: 'v1',\n    apiGroup: 'project.openshift.io',\n    plural: 'projects',\n    kind: 'Project',\n    labelPlural: 'Projects',\n};\nexport const SelfSubjectAccessReviewModel = {\n    abbr: 'SSAR',\n    kind: 'SelfSubjectAccessReview',\n    label: 'SelfSubjectAccessReview',\n    labelPlural: 'SelfSubjectAccessReviews',\n    plural: 'selfsubjectaccessreviews',\n    apiVersion: 'v1',\n    apiGroup: 'authorization.k8s.io',\n};\n//# sourceMappingURL=index.js.map","import * as React from 'react';\nexport const ModalContext = React.createContext({\n    launchModal: () => { },\n    closeModal: () => { },\n});\nexport const ModalProvider = ({ children }) => {\n    const [isOpen, setOpen] = React.useState(false);\n    const [Component, setComponent] = React.useState();\n    const [componentProps, setComponentProps] = React.useState({});\n    const launchModal = React.useCallback((component, compProps) => {\n        setComponent(() => component);\n        setComponentProps(compProps);\n        setOpen(true);\n    }, [setOpen, setComponent, setComponentProps]);\n    const closeModal = React.useCallback(() => setOpen(false), [setOpen]);\n    return (React.createElement(ModalContext.Provider, { value: { launchModal, closeModal } },\n        isOpen && !!Component && React.createElement(Component, Object.assign({}, componentProps, { closeModal: closeModal })),\n        children));\n};\n//# sourceMappingURL=ModalProvider.js.map","import i18next from 'i18next';\nimport { configureJobParallelismModal } from '@console/internal/components/modals';\nimport { JobKind, K8sKind } from '@console/internal/module/k8s';\nimport { ResourceActionFactory } from './common-factory';\n\nexport const JobActionFactory: ResourceActionFactory = {\n  ModifyJobParallelism: (kind: K8sKind, obj: JobKind) => ({\n    id: 'edit-parallelism',\n    label: i18next.t('console-app~Edit parallelism'),\n    cta: () =>\n      configureJobParallelismModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n};\n","import i18next from 'i18next';\nimport { history, resourceObjPath } from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport {\n  K8sKind,\n  k8sCreate,\n  CronJobKind,\n  JobKind,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { ResourceActionFactory } from './common-factory';\n\nconst startJob = (obj: CronJobKind): Promise<JobKind> => {\n  const reqPayload = {\n    apiVersion: 'batch/v1',\n    kind: 'Job',\n    metadata: {\n      name: `${obj.metadata?.name}-${Date.now()}`,\n      namespace: obj.metadata?.namespace,\n      annotations: obj.metadata?.annotations,\n      ownerReferences: [\n        {\n          apiVersion: 'batch/v1',\n          controller: true,\n          kind: 'CronJob',\n          name: obj.metadata?.name,\n          uid: obj.metadata?.uid,\n        },\n      ],\n    },\n    spec: {\n      template: obj.spec.jobTemplate.spec.template,\n    },\n  };\n\n  return k8sCreate(JobModel, reqPayload);\n};\n\nexport const CronJobActionFactory: ResourceActionFactory = {\n  StartJob: (kind: K8sKind, obj: CronJobKind) => ({\n    id: 'start-job',\n    label: i18next.t('console-app~Start Job'),\n    cta: () => {\n      startJob(obj)\n        .then((job) => history.push(resourceObjPath(job, referenceFor(job))))\n        .catch((error) => {\n          // TODO: Show error in notification in the follow on tech-debt.\n          // eslint-disable-next-line no-console\n          console.error('Failed to start a Job.', error);\n        });\n    },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata?.name,\n      namespace: obj.metadata?.namespace,\n      verb: 'create',\n    },\n  }),\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { rollbackModal } from '@console/internal/components/modals';\nimport { DeploymentModel } from '@console/internal/models';\nimport { ReplicaSetKind, K8sKind } from '@console/internal/module/k8s';\nimport { getOwnerNameByKind } from '@console/shared/src';\nimport { ResourceActionFactory } from './common-factory';\n\nexport const ReplicaSetFactory: ResourceActionFactory = {\n  RollbackDeploymentAction: (kind: K8sKind, obj: ReplicaSetKind): Action => ({\n    id: 'rollback-deployment',\n    label: i18next.t('console-app~Rollback'),\n    cta: () =>\n      rollbackModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: DeploymentModel.apiGroup,\n      resource: DeploymentModel.plural,\n      name: getOwnerNameByKind(obj, DeploymentModel),\n      namespace: obj?.metadata?.namespace,\n      verb: 'patch',\n    },\n  }),\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { rollbackModal, confirmModal } from '@console/internal/components/modals';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { ReplicationControllerKind, K8sKind, k8sPatch } from '@console/internal/module/k8s';\nimport { getOwnerNameByKind } from '@console/shared/src';\nimport { ResourceActionFactory } from './common-factory';\n\nconst INACTIVE_STATUSES = ['New', 'Pending', 'Running'];\n\nexport const ReplicationControllerFactory: ResourceActionFactory = {\n  RollbackDeploymentConfigAction: (kind: K8sKind, obj: ReplicationControllerKind): Action => ({\n    id: 'rollback-deployment-config',\n    label: i18next.t('console-app~Rollback'),\n    disabled: INACTIVE_STATUSES.includes(\n      obj?.metadata?.annotations?.['openshift.io/deployment.phase'],\n    ),\n    cta: () =>\n      rollbackModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: DeploymentConfigModel.apiGroup,\n      resource: DeploymentConfigModel.plural,\n      name: getOwnerNameByKind(obj, DeploymentConfigModel),\n      namespace: obj?.metadata?.namespace,\n      verb: 'update',\n    },\n  }),\n  CancelRollout: (kind: K8sKind, obj: ReplicationControllerKind): Action => ({\n    id: 'cancel-rollout',\n    label: i18next.t('console-app~Cancel rollout'),\n    cta: () =>\n      confirmModal({\n        title: i18next.t('console-app~Cancel rollout'),\n        message: i18next.t('console-app~Are you sure you want to cancel this rollout?'),\n        btnText: i18next.t('console-app~Yes, cancel'),\n        cancelText: i18next.t(\"console-app~No, don't cancel\"),\n        executeFn: () =>\n          k8sPatch(kind, obj, [\n            {\n              op: 'add',\n              path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n              value: 'true',\n            },\n            {\n              op: 'add',\n              path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n              value: 'cancelled by the user',\n            },\n          ]),\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n"],"sourceRoot":""}