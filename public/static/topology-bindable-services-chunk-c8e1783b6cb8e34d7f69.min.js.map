{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/operators/operators-data-transformer.ts","webpack:///./packages/dev-console/src/components/topology/bindable-services/data-transformer.ts","webpack:///./packages/dev-console/src/components/topology/bindable-services/isBindable.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/dev-console/src/components/topology/const.ts"],"names":["edgesFromServiceBinding","source","sbrs","sourceBindings","forEach","sbr","edgeExists","reference","spec","application","resource","plural","name","metadata","labelSelector","matchLabels","matches","push","getServiceBindingEdges","dc","obsGroups","installedOperators","edges","length","services","bss","targetGroup","find","group","kind","target","uid","id","type","data","getOperatorGroupResource","resources","clusterServiceVersions","operatorBackedServiceKindMap","ownerReference","ownerReferences","ownerUid","nodeResourceKind","operatorBackedServiceKind","appGroup","labels","operator","op","csvName","operatorName","groupUid","operatorGroupItem","apiVersion","getOperatorGroupResources","key","groupResource","getOperatorTopologyDataModel","namespace","workloads","operatorsDataModel","nodes","serviceBindingRequests","Promise","resolve","isServiceBindable","BINDABLE_PROPS","width","height","visible","style","padding","getBindableServiceBindingEdges","rhoasNodes","targetNode","node","getBindableServicesTopologyDataModel","_namespace","watchedBindableResources","map","servicesDataModel","filter","obj","resKindMap","csvData","icon","undefined","trapezoid","getTopologyBindableServiceNodes","model","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","getType","groupResources","nextResource","resourceKind","Error","t","all","createTopologyResourceConnection","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","className","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","status","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","getTopologyEdgeItems","deployment","edgeApiVersion","edgeKind","edgeName","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","element","NodeType","EdgeType","KameletType","TYPE_BINDABLE_NODE"],"mappings":"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","file":"topology-bindable-services-chunk-c8e1783b6cb8e34d7f69.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { EdgeModel, Model } from '@patternfly/react-topology/dist/esm/types';\nimport * as _ from 'lodash';\nimport {\n  K8sResourceKind,\n  LabelSelector,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedKnResource } from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager/src';\nimport {\n  isOperatorBackedService,\n  getOperatorBackedServiceKindMap,\n} from '@console/shared/src/utils/operator-utils';\nimport { TYPE_SERVICE_BINDING } from '../const';\nimport { getTopologyEdgeItems } from '../data-transforms/transform-utils';\nimport { TopologyDataResources } from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const edgesFromServiceBinding = (\n  source: K8sResourceKind,\n  sbrs: K8sResourceKind[],\n): K8sResourceKind[] => {\n  const sourceBindings = [];\n  if (!sbrs) {\n    return sourceBindings;\n  }\n  sbrs.forEach((sbr) => {\n    let edgeExists = false;\n    const reference = referenceFor(source);\n    if (reference && sbr?.spec?.application?.resource === modelFor(reference)?.plural) {\n      if (sbr?.spec?.application?.name === source.metadata.name) {\n        edgeExists = true;\n      } else {\n        const matchLabels = sbr?.spec?.application?.labelSelector?.matchLabels;\n        if (matchLabels) {\n          const sbrSelector = new LabelSelector(sbr.spec.application.labelSelector);\n          if (sbrSelector.matches(source)) {\n            edgeExists = true;\n          }\n        }\n      }\n    }\n    edgeExists && sourceBindings.push(sbr);\n  });\n  return sourceBindings;\n};\n\nexport const getServiceBindingEdges = (\n  dc: K8sResourceKind,\n  obsGroups: K8sResourceKind[],\n  sbrs: K8sResourceKind[],\n  installedOperators: K8sResourceKind[],\n): EdgeModel[] => {\n  const edges = [];\n  if (!sbrs?.length || !installedOperators?.length) {\n    return edges;\n  }\n\n  _.forEach(edgesFromServiceBinding(dc, sbrs), (sbr) => {\n    _.forEach(sbr.spec.services, (bss) => {\n      if (bss) {\n        const targetGroup = obsGroups.find(\n          (group) => group.kind === bss.kind && group.metadata.name === bss.name,\n        );\n        const target = targetGroup?.metadata.uid;\n        const source = dc.metadata.uid;\n        if (source && target) {\n          edges.push({\n            id: `${source}_${target}`,\n            type: TYPE_SERVICE_BINDING,\n            source,\n            target,\n            resource: sbr,\n            data: { sbr },\n          });\n        }\n      }\n    });\n  });\n\n  return edges;\n};\n\nexport const getOperatorGroupResource = (\n  resource: K8sResourceKind,\n  resources?: TopologyDataResources,\n): { operatorGroupItem: K8sResourceKind; csvName: string } => {\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  const operatorBackedServiceKindMap = getOperatorBackedServiceKindMap(installedOperators);\n  // added this as needs to hide operator backed if belong to source\n  if (resources && isOperatorBackedKnResource(resource, resources)) {\n    return null;\n  }\n\n  if (isOperatorBackedService(resource, installedOperators)) {\n    const ownerReference = resource?.metadata?.ownerReferences?.[0];\n    const ownerUid = ownerReference?.uid;\n    const nodeResourceKind = ownerReference?.kind;\n    const operatorBackedServiceKind = operatorBackedServiceKindMap?.[nodeResourceKind];\n    const appGroup = resource?.metadata?.labels?.['app.kubernetes.io/part-of'];\n    const operator: K8sResourceKind =\n      (installedOperators.find((op) => op.metadata.uid === ownerUid) as K8sResourceKind) ||\n      operatorBackedServiceKind;\n    const csvName = operator.metadata.name;\n    const operatorName =\n      ownerReference?.name ?? appGroup\n        ? `${appGroup}:${operator.metadata.name}`\n        : operator.metadata.name;\n\n    const groupUid = ownerReference?.uid ?? `${operatorName}:${operator.metadata.uid}`;\n    const operatorGroupItem = _.merge({}, operator, {\n      apiVersion: ownerReference?.apiVersion ?? '',\n      kind: ownerReference?.kind ?? 'Operator',\n      metadata: {\n        name: ownerReference?.name ?? operator.metadata.name,\n        uid: groupUid,\n      },\n    });\n    return { operatorGroupItem, csvName };\n  }\n  return null;\n};\n\nexport const getOperatorGroupResources = (resources: TopologyDataResources) => {\n  const obsGroups = [];\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources[key]?.data && resources[key].data.length) {\n      resources[key].data.forEach((resource) => {\n        const groupResource = getOperatorGroupResource(resource, resources);\n        if (!groupResource?.operatorGroupItem) {\n          return;\n        }\n        obsGroups.push(groupResource.operatorGroupItem);\n      });\n    }\n  });\n  return obsGroups;\n};\n\nexport const getOperatorTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n): Promise<Model> => {\n  const operatorsDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n  const obsGroups = getOperatorGroupResources(resources);\n  const serviceBindingRequests = resources?.serviceBindingRequests?.data;\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  if (installedOperators?.length) {\n    workloads.forEach((dc) => {\n      operatorsDataModel.edges.push(\n        ...[\n          ...getServiceBindingEdges(dc, obsGroups, serviceBindingRequests, installedOperators),\n          ...getTopologyEdgeItems(dc, obsGroups),\n        ],\n      );\n    });\n  }\n\n  return Promise.resolve(operatorsDataModel);\n};\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager';\nimport {\n  getDefaultOperatorIcon,\n  getImageForCSVIcon,\n  getOperatorBackedServiceKindMap,\n} from '@console/shared';\nimport {\n  NODE_HEIGHT,\n  NODE_PADDING,\n  NODE_WIDTH,\n  TYPE_SERVICE_BINDING,\n} from '@console/topology/src/const';\nimport { getTopologyNodeItem } from '@console/topology/src/data-transforms/transform-utils';\nimport { edgesFromServiceBinding } from '@console/topology/src/operators/operators-data-transformer';\nimport { TopologyDataObject, TopologyDataResources } from '@console/topology/src/topology-types';\nimport { TYPE_BINDABLE_NODE } from '../const';\nimport { getBindableServicesList } from './fetch-bindable-services-utils';\n\nexport const isServiceBindable = (resource: K8sResourceKind) =>\n  resource.metadata.labels?.['app.kubernetes.io/component'] === 'external-service';\n\nconst BINDABLE_PROPS = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\nconst getTopologyBindableServiceNodes = (\n  services: K8sResourceKind[],\n  resources: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = services.filter(isServiceBindable).map((obj) => {\n    const resKindMap = getOperatorBackedServiceKindMap(\n      resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[],\n    );\n    const csvData = resKindMap?.[obj.kind];\n    const data: TopologyDataObject = {\n      id: obj.metadata.uid,\n      name: obj.metadata.name,\n      type: TYPE_BINDABLE_NODE,\n      resource: obj,\n      resources: { obj },\n      data: {\n        resource: obj,\n        icon: getImageForCSVIcon(csvData?.spec?.icon?.[0]) || getDefaultOperatorIcon(),\n      },\n    };\n    return getTopologyNodeItem(\n      obj,\n      TYPE_BINDABLE_NODE,\n      data,\n      BINDABLE_PROPS,\n      undefined,\n      undefined,\n      NodeShape.trapezoid,\n    );\n  });\n\n  return nodes;\n};\n\nexport const getBindableServiceBindingEdges = (\n  dc: K8sResourceKind,\n  rhoasNodes: NodeModel[],\n  sbrs: K8sResourceKind[],\n): EdgeModel[] => {\n  const edges = [];\n  if (!sbrs?.length || !rhoasNodes?.length) {\n    return edges;\n  }\n\n  edgesFromServiceBinding(dc, sbrs).forEach((sbr) => {\n    sbr.spec.services?.forEach((bss) => {\n      if (bss) {\n        const targetNode = rhoasNodes.find(\n          (node) =>\n            node.data.resource.kind === bss.kind && node.data.resource.metadata.name === bss.name,\n        );\n        if (targetNode) {\n          const target = targetNode.data.resource.metadata.uid;\n          const source = dc.metadata.uid;\n          if (source && target) {\n            edges.push({\n              id: `${source}_${target}`,\n              type: TYPE_SERVICE_BINDING,\n              source,\n              target,\n              resource: sbr,\n              data: { sbr },\n            });\n          }\n        }\n      }\n    });\n  });\n\n  return edges;\n};\n\nexport const getBindableServicesTopologyDataModel = async (\n  _namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n): Promise<Model> => {\n  const serviceBindingRequests = resources?.serviceBindingRequests?.data;\n  const bindableResourcesList = getBindableServicesList();\n  const watchedBindableResources = bindableResourcesList.map(\n    ({ kind }) => resources[kind]?.data || [],\n  );\n\n  const servicesDataModel: Model = {\n    edges: [],\n    nodes: [],\n  };\n  watchedBindableResources.forEach((services) => {\n    servicesDataModel.nodes.push(...getTopologyBindableServiceNodes(services, resources));\n  });\n\n  if (servicesDataModel.nodes.length && serviceBindingRequests?.length) {\n    workloads.forEach((resource) =>\n      servicesDataModel.edges.push(\n        ...getBindableServiceBindingEdges(\n          resource,\n          servicesDataModel.nodes,\n          serviceBindingRequests,\n        ),\n      ),\n    );\n  }\n\n  return servicesDataModel;\n};\n","import { Model } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nexport const isServiceBindable = (resource: K8sResourceKind, model: Model): boolean => {\n  if (!model?.nodes?.length) {\n    return false;\n  }\n  return resource.metadata.labels?.['app.kubernetes.io/component'] === 'external-service';\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","export const TYPE_BINDABLE_NODE = 'bindable-node';\n"],"sourceRoot":""}