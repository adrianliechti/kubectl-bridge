{"version":3,"sources":["webpack:///./public/components/modals/confirm-modal.jsx"],"names":["ConfirmModal","props","super","this","_submit","bind","_cancel","cancel","event","preventDefault","handlePromise","executeFn","supressNotifications","then","close","title","titleKey","message","messageKey","btnText","btnTextKey","cancelText","cancelTextKey","submitDanger","t","onSubmit","name","className","errorMessage","state","inProgress","submitText","propTypes","isRequired","confirmModal"],"mappings":"6FAAA,8FAOA,MAAMA,UAAqB,KACzB,YAAYC,GACVC,MAAMD,GACNE,KAAKC,QAAUD,KAAKC,QAAQC,KAAKF,MACjCA,KAAKG,QAAUH,KAAKF,MAAMM,OAAOF,KAAKF,MAGxC,QAAQK,GACNA,EAAMC,iBAENN,KAAKO,cACHP,KAAKF,MAAMU,UAAU,KAAM,CACzBC,sBAAsB,KAExBC,KAAKV,KAAKF,MAAMa,OAGpB,SACE,MAAM,MACJC,EAAK,SACLC,EAAQ,QACRC,EAAO,WACPC,EAAU,QACVC,EAAO,WACPC,EAAU,WACVC,EAAU,cACVC,EAAa,aACbC,GACEpB,KAAKF,MAET,OACE,gBAAC,cAAW,KACRuB,GACA,wBAAMC,SAAUtB,KAAKC,QAASsB,KAAK,OAAOC,UAAU,iBAClD,gBAAC,IAAU,KAAEX,EAAWQ,EAAER,GAAYD,GACtC,gBAAC,IAAS,KAAEG,EAAaM,EAAEN,GAAcD,GACzC,gBAAC,IAAiB,CAChBW,aAAczB,KAAK0B,MAAMD,aACzBE,WAAY3B,KAAK0B,MAAMC,WACvBC,WAAYX,EAAaI,EAAEJ,GAAcD,GAAWK,EAAE,WACtDjB,OAAQJ,KAAKG,QACbe,WAAYC,EAAgBE,EAAEF,GAAiBD,GAAcG,EAAE,UAC/DD,aAAcA,OAQ5BvB,EAAagC,UAAY,CACvBb,QAAS,OACTC,WAAY,SACZb,OAAQ,OAAe0B,WACvBZ,WAAY,OACZC,cAAe,SACfR,MAAO,OAAemB,WACtBtB,UAAW,OAAesB,WAC1BhB,QAAS,OACTC,WAAY,SACZH,MAAO,OACPC,SAAU,SACVO,aAAc,QAGT,MAAMW,EAAe,YAAoBlC","file":"confirm-modal-chunk-60ce49d67111c30b1c39.min.js","sourcesContent":["import * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport * as PropTypes from 'prop-types';\n\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { PromiseComponent } from '../utils';\n\nclass ConfirmModal extends PromiseComponent {\n  constructor(props) {\n    super(props);\n    this._submit = this._submit.bind(this);\n    this._cancel = this.props.cancel.bind(this);\n  }\n\n  _submit(event) {\n    event.preventDefault();\n\n    this.handlePromise(\n      this.props.executeFn(null, {\n        supressNotifications: true,\n      }),\n    ).then(this.props.close);\n  }\n\n  render() {\n    const {\n      title,\n      titleKey,\n      message,\n      messageKey,\n      btnText,\n      btnTextKey,\n      cancelText,\n      cancelTextKey,\n      submitDanger,\n    } = this.props;\n\n    return (\n      <Translation>\n        {(t) => (\n          <form onSubmit={this._submit} name=\"form\" className=\"modal-content\">\n            <ModalTitle>{titleKey ? t(titleKey) : title}</ModalTitle>\n            <ModalBody>{messageKey ? t(messageKey) : message}</ModalBody>\n            <ModalSubmitFooter\n              errorMessage={this.state.errorMessage}\n              inProgress={this.state.inProgress}\n              submitText={btnTextKey ? t(btnTextKey) : btnText || t('Confirm')}\n              cancel={this._cancel}\n              cancelText={cancelTextKey ? t(cancelTextKey) : cancelText || t('Cancel')}\n              submitDanger={submitDanger}\n            />\n          </form>\n        )}\n      </Translation>\n    );\n  }\n}\nConfirmModal.propTypes = {\n  btnText: PropTypes.node,\n  btnTextKey: PropTypes.string,\n  cancel: PropTypes.func.isRequired,\n  cancelText: PropTypes.node,\n  cancelTextKey: PropTypes.string,\n  close: PropTypes.func.isRequired,\n  executeFn: PropTypes.func.isRequired,\n  message: PropTypes.node,\n  messageKey: PropTypes.string,\n  title: PropTypes.node,\n  titleKey: PropTypes.string,\n  submitDanger: PropTypes.bool,\n};\n\nexport const confirmModal = createModalLauncher(ConfirmModal);\n"],"sourceRoot":""}