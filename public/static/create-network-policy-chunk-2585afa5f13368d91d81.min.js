(window.webpackJsonp=window.webpackJsonp||[]).push([[124,120],{11844:function(e,t,a){"use strict";a.d(t,"a",(function(){return _}));var n=a(0),o=a(80),r=a(1922),l=a(1939),s=a(19),c=a(242),i=a(219),p=a(472),d=a(12105),u=a(12106),m=a(966),g=a(840),f=a(7),b=a(14),h=a(5410),v=a(5),y=a(10),E=a(8),k=a(8396),w=a(15),S=a(206),O=a(11845),N=a(8399),x=a(7562),j=a(11849),C=a(8400),T=a(8401);const P=()=>({key:g.a(),peers:[],ports:[]}),_=({formData:e,onChange:t})=>{const{t:a}=Object(f.useTranslation)(),g=Object(S.a)(w.O.OPENSHIFT),{ns:_}=Object(b.useParams)(),A=Object(x.d)(e),I=Object(x.c)(A,a),[M,F]=n.useState(I),[R,D]=n.useState(!1),[L,B]=n.useState(""),[V,$]=n.useState(!0),[K,Y]=Object(k.a)(),q=n.useRef(),U=Object(T.a)(),z=U?y.MultiNetworkPolicyModel:y.NetworkPolicyModel;if(Object(x.b)(M))return n.createElement("div",{className:"co-m-pane__body"},n.createElement(o.a,{variant:o.b.danger,title:a("console-app~This NetworkPolicy cannot be displayed in form. Please switch to the YAML editor.")},M.error));const G=e=>{F(e),t(Object(x.e)(e,U))},W=e=>G(Object.assign(Object.assign({},M),{ingress:Object.assign(Object.assign({},M.ingress),{rules:e})})),Z=e=>G(Object.assign(Object.assign({},M),{egress:Object.assign(Object.assign({},M.egress),{rules:e})})),J=(e,t)=>{Object(h.confirmModal)({title:n.createElement(n.Fragment,null,n.createElement(w.tc,{className:"co-icon-space-r"}),a("console-app~Are you sure?")),message:e,btnText:a("console-app~Remove all"),executeFn:()=>(t(),Promise.resolve())})};return n.createElement("div",{className:"co-m-pane__body co-m-pane__form"},n.createElement(r.a,{onSubmit:e=>{e.preventDefault();const t=Object(x.a)(M,a);if(t)return void B(t.error);const n=Object(x.e)(M,U);D(!0),Object(E.jb)(z,n).then(()=>{D(!1),v.Vb.push(Object(v.uc)(z,M.name,M.namespace))}).catch(e=>{B(e.message),D(!1)})},className:"co-create-networkpolicy"},V&&Y&&void 0===(null==K?void 0:K.PolicyEgress)&&void 0===(null==K?void 0:K.PolicyPeerIPBlockExceptions)&&n.createElement(o.a,{variant:"info",title:a("console-app~When using the OpenShift SDN cluster network provider:"),actionClose:n.createElement(l.a,{onClose:()=>$(!1)})},n.createElement("ul",null,n.createElement("li",null,a("console-app~Egress network policy is not supported.")),n.createElement("li",null,a("console-app~IP block exceptions are not supported and would cause the entire IP block section to be ignored."))),n.createElement("p",null,a("Refer to your cluster administrator to know which network provider is used.")),!Object(v.hc)()&&n.createElement("p",null,a("console-app~More information:"),"Â ",n.createElement(v.z,{href:Object(v.Sb)(g),text:a("console-app~NetworkPolicies documentation")}))),n.createElement("div",{className:"form-group co-create-networkpolicy__name"},n.createElement("label",{className:"co-required",htmlFor:"name"},a("console-app~Policy name")),n.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:e=>G(Object.assign(Object.assign({},M),{name:e.currentTarget.value})),value:M.name,placeholder:"my-policy",id:"name",name:"name",required:!0})),U&&n.createElement(O.a,{namespace:_,networkPolicy:M,onPolicyChange:G}),n.createElement("div",{className:"form-group co-create-networkpolicy__podselector"},n.createElement(N.a,{selectorType:"pod",helpText:a("console-app~If no pod selector is provided, the policy will apply to all pods in the namespace."),values:M.podSelector,onChange:e=>{G(Object.assign(Object.assign({},M),{podSelector:e}))},dataTest:"main-pod-selector"}),n.createElement("p",null,n.createElement(f.Trans,{ns:"console-app"},"Show a preview of the"," ",n.createElement(s.a,{"data-test":"show-affected-pods",ref:q,variant:"link",isInline:!0},"affected pods")," ","that this policy will apply to")),n.createElement(C.a,{policyNamespace:M.namespace,podSelector:M.podSelector,popoverRef:q,dataTest:"policy-pods-preview"})),n.createElement(c.a,{headingLevel:"h2"},a("console-app~Policy type")),n.createElement(i.a,{role:"group",isInline:!0,label:a("console-app~Select default ingress and egress deny rules")},n.createElement(p.a,{label:a("console-app~Deny all ingress traffic"),onChange:e=>G(Object.assign(Object.assign({},M),{ingress:Object.assign(Object.assign({},M.ingress),{denyAll:e.currentTarget.checked})})),isChecked:M.ingress.denyAll,name:"denyAllIngress",id:"denyAllIngress"}),Y&&!1!==K.PolicyEgress&&n.createElement(p.a,{label:a("console-app~Deny all egress traffic"),onChange:e=>G(Object.assign(Object.assign({},M),{egress:Object.assign(Object.assign({},M.egress),{denyAll:e.currentTarget.checked})})),isChecked:M.egress.denyAll,name:"denyAllEgress",id:"denyAllEgress"})),!M.ingress.denyAll&&n.createElement(d.a,{toggleAriaLabel:"Ingress",className:"co-create-networkpolicy__expandable-xl",isExpanded:!0,header:n.createElement(u.a,{titleText:{text:a("console-app~Ingress"),id:"ingress-header"},titleDescription:a("console-app~Add ingress rules to be applied to your selected pods. Traffic is allowed from pods if it matches at least one rule."),actions:n.createElement(n.Fragment,null,n.createElement(s.a,{variant:"link",isDisabled:0===M.ingress.rules.length,onClick:()=>{J(a("console-app~This action will remove all rules within the Ingress section and cannot be undone."),()=>W([]))},"data-test":"remove-all-ingress"},a("console-app~Remove all")),n.createElement(s.a,{"data-test":"add-ingress",variant:"secondary",onClick:()=>{W([P(),...M.ingress.rules])}},a("console-app~Add ingress rule")))})},M.ingress.rules.map((e,t)=>n.createElement(j.a,{key:e.key,policyNamespace:M.namespace,direction:"ingress",rule:e,onChange:e=>{const a=[...M.ingress.rules];a[t]=e,W(a)},onRemove:()=>(e=>{W([...M.ingress.rules.slice(0,e),...M.ingress.rules.slice(e+1)])})(t)}))),!M.egress.denyAll&&Y&&!1!==K.PolicyEgress&&n.createElement(d.a,{toggleAriaLabel:"Egress",className:"co-create-networkpolicy__expandable-xl",isExpanded:!0,header:n.createElement(u.a,{titleText:{text:a("console-app~Egress"),id:"egress-header"},titleDescription:a("console-app~Add egress rules to be applied to your selected pods. Traffic is allowed to pods if it matches at least one rule."),actions:n.createElement(n.Fragment,null,n.createElement(s.a,{variant:"link",isDisabled:0===M.egress.rules.length,onClick:()=>{J(a("console-app~This action will remove all rules within the Egress section and cannot be undone."),()=>Z([]))},"data-test":"remove-all-egress"},a("console-app~Remove all")),n.createElement(s.a,{"data-test":"add-egress",variant:"secondary",onClick:()=>{Z([P(),...M.egress.rules])}},a("console-app~Add egress rule")))})},M.egress.rules.map((e,t)=>n.createElement(j.a,{key:e.key,policyNamespace:M.namespace,direction:"egress",rule:e,onChange:e=>{const a=[...M.egress.rules];a[t]=e,Z(a)},onRemove:()=>(e=>{Z([...M.egress.rules.slice(0,e),...M.egress.rules.slice(e+1)])})(t)}))),n.createElement(v.g,{errorMessage:L,inProgress:R},n.createElement(m.a,{className:"pf-v5-c-form"},n.createElement(s.a,{type:"submit",id:"save-changes",variant:"primary"},a("console-app~Create")),n.createElement(s.a,{onClick:v.Vb.goBack,id:"cancel",variant:"secondary"},a("console-app~Cancel"))))))}},11845:function(e,t,a){"use strict";var n=a(0),o=a(80),r=a(219),l=a(7),s=a(83),c=a(5),i=a(11846),p=a(15),d=a(11847);const u=Object(s.getGroupVersionKindForModel)(i.a);t.a=({namespace:e,networkPolicy:t,onPolicyChange:a})=>{const{t:i}=Object(l.useTranslation)(),[m,g,f]=Object(s.useK8sWatchResource)({groupVersionKind:u,isList:!0,namespace:e}),[b,h,v]=Object(s.useK8sWatchResource)("default"!==e?{groupVersionKind:u,isList:!0,namespace:"default"}:null),y=n.useMemo(()=>[...m||[],...b||[]].map(e=>({value:`${Object(p.ed)(e)}/${Object(p.dd)(e)}`})),[m,b]);return g&&h?f||v?n.createElement(o.a,{title:i("Error"),variant:o.b.danger},f):n.createElement(r.a,{fieldId:"multi-networkpolicy-policyfor",isRequired:!0,label:i("console-app~Policy for")},n.createElement(d.a,{options:y,placeholder:i("console-app~Select one or more NetworkAttachmentDefinitions"),selected:t.policyFor||[],setSelected:e=>{a(Object.assign(Object.assign({},t),{policyFor:e}))}})):n.createElement(c.R,null)}},11846:function(e,t,a){"use strict";var n=a(8397);a.d(t,"a",(function(){return n.a}))},11847:function(e,t,a){"use strict";var n=a(0),o=a(354),r=a(294),l=a(205),s=a(7561),c=a(11848),i=a(8398);t.a=({options:e,placeholder:t,selected:a,setSelected:p})=>{const[d,u]=n.useState(!1),[m,g]=n.useState(""),[f,b]=n.useState(null),h=n.useRef(),v=m?Object(i.a)(e,m):e,y=e=>{var t;e&&e!==s.a&&(p(a.includes(e)?a.filter(t=>t!==e):[...a,e]),u(!0)),null===(t=h.current)||void 0===t||t.focus()};return n.createElement(o.a,{id:"multi-typeahead-select",isOpen:d,onOpenChange:()=>u(!1),onSelect:(e,t)=>y(t),selected:a,toggle:e=>n.createElement(c.a,{focusedItemIndex:f,inputValue:m,isOpen:d,onSelect:y,placeholder:t,selected:a,selectOptions:v,setFocusedItemIndex:b,setInputValue:g,setIsOpen:u,setSelected:p,textInputRef:h,toggleRef:e})},n.createElement(r.a,{id:"select-multi-typeahead-listbox",isAriaMultiselectable:!0},v.map((e,t)=>n.createElement(l.a,Object.assign({className:e.className,id:"select-multi-typeahead-"+e.value.replace(" ","-"),isFocused:f===t,key:e.value||e.children},e),e.children||e.value))))}},11848:function(e,t,a){"use strict";var n=a(0),o=a(165),r=a(953),l=a(1395),s=a(1931),c=a(514),i=a(1396),p=a(19),d=a(183),u=a(22),m=a(7),g=a(7561),f=a(8398);t.a=({focusedItemIndex:e,inputValue:t,isOpen:a,onSelect:b,placeholder:h,selected:v,selectOptions:y,setFocusedItemIndex:E,setInputValue:k,setIsOpen:w,setSelected:S,textInputRef:O,toggleRef:N})=>{const{t:x}=Object(m.useTranslation)(),j=()=>{w(!a)};return n.createElement(o.a,{innerRef:N,isExpanded:a,isFullWidth:!0,onClick:j,variant:"typeahead"},n.createElement(r.a,{isPlain:!0},n.createElement(l.a,{"aria-controls":"select-multi-typeahead-listbox",autoComplete:"off",id:"multi-typeahead-select-input",innerRef:O,isExpanded:a,onChange:(e,t)=>{k(t),E(null),t&&w(!0)},onClick:j,onKeyDown:t=>{const n=y.filter(e=>!e.isDisabled),[o]=n,r=e?null==n?void 0:n[e]:o;switch(t.key){case"Enter":if(!a)return void w(e=>!e);a&&r.value!==g.a&&b(r.value);break;case"Tab":case"Escape":w(!1);break;case"ArrowUp":case"ArrowDown":if(t.preventDefault(),a){const a=Object(f.b)(t.key,e,y);null!==a&&E(a)}}},placeholder:h,role:"combobox",value:t},n.createElement(s.a,{"aria-label":x("console-app~Current selections")},v.map(e=>n.createElement(c.a,{key:e,onClick:t=>{t.stopPropagation(),b(e)}},e)))),n.createElement(i.a,null,!Object(u.a)(v)&&n.createElement(p.a,{"aria-label":x("console-app~Clear input value"),onClick:()=>{var e;k(""),S([]),null===(e=null==O?void 0:O.current)||void 0===e||e.focus()},variant:p.d.plain},n.createElement(d.a,{"aria-hidden":!0})))))}},11849:function(e,t,a){"use strict";a.d(t,"a",(function(){return k}));var n=a(0),o=a(192),r=a(295),l=a(19),s=a(296),c=a(12105),i=a(12106),p=a(155),d=a(6262),u=a(29),m=a(840),g=a(7),f=a(11850),b=a(11851),h=a(11852),v=a(11857);const y=(e,t)=>t.ipBlock?"ingress"===e?u.a.t("console-app~Allow traffic from peers by IP block"):u.a.t("console-app~Allow traffic to peers by IP block"):t.namespaceSelector?"ingress"===e?u.a.t("console-app~Allow traffic from pods inside the cluster"):u.a.t("console-app~Allow traffic to pods inside the cluster"):"ingress"===e?u.a.t("console-app~Allow traffic from pods in the same namespace"):u.a.t("console-app~Allow traffic to pods in the same namespace"),E=e=>{const t=m.a();switch(e){case"sameNS":return{key:t,podSelector:[]};case"anyNS":return{key:t,podSelector:[],namespaceSelector:[]};case"ipBlock":default:return{key:t,ipBlock:{cidr:"",except:[]}}}},k=e=>{const{t:t}=Object(g.useTranslation)(),{policyNamespace:a,direction:u,onChange:m,onRemove:k,rule:w}=e,S=t("ingress"===u?"console-app~Sources added to this rule will allow traffic to the pods defined above. Sources in this list are combined using a logical OR operation.":"console-app~Destinations added to this rule will allow traffic from the pods defined above. Destinations in this list are combined using a logical OR operation.");return n.createElement(o.a,null,n.createElement(r.a,{component:"h4"},n.createElement("div",{className:"co-create-networkpolicy__rule-header"},n.createElement("label",null,t("ingress"===u?"console-app~Ingress rule":"console-app~Egress rule")),n.createElement("div",{className:"co-create-networkpolicy__rule-header-right"},n.createElement(l.a,{variant:"link",onClick:k,"data-test":`remove-${u}-rule`},t("console-app~Remove"))),n.createElement(f.a,{title:t("ingress"===u?"console-app~Add allowed source":"console-app~Add allowed destination"),onSelect:e=>{w.peers=[E(e),...w.peers],m(w)}}))),n.createElement(s.a,null,n.createElement("div",{className:"help-block",id:"ingress-peers-help"},n.createElement("p",null,S))),n.createElement(s.a,null,w.peers.map((e,o)=>{const r=e.ipBlock?n.createElement(b.a,{direction:u,ipBlock:e.ipBlock,onChange:e=>{w.peers[o].ipBlock=e,m(w)}}):n.createElement(h.a,{policyNamespace:a,direction:u,namespaceSelector:e.namespaceSelector,podSelector:e.podSelector||[],onChange:(e,t)=>{w.peers[o].podSelector=e,w.peers[o].namespaceSelector=t,m(w)}});return n.createElement("div",{className:"form-group",key:e.key},n.createElement(c.a,{toggleAriaLabel:"Peer",isExpanded:!0,header:n.createElement(i.a,{titleText:{text:y(u,e),id:"peer-header-"+o},actions:n.createElement(l.a,{"aria-label":t("console-app~Remove peer"),className:"co-create-networkpolicy__remove-peer",onClick:()=>(e=>{w.peers=[...w.peers.slice(0,e),...w.peers.slice(e+1)],m(w)})(o),type:"button",variant:"plain","data-test":"remove-peer"},n.createElement(d.a,null))})},r),n.createElement(p.a,null))}),n.createElement(v.a,{ports:w.ports,onChange:e=>{w.ports=e,m(w)}})))}},11850:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a(0),o=a(7),r=a(5);const l=e=>{const{t:t}=Object(o.useTranslation)(),{title:a,onSelect:l}=e,s=[t("console-app~Allow pods from the same namespace"),t("console-app~Allow pods from inside the cluster"),t("console-app~Allow peers by IP block")];return n.createElement("div",{className:"form-group co-create-networkpolicy__add-peer"},n.createElement(r.t,{dropDownClassName:"dropdown--full-width",items:{sameNS:n.createElement(n.Fragment,null,s[0]),anyNS:n.createElement(n.Fragment,null,s[1]),ipblock:n.createElement(n.Fragment,null,s[2])},title:a,onChange:l,noSelection:!0,buttonClassName:"pf-v5-c-button pf-m-secondary","data-test":"add-peer"}))}},11851:function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a(0),o=a(19),r=a(408),l=a(407),s=a(840),c=a(7),i=a(8396);const p=e=>{const{t:t}=Object(c.useTranslation)(),{onChange:a,ipBlock:p,direction:d}=e,[u,m]=Object(i.a)();return n.createElement(n.Fragment,null,n.createElement("div",{className:"form-group co-create-networkpolicy__ipblock"},n.createElement("label",{className:"co-required",htmlFor:"cidr"},t("console-app~CIDR")),n.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:e=>{p.cidr=e.currentTarget.value,a(p)},value:p.cidr,placeholder:"10.2.1.0/16",id:"cidr",name:"cidr","aria-describedby":"ipblock-help","data-test":"ipblock-cidr-input",required:!0}),n.createElement("div",{className:"help-block"},n.createElement("p",null,t("ingress"===d?"console-app~If this field is empty, traffic will be allowed from all external sources.":"console-app~If this field is empty, traffic will be allowed to all external sources.")))),m&&!1!==u.PolicyPeerIPBlockExceptions&&n.createElement("div",{className:"form-group co-create-networkpolicy__exceptions"},n.createElement("label",null,t("console-app~Exceptions")),p.except.map((e,l)=>n.createElement("div",{className:"pf-v5-c-input-group",key:e.key},n.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:e=>((e,t)=>{p.except[e].value=t,a(p)})(l,e.currentTarget.value),placeholder:"10.2.1.0/12","aria-describedby":"ports-help",name:"exception-"+l,id:"exception-"+l,value:e.value,"data-test":"ipblock-exception-input"}),n.createElement(o.a,{"aria-label":t("console-app~Remove exception"),className:"co-create-networkpolicy__remove-exception",onClick:()=>{p.except=[...p.except.slice(0,l),...p.except.slice(l+1)],a(p)},type:"button",variant:"plain","data-test":"ipblock-remove-exception"},n.createElement(r.a,null)))),n.createElement("div",{className:"co-toolbar__group co-toolbar__group--left co-create-networkpolicy__add-exception"},n.createElement(o.a,{className:"pf-m-link--align-left",onClick:()=>{p.except.push({key:s.a("exception-"),value:""}),a(p)},type:"button",variant:"link","data-test":"ipblock-add-exception"},n.createElement(l.a,{className:"co-icon-space-r"}),t("console-app~Add exception")))))}},11852:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var n=a(0),o=a(19),r=a(7),l=a(8399),s=a(8400);const c=e=>{const{t:t}=Object(r.useTranslation)(),{policyNamespace:a,direction:c,onChange:i,podSelector:p,namespaceSelector:d}=e,u=n.useRef();let m;return m=t("ingress"===c?d?"console-app~If no pod selector is provided, traffic from all pods in eligible namespaces will be allowed.":"console-app~If no pod selector is provided, traffic from all pods in this namespace will be allowed.":d?"console-app~If no pod selector is provided, traffic to all pods in eligible namespaces will be allowed.":"console-app~If no pod selector is provided, traffic to all pods in this namespace will be allowed."),n.createElement(n.Fragment,null,d&&n.createElement("div",{className:"form-group co-create-networkpolicy__namespaceselector"},n.createElement(l.a,{selectorType:"namespace",helpText:t("console-app~If no namespace selector is provided, pods from all namespaces will be eligible."),values:d,onChange:e=>{i(p,e)},dataTest:"peer-namespace-selector"})),n.createElement("div",{className:"form-group co-create-networkpolicy__podselector"},n.createElement(l.a,{selectorType:"pod",helpText:m,values:p||[],onChange:e=>{i(e,d)},dataTest:"peer-pod-selector"})),n.createElement("p",null,"ingress"===e.direction?n.createElement(r.Trans,{ns:"console-app"},"Show a preview of the"," ",n.createElement(o.a,{"data-test":"show-affected-pods-ingress",ref:u,variant:"link",isInline:!0},"affected pods")," ","that this ingress rule will apply to."):n.createElement(r.Trans,{ns:"console-app"},"Show a preview of the"," ",n.createElement(o.a,{"data-test":"show-affected-pods-egress",ref:u,variant:"link",isInline:!0},"affected pods")," ","that this egress rule will apply to.")),n.createElement(s.a,{policyNamespace:a,podSelector:p,namespaceSelector:d,popoverRef:u,dataTest:"pods-preview-"+e.direction}))}},11857:function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a(0),o=a(19),r=a(408),l=a(407),s=a(840),c=a(7),i=a(5);const p=e=>{const{ports:t,onChange:a}=e,{t:p}=Object(c.useTranslation)(),d=(e,n)=>{a([...t.slice(0,n),e,...t.slice(n+1)])};return n.createElement(n.Fragment,null,n.createElement("div",{className:"form-group co-create-networkpolicy__ports-list"},n.createElement("label",null,p("console-app~Ports")),n.createElement("div",{className:"help-block",id:"ingress-peers-help"},n.createElement("p",null,p("console-app~Add ports to restrict traffic through them. If no ports are provided, your policy will make all ports accessible to traffic."))),t.map((e,l)=>{const s="port-"+l;return n.createElement("div",{className:"pf-v5-c-input-group",key:s},n.createElement(i.t,{items:{TCP:n.createElement(n.Fragment,null,"TCP"),UDP:n.createElement(n.Fragment,null,"UDP"),SCTP:n.createElement(n.Fragment,null,"SCTP")},title:e.protocol,name:s+"-protocol",className:"btn-group",onChange:t=>d(Object.assign(Object.assign({},e),{protocol:t}),l),"data-test":"port-protocol"}),n.createElement("input",{className:"pf-v5-c-form-control",onChange:t=>d(Object.assign(Object.assign({},e),{port:t.currentTarget.value}),l),placeholder:"443","aria-describedby":"ports-help",name:s+"-port",id:s+"-port",value:e.port,"data-test":"port-input"}),n.createElement(o.a,{"aria-label":p("console-app~Remove port"),className:"co-create-networkpolicy__remove-port",onClick:()=>{return e=l,void a([...t.slice(0,e),...t.slice(e+1)]);var e},type:"button",variant:"plain","data-test":"remove-port"},n.createElement(r.a,null)))}),n.createElement("div",{className:"co-toolbar__group co-toolbar__group--left co-create-networkpolicy__add-port"},n.createElement(o.a,{className:"pf-m-link--align-left",onClick:()=>{a([...t,{key:s.a("port-"),port:"",protocol:"TCP"}])},type:"button",variant:"link","data-test":"add-port"},n.createElement(l.a,{className:"co-icon-space-r"}),p("console-app~Add port")))))}},11860:function(e,t,a){},2372:function(e,t,a){"use strict";a.r(t),a.d(t,"CreateNetworkPolicy",(function(){return b}));var n=a(0),o=a(107),r=a(7),l=a(14),s=a(4431),c=a(5),i=a(10),p=a(6692),d=a(614),u=a(1941),m=a(11844),g=a(7562),f=(a(11860),a(8401));const b=()=>{const{t:e}=Object(r.useTranslation)(),t=Object(f.a)(),a={name:"",namespace:Object(l.useParams)().ns,podSelector:[["",""]],ingress:{denyAll:!1,rules:[]},egress:{denyAll:!1,rules:[]}},b=e("console-app~Create by completing the form."),h=e("console-app~Create by manually entering YAML or JSON definitions, or by dragging and dropping a file into the editor."),[v,y]=n.useState(b),E=Object(g.e)(a,t);return n.createElement(n.Fragment,null,n.createElement(c.Z,{className:"create-network-policy__page-heading",title:e("console-app~Create {{kind}}",{kind:t?i.MultiNetworkPolicyModel.kind:i.NetworkPolicyModel.kind}),helpText:v}),n.createElement(p.a,{context:{formContext:{networkPolicy:a},yamlContext:{}},FormEditor:m.a,initialData:E,initialType:d.b.Form,onChangeEditorType:e=>y(e===d.b.Form?b:h),onChange:a=>{const n=Object(g.d)(a),r=Object(g.c)(n,e);if(Object(g.b)(r))throw r.error;{const a=Object(g.e)(r,t);if(!o.a(n,a))throw new Error(e("console-app~Not all YAML property values are supported in the form editor. Some data would be lost."))}},YAMLEditor:({onChange:e,initialYAML:t=""})=>n.createElement(s.AsyncResourceYAMLEditor,{create:!0,hideHeader:!0,initialResource:Object(u.c)(t),onChange:e}),lastViewUserSettingKey:"console.createNetworkPolicy.editor.lastView",displayConversionError:!0}))}},5410:function(e,t,a){"use strict";a.r(t),a.d(t,"confirmModal",(function(){return i}));var n=a(0),o=a(7),r=a(21),l=a(118),s=a(5);class c extends s.bb{constructor(e){super(e),this._submit=this._submit.bind(this),this._cancel=this.props.cancel.bind(this)}_submit(e){e.preventDefault(),this.handlePromise(this.props.executeFn(null,{supressNotifications:!0})).then(this.props.close)}render(){const{title:e,titleKey:t,message:a,messageKey:r,btnText:s,btnTextKey:c,cancelText:i,cancelTextKey:p,submitDanger:d}=this.props;return n.createElement(o.Translation,null,o=>n.createElement("form",{onSubmit:this._submit,name:"form",className:"modal-content"},n.createElement(l.d,null,t?o(t):e),n.createElement(l.a,null,r?o(r):a),n.createElement(l.c,{errorMessage:this.state.errorMessage,inProgress:this.state.inProgress,submitText:c?o(c):s||o("Confirm"),cancel:this._cancel,cancelText:p?o(p):i||o("Cancel"),submitDanger:d})))}}c.propTypes={btnText:r.node,btnTextKey:r.string,cancel:r.func.isRequired,cancelText:r.node,cancelTextKey:r.string,close:r.func.isRequired,executeFn:r.func.isRequired,message:r.node,messageKey:r.string,title:r.node,titleKey:r.string,submitDanger:r.bool};const i=Object(l.f)(c)},5684:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a(0),o=a(8),r=function(e,t,a,n){return new(a||(a=Promise))((function(o,r){function l(e){try{c(n.next(e))}catch(e){r(e)}}function s(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,s)}c((n=n.apply(e,t||[])).next())}))};const l=(e,t,a,l)=>{const[s,c]=n.useState(),[i,p]=n.useState(!1),[d,u]=n.useState();return n.useEffect(()=>{r(void 0,void 0,void 0,(function*(){try{u(null),p(!1),c(null);const n=yield Object(o.kb)(e,t,a,l);c(n)}catch(e){u(e)}finally{p(!0)}}))},[e,t,a,l]),[s,i,d]}},6692:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var n=a(0),o=a(80),r=a(19),l=a(4429),s=a(489),c=a(107),i=a(7),p=a(5),d=a(1941),u=a(614),m=a(2307);const g=["apiVerion","kind","metadata","spec","status"],f={skipInvalid:!0,sortKeys:(e,t)=>l.a(g,e)-l.a(g,t)},b=({context:e={},FormEditor:t,initialType:a=u.b.Form,initialData:l={},onChangeEditorType:g=s.a,onChange:b=s.a,prune:h,YAMLEditor:v,lastViewUserSettingKey:y,displayConversionError:E})=>{const{formContext:k,yamlContext:w}=e,{t:S}=Object(i.useTranslation)(),[O,N]=n.useState(l),[x,j]=n.useState(Object(d.b)(l,"yamlData",{skipInvalid:!0})),[C,T]=n.useState(),[P,_]=n.useState(!1),[A,I,M]=Object(m.a)(y,a),F=(e={})=>{c.a(e,O)||(N(e),b(e))},R=e=>{I(e),g(e)};return M?n.createElement(n.Fragment,null,n.createElement(u.a,{value:A,onChange:e=>{switch(e){case u.b.YAML:j(Object(d.b)(null!==(t=null==h?void 0:h(O))&&void 0!==t?t:O,x,f)),R(u.b.YAML);break;case u.b.Form:void 0===C?R(u.b.Form):_(!0)}var t}}),P&&n.createElement(o.a,{className:"co-synced-editor__yaml-warning",variant:"danger",isInline:!0,title:S("console-shared~Invalid YAML cannot be persisted")},E&&n.createElement("p",null,C),n.createElement("p",null,S("console-shared~Switching to form view will delete any invalid YAML.")),n.createElement(r.a,{variant:"danger",onClick:()=>{T(void 0),_(!1),R(u.b.Form)}},S("console-shared~Switch and delete")),"Â ",n.createElement(r.a,{variant:"secondary",onClick:()=>{_(!1)}},S("console-shared~Cancel"))),A===u.b.Form?n.createElement(t,Object.assign({formData:O,onChange:F,prune:h},k)):n.createElement(v,Object.assign({initialYAML:x,onChange:(e="")=>{Object(d.a)(e).then(e=>{var t;T(void 0),F(e),j(Object(d.b)(null!==(t=null==h?void 0:h(O))&&void 0!==t?t:O,x,f))}).catch(e=>T(String(e)))}},w))):n.createElement(p.S,null)}},7561:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));const n="no results"},7562:function(e,t,a){"use strict";a.d(t,"b",(function(){return u})),a.d(t,"f",(function(){return v})),a.d(t,"e",(function(){return k})),a.d(t,"a",(function(){return S})),a.d(t,"d",(function(){return O})),a.d(t,"c",(function(){return T}));var n=a(2336),o=a(640),r=a(22),l=a(225),s=a(50),c=a(840),i=a(70),p=a(10);const d=e=>e&&void 0!==e.error,u=d,m=e=>{const t=e.find(e=>d(e));return t||e},g=(e,t)=>({kind:"invalid",error:e("console-app~{{path}} is missing.",{path:t})}),f=(e,t)=>({kind:"invalid",error:e("console-app~{{path}} should be an Array.",{path:t})}),b=(e,t)=>({kind:"invalid",error:e("console-app~{{path}} should not be empty.",{path:t})}),h=(e,t)=>({kind:"unsupported",error:e("console-app~{{path}} found in resource, but is not supported in form.",{path:t})}),v=e=>{const t=e.filter(e=>e.length>=2&&""!==e[0]);return t.length>0?{matchLabels:n.a(t)}:{}},y=e=>{const t=e.filter(e=>e.length>=2&&""!==e[0]);if(t.length>0){const e=n.a(t);return Object.keys(e).length===t.length}return!0},E=(e,t)=>{const a={};if(e.peers.length>0){const n=e.peers.map(e=>{const t={};return e.ipBlock?t.ipBlock=Object.assign({cidr:e.ipBlock.cidr},e.ipBlock.except&&{except:e.ipBlock.except.map(e=>e.value)}):(e.podSelector&&(t.podSelector=v(e.podSelector)),e.namespaceSelector&&(t.namespaceSelector=v(e.namespaceSelector))),t});"ingress"===t?a.from=n:a.to=n}return e.ports.length>0&&(a.ports=e.ports.map(e=>({protocol:e.protocol,port:Number.isNaN(Number(e.port))?e.port:Number(e.port)}))),a},k=(e,t=!1)=>{const a=v(e.podSelector),n=[],o={kind:t?p.MultiNetworkPolicyModel.kind:"NetworkPolicy",apiVersion:t?`${p.MultiNetworkPolicyModel.apiGroup}/${p.MultiNetworkPolicyModel.apiVersion}`:"networking.k8s.io/v1",metadata:{name:e.name,namespace:e.namespace},spec:{podSelector:a,policyTypes:n}};return e.ingress.denyAll?(n.push("Ingress"),o.spec.ingress=[]):e.ingress.rules.length>0&&(n.push("Ingress"),o.spec.ingress=e.ingress.rules.map(e=>E(e,"ingress"))),e.egress.denyAll?(n.push("Egress"),o.spec.egress=[]):e.egress.rules.length>0&&(n.push("Egress"),o.spec.egress=e.egress.rules.map(e=>E(e,"egress"))),e.policyFor&&(o.metadata||(o.metadata={}),o.metadata.annotations={"k8s.v1.cni.cncf.io/policy-for":e.policyFor.join(",")}),o},w=(e,t)=>{for(const a of e)for(const e of a.peers){if(e.podSelector&&!y(e.podSelector))return{kind:"invalid",error:t("console-app~Duplicate keys found in peer pod selector")};if(e.namespaceSelector&&!y(e.namespaceSelector))return{kind:"invalid",error:t("console-app~Duplicate keys found in peer namespace selector")}}},S=(e,t)=>{if(!y(e.podSelector))return{kind:"invalid",error:t("console-app~Duplicate keys found in main pod selector")};const a=w(e.ingress.rules,t);if(a)return a;const n=w(e.egress.rules,t);return n||void 0},O=e=>{const t=o.a(e);return t.spec&&(r.a(t.spec.podSelector)&&(t.spec.podSelector={}),t.spec.policyTypes||(t.spec.policyTypes=["Ingress"],l.a(t.spec,"egress")&&t.spec.policyTypes.push("Egress")),!l.a(t.spec,"ingress")&&t.spec.policyTypes.includes("Ingress")&&(t.spec.ingress=[]),!l.a(t.spec,"egress")&&t.spec.policyTypes.includes("Egress")&&(t.spec.egress=[]),[t.spec.ingress,t.spec.egress].forEach(e=>e&&e.forEach(e=>e.ports&&e.ports.forEach(e=>{e.port=Number.isNaN(Number(e.port))?e.port:Number(e.port)})))),t},N=(e,t,a)=>{if(!e)return[];if(e.matchExpressions)return h(a,t+".matchExpressions");const n=e.matchLabels||{};return r.a(n)?[]:s.a(n,(e,t)=>[t,e])},x=(e,t,a)=>{const n={key:c.a()};if(e.ipBlock){const o=((e,t,a)=>{const n={cidr:e.cidr||"",except:[]};if(l.a(e,"except")){if(!i.a(e.except))return f(a,t+".except");n.except=e.except?e.except.map(e=>({key:c.a("exception-"),value:e})):[]}return n})(e.ipBlock,t+".ipBlock",a);if(d(o))return o;n.ipBlock=o}else{if(e.podSelector){const o=N(e.podSelector,t+".podSelector",a);if(d(o))return o;n.podSelector=o}if(e.namespaceSelector){const o=N(e.namespaceSelector,t+".namespaceSelector",a);if(d(o))return o;n.namespaceSelector=o}}return n.ipBlock||n.namespaceSelector||n.podSelector?n:b(a,t)},j=(e,t,a,n)=>{const o={key:c.a(),ports:[],peers:[]};if(e.ports){if(!i.a(e.ports))return f(n,t+".ports");const a=m(e.ports.map(e=>{return t=e,{key:c.a("port-"),protocol:t.protocol||"TCP",port:t.port?String(t.port):""};var t}));if(d(a))return a;o.ports=a}const r=e[a];if(r){if(!i.a(e[a]))return f(n,`${t}.${a}`);const l=m(r.map((e,o)=>x(e,`${t}.${a}[${o}]`,n)));if(d(l))return l;o.peers=l}return o},C=(e,t,a,n,o)=>{if(!n)return{rules:[],denyAll:!1};if(!e)return{rules:[],denyAll:!0};if(!i.a(e))return f(o,t);if(0===e.length)return{rules:[],denyAll:!0};const r=m(e.map((e,n)=>j(e,`${t}[${n}]`,a,o)));return d(r)?r:{rules:r,denyAll:!1}},T=(e,t)=>{var a,n,o,r;if(!e.metadata)return g(t,"metadata");if(!e.spec)return g(t,"spec");if(!l.a(e.spec,"podSelector"))return g(t,"spec.podSelector");const s=N(e.spec.podSelector,"spec.podSelector",t);if(d(s))return s;if(e.spec.policyTypes&&!i.a(e.spec.policyTypes))return f(t,"spec.policyTypes");const c=e.spec.policyTypes?e.spec.policyTypes.includes("Egress"):!!e.spec.egress,p=!e.spec.policyTypes||e.spec.policyTypes.includes("Ingress"),u=C(e.spec.ingress,"spec.ingress","from",p,t);if(d(u))return u;const m=C(e.spec.egress,"spec.egress","to",c,t);if(d(m))return m;const b=null===(r=null===(o=null===(n=null===(a=null==e?void 0:e.metadata)||void 0===a?void 0:a.annotations)||void 0===n?void 0:n["k8s.v1.cni.cncf.io/policy-for"])||void 0===o?void 0:o.split(","))||void 0===r?void 0:r.map(e=>e.trim());return{name:e.metadata.name||"",namespace:e.metadata.namespace||"",podSelector:s,ingress:u,egress:m,policyFor:b}}},8396:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var n=a(0),o=a(5684),r=a(10);var l;!function(e){e.PolicyEgress="PolicyEgress",e.PolicyPeerIPBlockExceptions="PolicyPeerIPBlockExceptions"}(l||(l={}));const s=(e,t)=>e.hasOwnProperty(t)?"true"===e[t]:void 0,c=()=>{const[e,t]=n.useState({}),[a,l]=n.useState(!1),[c,i]=Object(o.a)(r.ConfigMapModel,"openshift-network-features","openshift-config-managed");return n.useEffect(()=>{i&&((null==c?void 0:c.data)&&t({PolicyEgress:s(c.data,"policy_egress"),PolicyPeerIPBlockExceptions:s(c.data,"policy_peer_ipblock_exceptions")}),l(!0))},[c,i]),[e,a]}},8397:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));const n={label:"Network Attachment Definition",labelPlural:"Network Attachment Definitions",apiVersion:"v1",apiGroup:"k8s.cni.cncf.io",plural:"network-attachment-definitions",namespaced:!0,abbr:"NAD",kind:"NetworkAttachmentDefinition",id:"network-attachment-definition",crd:!0,legacyPluralURL:!0}},8398:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return s}));var n=a(29),o=a(22),r=a(7561);const l=(e,t)=>{const a=e.filter(e=>String(e.children).toLowerCase().includes(t.toLowerCase()));return Object(o.a)(a)?[{children:Object(n.b)('console-app~No results found for "{{inputValue}}"',{inputValue:t}),isDisabled:!1,value:r.a}]:a},s=(e,t,a)=>"ArrowUp"===e?null===t||0===t?a.length-1:t-1:"ArrowDown"===e?null===t||t===a.length-1?0:t+1:null},8399:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(0),o=a(19),r=a(407),l=a(7),s=a(282);const c=e=>n.createElement(s.a,Object.assign({loader:()=>Promise.resolve().then(a.bind(null,1949)).then(e=>e.NameValueEditor)},e)),i=e=>{const{t:t}=Object(l.useTranslation)(),{selectorType:a,helpText:s,values:i,onChange:p,dataTest:d}=e,[u,m]=n.useState(i.length>0),g=t("pod"===a?"console-app~Pod selector":"console-app~Namespace selector"),f=t("pod"===a?"console-app~Add pod selector":"console-app~Add namespace selector"),b=t("pod"===a?"console-app~Pods having all the supplied key/value pairs as labels will be selected.":"console-app~Namespaces having all the supplied key/value pairs as labels will be selected.");return n.createElement(n.Fragment,null,n.createElement("span",null,n.createElement("label",null,g)),n.createElement("div",{className:"help-block"},n.createElement("p",{className:"co-create-networkpolicy__paragraph"},s)),u?n.createElement(n.Fragment,null,n.createElement("div",{className:"help-block"},n.createElement("p",{className:"co-create-networkpolicy__paragraph"},b)),n.createElement(c,{nameValuePairs:i.length>0?i:[["",""]],valueString:t("console-app~Selector"),nameString:t("console-app~Label"),addString:t("console-app~Add label"),readOnly:!1,allowSorting:!1,updateParentData:e=>{p(e.nameValuePairs)},onLastItemRemoved:()=>m(!1)})):n.createElement("div",{className:"co-toolbar__group co-toolbar__group--left co-create-networkpolicy__show-selector"},n.createElement(o.a,{className:"pf-m-link--align-left",onClick:()=>m(!0),type:"button",variant:"link","data-test":d?"add-"+d:"add-labels-selector"},n.createElement(r.a,{className:"co-icon-space-r"}),f)))}},8400:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a(0),o=a(353),r=a(351),l=a(80),s=a(12104),c=a(2299),i=a(50),p=a(279),d=a(7),u=a(7562),m=a(1003),g=a(5),f=a(108),b=a(10);const h=e=>{const t=e.namespaceSelector&&0===e.namespaceSelector.filter(e=>!!e[0]).length;return n.createElement(n.Fragment,null,n.createElement(o.a,{"aria-label":"pods-list","data-test":e.dataTest?e.dataTest+"-popover":"pods-preview-popover",bodyContent:e.namespaceSelector?t?n.createElement(k,{podSelector:e.podSelector}):n.createElement(k,{namespaceSelector:e.namespaceSelector,podSelector:e.podSelector}):n.createElement(k,{namespace:e.policyNamespace,podSelector:e.podSelector}),triggerRef:e.popoverRef,position:"bottom"}))},v=/^([A-Za-z0-9][-A-Za-z0-9_\\/.]*)?[A-Za-z0-9]$/,y=e=>{if(!e||0===(null==e?void 0:e.length))return[{matchLabels:{}},void 0];for(const t of e){if(!t[0].match(v))return[{matchLabels:{}},t[0]];if(!t[1].match(v))return[{matchLabels:{}},t[1]]}return[Object(u.f)(e),void 0]};function E(e,t,a){const o=n.useMemo(()=>({isList:!0,kind:e,selector:t,namespace:a}),[e,a,t]);return Object(f.a)(o)}const k=e=>{var t;const{namespace:a,podSelector:o,namespaceSelector:u}=e,{t:f}=Object(d.useTranslation)(),[h,v]=n.useMemo(()=>y(u),[u]),[k,w]=n.useMemo(()=>y(o),[o]),[S,O,N]=E(b.PodModel.kind,k,a),[x,j,C]=E(b.NamespaceModel.kind,h),T=n.useMemo(()=>{if(w||v)return f("public~Input error: selectors must start and end by a letter or number, and can only contain -, _, / or . Offending value: {{offendingSelector}}",{offendingSelector:w||v})},[w,v,f]),P=n.useMemo(()=>{var e;const t=new Set;if(j&&!C)for(const a of x){const n=null===(e=a.metadata)||void 0===e?void 0:e.name;n&&t.add(n)}return t},[C,j,x]),_=n.useMemo(()=>{if(T)return{error:T};if(N)return{error:N};if(!O)return{pods:[],total:0};let e=S;if(u){if(C)return{error:C};e=e.filter(e=>e.metadata.namespace&&P.has(e.metadata.namespace))}const t={};e.slice(0,10).forEach(e=>{var a,o;const r=null===(a=null==e?void 0:e.metadata)||void 0===a?void 0:a.namespace;t[r]=t[r]||[],t[r].push({name:null===(o=null==e?void 0:e.metadata)||void 0===o?void 0:o.name,icon:n.createElement(g.fb,{kind:b.PodModel.kind})})});return{pods:c.a(t).map(([e,t])=>({name:e,children:t,defaultExpanded:!0,icon:n.createElement(g.fb,{kind:b.NamespaceModel.kind})})),total:e.length}},[P,u,T,C,N,O,S]),A=i.a(k.matchLabels||{},(e,t)=>`${t}=${e}`),I=i.a(k.matchLabels||{},(e,t)=>n.createElement(r.a,{key:t,value:e,color:"green"},t,"=",e)),M=_.total&&_.total>10&&A.length>0?`?${m.b.Label}=${encodeURIComponent(A.join(","))}`:"";return _.error?n.createElement(l.a,{"data-test":"pods-preview-alert",variant:"danger",isInline:!0,title:f("public~Can't preview pods")},n.createElement("p",null,String(_.error))):n.createElement(n.Fragment,null,O&&0===(null===(t=_.pods)||void 0===t?void 0:t.length)&&n.createElement("div",{"data-test":"pods-preview-title"},f("public~No pods matching the provided labels in the current namespace")),_.pods&&_.pods.length>0&&n.createElement(n.Fragment,null,n.createElement("div",{"data-test":"pods-preview-title"},(null==A?void 0:A.length)>0?n.createElement(n.Fragment,null,f("public~List of pods matching")," ",I):f("public~List of pods")),n.createElement(s.a,{"data-test":"pods-preview-tree",className:"co-create-networkpolicy__selector-preview",data:_.pods,hasGuides:!0}),_.total&&_.total>10&&n.createElement(n.Fragment,null,0===p.a(h.matchLabels)?n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:`${Object(g.rc)(b.PodModel,a)}${M}`,"data-test":"pods-preview-footer-link"},f("public~View all {{total}} results",{total:_.total})):n.createElement("p",{"data-test":"pods-preview-footer"},f("public~Showing {{shown}} from {{total}} results",{shown:10,total:_.total})))))}},8401:function(e,t,a){"use strict";var n=a(22),o=a(14),r=a(10);t.a=()=>{const e=Object(o.useLocation)();return!Object(n.a)(e.pathname.match(r.MultiNetworkPolicyModel.kind))||!Object(n.a)(e.pathname.match(r.MultiNetworkPolicyModel.plural))}}}]);
//# sourceMappingURL=create-network-policy-chunk-2585afa5f13368d91d81.min.js.map