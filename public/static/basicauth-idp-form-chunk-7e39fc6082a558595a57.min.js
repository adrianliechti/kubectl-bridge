(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{5536:function(e,t,a){"use strict";a.r(t),a.d(t,"DroppableFileInput",(function(){return f})),a.d(t,"AddBasicAuthPage",(function(){return v}));var n=a(0),r=a(137),i=a(22),c=a(7),l=a(14),o=a(966),s=a(19),u=a(10),d=a(8),p=a(5),m=a(5957),b=a(5958),h=a(6040);const f=e=>n.createElement(p.c,Object.assign({loader:()=>Promise.resolve().then(a.bind(null,2223)).then(e=>e.DroppableFileInput)},e)),v=()=>{const e=Object(l.useNavigate)(),[t,a]=n.useState(!1),[v,g]=n.useState(""),[E,y]=n.useState("basic-auth"),[C,N]=n.useState(""),[j,A]=n.useState(""),[O,P]=n.useState(""),[k,S]=n.useState(""),{t:T}=Object(c.useTranslation)(),M=e=>(a(!0),e.then(e=>(e=>(a(!1),g(""),e))(e),e=>(e=>{const t=e.message||T("public~An error occurred. Please try again.");return a(!1),g(t),Promise.reject(t)})(e))),w=()=>{if(!O)return Promise.resolve(null);const e={apiVersion:"v1",kind:"Secret",metadata:{generateName:"basic-auth-tls-",namespace:"openshift-config"},stringData:{"tls.crt":O,"tls.key":k}};return M(Object(d.jb)(u.SecretModel,e))},F=()=>{if(!j)return Promise.resolve(null);const e={apiVersion:"v1",kind:"ConfigMap",metadata:{generateName:"basic-auth-ca-",namespace:"openshift-config"},data:{"ca.crt":j}};return M(Object(d.jb)(u.ConfigMapModel,e))},q=(e,t,a,n)=>{const r={name:E,type:"BasicAuth",mappingMethod:"claim",basicAuth:{url:C}};return a&&(r.basicAuth.ca={name:a}),t&&(r.basicAuth.tlsClientCert={name:t},r.basicAuth.tlsClientKey={name:t}),M(Object(m.a)(e,r,n))},D=T("public~Add Identity Provider: Basic Authentication");return n.createElement("div",{className:"co-m-pane__form"},n.createElement(r.a,null,n.createElement("title",null,D)),n.createElement(p.Z,{title:D,helpText:T("public~Basic authentication is a generic backend integration mechanism that allows users to authenticate with credentials validated against a remote identity provider.")}),n.createElement("div",{className:"co-m-pane__body"},n.createElement("form",{onSubmit:t=>{t.preventDefault(),i.a(k)===i.a(O)?(g(""),M(Object(m.b)()).then(t=>{const a=O?m.c.secret:"",n=j?m.c.ca:"";q(t,a,n,!0).then(()=>{const a=[w(),F()];Promise.all(a).then(([e,a])=>{const n=a?a.metadata.name:"",r=e?e.metadata.name:"";return q(t,r,n)}).then(()=>{Object(m.d)(e)})}).catch(e=>{g(e)})})):g(T("public~Values for certificate and key should both be either excluded or provided."))},name:"form",className:"co-m-pane__body-group"},n.createElement(b.a,{value:E,onChange:e=>y(e.currentTarget.value)}),n.createElement("div",{className:"form-group"},n.createElement("label",{className:"control-label co-required",htmlFor:"url"},T("public~URL")),n.createElement("input",{className:"pf-v5-c-form-control",type:"url",onChange:e=>N(e.currentTarget.value),value:C,id:"url","aria-describedby":"idp-url-help",required:!0}),n.createElement("p",{className:"help-block",id:"idp-url-help"},T("public~The remote URL to connect to."))),n.createElement(h.a,{value:j,onChange:e=>A(e)}),n.createElement("div",{className:"form-group"},n.createElement(f,{onChange:e=>P(e),inputFileData:O,id:"cert-file-input",label:T("public~Certificate"),hideContents:!0,inputFieldHelpText:T("public~PEM-encoded TLS client certificate to present when connecting to the server.")})),n.createElement("div",{className:"form-group"},n.createElement(f,{onChange:e=>S(e),inputFileData:k,id:"key-file-input",label:T("public~Key"),hideContents:!0,inputFieldHelpText:T("public~PEM-encoded TLS private key for the client certificate. Required if certificate is specified.")})),n.createElement(p.g,{errorMessage:v,inProgress:t},n.createElement(o.a,{className:"pf-v5-c-form"},n.createElement(s.a,{type:"submit",variant:"primary","data-test-id":"add-idp"},T("public~Add")),n.createElement(s.a,{type:"button",variant:"secondary",onClick:()=>e(-1)},T("public~Cancel")))))))}},5957:function(e,t,a){"use strict";a.d(t,"b",(function(){return l})),a.d(t,"a",(function(){return o})),a.d(t,"d",(function(){return s})),a.d(t,"c",(function(){return u}));var n=a(22),r=a(10),i=a(8),c=a(5);const l=()=>Object(i.kb)(r.OAuthModel,"cluster"),o=(e,t,a)=>{const c=n.a(e.spec.identityProviders)?{op:"add",path:"/spec/identityProviders",value:[t]}:{op:"add",path:"/spec/identityProviders/-",value:t};return Object(i.pb)(r.OAuthModel,e,[c],a?{queryParams:{dryRun:"All"}}:{})},s=e=>{e(Object(c.uc)(r.OAuthModel,"cluster")+"?idpAdded=true")},u={secret:"secret-name",ca:"ca-name"}},5958:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(0),r=a(7);const i=({value:e,onChange:t})=>{const{t:a}=Object(r.useTranslation)();return n.createElement("div",{className:"form-group"},n.createElement("label",{className:"control-label co-required",htmlFor:"idp-name"},a("public~Name")),n.createElement("input",{className:"pf-v5-c-form-control",type:"text",onChange:t,value:e,"aria-describedby":"idp-name-help",id:"idp-name",required:!0}),n.createElement("p",{className:"help-block",id:"idp-name-help"},a("public~Unique name of the new identity provider. This cannot be changed later.")))}},6040:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var n=a(0),r=a(7),i=a(5);const c=e=>n.createElement(i.c,Object.assign({loader:()=>Promise.resolve().then(a.bind(null,2223)).then(e=>e.DroppableFileInput)},e)),l=({value:e,onChange:t,isRequired:a=!1})=>{const{t:i}=Object(r.useTranslation)();return n.createElement("div",{className:"form-group"},n.createElement(c,{onChange:t,inputFileData:e,id:"idp-file-input",label:i("public~CA file"),isRequired:a,hideContents:!0}))}}}]);
//# sourceMappingURL=basicauth-idp-form-chunk-7e39fc6082a558595a57.min.js.map