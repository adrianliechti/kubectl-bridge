{"version":3,"sources":["webpack:///./packages/operator-lifecycle-manager/src/components/package-manifest.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/deprecated-operator-warnings/deprecated-operator-warnings.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/cluster-service-version-logo.tsx","webpack:///./packages/operator-lifecycle-manager/src/operator.svg"],"names":["tableColumnClasses","PackageManifestTableHeader","title","t","sortFunc","transforms","props","className","sortField","PackageManifestTableHeaderWithCatalogSource","PackageManifestTableRow","obj","packageManifest","customData","channel","displayName","version","provider","currentCSVDesc","to","metadata","name","namespace","icon","timestamp","creationTimestamp","catalogSource","kind","status","catalogSourceNamespace","PackageManifestListEmptyMessage","PackageManifestList","TableHeader","loaded","data","filters","Header","Row","EmptyMsg","virtualize","PackageManifestsPage","ns","helpText","showTitle","ListComponent","textFilter","flatten","resources","isList","namespaced","prop","selector","matchExpressions","key","operator","values","DeprecatedOperatorType","findDeprecation","type","deprecation","conditions","find","f","findDeprecatedOperator","deprecatedPackage","PackageDeprecated","deprecatedChannel","ChannelDeprecated","deprecatedVersion","VersionDeprecated","DeprecatedOperatorWarningBadge","content","message","color","DeprecatedOperatorWarningIcon","dataTest","DeprecatedOperatorWarningAlert","dismissible","alertVisible","setAlertVisible","variant","isInline","actionClose","onClose","ClusterServiceVersionLogo","imgSrc","mediatype","base64data","src","alt","module","exports"],"mappings":"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","file":"package-manifest-chunk-7ff848848bc5988019e7.min.js","sourcesContent":["import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams, Link } from 'react-router-dom-v5-compat';\nimport {\n  MultiListPage,\n  Table,\n  TableData,\n  Flatten,\n  Filter,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport {\n  ConsoleEmptyState,\n  Timestamp,\n  ResourceLink,\n  resourcePathFromModel,\n} from '@console/internal/components/utils';\nimport i18n from '@console/internal/i18n';\nimport { MatchExpression, referenceForModel } from '@console/internal/module/k8s';\nimport { OPERATOR_HUB_LABEL } from '@console/shared';\nimport { PackageManifestModel, CatalogSourceModel } from '../models';\nimport { PackageManifestKind, CatalogSourceKind } from '../types';\nimport { ClusterServiceVersionLogo } from './cluster-service-version-logo';\nimport { visibilityLabel, iconFor, defaultChannelFor } from './index';\n\nconst tableColumnClasses = [\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  '',\n];\n\nexport const PackageManifestTableHeader = () => [\n  {\n    title: i18n.t('public~Name'),\n    sortFunc: 'sortPackageManifestByDefaultChannelName',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[0] },\n  },\n  {\n    title: i18n.t('public~Latest version'),\n    props: { className: tableColumnClasses[1] },\n  },\n  {\n    title: i18n.t('public~Created'),\n    sortField: 'metadata.creationTimestamp',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[2] },\n  },\n];\n\nexport const PackageManifestTableHeaderWithCatalogSource = () => [\n  ...PackageManifestTableHeader(),\n  {\n    title: i18n.t('olm~CatalogSource'),\n    sortField: 'status.catalogSource',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[3] },\n  },\n];\n\nexport const PackageManifestTableRow: React.FC<RowFunctionArgs<\n  PackageManifestKind,\n  { catalogSource: CatalogSourceKind }\n>> = ({ obj: packageManifest, customData }) => {\n  const channel = defaultChannelFor(packageManifest);\n\n  const { displayName, version, provider } = channel?.currentCSVDesc;\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <Link\n          to={resourcePathFromModel(\n            PackageManifestModel,\n            packageManifest.metadata.name,\n            packageManifest.metadata.namespace,\n          )}\n        >\n          <ClusterServiceVersionLogo\n            displayName={displayName}\n            icon={iconFor(packageManifest)}\n            provider={provider.name}\n          />\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        {version} ({channel.name})\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={packageManifest.metadata.creationTimestamp} />\n      </TableData>\n      {!customData.catalogSource && (\n        <TableData className={tableColumnClasses[3]}>\n          <ResourceLink\n            kind={referenceForModel(CatalogSourceModel)}\n            name={packageManifest.status?.catalogSource}\n            namespace={packageManifest.status?.catalogSourceNamespace}\n          />\n        </TableData>\n      )}\n    </>\n  );\n};\n\nconst PackageManifestListEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('olm~No PackageManifests Found')}>\n      {t('olm~The CatalogSource author has not added any packages.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const PackageManifestList = (props: PackageManifestListProps) => {\n  const { customData } = props;\n\n  // If the CatalogSource is not present, display PackageManifests along with their CatalogSources (used in PackageManifest Search page)\n  const TableHeader = customData.catalogSource\n    ? PackageManifestTableHeader\n    : PackageManifestTableHeaderWithCatalogSource;\n\n  return (\n    <Table\n      {...props}\n      aria-label=\"PackageManifests\"\n      loaded={props.loaded}\n      data={props.data || []}\n      filters={props.filters}\n      Header={TableHeader}\n      Row={PackageManifestTableRow}\n      EmptyMsg={PackageManifestListEmptyMessage}\n      virtualize\n    />\n  );\n};\n\nexport const PackageManifestsPage: React.FC<PackageManifestsPageProps> = (props) => {\n  const { catalogSource } = props;\n  const { ns: namespace } = useParams();\n\n  const flatten: Flatten = (resources) => _.get(resources.packageManifest, 'data', []);\n\n  const helpText = (\n    <Trans ns=\"olm\">\n      Catalogs are groups of Operators you can make available on the cluster. Use{' '}\n      <Link to=\"/operatorhub\">OperatorHub</Link> to subscribe and grant namespaces access to use\n      installed Operators.\n    </Trans>\n  );\n\n  const customData = React.useMemo(\n    () => ({\n      catalogSource,\n    }),\n    [catalogSource],\n  );\n\n  return (\n    <MultiListPage\n      {...props}\n      customData={customData}\n      namespace={namespace}\n      showTitle={false}\n      helpText={helpText}\n      ListComponent={PackageManifestList}\n      textFilter=\"packagemanifest-name\"\n      flatten={flatten}\n      resources={[\n        {\n          kind: referenceForModel(PackageManifestModel),\n          isList: true,\n          namespaced: true,\n          prop: 'packageManifest',\n          selector: {\n            matchExpressions: [\n              ...((catalogSource\n                ? [\n                    {\n                      key: 'catalog',\n                      operator: 'In',\n                      values: [catalogSource?.metadata.name],\n                    },\n                    {\n                      key: 'catalog-namespace',\n                      operator: 'In',\n                      values: [catalogSource?.metadata.namespace],\n                    },\n                  ]\n                : []) as MatchExpression[]),\n              { key: visibilityLabel, operator: 'DoesNotExist' },\n              { key: OPERATOR_HUB_LABEL, operator: 'DoesNotExist' },\n            ],\n          },\n        },\n      ]}\n    />\n  );\n};\n\nexport type PackageManifestsPageProps = {\n  catalogSource: CatalogSourceKind;\n  namespace?: string;\n};\n\nexport type PackageManifestListProps = {\n  customData?: { catalogSource: CatalogSourceKind };\n  namespace?: string;\n  data: PackageManifestKind[];\n  filters?: Filter[];\n  loaded: boolean;\n  loadError?: string | Record<string, any>;\n  showDetailsLink?: boolean;\n};\n\nPackageManifestTableHeader.displayName = 'PackageManifestTableHeader';\nPackageManifestTableHeaderWithCatalogSource.displayName =\n  'PackageManifestTableHeaderWithCatalogSource';\nPackageManifestList.displayName = 'PackageManifestList';\n","import * as React from 'react';\nimport { Label, FormAlert, Alert, Tooltip, AlertActionCloseButton } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { DeprecatedOperatorWarning } from '@console/operator-lifecycle-manager/src/types';\nimport { SubscriptionKind } from '../../types';\n\nexport enum DeprecatedOperatorType {\n  PackageDeprecated = 'PackageDeprecated',\n  ChannelDeprecated = 'ChannelDeprecated',\n  VersionDeprecated = 'BundleDeprecated',\n}\nconst findDeprecation = (obj: SubscriptionKind, type: string): DeprecatedOperatorWarning => {\n  return { deprecation: obj?.status?.conditions?.find((f) => f.type === type) };\n};\n\nexport const findDeprecatedOperator = (\n  obj: SubscriptionKind,\n): {\n  deprecatedPackage: DeprecatedOperatorWarning;\n  deprecatedChannel: DeprecatedOperatorWarning;\n  deprecatedVersion: DeprecatedOperatorWarning;\n} => {\n  return {\n    deprecatedPackage: findDeprecation(obj, DeprecatedOperatorType.PackageDeprecated),\n    deprecatedChannel: findDeprecation(obj, DeprecatedOperatorType.ChannelDeprecated),\n    deprecatedVersion: findDeprecation(obj, DeprecatedOperatorType.VersionDeprecated),\n  };\n};\n\nexport const DeprecatedOperatorWarningBadge: React.FC<DeprecatedOperatorWarningBadge> = ({\n  deprecation,\n  className,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip content={t('olm~Deprecated: {{message}}', { message: deprecation?.message })}>\n      <Label\n        data-test=\"deprecated-operator-warning-badge\"\n        color=\"orange\"\n        className={className}\n        icon={<YellowExclamationTriangleIcon />}\n      >\n        {t('olm~Deprecated')}\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport const DeprecatedOperatorWarningIcon: React.FC<DeprecatedOperatorWarningIcon> = ({\n  deprecation,\n  dataTest,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip content={t('olm~Deprecated: {{message}}', { message: deprecation?.message })}>\n      <YellowExclamationTriangleIcon dataTest={dataTest} className=\"pf-v5-u-ml-xs\" />\n    </Tooltip>\n  );\n};\n\nexport const DeprecatedOperatorWarningAlert: React.FC<DeprecatedOperatorWarningProps> = ({\n  deprecatedPackage,\n  deprecatedChannel,\n  deprecatedVersion,\n  dismissible,\n}) => {\n  const { t } = useTranslation();\n  const [alertVisible, setAlertVisible] = React.useState<boolean>(true);\n\n  return (\n    alertVisible && (\n      <FormAlert className=\"pf-v5-u-my-md\">\n        <Alert\n          variant=\"warning\"\n          title={t('olm~Deprecated warnings')}\n          aria-live=\"polite\"\n          isInline\n          actionClose={\n            dismissible && <AlertActionCloseButton onClose={() => setAlertVisible(false)} />\n          }\n        >\n          <div data-test=\"deprecated-operator-warning-package\">\n            {deprecatedPackage?.deprecation?.message}\n          </div>\n          <div data-test=\"deprecated-operator-warning-channel\">\n            {deprecatedChannel?.deprecation?.message}\n          </div>\n          <div data-test=\"deprecated-operator-warning-version\">\n            {deprecatedVersion?.deprecation?.message}\n          </div>\n        </Alert>\n      </FormAlert>\n    )\n  );\n};\n\ntype DeprecatedOperatorWarningBadge = {\n  className?: string;\n} & DeprecatedOperatorWarning;\n\ntype DeprecatedOperatorWarningIcon = {\n  dataTest?: string;\n} & DeprecatedOperatorWarning;\n\ntype DeprecatedOperatorWarningProps = {\n  deprecatedPackage: DeprecatedOperatorWarning;\n  deprecatedChannel: DeprecatedOperatorWarning;\n  deprecatedVersion: DeprecatedOperatorWarning;\n  dismissible?: boolean;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DeprecatedOperatorWarning } from '@console/operator-lifecycle-manager/src/types';\nimport operatorLogo from '../operator.svg';\nimport { ClusterServiceVersionIcon } from '../types';\nimport { DeprecatedOperatorWarningBadge } from './deprecated-operator-warnings/deprecated-operator-warnings';\n\nexport const ClusterServiceVersionLogo: React.FC<ClusterServiceVersionLogoProps> = (props) => {\n  const { icon, displayName, provider, version, deprecation } = props;\n  const { t } = useTranslation();\n\n  const imgSrc: string = _.isString(icon)\n    ? icon\n    : _.isEmpty(icon)\n    ? operatorLogo\n    : `data:${icon.mediatype};base64,${icon.base64data}`;\n\n  return (\n    <div className=\"co-clusterserviceversion-logo\">\n      <div className=\"co-clusterserviceversion-logo__icon\">\n        <span className=\"co-catalog-item-icon__bg\">\n          <img\n            className=\"co-catalog-item-icon__img co-catalog-item-icon__img--large\"\n            src={imgSrc}\n            alt={displayName}\n            aria-hidden\n          />\n        </span>\n      </div>\n      <div className=\"co-clusterserviceversion-logo__name\">\n        <h1 className=\"co-clusterserviceversion-logo__name__clusterserviceversion\">\n          {displayName}{' '}\n          {deprecation && (\n            <DeprecatedOperatorWarningBadge className=\"pf-v5-u-ml-sm\" deprecation={deprecation} />\n          )}\n        </h1>\n        {provider && (\n          <span className=\"co-clusterserviceversion-logo__name__provider text-muted\">\n            {t('olm~{{version}} provided by {{provider}}', {\n              version: version || '',\n              provider: _.get(provider, 'name', provider),\n            })}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\nexport type ClusterServiceVersionLogoProps = {\n  displayName: string;\n  icon: ClusterServiceVersionIcon | string;\n  provider?: { name: string } | string;\n  version?: string;\n} & DeprecatedOperatorWarning;\n","module.exports = __webpack_public_path__ + \"assets/packages/operator-lifecycle-manager/src/operator.svg\";"],"sourceRoot":""}