{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./packages/knative-plugin/src/components/knatify/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./packages/shipwright-plugin/src/types.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamContext.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/dev-console/src/types/samples.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/dev-console/src/utils/samples.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/dev-console/src/components/edit-application/edit-application-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/dev-console/src/components/import/CreateSecretModal.tsx","webpack:///./packages/dev-console/src/components/import/upload-jar-validation-utils.ts","webpack:///./packages/dev-console/src/components/import/app/AppSection.tsx","webpack:///./packages/dev-console/src/models/samples.ts","webpack:///./packages/dev-console/src/components/import/deployImage-validation-utils.ts","webpack:///./packages/topology/src/components/dropdowns/ApplicationSelector.tsx","webpack:///./packages/dev-console/src/components/import/advanced/AdvancedSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStream.tsx","webpack:///./packages/dev-console/src/components/user-preferences/usePreferredRoutingOptions.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthChecks.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthCheckProbe.tsx","webpack:///./packages/dev-console/src/components/health-checks/ProbeForm.tsx","webpack:///./packages/dev-console/src/components/health-checks/RequestTypeForms.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ResourceLimitSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamDropdown.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamNsDropdown.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageStreamTagDropdown.tsx","webpack:///./packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","webpack:///./packages/dev-console/src/components/import/route/SecureRoute.tsx","webpack:///./packages/dev-console/src/components/import/advanced/LabelSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/RouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/AdvancedRouteOptions.tsx","webpack:///./packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/CreateRoute.tsx","webpack:///./packages/dev-console/src/components/import/route/PortInputField.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ServerlessScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/section/IconSection.tsx","webpack:///./packages/dev-console/src/components/import/deployImage-submit-utils.ts","webpack:///./packages/dev-console/src/components/import/image-search/ImageSearchSection.tsx","webpack:///./packages/dev-console/src/components/import/image-search/ImageSearch.tsx","webpack:///./packages/dev-console/src/components/import/icon/IconDropdown.tsx","webpack:///./packages/knative-plugin/src/components/knatify/CreateKnatifyPage.tsx","webpack:///./packages/knative-plugin/src/utils/knatify-utils.ts","webpack:///./packages/knative-plugin/src/components/knatify/KnatifyForm.tsx"],"names":["getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","spec","tags","tag","annotationTags","isBuilderTag","name","getBuilderTagsSortedByVersion","sort","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","common","factory","menuActions","getExtensionsActionsForKind","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","created","dockerRepositoryCheck","t","className","kind","metadata","namespace","title","linkTo","timestamp","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","value","ns","href","text","type","variant","ImageStreamsDetails","obj","imageRepository","imageCount","specTagByName","importErrors","status","acc","importErrorCondition","conditions","condition","push","message","warning","alerts","error","i","key","resource","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","displayName","pages","details","editYaml","history","ImageStreamsDetailsPage","props","tableColumnClasses","columnClass","ImageStreamsTableRow","columnID","labels","creationTimestamp","actions","ImageStreamsList","ImageStreamsTableHeader","sortField","transforms","id","Header","Row","virtualize","buildPhase","build","phase","ImageStreamsPage","ListComponent","canCreate","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","e","DroppableFileInput","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","dataTest","style","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","toLowerCase","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","description","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","useK8sGet","opts","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","resourceType","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","location","dir","cluster","insecure","cadata","dispatch","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","getDefinedObj","objData","createPipelineResource","secretResp","resourceName","pipelineResource","fieldName","secretKey","createSecretResource","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","ComputedBuildRunStatus","ClusterBuildStrategy","ReadableClusterBuildStrategies","BUILDAH","UNKNOWN","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","indexOf","submitStartPipeline","processWorkspaces","pipelineRunResource","ImageStreamContext","createProject","projectData","createOrUpdateImageStream","formData","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","to","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","selector","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","responses","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspective","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","URL","search","URLSearchParams","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","fileUpload","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","findIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","Delete","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","isGitImportSource","gitImport","isContainerImportSource","containerImport","updateHealthChecksProbe","updatedResource","HealthCheckContext","viewOnly","useViewOnlyAccess","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createSampleLink","sample","set","getGitImportSample","window","sampleName","getContainerImportSample","hasSampleQueryParameter","groupConsoleSamplesByName","grouped","consoleSample","getBestMatch","preferredLanguage","preferredCountry","sameLanguageWithoutCountry","sameLanguageWithAnyCountry","fallbackLanguageSameCountry","fallbackLanguageNoCountry","fallbackLanguageAnyCountry","sampleLanguage","sampleCountry","useSamples","groupVersionKind","getSample","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","weight","ApplicationFlowType","getFlowTypePageTitle","flowType","Dockerfile","Container","JarUpload","BuildSourceType","getBuildSourceType","getResourcesType","getFlowType","Binary","getValidationSchema","checkIfTriggerExists","trigger","getKsvcRouteData","getRouteLabels","allLabels","allRouteLabels","getRouteData","insecureEdgeTerminationPolicy","caCertificate","certificate","destinationCACertificate","getBuildData","getBuildOption","buildStrategyType","shipwrightClusterBuildStrategyType","getServerlessData","serverlessData","autoscalewindowAnnotation","getDeploymentData","deploymentData","getUserLabels","getIconInitialValues","runtimeLabel","getGitAndDockerfileInitialValues","currentImage","isUrlValidating","getGitDataFromPipeline","getGitDataFromShipwrightBuild","getGitDataFromBuildConfig","tagObj","isRecommending","couldNotRecommend","deployImageInitialValues","searchTerm","registry","allowInsecureRegistry","isSearchingForImage","getExternalImageValues","appResource","getInitialValues","appName","editAppResourceData","shipwrightBuildData","commonValues","appGroupName","pacHasError","showEditImportStrategy","getCommonInitialValues","gitDockerValues","fileUploadValues","iconValues","externalImageValues","internalImageValues","isAllowInsecureRegistry","importPolicy","getExternalImageInitialValues","getInternalImageInitialValues","fileName","getFileUploadValues","getAllNotStartedPipelines","sessionStorage","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setItem","setPipelineNotStarted","CreateSecretModal","close","secretModalLauncher","fileNameRegex","fileUploadValidationSchema","getAppName","shift","noProjectsAvailable","subPath","initialApplication","ConsoleSampleModel","propagationPolicy","deployValidationSchema","applicationsAvailable","setApplicationsAvailable","availableApplications","projectsAvailable","touched","nameField","setFieldValue","setFieldTouched","applicationExists","setApplicationExists","applicationNameInputRef","fieldId","isValid","actionItems","actionTitle","actionKey","inputHelpText","focus","ariaLabel","menuClassName","autoSelect","onLoad","applicationList","noApplicationsAvailable","icon","validated","trimmedApplicationName","Footer","defaults","components","List","visibleItems","setVisibleItems","onVisibleItemChange","initialState","loading","accessLoading","selectedImageStream","ImageStreamReducer","setLoading","setAccessLoading","setSelectedImageStream","formContextField","reloadCount","setValidated","hasImageStreams","setHasImageStreams","fromImageStreamTag","imageStreamTagList","isNamespaceSelected","isStreamsAvailable","isTagsAvailable","isImageStreamSelected","showCommandLineAlert","Openshift","helperTextInvalid","isInline","expansion","isReadOnly","PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY","usePreferredRoutingOptions","preferredRoutingOptions","setPreferredRoutingOptions","preferredRoutingOptionsLoaded","tlsTermination","insecureTraffic","probeType","temporaryProbeData","setTemporaryProbeData","showProbe","handleDeleteProbe","handleReset","handleSubmit","handleAddProbe","link","onClose","plain","healthCheckProbeAdded","noHealthCheckProbe","addHealthCheckProbe","renderProbe","errors","RequestTypeOptions","getRequestTypeForm","maxWidth","afterInput","renderPortField","HTTPRequestTypeForm","initialNameValuePairs","nameValue","setNameValue","portFieldName","handleNameValuePairs","nameValuePairs","updatedNameValuePairs","valueFrom","valueString","addString","readOnly","allowSorting","updateParentData","TCPRequestTypeForm","CommandRequestTypeForm","commands","addLabel","disableDeleteRow","hideTitle","unitName","unitOptions","setOutputAsIntegerFlag","imgCollection","initialValues","initialIsi","fieldPrefix","onDropdownChange","img","imgstreams","imageStreamAvailable","resourceFilter","collectImageStreams","appendItems","openshift","unmounted","isiValues","initialImageStream","initialRoute","initialImageStreamImage","searchImageTag","imageStreamImport","imgStreamLabels","success","autocompleteFilter","showHeader","knativeFuncLoaded","funcLoaded","deploymentConfigObj","secureRoute","terminationOptions","EDGE","PASSTHROUGH","REENCRYPT","insecureTrafficOptions","None","Redirect","Allow","formLabel","defaultPort","textExpanded","textCollapsed","domainMappingLoaded","domainMappingLoadErr","ksvc","mappedDomain","domainRes","filterDm","newDomainMap","domainsInUse","placeholderText","isCreatable","marginBottom","knativeService","portOptions","placeholderPort","toggleOnSelection","AutoscaleWindowUnits","m","h","formik","onChanged","isiName","referencePolicy","mergedImageStream","createdImageStream","generation","getMetadata","volumeNumber","volumeName","mountPath","ensurePortExists","suppliedPorts","createOrUpdateDeployImageResources","rawFormData","internalImageStreamName","internalImageStreamNamespace","imgName","imgNamespace","templateAnnotations","imageRef","originalImageStreamName","newImageName","imageStreamRepo","setRegistry","showSample","activeChildren","inputRef","dirty","newImageSecret","setNewImageSecret","alertVisible","shouldHideAlert","nameTouched","applicationNameTouched","handleSearch","searchTermImage","importImage","images","componentName","useQueryParametersIfDefined","debouncedHandleSearch","handleSave","helpTextInvalid","isInContext","actionClose","Icon","src","alt","iconLabelAutocompleteFilter","autocompletePlaceholder","hpa","hpaLoaded","hpaError","projects","workloadResource","isResourceLoaded","light","badge","TECH","helpers","setStatus","submitError","onReset","goBack","formikProps","getKnatifyWorkloadData","relatedHpa","templateMetadata","templateSpec","hpaSpec","minReplicas","maxReplicas","knatifyResources","knDeploymentRes","getInitialValuesKnatify","ksvcResourceData","isSha","tagData","it","isInternalImageValid","isSubmitting","submitLabel","sticky","disableSubmit","resetLabel"],"mappings":"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","file":"knative-plugin/code-refs/knatifyComponent-chunk-9f4109dd66c229741337.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","export { default as CreateKnatifyPage } from './CreateKnatifyPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/ClusterBuildStrategy';\nimport { IBuild as IBuildV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/Build';\nimport { IBuildRun as IBuildRunV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/ClusterBuildStrategy';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\n\n// Add missing latestBuild to Build\nexport type Build =\n  | (IBuildV1Alpha1 & { latestBuild?: BuildRun })\n  | (IBuildV1Beta1 & { latestBuild?: BuildRun });\n\nexport type BuildSpec = IBuildV1Alpha1['spec'] & IBuildV1Beta1['spec'];\n\nexport type BuildStatus = IBuildV1Alpha1['status'] & IBuildV1Beta1['status'];\n\nexport type ClusterBuildStrategyKind = IClusterBuildStrategyV1Alpha1 | IClusterBuildStrategyV1Beta1;\n\nexport type BuildStrategyKind = IBuildStrategyV1Alpha1 | IBuildStrategyV1Beta1;\n\n// Make status.conditions compatible with @console/internal/components/conditions props\nexport type BuildRun =\n  | (IBuildRunV1Alpha1 & {\n      status?: { conditions?: K8sResourceCondition[]; latestTaskRunRef?: string };\n    })\n  | (IBuildRunV1Beta1 & {\n      status?: { conditions?: K8sResourceCondition[]; taskRunName?: string };\n    });\n\n// The enum values need to match the dynamic-plugin `Status` `status` prop.\n// A translation (title) is added in the BuildRunStatus component.\nexport enum ComputedBuildRunStatus {\n  PENDING = 'Pending',\n  RUNNING = 'Running',\n  SUCCEEDED = 'Succeeded',\n  FAILED = 'Failed',\n  UNKNOWN = 'Unknown',\n}\n\n/** WARNING: The enum values corresponds to the `metadata.name` of the ClusterBuildStrategy CRs */\nexport enum ClusterBuildStrategy {\n  BUILDAH = 'buildah',\n  S2I = 'source-to-image',\n  UNKNOWN = 'unknown',\n}\n\nexport const ReadableClusterBuildStrategies: Record<ClusterBuildStrategy, string> = {\n  // t('shipwright-plugin~Buildah')\n  [ClusterBuildStrategy.BUILDAH]: `shipwright-plugin~Buildah`,\n  // t('shipwright-plugin~Source-to-Image')\n  [ClusterBuildStrategy.S2I]: `shipwright-plugin~Source-to-Image`,\n  [ClusterBuildStrategy.UNKNOWN]: `shipwright-plugin~Unknown`,\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as React from 'react';\nimport { ImageStreamContextProps } from '../import-types';\n\nexport const ImageStreamContext = React.createContext<ImageStreamContextProps>(undefined as any);\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\n/**\n * ConsoleSample is an extension to customizing OpenShift web console by adding samples.\n */\nexport type ConsoleSample = K8sResourceCommon & {\n  spec: ConsoleSampleSpec;\n};\n\n/**\n * ConsoleSampleSpec is the desired sample for the web console.\n * Samples will appear with their title, descriptions and a badge in a samples catalog.\n */\nexport type ConsoleSampleSpec = {\n  /**\n   * title is the display name of the sample.\n   *\n   * It is required and must be no more than 50 characters in length.\n   */\n  title: string;\n  /**\n   * abstract is a short introduction to the sample.\n   *\n   * It is required and must be no more than 100 characters in length.\n   *\n   * The abstract is shown on the sample card tile below the title and provider\n   * and is limited to three lines of content.\n   */\n  abstract: string;\n  /**\n   * description is a long form explanation of the sample.\n   *\n   * It is required and can have a maximum length of **4096** characters.\n   *\n   * It is a README.md-like content for additional information, links, pre-conditions, and other instructions.\n   * It will be rendered as Markdown so that it can contain line breaks, links, and other simple formatting.\n   */\n  description: string;\n  /**\n   * icon is an optional base64 encoded image and shown beside the sample title.\n   *\n   * The format must follow the [data: URL format](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)\n   * and can have a maximum size of **10 KB**.\n   *\n   * `data:[<mediatype>][;base64],<base64 encoded image>`\n   *\n   * For example:\n   *\n   * `data:image;base64,` plus the base64 encoded image.\n   *\n   * Vector images can also be used. SVG icons must start with:\n   *\n   * `data:image/svg+xml;base64,` plus the base64 encoded SVG image.\n   *\n   * All sample catalog icons will be shown on a white background (also when the dark theme is used).\n   * The web console ensures that different aspect ratios work correctly.\n   * Currently, the surface of the icon is at most 40x100px.\n   */\n  icon?: string;\n  /**\n   * type is an optional label to group multiple samples.\n   *\n   * It is optional and must be no more than 20 characters in length.\n   *\n   * Recommendation is a singular term like \"Builder Image\", \"Devfile\" or \"Serverless Function\".\n   *\n   * Currently, the type is shown a badge on the sample card tile in the top right corner.\n   */\n  type?: string;\n  /**\n   * provider is an optional label to honor who provides the sample.\n   *\n   * It is optional and must be no more than 50 characters in length.\n   *\n   * A provider can be a company like \"Red Hat\" or an organization like \"CNCF\" or \"Knative\".\n   *\n   * Currently, the provider is only shown on the sample card tile below the title with the prefix \"Provided by \"\n   */\n  provider?: string;\n  /**\n   * tags are optional string values that can be used to find samples in the samples catalog.\n   *\n   * Examples of common tags may be \"Java\", \"Quarkus\", etc.\n   *\n   * They will be displayed on the samples details page.\n   */\n  tags?: string[];\n  /**\n   * source defines where to deploy the sample service from.\n   * The sample may be sourced from an external git repository or container image.\n   */\n  source: ConsoleSampleSource;\n};\n\n/**\n * Union of the sample source types.\n * Unsupported samples types will be ignored in the web console.\n */\nexport type ConsoleSampleSource = ConsoleSampleGitImportSource | ConsoleSampleContainerImportSource;\n\n/** ConsoleSampleGitImportSource allows the user to import code from a git repository. */\nexport type ConsoleSampleGitImportSource = {\n  type: 'GitImport';\n  gitImport: {\n    /** repository contains the reference to the actual Git repository.. */\n    repository: ConsoleSampleGitImportSourceRepository;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleGitImportSourceService;\n  };\n};\n\n/** ConsoleSampleGitImportSourceRepository contains the reference to the actual Git repository. */\nexport type ConsoleSampleGitImportSourceRepository = {\n  /**\n   * url of the Git repository that contains a HTTP service.\n   * The HTTP service must be exposed on the default port (8080) unless\n   * otherwise configured with the port field.\n   *\n   * Only public repositories on GitHub, GitLab and Bitbucket are currently supported:\n   *\n   *   - https://github.com/<org>/<repository>\n   *   - https://gitlab.com/<org>/<repository>\n   *   - https://bitbucket.org/<org>/<repository>\n   *\n   * The url must have a maximum length of 256 characters.\n   */\n  url: string;\n  /**\n   * revision is the git revision at which to clone the git repository\n   * Can be used to clone a specific branch, tag or commit SHA.\n   * Must be at most 256 characters in length.\n   * When omitted the repository's default branch is used.\n   */\n  revision?: string;\n  /**\n   * contextDir is used to specify a directory within the repository to build the\n   * component.\n   * Must start with `/` and have a maximum length of 256 characters.\n   * When omitted, the default value is to build from the root of the repository.\n   */\n  contextDir?: string;\n};\n\n/**\n * ConsoleSampleGitImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleGitImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\n/** ConsoleSampleContainerImportSource allows the user import a container image. */\nexport type ConsoleSampleContainerImportSource = {\n  type: 'ContainerImport';\n  containerImport: {\n    /**\n     * reference to a container image that provides a HTTP service.\n     * The service must be exposed on the default port (8080) unless\n     * otherwise configured with the port field.\n     *\n     * Supported formats:\n     *   - <repository-name>/<image-name>\n     *   - docker.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>@sha256:<image hash>\n     *   - quay.io/<repository-name>/<image-name>:<tag>\n     */\n    image: string;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleContainerImportSourceService;\n  };\n};\n\n/**\n * ConsoleSampleContainerImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleContainerImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\nexport function isGitImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleGitImportSource {\n  return source?.type === 'GitImport' && !!source.gitImport?.repository?.url;\n}\n\nexport function isContainerImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleContainerImportSource {\n  return source?.type === 'ContainerImport' && !!source.containerImport?.image;\n}\n","import { createContext } from 'react';\nimport * as _ from 'lodash';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  ContainerSpec,\n  referenceFor,\n  modelFor,\n} from '@console/internal/module/k8s';\nimport { getResourcesType } from '../edit-application/edit-application-utils';\nimport { getProbesData } from './create-health-checks-probe-utils';\nimport { HealthChecksProbeType } from './health-checks-types';\n\nexport const updateHealthChecksProbe = (\n  values,\n  resource: K8sResourceKind,\n  container: ContainerSpec,\n): K8sResourceKind => {\n  const {\n    healthChecks: { readinessProbe, livenessProbe, startupProbe },\n    containerName,\n    healthChecks,\n  } = values;\n  const updatedResource = _.cloneDeep(resource);\n  const containerIndex = _.findIndex(updatedResource.spec.template.spec.containers, [\n    'name',\n    containerName,\n  ]);\n  updatedResource.spec.template.spec.containers[containerIndex] = {\n    ...container,\n    ...getProbesData(healthChecks, getResourcesType(resource)),\n  };\n\n  if (!readinessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.ReadinessProbe}`,\n    );\n  }\n\n  if (!livenessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.LivenessProbe}`,\n    );\n  }\n\n  if (!startupProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.StartupProbe}`,\n    );\n  }\n\n  return updatedResource;\n};\n\ntype HealthCheckContextType = {\n  viewOnly: boolean;\n};\n\nexport const HealthCheckContext = createContext<HealthCheckContextType>({ viewOnly: false });\n\nexport const useViewOnlyAccess = (resource: K8sResourceKind): boolean => {\n  const model = modelFor(referenceFor(resource));\n  const hasEditAccess = useAccessReview({\n    group: model.apiGroup,\n    resource: model.plural,\n    name: resource.metadata.name,\n    namespace: resource.metadata.namespace,\n    verb: 'update',\n  });\n  return !hasEditAccess;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { k8sGetResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleSampleModel } from '../models/samples';\nimport {\n  ConsoleSample,\n  ConsoleSampleGitImportSourceRepository,\n  isContainerImportSource,\n  isGitImportSource,\n} from '../types/samples';\n\nconst LOCALIZATION_NAME_LABEL = 'console.openshift.io/name';\nconst LOCALIZATION_LANGUAGE_LABEL = 'console.openshift.io/lang';\nconst LOCALIZATION_COUNTRY_LABEL = 'console.openshift.io/country';\n\nexport const createSampleLink = (sample: ConsoleSample, activeNamespace: string): string | null => {\n  if (isGitImportSource(sample.spec.source)) {\n    const { gitImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('formType', 'sample');\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('git.repository', gitImport.repository.url);\n    if (gitImport.repository.revision) {\n      searchParams.set('git.revision', gitImport.repository.revision);\n    }\n    if (gitImport.repository.contextDir) {\n      searchParams.set('git.contextDir', gitImport.repository.contextDir);\n    }\n    return `/import/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  if (isContainerImportSource(sample.spec.source)) {\n    const { containerImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('image', containerImport.image);\n    return `/deploy-image/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  // Unsupported source type, will be dropped.\n  return null;\n};\n\nexport const getGitImportSample = (): {\n  sampleName: string;\n  repository: ConsoleSampleGitImportSourceRepository;\n} => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    repository: {\n      url: searchParams.get('git.repository'),\n      revision: searchParams.get('git.revision'),\n      contextDir: searchParams.get('git.contextDir'),\n    },\n  };\n};\n\nexport const getContainerImportSample = () => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    image: searchParams.get('image'),\n  };\n};\n\nexport const hasSampleQueryParameter = () => {\n  return !!new URLSearchParams(window.location.search).get('sample');\n};\n\nexport const groupConsoleSamplesByName = (samples: ConsoleSample[]) => {\n  return samples.reduce<Record<string, ConsoleSample[]>>((grouped, consoleSample) => {\n    const name =\n      consoleSample.metadata.labels?.[LOCALIZATION_NAME_LABEL] || consoleSample.metadata.name;\n    if (!grouped[name]) grouped[name] = [];\n    grouped[name].push(consoleSample);\n    return grouped;\n  }, {});\n};\n\n/**\n * Returns the samples with the best localization match, for the given\n * preferred language and preferred country. It prefers a match in this order:\n *\n * 1. Sample language and country are equal to the preferred language and country.\n *    This includes sample without language (fallbacks to en) and no country.\n *\n * 2. Sample language is equal to the preferred language.\n *    1. And the sample has no country defined.  (eg, select en sample is used for en-CA and en-GB)\n *    2. Any country is defined.                 (eg, select en-CA sample is used for en-GB)\n *\n * 3. Fallback to an english sample\n *    (Sample language is en OR sample language is not defined):\n *    1. Same country  (use en-CA sample if preference is fr-CA)\n *    2. No country\n *    3. Any country   (use en-CA sample if preference is en-US)\n */\nexport const getBestMatch = (samples: ConsoleSample[], language: string): ConsoleSample | null => {\n  if (!samples || !samples.length) {\n    return null;\n  }\n  const preferredLanguage = (language || 'en').split('-')[0].toLowerCase();\n  const preferredCountry = ((language || '').split('-')[1] || '').toUpperCase();\n\n  let sameLanguageWithoutCountry: ConsoleSample = null;\n  let sameLanguageWithAnyCountry: ConsoleSample = null;\n  let fallbackLanguageSameCountry: ConsoleSample = null;\n  let fallbackLanguageNoCountry: ConsoleSample = null;\n  let fallbackLanguageAnyCountry: ConsoleSample = null;\n\n  for (const sample of samples) {\n    const sampleLanguage = (\n      sample.metadata?.labels?.[LOCALIZATION_LANGUAGE_LABEL] || 'en'\n    ).toLowerCase();\n    const sampleCountry = (\n      sample.metadata?.labels?.[LOCALIZATION_COUNTRY_LABEL] || ''\n    ).toUpperCase();\n\n    if (sampleLanguage === preferredLanguage && sampleCountry === preferredCountry) {\n      return sample;\n    }\n    if (sampleLanguage === preferredLanguage) {\n      if (!sampleCountry && !sameLanguageWithoutCountry) {\n        sameLanguageWithoutCountry = sample;\n      } else if (sampleCountry && !sameLanguageWithAnyCountry) {\n        sameLanguageWithAnyCountry = sample;\n      }\n    }\n    if (sampleLanguage === 'en') {\n      if (sampleCountry === preferredCountry && !fallbackLanguageSameCountry) {\n        fallbackLanguageSameCountry = sample;\n      } else if (!sampleCountry && !fallbackLanguageNoCountry) {\n        fallbackLanguageNoCountry = sample;\n      } else if (!fallbackLanguageAnyCountry) {\n        fallbackLanguageAnyCountry = sample;\n      }\n    }\n  }\n  return (\n    sameLanguageWithoutCountry ||\n    sameLanguageWithAnyCountry ||\n    fallbackLanguageSameCountry ||\n    fallbackLanguageNoCountry ||\n    fallbackLanguageAnyCountry\n  );\n};\n\nexport const useSamples = () => {\n  return useK8sWatchResource<ConsoleSample[]>({\n    isList: true,\n    groupVersionKind: getGroupVersionKindForModel(ConsoleSampleModel),\n  });\n};\n\nexport const getSample = (name: string): Promise<ConsoleSample> =>\n  k8sGetResource({ model: ConsoleSampleModel, name });\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { hasIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentConfigModel, DeploymentModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  referenceForModel,\n  ImagePullPolicy,\n} from '@console/internal/module/k8s';\nimport {\n  KNATIVE_AUTOSCALEWINDOW_ANNOTATION,\n  KNATIVE_CONCURRENCYTARGET_ANNOTATION,\n  KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION,\n  KNATIVE_MAXSCALE_ANNOTATION,\n  KNATIVE_MINSCALE_ANNOTATION,\n  PRIVATE_KNATIVE_SERVING_LABEL,\n  ServiceModel,\n} from '@console/knative-plugin';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { isDockerPipeline } from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { getLimitsDataFromResource } from '@console/shared/src';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport { getHealthChecksData } from '../health-checks/create-health-checks-probe-utils';\nimport { deployValidationSchema } from '../import/deployImage-validation-utils';\nimport {\n  Resources,\n  DeploymentData,\n  GitReadableTypes,\n  ServerlessData,\n  BuildOptions,\n  BuildData,\n} from '../import/import-types';\nimport {\n  detectGitType,\n  validationSchema as importValidationSchema,\n} from '../import/import-validation-utils';\nimport { getAutoscaleWindow } from '../import/serverless/serverless-utils';\nimport { validationSchema as jarValidationSchema } from '../import/upload-jar-validation-utils';\nimport { AppResources } from './edit-application-types';\n\nexport enum ApplicationFlowType {\n  Git = 'Import from Git',\n  Dockerfile = 'Import from Dockerfile',\n  Container = 'Deploy Image',\n  JarUpload = 'Upload JAR file',\n}\n\nexport const getFlowTypePageTitle = (flowType: ApplicationFlowType): string => {\n  switch (flowType) {\n    case ApplicationFlowType.Git:\n      // t('devconsole~Import from Git')\n      return 'devconsole~Import from Git';\n    case ApplicationFlowType.Dockerfile:\n      // t('devconsole~Import from Dockerfile')\n      return 'devconsole~Import from Dockerfile';\n    case ApplicationFlowType.Container:\n      // t('devconsole~Deploy Image')\n      return 'devconsole~Deploy Image';\n    case ApplicationFlowType.JarUpload:\n      // t('devconsole~Upload JAR file')\n      return 'devconsole~Upload JAR file';\n    default:\n      return flowType;\n  }\n};\n\nexport enum BuildSourceType {\n  Git = 'Git',\n  Binary = 'Binary',\n}\n\nconst isFromJarUpload = (type: string): boolean => type === BuildSourceType.Binary;\n\nconst getBuildSourceType = (buildConfig: K8sResourceKind): string =>\n  buildConfig?.spec?.source?.type;\n\nexport const getResourcesType = (resource: K8sResourceKind): Resources => {\n  switch (resource.kind) {\n    case DeploymentConfigModel.kind:\n      return Resources.OpenShift;\n    case DeploymentModel.kind:\n      return Resources.Kubernetes;\n    case referenceFor(resource) === referenceForModel(ServiceModel) ? ServiceModel.kind : '':\n      return Resources.KnativeService;\n    default:\n      return null;\n  }\n};\n\nexport const getFlowType = (buildStrategy: string, buildType?: string): ApplicationFlowType => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary\n        ? ApplicationFlowType.JarUpload\n        : ApplicationFlowType.Git;\n    case BuildStrategyType.Docker:\n      return ApplicationFlowType.Dockerfile;\n    default:\n      return ApplicationFlowType.Container;\n  }\n};\n\nexport const getValidationSchema = (\n  buildStrategy: string,\n  buildType?: string,\n): ((t: TFunction) => any) => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary ? jarValidationSchema : importValidationSchema;\n    case BuildStrategyType.Docker:\n      return importValidationSchema;\n    default:\n      return deployValidationSchema;\n  }\n};\n\nexport const checkIfTriggerExists = (\n  triggers: { [key: string]: any }[],\n  type: string,\n  resourceKind?: string,\n) => {\n  return !!_.find(triggers, (trigger) => {\n    if (resourceKind === DeploymentConfigModel.kind && type === 'ImageChange') {\n      return trigger.type === type && trigger.imageChangeParams?.automatic;\n    }\n    return trigger.type === type;\n  });\n};\n\nexport const getGitDataFromBuildConfig = (buildConfig: K8sResourceKind) => {\n  const url = buildConfig?.spec?.source?.git?.uri ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(buildConfig, 'spec.source.git.ref', ''),\n    dir: _.get(buildConfig, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(buildConfig, 'spec.source.sourceSecret.name', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nconst getGitDataFromPipeline = (pipeline: PipelineKind) => {\n  const params = pipeline?.spec?.params;\n  const url = (params?.find((param) => param?.name === 'GIT_REPO')?.default ?? '') as string;\n  const ref = params?.find((param) => param?.name === 'GIT_REVISION')?.default ?? '';\n  const dir = params?.find((param) => param?.name === 'PATH_CONTEXT')?.default ?? '/';\n  return {\n    url,\n    ref,\n    dir,\n    type: detectGitType(url),\n    showGitType: false,\n    secret: '',\n    isUrlValidating: false,\n  };\n};\n\nconst getGitDataFromShipwrightBuild = (shipwrightBuild: K8sResourceKind) => {\n  const url = shipwrightBuild?.spec?.source?.git?.url ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(shipwrightBuild, 'spec.source.git.revision', ''),\n    dir: _.get(shipwrightBuild, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(shipwrightBuild, 'spec.source.git.cloneSecret', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nexport const getKsvcRouteData = (resource: K8sResourceKind) => {\n  const { metadata, spec } = resource;\n  const containers = spec?.template?.spec?.containers ?? [];\n  const port = containers?.[0]?.ports?.[0]?.containerPort ?? '';\n  const routeData = {\n    create: metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] !== 'cluster-local',\n    unknownTargetPort: _.toString(port),\n    targetPort: _.toString(port),\n    defaultUnknownPort: 8080,\n  };\n  return routeData;\n};\n\nexport const getDefaultLabels = () => {\n  return [\n    'app',\n    'app.kubernetes.io/instance',\n    'app.openshift.io/runtime',\n    'app.kubernetes.io/part-of',\n    'app.openshift.io/runtime-version',\n    'app.openshift.io/runtime-namespace',\n    'networking.knative.dev/visibility',\n  ];\n};\n\nexport const getRouteLabels = (\n  route: K8sResourceKind,\n  resource: K8sResourceKind,\n): Record<string, string> => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const allRouteLabels = _.get(route, 'metadata.labels', {});\n  const filteredRouteLabels = _.omit(allRouteLabels, [\n    ...getDefaultLabels(),\n    ...Object.keys(allLabels),\n  ]);\n  return filteredRouteLabels;\n};\n\nexport const getRouteData = (route: K8sResourceKind, resource: K8sResourceKind) => {\n  let routeData = {\n    disable: !_.isEmpty(route),\n    create: !_.isEmpty(route),\n    targetPort: _.get(route, 'spec.port.targetPort', ''),\n    unknownTargetPort: _.toString(route?.spec?.port?.targetPort?.split('-')?.[0]) || '',\n    defaultUnknownPort: 8080,\n    path: _.get(route, 'spec.path', ''),\n    hostname: _.get(route, 'spec.host', ''),\n    secure: _.has(route, 'spec.tls.termination'),\n    tls: {\n      termination: _.get(route, 'spec.tls.termination', null),\n      insecureEdgeTerminationPolicy: _.get(route, 'spec.tls.insecureEdgeTerminationPolicy', null),\n      caCertificate: _.get(route, 'spec.tls.caCertificate', ''),\n      certificate: _.get(route, 'spec.tls.certificate', ''),\n      destinationCACertificate: _.get(route, 'spec.tls.destinationCACertificate', ''),\n      key: _.get(route, 'spec.tls.key', ''),\n    },\n    labels: getRouteLabels(route, resource),\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    routeData = {\n      ...routeData,\n      ...getKsvcRouteData(resource),\n    };\n  }\n  return routeData;\n};\n\nconst getBuildOption = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (buildConfig) {\n    return BuildOptions.BUILDS;\n  }\n  if (shipwrightBuild) {\n    return BuildOptions.SHIPWRIGHT_BUILD;\n  }\n  if (pipeline) {\n    return BuildOptions.PIPELINES;\n  }\n  return BuildOptions.DISABLED;\n};\n\nexport const getBuildData = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n  gitType: string,\n) => {\n  const buildOption = getBuildOption(buildConfig, shipwrightBuild, pipeline);\n  let buildStrategyType: BuildStrategyType | string;\n  let shipwrightClusterBuildStrategyType: ClusterBuildStrategy;\n  let buildStrategyData;\n\n  if (buildOption === BuildOptions.BUILDS) {\n    buildStrategyType = _.get(buildConfig, 'spec.strategy.type', '');\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    shipwrightClusterBuildStrategyType = _.get(shipwrightBuild, 'spec.strategy.name', '');\n    switch (shipwrightClusterBuildStrategyType) {\n      case ClusterBuildStrategy.BUILDAH:\n        buildStrategyType = BuildStrategyType.Docker;\n        break;\n      case ClusterBuildStrategy.S2I:\n        buildStrategyType = BuildStrategyType.Source;\n        break;\n      default:\n        buildStrategyType = '';\n    }\n  }\n\n  if (buildOption === BuildOptions.BUILDS) {\n    switch (buildStrategyType) {\n      case BuildStrategyType.Source:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.sourceStrategy');\n        break;\n      case BuildStrategyType.Docker:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.dockerStrategy');\n        break;\n      default:\n        buildStrategyData = { env: [] };\n    }\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    buildStrategyData = _.get(shipwrightBuild, 'spec');\n  }\n\n  const triggers = _.get(buildConfig, 'spec.triggers');\n\n  const buildData: BuildData = {\n    env: buildStrategyData?.env || [],\n    triggers: {\n      webhook: checkIfTriggerExists(triggers, GitReadableTypes[gitType]),\n      image: checkIfTriggerExists(triggers, 'ImageChange'),\n      config: checkIfTriggerExists(triggers, 'ConfigChange'),\n    },\n    strategy:\n      buildStrategyType ||\n      (isDockerPipeline(pipeline) ? BuildStrategyType.Docker : BuildStrategyType.Source),\n    source: { type: getBuildSourceType(buildConfig) },\n    option: buildOption,\n    clusterBuildStrategy: shipwrightClusterBuildStrategyType,\n  };\n  return buildData;\n};\n\nexport const getServerlessData = (resource: K8sResourceKind): ServerlessData => {\n  let serverlessData: ServerlessData = {\n    scaling: {\n      minpods: '',\n      maxpods: '',\n      concurrencytarget: '',\n      concurrencylimit: '',\n      autoscale: {\n        autoscalewindow: '',\n        autoscalewindowUnit: 's',\n        defaultAutoscalewindowUnit: 's',\n      },\n      concurrencyutilization: '',\n    },\n    domainMapping: [],\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    const {\n      spec: {\n        template: { metadata, spec },\n      },\n    } = resource;\n    const annotations = metadata?.annotations;\n    const autoscalewindowAnnotation = annotations?.[KNATIVE_AUTOSCALEWINDOW_ANNOTATION] || '';\n    const { autoscalewindow, autoscalewindowUnit, defaultAutoscalewindowUnit } = getAutoscaleWindow(\n      autoscalewindowAnnotation,\n    );\n    serverlessData = {\n      scaling: {\n        minpods: annotations?.[KNATIVE_MINSCALE_ANNOTATION] || '',\n        maxpods: annotations?.[KNATIVE_MAXSCALE_ANNOTATION] || '',\n        concurrencytarget: annotations?.[KNATIVE_CONCURRENCYTARGET_ANNOTATION] || '',\n        concurrencylimit: spec?.containerConcurrency || '',\n        autoscale: {\n          autoscalewindow,\n          autoscalewindowUnit,\n          defaultAutoscalewindowUnit,\n        },\n        concurrencyutilization: annotations?.[KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION] || '',\n      },\n      domainMapping: [],\n    };\n  }\n  return serverlessData;\n};\n\nexport const getDeploymentData = (resource: K8sResourceKind) => {\n  const deploymentData: DeploymentData = {\n    env: [],\n    replicas: 1,\n    triggers: { image: true, config: true },\n  };\n  const container = resource.spec?.template?.spec?.containers?.find((c) =>\n    [resource.metadata.name, resource.metadata.labels?.['app.kubernetes.io/name']].includes(c.name),\n  );\n  const env = container?.env ?? [];\n  switch (getResourcesType(resource)) {\n    case Resources.KnativeService:\n      return {\n        ...deploymentData,\n        env,\n        triggers: {\n          image: container?.imagePullPolicy === ImagePullPolicy.Always,\n        },\n      };\n    case Resources.OpenShift: {\n      const triggers = resource.spec?.triggers;\n      return {\n        env,\n        triggers: {\n          image: checkIfTriggerExists(triggers, 'ImageChange', resource.kind),\n          config: checkIfTriggerExists(triggers, 'ConfigChange'),\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    case Resources.Kubernetes: {\n      const imageTrigger = JSON.parse(\n        resource.metadata?.annotations?.['image.openshift.io/triggers'] ?? '[]',\n      )?.[0];\n      return {\n        env,\n        triggers: {\n          image: imageTrigger?.paused === 'false',\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    default:\n      return deploymentData;\n  }\n};\n\nexport const getUserLabels = (resource: K8sResourceKind) => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const userLabels = _.omit(allLabels, getDefaultLabels());\n  return userLabels;\n};\n\nexport const getCommonInitialValues = (\n  editAppResource: K8sResourceKind,\n  route: K8sResourceKind,\n  pipelineData: PipelineKind,\n  name: string,\n  namespace: string,\n) => {\n  const appGroupName = _.get(editAppResource, 'metadata.labels[\"app.kubernetes.io/part-of\"]');\n  const commonInitialValues = {\n    formType: 'edit',\n    name,\n    application: {\n      name: appGroupName || '',\n      selectedKey: appGroupName || UNASSIGNED_KEY,\n    },\n    project: {\n      name: namespace,\n    },\n    route: getRouteData(route, editAppResource),\n    resources: getResourcesType(editAppResource),\n    serverless: getServerlessData(editAppResource),\n    pipeline: {\n      enabled: !_.isEmpty(pipelineData),\n      type: PipelineType.PIPELINE,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n    deployment: getDeploymentData(editAppResource),\n    labels: getUserLabels(editAppResource),\n    limits: getLimitsDataFromResource(editAppResource),\n    healthChecks: getHealthChecksData(editAppResource),\n    import: {\n      showEditImportStrategy: true,\n      selectedStrategy: {\n        name: '',\n        type: ImportStrategy.S2I,\n        priority: 0,\n        detectedFiles: [],\n      },\n    },\n  };\n  return commonInitialValues;\n};\n\nexport const getIconInitialValues = (editAppResource: K8sResourceKind) => {\n  const runtimeLabel = editAppResource?.metadata?.labels?.['app.openshift.io/runtime'];\n  const runtimeIcon = runtimeLabel && hasIcon(runtimeLabel) ? runtimeLabel : null;\n  return {\n    runtimeIcon,\n  };\n};\n\nexport const getGitAndDockerfileInitialValues = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (_.isEmpty(buildConfig) && _.isEmpty(shipwrightBuild) && _.isEmpty(pipeline)) {\n    return {};\n  }\n\n  const currentImage = _.split(buildConfig?.spec?.strategy?.sourceStrategy?.from?.name ?? '', ':');\n  const git = !_.isEmpty(buildConfig)\n    ? getGitDataFromBuildConfig(buildConfig)\n    : !_.isEmpty(shipwrightBuild)\n    ? getGitDataFromShipwrightBuild(shipwrightBuild)\n    : getGitDataFromPipeline(pipeline);\n  const initialValues = {\n    git,\n    docker: {\n      dockerfilePath:\n        buildConfig?.spec?.strategy?.dockerStrategy?.dockerfilePath ||\n        pipeline?.spec?.params?.find((param) => param?.name === 'DOCKERFILE')?.default ||\n        'Dockerfile',\n    },\n    image: {\n      selected: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_LABEL] || currentImage[0] || '',\n      recommended: '',\n      tag: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_VERSION_LABEL] || currentImage[1] || '',\n      tagObj: {},\n      ports: [],\n      isRecommending: false,\n      couldNotRecommend: false,\n    },\n    build: getBuildData(buildConfig, shipwrightBuild, pipeline, git.type),\n  };\n  return initialValues;\n};\n\nexport const deployImageInitialValues = {\n  searchTerm: '',\n  registry: 'external',\n  allowInsecureRegistry: false,\n  imageStream: {\n    image: '',\n    tag: '',\n    namespace: '',\n  },\n  isi: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  image: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  build: {\n    env: [],\n    triggers: {},\n    strategy: '',\n  },\n  isSearchingForImage: false,\n};\n\nexport const getExternalImageInitialValues = (appResources: AppResources) => {\n  const imageStreamList = appResources?.imageStream?.data;\n  if (_.isEmpty(imageStreamList)) {\n    return {};\n  }\n  const imageStream = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const imageStreamData = imageStream?.[0]?.spec?.tags?.[0];\n  const name = imageStreamData?.from?.name;\n  const isAllowInsecureRegistry = imageStreamData?.importPolicy?.insecure || false;\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: 'external',\n    allowInsecureRegistry: isAllowInsecureRegistry,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getInternalImageInitialValues = (editAppResource: K8sResourceKind) => {\n  const imageStreamNamespace = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-namespace\"]',\n    '',\n  );\n  const imageStreamName = _.get(editAppResource, 'metadata.labels[\"app.openshift.io/runtime\"]', '');\n  const imageStreamTag = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-version\"]',\n    '',\n  );\n  return {\n    ...deployImageInitialValues,\n    registry: RegistryType.Internal,\n    imageStream: {\n      image: imageStreamName,\n      tag: imageStreamTag,\n      namespace: imageStreamNamespace,\n    },\n  };\n};\n\nexport const getExternalImageValues = (appResource: K8sResourceKind) => {\n  const name = _.get(appResource, 'spec.template.spec.containers[0].image', null);\n  if (_.isEmpty(appResource) || !name) {\n    return deployImageInitialValues;\n  }\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: RegistryType.External,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getFileUploadValues = (resource: K8sResourceKind, buildConfig: K8sResourceKind) => {\n  const resourceName = resource.metadata.name;\n  const fileName = buildConfig.metadata?.annotations?.jarFileName ?? '';\n  const javaArgs: string =\n    resource.spec?.template?.spec?.containers\n      ?.find((container) => container.name === resourceName)\n      ?.env?.find((args) => args.name === 'JAVA_ARGS')?.value ?? '';\n  return {\n    fileUpload: {\n      name: fileName,\n      value: '',\n      javaArgs,\n    },\n    ...getIconInitialValues(resource),\n  };\n};\n\nexport const getInitialValues = (\n  appResources: AppResources,\n  appName: string,\n  namespace: string,\n) => {\n  const editAppResourceData = appResources.editAppResource?.data;\n  const routeData = appResources.route?.data;\n  const buildConfigData = appResources.buildConfig?.data;\n  const shipwrightBuildData = appResources.shipwrightBuild?.data;\n  const pipelineData = appResources.pipeline?.data;\n\n  const commonValues = getCommonInitialValues(\n    editAppResourceData,\n    routeData,\n    pipelineData,\n    appName,\n    namespace,\n  );\n  const gitDockerValues = getGitAndDockerfileInitialValues(\n    buildConfigData,\n    shipwrightBuildData,\n    pipelineData,\n  );\n  let fileUploadValues = {};\n  let iconValues = {};\n  let externalImageValues = {};\n  let internalImageValues = {};\n  if (_.isEmpty(gitDockerValues)) {\n    iconValues = getIconInitialValues(editAppResourceData);\n    externalImageValues = getExternalImageInitialValues(appResources);\n    internalImageValues = _.isEmpty(externalImageValues)\n      ? getInternalImageInitialValues(editAppResourceData)\n      : {};\n    if (\n      _.isEmpty(externalImageValues) &&\n      !_.get(internalImageValues, 'imageStream.tag') &&\n      !_.get(internalImageValues, 'imageStream.image')\n    ) {\n      if (editAppResourceData?.kind === ServiceModel.kind) {\n        internalImageValues = {};\n        externalImageValues = getExternalImageValues(editAppResourceData);\n      }\n    }\n  } else if (isFromJarUpload(getBuildSourceType(buildConfigData))) {\n    fileUploadValues = getFileUploadValues(editAppResourceData, buildConfigData);\n  }\n\n  return {\n    ...commonValues,\n    ...iconValues,\n    ...fileUploadValues,\n    ...gitDockerValues,\n    ...externalImageValues,\n    ...internalImageValues,\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as React from 'react';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport {\n  SecretFormWrapper,\n  SecretTypeAbstraction,\n} from '@console/internal/components/secrets/create-secret';\n\nexport interface CreateSecretModalProps {\n  save?: (name: string) => void;\n  namespace: string;\n  secretType: SecretTypeAbstraction;\n}\n\ntype Props = CreateSecretModalProps & ModalComponentProps;\n\nconst CreateSecretModal: React.FC<Props> = ({ close, namespace, save, secretType }) => {\n  const handleSave = (name: string) => {\n    close();\n    save(name);\n  };\n\n  return (\n    <SecretFormWrapper\n      onCancel={close}\n      onSave={handleSave}\n      fixed={{ metadata: { namespace } }}\n      secretTypeAbstraction={secretType}\n      isCreate\n      modal\n    />\n  );\n};\n\nexport const secretModalLauncher = createModalLauncher<Props>(CreateSecretModal);\n\nexport default CreateSecretModal;\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  buildValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const fileNameRegex = /\\.(jar)$/i;\n\nexport const fileUploadValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(fileNameRegex, {\n        message: t('devconsole~Must be a JAR file.'),\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.'))\n      .required(t('devconsole~Required')),\n    javaArgs: yup.string(),\n  });\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    fileUpload: fileUploadValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n\nexport const getAppName = (name: string) => {\n  if (!fileNameRegex.test(name)) {\n    return undefined;\n  }\n  return _.kebabCase(name.split('.').shift());\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, TextAreaField } from '@console/shared';\nimport ApplicationSelector from '@console/topology/src/components/dropdowns/ApplicationSelector';\nimport { ProjectData } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface AppSectionProps {\n  project: ProjectData;\n  noProjectsAvailable?: boolean;\n  extraMargin?: boolean;\n  subPath?: string;\n  fullWidth?: boolean;\n}\n\nconst AppSection: React.FC<AppSectionProps> = ({\n  project,\n  noProjectsAvailable,\n  extraMargin,\n  subPath,\n  fullWidth,\n}) => {\n  const [initialApplication] = useField(\n    subPath ? `${subPath}.application.initial` : 'application.initial',\n  );\n  const [formType] = useField('formType');\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~General')} extraMargin={extraMargin} fullWidth={fullWidth}>\n      {noProjectsAvailable && (\n        <>\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-name\"\n            name={subPath ? `${subPath}.project.name` : 'project.name'}\n            label={t('devconsole~Project name')}\n            helpText={t('devconsole~A unique name for the Project.')}\n            required\n          />\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-display-name\"\n            name={subPath ? `${subPath}.project.displayName` : 'project.displayName'}\n            label={t('devconsole~Project display name')}\n          />\n          <TextAreaField\n            data-test-id=\"application-form-project-description\"\n            name={subPath ? `${subPath}.project.description` : 'project.description'}\n            label={t('devconsole~Project description')}\n          />\n        </>\n      )}\n      {!initialApplication.value && (\n        <ApplicationSelector\n          namespace={project.name}\n          noProjectsAvailable={noProjectsAvailable}\n          subPath={subPath}\n        />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"application-form-app-name\"\n        name={subPath ? `${subPath}.name` : 'name'}\n        label={t('devconsole~Name')}\n        helpText={t(\n          'devconsole~A unique name given to the component that will be used to name associated resources.',\n        )}\n        isDisabled={formType.value && formType.value === 'edit'}\n        required={!(formType.value && formType.value === 'edit')}\n      />\n    </FormSection>\n  );\n};\n\nexport default AppSection;\n","import { K8sModel } from '@console/internal/module/k8s';\n\nexport const ConsoleSampleModel: K8sModel = {\n  kind: 'ConsoleSample',\n  label: 'ConsoleSample',\n  labelPlural: 'ConsoleSamples',\n  apiGroup: 'console.openshift.io',\n  apiVersion: 'v1',\n  abbr: 'CS',\n  namespaced: false,\n  crd: true,\n  plural: 'consolesamples',\n  propagationPolicy: 'Background',\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  isiValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const deployValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    name: nameValidationSchema(t),\n    isi: isiValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  InputField,\n  RedExclamationCircleIcon,\n  getFieldId,\n  useFormikValidationFix,\n} from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../../const';\nimport { sanitizeApplicationValue } from '../../utils/application-utils';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface ApplicationSelectorProps {\n  namespace?: string;\n  noProjectsAvailable?: boolean;\n  subPath?: string;\n}\n\nconst ApplicationSelector: React.FC<ApplicationSelectorProps> = ({\n  namespace,\n  noProjectsAvailable,\n  subPath,\n}) => {\n  const { t } = useTranslation();\n  const [applicationsAvailable, setApplicationsAvailable] = React.useState(true);\n  const availableApplications = React.useRef<string[]>([]);\n  const projectsAvailable = !noProjectsAvailable;\n\n  const [selectedKey, { touched, error }] = useField(\n    subPath ? `${subPath}.application.selectedKey` : 'application.selectedKey',\n  );\n  const [nameField] = useField(subPath ? `${subPath}.application.name` : 'application.name');\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [applicationExists, setApplicationExists] = React.useState<boolean>(false);\n  const applicationNameInputRef = React.useRef<HTMLInputElement>();\n  const fieldId = getFieldId('application-name', 'dropdown');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n\n  useFormikValidationFix(selectedKey.value);\n\n  const onDropdownChange = (key: string, application: string) => {\n    setFieldValue(selectedKey.name, key);\n    setFieldTouched(selectedKey.name, true);\n    setFieldValue(nameField.name, sanitizeApplicationValue(application, key));\n    setFieldTouched(nameField.name, true);\n    setApplicationExists(false);\n  };\n\n  const handleOnLoad = (applicationList: { [key: string]: string }) => {\n    const noApplicationsAvailable = _.isEmpty(applicationList);\n    setApplicationsAvailable(!noApplicationsAvailable);\n    availableApplications.current = _.keys(applicationList);\n    if (noApplicationsAvailable) {\n      setFieldValue(selectedKey.name, '');\n      setFieldValue(\n        nameField.name,\n        (selectedKey.value !== UNASSIGNED_KEY && nameField.value) ?? '',\n      );\n    }\n  };\n\n  const actionItems = [\n    {\n      actionTitle: t('topology~Create application'),\n      actionKey: CREATE_APPLICATION_KEY,\n    },\n    {\n      actionTitle: t('topology~No application group'),\n      actionKey: UNASSIGNED_KEY,\n    },\n  ];\n\n  const handleAppChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApplicationExists(availableApplications.current.includes(event.target.value.trim()));\n  };\n\n  const handleAppBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const trimmedApplicationName = event.target.value.trim();\n    setFieldValue(nameField.name, trimmedApplicationName);\n  };\n\n  const label = t('topology~Application');\n  const inputHelpText = applicationExists\n    ? t('topology~Warning: the application grouping already exists.')\n    : t('topology~A unique name given to the application grouping to label your resources.');\n\n  React.useEffect(() => {\n    if (selectedKey.value === CREATE_APPLICATION_KEY) {\n      applicationNameInputRef.current?.focus();\n    }\n  }, [selectedKey.value]);\n\n  return (\n    <>\n      {projectsAvailable && applicationsAvailable && (\n        <FormGroup fieldId={fieldId} label={label}>\n          <ApplicationDropdown\n            id={fieldId}\n            ariaLabel={label}\n            dropDownClassName=\"dropdown--full-width\"\n            menuClassName=\"dropdown-menu--text-wrap\"\n            namespace={namespace}\n            actionItems={actionItems}\n            autoSelect\n            selectedKey={selectedKey.value}\n            onChange={onDropdownChange}\n            onLoad={handleOnLoad}\n          />\n\n          <FormHelperText>\n            <HelperText>\n              {!isValid ? (\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {errorMessage}\n                </HelperTextItem>\n              ) : (\n                <HelperTextItem>\n                  {t('topology~Select an Application to group this component.')}\n                </HelperTextItem>\n              )}\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n      {(!applicationsAvailable || selectedKey.value === CREATE_APPLICATION_KEY) && (\n        <InputField\n          type={TextInputTypes.text}\n          required={selectedKey.value === CREATE_APPLICATION_KEY}\n          name={nameField.name}\n          ref={applicationNameInputRef}\n          label={t('topology~Application name')}\n          data-test-id=\"application-form-app-input\"\n          helpText={inputHelpText}\n          validated={applicationExists ? ValidatedOptions.warning : ValidatedOptions.default}\n          onChange={handleAppChange}\n          onBlur={handleAppBlur}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ApplicationSelector;\n","import * as React from 'react';\nimport { FormikValues } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ProgressiveList, ProgressiveListItem } from '@console/shared/src';\nimport { AppResources } from '../../edit-application/edit-application-types';\nimport HealthChecks from '../../health-checks/HealthChecks';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport DeploymentConfigSection from './DeploymentConfigSection';\nimport LabelSection from './LabelSection';\nimport ResourceLimitSection from './ResourceLimitSection';\nimport RouteSection from './RouteSection';\nimport ScalingSection from './ScalingSection';\nimport ServerlessScalingSection from './ServerlessScalingSection';\n\ntype AdvancedSectionProps = {\n  values: FormikValues;\n  appResources?: AppResources;\n};\n\nconst Footer = ({ children }) => {\n  const { t } = useTranslation();\n  return (\n    <Trans\n      t={t}\n      ns=\"devconsole\"\n      defaults=\"Click on the names to access advanced options for <0></0>.\"\n      components={[children]}\n    />\n  );\n};\n\nconst List: React.FC<AdvancedSectionProps> = ({ appResources, values }) => {\n  const { t } = useTranslation();\n\n  const [visibleItems, setVisibleItems] = React.useState([]);\n  const handleVisibleItemChange = (item: string) => {\n    setVisibleItems([...visibleItems, item]);\n  };\n\n  return (\n    <ProgressiveList\n      visibleItems={visibleItems}\n      onVisibleItemChange={handleVisibleItemChange}\n      Footer={Footer}\n    >\n      <ProgressiveListItem name={t('devconsole~Health checks')}>\n        <HealthChecks title={t('devconsole~Health checks')} resourceType={values.resources} />\n      </ProgressiveListItem>\n      {values?.formType === 'edit' ? (\n        <ProgressiveListItem name={t('devconsole~Deployment')}>\n          <DeploymentConfigSection\n            namespace={values.project.name}\n            resource={appResources?.editAppResource?.data}\n          />\n        </ProgressiveListItem>\n      ) : null}\n\n      <ProgressiveListItem name={t('devconsole~Scaling')}>\n        {values.resources === Resources.KnativeService ? (\n          <ServerlessScalingSection />\n        ) : (\n          <ScalingSection name=\"deployment.replicas\" />\n        )}\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Resource limits')}>\n        <ResourceLimitSection />\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Labels')}>\n        <LabelSection />\n      </ProgressiveListItem>\n    </ProgressiveList>\n  );\n};\n\nconst AdvancedSection: React.FC<AdvancedSectionProps> = ({ values, appResources }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~Advanced options')}>\n      <RouteSection route={values.route} resources={values.resources} />\n      <div>\n        <List appResources={appResources} values={values} />\n      </div>\n    </FormSection>\n  );\n};\n\nexport default AdvancedSection;\n","import * as React from 'react';\nimport {\n  Alert,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RedExclamationCircleIcon } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  RegistryType,\n  BuilderImagesNamespace,\n  getImageStreamTags,\n} from '../../../utils/imagestream-utils';\nimport { ImageStreamState, ImageStreamAction, ImageStreamActions } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\nimport ImageStreamDropdown from './ImageStreamDropdown';\nimport ImageStreamNsDropdown from './ImageStreamNsDropdown';\nimport ImageStreamTagDropdown from './ImageStreamTagDropdown';\n\nimport './ImageStream.scss';\n\nexport const initialState: ImageStreamState = {\n  loading: false,\n  accessLoading: false,\n  selectedImageStream: {},\n};\n\nexport const ImageStreamReducer = (state: ImageStreamState, action: ImageStreamAction) => {\n  const { value } = action;\n  switch (action.type) {\n    case ImageStreamActions.setLoading:\n      return { ...state, loading: value };\n    case ImageStreamActions.setAccessLoading:\n      return { ...state, accessLoading: value };\n    case ImageStreamActions.setSelectedImageStream:\n      return { ...state, selectedImageStream: value };\n    default:\n      throw new Error('Invalid action was provided in imagestream reducer');\n  }\n};\n\nconst ImageStream: React.FC<{\n  disabled?: boolean;\n  label?: string;\n  required?: boolean;\n  formContextField?: string;\n  dataTest?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, label, required = false, formContextField, dataTest, reloadCount }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const [state, dispatch] = React.useReducer(ImageStreamReducer, initialState);\n  const [hasImageStreams, setHasImageStreams] = React.useState(false);\n  const { loading, accessLoading, selectedImageStream } = state;\n  const { imageStream, project, registry, isi, fromImageStreamTag } =\n    _.get(values, formContextField) || values;\n\n  const imageStreamTagList = getImageStreamTags(selectedImageStream as K8sResourceKind);\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const isTagsAvailable =\n    imageStream.tag !== '' || (isStreamsAvailable && !_.isEmpty(imageStreamTagList));\n  const isImageStreamSelected = imageStream.image !== '';\n  const showCommandLineAlert =\n    project.name !== imageStream.namespace &&\n    imageStream.namespace !== BuilderImagesNamespace.Openshift &&\n    (registry === RegistryType.Internal || fromImageStreamTag) &&\n    isStreamsAvailable &&\n    isTagsAvailable;\n  const helperTextInvalid = validated === ValidatedOptions.error && isi.status?.message && (\n    <>\n      <ExclamationCircleIcon />\n      &nbsp;{isi.status?.message}\n    </>\n  );\n\n  return (\n    <>\n      <ImageStreamContext.Provider\n        value={{ state, dispatch, hasImageStreams, setHasImageStreams, setValidated }}\n      >\n        <FormGroup\n          fieldId=\"image-stream-dropdowns\"\n          label={label}\n          required={required}\n          data-test={dataTest}\n        >\n          <div className=\"row\">\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamNsDropdown disabled={disabled} formContextField={formContextField} />\n            </div>\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamDropdown\n                disabled={disabled}\n                formContextField={formContextField}\n                reloadCount={reloadCount}\n              />\n              <div className=\"odc-imagestream-separator\">/</div>\n            </div>\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\">\n              <ImageStreamTagDropdown\n                disabled={disabled}\n                formContextField={formContextField}\n                reloadCount={reloadCount}\n              />\n              <div className=\"odc-imagestream-separator\">:</div>\n            </div>\n          </div>\n\n          {validated === ValidatedOptions.error && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {helperTextInvalid}\n                </HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n        {isNamespaceSelected && isImageStreamSelected && !isTagsAvailable && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert variant=\"warning\" title={t('devconsole~No Image streams tags found')} isInline>\n              {t('devconsole~No tags are available in Image Stream {{image}}', {\n                image: imageStream.image,\n              })}\n            </Alert>\n          </div>\n        )}\n        {isNamespaceSelected && !loading && !isStreamsAvailable && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert variant=\"warning\" title={t('devconsole~No Image streams found')} isInline>\n              {t('devconsole~No Image streams are available in Project {{namespace}}', {\n                namespace: imageStream.namespace,\n              })}\n            </Alert>\n          </div>\n        )}\n        {isNamespaceSelected && !accessLoading && showCommandLineAlert && (\n          <div className=\"odc-imagestream-alert\">\n            <Alert\n              variant=\"warning\"\n              isInline\n              title={t(\n                'devconsole~Service account default will need pull authority to deploy Images from {{namespace}}',\n                { namespace: imageStream.namespace },\n              )}\n            >\n              {t('devconsole~You can grant authority with the command')}{' '}\n              <ClipboardCopy\n                className=\"odc-imagestream-clipboard\"\n                variant={ClipboardCopyVariant.expansion}\n                isReadOnly\n              >{`oc policy add-role-to-user system:image-puller system:serviceaccount:${project.name}:default --namespace=${imageStream.namespace}`}</ClipboardCopy>\n            </Alert>\n          </div>\n        )}\n      </ImageStreamContext.Provider>\n    </>\n  );\n};\n\nexport default React.memo(ImageStream);\n","import { Dispatch, SetStateAction } from 'react';\nimport { useUserSettings } from '@console/shared';\n\nexport const PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY =\n  'devconsole.import.secureRoutingOptions';\n\ntype RoutingOptions = {\n  secure: boolean;\n  tlsTermination?: string;\n  insecureTraffic?: string;\n};\n\nexport const usePreferredRoutingOptions = (): [\n  RoutingOptions,\n  Dispatch<SetStateAction<RoutingOptions>>,\n  boolean,\n] => {\n  const [\n    preferredRoutingOptions,\n    setPreferredRoutingOptions,\n    preferredRoutingOptionsLoaded,\n  ] = useUserSettings<RoutingOptions>(PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY, {\n    secure: true,\n    tlsTermination: 'edge',\n    insecureTraffic: 'Redirect',\n  });\n  return [preferredRoutingOptions, setPreferredRoutingOptions, preferredRoutingOptionsLoaded];\n};\n","import * as React from 'react';\nimport { Resources } from '../import/import-types';\nimport FormSection from '../import/section/FormSection';\nimport { HealthChecksProbeType } from './health-checks-types';\nimport HealthCheckProbe from './HealthCheckProbe';\n\ninterface HealthChecksProps {\n  title?: string;\n  resourceType: Resources;\n}\n\nconst HealthChecks: React.FC<HealthChecksProps> = ({ title, resourceType }) => (\n  <FormSection title={title}>\n    <HealthCheckProbe probeType={HealthChecksProbeType.ReadinessProbe} />\n\n    <HealthCheckProbe probeType={HealthChecksProbeType.LivenessProbe} />\n\n    {resourceType !== Resources.KnativeService && (\n      <HealthCheckProbe probeType={HealthChecksProbeType.StartupProbe} />\n    )}\n  </FormSection>\n);\n\nexport default HealthChecks;\n","import * as React from 'react';\nimport { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { GreenCheckCircleIcon } from '@console/shared';\nimport { getHealthChecksProbeConfig, healthChecksDefaultValues } from './health-checks-probe-utils';\nimport { HealthCheckProbeData } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport ProbeForm from './ProbeForm';\nimport './HealthCheckProbe.scss';\n\ninterface HealthCheckProbeProps {\n  probeType: string;\n}\n\nconst HealthCheckProbe: React.FC<HealthCheckProbeProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const [temporaryProbeData, setTemporaryProbeData] = React.useState<HealthCheckProbeData>();\n  const showProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n    setTemporaryProbeData(healthChecks?.[probeType].data);\n  };\n\n  const handleDeleteProbe = () => {\n    setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    if (healthChecks?.[probeType]?.modified) {\n      setFieldValue(`healthChecks.${probeType}.modified`, false);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.modified`, true);\n    }\n  };\n\n  const handleReset = () => {\n    if (!healthChecks?.[probeType]?.enabled) {\n      setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.showForm`, false);\n      setFieldValue(`healthChecks.${probeType}.data`, temporaryProbeData);\n    }\n    setFieldValue(`healthChecks.${probeType}.modified`, false);\n  };\n\n  const handleSubmit = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, false);\n    setFieldValue(`healthChecks.${probeType}.enabled`, true);\n    setFieldValue(`healthChecks.${probeType}.modified`, true);\n  };\n\n  const handleAddProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n  };\n\n  const renderProbe = () => {\n    if (healthChecks?.[probeType]?.showForm) {\n      return <ProbeForm onSubmit={handleSubmit} onClose={handleReset} probeType={probeType} />;\n    }\n    if (healthChecks?.[probeType]?.enabled) {\n      return (\n        <>\n          <Button\n            className=\"odc-heath-check-probe__successButton\"\n            variant={ButtonVariant.plain}\n            isInline\n            onClick={showProbe}\n          >\n            <span className=\"odc-heath-check-probe__successText\">\n              <GreenCheckCircleIcon />{' '}\n              {t('devconsole~{{healthCheckProbeAdded}} added', {\n                healthCheckProbeAdded: getHealthChecksProbeConfig(probeType, t).formTitle,\n              })}\n            </span>\n          </Button>\n          {!viewOnly && (\n            <Tooltip content={t('devconsole~Remove')} position=\"right\">\n              <Button\n                className=\"pf-m-plain--align-left\"\n                variant={ButtonVariant.plain}\n                onClick={handleDeleteProbe}\n              >\n                <MinusCircleIcon />\n              </Button>\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n    return viewOnly ? (\n      t('devconsole~No {{noHealthCheckProbe}}', {\n        noHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n      })\n    ) : (\n      <Button\n        className=\"pf-m-link--align-left\"\n        variant={ButtonVariant.link}\n        onClick={handleAddProbe}\n        icon={<PlusCircleIcon />}\n      >\n        {t('devconsole~Add {{addHealthCheckProbe}}', {\n          addHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n        })}\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"co-section-heading-tertiary odc-heath-check-probe__formTitle\">\n        {getHealthChecksProbeConfig(probeType, t).formTitle}\n        {healthChecks?.[probeType]?.enabled && (\n          <Button\n            className=\"pf-m-link--align-left\"\n            variant={ButtonVariant.link}\n            onClick={showProbe}\n          >\n            &nbsp;&nbsp;\n            {`${viewOnly ? t('devconsole~View') : t('devconsole~Edit')} ${t('devconsole~Probe')}`}\n          </Button>\n        )}\n      </div>\n      <div className=\"pf-v5-c-form__helper-text\">\n        {getHealthChecksProbeConfig(probeType, t).formSubtitle}\n      </div>\n      <div className=\"co-toolbar__group co-toolbar__group--left\">{renderProbe()}</div>\n    </>\n  );\n};\n\nexport default HealthCheckProbe;\n","import * as React from 'react';\nimport { TextInputTypes, InputGroupText } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { InputGroupField, InputField, DropdownField, ActionGroupWithIcons } from '@console/shared';\nimport FormSection from '../import/section/FormSection';\nimport { RequestType } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport {\n  HTTPRequestTypeForm,\n  TCPRequestTypeForm,\n  CommandRequestTypeForm,\n} from './RequestTypeForms';\nimport './ProbeForm.scss';\n\nconst getRequestTypeForm = (value: string, probeType: string) => {\n  switch (value) {\n    case RequestType.HTTPGET:\n      return <HTTPRequestTypeForm probeType={probeType} />;\n    case RequestType.ContainerCommand:\n      return <CommandRequestTypeForm probeType={probeType} />;\n    case RequestType.TCPSocket:\n      return <TCPRequestTypeForm probeType={probeType} />;\n    default:\n      return null;\n  }\n};\n\ninterface ProbeFormProps {\n  onSubmit: () => void;\n  onClose: () => void;\n  probeType: string;\n}\n\nconst ProbeForm: React.FC<ProbeFormProps> = ({ onSubmit, onClose, probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    errors,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const RequestTypeOptions = {\n    httpGet: t('devconsole~HTTP GET'),\n    command: t('devconsole~Container command'),\n    tcpSocket: t('devconsole~TCP socket'),\n  };\n  return (\n    <div className=\"odc-heath-check-probe-form\">\n      <FormSection>\n        <DropdownField\n          name={`healthChecks.${probeType}.data.requestType`}\n          label={t('devconsole~Type')}\n          items={RequestTypeOptions}\n          title={RequestType.HTTPGET}\n          disabled={viewOnly}\n          fullWidth\n        />\n        {getRequestTypeForm(healthChecks?.[probeType]?.data?.requestType, probeType)}\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.failureThreshold`}\n          label={t('devconsole~Failure threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many times the probe will try starting or restarting before giving up.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.successThreshold`}\n          label={t('devconsole~Success threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many consecutive successes for the probe to be considered successful after having failed.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.initialDelaySeconds`}\n          label={t('devconsole~Initial delay')}\n          helpText={t(\n            'devconsole~How long to wait after the Container starts before checking its health.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.periodSeconds`}\n          label={t('devconsole~Period')}\n          helpText={t('devconsole~How often to perform the probe.')}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.timeoutSeconds`}\n          label={t('devconsole~Timeout')}\n          helpText={t(\n            'devconsole~How long to wait for the probe to finish, if the time is exceeded, the probe is considered failed.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n      </FormSection>\n      <ActionGroupWithIcons\n        onSubmit={!viewOnly ? onSubmit : undefined}\n        onClose={onClose}\n        isDisabled={!_.isEmpty(errors?.healthChecks?.[probeType])}\n      />\n    </div>\n  );\n};\n\nexport default ProbeForm;\n","import * as React from 'react';\nimport { TextInputTypes, FormGroup } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { NameValueEditor } from '@console/internal/components/utils/name-value-editor';\nimport { InputField, CheckboxField, getFieldId, TextColumnField } from '@console/shared';\nimport { Resources } from '../import/import-types';\nimport { HealthCheckContext } from './health-checks-utils';\n\ninterface RequestTypeFormProps {\n  probeType?: string;\n}\n\nexport const renderPortField = (\n  fieldName: string,\n  resourceType: Resources,\n  viewOnly: boolean,\n  t: TFunction,\n) => {\n  if (resourceType === Resources.KnativeService) {\n    return (\n      <InputField\n        type={TextInputTypes.text}\n        name=\"knative-port\"\n        label={t('devconsole~Port')}\n        placeholder=\"0\"\n        isDisabled\n      />\n    );\n  }\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={fieldName}\n      label={t('devconsole~Port')}\n      isDisabled={viewOnly}\n      required\n    />\n  );\n};\n\nexport const HTTPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks, resources },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const httpHeaders = healthChecks?.[probeType]?.data?.httpGet?.httpHeaders;\n  const initialNameValuePairs = !_.isEmpty(httpHeaders)\n    ? httpHeaders.map((val) => _.values(val))\n    : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialNameValuePairs);\n  const portFieldName = `healthChecks.${probeType}.data.httpGet.port`;\n\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      const updatedNameValuePairs = _.compact(\n        nameValuePairs.map(([name, value]) => {\n          if (_.isObject(value)) {\n            return { name, valueFrom: value };\n          }\n          if (value.length) {\n            return { name, value };\n          }\n          return null;\n        }),\n      );\n      setNameValue(nameValuePairs);\n      setFieldValue(`healthChecks.${probeType}.data.httpGet.httpHeaders`, updatedNameValuePairs);\n    },\n    [setFieldValue, probeType],\n  );\n  return (\n    <>\n      <CheckboxField\n        name={`healthChecks.${probeType}.data.httpGet.scheme`}\n        label={t('devconsole~Use HTTPS')}\n        value=\"HTTPS\"\n        isDisabled={viewOnly}\n      />\n      <FormGroup\n        fieldId={getFieldId(`healthChecks.${probeType}.data.httpGet.httpHeaders`, 'name-value')}\n        name={`healthChecks.${probeType}.data.httpGet.httpHeaders`}\n        label={t('devconsole~HTTP Headers')}\n      >\n        <NameValueEditor\n          nameValuePairs={nameValue}\n          valueString={t('devconsole~Value')}\n          nameString={t('devconsole~Header name')}\n          addString={t('devconsole~Add header')}\n          readOnly={viewOnly}\n          allowSorting={false}\n          updateParentData={handleNameValuePairs}\n        />\n      </FormGroup>\n      <InputField\n        type={TextInputTypes.text}\n        name={`healthChecks.${probeType}.data.httpGet.path`}\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        isDisabled={viewOnly}\n      />\n      {renderPortField(portFieldName, resources, viewOnly, t)}\n    </>\n  );\n};\n\nexport const TCPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { resources },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const portFieldName = `healthChecks.${probeType}.data.tcpSocket.port`;\n  return renderPortField(portFieldName, resources, viewOnly, t);\n};\n\nexport const CommandRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const commands = healthChecks?.[probeType]?.data?.exec?.command || [''];\n  return (\n    <TextColumnField\n      name={`healthChecks.${probeType}.data.exec.command`}\n      label={t('devconsole~Command')}\n      addLabel={t('devconsole~Add command')}\n      placeholder={t('devconsole~argument')}\n      helpText={t('devconsole~The command to run inside the Container.')}\n      required\n      disableDeleteRow={commands.length === 1}\n      isReadOnly={viewOnly}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { ContainerModel } from '@console/internal/models';\nimport { ResourceLimitField } from '@console/shared';\nimport { MemoryUnits, CPUUnits } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport type ResourceLimitSectionProps = {\n  hideTitle?: boolean;\n};\n\nconst ResourceLimitSection: React.FC<ResourceLimitSectionProps> = ({ hideTitle }) => {\n  const { t } = useTranslation();\n  const {\n    values: { container },\n  } = useFormikContext<FormikValues>();\n  return (\n    <FormSection\n      title={!hideTitle && t('devconsole~Resource limit')}\n      subTitle={t(\n        'devconsole~Resource limits control how much CPU and memory a container will consume on a node.',\n      )}\n      fullWidth\n    >\n      {container && (\n        <span>\n          {t('devconsole~Container')} &nbsp;\n          <ResourceIcon kind={ContainerModel.kind} /> {container}\n        </span>\n      )}\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~CPU')}</div>\n      <ResourceLimitField\n        name=\"limits.cpu.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.cpu.requestUnit\"\n        unitOptions={CPUUnits}\n        helpText={t('devconsole~The minimum amount of CPU the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.cpu.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.cpu.limitUnit\"\n        unitOptions={CPUUnits}\n        helpText={t(\n          'devconsole~The maximum amount of CPU the Container is allowed to use when running.',\n        )}\n      />\n\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~Memory')}</div>\n      <ResourceLimitField\n        name=\"limits.memory.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.memory.requestUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t('devconsole~The minimum amount of Memory the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.memory.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.memory.limitUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t(\n          'devconsole~The maximum amount of Memory the Container is allowed to use when running.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ResourceLimitSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ScalingSection: React.FC<{ name: string }> = ({ name }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t('devconsole~Replicas are scaled manually based on CPU usage.')}\n      dataTest=\"scaling\"\n    >\n      <NumberSpinnerField\n        name={name}\n        label={t('devconsole~Replicas')}\n        helpText={t('devconsole~The number of instances of your Image.')}\n        setOutputAsIntegerFlag\n      />\n    </FormSection>\n  );\n};\n\nexport default ScalingSection;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField } from '@console/shared';\nimport { getImageStreamResource } from '../../../utils/imagestream-utils';\nimport { ImageStreamActions } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamDropdown: React.FC<{\n  disabled?: boolean;\n  formContextField?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, formContextField, reloadCount }) => {\n  const { t } = useTranslation();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const imgCollection = {};\n\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const { imageStream, formType } = _.get(values, formContextField) || values;\n  const { isi: initialIsi } = _.get(initialValues, formContextField) || initialValues;\n  const { state, dispatch, hasImageStreams, setHasImageStreams } = React.useContext(\n    ImageStreamContext,\n  );\n  const { accessLoading, loading } = state;\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const collectImageStreams = (namespace: string, resource: K8sResourceKind): void => {\n    if (!imgCollection[namespace]) {\n      imgCollection[namespace] = {};\n    }\n    imgCollection[namespace][resource.metadata.name] = resource;\n  };\n  const getTitle = () => {\n    return loading && !isStreamsAvailable\n      ? ''\n      : !isStreamsAvailable\n      ? t('devconsole~No Image Stream')\n      : t('devconsole~Select Image Stream');\n  };\n\n  const onDropdownChange = React.useCallback(\n    (img: string) => {\n      setFieldValue(\n        `${fieldPrefix}imageStream.tag`,\n        img === imageStream.image ? imageStream.tag : '',\n      );\n      formType !== 'edit' && setFieldValue(`${fieldPrefix}isi`, initialIsi);\n      const image = _.get(imgCollection, [imageStream.namespace, img], {});\n      dispatch({ type: ImageStreamActions.setSelectedImageStream, value: image });\n    },\n    [\n      setFieldValue,\n      fieldPrefix,\n      imageStream.image,\n      imageStream.tag,\n      imageStream.namespace,\n      formType,\n      initialIsi,\n      imgCollection,\n      dispatch,\n    ],\n  );\n  const onLoad = (imgstreams) => {\n    const imageStreamAvailable = !_.isEmpty(imgstreams);\n    setHasImageStreams(imageStreamAvailable);\n    loading &&\n      isNamespaceSelected &&\n      dispatch({ type: ImageStreamActions.setLoading, value: false });\n  };\n  const resourceFilter = (resource: K8sResourceKind) => {\n    const {\n      metadata: { namespace },\n    } = resource;\n    collectImageStreams(namespace, resource);\n    return namespace === imageStream.namespace;\n  };\n\n  React.useEffect(() => {\n    imageStream.image && onDropdownChange(imageStream.image);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageStream.image, isStreamsAvailable]);\n\n  React.useEffect(() => {\n    reloadCount && imageStream.image && onDropdownChange(imageStream.image);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reloadCount, isStreamsAvailable]);\n\n  return (\n    <ResourceDropdownField\n      name={`${fieldPrefix}imageStream.image`}\n      label={t('devconsole~Image Stream')}\n      resources={getImageStreamResource(imageStream.namespace)}\n      dataSelector={['metadata', 'name']}\n      key={imageStream.namespace}\n      fullWidth\n      required\n      title={imageStream.image || getTitle()}\n      disabled={!isStreamsAvailable || disabled}\n      onChange={onDropdownChange}\n      onLoad={onLoad}\n      resourceFilter={resourceFilter}\n    />\n  );\n};\n\nexport default ImageStreamDropdown;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceDropdownField } from '@console/shared';\nimport { getProjectResource, BuilderImagesNamespace } from '../../../utils/imagestream-utils';\nimport { ImageStreamActions as Action } from '../import-types';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamNsDropdown: React.FC<{ disabled?: boolean; formContextField?: string }> = ({\n  disabled = false,\n  formContextField,\n}) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const { imageStream } = _.get(values, formContextField) || values;\n  const { isi: initialIsi } = _.get(initialValues, formContextField) || initialValues;\n  const { dispatch } = React.useContext(ImageStreamContext);\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const onDropdownChange = React.useCallback(\n    (ns?: string) => {\n      if (ns) {\n        setFieldValue(`${fieldPrefix}imageStream.image`, '');\n        setFieldValue(`${fieldPrefix}imageStream.tag`, '');\n      }\n      setFieldValue(`${fieldPrefix}isi`, initialIsi);\n      dispatch({ type: Action.setLoading, value: true });\n    },\n    [dispatch, fieldPrefix, initialIsi, setFieldValue],\n  );\n\n  React.useEffect(() => {\n    imageStream.namespace && onDropdownChange();\n  }, [onDropdownChange, imageStream.namespace]);\n\n  return (\n    <ResourceDropdownField\n      name={`${fieldPrefix}imageStream.namespace`}\n      label={t('devconsole~Project')}\n      title={imageStream.namespace || t('devconsole~Select Project')}\n      fullWidth\n      required\n      resources={getProjectResource()}\n      dataSelector={['metadata', 'name']}\n      onChange={onDropdownChange}\n      appendItems={{ openshift: BuilderImagesNamespace.Openshift }}\n      disabled={disabled}\n    />\n  );\n};\nexport default ImageStreamNsDropdown;\n","import * as React from 'react';\nimport { ValidatedOptions } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, getIn } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { k8sGet, K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport {\n  getImageStreamTags,\n  getPorts,\n  getSuggestedName,\n  makePortName,\n  imageStreamLabels,\n} from '../../../utils/imagestream-utils';\nimport { ImageStreamContext } from './ImageStreamContext';\n\nconst ImageStreamTagDropdown: React.FC<{\n  disabled?: boolean;\n  formContextField?: string;\n  reloadCount?: number;\n}> = ({ disabled = false, formContextField, reloadCount }) => {\n  const { t } = useTranslation();\n  const unmounted = React.useRef(false);\n  let imageStreamTagList = {};\n  const { values, setFieldValue, initialValues, touched } = useFormikContext<FormikValues>();\n  const { name: resourceName, imageStream, application, formType, isi: isiValues } =\n    _.get(values, formContextField) || values;\n  const isiPorts = isiValues?.ports;\n  const { imageStream: initialImageStream, route: initialRoute } =\n    _.get(initialValues, formContextField) || initialValues;\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { state, hasImageStreams, setValidated } = React.useContext(ImageStreamContext);\n  const { selectedImageStream, accessLoading, loading } = state;\n  imageStreamTagList = getImageStreamTags(selectedImageStream as K8sResourceKind);\n  const isNamespaceSelected = imageStream.namespace !== '' && !accessLoading;\n  const isStreamsAvailable = isNamespaceSelected && hasImageStreams && !loading;\n  const isTagsAvailable = isStreamsAvailable && !_.isEmpty(imageStreamTagList);\n  const isImageStreamSelected = imageStream.image !== '';\n  const initialImageStreamImage = initialImageStream?.image;\n\n  const searchImageTag = React.useCallback(\n    (selectedTag: string) => {\n      setFieldValue(`${fieldPrefix}isSearchingForImage`, true);\n      k8sGet(ImageStreamTagModel, `${imageStream.image}:${selectedTag}`, imageStream.namespace)\n        .then((imageStreamImport) => {\n          if (unmounted.current) return;\n          const {\n            image,\n            tag,\n            status,\n            metadata: { labels },\n          } = imageStreamImport;\n          formContextField && setFieldValue(`${fieldPrefix}imageStreamTag`, imageStreamImport);\n          const imgStreamLabels = _.pick(labels, imageStreamLabels);\n          const name = imageStream.image;\n          const isi = { name, image, tag, status };\n          const ports = getPorts(isi);\n          setFieldValue(`${fieldPrefix}isSearchingForImage`, false);\n          setFieldValue(`${fieldPrefix}isi.name`, name);\n          setFieldValue(\n            `${fieldPrefix}isi.image`,\n            _.merge(image, { metadata: { labels: imgStreamLabels } }),\n          );\n          setFieldValue(`${fieldPrefix}isi.tag`, selectedTag);\n          setFieldValue(`${fieldPrefix}isi.ports`, ports);\n          setFieldValue(`${fieldPrefix}image.ports`, ports);\n          formType !== 'edit' &&\n            resourceName !== name &&\n            setFieldValue(`${fieldPrefix}name`, getSuggestedName(name));\n          application &&\n            application.selectedKey !== UNASSIGNED_KEY &&\n            !application.name &&\n            setFieldValue(`${fieldPrefix}application.name`, `${getSuggestedName(name)}-app`);\n          // set default port value\n          const targetPort =\n            initialRoute &&\n            (!initialRoute.targetPort ||\n              getIn(_.get(touched, `${fieldPrefix}imageStream`), 'image')) &&\n            !getIn(_.get(touched, `${fieldPrefix}route`), 'targetPort') &&\n            _.head(ports);\n          targetPort && setFieldValue(`${fieldPrefix}route.targetPort`, makePortName(targetPort));\n          setValidated(ValidatedOptions.success);\n        })\n        .catch((error) => {\n          if (unmounted.current) return;\n          setFieldValue(`${fieldPrefix}isi`, {});\n          setFieldValue(`${fieldPrefix}isi.status`, {\n            metadata: {},\n            status: '',\n            message: error.message,\n          });\n          setFieldValue(`${fieldPrefix}isSearchingForImage`, false);\n          setValidated(ValidatedOptions.error);\n        });\n    },\n    [\n      setFieldValue,\n      fieldPrefix,\n      imageStream.image,\n      imageStream.namespace,\n      formContextField,\n      resourceName,\n      formType,\n      application,\n      initialRoute,\n      touched,\n      setValidated,\n    ],\n  );\n\n  React.useEffect(() => {\n    imageStream.tag && searchImageTag(imageStream.tag);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageStream.tag]);\n\n  React.useEffect(() => {\n    reloadCount && imageStream.tag && searchImageTag(imageStream.tag);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reloadCount]);\n\n  React.useEffect(() => {\n    if (\n      initialRoute &&\n      getIn(_.get(touched, `${fieldPrefix}imageStream`), 'image') &&\n      !getIn(_.get(touched, `${fieldPrefix}route`), 'targetPort') &&\n      !_.isEqual(initialImageStreamImage, imageStream.image)\n    ) {\n      const targetPort: ContainerPort = _.head(isiPorts);\n      targetPort && setFieldValue(`${fieldPrefix}route.targetPort`, makePortName(targetPort));\n    }\n  }, [\n    touched.route,\n    touched.imageStream,\n    imageStream.image,\n    setFieldValue,\n    isiPorts,\n    initialRoute,\n    initialImageStreamImage,\n    fieldPrefix,\n    touched,\n  ]);\n\n  React.useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n\n  return (\n    <DropdownField\n      name={`${fieldPrefix}imageStream.tag`}\n      label={t('devconsole~Tag')}\n      items={imageStreamTagList}\n      key={imageStream.image}\n      autocompleteFilter={fuzzy}\n      title={\n        imageStream.tag ||\n        (isNamespaceSelected && isImageStreamSelected && !isTagsAvailable\n          ? t('devconsole~No tag')\n          : t('devconsole~Select tag'))\n      }\n      disabled={!isImageStreamSelected || !isTagsAvailable || disabled}\n      fullWidth\n      required\n      onChange={(tag) => {\n        tag !== '' && searchImageTag(tag);\n      }}\n    />\n  );\n};\n\nexport default ImageStreamTagDropdown;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CheckboxField, EnvironmentField } from '@console/shared';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface DeploymentConfigSectionProps {\n  namespace: string;\n  resource?: K8sResourceKind;\n  showHeader?: boolean;\n}\n\nconst DeploymentConfigSection: React.FC<DeploymentConfigSectionProps> = ({\n  namespace,\n  resource,\n  showHeader,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      resources,\n      deployment: { env },\n      import: { selectedStrategy, knativeFuncLoaded: funcLoaded },\n    },\n  } = useFormikContext<FormikValues>();\n  const deploymentConfigObj = resource || {\n    kind: 'DeploymentConfig',\n    metadata: {\n      namespace,\n    },\n  };\n\n  return (\n    <FormSection title={showHeader && t('devconsole~Deployment')} fullWidth>\n      <CheckboxField\n        name=\"deployment.triggers.image\"\n        label={t('devconsole~Auto deploy when new Image is available')}\n      />\n      {resources === Resources.OpenShift && (\n        <CheckboxField\n          name=\"deployment.triggers.config\"\n          label={t('devconsole~Auto deploy when deployment configuration changes')}\n        />\n      )}\n      {(\n        selectedStrategy.type === ImportStrategy.SERVERLESS_FUNCTION ? funcLoaded ?? false : true\n      ) ? (\n        <EnvironmentField\n          name=\"deployment.env\"\n          label={t('devconsole~Environment variables (runtime only)')}\n          envs={env}\n          obj={deploymentConfigObj}\n        />\n      ) : (\n        <LoadingBox />\n      )}\n    </FormSection>\n  );\n};\n\nexport default DeploymentConfigSection;\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, DroppableFileInputField, CheckboxField } from '@console/shared';\nimport { usePreferredRoutingOptions } from '../../user-preferences/usePreferredRoutingOptions';\nimport {\n  TerminationType,\n  PassthroughInsecureTrafficType,\n  InsecureTrafficType,\n} from '../import-types';\n\nconst SecureRoute: React.FC = () => {\n  const { t } = useTranslation();\n  const [preferredRoutingOptions, , preferredRoutingOptionsLoaded] = usePreferredRoutingOptions();\n  const { secure: secureRoute, tlsTermination, insecureTraffic } =\n    preferredRoutingOptionsLoaded && preferredRoutingOptions;\n  const {\n    values: {\n      formType,\n      route: { secure, tls },\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const terminationOptions = {\n    [TerminationType.EDGE]: t('devconsole~Edge'),\n    [TerminationType.PASSTHROUGH]: t('devconsole~Passthrough'),\n    [TerminationType.REENCRYPT]: t('devconsole~Re-encrypt'),\n  };\n  const insecureTrafficOptions =\n    tls.termination === TerminationType.PASSTHROUGH\n      ? {\n          [PassthroughInsecureTrafficType.None]: t('devconsole~None'),\n          [PassthroughInsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        }\n      : {\n          [InsecureTrafficType.None]: t('devconsole~None'),\n          [InsecureTrafficType.Allow]: t('devconsole~Allow'),\n          [InsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        };\n\n  React.useEffect(() => {\n    if (formType !== 'edit' && preferredRoutingOptionsLoaded) {\n      setFieldValue('route.secure', secureRoute, false);\n      setFieldValue('route.tls.termination', tlsTermination, false);\n      setFieldValue('route.tls.insecureEdgeTerminationPolicy', insecureTraffic, true);\n    }\n  }, [\n    formType,\n    insecureTraffic,\n    preferredRoutingOptionsLoaded,\n    secureRoute,\n    setFieldValue,\n    tlsTermination,\n  ]);\n  return (\n    <>\n      <CheckboxField\n        name=\"route.secure\"\n        label={t('devconsole~Secure Route')}\n        formLabel={t('devconsole~Security')}\n        helpText={t(\n          'devconsole~Routes can be secured using several TLS termination types for serving certificates.',\n        )}\n      />\n      {secure && (\n        <>\n          <DropdownField\n            name=\"route.tls.termination\"\n            label={t('devconsole~TLS termination')}\n            items={terminationOptions}\n            title={t('devconsole~Select termination type')}\n            fullWidth\n          />\n          <DropdownField\n            name=\"route.tls.insecureEdgeTerminationPolicy\"\n            label={t('devconsole~Insecure traffic')}\n            items={insecureTrafficOptions}\n            title={t('devconsole~Select insecure traffic type')}\n            helpText={t('devconsole~Policy for traffic on insecure schemes like HTTP.')}\n            fullWidth\n          />\n          {tls.termination && tls.termination !== 'passthrough' && (\n            <>\n              <h3>{t('devconsole~Certificates')}</h3>\n              <FormHelperText>\n                {t(\n                  \"devconsole~TLS certificates for edge and re-encrypt termination. If not specified, the router's default certificate is used.\",\n                )}\n              </FormHelperText>\n              <DroppableFileInputField\n                name=\"route.tls.certificate\"\n                label={t('devconsole~Certificate')}\n                helpText={t(\n                  'devconsole~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.key\"\n                label={t('devconsole~Private Key')}\n                helpText={t(\n                  'devconsole~The PEM format key. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.caCertificate\"\n                label={t('devconsole~CA certificate')}\n                helpText={t(\n                  'devconsole~The PEM format CA certificate chain. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              {tls.termination === 'reencrypt' && (\n                <DroppableFileInputField\n                  name=\"route.tls.destinationCaCertificate\"\n                  label={t('devconsole~Destination CA Certificate')}\n                  helpText={t(\n                    'devconsole~The PEM format CA certificate chain to validate the endpoint certificate for re-encrypt termination. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                  )}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SecureRoute;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport FormSection from '../section/FormSection';\n\nconst LabelSection: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <FormSection\n      title={t('devconsole~Labels')}\n      subTitle={t('devconsole~Each label is applied to each created resource.')}\n    >\n      <SelectorInputField name=\"labels\" placeholder=\"app.io/type=frontend\" dataTest=\"labels\" />\n    </FormSection>\n  );\n};\n\nexport default LabelSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField } from '@console/shared';\nimport { Resources, RouteData } from '../import-types';\nimport AdvancedRouteOptions from '../route/AdvancedRouteOptions';\nimport PortInputField from '../route/PortInputField';\n\ninterface RouteSectionProps {\n  route: RouteData;\n  resources: Resources;\n}\n\nconst RouteSection: React.FC<RouteSectionProps> = ({ route, resources }) => {\n  const { t } = useTranslation();\n  const { defaultUnknownPort, disable, create } = route;\n\n  return (\n    <>\n      <PortInputField defaultPort={defaultUnknownPort} />\n      <CheckboxField\n        name=\"route.create\"\n        label={t('devconsole~Create a route')}\n        helpText={t('devconsole~Exposes your component at a public URL')}\n        isDisabled={disable}\n      />\n      <AdvancedRouteOptions canCreateRoute={create} resources={resources} />\n    </>\n  );\n};\n\nexport default RouteSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport ServerlessRouteSection from '../serverless/ServerlessRouteSection';\nimport CreateRoute from './CreateRoute';\nimport SecureRoute from './SecureRoute';\n\ntype AdvancedRouteOptionsProps = {\n  canCreateRoute: boolean;\n  resources: Resources;\n};\n\nconst AdvancedRouteOptions: React.FC<AdvancedRouteOptionsProps> = ({\n  canCreateRoute,\n  resources,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textExpanded={t('devconsole~Hide advanced Routing options')}\n      textCollapsed={t('devconsole~Show advanced Routing options')}\n    >\n      <FormSection>\n        {canCreateRoute ? (\n          resources === Resources.KnativeService ? (\n            <ServerlessRouteSection />\n          ) : (\n            <>\n              <CreateRoute />\n              <SecureRoute />\n              <SelectorInputField\n                name=\"route.labels\"\n                label={t('devconsole~Labels')}\n                helpText={t(\n                  'devconsole~Additional labels which are only added to the Route resource.',\n                )}\n                placeholder=\"app.io/type=frontend\"\n                dataTest=\"route-labels\"\n              />\n            </>\n          )\n        ) : (\n          <Alert\n            variant=\"info\"\n            isInline\n            title={t(\n              'devconsole~Select the checkbox \"Create a route\" to edit advanced routing options',\n            )}\n          />\n        )}\n      </FormSection>\n    </ExpandCollapse>\n  );\n};\n\nexport default AdvancedRouteOptions;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { DomainMappingModel } from '@console/knative-plugin/src';\nimport { MultiTypeaheadField } from '@console/shared';\nimport { GitImportFormData, DeployImageFormData, UploadJarFormData } from '../import-types';\nimport {\n  getAllOtherDomainMappingInUse,\n  getOtherKsvcFromDomainMapping,\n  hasOtherKsvcDomainMappings,\n  removeDuplicateDomainMappings,\n} from './serverless-utils';\n\nconst ServerlessRouteSection: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    setFieldValue,\n    values: {\n      name,\n      project: { name: namespace },\n      serverless,\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(DomainMappingModel),\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace],\n  );\n  const [data, domainMappingLoaded, domainMappingLoadErr] = useK8sWatchResource<K8sResourceKind[]>(\n    resource,\n  );\n  const domainMappingResources = React.useMemo(() => {\n    return domainMappingLoaded && !domainMappingLoadErr\n      ? data.map((dm) => {\n          const ksvc = getOtherKsvcFromDomainMapping(dm, name);\n          return {\n            value: ksvc ? `${dm.metadata.name} (${ksvc})` : dm.metadata.name,\n            disabled: false,\n          };\n        })\n      : [];\n  }, [domainMappingLoaded, domainMappingLoadErr, data, name]);\n\n  React.useEffect(() => {\n    if (domainMappingLoaded && !domainMappingLoadErr && data?.length) {\n      const mappedDomain = data\n        .filter((domainRes) => domainRes.spec?.ref?.name === name)\n        .map((filterDm) => filterDm.metadata.name);\n      const newDomainMap = [\n        ...(serverless.domainMapping ? serverless.domainMapping : []),\n        ...mappedDomain,\n      ];\n      setFieldValue('serverless', {\n        ...serverless,\n        domainMapping: removeDuplicateDomainMappings(newDomainMap, mappedDomain),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, domainMappingLoaded, domainMappingLoadErr, name, setFieldValue]);\n\n  const domainsInUse = getAllOtherDomainMappingInUse(serverless.domainMapping, data, name) ?? [];\n  return (\n    <>\n      {domainMappingLoaded || domainMappingLoadErr ? (\n        <>\n          <MultiTypeaheadField\n            data-test-id=\"domain-mapping-field\"\n            name=\"serverless.domainMapping\"\n            label={t('devconsole~Domain mapping')}\n            ariaLabel={t('devconsole~Domain mapping')}\n            options={domainMappingResources}\n            placeholderText={t('devconsole~Add domain')}\n            helpText={t('devconsole~Enter custom domain to map to the Knative service')}\n            isCreatable\n          />\n          {hasOtherKsvcDomainMappings(serverless.domainMapping) && (\n            <Alert\n              data-test=\"domain-mapping-warning\"\n              variant=\"warning\"\n              isInline\n              title={t('devconsole~Domain mapping(s) will be updated')}\n            >\n              <div style={{ marginBottom: 'var(--pf-v5-global--spacer--sm)' }}>\n                {t(\n                  'devconsole~Warning: The following domain(s) will be removed from the associated service',\n                )}\n              </div>\n              {domainsInUse.length > 0 && (\n                <ul>\n                  {domainsInUse.map((dm) => {\n                    return (\n                      <li key={dm.metadata.uid}>\n                        {t(`devconsole~{{domainMapping}} from {{knativeService}}`, {\n                          domainMapping: dm.metadata.name,\n                          knativeService: dm.spec.ref.name,\n                        })}\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </Alert>\n          )}\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </>\n  );\n};\n\nexport default ServerlessRouteSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\nconst CreateRoute: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.hostname\"\n        label={t('devconsole~Hostname')}\n        helpText={t(\n          'devconsole~Public hostname for the route. If not specified, a hostname is generated.',\n        )}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.path\"\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        helpText={t('devconsole~Path that the router watches to route traffic to the service.')}\n      />\n    </>\n  );\n};\n\nexport default CreateRoute;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SingleTypeaheadField, SelectInputOption } from '@console/shared';\nimport { DeployImageFormData, GitImportFormData, UploadJarFormData } from '../import-types';\n\ninterface PortInputFieldProps {\n  defaultPort: number;\n}\n\nconst PortInputField: React.FC<PortInputFieldProps> = ({ defaultPort }) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      image: { ports },\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const portOptions: SelectInputOption[] = Array.from(\n    new Set(ports.map((port) => port.containerPort.toString())),\n  ).map((value) => ({\n    value,\n    disabled: false,\n  }));\n  const placeholderPort = ports[0]?.containerPort || defaultPort;\n\n  return (\n    <SingleTypeaheadField\n      data-test-id=\"target-port-field\"\n      name=\"route.unknownTargetPort\"\n      label={t('devconsole~Target port')}\n      ariaLabel={t('devconsole~Target port')}\n      placeholderText={placeholderPort.toString()}\n      helpText={t('devconsole~Target port for traffic.')}\n      options={portOptions}\n      toggleOnSelection\n    />\n  );\n};\n\nexport default PortInputField;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField, ResourceLimitField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ServerlessScalingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const AutoscaleWindowUnits = {\n    s: t('devconsole~Sec'),\n    m: t('devconsole~Min'),\n    h: t('devconsole~Hrs'),\n  };\n\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t(\n        'devconsole~Set the autoscaler parameters around pods and concurrency limits in this section.',\n      )}\n    >\n      <NumberSpinnerField\n        name=\"serverless.scaling.minpods\"\n        label={t('devconsole~Min Pods')}\n        helpText={t(\n          'devconsole~The lower limit for the number of Pods that can be set by autoscaler. If not specified defaults to 0.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.maxpods\"\n        label={t('devconsole~Max Pods')}\n        helpText={t(\n          'devconsole~The upper limit for the number of Pods that can be set by autoscaler.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencytarget\"\n        label={t('devconsole~Concurrency target')}\n        helpText={t(\n          'devconsole~Defines how many concurrent requests are wanted per instance of the application at a given time (soft limit) and is the recommended configuration for autoscaling. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencylimit\"\n        label={t('devconsole~Concurrency limit')}\n        helpText={t(\n          'devconsole~Limits the amount of concurrent requests allowed into one instance of the application at a given time (hard limit), and is configured in the revision template. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencyutilization\"\n        label={t('devconsole~Concurrency utilization')}\n        helpText={t('devconsole~Percentage of concurrent requests utilization before scaling up.')}\n      />\n      <ResourceLimitField\n        name=\"serverless.scaling.autoscale.autoscalewindow\"\n        label={t('devconsole~Autoscale window')}\n        unitName=\"serverless.scaling.autoscale.autoscalewindowUnit\"\n        unitOptions={AutoscaleWindowUnits}\n        helpText={t(\n          'devconsole~Duration to look back for making auto-scaling decisions. The service is scaled to zero if no request was received in during that time.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ServerlessScalingSection;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport IconDropdown from '../icon/IconDropdown';\nimport FormSection from './FormSection';\n\nconst IconSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [field] = useField<string>('runtimeIcon');\n  const formik = useFormikContext<{ runtimeIcon: string }>();\n\n  const onChanged = (value: string) => {\n    formik.setFieldValue('runtimeIcon', value);\n    formik.setFieldTouched('runtimeIcon');\n  };\n\n  return (\n    <FormSection>\n      <FormGroup fieldId=\"runtimeIcon\" label={t('devconsole~Runtime icon')}>\n        <IconDropdown\n          placeholder={t('devconsole~Select an icon')}\n          value={field.value}\n          onChanged={onChanged}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t(\n                'devconsole~The icon represents your Image in Topology view. A label will also be added to the resource defining the icon.',\n              )}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default IconSection;\n","import * as _ from 'lodash';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  ImageStreamModel,\n  ServiceModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sVerb,\n  k8sCreate,\n  k8sUpdate,\n  k8sWaitForUpdate,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  mergeData,\n  getCommonAnnotations,\n  getRouteAnnotations,\n  getTriggerAnnotation,\n} from '../../utils/resource-label-utils';\nimport { createRoute, createService, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport { DeployImageFormData, Resources } from './import-types';\n\nconst WAIT_FOR_IMAGESTREAM_UPDATE_TIMEOUT = 5000;\nconst WAIT_FOR_IMAGESTREAM_GENERATION = 2;\n\nexport const createOrUpdateImageStream = async (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalImageStream?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    allowInsecureRegistry,\n    isi: { name: isiName, tag },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const defaultLabels = getAppLabels({ name, applicationName });\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: imgStreamName },\n    },\n    spec: {\n      tags: [\n        {\n          name: tag || 'latest',\n          annotations: {\n            ...getCommonAnnotations(),\n            'openshift.io/imported-from': isiName,\n          },\n          from: {\n            kind: 'DockerImage',\n            name: `${isiName}`,\n          },\n          importPolicy: { insecure: allowInsecureRegistry },\n          referencePolicy: { type: 'Local' },\n        },\n      ],\n    },\n  };\n\n  if (verb === 'update' && !_.isEmpty(originalImageStream)) {\n    const mergedImageStream = mergeData(originalImageStream, newImageStream);\n    mergedImageStream.metadata.name = originalImageStream.metadata.name;\n    return k8sUpdate(ImageStreamModel, mergedImageStream);\n  }\n  const createdImageStream = await k8sCreate(\n    ImageStreamModel,\n    newImageStream,\n    dryRun ? dryRunOpt : {},\n  );\n  if (dryRun) {\n    return createdImageStream;\n  }\n  return k8sWaitForUpdate(\n    ImageStreamModel,\n    createdImageStream,\n    (imageStream) => imageStream.metadata.generation >= WAIT_FOR_IMAGESTREAM_GENERATION,\n    WAIT_FOR_IMAGESTREAM_UPDATE_TIMEOUT,\n  ).catch(() => createdImageStream);\n};\n\nconst getMetadata = (resource: Resources, formData: DeployImageFormData) => {\n  const {\n    application: { name: applicationName },\n    name,\n    isi: { image },\n    labels: userLabels,\n    imageStream: { image: imageStreamName, tag: selectedTag, namespace },\n    runtimeIcon,\n  } = formData;\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    runtimeIcon,\n    selectedTag,\n    namespace,\n  });\n  const labels = { ...defaultLabels, ...userLabels };\n  const podLabels = getPodLabels(resource, name);\n\n  const volumes = [];\n  const volumeMounts = [];\n  let volumeNumber = 0;\n  _.each(_.get(image, ['dockerImageMetadata', 'Config', 'Volumes']), (value, path) => {\n    volumeNumber++;\n    const volumeName = `${name}-${volumeNumber}`;\n    volumes.push({\n      name: volumeName,\n      emptyDir: {},\n    });\n    volumeMounts.push({\n      name: volumeName,\n      mountPath: path,\n    });\n  });\n\n  return { labels, podLabels, volumes, volumeMounts };\n};\n\nexport const createOrUpdateDeployment = (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    registry,\n    project: { name: namespace },\n    name,\n    isi: { image, ports, tag: imageStreamTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    imageStream: { image: imgName, namespace: imgNamespace },\n    healthChecks,\n  } = formData;\n\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(\n      name,\n      imgName || name,\n      imgNamespace || namespace,\n      imageChange,\n      imageStreamTag,\n    ),\n  };\n  const templateAnnotations = getCommonAnnotations();\n\n  const { labels, podLabels, volumes, volumeMounts } = getMetadata(Resources.Kubernetes, formData);\n\n  const imageRef =\n    registry === RegistryType.External\n      ? `${name}:${imageStreamTag}`\n      : _.get(image, 'dockerImageReference');\n\n  const newDeployment = {\n    kind: 'Deployment',\n    apiVersion: 'apps/v1',\n    metadata: {\n      name,\n      namespace,\n      labels,\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      replicas,\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      template: {\n        metadata: {\n          labels: { ...userLabels, ...podLabels },\n          annotations: templateAnnotations,\n        },\n        spec: {\n          volumes,\n          containers: [\n            {\n              name,\n              image: imageRef,\n              ports,\n              volumeMounts,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: DeployImageFormData,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    project: { name: namespace },\n    name,\n    isi: { image, tag, ports },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    imageStream: { image: imgName, namespace: imgNamespace },\n    healthChecks,\n  } = formData;\n\n  const { labels, podLabels, volumes, volumeMounts } = getMetadata(Resources.OpenShift, formData);\n\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getRouteAnnotations(),\n  };\n  const templateAnnotations = getCommonAnnotations();\n\n  const newDeploymentConfig = {\n    kind: 'DeploymentConfig',\n    apiVersion: 'apps.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels,\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      replicas,\n      selector: podLabels,\n      template: {\n        metadata: {\n          labels: { ...userLabels, ...podLabels },\n          annotations: templateAnnotations,\n        },\n        spec: {\n          volumes,\n          containers: [\n            {\n              name,\n              image: _.get(image, ['dockerImageMetadata', 'Config', 'Image']),\n              ports,\n              volumeMounts,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${imgName || name}:${tag}`,\n              namespace: imgNamespace || namespace,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const ensurePortExists = (formData: DeployImageFormData): DeployImageFormData => {\n  const {\n    isi: { ports },\n    route: { defaultUnknownPort, unknownTargetPort },\n  } = formData;\n\n  let values = formData;\n  if (!Array.isArray(ports) || ports.length === 0) {\n    // If we lack pre-defined ports but they have specified a custom target port, use that instead\n    const containerPort = unknownTargetPort ? parseInt(unknownTargetPort, 10) : defaultUnknownPort;\n    const suppliedPorts = [{ containerPort, protocol: 'TCP' }];\n\n    values = {\n      ...values,\n      isi: {\n        ...values.isi,\n        ports: suppliedPorts,\n      },\n    };\n  }\n\n  return values;\n};\n\nexport const createOrUpdateDeployImageResources = async (\n  rawFormData: DeployImageFormData,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const formData = ensurePortExists(rawFormData);\n  const {\n    name,\n    registry,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    isi: { ports, tag: imageStreamTag, image },\n    imageStream: { image: internalImageStreamName, namespace: internalImageStreamNamespace },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n  } = formData;\n  const requests: Promise<K8sResourceKind>[] = [];\n\n  const imageStreamList = appResources?.imageStream?.data;\n  const imageStreamData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamData.length && imageStreamData[0]) || {};\n  if (formData.resources !== Resources.KnativeService) {\n    registry === RegistryType.External &&\n      (await createOrUpdateImageStream(formData, dryRun, originalImageStream, verb));\n    if (formData.resources === Resources.Kubernetes) {\n      requests.push(\n        createOrUpdateDeployment(\n          formData,\n          dryRun,\n          _.get(appResources, 'editAppResource.data'),\n          verb,\n        ),\n      );\n    } else {\n      requests.push(\n        createOrUpdateDeploymentConfig(\n          formData,\n          dryRun,\n          _.get(appResources, 'editAppResource.data'),\n          verb,\n        ),\n      );\n    }\n    if (!_.isEmpty(ports)) {\n      const originalService = appResources?.service?.data;\n      const originalRoute = appResources?.route?.data;\n      const service = createService(formData, undefined, originalService, originalRoute);\n      const request =\n        verb === 'update'\n          ? !_.isEmpty(originalService)\n            ? k8sUpdate(ServiceModel, service)\n            : null\n          : k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {});\n      requests.push(request);\n      const route = createRoute(formData, undefined, _.get(appResources, 'route.data'));\n      if (verb === 'update' && disable) {\n        requests.push(k8sUpdate(RouteModel, route));\n      } else if (canCreateRoute) {\n        requests.push(k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n      }\n    }\n  } else if (formData.resources === Resources.KnativeService) {\n    let imageStreamUrl: string = image?.dockerImageReference;\n    let generatedImageStreamName: string = '';\n    if (registry === RegistryType.External) {\n      const originalImageStreamName = originalImageStream?.spec?.tags?.[0]?.from?.name;\n      const newImageName = formData.isi.name;\n      if (\n        (originalImageStreamName && originalImageStreamName !== newImageName) ||\n        (verb === 'update' && _.isEmpty(originalImageStream))\n      ) {\n        generatedImageStreamName = `${name}-${getRandomChars()}`;\n      }\n      const imageStreamResponse = await createOrUpdateImageStream(\n        formData,\n        dryRun,\n        originalImageStream,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      );\n      const imageStreamRepo = imageStreamResponse.status.dockerImageRepository;\n      imageStreamUrl = imageStreamTag ? `${imageStreamRepo}:${imageStreamTag}` : imageStreamRepo;\n    }\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      internalImageStreamName || name,\n      internalImageStreamNamespace || namespace,\n      imageChange,\n      imageStreamTag,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          }\n        : {\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...originalAnnotations,\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamUrl,\n      internalImageStreamName || name,\n      imageStreamTag,\n      internalImageStreamNamespace,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    requests.push(\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    );\n  }\n\n  return Promise.all(requests);\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceLink } from '@console/internal/components/utils';\nimport { RadioGroupField } from '@console/shared';\nimport { imageRegistryType } from '../../../utils/imagestream-utils';\nimport { hasSampleQueryParameter } from '../../../utils/samples';\nimport FormSection from '../section/FormSection';\nimport ImageSearch from './ImageSearch';\nimport ImageStream from './ImageStream';\n\nconst ImageSearchSection: React.FC<{ disabled?: boolean }> = ({ disabled = false }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, initialValues } = useFormikContext<FormikValues>();\n  const [registry, setRegistry] = React.useState(values.registry);\n\n  const showSample = React.useRef(hasSampleQueryParameter()).current;\n\n  React.useEffect(() => {\n    if (values.registry !== registry) {\n      setRegistry(values.registry);\n      setFieldValue('searchTerm', initialValues.searchTerm);\n      setFieldValue('isi', initialValues.isi);\n      setFieldValue('imageStream', initialValues.imageStream);\n    }\n  }, [\n    initialValues.imageStream,\n    initialValues.isi,\n    initialValues.searchTerm,\n    registry,\n    setFieldValue,\n    values,\n  ]);\n\n  return (\n    <FormSection\n      title={t('devconsole~Image')}\n      subTitle={t('devconsole~Deploy an existing Image from an Image Stream or Image registry.')}\n    >\n      {!_.isEmpty(values.containers) && (\n        <div className=\"co-section-heading-tertiary\">\n          {t('devconsole~Container')}\n          <ResourceLink kind=\"Container\" name={values.containers[0].name} linkTo={false} />\n        </div>\n      )}\n      {showSample ? (\n        <ImageSearch />\n      ) : (\n        <RadioGroupField\n          name=\"registry\"\n          options={[\n            {\n              label: imageRegistryType(t).External.label,\n              value: imageRegistryType(t).External.value,\n              isDisabled:\n                (values.formType === 'edit' && values.registry === 'internal') || disabled,\n              activeChildren: <ImageSearch />,\n            },\n            {\n              label: imageRegistryType(t).Internal.label,\n              value: imageRegistryType(t).Internal.value,\n              isDisabled:\n                (values.formType === 'edit' && values.registry === 'external') || disabled,\n              activeChildren: <ImageStream disabled={disabled} />,\n            },\n          ]}\n        />\n      )}\n    </FormSection>\n  );\n};\n\nexport default ImageSearchSection;\n","import * as React from 'react';\nimport {\n  TextInputTypes,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, FormikTouched } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { ImageStreamImportsModel } from '@console/internal/models';\nimport { k8sCreate, ContainerPort } from '@console/internal/module/k8s';\nimport { InputField, useDebounceCallback, CheckboxField } from '@console/shared';\nimport { UNASSIGNED_KEY, CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isContainerImportSource } from '../../../types/samples';\nimport { getSuggestedName, getPorts, makePortName } from '../../../utils/imagestream-utils';\nimport { getContainerImportSample, getSample } from '../../../utils/samples';\nimport { secretModalLauncher } from '../CreateSecretModal';\nimport './ImageSearch.scss';\n\nconst useQueryParametersIfDefined = (handleSearch: (image: string) => void) => {\n  const { setFieldValue } = useFormikContext<FormikValues>();\n\n  /**\n   * Automatically prefill the container image search field into the Formik values\n   * and trigger a `ImageStreamImport` via `handleSearch`.\n   *\n   * 1. Use optional `image` query parameter to prefill the form immediately and\n   *    trigger a image search.\n   * 2. Use `sample` query parameter to lookup a ConsoleSample.\n   *    1. Lookup for the image if the image query parameter was missed.\n   *    2. Set other form attributes like the image targetPort.\n   */\n  React.useEffect(() => {\n    const { sampleName, image } = getContainerImportSample();\n    if (image) {\n      const componentName = getSuggestedName(image);\n      setFieldValue('searchTerm', image, false);\n      // handleSearch will set the same attributes, but after another API call\n      // so we fill these attributes here first\n      setFieldValue('name', componentName, false);\n      setFieldValue('application.name', `${componentName}-app`, false);\n      handleSearch(image);\n    }\n    if (sampleName) {\n      getSample(sampleName)\n        .then((sample) => {\n          if (isContainerImportSource(sample.spec.source)) {\n            const { containerImport } = sample.spec.source;\n            if (!image) {\n              const componentName = getSuggestedName(containerImport.image);\n              setFieldValue('searchTerm', containerImport.image, false);\n              // handleSearch will set the same attributes, but after another API call\n              // so we fill these attributes here first\n              setFieldValue('name', componentName, false);\n              setFieldValue('application.name', `${componentName}-app`, false);\n            }\n            if (\n              containerImport?.service?.targetPort &&\n              containerImport?.service?.targetPort !== 8080\n            ) {\n              setFieldValue(\n                'route.unknownTargetPort',\n                containerImport.service.targetPort.toString(),\n                false,\n              );\n            }\n            handleSearch(containerImport.image);\n          } else {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Unsupported ConsoleSample \"${sampleName}\" source type ${sample.spec?.source?.type}`,\n            );\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(`Error while loading ConsoleSample \"${sampleName}\":`, error);\n        });\n    }\n    // Disable deps to load the samples only once when the component is loaded.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nconst ImageSearch: React.FC = () => {\n  const { t } = useTranslation();\n  const inputRef = React.useRef<HTMLInputElement>();\n  const { values, setFieldValue, dirty, initialValues, touched } = useFormikContext<FormikValues>();\n  const [newImageSecret, setNewImageSecret] = React.useState('');\n  const [alertVisible, shouldHideAlert] = React.useState(true);\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const namespace = values.project.name;\n  const { application = {}, name: nameTouched } = touched;\n  const { name: applicationNameTouched } = application as FormikTouched<{ name: boolean }>;\n\n  const handleSearch = React.useCallback(\n    (searchTermImage: string, isAllowInsecureRegistry = values.allowInsecureRegistry) => {\n      setFieldValue('isSearchingForImage', true);\n      setValidated(ValidatedOptions.default);\n      const importImage = {\n        kind: 'ImageStreamImport',\n        apiVersion: 'image.openshift.io/v1',\n        metadata: {\n          name: 'newapp',\n          namespace: values.project.name,\n        },\n        spec: {\n          import: false,\n          images: [\n            {\n              from: {\n                kind: 'DockerImage',\n                name: _.trim(searchTermImage),\n              },\n              importPolicy: { insecure: isAllowInsecureRegistry },\n            },\n          ],\n        },\n        status: {},\n      };\n\n      k8sCreate(ImageStreamImportsModel, importImage)\n        .then((imageStreamImport) => {\n          const status = _.get(imageStreamImport, 'status.images[0].status');\n          if (status.status === 'Success') {\n            const name = _.get(imageStreamImport, 'spec.images[0].from.name');\n            const image = _.get(imageStreamImport, 'status.images[0].image');\n            const tag = _.get(imageStreamImport, 'status.images[0].tag');\n            const isi = { name, image, tag, status };\n            const ports = getPorts(isi);\n            setFieldValue('isSearchingForImage', false);\n            setFieldValue('isi.name', name);\n            setFieldValue('isi.image', image);\n            setFieldValue('isi.tag', tag);\n            setFieldValue('isi.status', status);\n            setFieldValue('isi.ports', ports);\n            setFieldValue('image.ports', ports);\n            setFieldValue('image.tag', tag);\n            !values.name && setFieldValue('name', getSuggestedName(name));\n            !values.application.name &&\n              values.application.selectedKey !== UNASSIGNED_KEY &&\n              setFieldValue('application.name', `${getSuggestedName(name)}-app`);\n            // set default port value\n            const targetPort =\n              (!initialValues.route.targetPort || touched.searchTerm) && _.head(ports);\n            targetPort && setFieldValue('route.targetPort', makePortName(targetPort));\n            setValidated(ValidatedOptions.success);\n          } else {\n            setFieldValue('isSearchingForImage', false);\n            setFieldValue('isi', {});\n            setFieldValue('isi.status', status);\n            setFieldValue('route.targetPort', null);\n            setValidated(ValidatedOptions.error);\n          }\n        })\n        .catch((error) => {\n          setFieldValue('isi', {});\n          setFieldValue('isi.status', { metadata: {}, status: '', message: error.message });\n          setFieldValue('isSearchingForImage', false);\n          setValidated(ValidatedOptions.error);\n        });\n    },\n    [\n      setFieldValue,\n      touched,\n      values.application.name,\n      values.application.selectedKey,\n      values.name,\n      values.project.name,\n      values.allowInsecureRegistry,\n      initialValues.route.targetPort,\n    ],\n  );\n\n  useQueryParametersIfDefined(handleSearch);\n\n  const debouncedHandleSearch = useDebounceCallback(handleSearch);\n\n  const handleSave = React.useCallback(\n    (name: string) => {\n      setNewImageSecret(name);\n      values.searchTerm && handleSearch(values.searchTerm);\n    },\n    [handleSearch, values.searchTerm],\n  );\n\n  const helpText = React.useMemo(() => {\n    if (values.isSearchingForImage) {\n      return `${t('devconsole~Validating')}...`;\n    }\n    if (!values.isSearchingForImage && validated === ValidatedOptions.success) {\n      return t('devconsole~Validated');\n    }\n    if (validated === ValidatedOptions.error) {\n      return values.searchTerm === '' ? t('devconsole~Required') : values.isi.status?.message;\n    }\n    return '';\n  }, [t, validated, values.isSearchingForImage, values.searchTerm, values.isi.status?.message]);\n\n  const resetFields = () => {\n    if (values.formType === 'edit') {\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n        values.application.selectedKey === CREATE_APPLICATION_KEY &&\n        !applicationNameTouched &&\n        setFieldValue('application.name', '');\n      return;\n    }\n    !nameTouched && setFieldValue('name', '');\n    !values.application.isInContext &&\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n      !applicationNameTouched &&\n      setFieldValue('application.name', '');\n  };\n\n  React.useEffect(() => {\n    !dirty && values.searchTerm && handleSearch(values.searchTerm);\n  }, [dirty, handleSearch, values.searchTerm]);\n\n  React.useEffect(() => {\n    if (touched.searchTerm && initialValues.searchTerm !== values.searchTerm) {\n      const targetPort: ContainerPort = _.head(values.isi.ports);\n      targetPort && setFieldValue('route.targetPort', makePortName(targetPort));\n    }\n  }, [\n    touched.searchTerm,\n    setFieldValue,\n    values.isi.ports,\n    initialValues.searchTerm,\n    values.searchTerm,\n  ]);\n\n  React.useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  return (\n    <div data-test-id=\"image-search-field\">\n      <InputField\n        ref={inputRef}\n        type={TextInputTypes.text}\n        name=\"searchTerm\"\n        placeholder={t(\n          'devconsole~docker.io/openshift/hello-openshift or quay.io/<username>/<image-name>',\n        )}\n        helpText={helpText}\n        helpTextInvalid={helpText}\n        validated={validated}\n        onChange={(e: KeyboardEvent) => {\n          resetFields();\n          setFieldValue('isi', {});\n          setValidated(ValidatedOptions.default);\n          debouncedHandleSearch((e.target as HTMLInputElement).value);\n        }}\n        aria-label={t('devconsole~Image name')}\n        data-test-id=\"deploy-image-search-term\"\n        required\n      />\n      <div className=\"help-block\" id=\"image-name-help\">\n        <Trans ns=\"devconsole\" t={t}>\n          To deploy an Image from a private registry, you must{' '}\n          <Button\n            variant=\"link\"\n            isInline\n            onClick={() =>\n              secretModalLauncher({\n                namespace,\n                save: handleSave,\n                secretType: SecretTypeAbstraction.image,\n              })\n            }\n          >\n            create an Image pull secret\n          </Button>{' '}\n          with your Image registry credentials.\n        </Trans>\n      </div>\n      {newImageSecret && alertVisible && (\n        <Alert\n          isInline\n          className=\"co-alert\"\n          variant=\"success\"\n          title={t('devconsole~Secret \"{{newImageSecret}}\" was created.', { newImageSecret })}\n          actionClose={<AlertActionCloseButton onClose={() => shouldHideAlert(false)} />}\n        />\n      )}\n      <div className=\"odc-image-search__advanced-options\">\n        <CheckboxField\n          name=\"allowInsecureRegistry\"\n          label={t('devconsole~Allow Images from insecure registries')}\n          onChange={(val: boolean) => {\n            values.searchTerm && handleSearch(values.searchTerm, val);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { getIcon, getIcons } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\n\nimport './IconDropdown.scss';\n\nexport type IconDropdownProps = {\n  placeholder: string;\n  value: string;\n  onChanged: (value: string) => void;\n};\n\ntype IconProps = {\n  label: string;\n  url: string;\n};\n\nconst Icon: React.FC<IconProps> = ({ label, url }) => (\n  <div className=\"odc-icon-dropdown__item\">\n    <img src={url} width=\"24\" height=\"24\" alt=\"\" className=\"icon\" />\n    {label}\n  </div>\n);\n\nconst iconLabelAutocompleteFilter = (text: string, item: React.ReactElement<IconProps>) =>\n  fuzzy(text, item.props.label);\n\nconst IconDropdown: React.FC<IconDropdownProps> = ({ placeholder, value, onChanged }) => {\n  const title = React.useMemo<React.ReactElement>(() => {\n    const icon = getIcon(value || 'openshift');\n    return icon ? (\n      <Icon label={icon.label} url={icon.url} />\n    ) : (\n      <span className=\"btn-dropdown__item--placeholder\">{placeholder}</span>\n    );\n  }, [placeholder, value]);\n\n  const items = React.useMemo<Record<string, React.ReactElement>>(() => {\n    const options: Record<string, React.ReactElement> = {};\n    getIcons().forEach(({ label, url }) => {\n      options[label] = <Icon label={label} url={url} />;\n    });\n    return options;\n  }, []);\n\n  return (\n    <Dropdown\n      title={title}\n      items={items}\n      autoSelect\n      autocompletePlaceholder={placeholder}\n      autocompleteFilter={iconLabelAutocompleteFilter}\n      dropDownClassName=\"dropdown--full-width odc-icon-dropdown\"\n      menuClassName=\"odc-icon-dropdown__menu\"\n      onChange={onChanged}\n      selectedKey={value || 'openshift'}\n    />\n  );\n};\n\nexport default IconDropdown;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { deployValidationSchema } from '@console/dev-console/src/components/import/deployImage-validation-utils';\nimport { handleRedirect } from '@console/dev-console/src/components/import/import-submit-utils';\nimport { DeployImageFormData } from '@console/dev-console/src/components/import/import-types';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport {\n  WatchK8sResults,\n  WatchK8sResultsObject,\n  useActivePerspective,\n} from '@console/dynamic-plugin-sdk';\nimport { LoadingBox, history, PageHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ProjectModel, ServiceModel } from '@console/internal/models';\nimport { k8sGet, K8sResourceKind } from '@console/internal/module/k8s';\nimport { BadgeType, getBadgeFromType, usePerspectives, useRelatedHPA } from '@console/shared';\nimport {\n  getInitialValuesKnatify,\n  knatifyResources,\n  getKnatifyWorkloadData,\n} from '../../utils/knatify-utils';\nimport KnatifyForm from './KnatifyForm';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype watchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind;\n};\n\nconst CreateKnatifyPage: React.FunctionComponent = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const kind = queryParams.get('kind');\n  const appName = queryParams.get('name');\n  const apiVersion = queryParams.get('apiversion');\n  const [perspective] = useActivePerspective();\n  const perspectiveExtensions = usePerspectives();\n  const [hpa, hpaLoaded, hpaError] = useRelatedHPA(apiVersion, kind, appName, namespace);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      projects: {\n        kind: ProjectModel.kind,\n        isList: true,\n      },\n      imageStream: {\n        kind: 'ImageStream',\n        isList: true,\n        namespace,\n        selector: {\n          matchLabels: { 'app.kubernetes.io/instance': appName },\n        },\n        optional: true,\n      },\n      ...(kind &&\n        appName && {\n          workloadResource: {\n            kind,\n            name: appName,\n            namespace,\n            optional: true,\n          },\n        }),\n    }),\n    [namespace, kind, appName],\n  );\n\n  const resources: WatchK8sResults<watchResource> = useK8sWatchResources<watchResource>(\n    watchedResources,\n  );\n\n  const isResourceLoaded =\n    Object.keys(resources).length > 0 &&\n    Object.values(resources).every((value) => value.loaded || !!value.loadError) &&\n    (hpaLoaded || !!hpaError);\n\n  const handleSubmit = async (\n    values: DeployImageFormData,\n    helpers: FormikHelpers<DeployImageFormData>,\n  ) => {\n    try {\n      const svcData = await k8sGet(ServiceModel, values.name, values.project.name);\n      if (svcData) {\n        helpers.setStatus({\n          submitError: t(\n            'knative-plugin~There is an existing placeholder Service with name {{name}} in namespace {{namespace}}. Please provide another name',\n            {\n              name: values.name,\n              namespace: values.project.name,\n            },\n          ),\n        });\n      }\n    } catch {\n      const resourceActions = knatifyResources(values, appName, true).then(() =>\n        knatifyResources(values, appName),\n      );\n\n      resourceActions\n        .then(() => {\n          helpers.setStatus({ submitError: '' });\n          handleRedirect(namespace, perspective, perspectiveExtensions);\n        })\n        .catch((err) => {\n          helpers.setStatus({ submitError: err.message });\n        });\n    }\n  };\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('knative-plugin~Make Serverless')}</title>\n      </Helmet>\n      <PageHeading\n        title={t('knative-plugin~Make Serverless')}\n        badge={getBadgeFromType(BadgeType.TECH)}\n      >\n        {t(\n          'knative-plugin~This feature will create a new serverless deployment next to your existing deployment. Other configurations, including the traffic pattern, can be modified in the form.',\n        )}\n      </PageHeading>\n      {isResourceLoaded ? (\n        <Formik\n          initialValues={getInitialValuesKnatify(\n            getKnatifyWorkloadData(resources?.workloadResource?.data as K8sResourceKind, hpa),\n            namespace,\n            resources?.imageStream?.data as K8sResourceKind[],\n          )}\n          validationSchema={deployValidationSchema(t)}\n          onSubmit={handleSubmit}\n          onReset={history.goBack}\n        >\n          {(formikProps) => (\n            <KnatifyForm\n              {...formikProps}\n              projects={(resources?.projects as WatchK8sResultsObject<K8sResourceKind[]>) ?? {}}\n            />\n          )}\n        </Formik>\n      ) : (\n        <LoadingBox />\n      )}\n    </NamespacedPage>\n  );\n};\n\nexport default CreateKnatifyPage;\n","import {\n  deployImageInitialValues,\n  getDeploymentData,\n  getExternalImageValues,\n  getIconInitialValues,\n  getKsvcRouteData,\n  getServerlessData,\n  getUserLabels,\n} from '@console/dev-console/src/components/edit-application/edit-application-utils';\nimport {\n  getHealthChecksData,\n  getProbesData,\n} from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport { ensurePortExists } from '@console/dev-console/src/components/import/deployImage-submit-utils';\nimport {\n  DeployImageFormData,\n  Resources,\n} from '@console/dev-console/src/components/import/import-types';\nimport { RegistryType } from '@console/dev-console/src/utils/imagestream-utils';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getLimitsDataFromResource } from '@console/shared/src';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { KNATIVE_MAXSCALE_ANNOTATION, KNATIVE_MINSCALE_ANNOTATION } from '../const';\nimport { ServiceModel } from '../models';\nimport {\n  getKnativeServiceDepResource,\n  getDomainMappingRequests,\n  dryRunOpt,\n} from './create-knative-utils';\n\nconst PART_OF = 'app.kubernetes.io/part-of';\nconst knatify = 'knatify';\n\nexport const getKnatifyWorkloadData = (obj: K8sResourceKind, relatedHpa?: K8sResourceKind) => {\n  const { metadata, spec } = obj || {};\n  const { name = '', namespace = '', labels = {}, annotations = {} } = metadata || {};\n  const { metadata: templateMetadata, spec: templateSpec } = spec?.template || {};\n  const { image, ports, imagePullPolicy, env, resources } = templateSpec?.containers[0] || {};\n  const { spec: hpaSpec } = relatedHpa ?? {};\n\n  const healthChecks = getHealthChecksData(obj, 0);\n  const { readinessProbe, livenessProbe } = getProbesData(healthChecks, Resources.KnativeService);\n  const appName = `ksvc-${name}`;\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name: appName,\n      namespace,\n      labels: {\n        ...labels,\n        'app.kubernetes.io/instance': appName,\n        'app.kubernetes.io/component': appName,\n      },\n      annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: templateMetadata?.labels ?? {},\n          annotations: {\n            ...templateMetadata?.annotations,\n            ...(hpaSpec?.minReplicas && {\n              [KNATIVE_MINSCALE_ANNOTATION]: `${hpaSpec.minReplicas}`,\n            }),\n            ...(hpaSpec?.maxReplicas && {\n              [KNATIVE_MAXSCALE_ANNOTATION]: `${hpaSpec.maxReplicas}`,\n            }),\n          },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image,\n              ...(ports?.length > 0 && {\n                ports: [\n                  {\n                    containerPort: ports[0]?.containerPort,\n                  },\n                ],\n              }),\n              ...(imagePullPolicy && {\n                imagePullPolicy,\n              }),\n              ...(env?.length > 0 && { env }),\n              ...(resources && { resources }),\n              ...(readinessProbe && {\n                readinessProbe,\n              }),\n              ...(livenessProbe && {\n                livenessProbe,\n              }),\n            },\n          ],\n        },\n      },\n    },\n  };\n  return newKnativeDeployResource;\n};\n\nexport const knatifyResources = async (\n  rawFormData: DeployImageFormData,\n  appName: string,\n  dryRun?: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const formData = ensurePortExists(rawFormData);\n  const {\n    isi: { image },\n  } = formData;\n  const imageStreamUrl: string = image?.dockerImageReference ?? '';\n  const knDeploymentRes = getKnativeServiceDepResource(\n    formData,\n    imageStreamUrl,\n    undefined,\n    undefined,\n    undefined,\n    formData.annotations,\n  );\n  const knDeploymentResource = {\n    ...knDeploymentRes,\n    metadata: {\n      ...knDeploymentRes.metadata,\n      labels: {\n        ...knDeploymentRes.metadata.labels,\n        ...(!!appName && { 'app.kubernetes.io/name': appName }),\n      },\n    },\n  };\n  const domainMappingResources = await getDomainMappingRequests(\n    formData,\n    knDeploymentResource,\n    dryRun,\n  );\n\n  return Promise.all([\n    k8sCreate(ServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n    ...domainMappingResources,\n  ]);\n};\n\nexport const getCommonInitialValues = (ksvcResourceData: K8sResourceKind, namespace: string) => {\n  const appGroupName = ksvcResourceData?.metadata?.labels?.[PART_OF] ?? '';\n  const name = ksvcResourceData?.metadata?.name ?? '';\n  const commonInitialValues = {\n    name,\n    formType: knatify,\n    application: {\n      name: appGroupName || '',\n      selectedKey: appGroupName || UNASSIGNED_KEY,\n    },\n    project: {\n      name: namespace,\n    },\n    route: getKsvcRouteData(ksvcResourceData),\n    resources: Resources.KnativeService,\n    serverless: getServerlessData(ksvcResourceData),\n    pipeline: {\n      enabled: false,\n    },\n    deployment: getDeploymentData(ksvcResourceData),\n    labels: getUserLabels(ksvcResourceData),\n    limits: getLimitsDataFromResource(ksvcResourceData),\n    healthChecks: getHealthChecksData(ksvcResourceData),\n    annotations: ksvcResourceData?.metadata?.annotations ?? {},\n  };\n  return commonInitialValues;\n};\n\nconst getInternalImageInitialValues = (\n  editAppResource: K8sResourceKind,\n  namespace: string,\n  imageStreams: K8sResourceKind[],\n) => {\n  const [, isSha] = editAppResource.spec?.template?.spec?.containers?.[0]?.image?.split('@') ?? [];\n  const { tag, image } = imageStreams.reduce(\n    (acc, is) => {\n      const tagData =\n        isSha &&\n        is.status?.tags?.find((t) => {\n          const itemData = t.items?.find((it) => it.image === isSha);\n          return !!itemData;\n        });\n      if (tagData) {\n        return {\n          tag: tagData.tag,\n          image: is.metadata.name,\n        };\n      }\n      return acc;\n    },\n    { tag: '', image: '' },\n  );\n  return {\n    ...deployImageInitialValues,\n    registry: RegistryType.Internal,\n    imageStream: {\n      image,\n      tag,\n      namespace,\n    },\n  };\n};\n\nexport const getInitialValuesKnatify = (\n  ksvcResourceData: K8sResourceKind,\n  namespace: string,\n  imageStreams: K8sResourceKind[],\n): DeployImageFormData => {\n  const commonValues = getCommonInitialValues(ksvcResourceData, namespace);\n  const iconValues = getIconInitialValues(ksvcResourceData);\n  const internalImageValues = getInternalImageInitialValues(\n    ksvcResourceData,\n    namespace,\n    imageStreams,\n  );\n  const {\n    imageStream: { image, tag },\n  } = internalImageValues;\n  const isInternalImageValid = image && tag && namespace;\n  const externalImageValues = getExternalImageValues(ksvcResourceData);\n  return {\n    ...commonValues,\n    ...iconValues,\n    ...(!!isInternalImageValid && internalImageValues),\n    ...(!isInternalImageValid && externalImageValues),\n  };\n};\n","import * as React from 'react';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport AdvancedSection from '@console/dev-console/src/components/import/advanced/AdvancedSection';\nimport AppSection from '@console/dev-console/src/components/import/app/AppSection';\nimport ImageSearchSection from '@console/dev-console/src/components/import/image-search/ImageSearchSection';\nimport { DeployImageFormProps } from '@console/dev-console/src/components/import/import-types';\nimport IconSection from '@console/dev-console/src/components/import/section/IconSection';\nimport { usePreventDataLossLock } from '@console/internal/components/utils';\nimport { FormFooter, FlexForm, FormBody } from '@console/shared/src/components/form-utils';\n\nconst KnatifyForm: React.FC<FormikProps<FormikValues> & DeployImageFormProps> = ({\n  values,\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  dirty,\n  projects,\n}) => {\n  const { t } = useTranslation();\n  usePreventDataLossLock(isSubmitting);\n\n  return (\n    <FlexForm className=\"co-deploy-image\" data-test-id=\"knatify-form\" onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <ImageSearchSection disabled />\n        <IconSection />\n        <AppSection\n          project={values.project}\n          noProjectsAvailable={projects.loaded && _.isEmpty(projects.data)}\n        />\n        <AdvancedSection values={values} />\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('knative-plugin~Create')}\n        sticky\n        disableSubmit={!dirty || !_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('knative-plugin~Cancel')}\n      />\n    </FlexForm>\n  );\n};\n\nexport default KnatifyForm;\n"],"sourceRoot":""}