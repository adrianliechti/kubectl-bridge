{"version":3,"sources":["webpack:///./packages/knative-plugin/src/actions/providers.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/knative-plugin/src/utils/create-eventsources-utils.ts","webpack:///./packages/knative-plugin/src/components/add/import-types.ts","webpack:///./packages/knative-plugin/src/components/pub-sub/pub-sub-utils.ts","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/knative-plugin/src/utils/get-knative-icon.ts","webpack:///./packages/dev-console/src/utils/useAddActionExtensions.ts","webpack:///./packages/dev-console/src/utils/add-page-utils.ts","webpack:///./packages/knative-plugin/src/hooks/useKameletsData.ts","webpack:///./packages/dev-console/src/actions/add-resources.tsx","webpack:///./packages/knative-plugin/src/hooks/useEventSinkStatus.ts","webpack:///./packages/knative-plugin/src/hooks/useEventSourceModelsWithAccess.ts","webpack:///./packages/knative-plugin/src/hooks/useEventSourceStatus.ts","webpack:///./packages/knative-plugin/src/hooks/useBootstrapServers.ts","webpack:///./packages/knative-plugin/src/components/functions/ServiceTypeContext.ts","webpack:///./packages/knative-plugin/src/hooks/index.ts","webpack:///./packages/knative-plugin/src/catalog/event-source-data.ts","webpack:///./packages/knative-plugin/src/imgs/logos/apiserversource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/camelsource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/containersource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/kafkasource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/pingsource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/sinkbindingsource.svg","webpack:///./packages/knative-plugin/src/utils/create-eventsink-utils.ts","webpack:///./packages/console-app/src/actions/creators/health-checks-factory.ts","webpack:///./packages/knative-plugin/src/catalog/event-sink-data.ts","webpack:///./packages/knative-plugin/src/catalog/useEventSourceProvider.ts","webpack:///./packages/knative-plugin/src/actions/add-broker.tsx","webpack:///./packages/knative-plugin/src/actions/add-channel.tsx","webpack:///./packages/knative-plugin/src/actions/add-event-sink.tsx","webpack:///./packages/knative-plugin/src/actions/creators.ts"],"names":["useMakeServerlessActionProvider","resource","kindObj","inFlight","undefined","useSinkPubSubActionProvider","useKnativeServiceActionsProvider","serviceTypeValue","EditResourceLimits","ModifyLabels","ModifyAnnotations","metadata","annotations","labels","useBrokerActionProvider","isEventSinkTypeEnabled","addActions","connectorSource","name","push","namespace","useCommonActionsProvider","commonActions","kind","findIndex","action","id","filter","useChannelActionProvider","useTopologyActionsProvider","element","isEventSourceTypeEnabled","isEventingEnabled","isEventSourceAddEnabled","isEventSinkAddEnabled","isChannelAddEnabled","isBrokerAddEnabled","disabledAddActions","includes","getEventingEnabledAddAction","application","getLabel","getType","path","getData","type","sourceKind","data","connectorResource","useEventSourcesActionsProvider","useEventSourcesActionsProviderForTopology","resources","obj","useModifyApplicationActionProvider","actions","k8sKind","useUriActionsProvider","eventSources","length","sourceModel","useKnativeConnectorActionProvider","isEventSourceConnector","getSource","topologyServerlessActionsFilter","scope","useKnativeEventSinkActionProvider","k8sModel","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","spec","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","groupResources","groupResource","nextResource","resourceKind","Error","t","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","message","renderBody","disabled","className","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","status","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","metrics","podData","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","editAccess","canEdit","displayName","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","sourceLabel","targetLabel","close","useK8sGet","opts","setData","setLoaded","setLoadError","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","getAppLabels","applicationName","imageStreamName","runtimeIcon","selectedTag","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageName","imageNamespace","imageTrigger","imageTag","fieldPath","paused","getPodLabels","toLowerCase","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","CommonActionFactory","Delete","cta","accessReview","Edit","blocking","ModifyCount","ModifyPodSelector","ModifyTolerations","modalClassName","AddStorage","getCommonResourceActions","NodeType","EdgeType","KameletType","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","callback","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","isKnownEventSource","eventSource","getEventSourcesDepResource","formData","sinkType","defaultLabel","eventSrcData","sinkName","sinkKind","sinkApiVersion","Resource","isSecretKeyRefPresent","dataObj","loadYamlData","yamlDataObj","modelData","getEventSourceResource","KafkaSource","baseResource","caCert","cert","getKafkaSourceResource","getCatalogEventSourceResource","sourceFormData","editorType","YAML","getEventSourceData","PingSource","schedule","SinkBinding","subject","selector","ApiServerSource","mode","serviceAccountName","topics","consumerGroup","ContainerSource","env","getKameletSourceData","kameletData","properties","getKameletMetadata","kamelet","normalizedKamelet","provider","iconUrl","definition","description","getEventSourceMetadata","eventSourceModel","normalizedSource","getEventSourceModelsWithAccess","eventSourceModels","getBootstrapServers","kafkaResources","kafka","listners","listeners","l","flat","handleRedirect","perspective","perspectiveExtensions","perspectiveData","redirectURL","importRedirectURL","sanitizeSourceToForm","newFormData","formDataValues","kameletSource","specData","appGroupName","sinkRef","Uri","formDataActual","initialSecretKeyData","sanitizeKafkaSourceResource","formDescriptorData","descriptorArr","custPath","EventSources","KameletBinding","defaultChannels","InMemoryChannel","KafkaChannel","SinkType","sourceSinkType","getSinkableResourceOrder","getResourceApiGroup","craftResourceKey","getResourceNameFromKey","sanitizeResourceName","finalValues","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","latest","force","deploymentConfigRollout","subresource","CreateServiceBinding","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","size","fieldId","onSelect","_","toggle","toggleRef","isExpanded","isFullWidth","onOpenChange","open","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","getEventSourceIcon","nodeType","objAnnotations","getEventSourceIconFromKind","getDisabledAddActions","window","SERVER_FLAGS","addPage","disabledActions","useAddActionExtensions","allAddActionExtensions","resolved","allAddActionsDisabled","addActionExtension","getAddGroups","addActionGroups","initialActionGroups","actionGroup","actionGroups","currAction","actionGroupsForCurrentItem","groupId","navigateTo","resolvedHref","filterNamespaceScopedUrl","useKameletsData","setKamelets","kameletsLoaded","setKameletsLoaded","kameletsLoadError","setKameletsLoadError","watchedResources","kameletsGlobalNs","kameletsGlobalNs2","extraResources","resDataLoaded","resDataloadError","kameletsData","allKamelets","allImportResourceAccess","allCatalogImageResourceAccess","resolvedURLWithParams","unresolvedHref","contextSource","allowServiceBinding","resolvedURL","URLSearchParams","append","APPLICATION","CONTEXT_ACTION","payload","indexOf","AddActions","FromGit","accessReviewDisabled","icon","ContainerImage","DevCatalog","DatabaseCatalog","Samples","OperatorBacked","isServiceBindingAllowed","UploadJarFile","CreateServerlessFunction","CreateServerlessFunctionUsingSamples","disabledActionsFilter","useEventSinkStatus","sinkKindProp","kameletName","kameletNs","kameletNsLoaded","kameletGlobalNs","kameletGlobalNsLoaded","kameletGlobalNs2","kameletGlobalNs2Loaded","kameletLoaded","isKameletSink","isSinkKindPresent","eventSinkModel","sinkModel","createSinkAccess","createSinkAccessLoading","sourceStatus","isValidSink","normalizedSink","useEventSourceModelsWithAccess","accessModelData","setAccessModelData","eventSourceModelsList","eventSourceModelsWithAccess","modelsWithAccess","useEventSourceStatus","sourceKindProp","eventSourceModelsLoaded","isKameletSource","isSourceKindPresent","createSourceAccess","createSourceAccessLoading","isValidSource","useBootstrapServers","memoResources","kafkas","kafkaconnections","bootstrapServersOptions","placeholder","isKafkasLoaded","isKafkasLoadError","kafkasData","bs","loadErrorMessage","KnativeServiceTypeContext","getEventSourceCatalogProviderData","support","module","exports","getEventSinksDepResource","sourceName","sourceApiVersion","getCatalogEventSinkResource","getKafkaSinkResource","getKameletSinkData","sanitizeSinkToForm","sourceRef","topic","sanitizeKafkaSinkResource","getEventSinkMetadata","getEventSinkData","healthChecksUrl","HealthChecksActionFactory","getHealthChecksAction","healthChecksAdded","getEventSinkCatalogProviderData","useEventSourceProvider","class","details","normalizeEventSources","knativeEventingTypeProvider","setFeatureFlag","useKnativeEventingEnabled","isChannelEnabled","isBrokerEnabled","isPingSourceEnabled","useKnativeEventingProvider","eventBrokerStyles","EventBrokerIcon","src","alt","AddBrokerAction","pageUrl","insertAfter","eventChannelStyles","EventChannelIcon","AddChannelAction","EVENT_SINK_ADD_CONNECTOR_ACTION","AddEventSinkAction","CONTEXT_SOURCE","AddEventSinkMenuAction","setTrafficDistribution","moveSinkPubsub","resourceType","addTriggerBroker","addSubscriptionChannel","editKnativeService","editKnativeServiceResource","Function","deleteKnativeServiceResource","serviceCreatedFromWebFlag","deleteAllResources","moveSinkSource","deleteRevision","revision","editSinkUri","eventSourceList","testServerlessFunction"],"mappings":"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","file":"knative-plugin/code-refs/actions-chunk-8da10165e086bd29b7b6.min.js","sourcesContent":["import * as React from 'react';\nimport { GraphElement, Graph, Node, Edge, isEdge, isGraph } from '@patternfly/react-topology';\nimport {\n  CommonActionFactory,\n  getCommonResourceActions,\n} from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { getHealthChecksAction } from '@console/app/src/actions/creators/health-checks-factory';\nimport { disabledActionsFilter } from '@console/dev-console/src/actions/add-resources';\nimport { getDisabledAddActions } from '@console/dev-console/src/utils/useAddActionExtensions';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n} from '@console/internal/module/k8s';\nimport { isCatalogTypeEnabled, useActiveNamespace } from '@console/shared';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { MoveConnectorAction } from '@console/topology/src/actions/edgeActions';\nimport { getModifyApplicationAction } from '@console/topology/src/actions/modify-application';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { useKnativeEventingEnabled } from '../catalog/useEventSourceProvider';\nimport { KnativeServiceTypeContext } from '../components/functions/ServiceTypeContext';\nimport {\n  EVENTING_BROKER_ACTION_ID,\n  EVENTING_CHANNEL_ACTION_ID,\n  EVENT_SINK_ACTION_ID,\n  EVENT_SINK_CATALOG_TYPE_ID,\n  EVENT_SOURCE_ACTION_ID,\n  EVENT_SOURCE_CATALOG_TYPE_ID,\n} from '../const';\nimport { RevisionModel, EventingBrokerModel, ServiceModel } from '../models';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n  TYPE_EVENT_SINK,\n  TYPE_KAFKA_SINK,\n} from '../topology/const';\nimport { isEventingChannelResourceKind } from '../utils/fetch-dynamic-eventsources-utils';\nimport { AddBrokerAction } from './add-broker';\nimport { AddChannelAction } from './add-channel';\nimport {\n  AddEventSinkAction,\n  AddEventSinkMenuAction,\n  EVENT_SINK_ADD_CONNECTOR_ACTION,\n} from './add-event-sink';\nimport { AddEventSourceAction } from './add-event-source';\nimport { AddSubscriptionAction, SUBSCRIPTION_ACTION_ID } from './add-subscription';\nimport { AddTriggerAction, TRIGGER_ACTION_ID } from './add-trigger';\nimport {\n  addSubscriptionChannel,\n  addTriggerBroker,\n  editSinkUri,\n  moveSinkPubsub,\n  deleteRevision,\n  editKnativeService,\n  setTrafficDistribution,\n  moveSinkSource,\n  testServerlessFunction,\n  editKnativeServiceResource,\n  deleteKnativeServiceResource,\n} from './creators';\nimport { hideKnatifyAction, MakeServerless } from './knatify';\n\nexport const useMakeServerlessActionProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n\n  const deploymentActions = React.useMemo(() => {\n    return hideKnatifyAction(resource) ? [] : MakeServerless(kindObj, resource);\n  }, [kindObj, resource]);\n\n  return [deploymentActions, !inFlight, undefined];\n};\n\nexport const useSinkPubSubActionProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const actions = React.useMemo(() => {\n    return [moveSinkPubsub(kindObj, resource), ...getCommonResourceActions(kindObj, resource)];\n  }, [kindObj, resource]);\n\n  return [actions, !inFlight, undefined];\n};\n\nexport const useKnativeServiceActionsProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const serviceTypeValue = React.useContext(KnativeServiceTypeContext);\n  const actions = React.useMemo(() => {\n    return [\n      setTrafficDistribution(kindObj, resource),\n      getHealthChecksAction(kindObj, resource),\n      editKnativeService(kindObj, resource),\n      DeploymentActionFactory.EditResourceLimits(kindObj, resource),\n      CommonActionFactory.ModifyLabels(kindObj, resource),\n      CommonActionFactory.ModifyAnnotations(kindObj, resource),\n      editKnativeServiceResource(kindObj, resource, serviceTypeValue),\n      ...(resource.metadata.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole'\n        ? [deleteKnativeServiceResource(kindObj, resource, serviceTypeValue, true)]\n        : [deleteKnativeServiceResource(kindObj, resource, serviceTypeValue, false)]),\n      ...(resource?.metadata?.labels?.['function.knative.dev'] === 'true'\n        ? [testServerlessFunction(kindObj, resource)]\n        : []),\n    ];\n  }, [kindObj, resource, serviceTypeValue]);\n\n  return [actions, !inFlight, undefined];\n};\n\nexport const useBrokerActionProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const isEventSinkTypeEnabled = isCatalogTypeEnabled(EVENT_SINK_CATALOG_TYPE_ID);\n  const actions = React.useMemo(() => {\n    const addActions: Action[] = [];\n    const connectorSource = `${referenceFor(resource)}/${resource.metadata.name}`;\n    addActions.push(addTriggerBroker(kindObj, resource));\n    if (isEventSinkTypeEnabled) {\n      addActions.push(\n        AddEventSinkMenuAction(resource.metadata.namespace, undefined, connectorSource),\n      );\n    }\n    addActions.push(...getCommonResourceActions(kindObj, resource));\n    return addActions;\n  }, [isEventSinkTypeEnabled, kindObj, resource]);\n\n  return [actions, !inFlight, undefined];\n};\n\nexport const useCommonActionsProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const actions = React.useMemo(() => {\n    let commonActions = getCommonResourceActions(kindObj, resource);\n    if (\n      resource.kind === RevisionModel.kind &&\n      commonActions.findIndex((action: Action) => action.id === 'delete-resource')\n    ) {\n      commonActions = commonActions.filter((action: Action) => action.id !== 'delete-resource');\n      commonActions.push(deleteRevision(kindObj, resource));\n    }\n    return commonActions;\n  }, [kindObj, resource]);\n\n  return [actions, !inFlight, undefined];\n};\n\nexport const useChannelActionProvider = (resource: K8sResourceKind) => {\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource));\n  const isEventSinkTypeEnabled = isCatalogTypeEnabled(EVENT_SINK_CATALOG_TYPE_ID);\n  const actions = React.useMemo(() => {\n    const addActions: Action[] = [];\n    const connectorSource = `${referenceFor(resource)}/${resource.metadata.name}`;\n    addActions.push(addSubscriptionChannel(kindObj, resource));\n    if (isEventSinkTypeEnabled) {\n      addActions.push(\n        AddEventSinkMenuAction(resource.metadata.namespace, undefined, connectorSource),\n      );\n    }\n    addActions.push(...getCommonResourceActions(kindObj, resource));\n    return addActions;\n  }, [isEventSinkTypeEnabled, kindObj, resource]);\n\n  return [actions, !inFlight, undefined];\n};\n\nconst getEventingEnabledAddAction = () => {\n  const disabledAddActions = getDisabledAddActions();\n  return {\n    isEventSourceAddEnabled: !disabledAddActions?.includes(EVENT_SOURCE_ACTION_ID),\n    isEventSinkAddEnabled: !disabledAddActions?.includes(EVENT_SINK_ACTION_ID),\n    isChannelAddEnabled: !disabledAddActions?.includes(EVENTING_CHANNEL_ACTION_ID),\n    isBrokerAddEnabled: !disabledAddActions?.includes(EVENTING_BROKER_ACTION_ID),\n  };\n};\n\nexport const useTopologyActionsProvider = ({\n  element,\n  connectorSource,\n}: {\n  element: GraphElement;\n  connectorSource?: Node;\n}) => {\n  const isEventSinkTypeEnabled = isCatalogTypeEnabled(EVENT_SINK_CATALOG_TYPE_ID);\n  const isEventSourceTypeEnabled = isCatalogTypeEnabled(EVENT_SOURCE_CATALOG_TYPE_ID);\n  const isEventingEnabled = useKnativeEventingEnabled();\n  const {\n    isEventSourceAddEnabled,\n    isEventSinkAddEnabled,\n    isChannelAddEnabled,\n    isBrokerAddEnabled,\n  } = getEventingEnabledAddAction();\n\n  const [namespace] = useActiveNamespace();\n  const actions = React.useMemo(() => {\n    const application = element.getLabel();\n    if (!connectorSource) {\n      if (!isGraph(element) && element.getType() !== TYPE_APPLICATION_GROUP) {\n        return [];\n      }\n      const path = application ? 'add-to-application' : 'add-to-project';\n      const addActions: Action[] = [];\n      if (isEventSinkAddEnabled && isEventSinkTypeEnabled && isEventingEnabled) {\n        addActions.push(AddEventSinkAction(namespace, application, undefined, path));\n      }\n      if (isEventSourceAddEnabled && isEventSourceTypeEnabled && isEventingEnabled) {\n        addActions.push(AddEventSourceAction(namespace, application, undefined, path));\n      }\n      if (isEventingEnabled && isChannelAddEnabled) {\n        addActions.push(AddChannelAction(namespace, application, path));\n      }\n      if (isEventingEnabled && isBrokerAddEnabled) {\n        addActions.push(AddBrokerAction(namespace, application, path));\n      }\n      return addActions.filter(disabledActionsFilter);\n    }\n\n    if (connectorSource.getData().type === TYPE_EVENT_SOURCE_KAFKA) return [];\n\n    const sourceKind = connectorSource.getData().data.kind;\n    const connectorResource = connectorSource.getData().resource;\n    if (isEventingChannelResourceKind(sourceKind)) {\n      const addActions: Action[] = [];\n      addActions.push(AddSubscriptionAction(connectorResource));\n      if (isEventSinkTypeEnabled) {\n        addActions.push(\n          AddEventSinkMenuAction(\n            namespace,\n            application,\n            `${sourceKind}/${connectorResource.metadata.name}`,\n          ),\n        );\n      }\n      return addActions;\n    }\n    switch (sourceKind) {\n      case referenceForModel(ServiceModel):\n        return isEventSourceTypeEnabled && isEventSourceAddEnabled && isEventingEnabled\n          ? [\n              AddEventSourceAction(\n                namespace,\n                application,\n                `${sourceKind}/${connectorResource.metadata.name}`,\n                '',\n              ),\n            ].filter(disabledActionsFilter)\n          : [];\n      case referenceForModel(EventingBrokerModel): {\n        const addActions: Action[] = [];\n        addActions.push(AddTriggerAction(connectorResource));\n        if (isEventSinkTypeEnabled) {\n          addActions.push(\n            AddEventSinkMenuAction(\n              namespace,\n              application,\n              `${sourceKind}/${connectorResource.metadata.name}`,\n            ),\n          );\n        }\n        return addActions;\n      }\n      default:\n        return [];\n    }\n  }, [\n    connectorSource,\n    element,\n    isBrokerAddEnabled,\n    isChannelAddEnabled,\n    isEventSinkAddEnabled,\n    isEventSinkTypeEnabled,\n    isEventSourceAddEnabled,\n    isEventSourceTypeEnabled,\n    isEventingEnabled,\n    namespace,\n  ]);\n  return [actions, true, undefined];\n};\n\nexport const useEventSourcesActionsProvider = (resource: K8sResourceKind) => {\n  const result = React.useMemo(() => {\n    if (!resource || resource.kind === 'URI') return [[], true, undefined];\n    const kindObj = modelFor(referenceFor(resource));\n    return [\n      [moveSinkSource(kindObj, resource), ...getCommonResourceActions(kindObj, resource)],\n      true,\n      undefined,\n    ];\n  }, [resource]);\n  return result;\n};\n\nexport const useEventSourcesActionsProviderForTopology = (element: GraphElement) => {\n  const resource = React.useMemo(() => {\n    if (![TYPE_EVENT_SOURCE, TYPE_EVENT_SOURCE_KAFKA].includes(element.getType())) return undefined;\n\n    return element.getData().resources.obj;\n  }, [element]);\n  const result = useEventSourcesActionsProvider(resource);\n  return result;\n};\n\nexport const useModifyApplicationActionProvider = (element: GraphElement) => {\n  const actions = React.useMemo(() => {\n    if (\n      ![\n        TYPE_KNATIVE_SERVICE,\n        TYPE_EVENT_PUB_SUB,\n        TYPE_EVENT_SOURCE,\n        TYPE_EVENT_SOURCE_KAFKA,\n      ].includes(element.getType())\n    )\n      return undefined;\n    const resource = element.getData().resources.obj;\n    const k8sKind = modelFor(referenceFor(resource));\n    return [\n      getModifyApplicationAction(k8sKind, resource, [\n        'set-traffic-distribution',\n        'add-tigger-broker',\n        'add-subscription-channel',\n        'move-sink-source',\n      ]),\n    ];\n  }, [element]);\n\n  return React.useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useUriActionsProvider = (element: GraphElement) => {\n  const actions = React.useMemo(() => {\n    if (element.getType() !== TYPE_SINK_URI) return undefined;\n    const { obj, eventSources } = element.getData().resources;\n    if (eventSources.length > 0) {\n      const sourceModel = modelFor(referenceFor(eventSources[0]));\n      return [editSinkUri(sourceModel, obj, eventSources)];\n    }\n    return null;\n  }, [element]);\n\n  return React.useMemo(() => {\n    if (!actions) {\n      return [[], true, undefined];\n    }\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useKnativeConnectorActionProvider = (element: Edge) => {\n  const actions = React.useMemo(() => {\n    const isEventSourceConnector = element.getType() === TYPE_EVENT_SOURCE_LINK;\n    if (isEdge(element) && element.getSource()?.getData()) {\n      const { resource } = element.getSource().getData();\n      const sourceModel = modelFor(referenceFor(resource));\n      if (isEventSourceConnector) {\n        return [moveSinkSource(sourceModel, resource)];\n      }\n      if ([TYPE_REVISION_TRAFFIC, TYPE_KAFKA_CONNECTION_LINK].includes(element.getType())) {\n        return [MoveConnectorAction(sourceModel, element)];\n      }\n    }\n    return null;\n  }, [element]);\n  return React.useMemo(() => {\n    if (!actions) {\n      return [[], true, undefined];\n    }\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const topologyServerlessActionsFilter = (\n  scope: {\n    element: Graph;\n    connectorSource?: Node;\n  },\n  action: Action,\n) => {\n  if (\n    [TYPE_EVENT_SOURCE_KAFKA, TYPE_EVENT_PUB_SUB].includes(scope.connectorSource?.getData().type) &&\n    ![TRIGGER_ACTION_ID, SUBSCRIPTION_ACTION_ID, EVENT_SINK_ADD_CONNECTOR_ACTION].includes(\n      action.id,\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const useKnativeEventSinkActionProvider = (element: Node) => {\n  const resource = React.useMemo(() => element.getData()?.resources?.obj || {}, [element]);\n  const [k8sModel] = useK8sModel(referenceFor(resource));\n  const actions = React.useMemo(() => {\n    const type = element.getType();\n    if ((type !== TYPE_EVENT_SINK && type !== TYPE_KAFKA_SINK) || !k8sModel) return undefined;\n    return k8sModel && resource\n      ? [\n          getModifyApplicationAction(k8sModel, resource),\n          ...getCommonResourceActions(k8sModel, resource),\n        ]\n      : undefined;\n  }, [element, k8sModel, resource]);\n\n  return React.useMemo(() => {\n    if (!actions) {\n      return [[], true, undefined];\n    }\n    return [actions, true, undefined];\n  }, [actions]);\n};\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as _ from 'lodash';\nimport {\n  getAppLabels,\n  getCommonAnnotations,\n} from '@console/dev-console/src/utils/resource-label-utils';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { checkAccess, history } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  referenceForModel,\n  referenceFor,\n  modelFor,\n  K8sKind,\n} from '@console/internal/module/k8s';\nimport {\n  Descriptor,\n  SpecCapability,\n} from '@console/operator-lifecycle-manager/src/components/descriptors/types';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src/constants';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { getEventSourceCatalogProviderData } from '../catalog/event-source-data';\nimport {\n  EventSources,\n  EventSourceFormData,\n  EventSourceSyncFormData,\n  SinkType,\n  KnEventCatalogMetaData,\n  YamlFormSyncData,\n} from '../components/add/import-types';\nimport { craftResourceKey } from '../components/pub-sub/pub-sub-utils';\nimport { CAMEL_K_PROVIDER_ANNOTATION } from '../const';\nimport { CamelKameletModel } from '../models';\nimport { getEventSourceIcon } from './get-knative-icon';\n\nexport const isKnownEventSource = (eventSource: string): boolean =>\n  Object.keys(EventSources).includes(eventSource);\n\nexport const getEventSourcesDepResource = (formData: EventSourceFormData): K8sResourceKind => {\n  const {\n    type,\n    name,\n    apiVersion,\n    application: { name: applicationName },\n    project: { name: namespace },\n    data,\n    sinkType,\n    sink,\n  } = formData;\n\n  const defaultLabel = getAppLabels({ name, applicationName });\n  const eventSrcData = data[type];\n  const { name: sinkName, kind: sinkKind, apiVersion: sinkApiVersion, uri: sinkUri } = sink;\n  const eventSourceResource: K8sResourceKind = {\n    apiVersion,\n    kind: type,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n      },\n      annotations: getCommonAnnotations(),\n    },\n    spec: {\n      ...(eventSrcData && eventSrcData),\n      ...(sinkType === SinkType.Resource && sinkName && sinkApiVersion && sinkKind\n        ? {\n            sink: {\n              ref: {\n                apiVersion: sinkApiVersion,\n                kind: sinkKind,\n                name: sinkName,\n              },\n            },\n          }\n        : {\n            sink: {\n              uri: sinkUri,\n            },\n          }),\n    },\n  };\n\n  return eventSourceResource;\n};\n\nexport const isSecretKeyRefPresent = (dataObj: {\n  secretKeyRef: { name: string; key: string };\n}): boolean => !!(dataObj?.secretKeyRef?.name || dataObj?.secretKeyRef?.key);\n\nexport const getKafkaSourceResource = (formData: any): K8sResourceKind => {\n  const baseResource = getEventSourcesDepResource(formData);\n  const { net } = baseResource.spec;\n  baseResource.spec.net = {\n    ...net,\n    ...(!net.sasl?.enable && { sasl: { user: {}, password: {} } }),\n    ...(net.sasl?.enable &&\n      !isSecretKeyRefPresent(net.sasl?.user) &&\n      !isSecretKeyRefPresent(net.sasl?.password) && {\n        sasl: { enable: true, user: {}, password: {} },\n      }),\n    ...(!net.tls?.enable && { tls: { caCert: {}, cert: {}, key: {} } }),\n    ...(net.tls?.enable &&\n      !isSecretKeyRefPresent(net.tls?.caCert) &&\n      !isSecretKeyRefPresent(net.tls?.cert) &&\n      !isSecretKeyRefPresent(net.tls?.key) && {\n        tls: { enable: true, caCert: {}, cert: {}, key: {} },\n      }),\n  };\n  return baseResource;\n};\n\nexport const loadYamlData = <D extends { project?: { name: string } }>(\n  formData: YamlFormSyncData<D>,\n) => {\n  const {\n    formData: {\n      project: { name: namespace },\n    },\n    yamlData,\n  } = formData;\n  let yamlDataObj = safeYAMLToJS(yamlData);\n  const modelData = yamlDataObj && modelFor(referenceFor(yamlDataObj));\n  if (yamlDataObj?.metadata && modelData?.namespaced && !yamlDataObj.metadata?.namespace) {\n    yamlDataObj = { ...yamlDataObj, metadata: { ...yamlDataObj.metadata, namespace } };\n  }\n  return yamlDataObj;\n};\n\nexport const getEventSourceResource = (formData: EventSourceFormData) => {\n  switch (formData.type) {\n    case EventSources.KafkaSource:\n      return getKafkaSourceResource(formData);\n    default:\n      return getEventSourcesDepResource(formData);\n  }\n};\n\nexport const getCatalogEventSourceResource = (\n  sourceFormData: EventSourceSyncFormData,\n): K8sResourceKind => {\n  if (sourceFormData.editorType === EditorType.YAML) {\n    return loadYamlData(sourceFormData);\n  }\n  const { formData } = sourceFormData;\n  return getEventSourceResource(formData);\n};\n\nexport const getEventSourceData = (source: string) => {\n  const eventSourceData = {\n    [EventSources.PingSource]: {\n      data: '',\n      schedule: '',\n    },\n    [EventSources.SinkBinding]: {\n      subject: {\n        apiVersion: '',\n        kind: '',\n        selector: {\n          matchLabels: {},\n        },\n      },\n    },\n    [EventSources.ApiServerSource]: {\n      mode: 'Reference',\n      serviceAccountName: '',\n      resources: [\n        {\n          apiVersion: '',\n          kind: '',\n        },\n      ],\n    },\n    [EventSources.KafkaSource]: {\n      bootstrapServers: [],\n      topics: [],\n      consumerGroup: '',\n      net: {\n        sasl: {\n          enable: false,\n          user: { secretKeyRef: { name: '', key: '' } },\n          password: { secretKeyRef: { name: '', key: '' } },\n        },\n        tls: {\n          enable: false,\n          caCert: { secretKeyRef: { name: '', key: '' } },\n          cert: { secretKeyRef: { name: '', key: '' } },\n          key: { secretKeyRef: { name: '', key: '' } },\n        },\n      },\n    },\n    [EventSources.ContainerSource]: {\n      template: {\n        spec: {\n          containers: [\n            {\n              image: '',\n              name: '',\n              args: [''],\n              env: [],\n            },\n          ],\n        },\n      },\n    },\n  };\n  return eventSourceData[source];\n};\n\nexport const getKameletSourceData = (kameletData: K8sResourceKind) => ({\n  source: {\n    ref: {\n      apiVersion: kameletData.apiVersion,\n      kind: kameletData.kind,\n      name: kameletData.metadata.name,\n    },\n    properties: {},\n  },\n});\n\nexport const sanitizeKafkaSourceResource = (formData: EventSourceFormData): EventSourceFormData => {\n  const formDataActual = formData.data?.[EventSources.KafkaSource] || {};\n  const initialSecretKeyData = { secretKeyRef: { name: '', key: '' } };\n  return {\n    ...formData,\n    data: {\n      [EventSources.KafkaSource]: {\n        bootstrapServers: Array.isArray(formDataActual.bootstrapServers)\n          ? formDataActual.bootstrapServers\n          : [],\n        topics: Array.isArray(formDataActual.topics) ? formDataActual.topics : [],\n        consumerGroup:\n          typeof formDataActual.consumerGroup === 'string' ? formDataActual.consumerGroup : '',\n        net: {\n          sasl: {\n            enable:\n              typeof formDataActual.net?.sasl?.enable === 'boolean'\n                ? formDataActual.net?.sasl?.enable\n                : false,\n            user:\n              typeof formDataActual.net?.sasl?.user === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.sasl.user }\n                : initialSecretKeyData,\n            password:\n              typeof formDataActual.net?.sasl?.password === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.sasl.password }\n                : initialSecretKeyData,\n          },\n          tls: {\n            enable:\n              typeof formDataActual.net?.tls?.enable === 'boolean'\n                ? formDataActual.net?.tls?.enable\n                : false,\n            caCert:\n              typeof formDataActual.net?.tls?.caCert === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.tls.caCert }\n                : initialSecretKeyData,\n            cert:\n              typeof formDataActual.net?.tls?.cert === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.tls.cert }\n                : initialSecretKeyData,\n            key:\n              typeof formDataActual.net?.tls?.key === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.tls.key }\n                : initialSecretKeyData,\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getKameletMetadata = (kamelet: K8sResourceKind): KnEventCatalogMetaData => {\n  let normalizedKamelet = {};\n  if (kamelet?.kind === CamelKameletModel.kind) {\n    const {\n      kind,\n      metadata: { name, annotations },\n      spec,\n    } = kamelet;\n    const provider = annotations?.[CAMEL_K_PROVIDER_ANNOTATION] || '';\n    const iconUrl = getEventSourceIcon(kind, kamelet);\n    normalizedKamelet = {\n      name: spec?.definition?.title || name,\n      description: spec?.definition?.description || '',\n      provider,\n      iconUrl,\n    };\n  }\n  return normalizedKamelet as KnEventCatalogMetaData;\n};\n\nexport const getEventSourceMetadata = (eventSourceModel: K8sKind, t): KnEventCatalogMetaData => {\n  let normalizedSource = {};\n  if (eventSourceModel) {\n    const { kind, label: name } = eventSourceModel;\n    const { description, provider } = getEventSourceCatalogProviderData(kind, t) ?? {};\n    normalizedSource = {\n      name,\n      description,\n      provider,\n      iconUrl: getEventSourceIcon(referenceForModel(eventSourceModel)),\n    };\n  }\n  return normalizedSource as KnEventCatalogMetaData;\n};\n\nexport const getEventSourceModelsWithAccess = (\n  namespace: string,\n  eventSourceModels: K8sKind[],\n): Promise<K8sKind>[] => {\n  return eventSourceModels.map((model) => {\n    const { apiGroup, plural } = model;\n    return checkAccess({\n      group: apiGroup,\n      resource: plural,\n      namespace,\n      verb: 'create',\n    })\n      .then((result) => (result.status.allowed ? model : null))\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.warn('Could not check access for event source models', e);\n        return null;\n      });\n  });\n};\n\nexport const getBootstrapServers = (kafkaResources: K8sResourceKind[]) => {\n  const servers = kafkaResources?.reduce((acc, kafka) => {\n    const listners = [\n      ...(kafka?.status?.listeners\n        ? kafka.status.listeners.map((l) => l?.bootstrapServers?.split(','))?.flat()\n        : []),\n      ...(kafka?.status?.bootstrapServerHost ? [kafka.status.bootstrapServerHost] : []),\n    ];\n    acc.push(...listners);\n    return acc;\n  }, []);\n  return servers;\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n  history.push(redirectURL);\n};\n\nexport const sanitizeSourceToForm = (\n  newFormData: K8sResourceKind,\n  formDataValues: EventSourceFormData,\n  kameletSource?: K8sResourceKind,\n) => {\n  const specData = newFormData.spec;\n  const appGroupName = newFormData.metadata?.labels?.['app.kubernetes.io/part-of'];\n  const sinkRef = specData?.sink?.ref;\n  const formData = {\n    ...formDataValues,\n    application: {\n      ...formDataValues.application,\n      ...(appGroupName &&\n        appGroupName !== formDataValues.application.name && {\n          name: appGroupName,\n          selectedKey: formDataValues.application.selectedKey ? CREATE_APPLICATION_KEY : '',\n        }),\n      ...(!appGroupName && {\n        name: '',\n        selectedKey: UNASSIGNED_APPLICATIONS_KEY,\n      }),\n    },\n    name: newFormData.metadata?.name,\n    sinkType: sinkRef ? SinkType.Resource : SinkType.Uri,\n    sink: {\n      apiVersion: sinkRef?.apiVersion,\n      kind: sinkRef?.kind,\n      name: sinkRef?.name,\n      key: craftResourceKey(sinkRef?.name, {\n        kind: sinkRef?.kind,\n        apiVersion: sinkRef?.apiVersion,\n      }),\n      uri: specData?.sink?.uri || '',\n    },\n    data: {\n      [formDataValues.type]: {\n        ..._.omit(specData, 'sink'),\n      },\n      ...(kameletSource && {\n        [formDataValues.type]: {\n          source: {\n            ref: {\n              apiVersion: kameletSource.apiVersion,\n              kind: kameletSource.kind,\n              name: kameletSource.metadata.name,\n            },\n            properties: specData?.source?.properties,\n          },\n        },\n      }),\n    },\n  };\n  return formDataValues.type === EventSources.KafkaSource\n    ? sanitizeKafkaSourceResource(formData)\n    : formData;\n};\n\nexport const formDescriptorData = (\n  properties,\n  descriptorArr = [],\n  path = '',\n): Descriptor<SpecCapability>[] => {\n  for (const k in properties) {\n    if (properties.hasOwnProperty(k) && typeof properties[k] === 'object') {\n      const custPath = path !== '' ? `${path}.${k}` : k;\n      if (properties[k].type === 'object') {\n        formDescriptorData(properties[k].properties, descriptorArr, custPath);\n      } else if (properties[k].type === 'array' && properties[k].items) {\n        if (properties[k].items.type === 'object') {\n          formDescriptorData(properties[k].items.properties, descriptorArr, `${custPath}[0]`);\n        } else if (properties[k].items.type === 'array') {\n          formDescriptorData(properties[k].items, descriptorArr, `${custPath}[0]`);\n        } else {\n          descriptorArr.push({\n            ...(properties[k].items.hasOwnProperty('title') && {\n              displayName: properties[k].items.title,\n            }),\n            ...(properties[k].items.hasOwnProperty('description') && {\n              description: properties[k].items.description,\n            }),\n            path: `${custPath}[0]`,\n            ...(properties[k].items.hasOwnProperty('x-descriptors') && {\n              'x-descriptors': properties[k].items['x-descriptors'],\n            }),\n          });\n        }\n      } else {\n        descriptorArr.push({\n          displayName: properties[k].title,\n          description: properties[k].description,\n          path: custPath,\n          ...(properties[k]['x-descriptors'] && {\n            'x-descriptors': properties[k]['x-descriptors'],\n          }),\n        });\n      }\n    }\n  }\n  return descriptorArr;\n};\n","import { TFunction } from 'i18next';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport {\n  EVENTING_KAFKA_CHANNEL_KIND,\n  EVENTING_IMC_KIND,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_API_SERVER_KIND,\n  EVENT_SOURCE_CONTAINER_KIND,\n  EVENT_SOURCE_PING_KIND,\n  EVENT_SOURCE_KAFKA_KIND,\n} from '../../const';\nimport { CamelKameletBindingModel } from '../../models';\n\nexport const EventSources = {\n  ApiServerSource: EVENT_SOURCE_API_SERVER_KIND,\n  ContainerSource: EVENT_SOURCE_CONTAINER_KIND,\n  KafkaSource: EVENT_SOURCE_KAFKA_KIND,\n  PingSource: EVENT_SOURCE_PING_KIND,\n  SinkBinding: EVENT_SOURCE_SINK_BINDING_KIND,\n  KameletBinding: CamelKameletBindingModel.kind,\n};\n\nexport const defaultChannels = {\n  InMemoryChannel: EVENTING_IMC_KIND,\n  KafkaChannel: EVENTING_KAFKA_CHANNEL_KIND,\n};\nexport interface ProjectData {\n  name: string;\n  displayName: string;\n  description: string;\n}\n\nexport interface ApplicationData {\n  initial: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface EventSourceData {\n  [x: string]: any;\n}\n\nexport interface SinkResourceData {\n  apiVersion: string;\n  name: string;\n  kind: string;\n  key: string;\n  uri?: string;\n}\n\nexport interface EventSourceFormData {\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  apiVersion: string;\n  type: string;\n  sinkType: string;\n  sink: SinkResourceData;\n  data?: EventSourceData;\n}\nexport interface EventSourceSyncFormData {\n  editorType?: string;\n  showCanUseYAMLMessage?: boolean;\n  formData: EventSourceFormData;\n  yamlData?: string;\n}\nexport interface EventSinkFormData {\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  apiVersion: string;\n  type: string;\n  source?: SinkResourceData;\n  data?: EventSourceData;\n}\n\nexport interface EventSinkSyncFormData {\n  editorType?: string;\n  showCanUseYAMLMessage?: boolean;\n  formData: EventSinkFormData;\n  yamlData?: string;\n}\n\nexport type YamlFormSyncData<T> = {\n  editorType?: string;\n  showCanUseYAMLMessage?: boolean;\n  formData: T;\n  yamlData?: string;\n};\n\nexport interface KnEventCatalogMetaData {\n  name: string;\n  description?: string;\n  provider?: string;\n  iconUrl?: string;\n}\nexport interface EventSourceListData {\n  loaded: boolean;\n  eventSourceList: CatalogItem[];\n}\n\nexport enum SinkType {\n  Resource = 'resource',\n  Uri = 'uri',\n}\n\nexport const sourceSinkType = (t: TFunction) => {\n  return {\n    Resource: {\n      value: SinkType.Resource,\n      label: t('knative-plugin~Resource'),\n    },\n    Uri: {\n      value: SinkType.Uri,\n      label: t('knative-plugin~URI'),\n    },\n  };\n};\nexport interface AddChannelFormData {\n  project?: ProjectData;\n  application: ApplicationData;\n  name: string;\n  namespace: string;\n  apiVersion: string;\n  type: string;\n  data?: EventSourceData;\n  yamlData?: string;\n}\n\nexport interface ChannelListProps {\n  loaded: boolean;\n  channelList: string[];\n}\n\nexport interface AddBrokerFormYamlValues {\n  editorType: string;\n  showCanUseYAMLMessage: boolean;\n  formData: BrokerFormData;\n  yamlData: string;\n}\n\nexport interface BrokerFormData {\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  spec: {};\n}\n","import { FormikValues } from 'formik';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nexport const RESOURCE_KEY_SEPERATOR = '#';\n\nexport const getResourceApiGroup = (apiVersion: string): string => apiVersion.split('/')[0];\n\nexport const getSinkableResourceOrder = (apiVersion: string): number => {\n  const sortOrder = {\n    'serving.knative.dev': 1,\n    'messaging.knative.dev': 2,\n    'eventing.knative.dev': 3,\n  };\n  return sortOrder[getResourceApiGroup(apiVersion)] ?? 4;\n};\nexport const craftResourceKey = (key: string, resource: K8sResourceKind): string | undefined => {\n  if (!resource?.apiVersion) return undefined;\n  const { apiVersion } = resource;\n  return key\n    ? [getSinkableResourceOrder(apiVersion), referenceFor(resource), key].join(\n        RESOURCE_KEY_SEPERATOR,\n      )\n    : undefined;\n};\n\nexport const getResourceNameFromKey = (key: string): string =>\n  key?.split(RESOURCE_KEY_SEPERATOR).pop() ?? '';\n\nexport const sanitizeResourceName = (values: FormikValues): FormikValues => {\n  const finalValues = { ...values };\n  finalValues.spec.subscriber.ref.name = getResourceNameFromKey(values.spec.subscriber.ref.name);\n  return finalValues;\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { kindForReference, K8sResourceKind } from '@console/internal/module/k8s';\nimport { isValidUrl } from '@console/shared';\nimport {\n  EVENT_SOURCE_ICON,\n  CAMEL_KAMELET_ICON,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_KAFKA_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n  EVENT_SOURCE_API_SERVER_KIND,\n  EVENT_SOURCE_CONTAINER_KIND,\n  EVENT_SOURCE_PING_KIND,\n  EVENT_SINK_KAFKA_KIND,\n} from '../const';\nimport apiServerSourceImg from '../imgs/logos/apiserversource.svg';\nimport camelSourceImg from '../imgs/logos/camelsource.svg';\nimport containerSourceImg from '../imgs/logos/containersource.svg';\nimport kafkaSourceImg from '../imgs/logos/kafkasource.svg';\nimport pingSourceImg from '../imgs/logos/pingsource.svg';\nimport sinkBindingSourceImg from '../imgs/logos/sinkbindingsource.svg';\nimport { TYPE_EVENT_SINK } from '../topology/const';\nimport { eventSinkIconSVG, eventSourceIconSVG } from './icons';\n\nconst getEventSourceIconFromKind = (kind: string, nodeType?: string): React.ReactNode | string => {\n  switch (kindForReference(kind)) {\n    case EVENT_SOURCE_API_SERVER_KIND:\n      return apiServerSourceImg;\n    case EVENT_SOURCE_CAMEL_KIND:\n      return camelSourceImg;\n    case EVENT_SOURCE_CONTAINER_KIND:\n      return containerSourceImg;\n    case EVENT_SOURCE_PING_KIND:\n      return pingSourceImg;\n    case EVENT_SOURCE_KAFKA_KIND:\n      return kafkaSourceImg;\n    case EVENT_SOURCE_SINK_BINDING_KIND:\n      return sinkBindingSourceImg;\n    case EVENT_SINK_KAFKA_KIND:\n      return kafkaSourceImg;\n    default:\n      return nodeType === TYPE_EVENT_SINK ? eventSinkIconSVG : eventSourceIconSVG;\n  }\n};\n\nexport const getEventSourceIcon = (\n  kind: string,\n  obj?: K8sResourceKind,\n  nodeType?: string,\n): React.ReactNode | string => {\n  const objAnnotations = obj?.metadata?.annotations;\n  return isValidUrl(objAnnotations?.[EVENT_SOURCE_ICON])\n    ? objAnnotations?.[EVENT_SOURCE_ICON]\n    : isValidUrl(objAnnotations?.[CAMEL_KAMELET_ICON])\n    ? objAnnotations?.[CAMEL_KAMELET_ICON]\n    : getEventSourceIconFromKind(kind, nodeType);\n};\n","import {\n  ResolvedExtension,\n  useResolvedExtensions,\n  AddAction,\n  isAddAction,\n} from '@console/dynamic-plugin-sdk';\n\ninterface AddPage {\n  disabledActions?: string[];\n}\n\nexport const getDisabledAddActions = (): string[] | undefined => {\n  if (window.SERVER_FLAGS.addPage) {\n    const addPage: AddPage = JSON.parse(window.SERVER_FLAGS.addPage);\n    const { disabledActions } = addPage;\n    return disabledActions;\n  }\n  return undefined;\n};\n\nexport const useAddActionExtensions = (): [ResolvedExtension<AddAction>[], boolean, boolean] => {\n  const [allAddActionExtensions, resolved] = useResolvedExtensions<AddAction>(isAddAction);\n  const disabledActions = getDisabledAddActions();\n  const allAddActionsDisabled = disabledActions?.length === allAddActionExtensions?.length;\n\n  if (allAddActionExtensions && disabledActions && disabledActions.length > 0) {\n    const filteredAddActionExtensions = allAddActionExtensions.filter(\n      (addActionExtension) => !disabledActions.includes(addActionExtension.properties.id),\n    );\n    return [filteredAddActionExtensions, resolved, allAddActionsDisabled];\n  }\n\n  return [allAddActionExtensions, resolved, allAddActionsDisabled];\n};\n","import { AddAction, AddActionGroup, ResolvedExtension } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport { AddGroup } from '../components/types';\n\nexport const getAddGroups = (\n  addActions: ResolvedExtension<AddAction>[],\n  addActionGroups: AddActionGroup['properties'][],\n): AddGroup[] => {\n  if (!addActions || !addActionGroups) {\n    return [];\n  }\n  const initialActionGroups: AddGroup[] = addActionGroups.map((actionGroup) => ({\n    ...actionGroup,\n    items: [],\n  }));\n  const populatedActionGroups = addActions.reduce(\n    (actionGroups: typeof initialActionGroups, currAction) => {\n      const actionGroupsForCurrentItem = actionGroups.filter(\n        (a) => currAction.properties.groupId === a.id,\n      );\n      if (actionGroupsForCurrentItem.length) {\n        actionGroupsForCurrentItem.forEach((group) => group.items.push(currAction));\n      } else {\n        actionGroups.push({\n          id: currAction.properties.id,\n          name: currAction.properties.label,\n          items: [currAction],\n        });\n      }\n      return actionGroups;\n    },\n    initialActionGroups,\n  );\n  return populatedActionGroups.filter((group) => group.items.length);\n};\n\nexport const navigateTo = (e: React.SyntheticEvent, url: string) => {\n  history.push(url);\n  e.preventDefault();\n};\n\nexport const resolvedHref = (href: string, namespace: string): string =>\n  href && namespace ? href.replace(/:namespace\\b/g, namespace) : null;\n\nexport const filterNamespaceScopedUrl = (\n  namespace: string,\n  addActions: ResolvedExtension<AddAction>[],\n): ResolvedExtension<AddAction>[] => {\n  if (!namespace || !addActions) {\n    return [];\n  }\n  if (namespace === ALL_NAMESPACES_KEY) {\n    return addActions.filter(({ properties: { href } }) => !href?.match(/:namespace\\b/));\n  }\n  return addActions;\n};\n","import * as React from 'react';\nimport uniqBy from 'lodash-es/uniqBy';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { CAMEL_K_OPERATOR_NS, GLOBAL_OPERATOR_NS } from '../const';\nimport { CamelKameletModel } from '../models';\n\nexport const useKameletsData = (namespace: string): [K8sResourceKind[], boolean, any] => {\n  const [kamelets, setKamelets] = React.useState<K8sResourceKind[]>([]);\n  const [kameletsLoaded, setKameletsLoaded] = React.useState(false);\n  const [kameletsLoadError, setKameletsLoadError] = React.useState(null);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      kamelets: {\n        isList: true,\n        kind: referenceForModel(CamelKameletModel),\n        namespace,\n        optional: true,\n      },\n      kameletsGlobalNs: {\n        isList: true,\n        kind: referenceForModel(CamelKameletModel),\n        namespace: GLOBAL_OPERATOR_NS,\n        optional: true,\n      },\n      kameletsGlobalNs2: {\n        isList: true,\n        kind: referenceForModel(CamelKameletModel),\n        namespace: CAMEL_K_OPERATOR_NS,\n        optional: true,\n      },\n    }),\n    [namespace],\n  );\n\n  const extraResources = useK8sWatchResources<{\n    [key: string]: K8sResourceKind[];\n  }>(watchedResources);\n\n  React.useEffect(() => {\n    const resDataLoaded = Object.keys(extraResources).some((key) => extraResources[key].loaded);\n    const resDataloadError = Object.keys(extraResources).every(\n      (key) => extraResources[key].loadError,\n    );\n    const { kamelets: kameletsData, kameletsGlobalNs, kameletsGlobalNs2 } = extraResources;\n    if (resDataLoaded) {\n      const allKamelets = uniqBy(\n        [...kameletsData.data, ...kameletsGlobalNs.data, ...kameletsGlobalNs2.data],\n        (kamelet) => kamelet?.metadata?.uid,\n      );\n      setKamelets(allKamelets);\n      setKameletsLoaded(kameletsData.loaded || kameletsGlobalNs.loaded || kameletsGlobalNs2.loaded);\n    } else if (resDataloadError) {\n      setKameletsLoadError(\n        kameletsGlobalNs.loadError || kameletsGlobalNs.loadError || kameletsGlobalNs2.loadError,\n      );\n    }\n  }, [extraResources]);\n\n  return [kamelets, kameletsLoaded, kameletsLoadError];\n};\n","import * as React from 'react';\nimport { BoltIcon } from '@patternfly/react-icons/dist/esm/icons/bolt-icon';\nimport { CatalogIcon } from '@patternfly/react-icons/dist/esm/icons/catalog-icon';\nimport { DatabaseIcon } from '@patternfly/react-icons/dist/esm/icons/database-icon';\nimport { FileUploadIcon } from '@patternfly/react-icons/dist/esm/icons/file-upload-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { LaptopCodeIcon } from '@patternfly/react-icons/dist/esm/icons/laptop-code-icon';\nimport { OsImageIcon } from '@patternfly/react-icons/dist/esm/icons/os-image-icon';\nimport i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk/src';\nimport { eventIconStyle, ServerlessFunctionIcon } from '@console/knative-plugin/src/utils/icons';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport {\n  INCONTEXT_ACTIONS_CONNECTS_TO,\n  INCONTEXT_ACTIONS_SERVICE_BINDING,\n  QUERY_PROPERTIES,\n} from '../const';\nimport { resolvedHref } from '../utils/add-page-utils';\nimport { getDisabledAddActions } from '../utils/useAddActionExtensions';\n\nexport const allImportResourceAccess = 'allImportResourceAccess';\nexport const allCatalogImageResourceAccess = 'allCatalogImageResourceAccess';\n\ntype ActionFactory = (\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  path?: string,\n  accessReviewDisabled?: boolean,\n  isServiceBindingAllowed?: boolean,\n) => Action;\n\nexport const resolvedURLWithParams = (\n  unresolvedHref: string,\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  allowServiceBinding?: boolean,\n) => {\n  const resolvedURL = resolvedHref(unresolvedHref, namespace);\n  const queryParams = new URLSearchParams();\n  if (application || contextSource) {\n    application\n      ? queryParams.append(QUERY_PROPERTIES.APPLICATION, application)\n      : queryParams.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n    contextSource &&\n      queryParams.append(\n        QUERY_PROPERTIES.CONTEXT_ACTION,\n        JSON.stringify({\n          type: allowServiceBinding\n            ? INCONTEXT_ACTIONS_SERVICE_BINDING\n            : INCONTEXT_ACTIONS_CONNECTS_TO,\n          payload: contextSource,\n        }),\n      );\n    return `${resolvedURL}${resolvedURL.indexOf('?') > -1 ? '&' : '?'}${queryParams.toString()}`;\n  }\n  return resolvedURL;\n};\n\nexport const AddActions: { [name: string]: ActionFactory } = {\n  FromGit: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'import-from-git',\n    label: i18next.t('devconsole~Import from Git'),\n    icon: <GitAltIcon />,\n    cta: {\n      href: resolvedURLWithParams('/import/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  ContainerImage: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'deploy-image',\n    label: i18next.t('devconsole~Container Image'),\n    icon: <OsImageIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/deploy-image/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  DevCatalog: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'dev-catalog',\n    label: i18next.t('devconsole~From Catalog'),\n    icon: <CatalogIcon />,\n    cta: {\n      href: resolvedURLWithParams('/catalog/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  DatabaseCatalog: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'dev-catalog-databases',\n    label: i18next.t('devconsole~Database'),\n    icon: <DatabaseIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/catalog/ns/:namespace?category=databases',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  Samples: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'import-from-samples',\n    label: i18next.t('devconsole~Samples'),\n    icon: <LaptopCodeIcon />,\n    cta: {\n      href: resolvedURLWithParams('/samples/ns/:namespace', namespace, application, contextSource),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  OperatorBacked: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n    isServiceBindingAllowed,\n  ) => ({\n    id: 'operator-backed',\n    label: i18next.t('devconsole~Operator Backed'),\n    icon: <BoltIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/catalog/ns/:namespace?catalogType=OperatorBackedService',\n        namespace,\n        application,\n        contextSource,\n        isServiceBindingAllowed,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  UploadJarFile: (namespace, application, contextSource, path, accessReviewDisabled) => ({\n    id: 'upload-jar',\n    label: i18next.t('devconsole~Upload JAR file'),\n    icon: <FileUploadIcon />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/upload-jar/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  // Tech debt: ODC-7413: Move Serverless specific actions and providers from devconsole into knative-pluigin\n  CreateServerlessFunction: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n  ) => ({\n    id: 'create-serverless-function',\n    label: i18next.t('devconsole~Create Serverless function'),\n    icon: <ServerlessFunctionIcon style={eventIconStyle} />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/serverless-function/ns/:namespace',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n  CreateServerlessFunctionUsingSamples: (\n    namespace,\n    application,\n    contextSource,\n    path,\n    accessReviewDisabled,\n  ) => ({\n    id: 'create-serverless-function-samples',\n    label: i18next.t('devconsole~Serverless function using Samples'),\n    icon: <ServerlessFunctionIcon style={eventIconStyle} />,\n    cta: {\n      href: resolvedURLWithParams(\n        '/samples/ns/:namespace?sampleType=Serverless function',\n        namespace,\n        application,\n        contextSource,\n      ),\n    },\n    path,\n    disabled: accessReviewDisabled,\n  }),\n};\n\nconst disabledAddActions = getDisabledAddActions();\nexport const disabledActionsFilter = (item: Action) => !disabledAddActions?.includes(item.id);\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { KnEventCatalogMetaData } from '../components/add/import-types';\nimport { CAMEL_K_OPERATOR_NS, GLOBAL_OPERATOR_NS } from '../const';\nimport { CamelKameletBindingModel, CamelKameletModel, KafkaSinkModel } from '../models';\nimport { getEventSinkMetadata } from '../utils/create-eventsink-utils';\nimport { getKameletMetadata } from '../utils/create-eventsources-utils';\n\nexport const useEventSinkStatus = (\n  namespace: string,\n  sinkKindProp?: string,\n  kameletName?: string,\n): {\n  isValidSink: boolean;\n  createSinkAccessLoading: boolean;\n  createSinkAccess: boolean;\n  loaded: boolean;\n  normalizedSink: KnEventCatalogMetaData;\n  kamelet: K8sResourceKind;\n} => {\n  const { t } = useTranslation();\n  const [kameletNs, kameletNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    namespace,\n  );\n  const [kameletGlobalNs, kameletGlobalNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    GLOBAL_OPERATOR_NS,\n  );\n  const [kameletGlobalNs2, kameletGlobalNs2Loaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    CAMEL_K_OPERATOR_NS,\n  );\n\n  const kameletLoaded = kameletNsLoaded && kameletGlobalNsLoaded && kameletGlobalNs2Loaded;\n  const kamelet =\n    kameletName && kameletLoaded && (kameletNs || kameletGlobalNs || kameletGlobalNs2);\n\n  const isKameletSink = kameletName && sinkKindProp === CamelKameletBindingModel.kind;\n  const isSinkKindPresent = sinkKindProp || isKameletSink;\n\n  const eventSinkModel =\n    sinkKindProp && !isKameletSink && KafkaSinkModel.kind === sinkKindProp && KafkaSinkModel;\n  const sinkModel = isKameletSink ? CamelKameletBindingModel : eventSinkModel;\n\n  const [createSinkAccess, createSinkAccessLoading] = useAccessReview({\n    group: sinkModel?.apiGroup,\n    resource: sinkModel?.plural,\n    verb: 'create',\n    namespace,\n  });\n\n  const sourceStatus = React.useMemo(() => {\n    if (!isSinkKindPresent) {\n      return {\n        isValidSink: false,\n        loaded: true,\n        normalizedSink: {} as KnEventCatalogMetaData,\n      };\n    }\n    return {\n      isValidSink: !!eventSinkModel || (kameletLoaded && kamelet && isKameletSink),\n      loaded: isKameletSink ? kameletLoaded : !!eventSinkModel,\n      normalizedSink: isKameletSink\n        ? getKameletMetadata(kamelet)\n        : getEventSinkMetadata(eventSinkModel, t),\n    };\n  }, [isSinkKindPresent, eventSinkModel, kameletLoaded, kamelet, isKameletSink, t]);\n\n  return {\n    ...sourceStatus,\n    createSinkAccessLoading,\n    createSinkAccess,\n    kamelet,\n  };\n};\n","import * as React from 'react';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { getEventSourceModelsWithAccess } from '../utils/create-eventsources-utils';\nimport { useEventSourceModels } from '../utils/fetch-dynamic-eventsources-utils';\n\nexport const useEventSourceModelsWithAccess = (\n  namespace: string,\n): { loaded: boolean; eventSourceModelsList: K8sKind[] } => {\n  const { loaded, eventSourceModels } = useEventSourceModels();\n  const [accessModelData, setAccessModelData] = React.useState({\n    loaded: false,\n    eventSourceModelsList: [],\n  });\n\n  React.useEffect(() => {\n    if (loaded) {\n      const eventSourceModelsWithAccess = getEventSourceModelsWithAccess(\n        namespace,\n        eventSourceModels,\n      );\n      Promise.all([...eventSourceModelsWithAccess])\n        .then((results) => {\n          const modelsWithAccess = results?.reduce(\n            (acc, model) => [...acc, ...(model ? [model] : [])],\n            [],\n          );\n          setAccessModelData({ loaded: true, eventSourceModelsList: modelsWithAccess });\n        })\n        // eslint-disable-next-line no-console\n        .catch((err) => console.warn('Failed to get event source models', err.message));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaded]);\n  return accessModelData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview2 } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { KnEventCatalogMetaData } from '../components/add/import-types';\nimport { CAMEL_K_OPERATOR_NS, GLOBAL_OPERATOR_NS } from '../const';\nimport { CamelKameletBindingModel, CamelKameletModel } from '../models';\nimport { getEventSourceMetadata, getKameletMetadata } from '../utils/create-eventsources-utils';\nimport { useEventSourceModels } from '../utils/fetch-dynamic-eventsources-utils';\n\nexport const useEventSourceStatus = (\n  namespace: string,\n  sourceKindProp?: string,\n  kameletName?: string,\n): {\n  isValidSource: boolean;\n  createSourceAccessLoading: boolean;\n  createSourceAccess: boolean;\n  loaded: boolean;\n  normalizedSource: KnEventCatalogMetaData;\n  kamelet: K8sResourceKind;\n} => {\n  const { t } = useTranslation();\n  const { eventSourceModels, loaded: eventSourceModelsLoaded } = useEventSourceModels();\n  const [kameletNs, kameletNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    namespace,\n  );\n  const [kameletGlobalNs, kameletGlobalNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    GLOBAL_OPERATOR_NS,\n  );\n  const [kameletGlobalNs2, kameletGlobalNs2Loaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    CAMEL_K_OPERATOR_NS,\n  );\n\n  const kameletLoaded = kameletNsLoaded && kameletGlobalNsLoaded && kameletGlobalNs2Loaded;\n  const kamelet = kameletLoaded && (kameletNs || kameletGlobalNs || kameletGlobalNs2);\n\n  const isKameletSource = kameletName && sourceKindProp === CamelKameletBindingModel.kind;\n  const isSourceKindPresent = sourceKindProp || isKameletSource;\n\n  const eventSourceModel =\n    sourceKindProp &&\n    !isKameletSource &&\n    eventSourceModels?.find((model: K8sKind) => model.kind === sourceKindProp);\n  const sourceModel = isKameletSource ? CamelKameletBindingModel : eventSourceModel;\n\n  const [createSourceAccess, createSourceAccessLoading] = useAccessReview2({\n    group: sourceModel?.apiGroup,\n    resource: sourceModel?.plural,\n    verb: 'create',\n    namespace,\n  });\n\n  const sourceStatus = React.useMemo(() => {\n    if (!isSourceKindPresent) {\n      return {\n        isValidSource: false,\n        loaded: true,\n        normalizedSource: {} as KnEventCatalogMetaData,\n      };\n    }\n    return {\n      isValidSource: !!eventSourceModel || (kameletLoaded && kamelet && isKameletSource),\n      loaded: isKameletSource ? kameletLoaded : eventSourceModelsLoaded,\n      normalizedSource: isKameletSource\n        ? getKameletMetadata(kamelet)\n        : getEventSourceMetadata(eventSourceModel, t),\n    };\n  }, [\n    isSourceKindPresent,\n    eventSourceModel,\n    kameletLoaded,\n    kamelet,\n    isKameletSource,\n    eventSourceModelsLoaded,\n    t,\n  ]);\n\n  return {\n    ...sourceStatus,\n    createSourceAccessLoading,\n    createSourceAccess,\n    kamelet,\n  };\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { SelectInputOption } from '@console/shared';\nimport { getBootstrapServers } from '../utils/create-eventsources-utils';\nimport { kafkaBootStrapServerResourcesWatcher } from '../utils/get-knative-resources';\n\nexport const useBootstrapServers = (namespace: string): [SelectInputOption[], string] => {\n  const { t } = useTranslation();\n  const memoResources = React.useMemo(() => kafkaBootStrapServerResourcesWatcher(namespace), [\n    namespace,\n  ]);\n  const { kafkas, kafkaconnections } = useK8sWatchResources<{\n    [key: string]: K8sResourceKind[];\n  }>(memoResources);\n\n  return React.useMemo(() => {\n    let bootstrapServersOptions: SelectInputOption[] = [];\n    let placeholder: string = '';\n    const isKafkasLoaded =\n      (kafkas.loaded && !kafkas.loadError) ||\n      (kafkaconnections.loaded && !kafkaconnections.loadError);\n    const isKafkasLoadError = !!(kafkas.loadError && kafkaconnections.loadError);\n    if (isKafkasLoaded) {\n      const kafkasData = [\n        ...(kafkas.data ? kafkas.data : []),\n        ...(kafkaconnections.data ? kafkaconnections.data : []),\n      ];\n      bootstrapServersOptions = !_.isEmpty(kafkasData)\n        ? _.map(getBootstrapServers(kafkasData), (bs) => ({\n            value: bs,\n            disabled: false,\n          }))\n        : [\n            {\n              value: t('knative-plugin~No bootstrap servers found'),\n              disabled: true,\n            },\n          ];\n      placeholder = t('knative-plugin~Add bootstrap servers');\n    } else if (isKafkasLoadError) {\n      placeholder = t(\n        'knative-plugin~{{loadErrorMessage}}. Try adding bootstrap servers manually.',\n        {\n          loadErrorMessage: `${kafkas.loadError.message}, ${kafkaconnections.loadError.message}`,\n        },\n      );\n    } else {\n      bootstrapServersOptions = [\n        { value: t('knative-plugin~Loading bootstrap servers...'), disabled: true },\n      ];\n      placeholder = '...';\n    }\n\n    return [bootstrapServersOptions, placeholder];\n  }, [\n    kafkas.loaded,\n    kafkas.loadError,\n    kafkas.data,\n    kafkaconnections.loaded,\n    kafkaconnections.loadError,\n    kafkaconnections.data,\n    t,\n  ]);\n};\n","import * as React from 'react';\nimport { ServiceTypeValue } from '../../types';\n\nexport const KnativeServiceTypeContext = React.createContext(ServiceTypeValue.Service);\n","export * from './useEventSourceModelsWithAccess';\nexport * from './useEventSourceStatus';\nexport * from './useKameletsData';\nexport * from './useEventSinkStatus';\nexport * from './useBootstrapServers';\n","import { TFunction } from 'i18next';\nimport {\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_KAFKA_KIND,\n  EVENT_SOURCE_API_SERVER_KIND,\n  EVENT_SOURCE_CONTAINER_KIND,\n  EVENT_SOURCE_PING_KIND,\n} from '../const';\n\nexport const getEventSourceCatalogProviderData = (\n  ref: string,\n  t: TFunction,\n): { description?: string; provider?: string; support?: string } =>\n  ({\n    [EVENT_SOURCE_API_SERVER_KIND]: {\n      description: t(\n        'knative-plugin~This object can be used to connect an event sink, such as a Service, Channel, or Broker to the Kubernetes API server. ApiServerSource watches for Kubernetes events and forwards them to the sink.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_CONTAINER_KIND]: {\n      description: t(\n        'knative-plugin~Starts a user-provided Container which will generate events and send messages to a sink URI. The sink URI is injected into the Container as an environment variable. A ContainerSource is an easy way to implement your own event sources in Knative.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_KAFKA_KIND]: {\n      description: t(\n        'knative-plugin~A distributed messaging system consisting of servers and clients that communicate via a high-performance TCP network protocol. This source will send Apache Kafka messages from monitored Apache Kafka topics to a configured sink, packaged as CloudEvents.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_PING_KIND]: {\n      description: t(\n        'knative-plugin~Used to periodically send ping events with a constant payload to a sink. A PingSource is a timer that emits CloudEvents at a fixed schedule that is configured as a crontab expression.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_SINK_BINDING_KIND]: {\n      description: t(\n        'knative-plugin~Used to connect OpenShift managed applications like Deployments, StatefulSets, or Jobs to an event sink, for example, a Knative Service, Channel, or Broker. SinkBinding is similar to a ContainerSource but works on existing OpenShift Application resources, whereas the ContainerSource Container lifecycle is fully managed by OpenShift Serverless itself.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n  }[ref]);\n","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/apiserversource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/camelsource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/containersource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/kafkasource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/pingsource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/sinkbindingsource.svg\";","import * as _ from 'lodash';\nimport {\n  getAppLabels,\n  getCommonAnnotations,\n} from '@console/dev-console/src/utils/resource-label-utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { K8sModel, K8sResourceKind } from '@console/internal/module/k8s/types';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src/constants';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { getEventSinkCatalogProviderData } from '../catalog/event-sink-data';\nimport {\n  EventSinkFormData,\n  EventSinkSyncFormData,\n  KnEventCatalogMetaData,\n} from '../components/add/import-types';\nimport { craftResourceKey } from '../components/pub-sub/pub-sub-utils';\nimport { EVENT_SINK_KAFKA_KIND } from '../const';\nimport { loadYamlData } from './create-eventsources-utils';\nimport { getEventSourceIcon } from './get-knative-icon';\n\nexport const getEventSinksDepResource = (formData: EventSinkFormData): K8sResourceKind => {\n  const {\n    type,\n    name,\n    apiVersion,\n    application: { name: applicationName },\n    project: { name: namespace },\n    data,\n    source,\n  } = formData;\n\n  const defaultLabel = getAppLabels({ name, applicationName });\n  const eventSrcData = data[type];\n  const { name: sourceName, kind: sourceKind, apiVersion: sourceApiVersion } = source ?? {};\n  const eventSourceResource: K8sResourceKind = {\n    apiVersion,\n    kind: type,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n      },\n      annotations: getCommonAnnotations(),\n    },\n    spec: {\n      ...(eventSrcData && eventSrcData),\n      ...(sourceName &&\n        sourceApiVersion &&\n        sourceKind && {\n          source: {\n            ref: {\n              apiVersion: sourceApiVersion,\n              kind: sourceKind,\n              name: sourceName,\n            },\n          },\n        }),\n    },\n  };\n\n  return eventSourceResource;\n};\n\nexport const getKafkaSinkResource = (formData: EventSinkFormData): K8sResourceKind => {\n  const baseResource = getEventSinksDepResource(formData);\n  return {\n    ...baseResource,\n    spec: {\n      ..._.omit(baseResource.spec, 'auth'),\n      ...(baseResource.spec?.auth?.secret?.ref?.name && {\n        auth: {\n          secret: {\n            ref: {\n              name: baseResource.spec?.auth?.secret?.ref?.name,\n            },\n          },\n        },\n      }),\n    },\n  };\n};\n\nexport const getCatalogEventSinkResource = (\n  sourceFormData: EventSinkSyncFormData,\n): K8sResourceKind => {\n  if (sourceFormData.editorType === EditorType.YAML) {\n    return loadYamlData(sourceFormData);\n  }\n  const { formData } = sourceFormData;\n  return formData.type === EVENT_SINK_KAFKA_KIND\n    ? getKafkaSinkResource(formData)\n    : getEventSinksDepResource(formData);\n};\n\nexport const getKameletSinkData = (kameletData: K8sResourceKind) => ({\n  sink: {\n    ref: {\n      apiVersion: kameletData.apiVersion,\n      kind: kameletData.kind,\n      name: kameletData.metadata.name,\n    },\n    properties: {},\n  },\n});\n\nexport const sanitizeKafkaSinkResource = (formData: EventSinkFormData): EventSinkFormData => {\n  const formDataActual = formData.data?.[EVENT_SINK_KAFKA_KIND] || {};\n  return {\n    ...formData,\n    data: {\n      [EVENT_SINK_KAFKA_KIND]: {\n        bootstrapServers: Array.isArray(formDataActual.bootstrapServers)\n          ? formDataActual.bootstrapServers\n          : [],\n        topic: formDataActual.topic ?? '',\n        ...(formDataActual.auth?.secret?.ref?.name && {\n          auth: {\n            secret: {\n              ref: {\n                name: formDataActual.auth?.secret?.ref?.name,\n              },\n            },\n          },\n        }),\n      },\n    },\n  };\n};\n\nexport const sanitizeSinkToForm = (\n  newFormData: K8sResourceKind,\n  formDataValues: EventSinkFormData,\n  kameletSink?: K8sResourceKind,\n): EventSinkFormData => {\n  const specData = newFormData.spec;\n  const { ref: sourceRef } = specData?.source || {};\n  const appGroupName = newFormData.metadata?.labels?.['app.kubernetes.io/part-of'];\n  const formData: EventSinkFormData = {\n    ...formDataValues,\n    application: {\n      ...formDataValues.application,\n      ...(appGroupName &&\n        appGroupName !== formDataValues.application.name && {\n          name: appGroupName,\n          selectedKey: formDataValues.application.selectedKey ? CREATE_APPLICATION_KEY : '',\n        }),\n      ...(!appGroupName && {\n        name: '',\n        selectedKey: UNASSIGNED_APPLICATIONS_KEY,\n      }),\n    },\n    name: newFormData.metadata?.name,\n    ...(sourceRef?.name &&\n      sourceRef?.kind &&\n      sourceRef?.apiVersion && {\n        source: {\n          apiVersion: sourceRef.apiVersion,\n          kind: sourceRef.kind,\n          name: sourceRef.name,\n          key: craftResourceKey(sourceRef.name, sourceRef),\n        },\n      }),\n    data: {\n      [formDataValues.type]: {\n        ..._.omit(specData, 'source'),\n      },\n      ...(kameletSink && {\n        [formDataValues.type]: {\n          sink: {\n            ref: {\n              apiVersion: kameletSink.apiVersion,\n              kind: kameletSink.kind,\n              name: kameletSink.metadata.name,\n            },\n            properties: specData?.sink?.properties,\n          },\n        },\n      }),\n    },\n  };\n  return formDataValues.type === EVENT_SINK_KAFKA_KIND\n    ? sanitizeKafkaSinkResource(formData)\n    : formData;\n};\n\nexport const getEventSinkMetadata = (eventSinkModel: K8sModel, t): KnEventCatalogMetaData => {\n  let normalizedSource = {};\n  if (eventSinkModel) {\n    const { kind, label: name } = eventSinkModel;\n    const { description, provider } = getEventSinkCatalogProviderData(kind, t) ?? {};\n    normalizedSource = {\n      name,\n      description,\n      provider,\n      iconUrl: getEventSourceIcon(referenceForModel(eventSinkModel)),\n    };\n  }\n  return normalizedSource as KnEventCatalogMetaData;\n};\n\nexport const getEventSinkData = (sink: string) => {\n  const eventSinkData = {\n    [EVENT_SINK_KAFKA_KIND]: {\n      bootstrapServers: [],\n      topic: '',\n      auth: {\n        secret: {\n          ref: {\n            name: '',\n          },\n        },\n      },\n    },\n  };\n  return eventSinkData[sink];\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind, referenceFor } from '@console/internal/module/k8s';\nimport { ResourceActionFactory } from './common-factory';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\nexport const HealthChecksActionFactory: ResourceActionFactory = {\n  AddHealthChecks: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-health-checks',\n    label: i18next.t('console-app~Add Health Checks'),\n    cta: { href: healthChecksUrl(kind, obj) },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  }),\n  EditHealthChecks: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-health-checks',\n    label: i18next.t('console-app~Edit Health Checks'),\n    cta: { href: healthChecksUrl(kind, obj) },\n    insertBefore: 'edit-labels',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  }),\n};\n\nexport const getHealthChecksAction = (kind: K8sKind, obj: K8sResourceKind): Action => {\n  const hasHealthChecks = healthChecksAdded(obj);\n  return hasHealthChecks\n    ? HealthChecksActionFactory.EditHealthChecks(kind, obj)\n    : HealthChecksActionFactory.AddHealthChecks(kind, obj);\n};\n","import { TFunction } from 'i18next';\nimport { EVENT_SINK_KAFKA_KIND } from '../const';\n\nexport const getEventSinkCatalogProviderData = (\n  ref: string,\n  t: TFunction,\n): { description?: string; provider?: string; support?: string } =>\n  ({\n    [EVENT_SINK_KAFKA_KIND]: {\n      description: t(\n        'knative-plugin~A KafkaSink takes a CloudEvent, and sends it to an Apache Kafka Topic. Events can be specified in either Structured or Binary mode.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n  }[ref]);\n","import * as React from 'react';\nimport { TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { CatalogItem, ExtensionHook, SetFeatureFlag } from '@console/dynamic-plugin-sdk';\nimport { K8sKind, referenceForModel } from '@console/internal/module/k8s';\nimport { isCatalogTypeEnabled, useFlag } from '@console/shared';\nimport {\n  EVENT_SINK_CATALOG_TYPE_ID,\n  EVENT_SOURCE_CATALOG_TYPE_ID,\n  FLAG_KNATIVE_EVENT_SINK_CATALOG_TYPE,\n  FLAG_KNATIVE_EVENT_SOURCE_CATALOG_TYPE,\n  FLAG_KNATIVE_EVENTING_ENABLED,\n  FLAG_KNATIVE_EVENTING_CHANNEL,\n  FLAG_KNATIVE_EVENTING_BROKER,\n  FLAG_EVENT_SOURCE_PING,\n} from '../const';\nimport { useEventSourceModelsWithAccess } from '../hooks';\nimport { getEventSourceIcon } from '../utils/get-knative-icon';\nimport { getEventSourceCatalogProviderData } from './event-source-data';\n\nconst normalizeEventSources = (\n  eventSources: K8sKind[],\n  namespace: string,\n  t: TFunction,\n): CatalogItem[] => {\n  const normalizedEventSources: CatalogItem[] = eventSources.map((eventSource) => {\n    const { kind, label: name, id: uid } = eventSource;\n    const href = `/catalog/ns/${namespace}/eventsource?sourceKind=${kind}`;\n    const { description, provider, support } = getEventSourceCatalogProviderData(kind, t) ?? {};\n    return {\n      uid,\n      name,\n      description,\n      icon: { url: getEventSourceIcon(referenceForModel(eventSource)) as string, class: null },\n      type: 'EventSource',\n      provider,\n      cta: { label: t('knative-plugin~Create Event Source'), href },\n      details: {\n        properties: [\n          {\n            label: t('knative-plugin~Support'),\n            value: support,\n          },\n        ],\n      },\n    };\n  });\n  return normalizedEventSources;\n};\n\nexport const useEventSourceProvider: ExtensionHook<CatalogItem[]> = ({\n  namespace,\n}): [CatalogItem[], boolean, any] => {\n  const { t } = useTranslation();\n  const { loaded, eventSourceModelsList: eventSourceModels } = useEventSourceModelsWithAccess(\n    namespace,\n  );\n  const normalizedSources = React.useMemo(\n    () => (loaded ? normalizeEventSources(eventSourceModels, namespace, t) : []),\n\n    [loaded, namespace, t, eventSourceModels],\n  );\n  return [normalizedSources, loaded, undefined];\n};\n\nexport const knativeEventingTypeProvider = (setFeatureFlag: SetFeatureFlag) => {\n  setFeatureFlag(\n    FLAG_KNATIVE_EVENT_SOURCE_CATALOG_TYPE,\n    isCatalogTypeEnabled(EVENT_SOURCE_CATALOG_TYPE_ID),\n  );\n  setFeatureFlag(\n    FLAG_KNATIVE_EVENT_SINK_CATALOG_TYPE,\n    isCatalogTypeEnabled(EVENT_SINK_CATALOG_TYPE_ID),\n  );\n};\n\nexport const useKnativeEventingEnabled = () => {\n  const isChannelEnabled = useFlag(FLAG_KNATIVE_EVENTING_CHANNEL);\n  const isBrokerEnabled = useFlag(FLAG_KNATIVE_EVENTING_BROKER);\n  const isPingSourceEnabled = useFlag(FLAG_EVENT_SOURCE_PING);\n\n  return isChannelEnabled || isBrokerEnabled || isPingSourceEnabled;\n};\n\nexport const useKnativeEventingProvider = (setFeatureFlag: SetFeatureFlag) => {\n  const isEventingEnabled = useKnativeEventingEnabled();\n  setFeatureFlag(FLAG_KNATIVE_EVENTING_ENABLED, isEventingEnabled);\n};\n","import * as React from 'react';\nimport i18next from 'i18next';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { Action } from '@console/dynamic-plugin-sdk/src';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport channelIcon from '../imgs/channel.svg';\n\nconst eventBrokerStyles = {\n  width: '1em',\n  height: '1em',\n};\nconst EventBrokerIcon: React.FC = () => (\n  <img style={eventBrokerStyles} src={channelIcon} alt=\"Eventking Broker icon\" />\n);\n\nexport const AddBrokerAction = (namespace: string, application?: string, path?: string): Action => {\n  const params = new URLSearchParams();\n  const pageUrl = `/broker/ns/${namespace}`;\n  application\n    ? params.append(QUERY_PROPERTIES.APPLICATION, application)\n    : params.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n  return {\n    id: 'broker-add',\n    label: i18next.t('knative-plugin~Broker'),\n    icon: <EventBrokerIcon />,\n    cta: {\n      href: `${pageUrl}?${params.toString()}`,\n    },\n    path,\n    insertAfter: 'channel-add',\n  };\n};\n","import * as React from 'react';\nimport i18next from 'i18next';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport channelIcon from '../imgs/channel.svg';\n\nconst eventChannelStyles = {\n  width: '1em',\n  height: '1em',\n};\nconst EventChannelIcon: React.FC = () => (\n  <img style={eventChannelStyles} src={channelIcon} alt=\"Eventing Channel logo\" />\n);\n\nexport const AddChannelAction = (\n  namespace: string,\n  application?: string,\n  path?: string,\n): Action => {\n  const params = new URLSearchParams();\n  const pageUrl = `/channel/ns/${namespace}`;\n  application\n    ? params.append(QUERY_PROPERTIES.APPLICATION, application)\n    : params.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n  return {\n    id: 'channel-add',\n    label: i18next.t('knative-plugin~Channel'),\n    icon: <EventChannelIcon />,\n    cta: {\n      href: `${pageUrl}?${params.toString()}`,\n    },\n    path,\n    insertAfter: 'event-source-add',\n  };\n};\n","import * as React from 'react';\nimport i18next from 'i18next';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { EventSinkIcon, eventIconStyle } from '../utils/icons';\n\nexport const EVENT_SINK_ADD_CONNECTOR_ACTION = 'event-sink-add-connector-action';\n\nexport const AddEventSinkAction = (\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n  path?: string,\n): Action => {\n  const params = new URLSearchParams();\n  const pageUrl = `/catalog/ns/${namespace}`;\n  params.append('catalogType', 'EventSink');\n  contextSource && params.append(QUERY_PROPERTIES.CONTEXT_SOURCE, contextSource);\n  application\n    ? params.append(QUERY_PROPERTIES.APPLICATION, application)\n    : params.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n  return {\n    id: 'event-sink-add',\n    label: i18next.t('knative-plugin~Event Sink'),\n    icon: <EventSinkIcon style={eventIconStyle} />,\n    cta: {\n      href: `${pageUrl}?${params.toString()}`,\n    },\n    path,\n    insertAfter: 'upload-jar',\n  };\n};\n\nexport const AddEventSinkMenuAction = (\n  namespace: string,\n  application?: string,\n  contextSource?: string,\n): Action => {\n  const params = new URLSearchParams();\n  const pageUrl = `/catalog/ns/${namespace}`;\n  params.append('catalogType', 'EventSink');\n  contextSource && params.append(QUERY_PROPERTIES.CONTEXT_SOURCE, contextSource);\n  application\n    ? params.append(QUERY_PROPERTIES.APPLICATION, application)\n    : params.append(QUERY_PROPERTIES.APPLICATION, UNASSIGNED_KEY);\n  return {\n    id: EVENT_SINK_ADD_CONNECTOR_ACTION,\n    label: i18next.t('knative-plugin~Add Event Sink'),\n    cta: {\n      href: `${pageUrl}?${params.toString()}`,\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { deleteModal } from '@console/internal/components/modals';\nimport { asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { truncateMiddle } from '@console/internal/components/utils/truncate-middle';\nimport { K8sKind, K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared/src/constants';\nimport { cleanUpWorkload } from '@console/topology/src/utils';\nimport {\n  setSinkPubsubModal,\n  deleteRevisionModal,\n  setTrafficDistributionModal,\n  editSinkUriModal,\n  setSinkSourceModal,\n  testServerlessFunctionModal,\n} from '../components/modals';\nimport { addPubSubConnectionModal } from '../components/pub-sub/PubSubModalLauncher';\nimport { EventingSubscriptionModel, EventingTriggerModel } from '../models';\nimport { ServiceTypeValue } from '../types';\n\nexport const setTrafficDistribution = (kind: K8sKind, obj: K8sResourceKind): Action => ({\n  id: 'set-traffic-distribution',\n  label: i18next.t('knative-plugin~Set traffic distribution'),\n  cta: () =>\n    setTrafficDistributionModal({\n      obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const moveSinkPubsub = (model: K8sKind, source: K8sResourceKind): Action => ({\n  id: 'move-sink-pubsub',\n  label: i18next.t('knative-plugin~Move {{kind}}', {\n    kind: model.label,\n  }),\n  cta: () =>\n    setSinkPubsubModal({\n      source,\n      resourceType: model.labelKey ? i18next.t(model.labelKey) : model.label,\n    }),\n  accessReview: {\n    group: model.apiGroup,\n    resource: model.plural,\n    name: source.metadata.name,\n    namespace: source.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const addTriggerBroker = (model: K8sKind, source: K8sResourceKind): Action => ({\n  id: 'add-tigger-broker',\n  label: i18next.t('knative-plugin~Add Trigger'),\n  cta: () =>\n    addPubSubConnectionModal({\n      source,\n    }),\n  accessReview: {\n    group: EventingTriggerModel.apiGroup,\n    resource: EventingTriggerModel.plural,\n    name: source.metadata.name,\n    namespace: source.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nexport const addSubscriptionChannel = (model: K8sKind, source: K8sResourceKind): Action => ({\n  id: 'add-subscription-channel',\n  label: i18next.t('knative-plugin~Add Subscription'),\n  cta: () =>\n    addPubSubConnectionModal({\n      source,\n    }),\n  accessReview: {\n    group: EventingSubscriptionModel.apiGroup,\n    resource: EventingSubscriptionModel.plural,\n    name: source.metadata.name,\n    namespace: source.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nexport const editKnativeService = (kind: K8sKind, obj: K8sResourceKind): Action => ({\n  id: 'edit-knative-service',\n  label: i18next.t('knative-plugin~Edit {{applicationName}}', {\n    applicationName: truncateMiddle(obj.metadata.name, { length: RESOURCE_NAME_TRUNCATE_LENGTH }),\n  }),\n  cta: {\n    href: `/edit/ns/${obj.metadata.namespace}?name=${obj.metadata.name}&kind=${\n      obj.kind || kind.kind\n    }`,\n  },\n  insertAfter: 'edit-resource-limits',\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const editKnativeServiceResource = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  serviceTypeValue: ServiceTypeValue,\n): Action => {\n  return {\n    id: 'edit-service',\n    label:\n      serviceTypeValue === ServiceTypeValue.Function\n        ? i18next.t('knative-plugin~Edit Function')\n        : i18next.t('knative-plugin~Edit Service'),\n    cta: {\n      href:\n        serviceTypeValue === ServiceTypeValue.Function\n          ? `/functions/ns/${obj.metadata.namespace}/${obj.metadata.name}/yaml`\n          : `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    insertAfter: 'edit-annotations',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const deleteKnativeServiceResource = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  serviceTypeValue: ServiceTypeValue,\n  serviceCreatedFromWebFlag: boolean,\n): Action => ({\n  id: `delete-resource`,\n  label:\n    serviceTypeValue === ServiceTypeValue.Function\n      ? i18next.t('knative-plugin~Delete Function')\n      : i18next.t('knative-plugin~Delete Service'),\n  cta: () =>\n    deleteModal(\n      serviceCreatedFromWebFlag\n        ? {\n            kind,\n            resource: obj,\n            deleteAllResources: () => cleanUpWorkload(obj),\n          }\n        : {\n            kind,\n            resource: obj,\n          },\n    ),\n  accessReview: asAccessReview(kind, obj, 'delete'),\n});\n\nexport const moveSinkSource = (model: K8sKind, source: K8sResourceKind): Action => ({\n  id: 'move-sink-source',\n  label: i18next.t('knative-plugin~Move sink'),\n  cta: () =>\n    setSinkSourceModal({\n      source,\n    }),\n  accessReview: {\n    group: model.apiGroup,\n    resource: model.plural,\n    name: source.metadata.name,\n    namespace: source.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const deleteRevision = (model: K8sKind, revision: K8sResourceKind): Action => ({\n  id: 'delete-revision',\n  label: i18next.t('knative-plugin~Delete Revision'),\n  cta: () =>\n    deleteRevisionModal({\n      revision,\n    }),\n  accessReview: {\n    group: model.apiGroup,\n    resource: model.plural,\n    name: revision.metadata.name,\n    namespace: revision.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const editSinkUri = (\n  model: K8sKind,\n  source: K8sResourceKind,\n  resources: K8sResourceKind[],\n): Action => ({\n  id: 'edit-sink-uri',\n  label: i18next.t('knative-plugin~Edit URI'),\n  cta: () =>\n    editSinkUriModal({\n      source,\n      eventSourceList: resources,\n    }),\n  accessReview: {\n    group: model.apiGroup,\n    resource: model.plural,\n    name: resources[0].metadata.name,\n    namespace: resources[0].metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const testServerlessFunction = (model: K8sKind, obj: K8sResourceKind): Action => ({\n  id: 'test-serverless-function',\n  label: i18next.t('knative-plugin~Test Serverless Function'),\n  cta: () =>\n    testServerlessFunctionModal({\n      obj,\n    }),\n  insertBefore: 'create-service-binding',\n});\n"],"sourceRoot":""}