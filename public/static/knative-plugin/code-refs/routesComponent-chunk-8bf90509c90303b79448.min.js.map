{"version":3,"sources":["webpack:///./packages/knative-plugin/src/components/routes/index.ts","webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./packages/knative-plugin/src/utils/condition-utils.ts","webpack:///./packages/knative-plugin/src/utils/serverless-tab-utils.ts","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","webpack:///./packages/knative-plugin/src/components/routes/RoutesPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteDetailsPage.tsx","webpack:///./packages/knative-plugin/src/components/routes/route-table.ts","webpack:///./packages/knative-plugin/src/components/routes/RouteList.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteHeader.tsx","webpack:///./packages/knative-plugin/src/components/routes/RouteRow.tsx"],"names":["getConditionOKCount","conditions","c","Number","status","True","getConditionString","getConditionStats","OKcount","conditionsSize","getCondition","type","serverlessTab","kind","ClipboardCopyToggle","_a","onClick","id","textId","contentId","isExpanded","props","Object","assign","variant","className","clipboardCopyToggleIcon","displayName","ClipboardCopyExpanded","super","this","children","onChange","isReadOnly","isCode","suppressContentEditableWarning","clipboardCopyExpandableContent","onInput","e","target","innerText","contentEditable","dir","defaultProps","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","newText","setState","text","textWhenExpanded","componentWillUnmount","window","clearTimeout","expandContent","_event","expanded","updateText","event","updateTextWhenExpanded","render","isBlock","exitDelay","maxWidth","entryDelay","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","position","additionalActions","ouiaId","ouiaSafe","divProps","clipboardCopy","modifiers","inline","block","state","prefix","clipboardCopyText","code","clipboardCopyActions","clipboardCopyActionsItem","copied","onTooltipHidden","clipboardCopyGroup","readOnlyVariant","undefined","value","Array","isArray","join","top","navigator","clipboard","writeText","toString","error","console","warn","customData","canCreate","ListComponent","selector","selectResourcesForName","matchLabels","RouteDetails","obj","route","t","isPrivateKSVC","metadata","labels","resource","label","path","hideEmpty","url","link","additionalClassName","kindObj","params","location","isAdminPerspective","pages","details","editYaml","breadcrumbs","breadcrumbsFor","customActionMenu","kindObjData","context","actions","options","loaded","DROPDOWN","tableColumnClasses","columnClass","Header","Row","virtualize","title","sortField","transforms","routeReference","revisionReference","name","namespace","columnID","timestamp","creationTimestamp","traffic","map","i","key","revisionName","percent","hideIcon"],"mappings":"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","file":"knative-plugin/code-refs/routesComponent-chunk-8bf90509c90303b79448.min.js","sourcesContent":["export { default as RouteDetailsPage } from './RouteDetailsPage';\nexport { default as RoutesPage } from './RoutesPage';\n","import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"clipboardCopy\": \"pf-v5-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-v5-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-v5-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-v5-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-v5-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-v5-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-v5-c-clipboard-copy__toggle-icon\",\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import * as _ from 'lodash';\nimport { K8sResourceCondition, K8sResourceConditionStatus } from '@console/internal/module/k8s';\n\nexport const getConditionOKCount = (conditions: K8sResourceCondition[]): number =>\n  _.sumBy<any>(conditions, (c) => Number(c.status === K8sResourceConditionStatus.True));\n\nexport const getConditionString = (conditions: K8sResourceCondition[]): string =>\n  `${getConditionOKCount(conditions)} OK / ${_.size(conditions)}`;\n\nexport const getConditionStats = (\n  conditions: K8sResourceCondition[],\n): { OKcount: number; conditionsSize: number } => {\n  return {\n    OKcount: getConditionOKCount(conditions),\n    conditionsSize: _.size(conditions),\n  };\n};\n\nexport const getCondition = (\n  conditions: K8sResourceCondition[],\n  type: K8sResourceCondition['type'],\n): K8sResourceCondition | undefined => _.find(conditions, (c) => c.type === type);\n","import {\n  RevisionModel,\n  ServiceModel,\n  RouteModel,\n  EventingBrokerModel,\n  EventingTriggerModel,\n  EventingSubscriptionModel,\n} from '../models';\n\nexport const serverlessTab = (kind: string) => {\n  switch (kind) {\n    case ServiceModel.kind:\n    case 'EventSource':\n      return '';\n    case RevisionModel.kind:\n      return 'revisions';\n    case RouteModel.kind:\n      return 'routes';\n    case EventingBrokerModel.kind:\n      return 'brokers';\n    case EventingTriggerModel.kind:\n      return 'triggers';\n    case EventingSubscriptionModel.kind:\n      return 'subscriptions';\n    case 'Channel':\n      return 'channels';\n    default:\n      return null;\n  }\n};\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": contentId, \"aria-expanded\": isExpanded }, props),\n        React.createElement(\"div\", { className: css(styles.clipboardCopyToggleIcon) },\n            React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nclass ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e, e.target.innerText), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", { dir: \"ltr\" }, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\nexport { ClipboardCopyExpanded };\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipPosition } from '../Tooltip';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (_event, text) => {\n    try {\n        navigator.clipboard.writeText(text.toString());\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Clipboard API not found, this copy function will not work. This is likely because you're using an\", \"unsupported browser or you're not using HTTPS. \\n\\nIf you're a developer building an application which needs\", \"to support copying to the clipboard without the clipboard API, you'll have to create your own copy\", 'function and pass it to the ClipboardCopy component as the onCopy prop. For more information see', 'https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard');\n        // eslint-disable-next-line no-console\n        console.error(error);\n    }\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nclass ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                const newText = this.props.children;\n                this.setState({ text: newText, textWhenExpanded: newText });\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        this.expandContent = (_event) => {\n            this.setState((prevState) => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (event, text) => {\n            this.setState({ text });\n            this.props.onChange(event, text);\n        };\n        this.updateTextWhenExpanded = (event, text) => {\n            this.setState({ textWhenExpanded: text });\n            this.props.onChange(event, text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: (_event) => {\n                                this.expandContent(_event);\n                                if (this.state.expanded) {\n                                    this.setState({ text: this.state.textWhenExpanded });\n                                }\n                                else {\n                                    this.setState({ textWhenExpanded: this.state.text });\n                                }\n                            }, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, Object.assign({ readOnlyVariant: isReadOnly || this.state.expanded ? 'default' : undefined, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }, (isCode && { dir: 'ltr' }))),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.expanded ? this.state.textWhenExpanded : this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateTextWhenExpanded }, this.state.text))))))));\n        };\n        const text = Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children;\n        this.state = {\n            text,\n            expanded: this.props.isExpanded,\n            copied: false,\n            textWhenExpanded: text\n        };\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: TooltipPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true\n};\nexport { ClipboardCopy };\n//# sourceMappingURL=ClipboardCopy.js.map","import * as React from 'react';\nimport { ListPage } from '@console/internal/components/factory';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { RouteModel } from '../../models';\nimport RouteList from './RouteList';\n\nconst RoutesPage: React.FC<React.ComponentProps<typeof ListPage>> = (props) => {\n  const { customData } = props;\n  return (\n    <ListPage\n      {...props}\n      canCreate={false}\n      kind={referenceForModel(RouteModel)}\n      ListComponent={RouteList}\n      selector={\n        customData?.selectResourcesForName\n          ? { matchLabels: { 'serving.knative.dev/service': customData.selectResourcesForName } }\n          : null\n      }\n    />\n  );\n};\n\nexport default RoutesPage;\n","import * as React from 'react';\nimport { ClipboardCopy } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { Conditions } from '@console/internal/components/conditions';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { RoutesDetailsProps } from '@console/internal/components/routes';\nimport {\n  DetailsItem,\n  detailsPage,\n  ExternalLinkWithCopy,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport {\n  ActionMenu,\n  ActionMenuVariant,\n  ActionServiceProvider,\n  useTabbedTableBreadcrumbsFor,\n} from '@console/shared';\nimport { PRIVATE_KNATIVE_SERVING_LABEL } from '../../const';\nimport { serverlessTab } from '../../utils/serverless-tab-utils';\n\nconst RouteDetails: React.FC<RoutesDetailsProps> = ({ obj: route }) => {\n  const { t } = useTranslation();\n  const isPrivateKSVC =\n    route?.metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] === 'cluster-local';\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Route details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={route} />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl>\n              <DetailsItem\n                label={t('knative-plugin~Location')}\n                obj={route}\n                path=\"status.url\"\n                hideEmpty\n              >\n                {isPrivateKSVC ? (\n                  <ClipboardCopy isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n                    {route?.status?.url}\n                  </ClipboardCopy>\n                ) : (\n                  <ExternalLinkWithCopy\n                    link={route?.status?.url}\n                    text={route?.status?.url}\n                    additionalClassName=\"co-external-link--block\"\n                  />\n                )}\n              </DetailsItem>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('knative-plugin~Conditions')} />\n        <Conditions conditions={route?.status?.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst RouteDetailsPage: React.FC<React.ComponentProps<typeof DetailsPage>> = (props) => {\n  const { kindObj } = props;\n  const params = useParams();\n  const location = useLocation();\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const pages = [navFactory.details(detailsPage(RouteDetails)), navFactory.editYaml()];\n  const actionMenu = (kindObjData: K8sKind, obj: K8sResourceKind) => {\n    const resourceKind = referenceForModel(kindObjData);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  const breadcrumbs = useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'serving',\n    serverlessTab(kindObj.kind),\n    undefined,\n    isAdminPerspective,\n  );\n\n  return (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => breadcrumbs}\n      pages={pages}\n      customActionMenu={actionMenu}\n    />\n  );\n};\n\nexport default RouteDetailsPage;\n","import { Kebab } from '@console/internal/components/utils';\n\nexport const tableColumnClasses = [\n  '', // name\n  '', // namespace\n  'pf-m-hidden pf-m-visible-on-sm', // url\n  'pf-m-hidden pf-m-visible-on-lg', // created\n  'pf-m-hidden pf-m-visible-on-xl', // conditions\n  'pf-m-hidden pf-m-visible-on-2xl', // traffic\n  Kebab.columnClass,\n];\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Table, TableProps } from '@console/internal/components/factory';\nimport RouteHeader from './RouteHeader';\nimport RouteRow from './RouteRow';\n\nconst RouteList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('knative-plugin~Routes')}\n      Header={RouteHeader(t)}\n      Row={RouteRow}\n      virtualize\n    />\n  );\n};\n\nexport default RouteList;\n","import { sortable } from '@patternfly/react-table';\nimport { TFunction } from 'i18next';\nimport { tableColumnClasses } from './route-table';\n\nconst RouteHeader = (t: TFunction) => () => {\n  return [\n    {\n      title: t('knative-plugin~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      id: 'namespace',\n      title: t('knative-plugin~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n    },\n    {\n      title: t('knative-plugin~URL'),\n      sortField: 'status.url',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('knative-plugin~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('knative-plugin~Conditions'),\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('knative-plugin~Traffic'),\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n};\n\nexport default RouteHeader;\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { TableData, RowFunctionArgs } from '@console/internal/components/factory';\nimport { ResourceLink, Timestamp, ExternalLinkWithCopy } from '@console/internal/components/utils';\nimport { referenceFor, referenceForModel } from '@console/internal/module/k8s';\nimport { LazyActionMenu } from '@console/shared/src';\nimport { RevisionModel, RouteModel } from '../../models';\nimport { RouteKind } from '../../types';\nimport { getConditionString } from '../../utils/condition-utils';\nimport { tableColumnClasses } from './route-table';\n\nconst routeReference = referenceForModel(RouteModel);\nconst revisionReference = referenceForModel(RevisionModel);\n\nconst RouteRow: React.FC<RowFunctionArgs<RouteKind>> = ({ obj }) => {\n  const objReference = referenceFor(obj);\n  const context = { [objReference]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={routeReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData className={cx(tableColumnClasses[1], 'co-break-word')} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {(obj.status && obj.status.url && (\n          <ExternalLinkWithCopy\n            link={obj.status.url}\n            text={obj.status.url}\n            additionalClassName=\"co-external-link--block\"\n          />\n        )) ||\n          '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        {obj.status ? getConditionString(obj.status.conditions) : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {obj.status && obj.status.traffic\n          ? obj.status.traffic.map((t, i) => (\n              <React.Fragment key={t.revisionName}>\n                {i > 0 ? ', ' : ''}\n                {`${t.percent}% → `}\n                <ResourceLink\n                  namespace={obj.metadata.namespace}\n                  kind={revisionReference}\n                  name={t.revisionName}\n                  inline\n                  hideIcon\n                />\n              </React.Fragment>\n            ))\n          : '-'}\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport default RouteRow;\n"],"sourceRoot":""}