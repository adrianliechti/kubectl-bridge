{"version":3,"sources":["webpack:///./packages/knative-plugin/src/components/add/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./public/components/modals/configure-update-strategy-modal.tsx","webpack:///./packages/console-shared/src/components/dynamic-form/index.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/utils.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/knative-plugin/src/utils/create-eventsources-utils.ts","webpack:///./packages/knative-plugin/src/components/add/import-types.ts","webpack:///./packages/knative-plugin/src/components/pub-sub/pub-sub-utils.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/console-shared/src/components/dynamic-form/const.ts","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/console-shared/src/components/dynamic-form/utils.ts","webpack:///./packages/knative-plugin/src/utils/get-knative-icon.ts","webpack:///./packages/console-shared/src/components/editor/yaml-download-utils.ts","webpack:///./packages/dev-console/src/components/import/app/AppSection.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/const.ts","webpack:///./packages/console-shared/src/components/dynamic-form/types.ts","webpack:///./packages/topology/src/components/dropdowns/ApplicationSelector.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements.tsx","webpack:///./packages/knative-plugin/src/hooks/useKameletsData.ts","webpack:///./packages/console-shared/src/components/dynamic-form/fields.tsx","webpack:///./packages/knative-plugin/src/hooks/useEventSinkStatus.ts","webpack:///./packages/knative-plugin/src/hooks/useEventSourceModelsWithAccess.ts","webpack:///./packages/knative-plugin/src/hooks/useEventSourceStatus.ts","webpack:///./packages/knative-plugin/src/hooks/useBootstrapServers.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/match-expressions.tsx","webpack:///./packages/dev-console/src/components/QueryFocusApplication.tsx","webpack:///./packages/console-shared/src/components/alerts/SwitchToYAMLAlert.tsx","webpack:///./packages/knative-plugin/src/hooks/index.ts","webpack:///./packages/knative-plugin/src/catalog/event-source-data.ts","webpack:///./packages/knative-plugin/src/imgs/logos/apiserversource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/camelsource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/containersource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/kafkasource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/pingsource.svg","webpack:///./packages/knative-plugin/src/imgs/logos/sinkbindingsource.svg","webpack:///./packages/knative-plugin/src/utils/create-eventsink-utils.ts","webpack:///./packages/console-shared/src/components/dynamic-form/widgets.tsx","webpack:///./packages/knative-plugin/src/catalog/event-sink-data.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/affinity.tsx","webpack:///./packages/knative-plugin/src/components/add/eventSource-validation-utils.ts","webpack:///./packages/console-shared/src/components/dynamic-form/templates.tsx","webpack:///./packages/knative-plugin/src/components/add/const.ts","webpack:///./packages/operator-lifecycle-manager/src/components/operand/utils.ts","webpack:///./packages/operator-lifecycle-manager/src/components/operand/const.ts","webpack:///./packages/knative-plugin/src/utils/create-channel-utils.ts","webpack:///./packages/operator-lifecycle-manager/src/components/descriptors/spec/spec-descriptor-input.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/form-fields/SinkUriResourcesGroup.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/form-fields/SinkResources.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/form-fields/SinkUri.tsx","webpack:///./packages/knative-plugin/src/components/pub-sub/pubsub-validation-utils.ts","webpack:///./packages/knative-plugin/src/components/pub-sub/form-fields/PubSubFilter.tsx","webpack:///./packages/knative-plugin/src/components/pub-sub/form-fields/PubSubSubscriber.tsx","webpack:///./packages/knative-plugin/src/components/add/EventSourcePage.tsx","webpack:///./packages/knative-plugin/src/components/add/KnEventMetaDescription.tsx","webpack:///./packages/knative-plugin/src/components/add/EventingChannelPage.tsx","webpack:///./packages/knative-plugin/src/components/add/EventingBrokerPage.tsx","webpack:///./packages/knative-plugin/src/components/add/brokers/add-broker-utils.ts","webpack:///./packages/knative-plugin/src/components/add/EventSinkPage.tsx","webpack:///./packages/knative-plugin/src/components/add/knative-event-type/SubscribePage.tsx","webpack:///./packages/knative-plugin/src/components/add/EventSource.tsx","webpack:///./packages/knative-plugin/src/components/add/EventSourceForm.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/EventSourceSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/ApiServerSection.tsx","webpack:///./packages/knative-plugin/src/components/dropdowns/ServiceAccountDropdown.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/ContainerSourceSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/KafkaSourceSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/KafkaSourceNetSection.tsx","webpack:///./packages/knative-plugin/src/components/add/SecretKeySelector.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/PingSourceSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/SinkBindingSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sources/SinkSection.tsx","webpack:///./packages/knative-plugin/src/components/add/EventSourceAlert.tsx","webpack:///./packages/knative-plugin/src/components/add/channels/AddChannel.tsx","webpack:///./packages/knative-plugin/src/components/add/channels/ChannelForm.tsx","webpack:///./packages/knative-plugin/src/components/add/channels/form-fields/ChannelSelector.tsx","webpack:///./packages/knative-plugin/src/components/add/channels/sections/FormViewSection.tsx","webpack:///./packages/knative-plugin/src/components/add/channels/sections/DefaultChannelSection.tsx","webpack:///./packages/knative-plugin/src/components/add/channels/sections/KafkaChannelSection.tsx","webpack:///./packages/knative-plugin/src/components/add/brokers/AddBroker.tsx","webpack:///./packages/knative-plugin/src/components/add/brokers/AddBrokerForm.tsx","webpack:///./packages/knative-plugin/src/components/add/brokers/broker-validation-utils.ts","webpack:///./packages/knative-plugin/src/components/add/EventSink.tsx","webpack:///./packages/knative-plugin/src/components/add/eventSink-validation-utils.ts","webpack:///./packages/knative-plugin/src/components/add/EventSinkForm.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sinks/EventSinkSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sinks/KafkaSinkSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sinks/SourceSection.tsx","webpack:///./packages/knative-plugin/src/components/add/event-sinks/form-fields/SourceResources.tsx","webpack:///./packages/knative-plugin/src/components/add/EventSinkAlert.tsx","webpack:///./packages/knative-plugin/src/components/add/knative-event-type/Subscribe.tsx","webpack:///./packages/knative-plugin/src/components/add/knative-event-type/SubscribeForm.tsx","webpack:///./packages/knative-plugin/src/components/add/knative-event-type/subscribe-utils.ts"],"names":["getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","spec","tags","tag","annotationTags","isBuilderTag","name","getBuilderTagsSortedByVersion","sort","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","common","factory","menuActions","getExtensionsActionsForKind","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","created","dockerRepositoryCheck","t","className","kind","metadata","namespace","title","linkTo","timestamp","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","value","ns","href","text","type","variant","ImageStreamsDetails","obj","imageRepository","imageCount","specTagByName","importErrors","status","acc","importErrorCondition","conditions","condition","push","message","warning","alerts","error","i","key","resource","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","displayName","pages","details","editYaml","history","ImageStreamsDetailsPage","props","tableColumnClasses","columnClass","ImageStreamsTableRow","columnID","labels","creationTimestamp","actions","ImageStreamsList","ImageStreamsTableHeader","sortField","transforms","id","Header","Row","virtualize","buildPhase","build","phase","ImageStreamsPage","ListComponent","canCreate","getNumberOrPercent","indexOf","ConfigureUpdateStrategy","showDescription","uid","onChange","e","onChangeStrategyType","target","checked","strategyType","subTitle","autoFocus","htmlFor","disabled","placeholder","size","maxUnavailable","onChangeMaxUnavailable","replicas","content","count","maxSurge","onChangeMaxSurge","desc","ConfigureUpdateStrategyModal","setStrategyType","deployment","setMaxUnavailable","setMaxSurge","onSubmit","event","preventDefault","patch","path","op","promise","handlePromise","close","errorMessage","inProgress","submitText","cancel","configureUpdateStrategyModal","DynamicForm","ArrayFieldTemplate","errors","ErrorTemplate","fields","FieldTemplate","formContext","formData","noValidate","ObjectFieldTemplate","onError","onCancel","schema","uiSchema","widgets","customUISchema","noActions","showAlert","restProps","schemaErrors","length","console","warn","isInline","asDefinitionList","FallbackComponent","noHtml5Validate","next","newErrors","stack","showErrorList","style","paddingBottom","onClick","goBack","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","DroppableFileInput","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","onDataChanged","secretsData","err","onNameChanged","newSecret","save","encode","s","onSave","renderBody","required","onFormDisable","disable","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","fullWidth","children","flexLayout","extraMargin","dataTest","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","metrics","podData","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","element","editAccess","canEdit","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","toLowerCase","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","description","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","useK8sGet","opts","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","resourceType","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","location","dir","cluster","insecure","cadata","dispatch","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","DescriptorType","SpecCapability","StatusCapability","CommonCapability","getDefinedObj","objData","createPipelineResource","secretResp","resourceName","pipelineResource","fieldName","secretKey","createSecretResource","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","useCalculatedDescriptorProperties","descriptorType","descriptor","propertySchema","fullPath","groupDescriptorDetails","descriptors","hidden","beforeIndex","afterIndex","subgroup","nested","arrayGroupPath","isArrayGroup","elementDescriptor","handleArrayDescriptor","getPatchPathFromDescriptor","getValidCapabilitiesForDataType","compatibleCapabilities","getCompatibleCapabilities","capability","isCompatible","compatibleCapability","deprecatedCapability","aIndex","findIndex","bIndex","getValidCapabilitiesForValue","getValueType","getValidCapabilitiesForSchema","isMainStatusDescriptor","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","submitStartPipeline","processWorkspaces","pipelineRunResource","isKnownEventSource","eventSource","getEventSourcesDepResource","sinkType","sink","defaultLabel","eventSrcData","sinkName","sinkKind","sinkApiVersion","uri","sinkUri","Resource","isSecretKeyRefPresent","dataObj","secretKeyRef","loadYamlData","yamlDataObj","modelData","getEventSourceResource","KafkaSource","baseResource","net","sasl","enable","caCert","cert","getKafkaSourceResource","getCatalogEventSourceResource","sourceFormData","editorType","YAML","getEventSourceData","PingSource","schedule","SinkBinding","subject","selector","ApiServerSource","mode","bootstrapServers","topics","consumerGroup","ContainerSource","env","getKameletSourceData","kameletData","getKameletMetadata","kamelet","normalizedKamelet","provider","definition","getEventSourceMetadata","eventSourceModel","normalizedSource","getEventSourceModelsWithAccess","eventSourceModels","getBootstrapServers","kafkaResources","kafka","listners","listeners","l","flat","bootstrapServerHost","handleRedirect","perspective","perspectiveExtensions","perspectiveData","redirectURL","importRedirectURL","sanitizeSourceToForm","newFormData","formDataValues","kameletSource","specData","appGroupName","sinkRef","Uri","formDataActual","initialSecretKeyData","sanitizeKafkaSourceResource","formDescriptorData","descriptorArr","custPath","EventSources","KameletBinding","defaultChannels","InMemoryChannel","KafkaChannel","SinkType","sourceSinkType","getSinkableResourceOrder","getResourceApiGroup","craftResourceKey","getResourceNameFromKey","sanitizeResourceName","finalValues","subscriber","createProject","projectData","createOrUpdateImageStream","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","to","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","responses","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","searchParamOverrides","searchParams","urlObj","URL","search","URLSearchParams","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","K8S_UI_SCHEMA","JSON_SCHEMA_GROUP_TYPES","JSON_SCHEMA_NUMBER_TYPES","THOUSAND","MILLION","BILLION","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","fileUpload","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","jArgsIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","Delete","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","weight","getAllNotStartedPipelines","sessionStorage","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setItem","setPipelineNotStarted","UNSUPPORTED_SCHEMA_PROPERTIES","stringPathToUISchemaPath","subPath","useSchemaLabel","useSchemaDescription","defaultDescription","getSchemaErrors","unsupportedProperty","hasNoFields","jsonSchema","noUIFieldOrWidget","array","object","property","propertyName","boolean","number","getUISortOrder","fallback","getControlFieldsAtPath","dependency","controlFieldPath","controlFieldName","childUISchema","getJSONSchemaPropertySortWeight","currentPath","propertyUISchema","controlFields","isControlField","siblingDependency","uiSortOrder","controlFieldOffset","offset","controlField","Infinity","getJSONSchemaOrder","descendantOrder","handleArray","propertyNames","uiOrder","sortBy","toJS","orderAccumulator","handleObject","pruneRecursive","sample","shouldPrune","valueIsEmpty","definedAndEmpty","prune","getEventSourceIcon","objAnnotations","getEventSourceIconFromKind","downloadYaml","blob","Blob","filename","noProjectsAvailable","initialApplication","REGEXP_K8S_RESOURCE_CAPABILITY","k8sResourcePrefix","REGEXP_FIELD_DEPENDENCY_CAPABILITY","fieldDependency","REGEXP_SELECT_CAPABILITY","select","REGEXP_K8S_RESOURCE_SUFFIX","REGEXP_SELECT_OPTION","REGEXP_FIELD_DEPENDENCY_PATH_VALUE","REGEXP_ARRAY_PATH","REGEXP_NESTED_ARRAY_PATH","REGEXP_CAPTURE_GROUP_SUBGROUP","DEPRECATED_CAPABILITIES","arrayFieldGroup","fieldGroup","namespaceSelector","COMMON_COMPATIBLE_CAPABILITIES","advanced","OBJECT_COMPATIBLE_CAPABILITIES","podStatuses","updateStrategy","nodeAffinity","podAffinity","podAntiAffinity","resourceRequirements","ARRAY_COMPATIBLE_CAPABILITIES","endpointList","PRIMITIVE_COMPATIBLE_CAPABILITIES","k8sPhase","k8sPhaseReason","podCount","w3Link","booleanSwitch","checkbox","CAPABILITY_SORT_ORDER","JSONSchemaType","applicationsAvailable","setApplicationsAvailable","availableApplications","projectsAvailable","touched","nameField","setFieldValue","setFieldTouched","applicationExists","setApplicationExists","applicationNameInputRef","fieldId","isValid","actionItems","actionTitle","actionKey","inputHelpText","focus","ariaLabel","menuClassName","autoSelect","onLoad","applicationList","noApplicationsAvailable","icon","validated","trimmedApplicationName","ResourceRequirements","onChangeCPU","onChangeMemory","onChangeStorage","fontWeight","ResourceRequirementsModal","setCPU","setMemory","setStorage","newObj","submit","ResourceRequirementsModalLink","k8s","none","useKameletsData","kamelets","setKamelets","kameletsLoaded","setKameletsLoaded","kameletsLoadError","setKameletsLoadError","kameletsGlobalNs","kameletsGlobalNs2","extraResources","resDataLoaded","resDataloadError","kameletsData","allKamelets","Description","FormField","showLabel","FieldSet","idSchema","expanded","setExpanded","$id","isExpanded","isHidden","ResourceRequirementsField","mem","sto","UpdateStrategyField","rollingUpdate","NodeAffinityField","affinity","PodAffinityField","DescriptionField","DropdownField","LabelsField","inputProps","newValue","objectify","arrayify","MatchExpressionsField","matchExpressions","NullField","SchemaField","fieldSchema","registry","rootSchema","resolvedSchema","useEventSinkStatus","sinkKindProp","kameletName","kameletNs","kameletNsLoaded","kameletGlobalNs","kameletGlobalNsLoaded","kameletGlobalNs2","kameletGlobalNs2Loaded","kameletLoaded","isKameletSink","isSinkKindPresent","eventSinkModel","sinkModel","createSinkAccess","createSinkAccessLoading","sourceStatus","isValidSink","normalizedSink","useEventSourceModelsWithAccess","accessModelData","setAccessModelData","eventSourceModelsList","eventSourceModelsWithAccess","modelsWithAccess","useEventSourceStatus","sourceKindProp","eventSourceModelsLoaded","isKameletSource","isSourceKindPresent","sourceModel","createSourceAccess","createSourceAccessLoading","isValidSource","useBootstrapServers","memoResources","kafkas","kafkaconnections","bootstrapServersOptions","isKafkasLoaded","isKafkasLoadError","kafkasData","bs","loadErrorMessage","UNARY_OPERATORS","Exists","DoesNotExist","ALL_OPERATORS","Equals","In","NotEqual","NotIn","MatchExpression","expression","allowedOperators","onClickRemove","o","newOperator","MatchExpressions","_exp","removeExpression","newExpression","exp","updateExpression","onSetApp","originalApp","desiredApplication","window","APPLICATION","originalApplication","sanitizedApp","onClose","actionClose","getEventSourceCatalogProviderData","support","module","exports","getEventSinksDepResource","sourceName","sourceKind","sourceApiVersion","getCatalogEventSinkResource","getKafkaSinkResource","getKameletSinkData","sanitizeSinkToForm","kameletSink","sourceRef","topic","sanitizeKafkaSinkResource","getEventSinkMetadata","getEventSinkData","TextWidget","onFocus","readonly","schemaType","NumberWidget","readOnly","numberValue","PasswordWidget","CheckboxWidget","isChecked","_event","SwitchWidget","labelOn","labelOff","PodCountWidget","changeValueBy","operation","ImagePullPolicyWidget","policy","SelectWidget","enumOptions","itemAccumulator","BaseInput","K8sResourceWidget","groupVersionKind","selectorObj","int32","int64","getEventSinkCatalogProviderData","AffinityRuleType","ALLOWED_MATCH_EXPRESSION_OPERATORS","DEFAULT_MATCH_EXPRESSION","DEFAULT_NODE_AFFINITY","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","preferredDuringSchedulingIgnoredDuringExecution","preference","DEFAULT_POD_AFFINITY","topologyKey","podAffinityTerm","NodeAffinityRule","showRemoveButton","Preferred","parsedValue","NodeAffinity","requiredRules","preferredRules","requiredIndex","atIndex","updateRequiredRules","removeRequiredRule","_v","Required","preferredIndex","updatePreferredRules","removePreferredRule","PodAffinityRule","parsed","PodAffinity","ruleIndex","preferredRule","sinkTypeUriValidation","sinkServiceSchema","sourceDataSpecSchema","eventSourceValidationSchema","Form","addChannelValidationSchema","AtomicFieldTemplate","rawErrors","AdvancedProperties","textCollapsed","textExpanded","dependencyMet","setDependencyMet","controlFieldValue","normalProperties","advancedProperties","onAddClick","hasRemove","onDropIndexClick","singularLabel","LABEL_PART_OF","EVENT_BROKER_APP","EVENT_SOURCES_APP","DEFAULT_BROKER_NAME","capabilitiesToUISchema","k8sResourceCapability","groupVersionKindToken","k8sResourceCapabilityToUISchema","optionAccumulator","selectCapabilitiesToUISchema","fieldAccumulator","widget","widgetAccumulator","descriptorsToUISchema","uiSchemaFromDescriptors","uiSchemaAccumulator","schemaForDescriptor","uiSchemaPath","isAdvanced","withMutations","mutable","advancedPropertyName","pathToAdvanced","currentAdvanced","setIn","mergeDeepIn","fieldDependencyCapabilityToUISchema","getUISchema","providedAPI","_unused","specDescriptors","DEFAULT_K8S_SCHEMA","additionalProperties","HIDDEN_UI_SCHEMA","isDefaultChannel","getChannelKind","channelKind","useChannelList","accessData","setAccessData","channelList","channels","channelsLoaded","accessList","channelRef","channelYamltoFormData","getCreateChannelData","channelGroup","channelVersion","channelSpecData","getCatalogChannelData","getChannelData","kafkachannel","numPartitions","replicationFactor","useDefaultChannelConfiguration","configMap","defaultConfiguredChannelLoaded","defaultConfiguredChannel","cfg","namespaceDefaults","clusterDefault","capabilityFieldMap","capabilityWidgetMap","isMoveSink","activeChildren","resourceAlert","setResourceAlert","validateForm","initialValues","sinkTypeTouched","_selectedValue","valueObj","contextAvailable","resourcesData","showBadge","autocompleteFilter","strText","customResourceKey","resourceFilter","resourceList","pubsubValidationSchema","filterPairs","formatFilterData","attributes","nameValue","setNameValue","handleNameValuePairs","nameValuePairs","updatedNameValuePairs","subscriberAvailable","valueString","allowSorting","updateParentData","addString","setStatus","onSubscriberChange","selectedValue","modelResource","light","selectedApplication","contextSource","CONTEXT_SOURCE","normalizedData","src","alt","convertFormToBrokerYaml","appName","addBrokerInitialValues","initialFormData","initial","initialYamlData","skipInvalid","showCanUseYAMLMessage","subscribeApiVersion","subscribeKind","subscribeName","ownProps","activeApplication","perpectiveExtension","sourceData","selApiVersion","selSourceName","kameletSourceName","selDataModel","sinkGroupVersionKind","sinkGroup","sinkVersion","eventSourceMetaDescription","noRefs","catalogInitialValues","projectName","rawFormData","knEventSourceResource","errMessage","referenceForKnEventSource","createResources","submitError","onReset","validateOnBlur","validateOnChange","formikProps","handleSubmit","handleReset","isSubmitting","dirty","yamlEditor","showSamples","formEditor","editor","sanitizeTo","yamlContext","lastViewUserSettingKey","submitLabel","disableSubmit","resetLabel","sticky","projectResource","formSchema","defaultFormSection","EventSource","sectionTitle","component","h2","defaultInitvalue","initVal","initialValueResources","modeItems","Reference","NameValueEditor","templateSpec","containerPaths","Name","Env","Args","initialEnvValues","addLabel","disableDeleteRow","bsPlaceholder","kafkatopics","kafkaTopics","ktPlaceholder","topicsOptions","kt","kafkaTopicErrorMessage","placeholderText","isCreatable","kafkaSource","saslEnable","tlsEnable","formLabel","setSecrets","errMsg","getErrorMessage","nsSecrets","pair","configMaps","matchType","sinkBindingMatchType","verticalAlign","perspectiveExtension","channelResource","refrenceForChannel","setErrors","onTypeChange","nameData","filteredChannels","channelData","channelName","getGenericChannel","ch","getChannelSection","broker","canCreateBroker","loadingAccessReview","FormEditor","hasGutter","syncedEditor","yamlBroker","brokerValidationSchema","currentApp","sinkData","sourceGroupVersionKind","sourceVersion","eventSinkMetaDescription","isInContext","knEventSinkResource","referenceForKnEventSink","sourceServiceSchema","sinkDataSpecSchema","eventSinkValidationSchema","EventSink","targetApiVersion","targetKind","targetName","getResourceModel","eventTypeName","eventTypeNamespace","eventType","rows","getSpecForKind","connectorSourceKind","handleCancel","initialStatus","filterEnabled","showYAMLAlert","setShowYAMLAlert","yamlbuild","noMargin","cancelLabel","handleDownload","convertYamlToForm","triggerYaml","trigger","convertFormToTriggerYaml","triggerFormData","parsedTrigger"],"mappings":"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","file":"knative-plugin/code-refs/addComponent-chunk-49d6371b7de0fd82d15b.min.js","sourcesContent":["export { default as EventSourcePage } from './EventSourcePage';\nexport { default as EventingChannelPage } from './EventingChannelPage';\nexport { default as EventingBrokerPage } from './EventingBrokerPage';\nexport { default as EventSinkPage } from './EventSinkPage';\nexport { default as SubscribePage } from './knative-event-type/SubscribePage';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nimport { k8sPatch, Patch, DeploymentUpdateStrategy, K8sResourceKind } from '../../module/k8s';\nimport { DeploymentModel } from '../../models';\nimport { createModalLauncher, ModalTitle, ModalBody, ModalSubmitFooter } from '../factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '../utils';\nimport { RadioInput } from '../radio';\n\nexport const getNumberOrPercent = (value) => {\n  if (typeof value === 'undefined') {\n    return null;\n  }\n  if (typeof value === 'string' && value.indexOf('%') > -1) {\n    return value;\n  }\n\n  return _.toInteger(value);\n};\n\nexport const ConfigureUpdateStrategy: React.FC<ConfigureUpdateStrategyProps> = (props) => {\n  const { showDescription = true } = props;\n  const { t } = useTranslation();\n  return (\n    <>\n      {showDescription && (\n        <div className=\"co-m-form-row\">\n          <p>{t('public~How should the pods be replaced when a new revision is created?')}</p>\n        </div>\n      )}\n      <div className=\"row co-m-form-row\">\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"RollingUpdate\"\n            checked={props.strategyType === 'RollingUpdate'}\n            title={t('public~RollingUpdate')}\n            subTitle={t('public~(default)')}\n            autoFocus={props.strategyType === 'RollingUpdate'}\n          >\n            <div className=\"co-m-radio-desc\">\n              <p className=\"text-muted modal-paragraph\">\n                {t(\n                  'public~Execute a smooth roll out of the new revision, based on the settings below',\n                )}\n              </p>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-unavailable\" className=\"control-label co-break-word\">\n                    {t('public~Max unavailable')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-unavailable\"\n                        value={props.maxUnavailable}\n                        onChange={(e) => props.onChangeMaxUnavailable(e.target.value)}\n                        aria-describedby=\"input-max-unavailable-help\"\n                      />\n                      {props.replicas && (\n                        <span className=\"pf-v5-c-input-group__text\">\n                          <Tooltip content={t('public~Current desired pod count')}>\n                            <span>{t('public~of pod', { count: props.replicas })}</span>\n                          </Tooltip>\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-unavailable-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be unavailable during the update(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"row co-m-form-row\">\n                <div className=\"col-sm-3\">\n                  <label htmlFor=\"input-max-surge\" className=\"control-label co-break-word\">\n                    {t('public~Max surge')}\n                  </label>\n                </div>\n                <div className=\"co-m-form-col col-sm-9\">\n                  <div className=\"form-inline\">\n                    <div className=\"pf-v5-c-input-group\">\n                      <input\n                        disabled={props.strategyType !== 'RollingUpdate'}\n                        placeholder=\"25%\"\n                        size={5}\n                        type=\"text\"\n                        className=\"pf-v5-c-form-control\"\n                        id=\"input-max-surge\"\n                        value={props.maxSurge}\n                        onChange={(e) => props.onChangeMaxSurge(e.target.value)}\n                        aria-describedby=\"input-max-surge-help\"\n                      />\n                      <span className=\"pf-v5-c-input-group__text\">\n                        <Tooltip content={t('public~Current desired pod count')}>\n                          <span>{t('public~greater than pod', { count: props.replicas })}</span>\n                        </Tooltip>\n                      </span>\n                    </div>\n                  </div>\n                  <p className=\"help-block text-muted\" id=\"input-max-surge-help\">\n                    {t(\n                      'public~Percentage of total number of pods or the maximum number ' +\n                        'of pods that can be scheduled above the original number of pods(optional)',\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </RadioInput>\n        </div>\n\n        <div className=\"col-sm-12\">\n          <RadioInput\n            name={`${props.uid || 'update-strategy'}-type`}\n            onChange={(e) => {\n              props.onChangeStrategyType(e.target.value);\n            }}\n            value=\"Recreate\"\n            checked={props.strategyType === 'Recreate'}\n            title={t('public~Recreate')}\n            desc={t('public~Shut down all existing pods before creating new ones')}\n            autoFocus={props.strategyType === 'Recreate'}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const ConfigureUpdateStrategyModal = withHandlePromise(\n  (props: ConfigureUpdateStrategyModalProps) => {\n    const [strategyType, setStrategyType] = React.useState(\n      _.get(props.deployment.spec, 'strategy.type'),\n    );\n    const [maxUnavailable, setMaxUnavailable] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxUnavailable', '25%'),\n    );\n    const [maxSurge, setMaxSurge] = React.useState(\n      _.get(props.deployment.spec, 'strategy.rollingUpdate.maxSurge', '25%'),\n    );\n\n    const { t } = useTranslation();\n\n    const submit = (event) => {\n      event.preventDefault();\n\n      const patch: Patch = { path: '/spec/strategy/rollingUpdate', op: 'remove' };\n      if (strategyType === 'RollingUpdate') {\n        patch.value = {\n          maxUnavailable: getNumberOrPercent(maxUnavailable || '25%'),\n          maxSurge: getNumberOrPercent(maxSurge || '25%'),\n        };\n        patch.op = 'add';\n      }\n      const promise = k8sPatch(DeploymentModel, props.deployment, [\n        patch,\n        { path: '/spec/strategy/type', value: strategyType, op: 'replace' },\n      ]);\n      props.handlePromise(promise, props.close);\n    };\n\n    return (\n      <form onSubmit={submit} name=\"form\" className=\"modal-content\">\n        <ModalTitle>{t('public~Edit update strategy')}</ModalTitle>\n        <ModalBody>\n          <ConfigureUpdateStrategy\n            strategyType={strategyType}\n            maxUnavailable={maxUnavailable}\n            maxSurge={maxSurge}\n            onChangeStrategyType={setStrategyType}\n            onChangeMaxUnavailable={setMaxUnavailable}\n            onChangeMaxSurge={setMaxSurge}\n            replicas={props.deployment.spec.replicas}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nexport const configureUpdateStrategyModal = createModalLauncher(ConfigureUpdateStrategyModal);\n\nexport type ConfigureUpdateStrategyProps = {\n  showDescription?: boolean;\n  strategyType: DeploymentUpdateStrategy['type'];\n  maxUnavailable: number | string;\n  maxSurge: number | string;\n  onChangeStrategyType: (strategy: DeploymentUpdateStrategy['type']) => void;\n  onChangeMaxUnavailable: (maxUnavailable: number | string) => void;\n  onChangeMaxSurge: (maxSurge: number | string) => void;\n  replicas?: number;\n  uid?: string;\n};\n\nexport type ConfigureUpdateStrategyModalProps = {\n  deployment: K8sResourceKind;\n  handlePromise: <T>(promise: Promise<T>) => Promise<T>;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n} & HandlePromiseProps;\n\nConfigureUpdateStrategy.displayName = 'ConfigureUpdateStrategy';\n","import * as React from 'react';\nimport { Accordion, ActionGroup, Button, Alert } from '@patternfly/react-core';\nimport Form, { FormProps } from '@rjsf/core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorBoundaryFallbackProps } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\nimport { K8S_UI_SCHEMA } from './const';\nimport defaultFields from './fields';\nimport {\n  FieldTemplate as DefaultFieldTemplate,\n  ObjectFieldTemplate as DefaultObjectFieldTemplate,\n  ArrayFieldTemplate as DefaultArrayFieldTemplate,\n  ErrorTemplate as DefaultErrorTemplate,\n} from './templates';\nimport { getSchemaErrors } from './utils';\nimport defaultWidgets from './widgets';\nimport './styles.scss';\n\nexport const DynamicForm: React.FC<DynamicFormProps> = ({\n  ArrayFieldTemplate = DefaultArrayFieldTemplate,\n  errors = [],\n  ErrorTemplate = DefaultErrorTemplate,\n  fields = {},\n  FieldTemplate = DefaultFieldTemplate,\n  formContext,\n  formData = {},\n  noValidate = false,\n  ObjectFieldTemplate = DefaultObjectFieldTemplate,\n  onChange = _.noop,\n  onError = _.noop,\n  onSubmit = _.noop,\n  onCancel,\n  schema,\n  uiSchema = {},\n  widgets = {},\n  customUISchema,\n  noActions,\n  showAlert = true,\n  ...restProps\n}) => {\n  const { t } = useTranslation();\n  const schemaErrors = getSchemaErrors(schema);\n  // IF the top level schema is unsupported, don't render a form at all.\n  if (schemaErrors.length) {\n    // eslint-disable-next-line no-console\n    console.warn('A form could not be generated for this resource.', schemaErrors);\n    return (\n      <Alert\n        isInline\n        className=\"co-alert co-break-word\"\n        variant=\"info\"\n        title={t(\n          'console-shared~A form is not available for this resource. Please use the YAML view.',\n        )}\n      />\n    );\n  }\n  const FormErrorFallbackComponent: React.FC<ErrorBoundaryFallbackProps> = () => {\n    return (\n      <Alert\n        isInline\n        className=\"co-alert co-break-word\"\n        variant=\"danger\"\n        title={t(\n          'console-shared~There is some issue in this form view. Please select \"YAML view\" for full control.',\n        )}\n      />\n    );\n  };\n\n  return (\n    <>\n      {showAlert && (\n        <Alert\n          isInline\n          className=\"co-alert co-break-word\"\n          variant=\"info\"\n          title={t(\n            'console-shared~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control.',\n          )}\n        />\n      )}\n      <Accordion asDefinitionList={false} className=\"co-dynamic-form__accordion\">\n        <ErrorBoundary FallbackComponent={FormErrorFallbackComponent}>\n          <Form\n            {...restProps}\n            className=\"co-dynamic-form\"\n            noValidate={noValidate}\n            ArrayFieldTemplate={ArrayFieldTemplate}\n            fields={{ ...defaultFields, ...fields }}\n            FieldTemplate={FieldTemplate}\n            formContext={{ ...formContext, formData }}\n            formData={formData}\n            noHtml5Validate\n            ObjectFieldTemplate={ObjectFieldTemplate}\n            onChange={(next) => onChange(next.formData)}\n            onError={(newErrors) => onError(_.map(newErrors, (error) => error.stack))}\n            onSubmit={onSubmit}\n            schema={schema}\n            // Don't show the react-jsonschema-form error list at top\n            showErrorList={false}\n            uiSchema={customUISchema ? uiSchema : _.defaultsDeep({}, K8S_UI_SCHEMA, uiSchema)}\n            widgets={{ ...defaultWidgets, ...widgets }}\n          >\n            {errors.length > 0 && <ErrorTemplate errors={errors} />}\n            {!noActions && (\n              <div style={{ paddingBottom: '30px' }}>\n                <ActionGroup className=\"pf-v5-c-form\">\n                  <Button type=\"submit\" variant=\"primary\" data-test=\"create-dynamic-form\">\n                    {t('console-shared~Create')}\n                  </Button>\n                  <Button onClick={onCancel || history.goBack} variant=\"secondary\">\n                    {t('console-shared~Cancel')}\n                  </Button>\n                </ActionGroup>\n              </div>\n            )}\n          </Form>\n        </ErrorBoundary>\n      </Accordion>\n    </>\n  );\n};\n\ntype DynamicFormProps = FormProps<any> & {\n  errors?: string[];\n  ErrorTemplate?: React.FC<{ errors: string[] }>;\n  noActions?: boolean;\n  customUISchema?: boolean;\n  showAlert?: boolean;\n  onCancel?: () => void;\n};\n\nexport * from './types';\nexport * from './const';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport enum DescriptorType {\n  spec = 'spec',\n  status = 'status',\n}\n\nexport enum SpecCapability {\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  endpointList = 'urn:alm:descriptor:com.tectonic.ui:endpointList',\n  label = 'urn:alm:descriptor:com.tectonic.ui:label',\n  resourceRequirements = 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements',\n  selector = 'urn:alm:descriptor:com.tectonic.ui:selector:',\n  namespaceSelector = 'urn:alm:descriptor:com.tectonic.ui:namespaceSelector',\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  booleanSwitch = 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n  checkbox = 'urn:alm:descriptor:com.tectonic.ui:checkbox',\n  imagePullPolicy = 'urn:alm:descriptor:com.tectonic.ui:imagePullPolicy',\n  updateStrategy = 'urn:alm:descriptor:com.tectonic.ui:updateStrategy',\n  text = 'urn:alm:descriptor:com.tectonic.ui:text',\n  number = 'urn:alm:descriptor:com.tectonic.ui:number',\n  nodeAffinity = 'urn:alm:descriptor:com.tectonic.ui:nodeAffinity',\n  podAffinity = 'urn:alm:descriptor:com.tectonic.ui:podAffinity',\n  podAntiAffinity = 'urn:alm:descriptor:com.tectonic.ui:podAntiAffinity',\n  fieldGroup = 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:',\n  arrayFieldGroup = 'urn:alm:descriptor:com.tectonic.ui:arrayFieldGroup:',\n  select = 'urn:alm:descriptor:com.tectonic.ui:select:',\n  advanced = 'urn:alm:descriptor:com.tectonic.ui:advanced',\n  fieldDependency = 'urn:alm:descriptor:com.tectonic.ui:fieldDependency:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n}\n\nexport enum StatusCapability {\n  podStatuses = 'urn:alm:descriptor:com.tectonic.ui:podStatuses',\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  w3Link = 'urn:alm:descriptor:org.w3:link',\n  conditions = 'urn:alm:descriptor:io.kubernetes.conditions',\n  text = 'urn:alm:descriptor:text',\n  prometheusEndpoint = 'urn:alm:descriptor:prometheusEndpoint',\n  k8sPhase = 'urn:alm:descriptor:io.kubernetes.phase',\n  k8sPhaseReason = 'urn:alm:descriptor:io.kubernetes.phase:reason',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n  // Prefix for all kubernetes resource status descriptors.\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n}\n\nexport enum CommonCapability {\n  podCount = 'urn:alm:descriptor:com.tectonic.ui:podCount',\n  k8sResourcePrefix = 'urn:alm:descriptor:io.kubernetes:',\n  hidden = 'urn:alm:descriptor:com.tectonic.ui:hidden',\n  password = 'urn:alm:descriptor:com.tectonic.ui:password',\n}\n\nexport type Descriptor<T = any> = {\n  path: string;\n  displayName: string;\n  description: string;\n  'x-descriptors'?: T[];\n  value?: any;\n};\n\nexport type SpecDescriptor = Descriptor<SpecCapability>;\nexport type StatusDescriptor = Descriptor<StatusCapability>;\n\nexport type CapabilityProps<C extends SpecCapability | StatusCapability, V = any> = {\n  capability?: C;\n  className?: string;\n  description?: string;\n  descriptor: Descriptor<C>;\n  fullPath?: string[];\n  label?: string;\n  model?: K8sKind;\n  namespace?: string;\n  obj?: K8sResourceKind;\n  onError?: (error: Error) => void;\n  value: V;\n};\n\nexport type Error = { message: string };\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import { getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { getSchemaAtPath } from '@console/shared';\nimport {\n  ARRAY_COMPATIBLE_CAPABILITIES,\n  DEPRECATED_CAPABILITIES,\n  OBJECT_COMPATIBLE_CAPABILITIES,\n  PRIMITIVE_COMPATIBLE_CAPABILITIES,\n  REGEXP_ARRAY_PATH,\n  REGEXP_CAPTURE_GROUP_SUBGROUP,\n  REGEXP_NESTED_ARRAY_PATH,\n  COMMON_COMPATIBLE_CAPABILITIES,\n  CAPABILITY_SORT_ORDER,\n} from './const';\nimport { Descriptor, SpecCapability, StatusCapability, CommonCapability } from './types';\n\nexport const useCalculatedDescriptorProperties = (descriptorType, descriptor, schema, obj) => {\n  const propertySchema = getSchemaAtPath(schema, `${descriptorType}.${descriptor.path}`);\n  const fullPath = [descriptorType, ..._.toPath(descriptor.path)];\n  const displayName =\n    descriptor.displayName || propertySchema?.title || _.startCase(_.last(fullPath));\n  const description = descriptor?.description || propertySchema?.description || '';\n  const value = _.get(obj, fullPath, descriptor.value);\n  return {\n    description,\n    displayName,\n    fullPath,\n    propertySchema,\n    value,\n  };\n};\n\n// Creates a structure for rendering grouped descriptors on the operand details page.\nexport const groupDescriptorDetails = (\n  descriptors: Descriptor[],\n): { [group: string]: DescriptorGroup } =>\n  descriptors.reduce((acc, descriptor) => {\n    const handleArrayDescriptor = () => {\n      const [, beforeIndex, afterIndex] = descriptor.path.match(REGEXP_ARRAY_PATH) ?? [];\n      const [, group, subgroup] = beforeIndex?.match(REGEXP_CAPTURE_GROUP_SUBGROUP) ?? [];\n      return subgroup\n        ? {\n            ...acc,\n            [group]: {\n              ...(acc?.[group] ?? {}),\n              nested: {\n                ...(acc?.[group]?.nested ?? {}),\n                [subgroup]: {\n                  ...(acc?.[group]?.nested?.[subgroup] ?? {}),\n                  arrayGroupPath: beforeIndex,\n                  isArrayGroup: true,\n                  ...(afterIndex\n                    ? {\n                        nested: {\n                          ...(acc?.[group]?.nested?.[subgroup]?.nested ?? {}),\n                          [afterIndex]: descriptor,\n                        },\n                      }\n                    : { elementDescriptor: descriptor }),\n                },\n              },\n            },\n          }\n        : {\n            ...acc,\n            [group]: {\n              ...(acc?.[group] ?? {}),\n              arrayGroupPath: beforeIndex,\n              isArrayGroup: true,\n              ...(afterIndex\n                ? {\n                    nested: {\n                      ...(acc?.[group]?.nested ?? {}),\n                      [afterIndex]: descriptor,\n                    },\n                  }\n                : { elementDescriptor: descriptor }),\n            },\n          };\n    };\n\n    // Ignore nested arrays and hidden descriptors.\n    if (\n      REGEXP_NESTED_ARRAY_PATH.test(descriptor.path) ||\n      descriptor?.['x-descriptors']?.includes(CommonCapability.hidden)\n    ) {\n      return acc;\n    }\n\n    if (REGEXP_ARRAY_PATH.test(descriptor.path)) {\n      return handleArrayDescriptor();\n    }\n\n    const [, group, subgroup] = descriptor.path.match(REGEXP_CAPTURE_GROUP_SUBGROUP) ?? [];\n    return group\n      ? {\n          ...acc,\n          [group]: {\n            ...(acc?.[group] ?? {}),\n            ...(subgroup\n              ? {\n                  nested: {\n                    ...(acc?.[group]?.nested ?? {}),\n                    [subgroup]: {\n                      ...(acc?.[group]?.nested?.[subgroup] ?? {}),\n                      descriptor,\n                    },\n                  },\n                }\n              : { descriptor }),\n          },\n        }\n      : acc;\n  }, {});\n\n// Replace '.', '[', and '].' with '/'.\nexport const getPatchPathFromDescriptor = (descriptor: Descriptor): string =>\n  _.toPath(descriptor.path).join('/');\n\n// Given a type, return a static list of x-descriptors that are compatible\nconst getCompatibleCapabilities = (type: string): (StatusCapability | SpecCapability)[] => {\n  switch (type) {\n    case 'object':\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...OBJECT_COMPATIBLE_CAPABILITIES];\n    case 'array':\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...ARRAY_COMPATIBLE_CAPABILITIES];\n    default:\n      return [...COMMON_COMPATIBLE_CAPABILITIES, ...PRIMITIVE_COMPATIBLE_CAPABILITIES];\n  }\n};\n\n// Given type and descriptor, return a list of non-deprecated x-descriptors compatible with type.\n// Deprecated and incompatible x-descriptors are logged as warnings in console. If\n// 'allowDeprecated' is true, deprecated x-descriptors are logged but still returned as valid.\nexport function getValidCapabilitiesForDataType<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  type: string,\n): CapabilityType[] {\n  const compatibleCapabilities = getCompatibleCapabilities(type);\n  return (descriptor?.['x-descriptors'] ?? [])\n    .filter((capability) => {\n      const isCompatible =\n        type === 'any' ||\n        compatibleCapabilities.some((compatibleCapability) =>\n          capability.startsWith(compatibleCapability),\n        );\n      const isDeprecated = DEPRECATED_CAPABILITIES.some((deprecatedCapability) =>\n        capability.startsWith(deprecatedCapability),\n      );\n\n      if (isDeprecated) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Deprecated x-descriptor] \"${capability}\" is deprecated and support will be removed in a future release.`,\n          descriptor,\n        );\n      }\n\n      if (!isCompatible) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[Invalid x-descriptor] \"${capability}\" is incompatible with ${type} values and will have no effect`,\n          descriptor,\n        );\n        return false;\n      }\n\n      return true;\n    })\n    .sort((a, b) => {\n      const aIndex = CAPABILITY_SORT_ORDER.findIndex((capability) => a.startsWith(capability));\n      const bIndex = CAPABILITY_SORT_ORDER.findIndex((capability) => b.startsWith(capability));\n      // If either a or b don't exist in the sorting array, sort the missing item last\n      if (aIndex < 0 || bIndex < 0) {\n        return bIndex - aIndex;\n      }\n      return aIndex - bIndex;\n    });\n}\n\nconst getValueType = (value: any): string => {\n  // Consider nil values 'any' since every descriptor should render empty state in this case\n  if (_.isNil(value)) {\n    return 'any';\n  }\n\n  // Array check must come before object check because _.isObject will return true on array values\n  return _.isArray(value) ? 'array' : _.isObject(value) ? 'object' : 'primitive';\n};\n\nexport function getValidCapabilitiesForValue<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  value: any,\n): CapabilityType[] {\n  const type = getValueType(value);\n  return getValidCapabilitiesForDataType<CapabilityType>(descriptor, type);\n}\n\nexport function getValidCapabilitiesForSchema<CapabilityType extends string = SpecCapability>(\n  descriptor: Descriptor<CapabilityType>,\n  schema: JSONSchema7,\n): CapabilityType[] {\n  const type = getSchemaType(schema);\n  return getValidCapabilitiesForDataType<CapabilityType>(descriptor, type);\n}\n\nexport const isMainStatusDescriptor = (descriptor: Descriptor): boolean =>\n  descriptor.path === 'status' || descriptor.displayName === 'Status';\n\nexport type DescriptorGroup = {\n  arrayGroupPath?: string; // Path to the array that this descriptor group represents\n  descriptor?: Descriptor; // Descriptor for the root level group.\n  elementDescriptor?: Descriptor; // For array groups, the descriptor that applies to each array element\n  isArrayGroup?: boolean; // True if this group describes an array property\n  // Descriptor groups which are encompassed by this group\n  nested?: {\n    [key: string]: DescriptorGroup;\n  };\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as _ from 'lodash';\nimport {\n  getAppLabels,\n  getCommonAnnotations,\n} from '@console/dev-console/src/utils/resource-label-utils';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { checkAccess, history } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  referenceForModel,\n  referenceFor,\n  modelFor,\n  K8sKind,\n} from '@console/internal/module/k8s';\nimport {\n  Descriptor,\n  SpecCapability,\n} from '@console/operator-lifecycle-manager/src/components/descriptors/types';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src/constants';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { getEventSourceCatalogProviderData } from '../catalog/event-source-data';\nimport {\n  EventSources,\n  EventSourceFormData,\n  EventSourceSyncFormData,\n  SinkType,\n  KnEventCatalogMetaData,\n  YamlFormSyncData,\n} from '../components/add/import-types';\nimport { craftResourceKey } from '../components/pub-sub/pub-sub-utils';\nimport { CAMEL_K_PROVIDER_ANNOTATION } from '../const';\nimport { CamelKameletModel } from '../models';\nimport { getEventSourceIcon } from './get-knative-icon';\n\nexport const isKnownEventSource = (eventSource: string): boolean =>\n  Object.keys(EventSources).includes(eventSource);\n\nexport const getEventSourcesDepResource = (formData: EventSourceFormData): K8sResourceKind => {\n  const {\n    type,\n    name,\n    apiVersion,\n    application: { name: applicationName },\n    project: { name: namespace },\n    data,\n    sinkType,\n    sink,\n  } = formData;\n\n  const defaultLabel = getAppLabels({ name, applicationName });\n  const eventSrcData = data[type];\n  const { name: sinkName, kind: sinkKind, apiVersion: sinkApiVersion, uri: sinkUri } = sink;\n  const eventSourceResource: K8sResourceKind = {\n    apiVersion,\n    kind: type,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n      },\n      annotations: getCommonAnnotations(),\n    },\n    spec: {\n      ...(eventSrcData && eventSrcData),\n      ...(sinkType === SinkType.Resource && sinkName && sinkApiVersion && sinkKind\n        ? {\n            sink: {\n              ref: {\n                apiVersion: sinkApiVersion,\n                kind: sinkKind,\n                name: sinkName,\n              },\n            },\n          }\n        : {\n            sink: {\n              uri: sinkUri,\n            },\n          }),\n    },\n  };\n\n  return eventSourceResource;\n};\n\nexport const isSecretKeyRefPresent = (dataObj: {\n  secretKeyRef: { name: string; key: string };\n}): boolean => !!(dataObj?.secretKeyRef?.name || dataObj?.secretKeyRef?.key);\n\nexport const getKafkaSourceResource = (formData: any): K8sResourceKind => {\n  const baseResource = getEventSourcesDepResource(formData);\n  const { net } = baseResource.spec;\n  baseResource.spec.net = {\n    ...net,\n    ...(!net.sasl?.enable && { sasl: { user: {}, password: {} } }),\n    ...(net.sasl?.enable &&\n      !isSecretKeyRefPresent(net.sasl?.user) &&\n      !isSecretKeyRefPresent(net.sasl?.password) && {\n        sasl: { enable: true, user: {}, password: {} },\n      }),\n    ...(!net.tls?.enable && { tls: { caCert: {}, cert: {}, key: {} } }),\n    ...(net.tls?.enable &&\n      !isSecretKeyRefPresent(net.tls?.caCert) &&\n      !isSecretKeyRefPresent(net.tls?.cert) &&\n      !isSecretKeyRefPresent(net.tls?.key) && {\n        tls: { enable: true, caCert: {}, cert: {}, key: {} },\n      }),\n  };\n  return baseResource;\n};\n\nexport const loadYamlData = <D extends { project?: { name: string } }>(\n  formData: YamlFormSyncData<D>,\n) => {\n  const {\n    formData: {\n      project: { name: namespace },\n    },\n    yamlData,\n  } = formData;\n  let yamlDataObj = safeYAMLToJS(yamlData);\n  const modelData = yamlDataObj && modelFor(referenceFor(yamlDataObj));\n  if (yamlDataObj?.metadata && modelData?.namespaced && !yamlDataObj.metadata?.namespace) {\n    yamlDataObj = { ...yamlDataObj, metadata: { ...yamlDataObj.metadata, namespace } };\n  }\n  return yamlDataObj;\n};\n\nexport const getEventSourceResource = (formData: EventSourceFormData) => {\n  switch (formData.type) {\n    case EventSources.KafkaSource:\n      return getKafkaSourceResource(formData);\n    default:\n      return getEventSourcesDepResource(formData);\n  }\n};\n\nexport const getCatalogEventSourceResource = (\n  sourceFormData: EventSourceSyncFormData,\n): K8sResourceKind => {\n  if (sourceFormData.editorType === EditorType.YAML) {\n    return loadYamlData(sourceFormData);\n  }\n  const { formData } = sourceFormData;\n  return getEventSourceResource(formData);\n};\n\nexport const getEventSourceData = (source: string) => {\n  const eventSourceData = {\n    [EventSources.PingSource]: {\n      data: '',\n      schedule: '',\n    },\n    [EventSources.SinkBinding]: {\n      subject: {\n        apiVersion: '',\n        kind: '',\n        selector: {\n          matchLabels: {},\n        },\n      },\n    },\n    [EventSources.ApiServerSource]: {\n      mode: 'Reference',\n      serviceAccountName: '',\n      resources: [\n        {\n          apiVersion: '',\n          kind: '',\n        },\n      ],\n    },\n    [EventSources.KafkaSource]: {\n      bootstrapServers: [],\n      topics: [],\n      consumerGroup: '',\n      net: {\n        sasl: {\n          enable: false,\n          user: { secretKeyRef: { name: '', key: '' } },\n          password: { secretKeyRef: { name: '', key: '' } },\n        },\n        tls: {\n          enable: false,\n          caCert: { secretKeyRef: { name: '', key: '' } },\n          cert: { secretKeyRef: { name: '', key: '' } },\n          key: { secretKeyRef: { name: '', key: '' } },\n        },\n      },\n    },\n    [EventSources.ContainerSource]: {\n      template: {\n        spec: {\n          containers: [\n            {\n              image: '',\n              name: '',\n              args: [''],\n              env: [],\n            },\n          ],\n        },\n      },\n    },\n  };\n  return eventSourceData[source];\n};\n\nexport const getKameletSourceData = (kameletData: K8sResourceKind) => ({\n  source: {\n    ref: {\n      apiVersion: kameletData.apiVersion,\n      kind: kameletData.kind,\n      name: kameletData.metadata.name,\n    },\n    properties: {},\n  },\n});\n\nexport const sanitizeKafkaSourceResource = (formData: EventSourceFormData): EventSourceFormData => {\n  const formDataActual = formData.data?.[EventSources.KafkaSource] || {};\n  const initialSecretKeyData = { secretKeyRef: { name: '', key: '' } };\n  return {\n    ...formData,\n    data: {\n      [EventSources.KafkaSource]: {\n        bootstrapServers: Array.isArray(formDataActual.bootstrapServers)\n          ? formDataActual.bootstrapServers\n          : [],\n        topics: Array.isArray(formDataActual.topics) ? formDataActual.topics : [],\n        consumerGroup:\n          typeof formDataActual.consumerGroup === 'string' ? formDataActual.consumerGroup : '',\n        net: {\n          sasl: {\n            enable:\n              typeof formDataActual.net?.sasl?.enable === 'boolean'\n                ? formDataActual.net?.sasl?.enable\n                : false,\n            user:\n              typeof formDataActual.net?.sasl?.user === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.sasl.user }\n                : initialSecretKeyData,\n            password:\n              typeof formDataActual.net?.sasl?.password === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.sasl.password }\n                : initialSecretKeyData,\n          },\n          tls: {\n            enable:\n              typeof formDataActual.net?.tls?.enable === 'boolean'\n                ? formDataActual.net?.tls?.enable\n                : false,\n            caCert:\n              typeof formDataActual.net?.tls?.caCert === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.tls.caCert }\n                : initialSecretKeyData,\n            cert:\n              typeof formDataActual.net?.tls?.cert === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.tls.cert }\n                : initialSecretKeyData,\n            key:\n              typeof formDataActual.net?.tls?.key === 'object'\n                ? { ...initialSecretKeyData, ...formDataActual.net.tls.key }\n                : initialSecretKeyData,\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getKameletMetadata = (kamelet: K8sResourceKind): KnEventCatalogMetaData => {\n  let normalizedKamelet = {};\n  if (kamelet?.kind === CamelKameletModel.kind) {\n    const {\n      kind,\n      metadata: { name, annotations },\n      spec,\n    } = kamelet;\n    const provider = annotations?.[CAMEL_K_PROVIDER_ANNOTATION] || '';\n    const iconUrl = getEventSourceIcon(kind, kamelet);\n    normalizedKamelet = {\n      name: spec?.definition?.title || name,\n      description: spec?.definition?.description || '',\n      provider,\n      iconUrl,\n    };\n  }\n  return normalizedKamelet as KnEventCatalogMetaData;\n};\n\nexport const getEventSourceMetadata = (eventSourceModel: K8sKind, t): KnEventCatalogMetaData => {\n  let normalizedSource = {};\n  if (eventSourceModel) {\n    const { kind, label: name } = eventSourceModel;\n    const { description, provider } = getEventSourceCatalogProviderData(kind, t) ?? {};\n    normalizedSource = {\n      name,\n      description,\n      provider,\n      iconUrl: getEventSourceIcon(referenceForModel(eventSourceModel)),\n    };\n  }\n  return normalizedSource as KnEventCatalogMetaData;\n};\n\nexport const getEventSourceModelsWithAccess = (\n  namespace: string,\n  eventSourceModels: K8sKind[],\n): Promise<K8sKind>[] => {\n  return eventSourceModels.map((model) => {\n    const { apiGroup, plural } = model;\n    return checkAccess({\n      group: apiGroup,\n      resource: plural,\n      namespace,\n      verb: 'create',\n    })\n      .then((result) => (result.status.allowed ? model : null))\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.warn('Could not check access for event source models', e);\n        return null;\n      });\n  });\n};\n\nexport const getBootstrapServers = (kafkaResources: K8sResourceKind[]) => {\n  const servers = kafkaResources?.reduce((acc, kafka) => {\n    const listners = [\n      ...(kafka?.status?.listeners\n        ? kafka.status.listeners.map((l) => l?.bootstrapServers?.split(','))?.flat()\n        : []),\n      ...(kafka?.status?.bootstrapServerHost ? [kafka.status.bootstrapServerHost] : []),\n    ];\n    acc.push(...listners);\n    return acc;\n  }, []);\n  return servers;\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n  history.push(redirectURL);\n};\n\nexport const sanitizeSourceToForm = (\n  newFormData: K8sResourceKind,\n  formDataValues: EventSourceFormData,\n  kameletSource?: K8sResourceKind,\n) => {\n  const specData = newFormData.spec;\n  const appGroupName = newFormData.metadata?.labels?.['app.kubernetes.io/part-of'];\n  const sinkRef = specData?.sink?.ref;\n  const formData = {\n    ...formDataValues,\n    application: {\n      ...formDataValues.application,\n      ...(appGroupName &&\n        appGroupName !== formDataValues.application.name && {\n          name: appGroupName,\n          selectedKey: formDataValues.application.selectedKey ? CREATE_APPLICATION_KEY : '',\n        }),\n      ...(!appGroupName && {\n        name: '',\n        selectedKey: UNASSIGNED_APPLICATIONS_KEY,\n      }),\n    },\n    name: newFormData.metadata?.name,\n    sinkType: sinkRef ? SinkType.Resource : SinkType.Uri,\n    sink: {\n      apiVersion: sinkRef?.apiVersion,\n      kind: sinkRef?.kind,\n      name: sinkRef?.name,\n      key: craftResourceKey(sinkRef?.name, {\n        kind: sinkRef?.kind,\n        apiVersion: sinkRef?.apiVersion,\n      }),\n      uri: specData?.sink?.uri || '',\n    },\n    data: {\n      [formDataValues.type]: {\n        ..._.omit(specData, 'sink'),\n      },\n      ...(kameletSource && {\n        [formDataValues.type]: {\n          source: {\n            ref: {\n              apiVersion: kameletSource.apiVersion,\n              kind: kameletSource.kind,\n              name: kameletSource.metadata.name,\n            },\n            properties: specData?.source?.properties,\n          },\n        },\n      }),\n    },\n  };\n  return formDataValues.type === EventSources.KafkaSource\n    ? sanitizeKafkaSourceResource(formData)\n    : formData;\n};\n\nexport const formDescriptorData = (\n  properties,\n  descriptorArr = [],\n  path = '',\n): Descriptor<SpecCapability>[] => {\n  for (const k in properties) {\n    if (properties.hasOwnProperty(k) && typeof properties[k] === 'object') {\n      const custPath = path !== '' ? `${path}.${k}` : k;\n      if (properties[k].type === 'object') {\n        formDescriptorData(properties[k].properties, descriptorArr, custPath);\n      } else if (properties[k].type === 'array' && properties[k].items) {\n        if (properties[k].items.type === 'object') {\n          formDescriptorData(properties[k].items.properties, descriptorArr, `${custPath}[0]`);\n        } else if (properties[k].items.type === 'array') {\n          formDescriptorData(properties[k].items, descriptorArr, `${custPath}[0]`);\n        } else {\n          descriptorArr.push({\n            ...(properties[k].items.hasOwnProperty('title') && {\n              displayName: properties[k].items.title,\n            }),\n            ...(properties[k].items.hasOwnProperty('description') && {\n              description: properties[k].items.description,\n            }),\n            path: `${custPath}[0]`,\n            ...(properties[k].items.hasOwnProperty('x-descriptors') && {\n              'x-descriptors': properties[k].items['x-descriptors'],\n            }),\n          });\n        }\n      } else {\n        descriptorArr.push({\n          displayName: properties[k].title,\n          description: properties[k].description,\n          path: custPath,\n          ...(properties[k]['x-descriptors'] && {\n            'x-descriptors': properties[k]['x-descriptors'],\n          }),\n        });\n      }\n    }\n  }\n  return descriptorArr;\n};\n","import { TFunction } from 'i18next';\nimport { CatalogItem } from '@console/dynamic-plugin-sdk';\nimport {\n  EVENTING_KAFKA_CHANNEL_KIND,\n  EVENTING_IMC_KIND,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_API_SERVER_KIND,\n  EVENT_SOURCE_CONTAINER_KIND,\n  EVENT_SOURCE_PING_KIND,\n  EVENT_SOURCE_KAFKA_KIND,\n} from '../../const';\nimport { CamelKameletBindingModel } from '../../models';\n\nexport const EventSources = {\n  ApiServerSource: EVENT_SOURCE_API_SERVER_KIND,\n  ContainerSource: EVENT_SOURCE_CONTAINER_KIND,\n  KafkaSource: EVENT_SOURCE_KAFKA_KIND,\n  PingSource: EVENT_SOURCE_PING_KIND,\n  SinkBinding: EVENT_SOURCE_SINK_BINDING_KIND,\n  KameletBinding: CamelKameletBindingModel.kind,\n};\n\nexport const defaultChannels = {\n  InMemoryChannel: EVENTING_IMC_KIND,\n  KafkaChannel: EVENTING_KAFKA_CHANNEL_KIND,\n};\nexport interface ProjectData {\n  name: string;\n  displayName: string;\n  description: string;\n}\n\nexport interface ApplicationData {\n  initial: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface EventSourceData {\n  [x: string]: any;\n}\n\nexport interface SinkResourceData {\n  apiVersion: string;\n  name: string;\n  kind: string;\n  key: string;\n  uri?: string;\n}\n\nexport interface EventSourceFormData {\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  apiVersion: string;\n  type: string;\n  sinkType: string;\n  sink: SinkResourceData;\n  data?: EventSourceData;\n}\nexport interface EventSourceSyncFormData {\n  editorType?: string;\n  showCanUseYAMLMessage?: boolean;\n  formData: EventSourceFormData;\n  yamlData?: string;\n}\nexport interface EventSinkFormData {\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  apiVersion: string;\n  type: string;\n  source?: SinkResourceData;\n  data?: EventSourceData;\n}\n\nexport interface EventSinkSyncFormData {\n  editorType?: string;\n  showCanUseYAMLMessage?: boolean;\n  formData: EventSinkFormData;\n  yamlData?: string;\n}\n\nexport type YamlFormSyncData<T> = {\n  editorType?: string;\n  showCanUseYAMLMessage?: boolean;\n  formData: T;\n  yamlData?: string;\n};\n\nexport interface KnEventCatalogMetaData {\n  name: string;\n  description?: string;\n  provider?: string;\n  iconUrl?: string;\n}\nexport interface EventSourceListData {\n  loaded: boolean;\n  eventSourceList: CatalogItem[];\n}\n\nexport enum SinkType {\n  Resource = 'resource',\n  Uri = 'uri',\n}\n\nexport const sourceSinkType = (t: TFunction) => {\n  return {\n    Resource: {\n      value: SinkType.Resource,\n      label: t('knative-plugin~Resource'),\n    },\n    Uri: {\n      value: SinkType.Uri,\n      label: t('knative-plugin~URI'),\n    },\n  };\n};\nexport interface AddChannelFormData {\n  project?: ProjectData;\n  application: ApplicationData;\n  name: string;\n  namespace: string;\n  apiVersion: string;\n  type: string;\n  data?: EventSourceData;\n  yamlData?: string;\n}\n\nexport interface ChannelListProps {\n  loaded: boolean;\n  channelList: string[];\n}\n\nexport interface AddBrokerFormYamlValues {\n  editorType: string;\n  showCanUseYAMLMessage: boolean;\n  formData: BrokerFormData;\n  yamlData: string;\n}\n\nexport interface BrokerFormData {\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  spec: {};\n}\n","import { FormikValues } from 'formik';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nexport const RESOURCE_KEY_SEPERATOR = '#';\n\nexport const getResourceApiGroup = (apiVersion: string): string => apiVersion.split('/')[0];\n\nexport const getSinkableResourceOrder = (apiVersion: string): number => {\n  const sortOrder = {\n    'serving.knative.dev': 1,\n    'messaging.knative.dev': 2,\n    'eventing.knative.dev': 3,\n  };\n  return sortOrder[getResourceApiGroup(apiVersion)] ?? 4;\n};\nexport const craftResourceKey = (key: string, resource: K8sResourceKind): string | undefined => {\n  if (!resource?.apiVersion) return undefined;\n  const { apiVersion } = resource;\n  return key\n    ? [getSinkableResourceOrder(apiVersion), referenceFor(resource), key].join(\n        RESOURCE_KEY_SEPERATOR,\n      )\n    : undefined;\n};\n\nexport const getResourceNameFromKey = (key: string): string =>\n  key?.split(RESOURCE_KEY_SEPERATOR).pop() ?? '';\n\nexport const sanitizeResourceName = (values: FormikValues): FormikValues => {\n  const finalValues = { ...values };\n  finalValues.spec.subscriber.ref.name = getResourceNameFromKey(values.spec.subscriber.ref.name);\n  return finalValues;\n};\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","export const K8S_UI_SCHEMA = {\n  apiVersion: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  kind: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  spec: {\n    'ui:options': {\n      label: false,\n    },\n  },\n  status: {\n    'ui:widget': 'hidden',\n    'ui:options': {\n      label: false,\n    },\n  },\n  'ui:order': ['metadata', 'spec', '*'],\n};\n\nexport const JSON_SCHEMA_GROUP_TYPES: string[] = ['object', 'array'];\nexport const JSON_SCHEMA_NUMBER_TYPES: string[] = ['number', 'integer'];\n\nexport const THOUSAND = 10 ** 3;\nexport const MILLION = 10 ** 6;\nexport const BILLION = 10 ** 9;\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import { UiSchema } from '@rjsf/core';\nimport { getSchemaType, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as Immutable from 'immutable';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { THOUSAND, MILLION, BILLION } from './const';\nimport { DynamicFormSchemaError, JSONSchemaType } from './types';\n\nconst UNSUPPORTED_SCHEMA_PROPERTIES = ['allOf', 'anyOf', 'oneOf'];\n\n// Transform a path string to a JSON schema path array\nexport const stringPathToUISchemaPath = (path: string): string[] =>\n  (_.toPath(path) ?? []).map((subPath) => {\n    return /^\\d+$/.test(subPath) ? 'items' : subPath;\n  });\n\nexport const useSchemaLabel = (schema: JSONSchema7, uiSchema: UiSchema, defaultLabel?: string) => {\n  const options = getUiOptions(uiSchema ?? {});\n  const showLabel = options?.label ?? true;\n  const label = (options?.title || schema?.title) as string;\n  return [showLabel, label || defaultLabel] as [boolean, string];\n};\n\nexport const useSchemaDescription = (\n  schema: JSONSchema7,\n  uiSchema: UiSchema,\n  defaultDescription?: string,\n) =>\n  (getUiOptions(uiSchema ?? {})?.description ||\n    schema?.description ||\n    defaultDescription) as string;\n\nexport const getSchemaErrors = (schema: JSONSchema7): DynamicFormSchemaError[] => {\n  return [\n    ...(_.isEmpty(schema)\n      ? [\n          {\n            title: 'Empty Schema',\n            message: 'Schema is empty.',\n          },\n        ]\n      : []),\n    ..._.map(\n      _.intersection(_.keys(schema), UNSUPPORTED_SCHEMA_PROPERTIES),\n      (unsupportedProperty) => ({\n        title: 'Unsupported Property',\n        message: `Cannot generate form fields for JSON schema with ${unsupportedProperty} property.`,\n      }),\n    ),\n  ];\n};\n\n// Determine if a schema will produce no form fields.\nexport const hasNoFields = (jsonSchema: JSONSchema7 = {}, uiSchema: UiSchema = {}): boolean => {\n  // If schema is empty or has unsupported properties, it will not render any fields on the form\n  if (getSchemaErrors(jsonSchema).length > 0) {\n    return true;\n  }\n\n  const type = getSchemaType(jsonSchema) ?? '';\n  const noUIFieldOrWidget = !uiSchema?.['ui:field'] && !uiSchema?.['ui:widget'];\n  switch (type) {\n    case JSONSchemaType.array:\n      return noUIFieldOrWidget && hasNoFields(jsonSchema.items as JSONSchema7, uiSchema?.items);\n    case JSONSchemaType.object:\n      return (\n        noUIFieldOrWidget &&\n        _.every(jsonSchema?.properties, (property, propertyName) =>\n          hasNoFields(property as JSONSchema7, uiSchema?.[propertyName]),\n        )\n      );\n    case JSONSchemaType.boolean:\n    case JSONSchemaType.integer:\n    case JSONSchemaType.number:\n    case JSONSchemaType.string:\n      return false;\n    default:\n      return noUIFieldOrWidget;\n  }\n};\n\n// Recursively find the minimum ui:sortOrder property found within this uiSchema or it's children.\nconst getUISortOrder = (uiSchema: UiSchema, fallback: number): number => {\n  return Number(\n    uiSchema?.['ui:sortOrder'] ??\n      _.min(\n        _.keys(uiSchema).map((key) => {\n          return !key.includes(':') && _.isObject(uiSchema?.[key])\n            ? getUISortOrder(uiSchema?.[key], fallback)\n            : fallback;\n        }),\n      ) ??\n      fallback,\n  );\n};\n\n// Return an array of dependency control field names that exist within uiSchema at the specified\n// path.\nconst getControlFieldsAtPath = (uiSchema: UiSchema, path: string[]): string[] => {\n  if (!_.isObject(uiSchema)) {\n    return [];\n  }\n  const { 'ui:dependency': dependency } = uiSchema;\n  const dependencyMatchesPath =\n    dependency && _.isEqual(dependency.controlFieldPath.slice(0, -1), path ?? []);\n  return [\n    ...(dependencyMatchesPath ? [dependency.controlFieldName] : []),\n    ..._.flatMap(uiSchema, (childUISchema) => getControlFieldsAtPath(childUISchema, path)),\n  ];\n};\n\n/**\n * Give a property name a sort wieght based on whether it has ui schema, is required, or is a\n * control field for a property with a field dependency. A lower weight means higher sort order.\n * Fields are weighted according to the following tiers:\n *  Tier 1 (negative 10^9 - 10^6 magnitude):  Required fields with ui schema\n *  Tier 2 (negative 10^9 magnitude):         Required fields without ui schema\n *  Tier 3 (negative 10^6 magnitude):         Optional fields with ui schema\n *  Tier 4 (positive 10^3 maginitude):        Control fields that don't fit any above\n *  Tier 5 (Infinity):                        All other fields\n *\n * Within each of the above tiers, fields are further weighted based on field dependency and ui\n * schema defined sort order:\n *   - Fields without dependency: base weight + ui schema sort order\n *   - Control field:             base weight + ui schema sort order * 1000\n *   - Dependent field:           control field weight + ui schema sort order\n *\n * These weight numbers are arbitrary, but spaced far enough apart to prevent collisions.\n */\nconst getJSONSchemaPropertySortWeight = (\n  property: string,\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n): number => {\n  const isRequired = (jsonSchema?.required ?? []).includes(property);\n  const propertyUISchema = uiSchema?.[property];\n\n  // All control fields that exist within uiSchema and match this path\n  const controlFields = getControlFieldsAtPath(propertyUISchema, currentPath);\n\n  // Any sibling has a dependency with this as the control field.\n  const isControlField = _.some(uiSchema, ({ 'ui:dependency': siblingDependency }) =>\n    _.isEqual(siblingDependency?.controlFieldPath, [...(currentPath ?? []), property]),\n  );\n\n  // Minimum'ui:sortOrder' for this property and it's children. Use propertyNames.length as a fallback,\n  // which ensures that properties without a \"ui:sortOrder\" have highest weight.\n  const uiSortOrder = getUISortOrder(propertyUISchema, _.keys(jsonSchema?.properties).length);\n\n  // A small offset that is added to the base weight so that control fields get sorted\n  // below other fields in the same 'tier', and allows for depenendt fields to be sorted\n  // directly after their control field.\n  const controlFieldOffset = isControlField ? uiSortOrder * THOUSAND : 0;\n\n  // Total offset to be added to base tier\n  const offset = controlFieldOffset + uiSortOrder;\n\n  // If this property or it's children have a control field at the current path, it's weight is\n  // based on the highest weight control field.\n  if (controlFields?.length) {\n    return (\n      Math.max(\n        ...controlFields.map((controlField) =>\n          getJSONSchemaPropertySortWeight(controlField, jsonSchema, uiSchema, currentPath),\n        ),\n      ) + offset\n    );\n  }\n\n  // Tier 1 = -1001000000 (negative one billion one million) + offset\n  // Tier 2 = -1000000000 (negagive one billion) + offset\n  // Tier 3 = -1000000 (negative one million) + offset\n  // Tier 4 = 0 + offset\n  // Tier 5 = Infinity\n  return (\n    // Doesn't meet any sorting criteria, set to infinity\n    (!isRequired && !propertyUISchema && !controlFieldOffset ? Infinity : 0) -\n    (isRequired ? BILLION : 0) -\n    (propertyUISchema ? MILLION : 0) +\n    offset\n  );\n};\n\n// Given a JSONSchema and associated uiSchema, create the appropriate ui schema order property.\n// Orders properties according to the following rules:\n//  - required properties with an associated ui schema come first,\n//  - required properties without an associated ui schema next,\n//  - optional fields with an associated ui schema next,\n//  - field dependency properties (control then dependent)\n//  - all other properties\nexport const getJSONSchemaOrder = (\n  jsonSchema: JSONSchema7,\n  uiSchema: UiSchema,\n  currentPath?: string[],\n) => {\n  const type = getSchemaType(jsonSchema ?? {});\n  const handleArray = () => {\n    const descendantOrder = getJSONSchemaOrder(jsonSchema?.items as JSONSchema7, uiSchema?.items, [\n      ...(currentPath ?? []),\n      'items',\n    ]);\n    return !_.isEmpty(descendantOrder) ? { items: descendantOrder } : {};\n  };\n\n  const handleObject = () => {\n    const propertyNames = _.keys(jsonSchema?.properties ?? {});\n    if (_.isEmpty(propertyNames)) {\n      return {};\n    }\n\n    const uiOrder = Immutable.Set(propertyNames)\n      .sortBy((property) =>\n        getJSONSchemaPropertySortWeight(property, jsonSchema, uiSchema, currentPath ?? []),\n      )\n      .toJS();\n\n    return {\n      ...(uiOrder.length > 1 && { 'ui:order': uiOrder }),\n      ..._.reduce(\n        jsonSchema?.properties ?? {},\n        (orderAccumulator, propertySchema, propertyName) => {\n          const descendantOrder = getJSONSchemaOrder(\n            propertySchema as JSONSchema7,\n            uiSchema?.[propertyName],\n            [...(currentPath ?? []), propertyName],\n          );\n          if (_.isEmpty(descendantOrder)) {\n            return orderAccumulator;\n          }\n          return {\n            ...orderAccumulator,\n            [propertyName]: descendantOrder,\n          };\n        },\n        {},\n      ),\n    };\n  };\n\n  switch (type) {\n    case JSONSchemaType.array:\n      return handleArray();\n    case JSONSchemaType.object:\n      return handleObject();\n    default:\n      return {};\n  }\n};\n\n// Returns true if a value is not nil and is empty\nconst definedAndEmpty = (value) => !_.isNil(value) && _.isEmpty(value);\n\n// Helper function for prune\n// TODO (jon) Make this pure\nconst pruneRecursive = (current: any, sample: any): any => {\n  const valueIsEmpty = (value, key) =>\n    _.isNil(value) ||\n    _.isNaN(value) ||\n    (_.isString(value) && _.isEmpty(value)) ||\n    (_.isObject(value) && _.isEmpty(pruneRecursive(value, sample?.[key])));\n\n  // Value should be pruned if it is empty and the correspondeing sample is not explicitly\n  // defined as an empty value.\n  const shouldPrune = (value, key) => valueIsEmpty(value, key) && !definedAndEmpty(sample?.[key]);\n\n  // Prune each property of current value that meets the pruning criteria\n  _.forOwn(current, (value, key) => {\n    if (shouldPrune(value, key)) {\n      delete current[key];\n    }\n  });\n\n  // remove any leftover undefined values from the delete operation on an array\n  if (_.isArray(current)) {\n    _.pull(current, undefined);\n  }\n\n  return current;\n};\n\n// Deeply remove all empty, NaN, null, or undefined values from an object or array. If a value meets\n// the above criteria, but the corresponding sample is explicitly defined as an empty vaolue, it\n// will not be pruned.\n// Based on https://stackoverflow.com/a/26202058/8895304\nexport const prune = (obj: any, sample?: any): any => {\n  return pruneRecursive(_.cloneDeep(obj), sample);\n};\n","import * as React from 'react';\nimport { kindForReference, K8sResourceKind } from '@console/internal/module/k8s';\nimport { isValidUrl } from '@console/shared';\nimport {\n  EVENT_SOURCE_ICON,\n  CAMEL_KAMELET_ICON,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_KAFKA_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n  EVENT_SOURCE_API_SERVER_KIND,\n  EVENT_SOURCE_CONTAINER_KIND,\n  EVENT_SOURCE_PING_KIND,\n  EVENT_SINK_KAFKA_KIND,\n} from '../const';\nimport apiServerSourceImg from '../imgs/logos/apiserversource.svg';\nimport camelSourceImg from '../imgs/logos/camelsource.svg';\nimport containerSourceImg from '../imgs/logos/containersource.svg';\nimport kafkaSourceImg from '../imgs/logos/kafkasource.svg';\nimport pingSourceImg from '../imgs/logos/pingsource.svg';\nimport sinkBindingSourceImg from '../imgs/logos/sinkbindingsource.svg';\nimport { TYPE_EVENT_SINK } from '../topology/const';\nimport { eventSinkIconSVG, eventSourceIconSVG } from './icons';\n\nconst getEventSourceIconFromKind = (kind: string, nodeType?: string): React.ReactNode | string => {\n  switch (kindForReference(kind)) {\n    case EVENT_SOURCE_API_SERVER_KIND:\n      return apiServerSourceImg;\n    case EVENT_SOURCE_CAMEL_KIND:\n      return camelSourceImg;\n    case EVENT_SOURCE_CONTAINER_KIND:\n      return containerSourceImg;\n    case EVENT_SOURCE_PING_KIND:\n      return pingSourceImg;\n    case EVENT_SOURCE_KAFKA_KIND:\n      return kafkaSourceImg;\n    case EVENT_SOURCE_SINK_BINDING_KIND:\n      return sinkBindingSourceImg;\n    case EVENT_SINK_KAFKA_KIND:\n      return kafkaSourceImg;\n    default:\n      return nodeType === TYPE_EVENT_SINK ? eventSinkIconSVG : eventSourceIconSVG;\n  }\n};\n\nexport const getEventSourceIcon = (\n  kind: string,\n  obj?: K8sResourceKind,\n  nodeType?: string,\n): React.ReactNode | string => {\n  const objAnnotations = obj?.metadata?.annotations;\n  return isValidUrl(objAnnotations?.[EVENT_SOURCE_ICON])\n    ? objAnnotations?.[EVENT_SOURCE_ICON]\n    : isValidUrl(objAnnotations?.[CAMEL_KAMELET_ICON])\n    ? objAnnotations?.[CAMEL_KAMELET_ICON]\n    : getEventSourceIconFromKind(kind, nodeType);\n};\n","import { saveAs } from 'file-saver';\nimport { safeLoad } from 'js-yaml';\n\nexport const downloadYaml = (data: BlobPart) => {\n  const blob = new Blob([data], { type: 'text/yaml;charset=utf-8' });\n  let filename = 'k8s-object.yaml';\n  try {\n    const obj = safeLoad(data);\n    if (obj.kind) {\n      filename = `${obj.kind.toLowerCase()}-${obj.metadata.name}.yaml`;\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Could not parse YAML file:', e);\n  }\n  saveAs(blob, filename);\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, TextAreaField } from '@console/shared';\nimport ApplicationSelector from '@console/topology/src/components/dropdowns/ApplicationSelector';\nimport { ProjectData } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface AppSectionProps {\n  project: ProjectData;\n  noProjectsAvailable?: boolean;\n  extraMargin?: boolean;\n  subPath?: string;\n  fullWidth?: boolean;\n}\n\nconst AppSection: React.FC<AppSectionProps> = ({\n  project,\n  noProjectsAvailable,\n  extraMargin,\n  subPath,\n  fullWidth,\n}) => {\n  const [initialApplication] = useField(\n    subPath ? `${subPath}.application.initial` : 'application.initial',\n  );\n  const [formType] = useField('formType');\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~General')} extraMargin={extraMargin} fullWidth={fullWidth}>\n      {noProjectsAvailable && (\n        <>\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-name\"\n            name={subPath ? `${subPath}.project.name` : 'project.name'}\n            label={t('devconsole~Project name')}\n            helpText={t('devconsole~A unique name for the Project.')}\n            required\n          />\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-display-name\"\n            name={subPath ? `${subPath}.project.displayName` : 'project.displayName'}\n            label={t('devconsole~Project display name')}\n          />\n          <TextAreaField\n            data-test-id=\"application-form-project-description\"\n            name={subPath ? `${subPath}.project.description` : 'project.description'}\n            label={t('devconsole~Project description')}\n          />\n        </>\n      )}\n      {!initialApplication.value && (\n        <ApplicationSelector\n          namespace={project.name}\n          noProjectsAvailable={noProjectsAvailable}\n          subPath={subPath}\n        />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"application-form-app-name\"\n        name={subPath ? `${subPath}.name` : 'name'}\n        label={t('devconsole~Name')}\n        helpText={t(\n          'devconsole~A unique name given to the component that will be used to name associated resources.',\n        )}\n        isDisabled={formType.value && formType.value === 'edit'}\n        required={!(formType.value && formType.value === 'edit')}\n      />\n    </FormSection>\n  );\n};\n\nexport default AppSection;\n","import * as _ from 'lodash';\nimport { SpecCapability, StatusCapability } from './types';\n\nexport const REGEXP_K8S_RESOURCE_CAPABILITY = _.escapeRegExp(SpecCapability.k8sResourcePrefix);\nexport const REGEXP_FIELD_DEPENDENCY_CAPABILITY = _.escapeRegExp(SpecCapability.fieldDependency);\nexport const REGEXP_SELECT_CAPABILITY = _.escapeRegExp(SpecCapability.select);\n\nexport const REGEXP_K8S_RESOURCE_SUFFIX = new RegExp(\n  `^${REGEXP_K8S_RESOURCE_CAPABILITY}(?:core[:~]v1[:~])?([^?]*)[?]?(.*)$`,\n);\nexport const REGEXP_SELECT_OPTION = new RegExp(`${REGEXP_SELECT_CAPABILITY}(.*)$`);\nexport const REGEXP_FIELD_DEPENDENCY_PATH_VALUE = new RegExp(\n  `^${REGEXP_FIELD_DEPENDENCY_CAPABILITY}([^:]*):(.*)$`,\n);\n\n// Matches a path string containing an array reference. Captures\n// the segment before the array reference, and the segment after.\n// For example:\n//    path[0].element.property -> [path, element.property]\nexport const REGEXP_ARRAY_PATH = /^(.*)\\[\\d+\\]\\.?(.*)$/;\n\n// Matches a path string with multiple array references.\n// e.g.:  nested[0].array[0].property\nexport const REGEXP_NESTED_ARRAY_PATH = /^.*\\[\\d+\\]\\.?.*\\[\\d+\\]\\.?.*$/;\n\n//  Captures the root segment of a path string, and all desscendent segments as\n// a single string.\n// For example:\n//    'this.is.a.really.long.path' -> ['this', 'is.a.really.long.path'])\n//    'this'  -> ['this']\nexport const REGEXP_CAPTURE_GROUP_SUBGROUP = /^([^.]*)\\.?(.*)$/;\n\nexport const DEPRECATED_CAPABILITIES: SpecCapability[] = [\n  SpecCapability.arrayFieldGroup,\n  SpecCapability.fieldGroup,\n  SpecCapability.namespaceSelector,\n  SpecCapability.label,\n];\n\nexport const COMMON_COMPATIBLE_CAPABILITIES: SpecCapability[] = [\n  SpecCapability.advanced,\n  SpecCapability.fieldDependency,\n  SpecCapability.hidden,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.arrayFieldGroup,\n  SpecCapability.fieldGroup,\n  // END TODO\n];\n\nexport const OBJECT_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  StatusCapability.podStatuses,\n  SpecCapability.updateStrategy,\n  SpecCapability.nodeAffinity,\n  SpecCapability.podAffinity,\n  SpecCapability.podAntiAffinity,\n  SpecCapability.resourceRequirements,\n  SpecCapability.selector,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.label,\n  SpecCapability.namespaceSelector,\n  // END TODO\n];\n\nexport const ARRAY_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  SpecCapability.endpointList,\n  StatusCapability.conditions,\n];\n\nexport const PRIMITIVE_COMPATIBLE_CAPABILITIES: (SpecCapability | StatusCapability)[] = [\n  StatusCapability.k8sPhase,\n  StatusCapability.k8sPhaseReason,\n  SpecCapability.k8sResourcePrefix,\n  SpecCapability.imagePullPolicy,\n  SpecCapability.podCount,\n  SpecCapability.select,\n  StatusCapability.w3Link,\n  SpecCapability.booleanSwitch,\n  SpecCapability.checkbox,\n  SpecCapability.password,\n  SpecCapability.text,\n  StatusCapability.text,\n  SpecCapability.number,\n  // TODO remove when deprecated descriptors are no longer supported\n  SpecCapability.label,\n  // END TODO\n];\n\nexport const CAPABILITY_SORT_ORDER: (SpecCapability | StatusCapability)[] = [\n  // Supported in details view and has a widget\n  SpecCapability.hidden,\n  SpecCapability.endpointList,\n  StatusCapability.conditions,\n  SpecCapability.resourceRequirements,\n  SpecCapability.updateStrategy,\n  StatusCapability.podStatuses,\n  SpecCapability.selector,\n  SpecCapability.k8sResourcePrefix,\n  SpecCapability.podCount,\n  SpecCapability.password,\n  StatusCapability.k8sPhaseReason,\n  SpecCapability.booleanSwitch,\n  SpecCapability.checkbox,\n  StatusCapability.w3Link,\n\n  // Supported in details view with no widget\n  SpecCapability.select,\n  SpecCapability.imagePullPolicy,\n  StatusCapability.k8sPhase,\n  SpecCapability.text,\n  StatusCapability.text,\n  SpecCapability.number,\n\n  // Unsupported on details view\n  SpecCapability.podAntiAffinity,\n  SpecCapability.podAffinity,\n  SpecCapability.nodeAffinity,\n\n  // Always last\n  SpecCapability.advanced,\n  SpecCapability.fieldDependency,\n  ...DEPRECATED_CAPABILITIES,\n];\n","export enum JSONSchemaType {\n  string = 'string',\n  number = 'number',\n  integer = 'integer',\n  boolean = 'boolean',\n  null = 'null',\n  array = 'array',\n  object = 'object',\n}\n\nexport type DynamicFormFieldOptionsList = {\n  label: string;\n  value: string;\n}[];\n\nexport type DynamicFormFieldDependency = {\n  controlFieldPath: string;\n  controlFieldValue: string;\n  controlFieldName: string;\n};\n\nexport type UiSchemaOptionsWithDependency = {\n  dependency?: DynamicFormFieldDependency;\n};\n\nexport type DynamicFormSchemaError = {\n  title: string;\n  message: string;\n};\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  InputField,\n  RedExclamationCircleIcon,\n  getFieldId,\n  useFormikValidationFix,\n} from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../../const';\nimport { sanitizeApplicationValue } from '../../utils/application-utils';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface ApplicationSelectorProps {\n  namespace?: string;\n  noProjectsAvailable?: boolean;\n  subPath?: string;\n}\n\nconst ApplicationSelector: React.FC<ApplicationSelectorProps> = ({\n  namespace,\n  noProjectsAvailable,\n  subPath,\n}) => {\n  const { t } = useTranslation();\n  const [applicationsAvailable, setApplicationsAvailable] = React.useState(true);\n  const availableApplications = React.useRef<string[]>([]);\n  const projectsAvailable = !noProjectsAvailable;\n\n  const [selectedKey, { touched, error }] = useField(\n    subPath ? `${subPath}.application.selectedKey` : 'application.selectedKey',\n  );\n  const [nameField] = useField(subPath ? `${subPath}.application.name` : 'application.name');\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [applicationExists, setApplicationExists] = React.useState<boolean>(false);\n  const applicationNameInputRef = React.useRef<HTMLInputElement>();\n  const fieldId = getFieldId('application-name', 'dropdown');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n\n  useFormikValidationFix(selectedKey.value);\n\n  const onDropdownChange = (key: string, application: string) => {\n    setFieldValue(selectedKey.name, key);\n    setFieldTouched(selectedKey.name, true);\n    setFieldValue(nameField.name, sanitizeApplicationValue(application, key));\n    setFieldTouched(nameField.name, true);\n    setApplicationExists(false);\n  };\n\n  const handleOnLoad = (applicationList: { [key: string]: string }) => {\n    const noApplicationsAvailable = _.isEmpty(applicationList);\n    setApplicationsAvailable(!noApplicationsAvailable);\n    availableApplications.current = _.keys(applicationList);\n    if (noApplicationsAvailable) {\n      setFieldValue(selectedKey.name, '');\n      setFieldValue(\n        nameField.name,\n        (selectedKey.value !== UNASSIGNED_KEY && nameField.value) ?? '',\n      );\n    }\n  };\n\n  const actionItems = [\n    {\n      actionTitle: t('topology~Create application'),\n      actionKey: CREATE_APPLICATION_KEY,\n    },\n    {\n      actionTitle: t('topology~No application group'),\n      actionKey: UNASSIGNED_KEY,\n    },\n  ];\n\n  const handleAppChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApplicationExists(availableApplications.current.includes(event.target.value.trim()));\n  };\n\n  const handleAppBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const trimmedApplicationName = event.target.value.trim();\n    setFieldValue(nameField.name, trimmedApplicationName);\n  };\n\n  const label = t('topology~Application');\n  const inputHelpText = applicationExists\n    ? t('topology~Warning: the application grouping already exists.')\n    : t('topology~A unique name given to the application grouping to label your resources.');\n\n  React.useEffect(() => {\n    if (selectedKey.value === CREATE_APPLICATION_KEY) {\n      applicationNameInputRef.current?.focus();\n    }\n  }, [selectedKey.value]);\n\n  return (\n    <>\n      {projectsAvailable && applicationsAvailable && (\n        <FormGroup fieldId={fieldId} label={label}>\n          <ApplicationDropdown\n            id={fieldId}\n            ariaLabel={label}\n            dropDownClassName=\"dropdown--full-width\"\n            menuClassName=\"dropdown-menu--text-wrap\"\n            namespace={namespace}\n            actionItems={actionItems}\n            autoSelect\n            selectedKey={selectedKey.value}\n            onChange={onDropdownChange}\n            onLoad={handleOnLoad}\n          />\n\n          <FormHelperText>\n            <HelperText>\n              {!isValid ? (\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {errorMessage}\n                </HelperTextItem>\n              ) : (\n                <HelperTextItem>\n                  {t('topology~Select an Application to group this component.')}\n                </HelperTextItem>\n              )}\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n      {(!applicationsAvailable || selectedKey.value === CREATE_APPLICATION_KEY) && (\n        <InputField\n          type={TextInputTypes.text}\n          required={selectedKey.value === CREATE_APPLICATION_KEY}\n          name={nameField.name}\n          ref={applicationNameInputRef}\n          label={t('topology~Application name')}\n          data-test-id=\"application-form-app-input\"\n          helpText={inputHelpText}\n          validated={applicationExists ? ValidatedOptions.warning : ValidatedOptions.default}\n          onChange={handleAppChange}\n          onBlur={handleAppBlur}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ApplicationSelector;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise } from '@console/internal/components/utils';\nimport { k8sUpdate, referenceFor, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\n\nexport const ResourceRequirements: React.FC<ResourceRequirementsProps> = (props) => {\n  const { t } = useTranslation();\n  const { cpu, memory, storage, onChangeCPU, onChangeMemory, onChangeStorage, path = '' } = props;\n\n  return (\n    <div className=\"row co-m-form-row\">\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.cpu`}\n        >\n          {t('olm~CPU cores')}\n        </label>\n        <input\n          value={cpu}\n          onChange={(e) => onChangeCPU(e.target.value)}\n          id={`${path}.cpu`}\n          name=\"cpu\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"500m\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.memory`}\n        >\n          {t('olm~Memory')}\n        </label>\n        <input\n          value={memory}\n          onChange={(e) => onChangeMemory(e.target.value)}\n          id={`${path}.memory`}\n          name=\"memory\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n      <div className=\"col-xs-4\">\n        <label\n          style={{ fontWeight: 300 }}\n          className=\"text-muted text-uppercase\"\n          htmlFor={`${path}.ephemeral-storage`}\n        >\n          {t('olm~Storage')}\n        </label>\n        <input\n          value={storage}\n          onChange={(e) => onChangeStorage(e.target.value)}\n          id={`${path}.ephemeral-storage`}\n          name=\"ephemeral-storage\"\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          placeholder=\"50Mi\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const ResourceRequirementsModal = withHandlePromise(\n  (props: ResourceRequirementsModalProps) => {\n    const { t } = useTranslation();\n    const { obj, path, type, model, close, handlePromise } = props;\n    const [cpu, setCPU] = React.useState<string>(_.get(obj.spec, `${path}.${type}.cpu`, ''));\n    const [memory, setMemory] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.memory`, ''),\n    );\n    const [storage, setStorage] = React.useState<string>(\n      _.get(obj.spec, `${path}.${type}.ephemeral-storage`, ''),\n    );\n\n    const submit = (e) => {\n      e.preventDefault();\n      const newObj = _.set(_.cloneDeep(obj), `spec.${path}.${type}`, {\n        ...(cpu && { cpu }),\n        ...(memory && { memory }),\n        ...(storage && { 'ephemeral-storage': storage }),\n      });\n      return handlePromise(k8sUpdate(model, newObj), close);\n    };\n\n    return (\n      <form onSubmit={(e) => submit(e)} className=\"modal-content\">\n        <ModalTitle>{props.title}</ModalTitle>\n        <ModalBody>\n          <div className=\"row co-m-form-row\">\n            <div className=\"col-sm-12\">{props.description}</div>\n          </div>\n          <ResourceRequirements\n            cpu={cpu}\n            memory={memory}\n            storage={storage}\n            onChangeCPU={setCPU}\n            onChangeMemory={setMemory}\n            onChangeStorage={setStorage}\n            path={path}\n          />\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={props.errorMessage}\n          inProgress={props.inProgress}\n          submitText={t('public~Save')}\n          cancel={props.cancel}\n        />\n      </form>\n    );\n  },\n);\n\nconst stateToProps = ({ k8s }: RootState, { obj }) => ({\n  model: k8s.getIn(['RESOURCES', 'models', referenceFor(obj)]) as K8sKind,\n});\n\nexport const ResourceRequirementsModalLink = connect(stateToProps)(\n  (props: ResourceRequirementsModalLinkProps) => {\n    const { obj, type, path, model } = props;\n    const { t } = useTranslation();\n    const none = t('public~None');\n    const { cpu, memory, 'ephemeral-storage': storage } = _.get(obj.spec, `${path}.${type}`, {});\n\n    const onClick = () => {\n      const modal = createModalLauncher(ResourceRequirementsModal);\n      const description = t('olm~Define the resource {{type}} for this {{kind}} instance.', {\n        type,\n        kind: obj.kind,\n      });\n      const title = t('olm~{{kind}} Resource {{type}}', {\n        kind: obj.kind,\n        type: _.capitalize(type),\n      });\n\n      return modal({ title, description, obj, model, type, path });\n    };\n\n    return (\n      <Button\n        type=\"button\"\n        isInline\n        data-test-id=\"configure-modal-btn\"\n        onClick={onClick}\n        variant=\"link\"\n      >\n        {t('olm~CPU: {{cpu}}, Memory: {{memory}}, Storage: {{storage}}', {\n          cpu: cpu || none,\n          memory: memory || none,\n          storage: storage || none,\n        })}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  },\n);\n\nexport type ResourceRequirementsModalProps = {\n  title: string;\n  description: string;\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n  handlePromise: <T>(\n    promise: Promise<T>,\n    onFulfill?: (res) => void,\n    onError?: (errorMsg: string) => void,\n  ) => void;\n  inProgress: boolean;\n  errorMessage: string;\n  cancel?: () => void;\n  close?: () => void;\n};\n\nexport type ResourceRequirementsProps = {\n  cpu: string;\n  memory: string;\n  storage: string;\n  onChangeCPU: (value: string) => void;\n  onChangeMemory: (value: string) => void;\n  onChangeStorage: (value: string) => void;\n  path?: string;\n};\n\nexport type ResourceRequirementsModalLinkProps = {\n  obj: K8sResourceKind;\n  model: K8sKind;\n  type: 'requests' | 'limits';\n  path: string;\n};\n\nResourceRequirements.displayName = 'ResourceRequirements';\nResourceRequirementsModalLink.displayName = 'ResourceRequirementsModalLink';\nResourceRequirementsModal.displayName = 'ResourceRequirementsModal';\n","import * as React from 'react';\nimport uniqBy from 'lodash-es/uniqBy';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { CAMEL_K_OPERATOR_NS, GLOBAL_OPERATOR_NS } from '../const';\nimport { CamelKameletModel } from '../models';\n\nexport const useKameletsData = (namespace: string): [K8sResourceKind[], boolean, any] => {\n  const [kamelets, setKamelets] = React.useState<K8sResourceKind[]>([]);\n  const [kameletsLoaded, setKameletsLoaded] = React.useState(false);\n  const [kameletsLoadError, setKameletsLoadError] = React.useState(null);\n\n  const watchedResources = React.useMemo(\n    () => ({\n      kamelets: {\n        isList: true,\n        kind: referenceForModel(CamelKameletModel),\n        namespace,\n        optional: true,\n      },\n      kameletsGlobalNs: {\n        isList: true,\n        kind: referenceForModel(CamelKameletModel),\n        namespace: GLOBAL_OPERATOR_NS,\n        optional: true,\n      },\n      kameletsGlobalNs2: {\n        isList: true,\n        kind: referenceForModel(CamelKameletModel),\n        namespace: CAMEL_K_OPERATOR_NS,\n        optional: true,\n      },\n    }),\n    [namespace],\n  );\n\n  const extraResources = useK8sWatchResources<{\n    [key: string]: K8sResourceKind[];\n  }>(watchedResources);\n\n  React.useEffect(() => {\n    const resDataLoaded = Object.keys(extraResources).some((key) => extraResources[key].loaded);\n    const resDataloadError = Object.keys(extraResources).every(\n      (key) => extraResources[key].loadError,\n    );\n    const { kamelets: kameletsData, kameletsGlobalNs, kameletsGlobalNs2 } = extraResources;\n    if (resDataLoaded) {\n      const allKamelets = uniqBy(\n        [...kameletsData.data, ...kameletsGlobalNs.data, ...kameletsGlobalNs2.data],\n        (kamelet) => kamelet?.metadata?.uid,\n      );\n      setKamelets(allKamelets);\n      setKameletsLoaded(kameletsData.loaded || kameletsGlobalNs.loaded || kameletsGlobalNs2.loaded);\n    } else if (resDataloadError) {\n      setKameletsLoadError(\n        kameletsGlobalNs.loadError || kameletsGlobalNs.loadError || kameletsGlobalNs2.loadError,\n      );\n    }\n  }, [extraResources]);\n\n  return [kamelets, kameletsLoaded, kameletsLoadError];\n};\n","import * as React from 'react';\nimport { AccordionContent, AccordionItem, AccordionToggle } from '@patternfly/react-core';\nimport { FieldProps, UiSchema } from '@rjsf/core';\nimport SchemaField, { SchemaFieldProps } from '@rjsf/core/dist/cjs/components/fields/SchemaField';\nimport { retrieveSchema, getUiOptions } from '@rjsf/core/dist/cjs/utils';\nimport * as classnames from 'classnames';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ConfigureUpdateStrategy } from '@console/internal/components/modals/configure-update-strategy-modal';\nimport { LinkifyExternal, SelectorInput, Dropdown } from '@console/internal/components/utils';\nimport {\n  NodeAffinity,\n  PodAffinity,\n} from '@console/operator-lifecycle-manager/src/components/descriptors/spec/affinity';\nimport { MatchExpressions } from '@console/operator-lifecycle-manager/src/components/descriptors/spec/match-expressions';\nimport { ResourceRequirements } from '@console/operator-lifecycle-manager/src/components/descriptors/spec/resource-requirements';\nimport { hasNoFields, useSchemaDescription, useSchemaLabel } from './utils';\n\nconst Description = ({ id, description }) =>\n  description ? (\n    <span id={id} className=\"help-block\">\n      <LinkifyExternal>\n        <div className=\"co-pre-line\">{description}</div>\n      </LinkifyExternal>\n    </span>\n  ) : null;\n\nexport const DescriptionField: React.FC<FieldProps> = ({ id, description }) => (\n  <Description id={id} description={description} />\n);\n\nexport const FormField: React.FC<FormFieldProps> = ({\n  children,\n  id,\n  defaultLabel,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const [showLabel, label] = useSchemaLabel(\n    schema,\n    uiSchema,\n    defaultLabel || t('console-shared~Value'),\n  );\n  return (\n    <div id={`${id}_field`} className=\"form-group\">\n      {showLabel && label && (\n        <label className={classnames('form-label', { 'co-required': required })} htmlFor={id}>\n          {label}\n        </label>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport const FieldSet: React.FC<FieldSetProps> = ({\n  children,\n  defaultLabel,\n  idSchema,\n  required = false,\n  schema,\n  uiSchema,\n}) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [showLabel, label] = useSchemaLabel(schema, uiSchema, defaultLabel);\n  const description = useSchemaDescription(schema, uiSchema);\n  const onToggle = (e) => {\n    e.preventDefault();\n    setExpanded((current) => !current);\n  };\n  return showLabel && label ? (\n    <div id={`${idSchema.$id}_field-group`} className=\"form-group co-dynamic-form__field-group\">\n      <AccordionItem>\n        <AccordionToggle\n          id={`${idSchema.$id}_accordion-toggle`}\n          onClick={onToggle}\n          isExpanded={expanded}\n        >\n          <label\n            className={classnames({ 'co-required': required })}\n            htmlFor={`${idSchema.$id}_accordion-content`}\n          >\n            {label}\n          </label>\n        </AccordionToggle>\n        {description && (\n          <Description id={`${idSchema.$id}_description`} description={description} />\n        )}\n        <AccordionContent id={`${idSchema.$id}_accordion-content`} isHidden={!expanded}>\n          {children}\n        </AccordionContent>\n      </AccordionItem>\n    </div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport const ResourceRequirementsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Resource requirements')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <dl id={idSchema.$id}>\n        <dt>{t('console-shared~Limits')}</dt>\n        <dd>\n          <ResourceRequirements\n            cpu={formData?.limits?.cpu || ''}\n            memory={formData?.limits?.memory || ''}\n            storage={formData?.limits?.['ephemeral-storage'] || ''}\n            onChangeCPU={(cpu) => onChange(_.set(_.cloneDeep(formData), 'limits.cpu', cpu))}\n            onChangeMemory={(mem) => onChange(_.set(_.cloneDeep(formData), 'limits.memory', mem))}\n            onChangeStorage={(sto) =>\n              onChange(_.set(_.cloneDeep(formData), 'limits.ephemeral-storage', sto))\n            }\n            path={`${idSchema.$id}.limits`}\n          />\n        </dd>\n        <dt>{t('console-shared~Requests')}</dt>\n        <dd>\n          <ResourceRequirements\n            cpu={formData?.requests?.cpu || ''}\n            memory={formData?.requests?.memory || ''}\n            storage={formData?.requests?.['ephemeral-storage'] || ''}\n            onChangeCPU={(cpu) => onChange(_.set(_.cloneDeep(formData), 'requests.cpu', cpu))}\n            onChangeMemory={(mem) => onChange(_.set(_.cloneDeep(formData), 'requests.memory', mem))}\n            onChangeStorage={(sto) =>\n              onChange(_.set(_.cloneDeep(formData), 'requests.ephemeral-storage', sto))\n            }\n            path={`${idSchema.$id}.requests`}\n          />\n        </dd>\n      </dl>\n    </FieldSet>\n  );\n};\n\nexport const UpdateStrategyField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const description = useSchemaDescription(\n    schema,\n    uiSchema,\n    t('public~How should the pods be replaced when a new revision is created?'),\n  );\n  return (\n    <FormField\n      defaultLabel={name || t('console-shared~Update strategy')}\n      id={idSchema.$id}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <Description description={description} id={idSchema.$id} />\n      <ConfigureUpdateStrategy\n        showDescription={false}\n        strategyType={formData?.type || 'RollingUpdate'}\n        maxUnavailable={formData?.rollingUpdate?.maxUnavailable || ''}\n        maxSurge={formData?.rollingUpdate?.maxSurge || ''}\n        onChangeStrategyType={(type) => onChange(_.set(_.cloneDeep(formData), 'type', type))}\n        onChangeMaxUnavailable={(maxUnavailable) =>\n          onChange(_.set(_.cloneDeep(formData), 'rollingUpdate.maxUnavailable', maxUnavailable))\n        }\n        onChangeMaxSurge={(maxSurge) =>\n          onChange(_.set(_.cloneDeep(formData), 'rollingUpdate.maxSurge', maxSurge))\n        }\n        replicas={1}\n        uid={idSchema.$id}\n      />\n    </FormField>\n  );\n};\n\nexport const NodeAffinityField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Node affinity')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <NodeAffinity\n        affinity={formData}\n        onChange={(affinity) => onChange(affinity)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\nexport const PodAffinityField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Pod affinity')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <PodAffinity\n        affinity={formData}\n        onChange={(affinity) => onChange(affinity)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\n\nexport const MatchExpressionsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <FieldSet\n      defaultLabel={name || t('console-shared~Expressions')}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <MatchExpressions\n        matchExpressions={formData}\n        onChange={(v) => onChange(v)}\n        uid={idSchema.$id}\n      />\n    </FieldSet>\n  );\n};\n\nexport const LabelsField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  required,\n  schema,\n  uiSchema,\n}) => (\n  <FormField\n    defaultLabel={name}\n    id={idSchema.$id}\n    required={required}\n    schema={schema}\n    uiSchema={uiSchema}\n  >\n    <SelectorInput\n      inputProps={{ id: idSchema.$id }}\n      onChange={(newValue) => onChange(SelectorInput.objectify(newValue))}\n      tags={SelectorInput.arrayify(formData)}\n    />\n  </FormField>\n);\n\nexport const DropdownField: React.FC<FieldProps> = ({\n  formData,\n  idSchema,\n  name,\n  onChange,\n  schema,\n  uiSchema = {},\n}) => {\n  const { t } = useTranslation();\n  const { items, title } = getUiOptions(uiSchema) as { items?: object; title?: string };\n  return (\n    <Dropdown\n      id={idSchema.$id}\n      key={idSchema.$id}\n      title={t('console-shared~Select {{title}}', { title: title || schema?.title || name })}\n      selectedKey={formData}\n      items={items ?? {}}\n      onChange={(val) => onChange(val)}\n    />\n  );\n};\n\nexport const CustomSchemaField: React.FC<SchemaFieldProps> = (props) => {\n  // If the provided schema will not generate any form field elements, return null.\n  // To check that, it's required to resolving definition references ($ref) in the\n  // JSON schema as it is implemented in the origin SchemaField:\n  // https://github.com/rjsf-team/react-jsonschema-form/blob/v2.5.1/packages/core/src/components/fields/SchemaField.js#L226-L244\n  const {\n    schema: fieldSchema,\n    registry: { rootSchema },\n    formData,\n    uiSchema,\n  } = props;\n\n  let resolvedSchema = fieldSchema;\n  try {\n    resolvedSchema = retrieveSchema(fieldSchema, rootSchema, formData);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('dynamic-form CustomSchemaField retrieveSchema error:', error);\n  }\n\n  if (hasNoFields(resolvedSchema, uiSchema)) {\n    return null;\n  }\n\n  return <SchemaField {...props} />;\n};\n\nexport const NullField = () => null;\n\nexport default {\n  DescriptionField,\n  DropdownField,\n  LabelsField,\n  MatchExpressionsField,\n  NodeAffinityField,\n  NullField,\n  PodAffinityField,\n  ResourceRequirementsField,\n  SchemaField: CustomSchemaField,\n  UpdateStrategyField,\n};\n\ntype FormFieldProps = {\n  id: string;\n  defaultLabel?: string;\n  required: boolean;\n  schema: JSONSchema7;\n  uiSchema: UiSchema;\n};\n\ntype FieldSetProps = Pick<FieldProps, 'idSchema' | 'required' | 'schema' | 'uiSchema'> & {\n  defaultLabel?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { KnEventCatalogMetaData } from '../components/add/import-types';\nimport { CAMEL_K_OPERATOR_NS, GLOBAL_OPERATOR_NS } from '../const';\nimport { CamelKameletBindingModel, CamelKameletModel, KafkaSinkModel } from '../models';\nimport { getEventSinkMetadata } from '../utils/create-eventsink-utils';\nimport { getKameletMetadata } from '../utils/create-eventsources-utils';\n\nexport const useEventSinkStatus = (\n  namespace: string,\n  sinkKindProp?: string,\n  kameletName?: string,\n): {\n  isValidSink: boolean;\n  createSinkAccessLoading: boolean;\n  createSinkAccess: boolean;\n  loaded: boolean;\n  normalizedSink: KnEventCatalogMetaData;\n  kamelet: K8sResourceKind;\n} => {\n  const { t } = useTranslation();\n  const [kameletNs, kameletNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    namespace,\n  );\n  const [kameletGlobalNs, kameletGlobalNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    GLOBAL_OPERATOR_NS,\n  );\n  const [kameletGlobalNs2, kameletGlobalNs2Loaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    CAMEL_K_OPERATOR_NS,\n  );\n\n  const kameletLoaded = kameletNsLoaded && kameletGlobalNsLoaded && kameletGlobalNs2Loaded;\n  const kamelet =\n    kameletName && kameletLoaded && (kameletNs || kameletGlobalNs || kameletGlobalNs2);\n\n  const isKameletSink = kameletName && sinkKindProp === CamelKameletBindingModel.kind;\n  const isSinkKindPresent = sinkKindProp || isKameletSink;\n\n  const eventSinkModel =\n    sinkKindProp && !isKameletSink && KafkaSinkModel.kind === sinkKindProp && KafkaSinkModel;\n  const sinkModel = isKameletSink ? CamelKameletBindingModel : eventSinkModel;\n\n  const [createSinkAccess, createSinkAccessLoading] = useAccessReview({\n    group: sinkModel?.apiGroup,\n    resource: sinkModel?.plural,\n    verb: 'create',\n    namespace,\n  });\n\n  const sourceStatus = React.useMemo(() => {\n    if (!isSinkKindPresent) {\n      return {\n        isValidSink: false,\n        loaded: true,\n        normalizedSink: {} as KnEventCatalogMetaData,\n      };\n    }\n    return {\n      isValidSink: !!eventSinkModel || (kameletLoaded && kamelet && isKameletSink),\n      loaded: isKameletSink ? kameletLoaded : !!eventSinkModel,\n      normalizedSink: isKameletSink\n        ? getKameletMetadata(kamelet)\n        : getEventSinkMetadata(eventSinkModel, t),\n    };\n  }, [isSinkKindPresent, eventSinkModel, kameletLoaded, kamelet, isKameletSink, t]);\n\n  return {\n    ...sourceStatus,\n    createSinkAccessLoading,\n    createSinkAccess,\n    kamelet,\n  };\n};\n","import * as React from 'react';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { getEventSourceModelsWithAccess } from '../utils/create-eventsources-utils';\nimport { useEventSourceModels } from '../utils/fetch-dynamic-eventsources-utils';\n\nexport const useEventSourceModelsWithAccess = (\n  namespace: string,\n): { loaded: boolean; eventSourceModelsList: K8sKind[] } => {\n  const { loaded, eventSourceModels } = useEventSourceModels();\n  const [accessModelData, setAccessModelData] = React.useState({\n    loaded: false,\n    eventSourceModelsList: [],\n  });\n\n  React.useEffect(() => {\n    if (loaded) {\n      const eventSourceModelsWithAccess = getEventSourceModelsWithAccess(\n        namespace,\n        eventSourceModels,\n      );\n      Promise.all([...eventSourceModelsWithAccess])\n        .then((results) => {\n          const modelsWithAccess = results?.reduce(\n            (acc, model) => [...acc, ...(model ? [model] : [])],\n            [],\n          );\n          setAccessModelData({ loaded: true, eventSourceModelsList: modelsWithAccess });\n        })\n        // eslint-disable-next-line no-console\n        .catch((err) => console.warn('Failed to get event source models', err.message));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaded]);\n  return accessModelData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview2 } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { KnEventCatalogMetaData } from '../components/add/import-types';\nimport { CAMEL_K_OPERATOR_NS, GLOBAL_OPERATOR_NS } from '../const';\nimport { CamelKameletBindingModel, CamelKameletModel } from '../models';\nimport { getEventSourceMetadata, getKameletMetadata } from '../utils/create-eventsources-utils';\nimport { useEventSourceModels } from '../utils/fetch-dynamic-eventsources-utils';\n\nexport const useEventSourceStatus = (\n  namespace: string,\n  sourceKindProp?: string,\n  kameletName?: string,\n): {\n  isValidSource: boolean;\n  createSourceAccessLoading: boolean;\n  createSourceAccess: boolean;\n  loaded: boolean;\n  normalizedSource: KnEventCatalogMetaData;\n  kamelet: K8sResourceKind;\n} => {\n  const { t } = useTranslation();\n  const { eventSourceModels, loaded: eventSourceModelsLoaded } = useEventSourceModels();\n  const [kameletNs, kameletNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    namespace,\n  );\n  const [kameletGlobalNs, kameletGlobalNsLoaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    GLOBAL_OPERATOR_NS,\n  );\n  const [kameletGlobalNs2, kameletGlobalNs2Loaded] = useK8sGet<K8sResourceKind>(\n    CamelKameletModel,\n    kameletName,\n    CAMEL_K_OPERATOR_NS,\n  );\n\n  const kameletLoaded = kameletNsLoaded && kameletGlobalNsLoaded && kameletGlobalNs2Loaded;\n  const kamelet = kameletLoaded && (kameletNs || kameletGlobalNs || kameletGlobalNs2);\n\n  const isKameletSource = kameletName && sourceKindProp === CamelKameletBindingModel.kind;\n  const isSourceKindPresent = sourceKindProp || isKameletSource;\n\n  const eventSourceModel =\n    sourceKindProp &&\n    !isKameletSource &&\n    eventSourceModels?.find((model: K8sKind) => model.kind === sourceKindProp);\n  const sourceModel = isKameletSource ? CamelKameletBindingModel : eventSourceModel;\n\n  const [createSourceAccess, createSourceAccessLoading] = useAccessReview2({\n    group: sourceModel?.apiGroup,\n    resource: sourceModel?.plural,\n    verb: 'create',\n    namespace,\n  });\n\n  const sourceStatus = React.useMemo(() => {\n    if (!isSourceKindPresent) {\n      return {\n        isValidSource: false,\n        loaded: true,\n        normalizedSource: {} as KnEventCatalogMetaData,\n      };\n    }\n    return {\n      isValidSource: !!eventSourceModel || (kameletLoaded && kamelet && isKameletSource),\n      loaded: isKameletSource ? kameletLoaded : eventSourceModelsLoaded,\n      normalizedSource: isKameletSource\n        ? getKameletMetadata(kamelet)\n        : getEventSourceMetadata(eventSourceModel, t),\n    };\n  }, [\n    isSourceKindPresent,\n    eventSourceModel,\n    kameletLoaded,\n    kamelet,\n    isKameletSource,\n    eventSourceModelsLoaded,\n    t,\n  ]);\n\n  return {\n    ...sourceStatus,\n    createSourceAccessLoading,\n    createSourceAccess,\n    kamelet,\n  };\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { SelectInputOption } from '@console/shared';\nimport { getBootstrapServers } from '../utils/create-eventsources-utils';\nimport { kafkaBootStrapServerResourcesWatcher } from '../utils/get-knative-resources';\n\nexport const useBootstrapServers = (namespace: string): [SelectInputOption[], string] => {\n  const { t } = useTranslation();\n  const memoResources = React.useMemo(() => kafkaBootStrapServerResourcesWatcher(namespace), [\n    namespace,\n  ]);\n  const { kafkas, kafkaconnections } = useK8sWatchResources<{\n    [key: string]: K8sResourceKind[];\n  }>(memoResources);\n\n  return React.useMemo(() => {\n    let bootstrapServersOptions: SelectInputOption[] = [];\n    let placeholder: string = '';\n    const isKafkasLoaded =\n      (kafkas.loaded && !kafkas.loadError) ||\n      (kafkaconnections.loaded && !kafkaconnections.loadError);\n    const isKafkasLoadError = !!(kafkas.loadError && kafkaconnections.loadError);\n    if (isKafkasLoaded) {\n      const kafkasData = [\n        ...(kafkas.data ? kafkas.data : []),\n        ...(kafkaconnections.data ? kafkaconnections.data : []),\n      ];\n      bootstrapServersOptions = !_.isEmpty(kafkasData)\n        ? _.map(getBootstrapServers(kafkasData), (bs) => ({\n            value: bs,\n            disabled: false,\n          }))\n        : [\n            {\n              value: t('knative-plugin~No bootstrap servers found'),\n              disabled: true,\n            },\n          ];\n      placeholder = t('knative-plugin~Add bootstrap servers');\n    } else if (isKafkasLoadError) {\n      placeholder = t(\n        'knative-plugin~{{loadErrorMessage}}. Try adding bootstrap servers manually.',\n        {\n          loadErrorMessage: `${kafkas.loadError.message}, ${kafkaconnections.loadError.message}`,\n        },\n      );\n    } else {\n      bootstrapServersOptions = [\n        { value: t('knative-plugin~Loading bootstrap servers...'), disabled: true },\n      ];\n      placeholder = '...';\n    }\n\n    return [bootstrapServersOptions, placeholder];\n  }, [\n    kafkas.loaded,\n    kafkas.loadError,\n    kafkas.data,\n    kafkaconnections.loaded,\n    kafkaconnections.loadError,\n    kafkaconnections.data,\n    t,\n  ]);\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '@console/internal/components/utils';\nimport { MatchExpression, Operator } from '@console/internal/module/k8s';\n\nconst UNARY_OPERATORS = [Operator.Exists, Operator.DoesNotExist];\nconst ALL_OPERATORS: MatchExpression['operator'][] = [\n  Operator.DoesNotExist,\n  Operator.Equals,\n  Operator.Exists,\n  Operator.In,\n  Operator.NotEqual,\n  Operator.NotIn,\n];\n\nconst MatchExpression: React.FC<MatchExpressionProps> = ({\n  expression,\n  onChange = () => {},\n  allowedOperators = ALL_OPERATORS,\n  onClickRemove = () => {},\n}) => {\n  const { key, operator, values } = expression;\n  const { t } = useTranslation();\n  return (\n    <div className=\"row key-operator-value__row\">\n      <div className=\"col-md-4 col-xs-5 key-operator-value__name-field\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Key')}\n        </div>\n        <input\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          value={expression.key ?? ''}\n          onChange={(e) => onChange({ ...expression, key: e.target.value })}\n        />\n      </div>\n      <div className=\"col-md-3 col-xs-5 key-operator-value__operator-field\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Operator')}\n        </div>\n        <Dropdown\n          dropDownClassName=\"dropdown--full-width\"\n          items={allowedOperators.reduce((acc, o) => ({ ...acc, [o]: o }), {})}\n          onChange={(newOperator: Operator) => onChange({ key, operator: newOperator, values: [] })}\n          selectedKey={expression.operator}\n          title={expression.operator}\n        />\n      </div>\n      <div className=\"col-md-3 col-xs-5 key-operator-value__value-field key-operator-value__value-field--stacked\">\n        <div className=\"key-operator-value__heading hidden-md hidden-lg text-secondary text-uppercase\">\n          {t('olm~Values')}\n        </div>\n        <input\n          className=\"pf-v5-c-form-control\"\n          type=\"text\"\n          value={values?.join(',') ?? ''}\n          onChange={(e) =>\n            onChange({\n              key,\n              operator,\n              values: e.target?.value?.split(',')?.map((v) => v.trim()) ?? [],\n            })\n          }\n          disabled={UNARY_OPERATORS.includes(operator as Operator)}\n        />\n      </div>\n      <div className=\"col-xs-1 key-operator-value__action key-operator-value__action--stacked\">\n        <div className=\"key-operator-value__heading key-operator-value__heading-button hidden-md hidden-lg\" />\n        <Button\n          type=\"button\"\n          onClick={onClickRemove}\n          aria-label=\"Delete\"\n          className=\"key-operator-value__delete-button\"\n          variant=\"plain\"\n        >\n          <MinusCircleIcon />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport const MatchExpressions: React.FC<MatchExpressionsProps> = ({\n  matchExpressions = [],\n  onChange = () => {}, // Default to noop\n  allowedOperators = ALL_OPERATORS,\n  uid = '',\n}) => {\n  const { t } = useTranslation();\n\n  const updateExpression = (index: number, newExpression: MatchExpression): void =>\n    onChange(matchExpressions.map((exp, i) => (i === index ? newExpression : exp)));\n\n  const removeExpression = (index: number): void =>\n    onChange(matchExpressions.filter((_exp, i) => i !== index));\n\n  const addExpression = (): void =>\n    onChange([...matchExpressions, { key: '', operator: Operator.Exists, values: [] }]);\n\n  return (\n    <>\n      <div className=\"row key-operator-value__heading hidden-sm hidden-xs\">\n        <div className=\"col-md-4 text-secondary text-uppercase\">{t('olm~Key')}</div>\n        <div className=\"col-md-3 text-secondary text-uppercase\">{t('olm~Operator')}</div>\n        <div className=\"col-md-3 text-secondary text-uppercase\">{t('olm~Values')}</div>\n      </div>\n      {matchExpressions.map((expression, index) => (\n        // Have to use array index in the key bc any other unique id whould have to use editable fields.\n        <MatchExpression\n          // eslint-disable-next-line react/no-array-index-key\n          key={`${uid}-match-expression-${index}`}\n          expression={expression}\n          allowedOperators={allowedOperators}\n          onClickRemove={() => removeExpression(index)}\n          onChange={(newExpression) => updateExpression(index, newExpression)}\n        />\n      ))}\n      <div className=\"row\">\n        <Button type=\"button\" onClick={addExpression} variant=\"link\">\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Add expression')}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport type MatchExpressionsProps = {\n  matchExpressions: MatchExpression[];\n  onChange?: (matchExpressions: MatchExpression[]) => void;\n  allowedOperators?: MatchExpression['operator'][];\n  uid?: string;\n};\n\nexport type MatchExpressionProps = {\n  expression: MatchExpression;\n  onChange?: (expression: MatchExpression) => void;\n  onClickRemove?: () => void;\n  allowedOperators?: MatchExpression['operator'][];\n};\n\nMatchExpressions.displayName = 'MatchExpressions';\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { QUERY_PROPERTIES } from '../const';\n\ntype StateProps = {\n  application: string;\n};\ntype DispatchProps = {\n  onSetApp: (application: string) => void;\n};\ntype OwnProps = {\n  children: (desiredApplication?: string) => React.ReactNode;\n};\n\ntype QueryFocusApplicationProps = StateProps & DispatchProps & OwnProps;\n\nconst QueryFocusApplication: React.FC<QueryFocusApplicationProps> = ({\n  children,\n  application,\n  onSetApp,\n}) => {\n  const originalApp = React.useRef(application);\n  const desiredApplication = new URLSearchParams(window.location.search).get(\n    QUERY_PROPERTIES.APPLICATION,\n  );\n\n  React.useEffect(() => {\n    const originalApplication = originalApp.current;\n    const sanitizedApp = sanitizeApplicationValue(desiredApplication);\n    if (sanitizedApp && sanitizedApp !== originalApplication) {\n      onSetApp(sanitizedApp);\n    }\n\n    return () => {\n      if (application !== originalApplication) {\n        onSetApp(originalApplication);\n      }\n    };\n  }, [desiredApplication, onSetApp, originalApp, application]);\n\n  return <>{children(desiredApplication)}</>;\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  (state: RootState): StateProps => ({\n    application: getActiveApplication(state),\n  }),\n  {\n    onSetApp: setActiveApplication,\n  },\n)(QueryFocusApplication);\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nconst SwitchToYAMLAlert: React.FC<{ onClose?: () => void }> = ({ onClose }) => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      actionClose={onClose && <AlertActionCloseButton onClose={onClose} />}\n      isInline\n      title={t(\n        'console-shared~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control.',\n      )}\n      variant=\"info\"\n      data-test=\"info-alert\"\n    />\n  );\n};\n\nexport default SwitchToYAMLAlert;\n","export * from './useEventSourceModelsWithAccess';\nexport * from './useEventSourceStatus';\nexport * from './useKameletsData';\nexport * from './useEventSinkStatus';\nexport * from './useBootstrapServers';\n","import { TFunction } from 'i18next';\nimport {\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_KAFKA_KIND,\n  EVENT_SOURCE_API_SERVER_KIND,\n  EVENT_SOURCE_CONTAINER_KIND,\n  EVENT_SOURCE_PING_KIND,\n} from '../const';\n\nexport const getEventSourceCatalogProviderData = (\n  ref: string,\n  t: TFunction,\n): { description?: string; provider?: string; support?: string } =>\n  ({\n    [EVENT_SOURCE_API_SERVER_KIND]: {\n      description: t(\n        'knative-plugin~This object can be used to connect an event sink, such as a Service, Channel, or Broker to the Kubernetes API server. ApiServerSource watches for Kubernetes events and forwards them to the sink.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_CONTAINER_KIND]: {\n      description: t(\n        'knative-plugin~Starts a user-provided Container which will generate events and send messages to a sink URI. The sink URI is injected into the Container as an environment variable. A ContainerSource is an easy way to implement your own event sources in Knative.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_KAFKA_KIND]: {\n      description: t(\n        'knative-plugin~A distributed messaging system consisting of servers and clients that communicate via a high-performance TCP network protocol. This source will send Apache Kafka messages from monitored Apache Kafka topics to a configured sink, packaged as CloudEvents.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_PING_KIND]: {\n      description: t(\n        'knative-plugin~Used to periodically send ping events with a constant payload to a sink. A PingSource is a timer that emits CloudEvents at a fixed schedule that is configured as a crontab expression.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n    [EVENT_SOURCE_SINK_BINDING_KIND]: {\n      description: t(\n        'knative-plugin~Used to connect OpenShift managed applications like Deployments, StatefulSets, or Jobs to an event sink, for example, a Knative Service, Channel, or Broker. SinkBinding is similar to a ContainerSource but works on existing OpenShift Application resources, whereas the ContainerSource Container lifecycle is fully managed by OpenShift Serverless itself.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n  }[ref]);\n","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/apiserversource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/camelsource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/containersource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/kafkasource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/pingsource.svg\";","module.exports = __webpack_public_path__ + \"assets/packages/knative-plugin/src/imgs/logos/sinkbindingsource.svg\";","import * as _ from 'lodash';\nimport {\n  getAppLabels,\n  getCommonAnnotations,\n} from '@console/dev-console/src/utils/resource-label-utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { K8sModel, K8sResourceKind } from '@console/internal/module/k8s/types';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src/constants';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { getEventSinkCatalogProviderData } from '../catalog/event-sink-data';\nimport {\n  EventSinkFormData,\n  EventSinkSyncFormData,\n  KnEventCatalogMetaData,\n} from '../components/add/import-types';\nimport { craftResourceKey } from '../components/pub-sub/pub-sub-utils';\nimport { EVENT_SINK_KAFKA_KIND } from '../const';\nimport { loadYamlData } from './create-eventsources-utils';\nimport { getEventSourceIcon } from './get-knative-icon';\n\nexport const getEventSinksDepResource = (formData: EventSinkFormData): K8sResourceKind => {\n  const {\n    type,\n    name,\n    apiVersion,\n    application: { name: applicationName },\n    project: { name: namespace },\n    data,\n    source,\n  } = formData;\n\n  const defaultLabel = getAppLabels({ name, applicationName });\n  const eventSrcData = data[type];\n  const { name: sourceName, kind: sourceKind, apiVersion: sourceApiVersion } = source ?? {};\n  const eventSourceResource: K8sResourceKind = {\n    apiVersion,\n    kind: type,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n      },\n      annotations: getCommonAnnotations(),\n    },\n    spec: {\n      ...(eventSrcData && eventSrcData),\n      ...(sourceName &&\n        sourceApiVersion &&\n        sourceKind && {\n          source: {\n            ref: {\n              apiVersion: sourceApiVersion,\n              kind: sourceKind,\n              name: sourceName,\n            },\n          },\n        }),\n    },\n  };\n\n  return eventSourceResource;\n};\n\nexport const getKafkaSinkResource = (formData: EventSinkFormData): K8sResourceKind => {\n  const baseResource = getEventSinksDepResource(formData);\n  return {\n    ...baseResource,\n    spec: {\n      ..._.omit(baseResource.spec, 'auth'),\n      ...(baseResource.spec?.auth?.secret?.ref?.name && {\n        auth: {\n          secret: {\n            ref: {\n              name: baseResource.spec?.auth?.secret?.ref?.name,\n            },\n          },\n        },\n      }),\n    },\n  };\n};\n\nexport const getCatalogEventSinkResource = (\n  sourceFormData: EventSinkSyncFormData,\n): K8sResourceKind => {\n  if (sourceFormData.editorType === EditorType.YAML) {\n    return loadYamlData(sourceFormData);\n  }\n  const { formData } = sourceFormData;\n  return formData.type === EVENT_SINK_KAFKA_KIND\n    ? getKafkaSinkResource(formData)\n    : getEventSinksDepResource(formData);\n};\n\nexport const getKameletSinkData = (kameletData: K8sResourceKind) => ({\n  sink: {\n    ref: {\n      apiVersion: kameletData.apiVersion,\n      kind: kameletData.kind,\n      name: kameletData.metadata.name,\n    },\n    properties: {},\n  },\n});\n\nexport const sanitizeKafkaSinkResource = (formData: EventSinkFormData): EventSinkFormData => {\n  const formDataActual = formData.data?.[EVENT_SINK_KAFKA_KIND] || {};\n  return {\n    ...formData,\n    data: {\n      [EVENT_SINK_KAFKA_KIND]: {\n        bootstrapServers: Array.isArray(formDataActual.bootstrapServers)\n          ? formDataActual.bootstrapServers\n          : [],\n        topic: formDataActual.topic ?? '',\n        ...(formDataActual.auth?.secret?.ref?.name && {\n          auth: {\n            secret: {\n              ref: {\n                name: formDataActual.auth?.secret?.ref?.name,\n              },\n            },\n          },\n        }),\n      },\n    },\n  };\n};\n\nexport const sanitizeSinkToForm = (\n  newFormData: K8sResourceKind,\n  formDataValues: EventSinkFormData,\n  kameletSink?: K8sResourceKind,\n): EventSinkFormData => {\n  const specData = newFormData.spec;\n  const { ref: sourceRef } = specData?.source || {};\n  const appGroupName = newFormData.metadata?.labels?.['app.kubernetes.io/part-of'];\n  const formData: EventSinkFormData = {\n    ...formDataValues,\n    application: {\n      ...formDataValues.application,\n      ...(appGroupName &&\n        appGroupName !== formDataValues.application.name && {\n          name: appGroupName,\n          selectedKey: formDataValues.application.selectedKey ? CREATE_APPLICATION_KEY : '',\n        }),\n      ...(!appGroupName && {\n        name: '',\n        selectedKey: UNASSIGNED_APPLICATIONS_KEY,\n      }),\n    },\n    name: newFormData.metadata?.name,\n    ...(sourceRef?.name &&\n      sourceRef?.kind &&\n      sourceRef?.apiVersion && {\n        source: {\n          apiVersion: sourceRef.apiVersion,\n          kind: sourceRef.kind,\n          name: sourceRef.name,\n          key: craftResourceKey(sourceRef.name, sourceRef),\n        },\n      }),\n    data: {\n      [formDataValues.type]: {\n        ..._.omit(specData, 'source'),\n      },\n      ...(kameletSink && {\n        [formDataValues.type]: {\n          sink: {\n            ref: {\n              apiVersion: kameletSink.apiVersion,\n              kind: kameletSink.kind,\n              name: kameletSink.metadata.name,\n            },\n            properties: specData?.sink?.properties,\n          },\n        },\n      }),\n    },\n  };\n  return formDataValues.type === EVENT_SINK_KAFKA_KIND\n    ? sanitizeKafkaSinkResource(formData)\n    : formData;\n};\n\nexport const getEventSinkMetadata = (eventSinkModel: K8sModel, t): KnEventCatalogMetaData => {\n  let normalizedSource = {};\n  if (eventSinkModel) {\n    const { kind, label: name } = eventSinkModel;\n    const { description, provider } = getEventSinkCatalogProviderData(kind, t) ?? {};\n    normalizedSource = {\n      name,\n      description,\n      provider,\n      iconUrl: getEventSourceIcon(referenceForModel(eventSinkModel)),\n    };\n  }\n  return normalizedSource as KnEventCatalogMetaData;\n};\n\nexport const getEventSinkData = (sink: string) => {\n  const eventSinkData = {\n    [EVENT_SINK_KAFKA_KIND]: {\n      bootstrapServers: [],\n      topic: '',\n      auth: {\n        secret: {\n          ref: {\n            name: '',\n          },\n        },\n      },\n    },\n  };\n  return eventSinkData[sink];\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Checkbox, Switch } from '@patternfly/react-core';\nimport { WidgetProps } from '@rjsf/core';\nimport { getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RadioGroup } from '@console/internal/components/radio';\nimport { NumberSpinner, ListDropdown, Dropdown } from '@console/internal/components/utils';\nimport { K8sKind, GroupVersionKind, ImagePullPolicy } from '@console/internal/module/k8s';\nimport { selectorFromString } from '@console/internal/module/k8s/selector';\nimport { JSON_SCHEMA_NUMBER_TYPES } from './const';\nimport { DynamicFormFieldOptionsList } from './types';\n\nexport const TextWidget: React.FC<WidgetProps> = (props) => {\n  const {\n    disabled = false,\n    id,\n    onBlur,\n    onChange,\n    onFocus,\n    readonly = false,\n    schema = {},\n    value = '',\n  } = props;\n  const schemaType = getSchemaType(schema);\n  return JSON_SCHEMA_NUMBER_TYPES.includes(schemaType) ? (\n    <NumberWidget {...props} />\n  ) : (\n    <input\n      className=\"pf-v5-c-form-control\"\n      disabled={disabled}\n      id={id}\n      key={id}\n      onBlur={onBlur && ((event) => onBlur(id, event.target.value))}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n      onFocus={onFocus && ((event) => onFocus(id, event.target.value))}\n      readOnly={readonly}\n      type=\"text\"\n      value={value}\n    />\n  );\n};\n\nexport const NumberWidget: React.FC<WidgetProps> = ({ value, id, onChange }) => {\n  const numberValue = _.toNumber(value);\n  return (\n    <input\n      className=\"pf-v5-c-form-control\"\n      id={id}\n      key={id}\n      onChange={({ currentTarget }) =>\n        onChange(currentTarget.value !== '' ? _.toNumber(currentTarget.value) : '')\n      }\n      type=\"number\"\n      value={_.isFinite(numberValue) ? numberValue : ''}\n    />\n  );\n};\n\nexport const PasswordWidget: React.FC<WidgetProps> = ({ value = '', id, onChange }) => {\n  return (\n    <input\n      className=\"pf-v5-c-form-control\"\n      key={id}\n      id={id}\n      type=\"password\"\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n      value={value}\n    />\n  );\n};\n\nexport const CheckboxWidget: React.FC<WidgetProps> = ({ value = false, id, label, onChange }) => {\n  return (\n    <Checkbox\n      id={id}\n      key={id}\n      isChecked={value}\n      data-checked-state={value}\n      label={label}\n      onChange={(_event, checked) => onChange(checked)}\n    />\n  );\n};\n\nexport const SwitchWidget: React.FC<WidgetProps> = ({ value, id, label, onChange, options }) => {\n  const { t } = useTranslation();\n  const { labelOn = t('console-shared~true'), labelOff = t('console-shared~false') } = options;\n  return (\n    <Switch\n      id={id || label}\n      key={id || label}\n      isChecked={_.isNil(value) ? false : value}\n      onChange={(_event, v) => onChange(v)}\n      label={labelOn as string}\n      labelOff={labelOff as string}\n    />\n  );\n};\n\nexport const PodCountWidget: React.FC<WidgetProps> = ({ value, id, onChange }) => {\n  return (\n    <NumberSpinner\n      id={id}\n      value={value}\n      onChange={({ currentTarget }) => onChange(_.toInteger(currentTarget.value))}\n      changeValueBy={(operation) => onChange(_.toInteger(value) + operation)}\n      autoFocus\n      required\n    />\n  );\n};\n\nexport const K8sResourceWidget: React.FC<K8sResourceWidgetProps> = ({\n  value,\n  id,\n  label,\n  options,\n  formContext,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n  const { model, groupVersionKind, selector } = options;\n  const { namespace } = formContext;\n  const selectedKey = value ? `${value}-${groupVersionKind}` : null;\n  const selectorObj = React.useMemo(() => {\n    try {\n      return selectorFromString(selector);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `Invalid selector string provided to K8sResourceWidget: '${selector}'. If using OLM descriptors, please validate the provided selector.`,\n      );\n    }\n    return null;\n  }, [selector]);\n  return (\n    <div>\n      {!_.isUndefined(model) ? (\n        <ListDropdown\n          key={id}\n          id={id}\n          resources={[\n            {\n              kind: groupVersionKind,\n              selector: selectorObj,\n              namespace: model.namespaced ? namespace : null,\n            },\n          ]}\n          desc={label}\n          placeholder={t('console-shared~Select {{label}}', { label: model.label })}\n          onChange={(next) => onChange(next)}\n          selectedKey={selectedKey}\n        />\n      ) : (\n        <span>\n          {t('console-shared~Cluster does not have resource {{groupVersionKind}}', {\n            groupVersionKind,\n          })}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport const ImagePullPolicyWidget: React.FC<WidgetProps> = ({ id, value, onChange }) => {\n  return (\n    <RadioGroup\n      id={id}\n      currentValue={value}\n      items={_.values(ImagePullPolicy).map((policy) => ({\n        value: policy,\n        title: policy,\n      }))}\n      onChange={({ currentTarget }) => onChange(currentTarget.value)}\n    />\n  );\n};\n\nexport const SelectWidget: React.FC<WidgetProps> = ({\n  id,\n  label,\n  onChange,\n  options,\n  schema,\n  value,\n}) => {\n  const { t } = useTranslation();\n  const { enumOptions = [], title } = options;\n  const items = _.reduce(\n    enumOptions as DynamicFormFieldOptionsList,\n    (itemAccumulator, option) => {\n      return {\n        ...itemAccumulator,\n        [option.label]: option.value,\n      };\n    },\n    {},\n  );\n  return (\n    <Dropdown\n      id={id}\n      key={id}\n      title={t('console-shared~Select {{title}}', { title: title || schema?.title || label })}\n      selectedKey={value}\n      items={items}\n      onChange={(val) => onChange(val)}\n    />\n  );\n};\n\ntype K8sResourceWidgetProps = WidgetProps & {\n  options: {\n    model: K8sKind;\n    groupVersionKind: GroupVersionKind;\n    selector: string;\n  };\n};\n\nexport default {\n  BaseInput: TextWidget,\n  CheckboxWidget,\n  SwitchWidget,\n  ImagePullPolicyWidget,\n  K8sResourceWidget,\n  NumberWidget,\n  PasswordWidget,\n  PodCountWidget,\n  SelectWidget,\n  TextWidget,\n  int32: NumberWidget,\n  int64: NumberWidget,\n};\n","import { TFunction } from 'i18next';\nimport { EVENT_SINK_KAFKA_KIND } from '../const';\n\nexport const getEventSinkCatalogProviderData = (\n  ref: string,\n  t: TFunction,\n): { description?: string; provider?: string; support?: string } =>\n  ({\n    [EVENT_SINK_KAFKA_KIND]: {\n      description: t(\n        'knative-plugin~A KafkaSink takes a CloudEvent, and sends it to an Apache Kafka Topic. Events can be specified in either Structured or Binary mode.',\n      ),\n      provider: 'Red Hat',\n      support: t('knative-plugin~Supported'),\n    },\n  }[ref]);\n","import * as React from 'react';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  NodeAffinity as NodeAffinityType,\n  MatchExpression,\n  PodAffinity as PodAffinityType,\n  PodAffinityTerm,\n  Selector,\n} from '@console/internal/module/k8s';\nimport { MatchExpressions } from './match-expressions';\n\nenum AffinityRuleType {\n  Preferred = 'Preferred',\n  Required = 'Required',\n}\n\nconst ALLOWED_MATCH_EXPRESSION_OPERATORS: MatchExpression['operator'][] = [\n  'In',\n  'NotIn',\n  'Exists',\n  'DoesNotExist',\n];\nconst DEFAULT_MATCH_EXPRESSION: MatchExpression = {\n  key: '',\n  operator: 'Exists',\n};\n\nexport const DEFAULT_NODE_AFFINITY: NodeAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: {\n    nodeSelectorTerms: [{ matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] }],\n  },\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      preference: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n};\n\nexport const DEFAULT_POD_AFFINITY: PodAffinityType = {\n  requiredDuringSchedulingIgnoredDuringExecution: [\n    {\n      topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n      labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n    },\n  ],\n  preferredDuringSchedulingIgnoredDuringExecution: [\n    {\n      weight: 1,\n      podAffinityTerm: {\n        topologyKey: 'failure-domain.beta.kubernetes.io/zone',\n        labelSelector: { matchExpressions: [_.cloneDeep(DEFAULT_MATCH_EXPRESSION)] },\n      },\n    },\n  ],\n};\n\nconst NodeAffinityRule: React.FC<NodeAffinityRuleProps> = ({\n  key,\n  type,\n  showRemoveButton = false,\n  onClickRemove,\n  onChange = () => {},\n  rule,\n}) => {\n  const { t } = useTranslation();\n  const { weight, selector } = rule;\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      selector: {\n        ...selector,\n        matchExpressions,\n      },\n    });\n\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsedValue = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsedValue) ? parsedValue : undefined,\n    });\n  };\n\n  return (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Remove {{item}}', { item: type })}\n        </Button>\n      )}\n      {type === AffinityRuleType.Preferred && (\n        <div className=\"co-affinity-term__weight-input\">\n          <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n            {t('olm~Weight')}\n          </label>\n          <input\n            className=\"pf-v5-c-form-control\"\n            type=\"number\"\n            value={weight}\n            onChange={onChangeWeight}\n            required\n          />\n        </div>\n      )}\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  );\n};\n\nexport const NodeAffinity: React.FC<NodeAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const { t } = useTranslation();\n  const requiredRules =\n    affinity?.requiredDuringSchedulingIgnoredDuringExecution?.nodeSelectorTerms || [];\n  const preferredRules = affinity?.preferredDuringSchedulingIgnoredDuringExecution || [];\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [...requiredRules, { matchExpressions: [] }],\n      },\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.filter((_v, index) => index !== atIndex),\n      },\n    });\n\n  const updateRequiredRules = ({ selector }: NodeAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: requiredRules.map((current, index) =>\n          index === atIndex ? selector : current,\n        ),\n      },\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        { weight: 1, preference: { matchExpressions: [] } },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => index !== atIndex,\n      ),\n    });\n\n  const updatePreferredRules = (\n    { selector: preference, weight }: NodeAffinityRule,\n    atIndex: number,\n  ) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? { preference, weight } : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip\n        content={t('olm~Required rules must be met before a pod can be scheduled on a node.')}\n      >\n        <dt>{t('olm~Required during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {requiredRules.map((selector, requiredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-required-${requiredIndex}`}\n            onChange={(rule) => updateRequiredRules(rule, requiredIndex)}\n            onClickRemove={() => removeRequiredRule(requiredIndex)}\n            rule={{ selector }}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add required')}\n          </Button>\n        </div>\n      </dd>\n      <Tooltip\n        content={t(\n          'olm~Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.',\n        )}\n      >\n        <dt>{t('olm~Preferred during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map(({ preference: selector, weight }, preferredIndex) => (\n          <NodeAffinityRule\n            // Have to use array index in the key bc any other unique id whould have to use editable fields.\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${uid}-node-affinity-preferred-${preferredIndex}`}\n            onChange={(rule) => updatePreferredRules(rule, preferredIndex)}\n            onClickRemove={() => removePreferredRule(preferredIndex)}\n            rule={{ selector, weight }}\n            showRemoveButton\n            type={AffinityRuleType.Preferred}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add preferred')}\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\nconst PodAffinityRule: React.FC<PodAffinityRuleProps> = ({\n  key,\n  onChange = () => {},\n  onClickRemove = () => {},\n  showRemoveButton = false,\n  rule,\n  type,\n}) => {\n  const { t } = useTranslation();\n  const { podAffinityTerm, weight } = rule;\n  const selector = podAffinityTerm?.labelSelector || {};\n  const topologyKey = podAffinityTerm?.topologyKey;\n  const onChangeWeight = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsed = _.parseInt(e?.target?.value);\n    onChange({\n      ...rule,\n      weight: _.isFinite(parsed) ? parsed : undefined,\n    });\n  };\n\n  const onChangeTopologyKey = (e: React.ChangeEvent<HTMLInputElement>): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        topologyKey: e?.target?.value,\n      },\n    });\n  const onChangeMatchExpressions = (matchExpressions: MatchExpression[]): void =>\n    onChange({\n      ...rule,\n      podAffinityTerm: {\n        ...podAffinityTerm,\n        labelSelector: {\n          ...selector,\n          matchExpressions,\n        },\n      },\n    });\n\n  return podAffinityTerm ? (\n    <div className=\"co-affinity-term\">\n      {showRemoveButton && (\n        <Button\n          type=\"button\"\n          className=\"co-affinity-term__remove\"\n          onClick={onClickRemove}\n          variant=\"link\"\n        >\n          <MinusCircleIcon className=\"co-icon-space-r\" />\n          {t('olm~Remove {{item}}', { item: type })}\n        </Button>\n      )}\n      <div className=\"co-affinity-term__topology\">\n        {type === AffinityRuleType.Preferred && (\n          <div className=\"co-affinity-term__weight-input\">\n            <label className=\"control-label co-required\" htmlFor={`preference-${key}`}>\n              {t('olm~Weight')}\n            </label>\n            <input\n              className=\"pf-v5-c-form-control\"\n              type=\"number\"\n              value={weight}\n              onChange={onChangeWeight}\n              required\n            />\n          </div>\n        )}\n        <div className=\"co-affinity-term__topology-input\">\n          <label className=\"control-label co-required\" htmlFor={`topology-${key}`}>\n            {t('olm~Topology key')}\n          </label>\n          <input\n            id={`topology-${key}`}\n            className=\"pf-v5-c-form-control\"\n            type=\"text\"\n            value={topologyKey}\n            onChange={onChangeTopologyKey}\n            required\n          />\n        </div>\n      </div>\n      <MatchExpressions\n        matchExpressions={selector?.matchExpressions}\n        onChange={onChangeMatchExpressions}\n        allowedOperators={ALLOWED_MATCH_EXPRESSION_OPERATORS}\n        uid={key}\n      />\n    </div>\n  ) : null;\n};\n\nexport const PodAffinity: React.FC<PodAffinityProps> = ({ affinity, onChange, uid = '' }) => {\n  const {\n    requiredDuringSchedulingIgnoredDuringExecution: requiredRules = [],\n    preferredDuringSchedulingIgnoredDuringExecution: preferredRules = [],\n  } = affinity || {};\n  const { t } = useTranslation();\n  const addRequiredRule = () =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        ...requiredRules,\n        { topologyKey: '', labelSelector: { matchExpressions: [] } },\n      ],\n    });\n\n  const removeRequiredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updateRequiredRules = ({ podAffinityTerm: next }: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      requiredDuringSchedulingIgnoredDuringExecution: requiredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  const addPreferredRule = () =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: [\n        ...preferredRules,\n        {\n          weight: 1,\n          podAffinityTerm: { topologyKey: '', labelSelector: { matchExpressions: [] } },\n        },\n      ],\n    });\n\n  const removePreferredRule = (atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.filter(\n        (_v, index) => atIndex !== index,\n      ),\n    });\n\n  const updatePreferredRules = (next: PodAffinityRule, atIndex: number) =>\n    onChange?.({\n      ...affinity,\n      preferredDuringSchedulingIgnoredDuringExecution: preferredRules.map((current, index) =>\n        index === atIndex ? next : current,\n      ),\n    });\n\n  return (\n    <dl>\n      <Tooltip\n        content={t('olm~Required rules must be met before a pod can be scheduled on a node.')}\n      >\n        <dt>{t('olm~Required during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {_.map(requiredRules, (podAffinityTerm, ruleIndex) => (\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          // eslint-disable-next-line react/no-array-index-key\n          <PodAffinityRule\n            key={`${uid}-pod-affinity-required-${ruleIndex}`}\n            rule={{ podAffinityTerm }}\n            onChange={(rule) => updateRequiredRules(rule, ruleIndex)}\n            onClickRemove={() => removeRequiredRule(ruleIndex)}\n            showRemoveButton\n            type={AffinityRuleType.Required}\n          />\n        ))}\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addRequiredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add required')}\n          </Button>\n        </div>\n      </dd>\n      <Tooltip\n        content={t(\n          'olm~Preferred rules specify that, if the rule is met, the scheduler tries to enforce the rules, but does not guarantee enforcement.',\n        )}\n      >\n        <dt>{t('olm~Preferred during scheduling, ignored during execution')}</dt>\n      </Tooltip>\n      <dd>\n        {preferredRules.map((preferredRule, ruleIndex) => {\n          // Have to use array index in the key bc any other unique id whould have to use editable fields.\n          return (\n            <PodAffinityRule\n              // eslint-disable-next-line react/no-array-index-key\n              key={`${uid}-pod-affinity-preferred-${ruleIndex}`}\n              onChange={(rule) => updatePreferredRules(rule, ruleIndex)}\n              onClickRemove={() => removePreferredRule(ruleIndex)}\n              showRemoveButton\n              rule={preferredRule}\n              type={AffinityRuleType.Preferred}\n            />\n          );\n        })}\n\n        <div className=\"row\">\n          <Button type=\"button\" onClick={addPreferredRule} variant=\"link\">\n            <PlusCircleIcon className=\"co-icon-space-r\" />\n            {t('olm~Add preferred')}\n          </Button>\n        </div>\n      </dd>\n    </dl>\n  );\n};\n\ntype NodeAffinityRule = {\n  selector: Selector;\n  weight?: number;\n};\n\nexport type NodeAffinityRuleProps = {\n  key: string;\n  onChange?: (rule: NodeAffinityRule) => void;\n  onClickRemove?: () => void;\n  rule: NodeAffinityRule;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type NodeAffinityProps = {\n  uid?: string;\n  affinity: NodeAffinityType;\n  onChange: (affinity: NodeAffinityType) => void;\n};\n\ntype PodAffinityRule = {\n  podAffinityTerm: PodAffinityTerm;\n  weight?: number;\n};\n\nexport type PodAffinityRuleProps = {\n  key: string;\n  rule: PodAffinityRule;\n  onChange?: (rule: PodAffinityRule) => void;\n  onClickRemove?: () => void;\n  showRemoveButton?: boolean;\n  type: AffinityRuleType;\n};\n\nexport type PodAffinityProps = {\n  uid?: string;\n  affinity: PodAffinityType;\n  onChange: (affinity: PodAffinityType) => void;\n};\n\nNodeAffinity.displayName = 'NodeAffinity';\nPodAffinity.displayName = 'PodAffinity';\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n} from '@console/dev-console/src/components/import/validation-schema';\nimport { isValidUrl, nameValidationSchema } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { EventSources, SinkType } from './import-types';\n\nexport const sinkTypeUriValidation = (t: TFunction) =>\n  yup.object().shape({\n    uri: yup\n      .string()\n      .max(2000, t('knative-plugin~Please enter a URI that is less then 2000 characters.'))\n      .test('validate-uri', t('knative-plugin~Invalid URI.'), function (value) {\n        return isValidUrl(value);\n      })\n      .required(t('knative-plugin~Required')),\n  });\n\nconst sinkServiceSchema = (t: TFunction) =>\n  yup\n    .object()\n    .when('sinkType', {\n      is: SinkType.Resource,\n      then: yup.object().shape({\n        name: yup.string().required(t('knative-plugin~Required')),\n      }),\n    })\n    .when('sinkType', {\n      is: SinkType.Uri,\n      then: sinkTypeUriValidation(t),\n    });\n\nexport const sourceDataSpecSchema = (t: TFunction) =>\n  yup\n    .object()\n    .when('type', {\n      is: EventSources.PingSource,\n      then: yup.object().shape({\n        [EventSources.PingSource]: yup.object().shape({\n          data: yup.string().max(253, t('knative-plugin~Cannot be longer than 253 characters.')),\n          schedule: yup\n            .string()\n            .max(253, t('knative-plugin~Cannot be longer than 253 characters.'))\n            .required(t('knative-plugin~Required')),\n        }),\n      }),\n    })\n    .when('type', {\n      is: EventSources.SinkBinding,\n      then: yup.object().shape({\n        [EventSources.SinkBinding]: yup.object().shape({\n          subject: yup.object().shape({\n            selector: yup.object().shape({\n              matchLabels: yup.object(),\n            }),\n            name: yup.string().when('selector.matchLabels', {\n              is: (obj: object) => !obj,\n              then: yup.string().required(t('knative-plugin~Required')),\n            }),\n            apiVersion: yup\n              .string()\n              .max(253, t('knative-plugin~Cannot be longer than 253 characters.'))\n              .required(t('knative-plugin~Required')),\n            kind: yup\n              .string()\n              .max(253, t('knative-plugin~Cannot be longer than 253 characters.'))\n              .required(t('knative-plugin~Required')),\n          }),\n        }),\n      }),\n    })\n    .when('type', {\n      is: EventSources.ApiServerSource,\n      then: yup.object().shape({\n        [EventSources.ApiServerSource]: yup.object().shape({\n          resources: yup\n            .array()\n            .of(\n              yup.object({\n                apiVersion: yup.string().required(t('knative-plugin~Required')),\n                kind: yup.string().required(t('knative-plugin~Required')),\n              }),\n            )\n            .required(t('knative-plugin~Required')),\n        }),\n      }),\n    })\n    .when('type', {\n      is: EventSources.KafkaSource,\n      then: yup.object().shape({\n        [EventSources.KafkaSource]: yup.object().shape({\n          bootstrapServers: yup.array().of(yup.string()).min(1, t('knative-plugin~Required')),\n          consumerGroup: yup.string().required(t('knative-plugin~Required')),\n          topics: yup.array().of(yup.string()).min(1, t('knative-plugin~Required')),\n          net: yup.object().shape({\n            sasl: yup.object().shape({\n              enable: yup.boolean(),\n              user: yup.object().shape({\n                secretKeyRef: yup.object().shape({\n                  name: yup.string(),\n                  key: yup.string(),\n                }),\n              }),\n              password: yup.object().shape({\n                secretKeyRef: yup.object().shape({\n                  name: yup.string(),\n                  key: yup.string(),\n                }),\n              }),\n            }),\n            tls: yup.object().shape({\n              enable: yup.boolean(),\n              caCert: yup.object().shape({\n                secretKeyRef: yup.object().shape({\n                  name: yup.string(),\n                  key: yup.string(),\n                }),\n              }),\n              cert: yup.object().shape({\n                secretKeyRef: yup.object().shape({\n                  name: yup.string(),\n                  key: yup.string(),\n                }),\n              }),\n              key: yup.object().shape({\n                secretKeyRef: yup.object().shape({\n                  name: yup.string(),\n                  key: yup.string(),\n                }),\n              }),\n            }),\n          }),\n        }),\n      }),\n    })\n    .when('type', {\n      is: EventSources.ContainerSource,\n      then: yup.object().shape({\n        [EventSources.ContainerSource]: yup.object().shape({\n          template: yup.object({\n            spec: yup.object({\n              containers: yup.array().of(\n                yup.object({\n                  image: yup.string().required(t('knative-plugin~Required')),\n                }),\n              ),\n            }),\n          }),\n        }),\n      }),\n    });\n\nexport const eventSourceValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    editorType: yup.string(),\n    formData: yup.object().when('editorType', {\n      is: EditorType.Form,\n      then: yup.object().shape({\n        project: projectNameValidationSchema,\n        application: applicationNameValidationSchema,\n        name: nameValidationSchema(t),\n        sink: sinkServiceSchema(t),\n        data: sourceDataSpecSchema(t),\n      }),\n    }),\n    yamlData: yup.string(),\n  });\n\nexport const addChannelValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    editorType: yup.string(),\n    formData: yup.object().when('editorType', {\n      is: EditorType.Form,\n      then: yup.object().shape({\n        project: projectNameValidationSchema,\n        application: applicationNameValidationSchema,\n        name: nameValidationSchema(t),\n        data: yup.object(),\n        type: yup.string(),\n      }),\n    }),\n    yamlData: yup.string(),\n  });\n","import * as React from 'react';\nimport { Button, Alert, Divider, FormHelperText } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ArrayFieldTemplateProps, FieldTemplateProps, ObjectFieldTemplateProps } from '@rjsf/core';\nimport { getUiOptions, getSchemaType } from '@rjsf/core/dist/cjs/utils';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { JSON_SCHEMA_GROUP_TYPES } from './const';\nimport { FieldSet, FormField } from './fields';\nimport { UiSchemaOptionsWithDependency } from './types';\nimport { useSchemaLabel } from './utils';\n\nexport const AtomicFieldTemplate: React.FC<FieldTemplateProps> = ({\n  children,\n  id,\n  label,\n  rawErrors,\n  description,\n  required,\n  schema,\n  uiSchema,\n}) => {\n  return (\n    <FormField id={id} defaultLabel={label} required={required} schema={schema} uiSchema={uiSchema}>\n      {children}\n      {description}\n      {!_.isEmpty(rawErrors) && (\n        <>\n          {_.map(rawErrors, (error) => (\n            <FormHelperText key={error}>{_.capitalize(error)}</FormHelperText>\n          ))}\n        </>\n      )}\n    </FormField>\n  );\n};\n\nconst AdvancedProperties: React.FC<Pick<ObjectFieldTemplateProps, 'properties'>> = ({\n  properties,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textCollapsed={t('console-shared~Advanced configuration')}\n      textExpanded={t('console-shared~Advanced configuration')}\n    >\n      {_.map(properties, (property) => property.content)}\n    </ExpandCollapse>\n  );\n};\nexport const FieldTemplate: React.FC<FieldTemplateProps> = (props) => {\n  const { hidden, schema = {}, children, uiSchema = {}, formContext = {} } = props;\n  const type = getSchemaType(schema);\n  const [dependencyMet, setDependencyMet] = React.useState(true);\n  React.useEffect(() => {\n    const { dependency } = getUiOptions(uiSchema ?? {}) as UiSchemaOptionsWithDependency; // Type defs for this function are awful\n    if (dependency) {\n      setDependencyMet(\n        dependency?.controlFieldValue ===\n          _.get(\n            formContext.formData ?? {},\n            ['spec', ...(dependency?.controlFieldPath ?? [])],\n            '',\n          ).toString(),\n      );\n    }\n  }, [uiSchema, formContext]);\n\n  if (hidden || !dependencyMet) {\n    return null;\n  }\n  const isGroup = JSON_SCHEMA_GROUP_TYPES.includes(type);\n  return isGroup ? children : <AtomicFieldTemplate {...props} />;\n};\n\nexport const ObjectFieldTemplate: React.FC<ObjectFieldTemplateProps> = ({\n  idSchema,\n  properties,\n  required,\n  schema,\n  title,\n  uiSchema,\n}) => {\n  const { advanced } = getUiOptions(uiSchema ?? {});\n  const { normalProperties, advancedProperties } = _.groupBy(properties ?? [], ({ name }) =>\n    _.includes(advanced as string[], name) ? 'advancedProperties' : 'normalProperties',\n  );\n  return properties?.length ? (\n    <FieldSet\n      defaultLabel={title}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      <div className=\"co-dynamic-form__field-group-content\">\n        {normalProperties?.length > 0 && _.map(normalProperties, (p) => p.content)}\n        {advancedProperties?.length > 0 && <AdvancedProperties properties={advancedProperties} />}\n      </div>\n    </FieldSet>\n  ) : null;\n};\n\nexport const ArrayFieldTemplate: React.FC<ArrayFieldTemplateProps> = ({\n  idSchema,\n  items,\n  onAddClick,\n  required,\n  schema,\n  title,\n  uiSchema,\n}) => {\n  const { t } = useTranslation();\n  const [, label] = useSchemaLabel(schema, uiSchema, title ?? 'Items');\n  return (\n    <FieldSet\n      defaultLabel={label}\n      idSchema={idSchema}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n    >\n      {_.map(items ?? [], (item) => {\n        return (\n          <div className=\"co-dynamic-form__array-field-group-item\" key={item.key}>\n            {item.index > 0 && <Divider className=\"co-divider\" />}\n            {item.hasRemove && (\n              <div className=\"row co-dynamic-form__array-field-group-remove\">\n                <Button\n                  id={`${item.key}_remove-btn`}\n                  type=\"button\"\n                  onClick={item.onDropIndexClick(item.index)}\n                  variant=\"link\"\n                >\n                  <MinusCircleIcon className=\"co-icon-space-r\" />\n                  {t('console-shared~Remove {{singularLabel}}', { singularLabel: label })}\n                </Button>\n              </div>\n            )}\n            {item.children}\n          </div>\n        );\n      })}\n      <div className=\"row\">\n        <Button id={`${idSchema.$id}_add-btn`} type=\"button\" onClick={onAddClick} variant=\"link\">\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('console-shared~Add {{singularLabel}}', { singularLabel: label })}\n        </Button>\n      </div>\n    </FieldSet>\n  );\n};\n\nexport const ErrorTemplate: React.FC<{ errors: string[] }> = ({ errors }) => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      className=\"co-alert co-break-word co-alert--scrollable\"\n      variant=\"danger\"\n      title={t('console-shared~Error')}\n    >\n      {t('console-shared~Fix the following errors:')}\n      <ul>\n        {_.map(errors, (error) => (\n          <li key={error}>{error}</li>\n        ))}\n      </ul>\n    </Alert>\n  );\n};\n","export const LABEL_PART_OF = 'app.kubernetes.io/part-of';\nexport const EVENT_BROKER_APP = 'broker-app';\nexport const EVENT_SOURCES_APP = 'event-sources-app';\nexport const DEFAULT_BROKER_NAME = 'default';\n","import { UiSchema } from '@rjsf/core';\nimport * as Immutable from 'immutable';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport i18n from '@console/internal/i18n';\nimport { modelFor } from '@console/internal/module/k8s';\nimport { getSchemaAtPath } from '@console/shared';\nimport {\n  getJSONSchemaOrder,\n  stringPathToUISchemaPath,\n} from '@console/shared/src/components/dynamic-form/utils';\nimport {\n  REGEXP_K8S_RESOURCE_SUFFIX,\n  REGEXP_FIELD_DEPENDENCY_PATH_VALUE,\n  REGEXP_SELECT_OPTION,\n} from '../descriptors/const';\nimport { capabilityFieldMap, capabilityWidgetMap } from '../descriptors/spec/spec-descriptor-input';\nimport { SpecCapability, Descriptor } from '../descriptors/types';\nimport { getValidCapabilitiesForSchema } from '../descriptors/utils';\nimport { HIDDEN_UI_SCHEMA } from './const';\n\n// Applies a hidden widget and label configuration to every property of the given schema.\n// This is useful for whitelisting only a few schema properties when all properties are not known.\nexport const hideAllExistingProperties = (schema: JSONSchema7) => {\n  return _.reduce(\n    schema?.properties,\n    (acc, _unused, propertyName) => ({\n      ...acc,\n      [propertyName]: HIDDEN_UI_SCHEMA,\n    }),\n    {},\n  );\n};\n\nconst k8sResourceCapabilityToUISchema = (capability: SpecCapability): UiSchema => {\n  const [, groupVersionKindToken, selector] = capability.match(REGEXP_K8S_RESOURCE_SUFFIX) ?? [];\n  const groupVersionKind = groupVersionKindToken?.replace(/:/g, '~');\n\n  const model = groupVersionKind && modelFor(groupVersionKind);\n  if (model) {\n    return {\n      'ui:widget': 'K8sResourceWidget',\n      'ui:options': { model, groupVersionKind, ...(selector ? { selector } : {}) },\n    };\n  }\n  return {};\n};\n\nconst fieldDependencyCapabilityToUISchema = (capability: SpecCapability): UiSchema => {\n  const [, path, controlFieldValue] = capability.match(REGEXP_FIELD_DEPENDENCY_PATH_VALUE) ?? [];\n  const controlFieldPath = stringPathToUISchemaPath(path);\n  const controlFieldName = _.last(controlFieldPath);\n  return path && controlFieldValue\n    ? {\n        'ui:dependency': {\n          controlFieldPath,\n          controlFieldValue,\n          controlFieldName,\n        },\n      }\n    : {};\n};\n\nconst selectCapabilitiesToUISchema = (capabilities: SpecCapability[]): UiSchema => {\n  const items = capabilities.reduce((optionAccumulator, capability) => {\n    const [, option] = capability.match(REGEXP_SELECT_OPTION) ?? [];\n    return {\n      ...optionAccumulator,\n      ...(option && { [option]: option }),\n    };\n  }, {});\n\n  if (!_.isEmpty(items)) {\n    return {\n      'ui:field': 'DropdownField',\n      'ui:items': items,\n    };\n  }\n\n  return {};\n};\n\n// Given an array of SpecCapabilities, return the appropriate corresponding UISchema\nexport const capabilitiesToUISchema = (capabilities: SpecCapability[] = []) => {\n  if (!capabilities?.length) {\n    return {};\n  }\n\n  const k8sResourceCapability = _.find(capabilities, (capability) =>\n    capability.startsWith(SpecCapability.k8sResourcePrefix),\n  );\n  if (k8sResourceCapability) {\n    return k8sResourceCapabilityToUISchema(k8sResourceCapability);\n  }\n\n  const hasSelectOptions = _.some(capabilities, (capability) =>\n    capability.startsWith(SpecCapability.select),\n  );\n  if (hasSelectOptions) {\n    return selectCapabilitiesToUISchema(capabilities);\n  }\n\n  const field = _.reduce(\n    capabilities,\n    (fieldAccumulator, capability) => {\n      return fieldAccumulator ?? capabilityFieldMap.get(capability);\n    },\n    undefined,\n  );\n\n  const widget = _.reduce(\n    capabilities,\n    (widgetAccumulator, capability) => {\n      return widgetAccumulator ?? capabilityWidgetMap.get(capability);\n    },\n    undefined,\n  );\n\n  return {\n    ...(field && { 'ui:field': field }),\n    ...(widget && { 'ui:widget': widget }),\n  };\n};\n\n// Map a set of spec descriptors to a ui schema\nexport const descriptorsToUISchema = (\n  descriptors: Descriptor<SpecCapability>[],\n  jsonSchema: JSONSchema7,\n) => {\n  const uiSchemaFromDescriptors = _.reduce(\n    descriptors,\n    (uiSchemaAccumulator, descriptor, index) => {\n      const schemaForDescriptor = getSchemaAtPath(jsonSchema, descriptor.path);\n      if (!schemaForDescriptor) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[OperandForm] SpecDescriptor path references a non-existent schema property:',\n          descriptor.path,\n        );\n        return uiSchemaAccumulator;\n      }\n      const capabilities = getValidCapabilitiesForSchema<SpecCapability>(\n        descriptor,\n        schemaForDescriptor,\n      );\n      const uiSchemaPath = stringPathToUISchemaPath(descriptor.path);\n      const isAdvanced = capabilities.includes(SpecCapability.advanced);\n      const dependency = capabilities.find((capability) =>\n        capability.startsWith(SpecCapability.fieldDependency),\n      );\n      return uiSchemaAccumulator.withMutations((mutable) => {\n        if (isAdvanced) {\n          const advancedPropertyName = _.last(uiSchemaPath);\n          const pathToAdvanced = [...uiSchemaPath.slice(0, -1), 'ui:advanced'];\n          const currentAdvanced = mutable.getIn(pathToAdvanced) ?? Immutable.List();\n          mutable.setIn(pathToAdvanced, currentAdvanced.push(advancedPropertyName));\n        }\n\n        mutable.mergeDeepIn(\n          uiSchemaPath,\n          Immutable.Map({\n            ...(descriptor.description && { 'ui:description': descriptor.description }),\n            ...(descriptor.displayName && { 'ui:title': descriptor.displayName }),\n            ...(dependency && fieldDependencyCapabilityToUISchema(dependency)),\n            ...capabilitiesToUISchema(capabilities),\n            'ui:sortOrder': index + 1,\n          }),\n        );\n      });\n    },\n    Immutable.Map(),\n  ).toJS();\n  return _.merge(uiSchemaFromDescriptors, getJSONSchemaOrder(jsonSchema, uiSchemaFromDescriptors));\n};\n\n// Use jsonSchema, descriptors, and some defaults to generate a uiSchema\nexport const getUISchema = (jsonSchema, providedAPI) => {\n  return {\n    metadata: {\n      ...hideAllExistingProperties(jsonSchema?.properties?.metadata as JSONSchema7),\n      name: {\n        'ui:title': i18n.t('public~Name'),\n        'ui:widget': 'TextWidget',\n      },\n      labels: {\n        'ui:title': i18n.t('public~Labels'),\n        'ui:field': 'LabelsField',\n      },\n      'ui:options': {\n        label: false,\n      },\n      'ui:order': ['name', 'labels', '*'],\n    },\n    spec: {\n      ...descriptorsToUISchema(providedAPI?.specDescriptors, jsonSchema?.properties?.spec),\n      'ui:options': {\n        label: false,\n      },\n    },\n    'ui:order': ['metadata', 'spec', '*'],\n  };\n};\n","import { JSONSchema7 } from 'json-schema';\nimport { JSONSchemaType } from '@console/shared/src/components/dynamic-form';\n\nexport const DEFAULT_K8S_SCHEMA: JSONSchema7 = {\n  type: JSONSchemaType.object,\n  properties: {\n    metadata: {\n      type: JSONSchemaType.object,\n      properties: {\n        namespace: { type: JSONSchemaType.string },\n        name: {\n          type: JSONSchemaType.string,\n          default: 'example',\n        },\n        labels: {\n          type: JSONSchemaType.object,\n          properties: {},\n          additionalProperties: { type: JSONSchemaType.string },\n        },\n      },\n      required: ['name'],\n    },\n    spec: { type: JSONSchemaType.object },\n    apiVersion: { type: JSONSchemaType.string },\n    kind: { type: JSONSchemaType.string },\n  },\n};\n\nexport const HIDDEN_UI_SCHEMA = {\n  'ui:widget': 'hidden',\n  'ui:options': { label: false },\n};\n","import * as React from 'react';\nimport { safeLoad } from 'js-yaml';\nimport * as _ from 'lodash';\nimport {\n  getCommonAnnotations,\n  getAppLabels,\n} from '@console/dev-console/src/utils/resource-label-utils';\nimport { useSafetyFirst } from '@console/dynamic-plugin-sdk';\nimport { checkAccess } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport {\n  getGroupVersionKind,\n  modelFor,\n  isGroupVersionKind,\n  K8sResourceKind,\n} from '@console/internal/module/k8s';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { UNASSIGNED_APPLICATIONS_KEY } from '@console/shared/src/constants';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport {\n  defaultChannels,\n  ChannelListProps,\n  AddChannelFormData,\n  YamlFormSyncData,\n} from '../components/add/import-types';\nimport { EVENTING_IMC_KIND } from '../const';\nimport { loadYamlData } from './create-eventsources-utils';\nimport { useChannelResourcesList } from './fetch-dynamic-eventsources-utils';\n\nexport const isDefaultChannel = (channel: string): boolean =>\n  Object.keys(defaultChannels).includes(channel);\n\nexport const getChannelKind = (ref: string): string => {\n  if (!ref || (ref && ref.length === 0) || (ref && !isGroupVersionKind(ref))) {\n    return '';\n  }\n  const [, , channelKind] = getGroupVersionKind(ref);\n  return channelKind;\n};\n\nexport const useChannelList = (namespace: string): ChannelListProps => {\n  const [accessData, setAccessData] = useSafetyFirst({ loaded: false, channelList: [] });\n  const { channels, loaded: channelsLoaded } = useChannelResourcesList();\n  React.useEffect(() => {\n    const accessList = [];\n    if (channelsLoaded) {\n      _.forIn(channels, (channelRef: string) => {\n        if (isGroupVersionKind(channelRef)) {\n          const [group] = getGroupVersionKind(channelRef) ?? [];\n          const { plural } = modelFor(channelRef) || {};\n          accessList.push(\n            checkAccess({\n              group,\n              resource: plural,\n              namespace,\n              verb: 'create',\n            }).then((result) => (result.status.allowed ? channelRef : '')),\n          );\n        }\n      });\n      Promise.all(accessList)\n        .then((results) => {\n          const channelList = results.reduce((acc, result) => {\n            if (result.length > 0) {\n              return [...acc, result];\n            }\n            return acc;\n          }, []);\n\n          setAccessData({ loaded: true, channelList });\n        })\n        .catch((err) =>\n          // eslint-disable-next-line no-console\n          console.warn('Error while checking create access for channels', err.message),\n        );\n    }\n  }, [namespace, channels, channelsLoaded, setAccessData]);\n\n  return accessData;\n};\n\nexport const channelYamltoFormData = (\n  newFormData: K8sResourceKind,\n  formDataValues: AddChannelFormData,\n): AddChannelFormData => {\n  const specData = newFormData.spec;\n  const appGroupName = newFormData.metadata?.labels?.['app.kubernetes.io/part-of'];\n  const formData = {\n    ...formDataValues,\n    application: {\n      ...formDataValues.application,\n      ...(appGroupName &&\n        appGroupName !== formDataValues.application.name && {\n          name: appGroupName,\n          selectedKey: formDataValues.application.selectedKey ? CREATE_APPLICATION_KEY : '',\n        }),\n      ...(!appGroupName && {\n        name: '',\n        selectedKey: UNASSIGNED_APPLICATIONS_KEY,\n      }),\n    },\n    name: newFormData.metadata?.name,\n    data: {\n      [getChannelKind(formDataValues.type).toLowerCase()]: {\n        ...specData,\n      },\n    },\n  };\n  return formData;\n};\n\nexport const getCreateChannelData = (formData: AddChannelFormData): K8sResourceKind => {\n  const {\n    type,\n    name,\n    data,\n    application: { name: applicationName },\n    namespace,\n  } = formData;\n  if (!isGroupVersionKind(type)) {\n    return {};\n  }\n  const defaultLabel = getAppLabels({ name, applicationName });\n  const [channelGroup, channelVersion, channelKind] = getGroupVersionKind(type);\n  const channelSpecData = data[channelKind.toLowerCase()];\n  const eventSourceResource: K8sResourceKind = {\n    apiVersion: `${channelGroup}/${channelVersion}`,\n    kind: channelKind,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n      },\n      annotations: getCommonAnnotations(),\n    },\n    spec: {\n      ...(channelSpecData && channelSpecData),\n    },\n  };\n\n  return eventSourceResource;\n};\n\nexport const getCatalogChannelData = (sourceFormData: YamlFormSyncData<AddChannelFormData>) => {\n  if (sourceFormData.editorType === EditorType.YAML) {\n    return loadYamlData<AddChannelFormData>(sourceFormData);\n  }\n  const { formData } = sourceFormData;\n  return getCreateChannelData(formData);\n};\n\nexport const getChannelData = (kind: string) => {\n  const channelData = {\n    kafkachannel: {\n      numPartitions: 1,\n      replicationFactor: 1,\n    },\n  };\n  return channelData[kind];\n};\n\nexport const useDefaultChannelConfiguration = (namespace: string): [string, boolean] => {\n  const CHANNEL_CONFIGMAP_NAME = 'default-ch-webhook';\n  const CHANNEL_CONFIGMAP_NAMESPACE = 'knative-eventing';\n\n  const [configMap, defaultConfiguredChannelLoaded] = useK8sGet<K8sResourceKind>(\n    ConfigMapModel,\n    CHANNEL_CONFIGMAP_NAME,\n    CHANNEL_CONFIGMAP_NAMESPACE,\n  );\n  let defaultConfiguredChannel = EVENTING_IMC_KIND;\n  if (configMap && defaultConfiguredChannelLoaded) {\n    const cfg = safeLoad(configMap.data?.['default-ch-config']);\n\n    defaultConfiguredChannel = _.hasIn(cfg?.namespaceDefaults, namespace)\n      ? cfg?.namespaceDefaults[namespace].kind\n      : cfg?.clusterDefault.kind;\n  }\n  return [defaultConfiguredChannel, defaultConfiguredChannelLoaded];\n};\n","import * as Immutable from 'immutable';\nimport {\n  NodeAffinityField,\n  PodAffinityField,\n  ResourceRequirementsField,\n  UpdateStrategyField,\n} from '@console/shared/src/components/dynamic-form/fields';\nimport {\n  CheckboxWidget,\n  ImagePullPolicyWidget,\n  NumberWidget,\n  PasswordWidget,\n  SwitchWidget,\n  TextWidget,\n  PodCountWidget,\n  SelectWidget,\n} from '@console/shared/src/components/dynamic-form/widgets';\nimport { SpecCapability } from '../types';\n\nexport const capabilityFieldMap = Immutable.Map({\n  [SpecCapability.nodeAffinity]: NodeAffinityField,\n  [SpecCapability.podAffinity]: PodAffinityField,\n  [SpecCapability.podAntiAffinity]: PodAffinityField,\n  [SpecCapability.resourceRequirements]: ResourceRequirementsField,\n  [SpecCapability.updateStrategy]: UpdateStrategyField,\n});\n\nexport const capabilityWidgetMap = Immutable.Map({\n  [SpecCapability.hidden]: 'hidden',\n  [SpecCapability.imagePullPolicy]: ImagePullPolicyWidget,\n  [SpecCapability.booleanSwitch]: SwitchWidget,\n  [SpecCapability.checkbox]: CheckboxWidget,\n  [SpecCapability.number]: NumberWidget,\n  [SpecCapability.password]: PasswordWidget,\n  [SpecCapability.podCount]: PodCountWidget,\n  [SpecCapability.text]: TextWidget,\n  [SpecCapability.select]: SelectWidget,\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RadioGroupField } from '@console/shared';\nimport { sourceSinkType } from '../../import-types';\nimport SinkResources, { SinkResourcesProps } from './SinkResources';\nimport SinkUri from './SinkUri';\n\nconst SinkUriResourcesGroup: React.FC<SinkResourcesProps> = ({ namespace, isMoveSink }) => {\n  const { t } = useTranslation();\n  return (\n    <RadioGroupField\n      name=\"formData.sinkType\"\n      options={[\n        {\n          label: sourceSinkType(t).Resource.label,\n          value: sourceSinkType(t).Resource.value,\n          activeChildren: <SinkResources namespace={namespace} isMoveSink={isMoveSink} />,\n        },\n        {\n          label: sourceSinkType(t).Uri.label,\n          value: sourceSinkType(t).Uri.value,\n          activeChildren: <SinkUri />,\n        },\n      ]}\n    />\n  );\n};\n\nexport default SinkUriResourcesGroup;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Alert,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { isEmpty } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getFieldId, ResourceDropdownField } from '@console/shared';\nimport { getDynamicChannelResourceList } from '../../../../utils/fetch-dynamic-eventsources-utils';\nimport {\n  knativeServingResourcesServices,\n  knativeEventingResourcesBroker,\n  k8sServices,\n  knativeKafkaSinks,\n} from '../../../../utils/get-knative-resources';\nimport { craftResourceKey } from '../../../pub-sub/pub-sub-utils';\nimport { SinkType } from '../../import-types';\n\nimport './SinkResources.scss';\n\nexport interface SinkResourcesProps {\n  namespace: string;\n  isMoveSink?: boolean;\n}\n\nconst SinkResources: React.FC<SinkResourcesProps> = ({ namespace, isMoveSink }) => {\n  const { t } = useTranslation();\n  const [resourceAlert, setResourceAlert] = React.useState(false);\n  const { setFieldValue, setFieldTouched, validateForm, initialValues } = useFormikContext<\n    FormikValues\n  >();\n  const [, { touched: sinkTypeTouched }] = useField('formData.sinkType');\n  const autocompleteFilter = (strText: string, item: React.ReactElement): boolean =>\n    fuzzy(strText, item?.props?.name);\n  const fieldId = getFieldId('sink-name', 'dropdown');\n  const onChange = React.useCallback(\n    (_selectedValue, valueObj) => {\n      const modelData = valueObj?.props?.model;\n      const name = valueObj?.props?.name;\n      if (name && modelData) {\n        const { apiGroup, apiVersion, kind } = modelData;\n        setFieldValue('formData.sink.name', name);\n        setFieldTouched('formData.sink.name', true);\n        setFieldValue(\n          'formData.sink.apiVersion',\n          apiGroup ? `${apiGroup}/${apiVersion}` : apiVersion,\n        );\n        setFieldTouched('formData.sink.apiVersion', true);\n        setFieldValue('formData.sink.kind', kind);\n        setFieldTouched('formData.sink.kind', true);\n        validateForm();\n      }\n    },\n    [setFieldValue, setFieldTouched, validateForm],\n  );\n  const contextAvailable = isMoveSink ? false : !!initialValues.formData.sink.name;\n  const resourcesData = [\n    ...k8sServices(namespace),\n    ...knativeServingResourcesServices(namespace),\n    ...getDynamicChannelResourceList(namespace),\n    ...knativeEventingResourcesBroker(namespace),\n    ...knativeKafkaSinks(namespace),\n  ];\n\n  const handleOnLoad = (resourceList: { [key: string]: string }) => {\n    if (isEmpty(resourceList)) {\n      setResourceAlert(true);\n      if (!sinkTypeTouched) {\n        setFieldValue('formData.sinkType', SinkType.Uri);\n        setFieldTouched('formData.sinkType', true);\n      }\n    } else {\n      setResourceAlert(false);\n    }\n  };\n\n  // filter out resource which are owned by other resource\n  const resourceFilter = ({ metadata }: K8sResourceKind) => !metadata?.ownerReferences?.length;\n\n  return (\n    <FormGroup fieldId={fieldId} isRequired>\n      {resourceAlert && (\n        <>\n          <Alert variant=\"custom\" title={t('knative-plugin~No resources available')} isInline>\n            {t(\n              'knative-plugin~Select the URI option, or exit this form and create a Knative Service, Broker, or Channel first.',\n            )}\n          </Alert>\n          &nbsp;\n        </>\n      )}\n      <ResourceDropdownField\n        menuClassName={'max-height-menu'}\n        data-test=\"sinkable-resources\"\n        name=\"formData.sink.key\"\n        resources={resourcesData}\n        dataSelector={['metadata', 'name']}\n        fullWidth\n        placeholder={t('knative-plugin~Select resource')}\n        showBadge\n        disabled={contextAvailable || resourceAlert}\n        onChange={onChange}\n        autocompleteFilter={autocompleteFilter}\n        autoSelect\n        customResourceKey={craftResourceKey}\n        resourceFilter={resourceFilter}\n        onLoad={handleOnLoad}\n      />\n\n      {!contextAvailable && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t('knative-plugin~This resource will be the sink for the Event source.')}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nexport default SinkResources;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, getFieldId } from '@console/shared';\n\nconst SinkUri: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <FormGroup fieldId={getFieldId('sink-name', 'uri')} isRequired>\n      <InputField\n        type={TextInputTypes.text}\n        name=\"formData.sink.uri\"\n        placeholder={t('knative-plugin~Enter URI')}\n        data-test-id=\"sink-section-uri\"\n        required\n      />\n\n      <FormHelperText>\n        <HelperText>\n          <HelperTextItem>\n            {t(\n              'knative-plugin~A Universal Resource Indicator where events are going to be delivered. Ex. \"http://cluster.example.com/svc\"',\n            )}\n          </HelperTextItem>\n        </HelperText>\n      </FormHelperText>\n    </FormGroup>\n  );\n};\n\nexport default SinkUri;\n","import * as yup from 'yup';\n\nexport const pubsubValidationSchema = yup.object().shape({\n  formData: yup\n    .object()\n    .shape({ metadata: yup.object().shape({ name: yup.string().required('Required') }) }),\n});\n","import * as React from 'react';\nimport { FormGroup } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { NameValueEditor } from '@console/internal/components/utils/name-value-editor';\nimport { getFieldId } from '@console/shared';\n\nconst formatFilterData = (filters) => {\n  let filterPairs = [];\n  for (const key in filters) {\n    if (filters.hasOwnProperty(key)) {\n      filterPairs = [...filterPairs, [key, filters[key]]];\n    }\n  }\n  return filterPairs;\n};\n\nconst PubSubFilter: React.FC = () => {\n  const initialValueResources = [['', '']];\n  const { setFieldValue, status, values } = useFormikContext<FormikValues>();\n  const filters = values.formData?.spec?.filter?.attributes;\n  const filterPairs = formatFilterData(filters);\n\n  const [nameValue, setNameValue] = React.useState(\n    filterPairs.length > 0 ? filterPairs : initialValueResources,\n  );\n  const { t } = useTranslation();\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      let updatedNameValuePairs = {};\n      _.forEach(nameValuePairs, ([name, value]) => {\n        if (value.length) {\n          updatedNameValuePairs = { ...updatedNameValuePairs, [name]: value };\n          return updatedNameValuePairs;\n        }\n        return updatedNameValuePairs;\n      });\n      setNameValue(nameValuePairs);\n      setFieldValue('formData.spec.filter.attributes', updatedNameValuePairs);\n    },\n    [setFieldValue],\n  );\n  return (\n    <FormGroup fieldId={getFieldId('pubsub', 'filter')} label={t('knative-plugin~Filter')} required>\n      <NameValueEditor\n        nameValuePairs={status.subscriberAvailable ? nameValue : []}\n        valueString={t('knative-plugin~Value')}\n        nameString={t('knative-plugin~Attribute')}\n        readOnly={!status.subscriberAvailable}\n        allowSorting={false}\n        updateParentData={handleNameValuePairs}\n        addString={t('knative-plugin~Add more')}\n      />\n    </FormGroup>\n  );\n};\n\nexport default PubSubFilter;\n","import * as React from 'react';\nimport { FormGroup, Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField, getFieldId } from '@console/shared';\nimport { getSinkableResources } from '../../../utils/get-knative-resources';\nimport { craftResourceKey } from '../pub-sub-utils';\n\ntype PubSubSubscriberProps = {\n  autoSelect?: boolean;\n  cancel?: () => void;\n};\n\nconst PubSubSubscriber: React.FC<PubSubSubscriberProps> = ({ autoSelect = true, cancel }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, setFieldTouched, validateForm, setStatus } = useFormikContext<\n    FormikValues\n  >();\n  const { namespace } = values.formData.metadata;\n  const [resourceAlert, setResourceAlert] = React.useState(false);\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n\n  const onSubscriberChange = React.useCallback(\n    (selectedValue, target) => {\n      const modelResource = target?.props?.model;\n      if (selectedValue) {\n        setFieldTouched('formData.spec.subscriber.ref.name', true);\n        setFieldValue('formData.spec.subscriber.ref.name', selectedValue);\n        if (modelResource) {\n          const { apiGroup = 'core', apiVersion, kind } = modelResource;\n          const sinkApiversion = `${apiGroup}/${apiVersion}`;\n          setFieldValue('formData.spec.subscriber.ref.apiVersion', sinkApiversion);\n          setFieldTouched('formData.spec.subscriber.ref.apiVersion', true);\n          setFieldValue('formData.spec.subscriber.ref.kind', kind);\n          setFieldTouched('formData.spec.subscriber.ref.kind', true);\n        }\n        validateForm();\n      }\n    },\n    [setFieldValue, setFieldTouched, validateForm],\n  );\n\n  React.useEffect(() => {\n    setStatus({ subscriberAvailable: !resourceAlert });\n  }, [resourceAlert, setStatus]);\n\n  const handleOnLoad = (resourceList: { [key: string]: string }) => {\n    setResourceAlert(_.isEmpty(resourceList));\n  };\n\n  // filter out resource which are owned by other resource\n  const resourceFilter = ({ metadata }: K8sResourceKind) => !metadata?.ownerReferences?.length;\n\n  return (\n    <FormGroup\n      fieldId={getFieldId('pubsub', 'subscriber')}\n      label={t('knative-plugin~Subscriber')}\n      isRequired\n    >\n      {resourceAlert && (\n        <>\n          <Alert variant=\"custom\" title={t('knative-plugin~No Subscriber available')} isInline>\n            <Trans t={t} ns=\"knative-plugin\">\n              {'To create a Subscriber, first create a Knative Service from the '}\n              <Link\n                to={`/add/ns/${namespace}`}\n                onClick={() => {\n                  cancel && cancel();\n                }}\n              >\n                {'Add page'}\n              </Link>\n              .\n            </Trans>\n          </Alert>\n          &nbsp;\n        </>\n      )}\n      <ResourceDropdownField\n        name=\"formData.spec.subscriber.ref.name\"\n        resources={getSinkableResources(namespace)}\n        dataSelector={['metadata', 'name']}\n        fullWidth\n        required\n        placeholder={t('knative-plugin~Select Subscriber')}\n        showBadge\n        autocompleteFilter={autocompleteFilter}\n        onChange={onSubscriberChange}\n        customResourceKey={craftResourceKey}\n        disabled={resourceAlert}\n        resourceFilter={resourceFilter}\n        onLoad={handleOnLoad}\n        autoSelect={autoSelect}\n      />\n    </FormGroup>\n  );\n};\n\nexport default PubSubSubscriber;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { LoadingBox, PageHeading } from '@console/internal/components/utils';\nimport { useEventSourceStatus } from '../../hooks';\nimport { CamelKameletBindingModel } from '../../models';\nimport ConnectedEventSource from './EventSource';\nimport EventSourceAlert from './EventSourceAlert';\n\nconst EventSourcePage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sourceKindProp = searchParams.get('sourceKind');\n  const kameletName = sourceKindProp && searchParams.get('name');\n  const isKameletSource = kameletName && sourceKindProp === CamelKameletBindingModel.kind;\n  const {\n    isValidSource,\n    createSourceAccessLoading,\n    createSourceAccess,\n    loaded,\n    normalizedSource,\n    kamelet,\n  } = useEventSourceStatus(namespace, sourceKindProp, kameletName);\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('knative-plugin~Event Source')}</title>\n      </Helmet>\n      <PageHeading title={t('knative-plugin~Create Event Source')}>\n        {t(\n          'knative-plugin~Create an Event source to register interest in a class of events from a particular system. Configure using YAML and form views.',\n        )}\n      </PageHeading>\n\n      {loaded ? (\n        <EventSourceAlert\n          isValidSource={isValidSource}\n          createSourceAccessLoading={createSourceAccessLoading}\n          createSourceAccess={createSourceAccess}\n        />\n      ) : (\n        <LoadingBox />\n      )}\n      {loaded && isValidSource && !createSourceAccessLoading && createSourceAccess && (\n        <ConnectedEventSource\n          namespace={namespace}\n          normalizedSource={normalizedSource}\n          selectedApplication={searchParams.get(QUERY_PROPERTIES.APPLICATION)}\n          contextSource={searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n          sourceKind={sourceKindProp}\n          kameletSource={isKameletSource && kamelet}\n        />\n      )}\n    </NamespacedPage>\n  );\n};\n\nexport default EventSourcePage;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { KnEventCatalogMetaData } from './import-types';\n\nimport './KnEventMetaDescription.scss';\n\ntype KnEventMetaDescriptionProps = {\n  normalizedData: KnEventCatalogMetaData;\n};\n\nconst KnEventMetaDescription: React.FC<KnEventMetaDescriptionProps> = ({ normalizedData }) => {\n  const { t } = useTranslation();\n  if (_.isEmpty(normalizedData)) {\n    return null;\n  }\n  const { name, provider, iconUrl, description } = normalizedData;\n  return (\n    <div className=\"kn-event-metadata-description__container\">\n      <div className=\"co-clusterserviceversion-logo\">\n        <div className=\"co-clusterserviceversion-logo__icon\">\n          <span className=\"co-catalog-item-icon__bg\">\n            <img\n              className=\"co-catalog-item-icon__img co-catalog-item-icon__img--large\"\n              src={iconUrl}\n              alt={name}\n              aria-hidden\n            />\n          </span>\n        </div>\n        <div className=\"co-clusterserviceversion-logo__name\">\n          <h1 className=\"co-clusterserviceversion-logo__name__clusterserviceversion\">{name}</h1>\n          {provider && (\n            <span className=\"co-clusterserviceversion-logo__name__provider text-muted\">\n              {t('knative-plugin~Provided by {{provider}}', {\n                provider,\n              })}\n            </span>\n          )}\n        </div>\n      </div>\n      {description}\n    </div>\n  );\n};\n\nexport default KnEventMetaDescription;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { PageHeading } from '@console/internal/components/utils';\nimport { useChannelList } from '../../utils/create-channel-utils';\nimport AddChannel from './channels/AddChannel';\n\nconst EventingChannelPage: React.FC = () => {\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const channels = useChannelList(namespace);\n  const { t } = useTranslation();\n  const searchParams = new URLSearchParams(location.search);\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('knative-plugin~Channel')}</title>\n      </Helmet>\n      <PageHeading title={t('knative-plugin~Channel')}>\n        {t(\n          'knative-plugin~Create a Knative Channel to create an event forwarding and persistence layer with in-memory and reliable implementations',\n        )}\n      </PageHeading>\n      <AddChannel\n        namespace={namespace}\n        channels={channels}\n        selectedApplication={searchParams.get(QUERY_PROPERTIES.APPLICATION)}\n        contextSource={searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n      />\n    </NamespacedPage>\n  );\n};\n\nexport default EventingChannelPage;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport QueryFocusApplication from '@console/dev-console/src/components/QueryFocusApplication';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { PageHeading } from '@console/internal/components/utils';\nimport AddBroker from './brokers/AddBroker';\n\nconst EventingBrokerPage: React.FC = () => {\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const { t } = useTranslation();\n  const searchParams = new URLSearchParams(location.search);\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('knative-plugin~Broker')}</title>\n      </Helmet>\n      <PageHeading title={t('knative-plugin~Broker')}>\n        {t(\n          'knative-plugin~Create a Broker to define an event mesh for collecting a pool of events and route those events based on attributes, through triggers',\n        )}\n      </PageHeading>\n      <QueryFocusApplication>\n        {(selectedApplication) => (\n          <AddBroker\n            namespace={namespace}\n            selectedApplication={selectedApplication}\n            contextSource={searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n          />\n        )}\n      </QueryFocusApplication>\n    </NamespacedPage>\n  );\n};\n\nexport default EventingBrokerPage;\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { UNASSIGNED_APPLICATIONS_KEY } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils';\nimport { EventingBrokerModel } from '../../../models';\nimport { LABEL_PART_OF, EVENT_BROKER_APP, DEFAULT_BROKER_NAME } from '../const';\nimport { AddBrokerFormYamlValues, BrokerFormData } from '../import-types';\n\nexport const convertFormToBrokerYaml = (formData: BrokerFormData): K8sResourceKind => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { selectedKey, name: appName = null },\n    spec = {},\n  } = formData;\n\n  return {\n    apiVersion: apiVersionForModel(EventingBrokerModel),\n    kind: EventingBrokerModel.kind,\n    metadata: {\n      name,\n      namespace,\n      ...(appName &&\n        selectedKey !== UNASSIGNED_APPLICATIONS_KEY && {\n          labels: {\n            [LABEL_PART_OF]: appName,\n          },\n        }),\n    },\n    spec,\n  };\n};\n\nexport const addBrokerInitialValues = (\n  namespace: string,\n  selectedApplication: string,\n): AddBrokerFormYamlValues => {\n  const initialFormData: BrokerFormData = {\n    name: DEFAULT_BROKER_NAME,\n    spec: {},\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(selectedApplication),\n      name: sanitizeApplicationValue(selectedApplication) || EVENT_BROKER_APP,\n      selectedKey: selectedApplication || '',\n    },\n  };\n  const initialYamlData: string = safeJSToYAML(\n    convertFormToBrokerYaml(initialFormData),\n    'yamlData',\n    {\n      skipInvalid: true,\n    },\n  );\n  return {\n    showCanUseYAMLMessage: true,\n    editorType: EditorType.Form,\n    yamlData: initialYamlData,\n    formData: initialFormData,\n  };\n};\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { QUERY_PROPERTIES } from '@console/dev-console/src/const';\nimport { LoadingBox, PageHeading } from '@console/internal/components/utils';\nimport { useEventSinkStatus } from '../../hooks/useEventSinkStatus';\nimport EventSink from './EventSink';\nimport EventSinkAlert from './EventSinkAlert';\n\nconst EventSinkPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sinkKindProp = searchParams.get('sinkKind');\n  const kameletName = sinkKindProp && searchParams.get('name');\n  const {\n    isValidSink,\n    createSinkAccessLoading,\n    createSinkAccess,\n    loaded,\n    normalizedSink,\n    kamelet,\n  } = useEventSinkStatus(namespace, sinkKindProp, kameletName);\n\n  if (!loaded) {\n    return <LoadingBox />;\n  }\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('knative-plugin~Event Sink')}</title>\n      </Helmet>\n      <PageHeading title={t('knative-plugin~Create Event Sink')}>\n        {t(\n          'knative-plugin~Create an Event sink to receive incoming events from a particular source. Configure using YAML and form views.',\n        )}\n      </PageHeading>\n      {loaded && isValidSink && !createSinkAccessLoading && createSinkAccess ? (\n        <EventSink\n          namespace={namespace}\n          normalizedSink={normalizedSink}\n          selectedApplication={searchParams.get(QUERY_PROPERTIES.APPLICATION)}\n          contextSource={searchParams.get(QUERY_PROPERTIES.CONTEXT_SOURCE)}\n          sinkKind={sinkKindProp}\n          kameletSink={kamelet}\n        />\n      ) : (\n        <EventSinkAlert\n          isValidSink={isValidSink}\n          createSinkAccessLoading={createSinkAccessLoading}\n          createSinkAccess={createSinkAccess}\n        />\n      )}\n    </NamespacedPage>\n  );\n};\n\nexport default EventSinkPage;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useParams } from 'react-router-dom-v5-compat';\nimport NamespacedPage, {\n  NamespacedPageVariants,\n} from '@console/dev-console/src/components/NamespacedPage';\nimport { PageHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  SUBSCRIBE_PROVIDER_API_VERSION_PARAM,\n  SUBSCRIBE_PROVIDER_KIND_PARAM,\n  SUBSCRIBE_PROVIDER_NAME_PARAM,\n} from '../../../const';\nimport Subscribe from './Subscribe';\n\nconst SubscribePage: React.FC = () => {\n  const { t } = useTranslation();\n  const { ns: namespace } = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const subscribeApiVersion = searchParams.get(SUBSCRIBE_PROVIDER_API_VERSION_PARAM);\n  const subscribeKind = searchParams.get(SUBSCRIBE_PROVIDER_KIND_PARAM);\n  const subscribeName = searchParams.get(SUBSCRIBE_PROVIDER_NAME_PARAM);\n\n  const source: K8sResourceKind = {\n    kind: subscribeKind,\n    apiVersion: subscribeApiVersion,\n    metadata: {\n      namespace,\n      name: subscribeName,\n    },\n  };\n\n  return (\n    <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n      <Helmet>\n        <title>{t('knative-plugin~Subscribe')}</title>\n      </Helmet>\n      <PageHeading title={t('knative-plugin~Subscribe')}>\n        {t('knative-plugin~Subscribe to')} {subscribeApiVersion} {subscribeKind} {namespace}/\n        {subscribeName}\n      </PageHeading>\n      <Subscribe source={source} />\n    </NamespacedPage>\n  );\n};\n\nexport default SubscribePage;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n  k8sCreate,\n  getGroupVersionKind,\n} from '@console/internal/module/k8s';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ALL_APPLICATIONS_KEY, usePerspectives } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { KNATIVE_EVENT_SOURCE_APIGROUP } from '../../const';\nimport { CamelKameletBindingModel } from '../../models';\nimport {\n  getCatalogEventSourceResource,\n  isKnownEventSource,\n  getEventSourceData,\n  handleRedirect,\n  getKameletSourceData,\n  getEventSourceResource,\n} from '../../utils/create-eventsources-utils';\nimport { getEventSourceModels } from '../../utils/fetch-dynamic-eventsources-utils';\nimport { craftResourceKey } from '../pub-sub/pub-sub-utils';\nimport { EVENT_SOURCES_APP } from './const';\nimport { eventSourceValidationSchema } from './eventSource-validation-utils';\nimport EventSourceForm from './EventSourceForm';\nimport {\n  EventSourceSyncFormData,\n  SinkType,\n  KnEventCatalogMetaData,\n  EventSourceFormData,\n} from './import-types';\nimport KnEventMetaDescription from './KnEventMetaDescription';\n\ninterface EventSourceProps {\n  namespace: string;\n  normalizedSource: KnEventCatalogMetaData;\n  contextSource?: string;\n  selectedApplication?: string;\n  sourceKind?: string;\n  kameletSource?: K8sResourceKind;\n}\n\ninterface StateProps {\n  activeApplication: string;\n}\n\ntype Props = EventSourceProps & StateProps;\n\nexport const EventSource: React.FC<Props> = ({\n  namespace,\n  normalizedSource,\n  activeApplication,\n  contextSource,\n  sourceKind = '',\n  kameletSource,\n}) => {\n  const perpectiveExtension = usePerspectives();\n  const [perspective] = useActivePerspective();\n  const { t } = useTranslation();\n  let sourceData = {};\n  let selApiVersion = '';\n  let selSourceName = '';\n  let kameletSourceName = '';\n  if (sourceKind) {\n    const selDataModel = _.find(getEventSourceModels(), { kind: sourceKind });\n    selApiVersion = selDataModel\n      ? `${selDataModel?.apiGroup}/${selDataModel?.apiVersion}`\n      : kameletSource\n      ? `${CamelKameletBindingModel.apiGroup}/${CamelKameletBindingModel.apiVersion}`\n      : `${KNATIVE_EVENT_SOURCE_APIGROUP}/v1alpha2`;\n    sourceData = isKnownEventSource(sourceKind)\n      ? kameletSource\n        ? { [sourceKind]: getKameletSourceData(kameletSource) }\n        : { [sourceKind]: getEventSourceData(sourceKind) }\n      : {};\n    kameletSourceName = kameletSource && kameletSource.metadata.name;\n    selSourceName = kameletSourceName ? `kamelet-${kameletSourceName}` : _.kebabCase(sourceKind);\n  }\n  const [sinkGroupVersionKind = '', sinkName = ''] = contextSource?.split('/') ?? [];\n  const [sinkGroup = '', sinkVersion = '', sinkKind = ''] =\n    getGroupVersionKind(sinkGroupVersionKind) ?? [];\n  const sinkApiVersion = sinkGroup ? `${sinkGroup}/${sinkVersion}` : '';\n\n  const eventSourceMetaDescription = <KnEventMetaDescription normalizedData={normalizedSource} />;\n\n  const initialFormData: EventSourceFormData = {\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(activeApplication),\n      name: sanitizeApplicationValue(activeApplication) || EVENT_SOURCES_APP,\n      selectedKey: activeApplication,\n    },\n    name: selSourceName,\n    apiVersion: selApiVersion,\n    sinkType: SinkType.Resource,\n    sink: {\n      apiVersion: sinkApiVersion,\n      kind: sinkKind,\n      name: sinkName,\n      key: craftResourceKey(sinkName, {\n        kind: sinkKind,\n        apiVersion: `${sinkGroup}/${sinkVersion}`,\n      }),\n      uri: '',\n    },\n    type: sourceKind,\n    data: sourceData,\n  };\n\n  const initialYamlData: string = safeJSToYAML(\n    getEventSourceResource(initialFormData),\n    'yamlData',\n    {\n      skipInvalid: true,\n      noRefs: true,\n    },\n  );\n\n  const catalogInitialValues: EventSourceSyncFormData = {\n    editorType: EditorType.Form,\n    showCanUseYAMLMessage: true,\n    formData: initialFormData,\n    yamlData: initialYamlData,\n  };\n\n  const createResources = (rawFormData: any): Promise<K8sResourceKind> => {\n    const knEventSourceResource = getCatalogEventSourceResource(rawFormData);\n    if (knEventSourceResource?.kind && modelFor(referenceFor(knEventSourceResource))) {\n      return k8sCreate(modelFor(referenceFor(knEventSourceResource)), knEventSourceResource);\n    }\n    const errMessage =\n      knEventSourceResource?.kind && knEventSourceResource?.apiVersion\n        ? t('knative-plugin~No model registered for {{referenceForKnEventSource}}', {\n            referenceForKnEventSource: referenceFor(knEventSourceResource),\n          })\n        : t('knative-plugin~Invalid YAML');\n    return Promise.reject(new Error(errMessage));\n  };\n\n  const handleSubmit = (values, actions) => {\n    const {\n      formData: {\n        project: { name: projectName },\n      },\n    } = values;\n    const eventSrcRequest: Promise<K8sResourceKind> = createResources(values);\n\n    return eventSrcRequest\n      .then(() => {\n        handleRedirect(projectName, perspective, perpectiveExtension);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={catalogInitialValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validateOnBlur={false}\n      validateOnChange={false}\n      validationSchema={eventSourceValidationSchema(t)}\n    >\n      {(formikProps) => (\n        <EventSourceForm\n          {...formikProps}\n          namespace={namespace}\n          eventSourceMetaDescription={eventSourceMetaDescription}\n          kameletSource={kameletSource}\n        />\n      )}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state: RootState, ownProps: EventSourceProps): StateProps => {\n  const activeApplication = ownProps.selectedApplication || getActiveApplication(state);\n  return {\n    activeApplication: activeApplication !== ALL_APPLICATIONS_KEY ? activeApplication : '',\n  };\n};\n\nexport default connect(mapStateToProps)(EventSource);\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  FormFooter,\n  SyncedEditorField,\n  CodeEditorField,\n  FlexForm,\n  FormBody,\n} from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport {\n  getCatalogEventSourceResource,\n  sanitizeSourceToForm,\n} from '../../utils/create-eventsources-utils';\nimport EventSourceSection from './event-sources/EventSourceSection';\nimport { EventSourceSyncFormData } from './import-types';\n\ninterface OwnProps {\n  namespace: string;\n  eventSourceMetaDescription: React.ReactNode;\n  kameletSource?: K8sResourceKind;\n}\n\nconst EventSourceForm: React.FC<FormikProps<FormikValues> & OwnProps> = ({\n  errors,\n  values,\n  handleSubmit,\n  handleReset,\n  setFieldValue,\n  status,\n  isSubmitting,\n  dirty,\n  namespace,\n  eventSourceMetaDescription,\n  kameletSource,\n}) => {\n  const { t } = useTranslation();\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'knative.eventSourceForm.editor.lastView';\n  const yamlEditor = <CodeEditorField name=\"yamlData\" showSamples onSave={handleSubmit} />;\n\n  const sanitizeToYaml = () =>\n    safeJSToYAML(getCatalogEventSourceResource(values as EventSourceSyncFormData), 'yamlData', {\n      skipInvalid: true,\n      noRefs: true,\n    });\n\n  const formEditor = (\n    <div className=\"row\">\n      <div className=\"col-sm-12 col-md-4 col-md-push-8 col-lg-5 col-lg-push-7\">\n        {eventSourceMetaDescription}\n      </div>\n      <div className=\"col-sm-12 col-md-8 col-md-pull-4 col-lg-7 col-lg-pull-5\">\n        {values.showCanUseYAMLMessage && (\n          <Alert\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setFieldValue('showCanUseYAMLMessage', false)}\n              />\n            }\n            isInline\n            title={t(\n              'knative-plugin~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control of object creation.',\n            )}\n            variant=\"info\"\n          />\n        )}\n        <EventSourceSection namespace={namespace} kameletSource={kameletSource} fullWidth />{' '}\n      </div>\n    </div>\n  );\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <SyncedEditorField\n          name=\"editorType\"\n          formContext={{\n            name: 'formData',\n            editor: formEditor,\n            sanitizeTo: (newFormData: K8sResourceKind) =>\n              sanitizeSourceToForm(newFormData, values.formData, kameletSource),\n          }}\n          yamlContext={{ name: 'yamlData', editor: yamlEditor, sanitizeTo: sanitizeToYaml }}\n          lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n        />\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('knative-plugin~Create')}\n        disableSubmit={\n          (values.editorType === EditorType.YAML ? !dirty : !dirty || !_.isEmpty(errors)) ||\n          isSubmitting\n        }\n        resetLabel={t('knative-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default EventSourceForm;\n","import * as React from 'react';\nimport { TextVariants, Text } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport AppSection from '@console/dev-console/src/components/import/app/AppSection';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ProjectModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { descriptorsToUISchema } from '@console/operator-lifecycle-manager/src/components/operand/utils';\nimport { DynamicFormField, useFormikValidationFix } from '@console/shared';\nimport { formDescriptorData } from '../../../utils/create-eventsources-utils';\nimport { EventSources } from '../import-types';\nimport ApiServerSection from './ApiServerSection';\nimport ContainerSourceSection from './ContainerSourceSection';\nimport KafkaSourceSection from './KafkaSourceSection';\nimport PingSourceSection from './PingSourceSection';\nimport SinkBindingSection from './SinkBindingSection';\nimport SinkSection from './SinkSection';\n\ninterface EventSourceSectionProps {\n  namespace: string;\n  fullWidth?: boolean;\n  kameletSource?: K8sResourceKind;\n}\n\nconst EventSourceSection: React.FC<EventSourceSectionProps> = ({\n  namespace,\n  fullWidth = false,\n  kameletSource,\n}) => {\n  const { values } = useFormikContext<FormikValues>();\n  const projectResource = { kind: ProjectModel.kind, prop: ProjectModel.id, isList: true };\n  const [data, loaded] = useK8sWatchResource<K8sResourceKind[]>(projectResource);\n  useFormikValidationFix(values);\n  const formSchema: JSONSchema7 = React.useMemo(\n    () => ({\n      type: 'object',\n      required: kameletSource?.spec?.definition?.required,\n      properties: kameletSource?.spec?.definition?.properties,\n    }),\n    [kameletSource],\n  );\n\n  if (!values.formData.type) {\n    return null;\n  }\n  const defaultFormSection = (\n    <>\n      <SinkSection namespace={namespace} fullWidth={fullWidth} />\n      <AppSection\n        project={values.formData.project}\n        noProjectsAvailable={loaded && _.isEmpty(data)}\n        extraMargin\n        subPath=\"formData\"\n        fullWidth={fullWidth}\n      />\n    </>\n  );\n  let EventSource: React.ReactElement;\n  const sectionTitle = values.formData.data?.itemData?.title ?? values.formData.type;\n  switch (values.formData.type) {\n    case EventSources.SinkBinding:\n      EventSource = <SinkBindingSection title={sectionTitle} fullWidth={fullWidth} />;\n      break;\n    case EventSources.ApiServerSource:\n      EventSource = <ApiServerSection title={sectionTitle} fullWidth={fullWidth} />;\n      break;\n    case EventSources.KafkaSource:\n      EventSource = (\n        <KafkaSourceSection title={sectionTitle} fullWidth={fullWidth} namespace={namespace} />\n      );\n      break;\n    case EventSources.ContainerSource:\n      EventSource = <ContainerSourceSection title={sectionTitle} fullWidth={fullWidth} />;\n      break;\n    case EventSources.PingSource:\n      EventSource = <PingSourceSection title={sectionTitle} fullWidth={fullWidth} />;\n      break;\n    case EventSources.KameletBinding:\n      EventSource = kameletSource && (\n        <>\n          <Text component={TextVariants.h2}>{kameletSource.spec?.definition?.title}</Text>\n          <DynamicFormField\n            name=\"formData.data.KameletBinding.source.properties\"\n            schema={formSchema}\n            uiSchema={descriptorsToUISchema(formDescriptorData(formSchema.properties), formSchema)}\n            showAlert={false}\n          />\n        </>\n      );\n      break;\n    default:\n      EventSource = null;\n  }\n  return (\n    <>\n      {EventSource}\n      {defaultFormSection}\n    </>\n  );\n};\n\nexport default EventSourceSection;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { AsyncComponent } from '@console/internal/components/utils/async';\nimport { DropdownField, getFieldId } from '@console/shared';\nimport ServiceAccountDropdown from '../../dropdowns/ServiceAccountDropdown';\nimport { EventSources } from '../import-types';\n\ninterface ApiServerSectionProps {\n  title: string;\n  fullWidth?: boolean;\n}\n\nconst ApiServerSection: React.FC<ApiServerSectionProps> = ({ title, fullWidth }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const defaultInitvalue = values?.formData?.data?.[EventSources.ApiServerSource] || {};\n  const initVal = defaultInitvalue?.resources || [];\n  const initialValueResources = !_.isEmpty(initVal)\n    ? initVal.map((val) => _.values(val))\n    : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialValueResources);\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      const updatedNameValuePairs = _.compact(\n        nameValuePairs.map(([name, value]) => {\n          if (value.length) {\n            return { apiVersion: name, kind: value };\n          }\n          return null;\n        }),\n      );\n      setNameValue(nameValuePairs);\n      setFieldValue(\n        `formData.data.${EventSources.ApiServerSource}.resources`,\n        updatedNameValuePairs,\n      );\n    },\n    [setFieldValue],\n  );\n  const modeItems = {\n    Reference: 'Reference',\n    Resource: 'Resource',\n  };\n  const fieldId = getFieldId(values.type, 'res-input');\n  const onloadData = (items) => {\n    if (\n      defaultInitvalue?.serviceAccountName &&\n      !Object.keys(items).includes(defaultInitvalue.serviceAccountName)\n    ) {\n      setFieldValue(`formData.data.${EventSources.ApiServerSource}.serviceAccountName`, '');\n      setFieldTouched(`formData.data.${EventSources.ApiServerSource}.serviceAccountName`, true);\n    }\n  };\n  return (\n    <FormSection title={title} extraMargin fullWidth={fullWidth} dataTest={`${title} section`}>\n      <FormGroup fieldId={fieldId} label={t('knative-plugin~Resource')} isRequired>\n        <AsyncComponent\n          loader={() =>\n            import('@console/internal/components/utils/name-value-editor').then(\n              (c) => c.NameValueEditor,\n            )\n          }\n          nameValuePairs={nameValue}\n          valueString=\"kind\"\n          nameString=\"apiVersion\"\n          addString={t('knative-plugin~Add resource')}\n          readOnly={false}\n          allowSorting={false}\n          updateParentData={handleNameValuePairs}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>{t('knative-plugin~The list of resources to watch.')}</HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n      <DropdownField\n        name={`formData.data.${EventSources.ApiServerSource}.mode`}\n        label={t('knative-plugin~Mode')}\n        items={modeItems}\n        title={modeItems.Reference}\n        helpText={t('knative-plugin~The mode the receive adapter controller runs under')}\n        fullWidth\n      />\n      <ServiceAccountDropdown\n        name={`formData.data.${EventSources.ApiServerSource}.serviceAccountName`}\n        onLoad={onloadData}\n      />\n    </FormSection>\n  );\n};\n\nexport default ApiServerSection;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdownField } from '@console/shared';\nimport { ResourceDropdownItems } from '@console/shared/src/components/dropdown/ResourceDropdown';\n\ninterface ServiceAccountDropdownProps {\n  name: string;\n  onLoad?: (items: ResourceDropdownItems) => void;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst ServiceAccountDropdown: React.FC<ServiceAccountDropdownProps & StateProps> = ({\n  name,\n  onLoad,\n  namespace,\n}) => {\n  const { t } = useTranslation();\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const resources = [\n    {\n      isList: true,\n      kind: ServiceAccountModel.kind,\n      namespace,\n      prop: ServiceAccountModel.id,\n      optional: true,\n    },\n  ];\n  return (\n    <ResourceDropdownField\n      name={name}\n      label={t('knative-plugin~Service Account name')}\n      resources={resources}\n      dataSelector={['metadata', 'name']}\n      placeholder={t('knative-plugin~Select a Service Account name')}\n      autocompleteFilter={autocompleteFilter}\n      helpText={t('knative-plugin~The name of Service Account use to run this')}\n      fullWidth\n      onLoad={onLoad}\n      showBadge\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, ServiceAccountDropdownProps>(mapStateToProps)(\n  ServiceAccountDropdown,\n);\n","import * as React from 'react';\nimport {\n  TextInputTypes,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { getSuggestedName } from '@console/dev-console/src/utils/imagestream-utils';\nimport { AsyncComponent } from '@console/internal/components/utils';\nimport { InputField, TextColumnField } from '@console/shared';\nimport { EventSources } from '../import-types';\n\nconst templateSpec = `formData.data.${EventSources.ContainerSource}.template.spec.containers[0]`;\nconst containerPaths = {\n  Image: `${templateSpec}.image`,\n  Name: `${templateSpec}.name`,\n  Env: `${templateSpec}.env`,\n  Args: `${templateSpec}.args`,\n};\n\ninterface ContainerSourceSectionProps {\n  title: string;\n  fullWidth?: boolean;\n}\n\nconst ContainerSourceSection: React.FC<ContainerSourceSectionProps> = ({ title, fullWidth }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const {\n    formData: {\n      data: {\n        [EventSources.ContainerSource]: {\n          template: {\n            spec: {\n              containers: [{ env: envs, args }],\n            },\n          },\n        },\n      },\n    },\n  } = values;\n  const initialEnvValues = !_.isEmpty(envs) ? _.map(envs, (env) => _.values(env)) : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialEnvValues);\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      const updatedNameValuePairs = _.compact(\n        nameValuePairs.map(([name, value]) => (value.length ? { name, value } : null)),\n      );\n      setNameValue(nameValuePairs);\n      setFieldValue(containerPaths.Env, updatedNameValuePairs);\n    },\n    [setFieldValue],\n  );\n  return (\n    <FormSection title={title} extraMargin fullWidth={fullWidth} dataTest={`${title} section`}>\n      <h3 className=\"co-section-heading-tertiary\">{t('knative-plugin~Container')}</h3>\n      <InputField\n        data-test-id=\"container-image-field\"\n        type={TextInputTypes.text}\n        name={containerPaths.Image}\n        label={t('knative-plugin~Image')}\n        helpText={t('knative-plugin~The Image to run inside of the Container')}\n        required\n        onChange={(e) => {\n          setFieldValue(containerPaths.Name, getSuggestedName(e.target.value));\n        }}\n      />\n      <InputField\n        data-test-id=\"container-name-field\"\n        type={TextInputTypes.text}\n        name={containerPaths.Name}\n        label={t('knative-plugin~Name')}\n        helpText={t('knative-plugin~The name of the Image')}\n      />\n      <TextColumnField\n        data-test-id=\"container-arg-field\"\n        name={containerPaths.Args}\n        label={t('knative-plugin~Arguments')}\n        addLabel={t('knative-plugin~Add args')}\n        placeholder={t('knative-plugin~argument')}\n        helpText={t('knative-plugin~Arguments passed to the Container')}\n        disableDeleteRow={args?.length === 1}\n      />\n      <FormGroup fieldId=\"containersource-env\" label={t('knative-plugin~Environment variables')}>\n        <AsyncComponent\n          loader={() =>\n            import('@console/internal/components/utils/name-value-editor').then(\n              (c) => c.NameValueEditor,\n            )\n          }\n          data-test-id=\"container-env-field\"\n          nameValuePairs={nameValue}\n          valueString={t('knative-plugin~Value')}\n          nameString={t('knative-plugin~Name')}\n          readOnly={false}\n          allowSorting={false}\n          updateParentData={handleNameValuePairs}\n          addLabel={t('knative-plugin~Add more')}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t('knative-plugin~The list of variables to set in the Container.')}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default ContainerSourceSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { InputField, MultiTypeaheadField, SelectInputOption } from '@console/shared';\nimport { useBootstrapServers } from '../../../hooks';\nimport { kafkaTopicsResourcesWatcher } from '../../../utils/get-knative-resources';\nimport { EventSources } from '../import-types';\nimport KafkaSourceNetSection from './KafkaSourceNetSection';\n\ninterface KafkaSourceSectionProps {\n  title: string;\n  namespace: string;\n  fullWidth?: boolean;\n}\n\nconst KafkaSourceSection: React.FC<KafkaSourceSectionProps> = ({ title, namespace, fullWidth }) => {\n  const { t } = useTranslation();\n  const [bootstrapServers, bsPlaceholder] = useBootstrapServers(namespace);\n  const { kafkatopics } = useK8sWatchResources<{\n    [key: string]: K8sResourceKind[];\n  }>(kafkaTopicsResourcesWatcher());\n\n  const [kafkaTopics, ktPlaceholder] = React.useMemo(() => {\n    let topicsOptions: SelectInputOption[] = [];\n    let placeholder: string = '';\n    if (kafkatopics.loaded && !kafkatopics.loadError) {\n      topicsOptions = !_.isEmpty(kafkatopics.data)\n        ? _.map(kafkatopics.data, (kt) => ({\n            value: kt?.metadata.name,\n            disabled: false,\n          }))\n        : [\n            {\n              value: t('knative-plugin~No topics found'),\n              disabled: true,\n            },\n          ];\n      placeholder = t('knative-plugin~Add topics');\n    } else if (kafkatopics.loadError) {\n      placeholder = t('knative-plugin~{{kafkaTopicErrorMessage}}. Try adding topics manually.', {\n        kafkaTopicErrorMessage: kafkatopics.loadError.message,\n      });\n    } else {\n      topicsOptions = [{ value: t('knative-plugin~Loading topics...'), disabled: true }];\n      placeholder = '...';\n    }\n    return [topicsOptions, placeholder];\n  }, [kafkatopics.loaded, kafkatopics.loadError, kafkatopics.data, t]);\n\n  return (\n    <FormSection title={title} extraMargin fullWidth={fullWidth}>\n      <MultiTypeaheadField\n        data-test-id=\"kafkasource-bootstrapservers-field\"\n        name={`formData.data.${EventSources.KafkaSource}.bootstrapServers`}\n        label={t('knative-plugin~Bootstrap servers')}\n        ariaLabel={t('knative-plugin~Bootstrap servers')}\n        options={bootstrapServers}\n        placeholderText={bsPlaceholder}\n        helpText={t('knative-plugin~The address of the Kafka broker')}\n        isCreatable\n        required\n      />\n      <MultiTypeaheadField\n        data-test-id=\"kafkasource-topics-field\"\n        name={`formData.data.${EventSources.KafkaSource}.topics`}\n        label={t('knative-plugin~Topics')}\n        ariaLabel={t('knative-plugin~Topics')}\n        options={kafkaTopics}\n        placeholderText={ktPlaceholder}\n        helpText={t('knative-plugin~Virtual groups across Kafka brokers')}\n        isCreatable\n        required\n      />\n      <InputField\n        data-test-id=\"kafkasource-consumergroup-field\"\n        type={TextInputTypes.text}\n        name={`formData.data.${EventSources.KafkaSource}.consumerGroup`}\n        label={t('knative-plugin~Consumer group')}\n        helpText={t('knative-plugin~A group that tracks maximum offset consumed')}\n        required\n      />\n      <KafkaSourceNetSection />\n    </FormSection>\n  );\n};\n\nexport default KafkaSourceSection;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField } from '@console/shared';\nimport { EventSources } from '../import-types';\nimport SecretKeySelector from '../SecretKeySelector';\n\nconst KafkaSourceNetSection: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      formData: { data },\n    },\n  } = useFormikContext<FormikValues>();\n  const kafkaSource = EventSources.KafkaSource;\n  const saslEnable = data?.[kafkaSource]?.net?.sasl?.enable;\n  const tlsEnable = data?.[kafkaSource]?.net?.tls?.enable;\n\n  return (\n    <>\n      <h3 className=\"co-section-heading-tertiary\">Net</h3>\n      <CheckboxField\n        data-test-id=\"kafkasource-sasl-field\"\n        name={`formData.data.${kafkaSource}.net.sasl.enable`}\n        formLabel=\"SASL\"\n        label={t('knative-plugin~Enable')}\n      />\n      {saslEnable && (\n        <>\n          <SecretKeySelector\n            name={`formData.data.${kafkaSource}.net.sasl.user.secretKeyRef`}\n            label=\"User\"\n          />\n          <SecretKeySelector\n            name={`formData.data.${kafkaSource}.net.sasl.password.secretKeyRef`}\n            label={t('knative-plugin~Password')}\n          />\n        </>\n      )}\n      <CheckboxField\n        data-test-id=\"kafkasource-tls-field\"\n        name={`formData.data.${kafkaSource}.net.tls.enable`}\n        formLabel=\"TLS\"\n        label={t('knative-plugin~Enable')}\n      />\n      {tlsEnable && (\n        <>\n          <SecretKeySelector\n            name={`formData.data.${kafkaSource}.net.tls.caCert.secretKeyRef`}\n            label={t('knative-plugin~CA certificate')}\n          />\n          <SecretKeySelector\n            name={`formData.data.${kafkaSource}.net.tls.cert.secretKeyRef`}\n            label={t('knative-plugin~Certificate')}\n          />\n          <SecretKeySelector\n            name={`formData.data.${kafkaSource}.net.tls.key.secretKeyRef`}\n            label=\"Key\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default KafkaSourceNetSection;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport { connect } from 'react-redux';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport { ValueFromPair } from '@console/internal/components/utils/value-from-pair';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { RedExclamationCircleIcon, getFieldId, useFormikValidationFix } from '@console/shared';\n\ninterface SecretKeySelectorProps {\n  name: string;\n  label: string;\n  isRequired?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst SecretKeySelector: React.FC<SecretKeySelectorProps & StateProps> = ({\n  name,\n  label,\n  namespace,\n  isRequired = false,\n}) => {\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [field, { touched, error }] = useField(name);\n  const [secrets, setSecrets] = React.useState({});\n  const fieldId = getFieldId(name, 'secret-key-input');\n  const isValid = !(touched && error);\n\n  const getErrorMessage = (err: string | { name?: string; key?: string }): string => {\n    let errMsg = '';\n    if (typeof err === 'string') {\n      errMsg = err;\n    } else {\n      errMsg = err?.name || err?.key;\n    }\n    return errMsg;\n  };\n  const errorMessage = !isValid ? getErrorMessage(error) : '';\n\n  useFormikValidationFix(field.value);\n\n  React.useEffect(() => {\n    k8sGet(SecretModel, null, namespace)\n      .then((nsSecrets) => {\n        setSecrets(nsSecrets);\n      })\n      .catch((err) => {\n        if (err?.response?.status !== 403) {\n          errorModal({ error: err?.message });\n        }\n      });\n  }, [namespace]);\n\n  return (\n    <FormGroup fieldId={fieldId} label={label} isRequired={isRequired}>\n      <ValueFromPair\n        pair={{ secretKeyRef: field.value }}\n        secrets={secrets}\n        configMaps={{}}\n        onChange={(val) => {\n          setFieldValue(name, val.target.value.secretKeyRef);\n          setFieldTouched(name, true);\n        }}\n      />\n\n      {!isValid && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n              {errorMessage}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, SecretKeySelectorProps>(mapStateToProps)(\n  SecretKeySelector,\n);\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField } from '@console/shared';\nimport { EventSources } from '../import-types';\n\ninterface PingSourceSectionProps {\n  title: string;\n  fullWidth?: boolean;\n}\n\nconst PingSourceSection: React.FC<PingSourceSectionProps> = ({ title, fullWidth }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection title={title} extraMargin fullWidth={fullWidth}>\n      <InputField\n        type={TextInputTypes.text}\n        name={`formData.data.${EventSources.PingSource}.data`}\n        label={t('knative-plugin~Data')}\n        helpText={t('knative-plugin~The data posted to the target function')}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`formData.data.${EventSources.PingSource}.schedule`}\n        label={t('knative-plugin~Schedule')}\n        helpText={t(\n          'knative-plugin~Schedule is described using the unix-cron string format (* * * * *)',\n        )}\n        required\n      />\n    </FormSection>\n  );\n};\n\nexport default PingSourceSection;\n","import * as React from 'react';\nimport { TextInputTypes, FormGroup } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { AsyncComponent } from '@console/internal/components/utils/async';\nimport { DropdownField, InputField, getFieldId } from '@console/shared';\nimport { EventSources } from '../import-types';\n\ninterface SinkBindingSectionProps {\n  title: string;\n  fullWidth?: boolean;\n}\n\nconst SinkBindingSection: React.FC<SinkBindingSectionProps> = ({ title, fullWidth }) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const initVal =\n    values?.formData?.data?.[EventSources.SinkBinding]?.subject?.selector?.matchLabels || {};\n  const initialValueResources = !_.isEmpty(initVal)\n    ? _.map(initVal, (key, val) => [val, key])\n    : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialValueResources);\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      let updatedNameValuePairs = {};\n      _.forEach(nameValuePairs, ([name, value]) => {\n        if (value.length) {\n          updatedNameValuePairs = { ...updatedNameValuePairs, [name]: value };\n          return updatedNameValuePairs;\n        }\n        return updatedNameValuePairs;\n      });\n      setNameValue(nameValuePairs);\n      setFieldValue(\n        `formData.data.${EventSources.SinkBinding}.subject.selector.matchLabels`,\n        updatedNameValuePairs,\n      );\n    },\n    [setFieldValue],\n  );\n  const fieldId = getFieldId(values.type, 'subject-matchLabels');\n\n  const matchType = values.sinkBindingMatchType;\n  React.useEffect(() => {\n    if (matchType === 'name') {\n      setFieldValue(`formData.data.${EventSources.SinkBinding}.subject.selector`, undefined);\n    } else {\n      setFieldValue(`formData.data.${EventSources.SinkBinding}.subject.name`, undefined);\n      setFieldValue(\n        `formData.data.${EventSources.SinkBinding}.subject.selector.matchLabels`,\n        nameValue.reduce((acc, [name, val]) => (val.length ? { ...acc, [name]: val } : acc), {}),\n      );\n    }\n  }, [matchType, setFieldValue, nameValue]);\n  React.useEffect(() => {\n    if (!matchType) {\n      setFieldValue('sinkBindingMatchType', 'labels');\n    }\n  }, [matchType, setFieldValue]);\n\n  return (\n    <FormSection title={title} extraMargin fullWidth={fullWidth} dataTest={`${title} section`}>\n      <h3 className=\"co-section-heading-tertiary\">{t('knative-plugin~Subject')}</h3>\n      <InputField\n        data-test-id=\"sinkbinding-apiversion-field\"\n        type={TextInputTypes.text}\n        name={`formData.data.${EventSources.SinkBinding}.subject.apiVersion`}\n        label={t('knative-plugin~apiVersion')}\n        required\n      />\n      <InputField\n        data-test-id=\"sinkbinding-kind-field\"\n        type={TextInputTypes.text}\n        name={`formData.data.${EventSources.SinkBinding}.subject.kind`}\n        label={t('knative-plugin~Kind')}\n        required\n      />\n      <FormGroup fieldId={fieldId} label={t('knative-plugin~Match subject')}>\n        <div className=\"pf-v5-c-form__helper-text\">\n          {t('knative-plugin~Match subject using name or labels.')}\n        </div>\n        <div className=\"form-group\">\n          <DropdownField\n            name=\"sinkBindingMatchType\"\n            items={{ name: t('knative-plugin~Name'), labels: t('knative-plugin~Labels') }}\n            title={t('knative-plugin~Match type')}\n          />\n        </div>\n        {matchType === 'name' ? (\n          <InputField\n            type={TextInputTypes.text}\n            name={`formData.data.${EventSources.SinkBinding}.subject.name`}\n            label={t('knative-plugin~Subject Name')}\n            required\n          />\n        ) : (\n          <AsyncComponent\n            loader={() =>\n              import('@console/internal/components/utils/name-value-editor').then(\n                (c) => c.NameValueEditor,\n              )\n            }\n            nameValuePairs={nameValue}\n            valueString={t('knative-plugin~Value')}\n            nameString={t('knative-plugin~Name')}\n            addLabel={t('knative-plugin~Add values')}\n            readOnly={false}\n            allowSorting={false}\n            updateParentData={handleNameValuePairs}\n          />\n        )}\n      </FormGroup>\n    </FormSection>\n  );\n};\n\nexport default SinkBindingSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport SinkUriResourcesGroup from './form-fields/SinkUriResourcesGroup';\n\ninterface SinkSectionProps {\n  namespace: string;\n  fullWidth?: boolean;\n}\n\nconst SinkSection: React.FC<SinkSectionProps> = ({ namespace, fullWidth }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection\n      title={\n        <>\n          {t('knative-plugin~Target')}\n          <span\n            className=\"pf-v5-c-form__label-required\"\n            aria-hidden=\"true\"\n            style={{ verticalAlign: 'top' }}\n          >\n            {' *'}\n          </span>\n        </>\n      }\n      subTitle={t('knative-plugin~Add a target to route cloud events from this Event source.')}\n      extraMargin\n      fullWidth={fullWidth}\n    >\n      <SinkUriResourcesGroup namespace={namespace} />\n    </FormSection>\n  );\n};\n\nexport default SinkSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\ninterface EventSourceAlertProps {\n  isValidSource: boolean;\n  createSourceAccessLoading: boolean;\n  createSourceAccess: boolean;\n}\n\nconst EventSourceAlert: React.FC<EventSourceAlertProps> = ({\n  isValidSource,\n  createSourceAccessLoading,\n  createSourceAccess,\n}) => {\n  const { t } = useTranslation();\n  const showAlert = !isValidSource || (!createSourceAccessLoading && !createSourceAccess);\n\n  return showAlert ? (\n    <Alert\n      variant={!isValidSource ? 'danger' : undefined}\n      title={t('knative-plugin~Event source cannot be created')}\n      isInline\n    >\n      {!isValidSource && t('knative-plugin~Event source is not found on this Cluster.')}\n      {!createSourceAccessLoading &&\n        !createSourceAccess &&\n        isValidSource &&\n        t('knative-plugin~You do not have create access for Event Source in this project.')}\n    </Alert>\n  ) : null;\n};\n\nexport default EventSourceAlert;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { K8sResourceKind, k8sCreate, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ALL_APPLICATIONS_KEY, usePerspectives } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { getCatalogChannelData, getCreateChannelData } from '../../../utils/create-channel-utils';\nimport { handleRedirect } from '../../../utils/create-eventsources-utils';\nimport { addChannelValidationSchema } from '../eventSource-validation-utils';\nimport { AddChannelFormData, ChannelListProps } from '../import-types';\nimport ChannelForm from './ChannelForm';\n\ninterface ChannelProps {\n  namespace: string;\n  channels: ChannelListProps;\n  contextSource?: string;\n  selectedApplication?: string;\n}\n\ninterface StateProps {\n  activeApplication: string;\n}\n\ntype Props = ChannelProps & StateProps;\n\nconst AddChannel: React.FC<Props> = ({ namespace, channels, activeApplication }) => {\n  const [perspective] = useActivePerspective();\n  const { t } = useTranslation();\n  const initialFormData: AddChannelFormData = {\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(activeApplication),\n      name: sanitizeApplicationValue(activeApplication),\n      selectedKey: activeApplication,\n    },\n    name: '',\n    namespace,\n    apiVersion: '',\n    type: '',\n    data: {},\n    yamlData: '',\n  };\n\n  const initialYamlData: string = safeJSToYAML(getCreateChannelData(initialFormData), 'yamlData', {\n    skipInvalid: true,\n    noRefs: true,\n  });\n\n  const initialValues = {\n    editorType: EditorType.Form,\n    showCanUseYAMLMessage: true,\n    formData: initialFormData,\n    yamlData: initialYamlData,\n  };\n\n  const perspectiveExtension = usePerspectives();\n\n  const createResources = (rawFormData: any): Promise<K8sResourceKind> => {\n    const channelResource = getCatalogChannelData(rawFormData);\n    if (channelResource?.kind && modelFor(referenceFor(channelResource))) {\n      return k8sCreate(modelFor(referenceFor(channelResource)), channelResource);\n    }\n    const errMessage =\n      channelResource?.kind && channelResource?.apiVersion\n        ? t('knative-plugin~No model registered for {{refrenceForChannel}}', {\n            refrenceForChannel: referenceFor(channelResource),\n          })\n        : t('knative-plugin~Invalid YAML');\n    return Promise.reject(new Error(errMessage));\n  };\n\n  const handleSubmit = (values, actions) => {\n    return createResources(values)\n      .then(() => {\n        handleRedirect(values.formData.namespace, perspective, perspectiveExtension);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validateOnBlur={false}\n      validateOnChange={false}\n      validationSchema={addChannelValidationSchema(t)}\n    >\n      {(formikProps) => <ChannelForm {...formikProps} namespace={namespace} channels={channels} />}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state: RootState, ownProps: ChannelProps): StateProps => {\n  const activeApplication = ownProps.selectedApplication || getActiveApplication(state);\n  return {\n    activeApplication: activeApplication !== ALL_APPLICATIONS_KEY ? activeApplication : '',\n  };\n};\n\nexport default connect(mapStateToProps)(AddChannel);\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { FormikProps, FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  FormFooter,\n  FlexForm,\n  useFormikValidationFix,\n  FormBody,\n  CodeEditorField,\n  SyncedEditorField,\n} from '@console/shared';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport {\n  isDefaultChannel,\n  getChannelKind,\n  getChannelData,\n  useDefaultChannelConfiguration,\n  getCatalogChannelData,\n  channelYamltoFormData,\n  getCreateChannelData,\n} from '../../../utils/create-channel-utils';\nimport { AddChannelFormData, ChannelListProps, YamlFormSyncData } from '../import-types';\nimport ChannelSelector from './form-fields/ChannelSelector';\nimport FormViewSection from './sections/FormViewSection';\n\ninterface OwnProps {\n  namespace: string;\n  channels: ChannelListProps;\n}\n\nconst ChannelForm: React.FC<FormikProps<FormikValues> & OwnProps> = ({\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  dirty,\n  namespace,\n  channels,\n}) => {\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'knative.channelForm.editor.lastView';\n  const {\n    values,\n    setFieldValue,\n    setFieldTouched,\n    validateForm,\n    setErrors,\n    setStatus,\n  } = useFormikContext<FormikValues>();\n  const { t } = useTranslation();\n  useFormikValidationFix(values);\n  const [defaultConfiguredChannel, defaultConfiguredChannelLoaded] = useDefaultChannelConfiguration(\n    namespace,\n  );\n  const channelKind = getChannelKind(values.formData.type);\n  const onTypeChange = React.useCallback(\n    (item: string) => {\n      setErrors({});\n      setStatus({});\n      const kind = getChannelKind(item);\n      let formData: AddChannelFormData;\n      if (isDefaultChannel(kind)) {\n        const nameData = `formData.data.${kind.toLowerCase()}`;\n        const sourceData = getChannelData(kind.toLowerCase());\n        setFieldValue(nameData, sourceData);\n        setFieldTouched(nameData, true);\n        formData = { ...values.formData, data: { [kind.toLowerCase()]: sourceData } };\n      }\n\n      setFieldValue('formData.type', item);\n      setFieldTouched('formData.type', true);\n      setFieldValue('formData.name', _.kebabCase(`${kind}`));\n      setFieldTouched('formData.name', true);\n      formData = { ...values.formData, ...formData, type: item, name: _.kebabCase(`${kind}`) };\n      setFieldValue(\n        'yamlData',\n        safeJSToYAML(getCreateChannelData(formData), 'yamlData', {\n          skipInvalid: true,\n          noRefs: true,\n        }),\n      );\n      setFieldTouched('yamlData', true);\n      setTimeout(() => {\n        validateForm();\n      }, 0);\n    },\n    [setErrors, setStatus, setFieldValue, setFieldTouched, values.formData, validateForm],\n  );\n\n  const sanitizeToYaml = () => {\n    return safeJSToYAML(\n      getCatalogChannelData(values as YamlFormSyncData<AddChannelFormData>),\n      'yamlData',\n      {\n        skipInvalid: true,\n        noRefs: true,\n      },\n    );\n  };\n\n  const yamlEditor = <CodeEditorField name=\"yamlData\" showSamples onSave={handleSubmit} />;\n\n  const formEditor = (\n    <>\n      {values.showCanUseYAMLMessage && (\n        <Alert\n          actionClose={\n            <AlertActionCloseButton onClose={() => setFieldValue('showCanUseYAMLMessage', false)} />\n          }\n          isInline\n          title={t(\n            'knative-plugin~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control of object creation.',\n          )}\n          variant=\"info\"\n        />\n      )}\n      <FormViewSection namespace={namespace} kind={channelKind} />{' '}\n    </>\n  );\n\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        {((channels && !channels.loaded) || !defaultConfiguredChannelLoaded) && <LoadingInline />}\n        {channels &&\n          channels.loaded &&\n          defaultConfiguredChannelLoaded &&\n          !_.isEmpty(channels.channelList) && (\n            <>\n              <ChannelSelector\n                channels={channels.channelList}\n                onChange={onTypeChange}\n                defaultConfiguredChannel={defaultConfiguredChannel}\n              />\n              <SyncedEditorField\n                name=\"editorType\"\n                formContext={{\n                  name: 'formData',\n                  editor: formEditor,\n                  sanitizeTo: (formData: K8sResourceKind) =>\n                    channelYamltoFormData(formData, values.formData),\n                }}\n                yamlContext={{ name: 'yamlData', editor: yamlEditor, sanitizeTo: sanitizeToYaml }}\n                lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n              />\n            </>\n          )}\n        {channels && channels.loaded && _.isEmpty(channels.channelList) && (\n          <Alert variant=\"custom\" title={t('knative-plugin~Channel cannot be created')} isInline>\n            {t('knative-plugin~You do not have write access in this project.')}\n          </Alert>\n        )}\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('knative-plugin~Create')}\n        disableSubmit={!dirty || !_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('knative-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default ChannelForm;\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { DropdownField, DropdownFieldProps } from '@console/shared';\nimport { EVENTING_CHANNEL_KIND } from '../../../../const';\nimport { getChannelKind } from '../../../../utils/create-channel-utils';\n\ntype ChannelSelectorProps = {\n  channels: string[];\n  defaultConfiguredChannel: string;\n} & Omit<DropdownFieldProps, 'name'>;\n\nconst ChannelSelector: React.FC<ChannelSelectorProps> = ({\n  channels,\n  onChange,\n  defaultConfiguredChannel,\n}) => {\n  const [selected] = useField('formData.type');\n  const { t } = useTranslation();\n  const filteredChannels = _.flatten(\n    _.partition(channels, (ref) => getChannelKind(ref) === EVENTING_CHANNEL_KIND),\n  );\n\n  const channelData = filteredChannels.reduce((acc, channel) => {\n    const channelName = getChannelKind(channel);\n    acc[channel] =\n      channelName === EVENTING_CHANNEL_KIND && defaultConfiguredChannel\n        ? t('knative-plugin~Default {{channelName}} ({{defaultConfiguredChannel}})', {\n            channelName,\n            defaultConfiguredChannel,\n          })\n        : channelName;\n    return acc;\n  }, {});\n\n  const getGenericChannel = React.useCallback((): string => {\n    return (\n      filteredChannels.find((ch) => getChannelKind(ch) === EVENTING_CHANNEL_KIND) ||\n      filteredChannels[0]\n    );\n  }, [filteredChannels]);\n\n  React.useEffect(() => {\n    if (!selected.value && filteredChannels.length > 0) {\n      const channel = getGenericChannel();\n      onChange && onChange(channel);\n    }\n  }, [selected.value, getGenericChannel, onChange, filteredChannels.length]);\n\n  return (\n    <FormSection extraMargin>\n      <DropdownField\n        name=\"formData.type\"\n        label={t('knative-plugin~Type')}\n        items={channelData}\n        title={t('knative-plugin~Type')}\n        onChange={onChange}\n        fullWidth\n        required\n      />\n    </FormSection>\n  );\n};\n\nexport default ChannelSelector;\n","import * as React from 'react';\nimport { EVENTING_KAFKA_CHANNEL_KIND } from '../../../../const';\nimport DefaultChannelSection from './DefaultChannelSection';\nimport KafkaChannelSection from './KafkaChannelSection';\n\ntype FormViewSectionProps = {\n  namespace: string;\n  kind: string;\n};\n\nconst getChannelSection = (kind: string): React.ReactElement | null => {\n  if (kind === EVENTING_KAFKA_CHANNEL_KIND) {\n    return <KafkaChannelSection />;\n  }\n  return null;\n};\n\nconst FormViewSection: React.FC<FormViewSectionProps> = ({ namespace, kind }) => (\n  <>\n    {getChannelSection(kind)}\n    <DefaultChannelSection namespace={namespace} />\n  </>\n);\n\nexport default FormViewSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField } from '@console/shared';\nimport ApplicationSelector from '@console/topology/src/components/dropdowns/ApplicationSelector';\n\ntype DefaultChannelSectionProps = {\n  namespace: string;\n};\n\nconst DefaultChannelSection: React.FC<DefaultChannelSectionProps> = ({ namespace }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection extraMargin>\n      <ApplicationSelector namespace={namespace} subPath=\"formData\" />\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"channel-name\"\n        name=\"formData.name\"\n        label={t('knative-plugin~Name')}\n        helpText={t('knative-plugin~A unique name for the component/channel')}\n        required\n      />\n    </FormSection>\n  );\n};\n\nexport default DefaultChannelSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { NumberSpinnerField } from '@console/shared';\n\nconst KafkaChannelSection: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <FormSection extraMargin>\n      <NumberSpinnerField\n        name=\"formData.data.kafkachannel.numPartitions\"\n        label={t('knative-plugin~Number of Partitions')}\n        helpText={t(\n          'knative-plugin~The number of partitions of a Kafka topic. By default is, set to 1.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"formData.data.kafkachannel.replicationFactor\"\n        label={t('knative-plugin~Replication factor')}\n        helpText={t(\n          'knative-plugin~The Replication factor of a Kafka topic. By default is, set to 1.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default KafkaChannelSection;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { safeLoad } from 'js-yaml';\nimport { useTranslation } from 'react-i18next';\nimport { handleRedirect } from '@console/dev-console/src/components/import/import-submit-utils';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { history } from '@console/internal/components/utils';\nimport { K8sResourceKind, k8sCreate } from '@console/internal/module/k8s';\nimport { usePerspectives } from '@console/shared/src';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { EventingBrokerModel } from '../../../models';\nimport { AddBrokerFormYamlValues } from '../import-types';\nimport { convertFormToBrokerYaml, addBrokerInitialValues } from './add-broker-utils';\nimport AddBrokerForm from './AddBrokerForm';\nimport { brokerValidationSchema } from './broker-validation-utils';\n\ninterface AddBrokerProps {\n  namespace: string;\n  selectedApplication: string;\n  contextSource?: string;\n}\n\nconst AddBroker: React.FC<AddBrokerProps> = ({ namespace, selectedApplication }) => {\n  const perspectiveExtension = usePerspectives();\n  const [perspective] = useActivePerspective();\n  const { t } = useTranslation();\n  const initialValues: AddBrokerFormYamlValues = addBrokerInitialValues(\n    namespace,\n    selectedApplication,\n  );\n\n  const createResources = (\n    formValues: AddBrokerFormYamlValues,\n    actions: FormikHelpers<AddBrokerFormYamlValues>,\n  ): Promise<K8sResourceKind> => {\n    let broker: K8sResourceKind;\n    if (formValues.editorType === EditorType.Form) {\n      broker = convertFormToBrokerYaml(formValues.formData);\n    } else {\n      try {\n        broker = safeLoad(formValues.yamlData);\n        if (!broker.metadata?.namespace) {\n          broker.metadata.namespace = formValues.formData.project.name;\n        }\n      } catch (err) {\n        actions.setStatus({ submitError: `Invalid YAML - ${err}` });\n        return null;\n      }\n    }\n    return k8sCreate(EventingBrokerModel, broker);\n  };\n\n  const handleSubmit = (\n    values: AddBrokerFormYamlValues,\n    actions: FormikHelpers<AddBrokerFormYamlValues>,\n  ) => {\n    return createResources(values, actions)\n      .then(() => {\n        handleRedirect(values.formData.project.name, perspective, perspectiveExtension);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validationSchema={brokerValidationSchema(t)}\n    >\n      {(formikProps) => <AddBrokerForm {...formikProps} namespace={namespace} />}\n    </Formik>\n  );\n};\n\nexport default AddBroker;\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton, Grid, GridItem } from '@patternfly/react-core';\nimport { FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport AppSection from '@console/dev-console/src/components/import/app/AppSection';\nimport { LoadingInline, useAccessReview2 } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  FlexForm,\n  FormBody,\n  SyncedEditorField,\n  FormFooter,\n  CodeEditorField,\n  UNASSIGNED_APPLICATIONS_KEY,\n  useFormikValidationFix,\n} from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { EventingBrokerModel } from '../../../models';\nimport { LABEL_PART_OF } from '../const';\nimport { AddBrokerFormYamlValues } from '../import-types';\nimport { convertFormToBrokerYaml } from './add-broker-utils';\n\ninterface AddBrokerFormProps {\n  namespace: string;\n}\n\nconst AddBrokerForm: React.FC<FormikProps<AddBrokerFormYamlValues> & AddBrokerFormProps> = (\n  formikProps,\n) => {\n  const { t } = useTranslation();\n  const {\n    values,\n    errors,\n    dirty,\n    status,\n    namespace,\n    handleReset,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n  } = formikProps;\n\n  useFormikValidationFix(values);\n  const [canCreateBroker, loadingAccessReview] = useAccessReview2({\n    group: EventingBrokerModel.apiGroup,\n    resource: EventingBrokerModel.plural,\n    namespace,\n    verb: 'create',\n  });\n\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'knative.addBrokerForm.editor.lastView';\n\n  const convertYamlToForm = (yamlBroker: K8sResourceKind) => {\n    const appGroupName = yamlBroker.metadata?.labels?.[LABEL_PART_OF];\n    const newFormData = {\n      name: yamlBroker.metadata?.name || '',\n      project: {\n        name: yamlBroker.metadata?.namespace || namespace,\n      },\n      application: {\n        ...values.formData.application,\n        ...(appGroupName && { name: appGroupName, selectedKey: appGroupName }),\n        ...(appGroupName &&\n          appGroupName !== values.formData.application.name &&\n          appGroupName !== values.formData.application.initial && {\n            name: appGroupName,\n            selectedKey: values.formData.application.selectedKey ? CREATE_APPLICATION_KEY : '',\n          }),\n        ...(!appGroupName && {\n          name: '',\n          selectedKey: UNASSIGNED_APPLICATIONS_KEY,\n        }),\n      },\n      spec: yamlBroker.spec,\n    };\n    return newFormData;\n  };\n\n  const sanitizeToYaml = () =>\n    safeJSToYAML(convertFormToBrokerYaml(values.formData), 'yamlData', {\n      skipInvalid: true,\n    });\n\n  const FormEditor = (\n    <>\n      {values.showCanUseYAMLMessage && (\n        <Grid hasGutter>\n          <GridItem span={6}>\n            <Alert\n              actionClose={\n                <AlertActionCloseButton\n                  onClose={() => setFieldValue('showCanUseYAMLMessage', false)}\n                />\n              }\n              isInline\n              title={t(\n                'knative-plugin~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control.',\n              )}\n              variant=\"info\"\n            />\n          </GridItem>\n        </Grid>\n      )}\n      <AppSection\n        project={values.formData.project}\n        noProjectsAvailable={false}\n        extraMargin\n        subPath=\"formData\"\n        fullWidth={false}\n      />\n    </>\n  );\n  const yamlEditor = (\n    <CodeEditorField\n      name=\"yamlData\"\n      model={EventingBrokerModel}\n      showSamples\n      onSave={handleSubmit}\n    />\n  );\n\n  const syncedEditor = canCreateBroker ? (\n    <SyncedEditorField\n      name=\"editorType\"\n      formContext={{\n        name: 'formData',\n        editor: FormEditor,\n        sanitizeTo: convertYamlToForm,\n      }}\n      yamlContext={{\n        name: 'yamlData',\n        editor: yamlEditor,\n        sanitizeTo: sanitizeToYaml,\n      }}\n      lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n    />\n  ) : (\n    <Alert variant=\"custom\" title={t('knative-plugin~Broker cannot be created')} isInline>\n      {t('knative-plugin~You do not have write access in this project.')}\n    </Alert>\n  );\n\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        {loadingAccessReview && <LoadingInline />}\n        {!loadingAccessReview && syncedEditor}\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('knative-plugin~Create')}\n        disableSubmit={\n          !canCreateBroker ||\n          (values.editorType === EditorType.YAML ? !dirty : !_.isEmpty(errors)) ||\n          isSubmitting\n        }\n        resetLabel={t('knative-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default AddBrokerForm;\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n} from '@console/dev-console/src/components/import/validation-schema';\nimport { nameValidationSchema } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\n\nexport const brokerValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    editorType: yup.string(),\n    formData: yup.object().when('editorType', {\n      is: EditorType.Form,\n      then: yup.object().shape({\n        project: projectNameValidationSchema,\n        application: applicationNameValidationSchema,\n        name: nameValidationSchema(t),\n      }),\n    }),\n    yamlData: yup.string(),\n  });\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { k8sCreateResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { history } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n  getGroupVersionKind,\n} from '@console/internal/module/k8s';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { ALL_APPLICATIONS_KEY, usePerspectives } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { CamelKameletBindingModel, KafkaSinkModel } from '../../models';\nimport {\n  getCatalogEventSinkResource,\n  getEventSinkData,\n  getEventSinksDepResource,\n  getKameletSinkData,\n} from '../../utils/create-eventsink-utils';\nimport { handleRedirect } from '../../utils/create-eventsources-utils';\nimport { craftResourceKey } from '../pub-sub/pub-sub-utils';\nimport { EVENT_SOURCES_APP } from './const';\nimport { eventSinkValidationSchema } from './eventSink-validation-utils';\nimport EventSinkForm from './EventSinkForm';\nimport { KnEventCatalogMetaData, EventSinkFormData, EventSinkSyncFormData } from './import-types';\nimport KnEventMetaDescription from './KnEventMetaDescription';\n\ninterface EventSinkProps {\n  namespace: string;\n  normalizedSink: KnEventCatalogMetaData;\n  contextSource?: string;\n  selectedApplication?: string;\n  sinkKind: string;\n  kameletSink?: K8sResourceKind;\n}\n\nconst EventSink: React.FC<EventSinkProps> = ({\n  namespace,\n  normalizedSink,\n  contextSource,\n  selectedApplication,\n  sinkKind = '',\n  kameletSink,\n}) => {\n  const perpectiveExtension = usePerspectives();\n  const [perspective] = useActivePerspective();\n  const { t } = useTranslation();\n  const application = useSelector(getActiveApplication);\n  const currentApp = selectedApplication || application;\n\n  let sinkApiVersion = '';\n  let sinkData = {};\n  let sinkName = '';\n\n  if (sinkKind && sinkKind === KafkaSinkModel.kind) {\n    sinkApiVersion = `${KafkaSinkModel.apiGroup}/${KafkaSinkModel.apiVersion}`;\n    sinkData = { [KafkaSinkModel.kind]: getEventSinkData(sinkKind) };\n    sinkName = _.kebabCase(sinkKind);\n  } else {\n    sinkApiVersion = `${CamelKameletBindingModel.apiGroup}/${CamelKameletBindingModel.apiVersion}`;\n    sinkData = { [CamelKameletBindingModel.kind]: getKameletSinkData(kameletSink) };\n    sinkName = `kamelet-${kameletSink.metadata.name}`;\n  }\n\n  const activeApplication = currentApp !== ALL_APPLICATIONS_KEY ? currentApp : '';\n  const [sourceGroupVersionKind = '', sourceName = ''] = contextSource?.split('/') ?? [];\n  const [sourceGroup = '', sourceVersion = '', sourceKind = ''] =\n    getGroupVersionKind(sourceGroupVersionKind) ?? [];\n  const sourceApiVersion = sourceGroup ? `${sourceGroup}/${sourceVersion}` : '';\n\n  const eventSinkMetaDescription = <KnEventMetaDescription normalizedData={normalizedSink} />;\n\n  const initialFormData: EventSinkFormData = {\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(activeApplication),\n      name: sanitizeApplicationValue(activeApplication) ?? EVENT_SOURCES_APP,\n      selectedKey: activeApplication,\n      isInContext: !!sanitizeApplicationValue(activeApplication),\n    },\n    name: sinkName,\n    apiVersion: sinkApiVersion,\n    ...(sinkKind !== KafkaSinkModel.kind && {\n      source: {\n        apiVersion: sourceApiVersion,\n        kind: sourceKind,\n        name: sourceName,\n        key: craftResourceKey(sourceName, {\n          kind: sourceKind,\n          apiVersion: `${sourceGroup}/${sourceVersion}`,\n        }),\n      },\n    }),\n    type: sinkKind,\n    data: sinkData,\n  };\n\n  const initialYamlData: string = safeJSToYAML(\n    getEventSinksDepResource(initialFormData),\n    'yamlData',\n    {\n      skipInvalid: true,\n      noRefs: true,\n    },\n  );\n\n  const catalogInitialValues: EventSinkSyncFormData = {\n    editorType: EditorType.Form,\n    showCanUseYAMLMessage: true,\n    formData: initialFormData,\n    yamlData: initialYamlData,\n  };\n\n  const createResources = (rawFormData: any): Promise<K8sResourceKind> => {\n    const knEventSinkResource = getCatalogEventSinkResource(rawFormData);\n    if (knEventSinkResource?.kind && modelFor(referenceFor(knEventSinkResource))) {\n      return k8sCreateResource({\n        model: modelFor(referenceFor(knEventSinkResource)),\n        data: knEventSinkResource,\n      });\n    }\n    const errMessage =\n      knEventSinkResource?.kind && knEventSinkResource?.apiVersion\n        ? t('knative-plugin~No model registered for {{referenceForKnEventSink}}', {\n            referenceForKnEventSink: referenceFor(knEventSinkResource),\n          })\n        : t('knative-plugin~Invalid YAML');\n    return Promise.reject(new Error(errMessage));\n  };\n\n  const handleSubmit = (values, actions) => {\n    const {\n      formData: {\n        project: { name: projectName },\n      },\n    } = values;\n    const eventSinkRequest: Promise<K8sResourceKind> = createResources(values);\n\n    return eventSinkRequest\n      .then(() => {\n        handleRedirect(projectName, perspective, perpectiveExtension);\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={catalogInitialValues}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validateOnBlur={false}\n      validateOnChange={false}\n      validationSchema={eventSinkValidationSchema(t)}\n    >\n      {(formikProps) => (\n        <EventSinkForm\n          {...formikProps}\n          namespace={namespace}\n          eventSinkMetaDescription={eventSinkMetaDescription}\n          kameletSink={kameletSink}\n        />\n      )}\n    </Formik>\n  );\n};\n\nexport default EventSink;\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n} from '@console/dev-console/src/components/import/validation-schema';\nimport { nameValidationSchema } from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { CamelKameletBindingModel, KafkaSinkModel } from '../../models';\nimport { sinkTypeUriValidation } from './eventSource-validation-utils';\nimport { SinkType } from './import-types';\n\nconst sourceServiceSchema = (t: TFunction) =>\n  yup\n    .object()\n    .when('sourceType', {\n      is: SinkType.Resource,\n      then: yup.object().shape({\n        name: yup.string().required(t('knative-plugin~Required')),\n      }),\n    })\n    .when('sourceType', {\n      is: SinkType.Uri,\n      then: sinkTypeUriValidation(t),\n    });\n\nconst sinkDataSpecSchema = (t: TFunction) =>\n  yup\n    .object()\n    .when('type', {\n      is: KafkaSinkModel.kind,\n      then: yup.object().shape({\n        [KafkaSinkModel.kind]: yup.object().shape({\n          bootstrapServers: yup.array().of(yup.string()).min(1, t('knative-plugin~Required')),\n          topic: yup.string().required(t('knative-plugin~Required')),\n          auth: yup.object().shape({\n            secret: yup.object().shape({\n              ref: yup.object().shape({\n                name: yup.string(),\n              }),\n            }),\n          }),\n        }),\n      }),\n    })\n    .when('type', {\n      is: CamelKameletBindingModel.kind,\n      then: yup.object(),\n    });\n\nexport const eventSinkValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    editorType: yup.string(),\n    formData: yup.object().when('editorType', {\n      is: EditorType.Form,\n      then: yup.object().shape({\n        project: projectNameValidationSchema,\n        application: applicationNameValidationSchema,\n        name: nameValidationSchema(t),\n        source: sourceServiceSchema(t),\n        data: sinkDataSpecSchema(t),\n      }),\n    }),\n    yamlData: yup.string(),\n  });\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  FormFooter,\n  SyncedEditorField,\n  CodeEditorField,\n  FlexForm,\n  FormBody,\n} from '@console/shared';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport {\n  getCatalogEventSinkResource,\n  sanitizeSinkToForm,\n} from '../../utils/create-eventsink-utils';\nimport EventSinkSection from './event-sinks/EventSinkSection';\nimport { EventSinkSyncFormData } from './import-types';\n\ninterface OwnProps {\n  namespace: string;\n  eventSinkMetaDescription: React.ReactNode;\n  kameletSink: K8sResourceKind;\n}\n\nconst EventSinkForm: React.FC<FormikProps<FormikValues> & OwnProps> = ({\n  errors,\n  values,\n  handleSubmit,\n  handleReset,\n  setFieldValue,\n  status,\n  isSubmitting,\n  dirty,\n  namespace,\n  eventSinkMetaDescription,\n  kameletSink,\n}) => {\n  const { t } = useTranslation();\n  const LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'knative.eventSinkForm.editor.lastView';\n  const yamlEditor = <CodeEditorField name=\"yamlData\" showSamples onSave={handleSubmit} />;\n\n  const sanitizeToYaml = () =>\n    safeJSToYAML(getCatalogEventSinkResource(values as EventSinkSyncFormData), 'yamlData', {\n      skipInvalid: true,\n      noRefs: true,\n    });\n\n  const formEditor = (\n    <div className=\"row\">\n      <div className=\"col-sm-12 col-md-4 col-md-push-8 col-lg-5 col-lg-push-7\">\n        {eventSinkMetaDescription}\n      </div>\n      <div className=\"col-sm-12 col-md-8 col-md-pull-4 col-lg-7 col-lg-pull-5\">\n        {values.showCanUseYAMLMessage && (\n          <Alert\n            actionClose={\n              <AlertActionCloseButton\n                onClose={() => setFieldValue('showCanUseYAMLMessage', false)}\n              />\n            }\n            isInline\n            title={t(\n              'knative-plugin~Note: Some fields may not be represented in this form view. Please select \"YAML view\" for full control of object creation.',\n            )}\n            variant=\"info\"\n          />\n        )}\n        <EventSinkSection namespace={namespace} kameletSink={kameletSink} fullWidth />\n      </div>\n    </div>\n  );\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <SyncedEditorField\n          name=\"editorType\"\n          formContext={{\n            name: 'formData',\n            editor: formEditor,\n            sanitizeTo: (newFormData: K8sResourceKind) =>\n              sanitizeSinkToForm(newFormData, values.formData, kameletSink),\n          }}\n          yamlContext={{ name: 'yamlData', editor: yamlEditor, sanitizeTo: sanitizeToYaml }}\n          lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n        />\n      </FormBody>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('knative-plugin~Create')}\n        disableSubmit={\n          (values.editorType === EditorType.YAML ? !dirty : !dirty || !_.isEmpty(errors)) ||\n          isSubmitting\n        }\n        resetLabel={t('knative-plugin~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default EventSinkForm;\n","import * as React from 'react';\nimport { TextVariants, Text } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { JSONSchema7 } from 'json-schema';\nimport * as _ from 'lodash';\nimport AppSection from '@console/dev-console/src/components/import/app/AppSection';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ProjectModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { descriptorsToUISchema } from '@console/operator-lifecycle-manager/src/components/operand/utils';\nimport { DynamicFormField, useFormikValidationFix } from '@console/shared';\nimport { EVENT_SINK_KAFKA_KIND } from '../../../const';\nimport { formDescriptorData } from '../../../utils/create-eventsources-utils';\nimport { EventSources } from '../import-types';\nimport KafkaSinkSection from './KafkaSinkSection';\nimport SourceSection from './SourceSection';\n\ninterface EventSinkSectionProps {\n  namespace: string;\n  fullWidth?: boolean;\n  kameletSink?: K8sResourceKind;\n}\n\nconst EventSinkSection: React.FC<EventSinkSectionProps> = ({\n  namespace,\n  fullWidth = false,\n  kameletSink,\n}) => {\n  const { values } = useFormikContext<FormikValues>();\n  const projectResource = { kind: ProjectModel.kind, prop: ProjectModel.id, isList: true };\n  const [data, loaded] = useK8sWatchResource<K8sResourceKind[]>(projectResource);\n  useFormikValidationFix(values);\n  const formSchema: JSONSchema7 = React.useMemo(\n    () => ({\n      type: 'object',\n      required: kameletSink?.spec?.definition?.required,\n      properties: kameletSink?.spec?.definition?.properties,\n    }),\n    [kameletSink],\n  );\n\n  if (!values.formData.type) {\n    return null;\n  }\n  const defaultFormSection = (\n    <>\n      <AppSection\n        project={values.formData.project}\n        noProjectsAvailable={loaded && _.isEmpty(data)}\n        extraMargin\n        subPath=\"formData\"\n        fullWidth={fullWidth}\n      />\n    </>\n  );\n  let EventSink: React.ReactElement = null;\n  if (kameletSink && values.formData.type === EventSources.KameletBinding) {\n    EventSink = (\n      <>\n        <Text component={TextVariants.h2}>{kameletSink.spec?.definition?.title}</Text>\n        <DynamicFormField\n          name=\"formData.data.KameletBinding.sink.properties\"\n          schema={formSchema}\n          uiSchema={descriptorsToUISchema(formDescriptorData(formSchema.properties), formSchema)}\n          showAlert={false}\n        />\n        <SourceSection namespace={namespace} fullWidth={fullWidth} />\n      </>\n    );\n  } else if (values.formData.type === EVENT_SINK_KAFKA_KIND) {\n    EventSink = (\n      <KafkaSinkSection title={values.formData.type} fullWidth={fullWidth} namespace={namespace} />\n    );\n  }\n  return (\n    <>\n      {EventSink}\n      {defaultFormSection}\n    </>\n  );\n};\n\nexport default EventSinkSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { InputField, ResourceDropdownField, MultiTypeaheadField } from '@console/shared';\nimport { EVENT_SINK_KAFKA_KIND } from '../../../const';\nimport { useBootstrapServers } from '../../../hooks';\n\ninterface KafkaSinkSectionProps {\n  title: string;\n  namespace: string;\n  fullWidth?: boolean;\n}\n\nconst KafkaSinkSection: React.FC<KafkaSinkSectionProps> = ({ title, namespace, fullWidth }) => {\n  const { t } = useTranslation();\n  const [bootstrapServers, bsPlaceholder] = useBootstrapServers(namespace);\n\n  const autocompleteFilter = (text: string, item: any): boolean => fuzzy(text, item?.props?.name);\n\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      kind: SecretModel.kind,\n      prop: SecretModel.id,\n      namespace,\n    },\n  ];\n\n  return (\n    <FormSection title={title} extraMargin fullWidth={fullWidth}>\n      <MultiTypeaheadField\n        data-test=\"kafkasink-bootstrapservers-field\"\n        name={`formData.data.${EVENT_SINK_KAFKA_KIND}.bootstrapServers`}\n        label={t('knative-plugin~Bootstrap servers')}\n        ariaLabel={t('knative-plugin~Bootstrap servers')}\n        options={bootstrapServers}\n        placeholderText={bsPlaceholder}\n        helpText={t('knative-plugin~The address of the Kafka broker')}\n        isCreatable\n        required\n      />\n      <InputField\n        data-test=\"kafkasink-topic-field\"\n        type={TextInputTypes.text}\n        name={`formData.data.${EVENT_SINK_KAFKA_KIND}.topic`}\n        label={t('knative-plugin~Topic')}\n        helpText={t('knative-plugin~Topic name to send events')}\n        placeholder={t('knative-plugin~Enter the topic name')}\n        required\n      />\n\n      <ResourceDropdownField\n        data-test=\"kafkasink-secret-field\"\n        name={`formData.data.${EVENT_SINK_KAFKA_KIND}.auth.secret.ref.name`}\n        resources={resources}\n        dataSelector={['metadata', 'name']}\n        placeholder={t('knative-plugin~Select a secret')}\n        autocompleteFilter={autocompleteFilter}\n        fullWidth\n        showBadge\n        label={t('knative-plugin~Secret')}\n      />\n    </FormSection>\n  );\n};\n\nexport default KafkaSinkSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport SourceResources from './form-fields/SourceResources';\n\ninterface SourceSectionProps {\n  namespace: string;\n  fullWidth?: boolean;\n}\n\nconst SourceSection: React.FC<SourceSectionProps> = ({ namespace, fullWidth }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection\n      title={\n        <>\n          {t('knative-plugin~Source')}\n          <span\n            className=\"pf-v5-c-form__label-required\"\n            aria-hidden=\"true\"\n            style={{ verticalAlign: 'top' }}\n          >\n            {' *'}\n          </span>\n        </>\n      }\n      subTitle={t('knative-plugin~Add a source to route cloud events for the Event sink.')}\n      extraMargin\n      fullWidth={fullWidth}\n    >\n      <SourceResources namespace={namespace} />\n    </FormSection>\n  );\n};\n\nexport default SourceSection;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Alert,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { isEmpty } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getFieldId, ResourceDropdownField } from '@console/shared';\nimport { getDynamicChannelResourceList } from '../../../../utils/fetch-dynamic-eventsources-utils';\nimport { knativeEventingResourcesBroker } from '../../../../utils/get-knative-resources';\nimport { craftResourceKey } from '../../../pub-sub/pub-sub-utils';\n\nexport interface SourceResourcesProps {\n  namespace: string;\n  isMoveSink?: boolean;\n}\n\nconst SourceResources: React.FC<SourceResourcesProps> = ({ namespace, isMoveSink }) => {\n  const { t } = useTranslation();\n  const [resourceAlert, setResourceAlert] = React.useState(false);\n  const { setFieldValue, setFieldTouched, validateForm, initialValues } = useFormikContext<\n    FormikValues\n  >();\n\n  const resourcesData = [\n    ...getDynamicChannelResourceList(namespace),\n    ...knativeEventingResourcesBroker(namespace),\n  ];\n\n  const autocompleteFilter = (strText: string, item: React.ReactElement): boolean =>\n    fuzzy(strText, item?.props?.name);\n  const fieldId = getFieldId('source-name', 'dropdown');\n  const onChange = React.useCallback(\n    (selectedValue, valueObj) => {\n      const modelData = valueObj?.props?.model;\n      const name = valueObj?.props?.name;\n      if (name && modelData) {\n        const { apiGroup = 'core', apiVersion, kind } = modelData;\n        setFieldValue('formData.source.name', name);\n        setFieldTouched('formData.source.name', true);\n        setFieldValue('formData.source.apiVersion', `${apiGroup}/${apiVersion}`);\n        setFieldTouched('formData.source.apiVersion', true);\n        setFieldValue('formData.source.kind', kind);\n        setFieldTouched('formData.source.kind', true);\n        validateForm();\n      }\n    },\n    [setFieldValue, setFieldTouched, validateForm],\n  );\n  const contextAvailable = isMoveSink ? false : !!initialValues.formData.source.name;\n\n  const handleOnLoad = (resourceList: { [key: string]: string }) => {\n    if (isEmpty(resourceList)) {\n      setResourceAlert(true);\n    } else {\n      setResourceAlert(false);\n    }\n  };\n\n  // filter out resource which are owned by other resource\n  const resourceFilter = ({ metadata }: K8sResourceKind) => !metadata?.ownerReferences?.length;\n\n  return (\n    <FormGroup fieldId={fieldId} isRequired>\n      {resourceAlert && (\n        <>\n          <Alert variant=\"custom\" title={t('knative-plugin~No resources available')} isInline>\n            {t('knative-plugin~Exit this form and create a Broker, or Channel first.')}\n          </Alert>\n          &nbsp;\n        </>\n      )}\n      <ResourceDropdownField\n        key={resourcesData.length === 0 ? 'no-resources' : 'resources'}\n        menuClassName={'max-height-menu'}\n        data-test=\"sourcable-resources\"\n        name=\"formData.source.key\"\n        resources={resourcesData}\n        dataSelector={['metadata', 'name']}\n        fullWidth\n        placeholder={t('knative-plugin~Select resource')}\n        showBadge\n        disabled={contextAvailable || resourceAlert}\n        onChange={onChange}\n        autocompleteFilter={autocompleteFilter}\n        autoSelect\n        customResourceKey={craftResourceKey}\n        resourceFilter={resourceFilter}\n        onLoad={handleOnLoad}\n      />\n\n      {!contextAvailable && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t('knative-plugin~This resource will be the source for the Event sink.')}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nexport default SourceResources;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\ninterface EventSinkAlertProps {\n  isValidSink: boolean;\n  createSinkAccessLoading: boolean;\n  createSinkAccess: boolean;\n}\n\nconst EventSinkAlert: React.FC<EventSinkAlertProps> = ({\n  isValidSink,\n  createSinkAccessLoading,\n  createSinkAccess,\n}) => {\n  const { t } = useTranslation();\n  const showAlert = !isValidSink || (!createSinkAccessLoading && !createSinkAccess);\n\n  return showAlert ? (\n    <Alert\n      variant={!isValidSink ? 'danger' : undefined}\n      title={t('knative-plugin~Event sink cannot be created')}\n      isInline\n    >\n      {!isValidSink && t('knative-plugin~Event sink is not found on this Cluster.')}\n      {!createSinkAccessLoading &&\n        !createSinkAccess &&\n        isValidSink &&\n        t('knative-plugin~You do not have create access for Event sink in this project.')}\n    </Alert>\n  ) : null;\n};\n\nexport default EventSinkAlert;\n","import * as React from 'react';\nimport { Formik, FormikValues, FormikHelpers } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom-v5-compat';\nimport { history, LoadingBox } from '@console/internal/components/utils';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { K8sResourceKind, k8sCreate } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport { EVENT_TYPE_NAME_PARAM, EVENT_TYPE_NAMESPACE_PARAM } from '../../../const';\nimport {\n  EventingBrokerModel,\n  EventingEventTypeModel,\n  EventingSubscriptionModel,\n  EventingTriggerModel,\n} from '../../../models';\nimport { sanitizeResourceName } from '../../pub-sub/pub-sub-utils';\nimport { pubsubValidationSchema } from '../../pub-sub/pubsub-validation-utils';\nimport SubscribeForm from './SubscribeForm';\n\ninterface SubscribeProps {\n  source: K8sResourceKind;\n  target?: K8sResourceKind;\n}\n\nconst Subscribe: React.FC<SubscribeProps> = ({ source, target = { metadata: { name: '' } } }) => {\n  const { t } = useTranslation();\n  const {\n    apiVersion: sourceApiVersion,\n    kind: sourceKind,\n    metadata: { namespace, name: sourceName },\n  } = source;\n  const {\n    apiVersion: targetApiVersion = '',\n    kind: targetKind = '',\n    metadata: { name: targetName },\n  } = target;\n  const getResourceModel = () =>\n    sourceKind === EventingBrokerModel.kind ? EventingTriggerModel : EventingSubscriptionModel;\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const eventTypeName = searchParams.get(EVENT_TYPE_NAME_PARAM);\n  const eventTypeNamespace = searchParams.get(EVENT_TYPE_NAMESPACE_PARAM);\n\n  const [eventType, loaded] = useK8sGet<K8sResourceKind>(\n    EventingEventTypeModel,\n    eventTypeName,\n    eventTypeNamespace,\n  );\n  const specAttributes = ['type', 'source', 'schema'];\n\n  const rows = specAttributes\n    .filter((a) => loaded && eventType?.spec?.hasOwnProperty(a))\n    .reduce((a, v) => ({ ...a, [v]: eventType.spec[v] }), {});\n  const { kind, apiVersion, apiGroup } = getResourceModel();\n  const getSpecForKind = (connectorSourceKind: string) => {\n    let spec = {};\n    if (connectorSourceKind === EventingTriggerModel.kind) {\n      spec = { broker: sourceName, filter: {} };\n    } else {\n      spec = {\n        channel: {\n          apiVersion: sourceApiVersion,\n          kind: sourceKind,\n          name: sourceName,\n        },\n      };\n    }\n    return spec;\n  };\n  const yamlData = {\n    apiVersion: `${apiGroup}/${apiVersion}`,\n    kind,\n    metadata: { name: `${sourceName}-${getRandomChars()}`, namespace },\n    spec: {\n      ...getSpecForKind(kind),\n      filter: {\n        attributes: {\n          ...rows,\n        },\n      },\n      subscriber: {\n        ref: {\n          apiVersion: '',\n          kind: '',\n          name: '',\n        },\n      },\n    },\n  };\n  const initialValues = {\n    editorType: 'form',\n    formData: {\n      apiVersion: `${apiGroup}/${apiVersion}`,\n      kind,\n      metadata: { name: `${sourceName}-${getRandomChars()}`, namespace },\n      spec: {\n        ...getSpecForKind(kind),\n        filter: {\n          attributes: {\n            ...rows,\n          },\n        },\n        subscriber: {\n          ref: {\n            apiVersion: targetApiVersion,\n            kind: targetKind,\n            name: targetName,\n          },\n        },\n      },\n    },\n    yamlData: safeJSToYAML(yamlData, '', { skipInvalid: true }),\n  };\n\n  const handleSubmit = (values: FormikValues, action: FormikHelpers<FormikValues>) => {\n    return k8sCreate(getResourceModel(), sanitizeResourceName(values.formData))\n      .then((resource) => {\n        action.setStatus({ subscriberAvailable: true, error: '' });\n        history.push(`/topology/ns/${resource.metadata.namespace}`);\n      })\n      .catch((err) => {\n        const errMessage = err.message || t('knative-plugin~An error occurred. Please try again');\n        action.setStatus({\n          subscriberAvailable: true,\n          error: errMessage,\n        });\n      });\n  };\n\n  const handleCancel = () => history.goBack();\n\n  return loaded ? (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      initialStatus={{ error: '' }}\n      validationSchema={pubsubValidationSchema}\n    >\n      {(formikProps) => (\n        <SubscribeForm\n          {...formikProps}\n          filterEnabled={sourceKind === EventingBrokerModel.kind}\n          source={source}\n          handleCancel={handleCancel}\n        />\n      )}\n    </Formik>\n  ) : (\n    <LoadingBox />\n  );\n};\n\nexport default Subscribe;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  CodeEditorField,\n  FlexForm,\n  FormBody,\n  FormFooter,\n  InputField,\n  SyncedEditorField,\n} from '@console/shared';\nimport SwitchToYAMLAlert from '@console/shared/src/components/alerts/SwitchToYAMLAlert';\nimport { downloadYaml } from '@console/shared/src/components/editor/yaml-download-utils';\nimport { EditorType } from '@console/shared/src/components/synced-editor/editor-toggle';\nimport { safeJSToYAML } from '@console/shared/src/utils/yaml';\nimport {\n  EventingBrokerModel,\n  EventingSubscriptionModel,\n  EventingTriggerModel,\n} from '../../../models';\nimport PubSubFilter from '../../pub-sub/form-fields/PubSubFilter';\nimport PubSubSubscriber from '../../pub-sub/form-fields/PubSubSubscriber';\nimport { convertFormToTriggerYaml, convertYamlToForm } from './subscribe-utils';\n\nexport interface SubscribeFormProps {\n  filterEnabled: boolean;\n  source: K8sResourceKind;\n  handleCancel?: () => void;\n}\n\ntype Props = FormikProps<FormikValues> & SubscribeFormProps;\n\nconst LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY = 'knative.addSubscriberForm.editor.lastView';\n\nconst SubscribeForm: React.FC<Props> = ({\n  filterEnabled,\n  handleSubmit,\n  handleCancel,\n  isSubmitting,\n  status,\n  source,\n  errors,\n  values,\n}) => {\n  const { t } = useTranslation();\n  const [showYAMLAlert, setShowYAMLAlert] = React.useState<boolean>(true);\n  const { kind: sourceKind } = source;\n  const dirty = values?.formData?.metadata?.name && values?.formData?.spec?.subscriber?.ref?.name;\n  const getResourceModel = () =>\n    sourceKind === EventingBrokerModel.kind ? EventingTriggerModel : EventingSubscriptionModel;\n\n  const sanitizeToForm = (yamlbuild) => {\n    return convertYamlToForm(yamlbuild, values).formData;\n  };\n\n  const sanitizeToYaml = () => {\n    return safeJSToYAML(convertFormToTriggerYaml(values), '', {\n      skipInvalid: true,\n    });\n  };\n\n  const formEditor = (\n    <>\n      {showYAMLAlert && <SwitchToYAMLAlert onClose={() => setShowYAMLAlert(false)} />}\n      <FormSection>\n        <InputField\n          type={TextInputTypes.text}\n          name=\"formData.metadata.name\"\n          label={t('knative-plugin~Name')}\n          required\n        />\n        <PubSubSubscriber autoSelect={false} />\n        {filterEnabled && <PubSubFilter />}\n      </FormSection>\n    </>\n  );\n\n  const yamlEditor = (\n    <CodeEditorField name=\"yamlData\" model={getResourceModel()} showSamples onSave={handleSubmit} />\n  );\n\n  return (\n    <FlexForm onSubmit={handleSubmit}>\n      <FormBody flexLayout>\n        <SyncedEditorField\n          name=\"editorType\"\n          formContext={{\n            name: 'formData',\n            editor: formEditor,\n            sanitizeTo: sanitizeToForm,\n          }}\n          yamlContext={{\n            name: 'yamlData',\n            editor: yamlEditor,\n            sanitizeTo: sanitizeToYaml,\n          }}\n          lastViewUserSettingKey={LAST_VIEWED_EDITOR_TYPE_USERSETTING_KEY}\n          noMargin\n        />\n      </FormBody>\n      <FormFooter\n        isSubmitting={isSubmitting}\n        submitLabel={t('knative-plugin~Subscribe')}\n        cancelLabel={t('knative-plugin~Cancel')}\n        disableSubmit={\n          (values.editorType !== EditorType.YAML ? !dirty || !_.isEmpty(errors) : false) ||\n          isSubmitting\n        }\n        handleCancel={handleCancel}\n        errorMessage={status.error}\n        handleDownload={\n          values.editorType === EditorType.YAML && (() => downloadYaml(values.yamlData))\n        }\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default SubscribeForm;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { craftResourceKey, getResourceNameFromKey } from '../../pub-sub/pub-sub-utils';\n\nexport const convertYamlToForm = (triggerYaml: K8sResourceKind, values) => {\n  const trigger = _.cloneDeep(triggerYaml);\n  values.formData = {\n    apiVersion: trigger?.apiVersion,\n    kind: trigger?.kind,\n    metadata: {\n      name: trigger.metadata?.name,\n      namespace: trigger.metadata?.namespace,\n    },\n    spec: {\n      broker: trigger?.spec?.broker,\n      subscriber: {\n        ref: {\n          ...trigger?.spec?.subscriber.ref,\n          name: craftResourceKey(trigger?.spec?.subscriber?.ref?.name, {\n            kind: trigger?.spec?.subscriber?.ref?.kind,\n            apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n          }),\n        },\n      },\n      filter: trigger.spec?.filter,\n    },\n  };\n  return values;\n};\n\nexport const convertFormToTriggerYaml = (triggerFormData): K8sResourceKind => {\n  const parsedTrigger = safeYAMLToJS(triggerFormData.yamlData);\n  parsedTrigger.metadata = triggerFormData.formData.metadata;\n  parsedTrigger.spec.broker = triggerFormData.formData?.spec?.broker;\n  parsedTrigger.spec.filter = triggerFormData.formData.spec.filter;\n  parsedTrigger.spec.subscriber = triggerFormData.formData.spec.subscriber;\n  parsedTrigger.spec.subscriber.ref.name = getResourceNameFromKey(\n    triggerFormData?.formData.spec?.subscriber?.ref?.name,\n  );\n  return parsedTrigger;\n};\n"],"sourceRoot":""}