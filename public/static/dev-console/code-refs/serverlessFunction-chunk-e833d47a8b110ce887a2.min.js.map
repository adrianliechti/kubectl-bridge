{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./packages/dev-console/src/components/import/serverless-function/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/const.ts","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./packages/shipwright-plugin/src/types.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/dev-console/src/types/samples.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/dev-console/src/utils/samples.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/topology/src/components/svg/SvgResourceIcon.tsx","webpack:///./packages/dev-console/src/components/edit-application/edit-application-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/dev-console/src/components/import/CreateSecretModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualizationTask.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/draw-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/ErrorNodeDecorator.tsx","webpack:///./packages/dev-console/src/components/import/upload-jar-validation-utils.ts","webpack:///./packages/dev-console/src/components/import/app/AppSection.tsx","webpack:///./packages/dev-console/src/models/samples.ts","webpack:///./packages/dev-console/src/components/import/deployImage-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/factories.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/StatusIcon.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationSelector.tsx","webpack:///./packages/topology/src/components/svg/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/pipeline-step-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualizationStepList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/LoadingTask.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PlusNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskListNode.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/WebhookSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/hooks/pac-hook.ts","webpack:///./packages/dev-console/src/components/import/advanced/AdvancedSection.tsx","webpack:///./packages/dev-console/src/components/import/git/GitSection.tsx","webpack:///./packages/dev-console/src/components/user-preferences/usePreferredRoutingOptions.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthChecks.tsx","webpack:///./packages/dev-console/src/components/health-checks/HealthCheckProbe.tsx","webpack:///./packages/dev-console/src/components/health-checks/ProbeForm.tsx","webpack:///./packages/dev-console/src/components/health-checks/RequestTypeForms.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ResourceLimitSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/git/AdvancedGitOptions.tsx","webpack:///./packages/dev-console/src/components/import/git/SourceSecretSelector.tsx","webpack:///./packages/dev-console/src/components/dropdown/SourceSecretDropdown.tsx","webpack:///./packages/dev-console/src/components/import/git/GitTypeSelector.tsx","webpack:///./packages/dev-console/src/components/import/git/SampleRepo.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageTagSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/pipeline-details/PipelineVisualization.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineTopologyGraph.tsx","webpack:///./packages/dev-console/src/components/import/advanced/DeploymentConfigSection.tsx","webpack:///./packages/dev-console/src/components/import/route/SecureRoute.tsx","webpack:///./packages/dev-console/src/components/QueryFocusApplication.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/BuilderFinallyNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/WhenExpressionDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/dag.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/InstallingNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/RemoveNodeDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/BuilderNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/CustomTaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/FinallyNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/InvalidTaskListNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/LoadingNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineTaskNode.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/TaskEdge.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-topology/PipelineVisualizationSurface.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/ConfigTypeSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/GithubSection.tsx","webpack:///./packages/pipelines-plugin/src/components/repository/sections/PermissionsSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/LabelSection.tsx","webpack:///./packages/dev-console/src/components/import/advanced/RouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/AdvancedRouteOptions.tsx","webpack:///./packages/dev-console/src/components/import/serverless/ServerlessRouteSection.tsx","webpack:///./packages/dev-console/src/components/import/route/CreateRoute.tsx","webpack:///./packages/dev-console/src/components/import/route/PortInputField.tsx","webpack:///./packages/dev-console/src/components/import/advanced/ServerlessScalingSection.tsx","webpack:///./packages/dev-console/src/components/import/builder/builderImageHooks.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PipelineSection.tsx","webpack:///./packages/dev-console/src/components/import/form-initial-values.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PipelineTemplate.tsx","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PacSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/PacInfoPanel.tsx","webpack:///./packages/dev-console/src/utils/safe-k8s-hook.tsx","webpack:///./packages/dev-console/src/components/import/builder/BuilderImageEnvironments.tsx","webpack:///./packages/dev-console/src/components/import/builder/ImageStreamInfo.tsx","webpack:///./packages/dev-console/src/components/import/serverless/useUpdateKnScalingDefaultValues.ts","webpack:///./packages/dev-console/src/utils/serverless-functions.ts","webpack:///./packages/dev-console/src/components/import/serverless/useGetAutoscalerConfig.ts","webpack:///./packages/dev-console/src/components/import/serverless-function/ServerlessFunctionPage.tsx","webpack:///./packages/dev-console/src/components/import/serverless-function/AddServerlessFunction.tsx","webpack:///./packages/dev-console/src/components/import/serverless-function/AddServerlessFunctionForm.tsx","webpack:///./packages/dev-console/src/components/import/serverless-function/ServerlessFunctionStrategySection.tsx"],"names":["getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","spec","tags","tag","annotationTags","isBuilderTag","name","getBuilderTagsSortedByVersion","sort","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","common","factory","menuActions","getExtensionsActionsForKind","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","created","dockerRepositoryCheck","t","className","kind","metadata","namespace","title","linkTo","timestamp","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","value","ns","href","text","type","variant","ImageStreamsDetails","obj","imageRepository","imageCount","specTagByName","importErrors","status","acc","importErrorCondition","conditions","condition","push","message","warning","alerts","error","i","key","resource","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","displayName","pages","details","editYaml","history","ImageStreamsDetailsPage","props","tableColumnClasses","columnClass","ImageStreamsTableRow","columnID","labels","creationTimestamp","actions","ImageStreamsList","ImageStreamsTableHeader","sortField","transforms","id","Header","Row","virtualize","buildPhase","build","phase","ImageStreamsPage","ListComponent","canCreate","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","data","application","filter","dc","getRoutesURL","routes","length","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","e","DroppableFileInput","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","err","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","dataTest","style","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","catch","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","promises","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","metrics","podData","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","element","editAccess","canEdit","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","toLowerCase","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","description","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","NODE_SEPARATION_HORIZONTAL","DROP_SHADOW_SPACING","BUILDER_NODE_ADD_RADIUS","BUILDER_NODE_DECORATOR_RADIUS","BUILDER_NODE_ADD_PADDING","NODE_WIDTH","NODE_HEIGHT","FINALLY_NODE_PADDING","FINALLY_NODE_VERTICAL_SPACING","FINALLY_ADD_LINK_TEXT_HEIGHT","FINALLY_ADD_LINK_SIZE","WHEN_EXPRESSSION_DIAMOND_SIZE","WHEN_EXPRESSION_SPACING","DEFAULT_NODE_HEIGHT","NODE_PADDING","DEFAULT_NODE_ICON_WIDTH","DEFAULT_BADGE_WIDTH","DEFAULT_FINALLLY_GROUP_PADDING","TOOLBAR_HEIGHT","GRAPH_MIN_WIDTH","GRAPH_MAX_HEIGHT_PERCENT","NodeType","DrawDesign","PipelineLayout","AddNodeDirection","DAGRE_SHARED_PROPS","nodesep","ranksep","edgesep","ranker","rankdir","marginx","marginy","DAGRE_VIEWER_PROPS","DAGRE_VIEWER_SPACED_PROPS","DAGRE_BUILDER_PROPS","DAGRE_BUILDER_SPACED_PROPS","CustomTask","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","useK8sGet","opts","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","resourceType","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","location","dir","cluster","insecure","cadata","dispatch","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","getDefinedObj","objData","createPipelineResource","secretResp","resourceName","pipelineResource","fieldName","secretKey","createSecretResource","FILTER_ID","icon","circleRef","typedIconSize","typedIconRef","iconWidth","iconHeight","cx","cy","xlinkHref","topology","xmlns","viewBox","fill","role","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","ComputedBuildRunStatus","ClusterBuildStrategy","ReadableClusterBuildStrategies","BUILDAH","UNKNOWN","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","createGenericNode","runAfterTasks","createTaskNode","TASK_NODE","createCustomTaskNode","CUSTOM_TASK_NODE","createSpacerNode","SPACER_NODE","createTaskListNode","TASK_LIST_NODE","createInvalidTaskListNode","INVALID_TASK_LIST_NODE","createBuilderNode","BUILDER_NODE","createLoadingNode","LOADING_NODE","createBuilderFinallyNode","BUILDER_FINALLY_NODE","createPipelineTaskNode","handleParallelToParallelNodes","multipleRunBeforeMap","idx","atIndex","multiParallelToParallelList","newNodes","newRunAfterNodeMap","p2p","names","p2pData","parallelSpacerName","p2pNodeId","newRunAfters","createNode","getNodeCreator","tasksToBuilderNodes","onAddNode","onNodeSelection","getError","selectedIds","direction","getBuilderEdgesFromNodes","edgeList","getFinallyTaskHeight","allTasksLength","disableBuilder","getFinallyTaskWidth","whenExpressionSpacing","getLastRegularTasks","regularTasks","runAfters","concat","getTextWidth","font","context","document","createElement","getContext","measureText","extractDepsFromContextVariables","contextVariable","regex","deps","lastIndex","getSpacerNode","getTaskWhenStatus","Met","Unmet","getWhenStatus","getGraphDataModel","dag","addEdges","maxWidthForLevel","topologicalSort","level","vertex","depsFromContextVariables","paramValue","input","whenValue","dependancies","dependancyNames","depObj","vertices","minLevelDep","nd","badgePadding","isTaskSkipped","taskKind","whenStatus","finallyTaskList","maxFinallyNodeName","finallyNodes","fTask","FINALLY_NODE","finallyGroup","FINALLY_GROUP","spacerNodes","EDGE","graph","layout","DAGRE_VIEWER","scaleExtent","taskHasWhenExpression","nodesHasWhenExpression","getLayoutData","DAGRE_BUILDER","DAGRE_VIEWER_SPACED","DAGRE_BUILDER_SPACED","getWhenExpressionDiamondState","isPipelineRun","isFinallyTask","diamondColor","tooltipContent","getTooltipContent","statusReason","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","indexOf","submitStartPipeline","processWorkspaces","pipelineRunResource","createProject","projectData","createOrUpdateImageStream","formData","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","to","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","selector","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","responses","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspective","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","URL","search","URLSearchParams","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","fileUpload","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","findIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","Delete","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","isGitImportSource","gitImport","isContainerImportSource","containerImport","updateHealthChecksProbe","updatedResource","HealthCheckContext","viewOnly","useViewOnlyAccess","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createSampleLink","sample","set","getGitImportSample","sampleName","getContainerImportSample","hasSampleQueryParameter","groupConsoleSamplesByName","grouped","consoleSample","getBestMatch","preferredLanguage","preferredCountry","sameLanguageWithoutCountry","sameLanguageWithAnyCountry","fallbackLanguageSameCountry","fallbackLanguageNoCountry","fallbackLanguageAnyCountry","sampleLanguage","sampleCountry","useSamples","groupVersionKind","getSample","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","weight","SvgResourceIcon","leftJustified","iconRef","kindAbbr","kindStr","kindColor","getKindStringAndAbbreviation","textSize","textRef","paddingX","paddingY","rx","ry","textAnchor","ApplicationFlowType","getFlowTypePageTitle","flowType","Dockerfile","Container","JarUpload","BuildSourceType","getBuildSourceType","getResourcesType","getFlowType","Binary","getValidationSchema","checkIfTriggerExists","trigger","getKsvcRouteData","getRouteLabels","allLabels","allRouteLabels","getRouteData","insecureEdgeTerminationPolicy","caCertificate","certificate","destinationCACertificate","getBuildData","getBuildOption","buildStrategyType","shipwrightClusterBuildStrategyType","getServerlessData","serverlessData","autoscalewindowAnnotation","getDeploymentData","deploymentData","getUserLabels","getIconInitialValues","runtimeLabel","getGitAndDockerfileInitialValues","currentImage","isUrlValidating","getGitDataFromPipeline","getGitDataFromShipwrightBuild","getGitDataFromBuildConfig","tagObj","isRecommending","couldNotRecommend","deployImageInitialValues","searchTerm","registry","allowInsecureRegistry","isSearchingForImage","getExternalImageValues","appResource","getInitialValues","appName","editAppResourceData","shipwrightBuildData","commonValues","appGroupName","pacHasError","showEditImportStrategy","getCommonInitialValues","gitDockerValues","fileUploadValues","iconValues","externalImageValues","internalImageValues","isAllowInsecureRegistry","importPolicy","getExternalImageInitialValues","getInternalImageInitialValues","fileName","getFileUploadValues","getAllNotStartedPipelines","sessionStorage","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setItem","setPipelineNotStarted","CreateSecretModal","secretModalLauncher","PipelineVisualizationTask","pipelineRunName","disableTooltip","isSkipped","taskComponent","TaskComponent","taskSpec","disableVisualizationTooltip","stepStatusList","steps","showStatusState","visualName","nameRef","pillRef","enableLogLink","hasWhenExpression","hasRunAfter","taskStatusColor","hover","hoverRef","truncatedVisualName","truncateEnd","renderVisualName","taskPill","triggerRef","disableSpin","SvgTaskStatus","enableFlip","isSpecOverview","taskName","taskNode","appendLine","enableTooltip","leftOffset","stepWidth","segments","seg","leftRight","p1","p2","topDown","bottomUp","moveTo","lineTo","quadTo","corner","CURVE_SIZE","curve","fromPoint","cornerPoint","toPoint","rightAndDown","downAndRight","rightAndUp","upAndRight","straightPath","finish","integralShapePath","firstCurve","secondCurve","cornerX","firstCorner","secondCorner","errorStr","fileNameRegex","fileUploadValidationSchema","getAppName","shift","noProjectsAvailable","subPath","initialApplication","ConsoleSampleModel","propagationPolicy","deployValidationSchema","builderComponentsFactory","dagreViewerComponentFactory","layoutFactory","linkDistance","nodeDistance","groupDistance","collideDistance","simulationSpeed","chargeStrength","allowDrag","layoutOnDrag","StatusIcon","ColoredStatusIcon","others","applicationsAvailable","setApplicationsAvailable","availableApplications","projectsAvailable","touched","nameField","setFieldValue","setFieldTouched","applicationExists","setApplicationExists","applicationNameInputRef","fieldId","isValid","actionItems","actionTitle","actionKey","inputHelpText","focus","ariaLabel","menuClassName","autoSelect","onLoad","applicationList","noApplicationsAvailable","validated","trimmedApplicationName","TerminatedReasons","getMatchingStep","statusStep","getMatchingStepDuration","matchingStep","startedAt","finishedAt","running","createStepStatus","stepRunStatus","TooltipColoredStatusIcon","sharedProps","size","PipelineVisualizationStepList","hideHeader","truncatedName","tooltip","tooltipPosition","unselectedText","onRemoveTask","onNewTask","onTaskSearch","unselectedTaskText","truncatedTaskText","renderText","stopPropagation","removeCallback","formContextField","fieldPrefix","controllerUrl","setControllerUrl","setWebhookSecret","ctlUrl","labelIcon","activeChildren","rel","autocompleteFilter","showBadge","isReadOnly","hoverTip","clickTip","_event","toggleText","getPermssionSectionHeading","component","small","usePacInfo","Footer","defaults","components","List","visibleItems","setVisibleItems","onVisibleItemChange","defaultSample","showSample","importType","autoFocus","inputRef","dirty","isSubmitting","formikValues","formikTouched","errors","formikErrors","formikSetFieldValue","formikSetFieldTouched","isKnativeServingAvailable","canCreateKnativeService","canCreateKnativeServiceLoading","shouldValidate","formReloadCount","defaultSampleURL","defaultSampleDir","defaultSampleRef","defaultSampleTagObj","imageStreamTagSampleRepo","nameTouched","applicationNameTouched","imageSelectorTouched","gitDirTouched","gitTypeTouched","gitUrlError","setValidated","repoStatus","setRepoStatus","handleBuilderImageRecommendation","detectedBuildTypes","recommendedBuildType","handleDevfileStrategyDetection","devfileSourceUrl","devfileContents","handleGitUrlChange","submitError","isUnsureDetectedGitType","gitRepoName","importStrategyData","importStrategies","success","ServerlessFunction","debouncedHandleGitUrlChange","fillImageStreamTagSample","resetFields","isInContext","sampleRepository","helpTextInvalid","trimmedURL","isInline","PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY","usePreferredRoutingOptions","preferredRoutingOptions","setPreferredRoutingOptions","preferredRoutingOptionsLoaded","tlsTermination","insecureTraffic","probeType","temporaryProbeData","setTemporaryProbeData","showProbe","handleDeleteProbe","handleReset","handleSubmit","handleAddProbe","link","onClose","plain","healthCheckProbeAdded","noHealthCheckProbe","addHealthCheckProbe","renderProbe","RequestTypeOptions","getRequestTypeForm","maxWidth","afterInput","renderPortField","HTTPRequestTypeForm","initialNameValuePairs","nameValue","setNameValue","portFieldName","handleNameValuePairs","nameValuePairs","updatedNameValuePairs","valueFrom","valueString","addString","readOnly","allowSorting","updateParentData","TCPRequestTypeForm","CommandRequestTypeForm","commands","addLabel","disableDeleteRow","hideTitle","unitName","unitOptions","setOutputAsIntegerFlag","handleGitRefChange","handleGitDirChange","textExpanded","textCollapsed","handleSave","resourceFilter","handleGitTypeChange","typeValue","spaceItems","isSelected","selectedBuilderImage","selectedImageTag","showImageInfo","setFieldError","imageDisplayName","tagItems","isServerlessFunctionStrategySelected","k8sGet","componentFactory","showControlBar","noScrollbar","showHeader","knativeFuncLoaded","funcLoaded","deploymentConfigObj","secureRoute","terminationOptions","PASSTHROUGH","REENCRYPT","insecureTrafficOptions","None","Redirect","Allow","formLabel","onSetApp","originalApp","desiredApplication","APPLICATION","originalApplication","sanitizedApp","addNewFinallyListNode","finallyTasks","finallyListTasks","finallyLoadingTasks","finallyInvalidListTasks","nodeCenter","leftPadding","verticalHeight","finallyTaskLinkX","IntegralShape","taskIndex","ft","onTaskSelection","fld","ivl","convertList","flt","cursor","nodeRef","diamondHeight","sin","cos","diamondNode","stroke","x1","y1","x2","y2","DAG","Map","fn","visited","dependancy","len","has","visit","addVertex","hasOutgoing","fromNode","toNode","reverse","before","after","addEdge","orderedNodes","stage","trashRef","showAdd","AFTER","BEFORE","PARALLEL","CustomTaskComponent","customTask","customTaskName","customRun","resourcesData","strokeWidth","onContextMenu","contextMenuOpen","rest","detailsLevel","computedTask","stepList","skippedTask","succeededStepsCount","badge","passedData","newData","hasTaskIcon","taskIconClass","taskIcon","whenDecorator","toolTip","plrName","showContextMenu","scaleNode","high","hideDetailsAtMedium","truncateLength","classes","startPoint","getStartPoint","endPoint","getEndPoint","vis","setVis","maxSize","setMaxSize","setWidth","storedGraphModel","onLayoutUpdate","nodeBounds","w1","w2","maxHeight","h1","h2","maxObject","nb","maxX","maxY","horizontalMargin","verticalMargin","finallyTaskHeight","regularTaskHeight","visualization","registerLayoutFactory","registerComponentFactory","fromModel","addEventListener","getNodes","onResize","contentRect","measureRef","innerHeight","controller","controlBar","controlButtons","zoomInCallback","scaleBy","zoomOutCallback","fitToScreenCallback","fit","resetViewCallback","reset","legend","WEBHOOK","appLink","permission","defaultPort","domainMappingLoaded","domainMappingLoadErr","ksvc","mappedDomain","domainRes","filterDm","newDomainMap","domainsInUse","placeholderText","isCreatable","marginBottom","knativeService","portOptions","placeholderPort","toggleOnSelection","AutoscaleWindowUnits","m","h","useBuilderImageEnvironments","environmentExtensions","resolved","environments","flat","flags","existingPipeline","hasCreatePipelineAccess","canListPipelines","canCreatePipelines","usePipelineAccessReview","getBaseInitialValues","activeApplication","initial","getAlertText","isDockerStrategy","MISSING_DOCKERFILE_LABEL_TEXT","noTemplateForRuntime","setNoTemplateForRuntime","isPacRepo","setIsPacRepo","isPipelineTypeChanged","setIsPipelineTypeChanged","isExpanded","setIsExpanded","pipelineTemplates","setPipelineTemplates","pipelineStorageRef","isRepositoryEnabled","isPipelineAttached","isServerlessFunctionStrategy","getPipelineNames","pl","handlePipelineTypeChange","disallowedPacGitTypes","ignore","builderPipelineLabel","dockerPipelineLabel","funcPipelineLabel","fetchedPipelines","imagePipelines","candidatePipelines","pipelineTemplate","pipelineTemplateItems","img","builderImageTitle","onChangePipelineType","onToggle","setGithubAppAvailable","translatedResourceName","inlineCompact","useSafeK8s","mounted","AbortController","abort","signal","defaultValue","iconSize","annotationTag","useUpdateKnScalingDefaultValues","initialValues","knScalingConfig","initialValuesState","setInitialValuesState","previousValues","setKnScalingDefaultValue","SupportedRuntime","notSupportedRuntime","getRuntimeImage","Node","TypeScript","nodejs","Quarkus","java","useGetAutoscalerConfig","configmap","configmapLoaded","configmapError","_example","light","forApplication","postFormCallback","fireTelemetryEvent","initialBaseValues","dockerfileHasError","initialVals","projects","isData","isLoadError","projectName","isPipelineOptionChecked","updatedFormData","resourceActions","selectId","setStatus","onReset","goBack","formikProps","showPipelineSection","setShowPipelineSection","showFullForm","setHelpText","fetchPipelineTemplate","sm","alignSelf","additionalClassName","submitLabel","disableSubmit","resetLabel","sticky"],"mappings":"uGAAA,snD,kCCAA,42BA0BA,MAGaA,EAAqBC,GAChC,IAAMA,EAAS,mBAAoB,IAAIC,MAAM,WAalCC,EAAkBC,IAC7B,MAAMC,EANc,CAACD,IACrB,MAAMC,EAAa,IAAMD,EAAa,eACtC,OAAO,IAAQC,EAAY,QAIRC,CAAcF,GACjC,OAAO,IAASA,EAAYG,KAAKC,KAAOC,GAbrB,CAACR,IAEpB,MAAMS,EAAiBV,EAAkBC,GACzC,OAAO,IAAWS,EAAgB,aAAe,IAAWA,EAAgB,WAU5BC,CAAaF,IAAQJ,EAAWI,EAAIG,QAIzEC,EAAiCT,GACrCD,EAAeC,GAAaU,KAAK,EAAGF,KAAMG,IAAOH,KAAMI,MAC5D,MAAMC,EAAK,SAAcF,GACnBG,EAAK,SAAcF,GACzB,OAAKC,GAAOC,EAGPD,EAGAC,EAGE,WAAgBD,EAAIC,IAFjB,EAHD,EAHAH,EAAEI,cAAcH,KAYhBI,EAA2BhB,IACtC,MAAMI,EAAOK,EAA8BT,GAC3C,OAAO,IAAOI,IAMHa,EAAajB,IAAkC,IAAUD,EAAeC,KAE/E,OAAEkB,GAAW,IAAMC,QACnBC,EAAc,IAAI,IAAMC,4BAA4B,uBAAsBH,GAE1EI,EAAyD,EAC7DtB,cACAH,UACA0B,gBAEA,MAAMC,EAAoB,IAAMxB,EAAa,UACvCyB,EAAS,IAAMF,EAAW,CAAC,QAAS,IACpCG,EAAO,IAAM7B,EAAS,QACtB8B,EAAgD,mBAAhC,IAAM9B,EAAS,aAC/B+B,EAAQ,IAAMH,EAAQ,SACtBI,EAAU,IAAMJ,EAAQ,WACxBK,EAAwB,IAAM9B,EAAa,CAC/C,WACA,cACA,8CAEI,EAAE+B,GAAM,2BACd,OACE,uBAAKC,UAAU,OACb,uBAAKA,UAAU,4CACb,gBAAC,eAAY,CACXC,KAzEiD,iBA0EjDzB,KAAM,YAAsBR,EAAYkC,SAAS1B,KAAMe,EAAUlB,KACjE8B,UAAWnC,EAAYkC,SAASC,UAChCC,MAAOb,EAAUlB,IACjBgC,SAAUT,KAGd,wBAAMI,UAAU,2CACbN,GAAQC,GACP,gBAAC,eAAY,CACXM,KAnF+C,iBAoF/CzB,KAAMkB,EAAKlB,KACX2B,UAAWnC,EAAYkC,SAASC,UAChCC,MAAOV,EAAKlB,OAGfkB,IAASC,GAAiB,gCAAGD,EAAKlB,OACjCkB,GAAQ,wBAAMM,UAAU,cAAcD,EAAE,yBAE5C,wBAAMC,UAAU,6CACZR,GAAqBM,GACrB,gCACE,gBAAC,KAA6B,M,IACvBC,EAAE,8BAGXP,IAAsBM,IAA0BJ,GAAQ,gCAAGK,EAAE,2BAE7DP,IAAsBM,GAAyBJ,GAAQ,gCAAGK,EAAE,sBAC7DP,GAAqBI,GAAS,gCAAGA,GACjCJ,IAAsBI,GACrB,gCACE,gBAAC,KAA6B,M,IACvBG,EAAE,uDAIf,uBAAKC,UAAU,gCACZH,GAAW,gBAAC,YAAS,CAACS,UAAWT,KAChCA,GAAW,OAMRU,EAA0E,EACrFvC,cACAK,UAEA,MAAMmC,EAAwB,IAAMxC,EAAa,uCAC3C,EAAE+B,GAAM,2BACd,IAAKS,EACH,OAAO,KAET,MACMC,EAAc,eAAeD,KAAyBnC,GAAO,UAC7DqC,EAAc,eAAeF,KAAyBnC,GAAO,UAEnE,OACE,gBAAC,IAAO,CACNsC,cAAe,gCAAGZ,EAAE,mCACpBC,UAAU,qCACVY,SAAS,QACTC,YACE,2BACE,yBACGd,EACC,qGAGJ,2BACA,yBAAIA,EAAE,iDACN,gBAAC,IAAe,CAACe,MAlBJ,sBAmBb,2BACA,yBAAIf,EAAE,6CACN,gBAAC,IAAe,CAACe,MAAOL,IACxB,2BACA,yBAAIV,EAAE,+CACN,gBAAC,IAAe,CAACe,MAAOJ,IACxB,2BACA,yBACE,gBAAC,QAAK,CAACX,EAAGA,EAAGgB,GAAG,U,yDACwC,wCAAwB,I,YACpE,KAEZ,gBAAC,IAAY,CAACC,KAAM,IAAgBC,KAAMlB,EAAE,2BAKlD,gBAAC,IAAM,CAACC,UAAU,sBAAsBkB,KAAK,SAASC,QAAQ,QAC5D,gBAAC,IAAkB,CAACnB,UAAU,oBAC7BD,EAAE,mFAMEqB,EAA2D,EAAGC,IAAKrD,MAC9E,MAAM,EAAE+B,GAAM,2BAkBRuB,EAAkB,IAAMtD,EAAa,gCACrCwC,EAAwB,IAAMxC,EAAa,sCAC3CuD,EAAa,IAAMvD,EAAa,sBAChCwD,EAAgB,IAAQxD,EAAYG,KAAKC,KAAM,QAC/CqD,EAnBG,IAAYzD,EAAY0D,OAAOtD,KAAM,CAACuD,EAAKtD,KAChD,MAAMuD,EAAuB,IAC3BvD,EAAIwD,WACHC,GAAiC,kBAAnBA,EAAUZ,MAAiD,UAArBY,EAAUJ,QAEjEE,GACED,EAAII,KACFhC,EAAE,2DAA4D,CAC5D1B,IAAK,GAAGL,EAAYkC,SAAS1B,QAAQH,EAAIA,MACzC2D,QAASJ,EAAqBI,aAYxC,OACE,2BACE,uBAAKhC,UAAU,oBACX,IAAUyB,IACV,gBAAC,IAAe,CACdN,QAAS,IAAac,QACtBC,OAAQ,IAAMT,EAAc,CAACU,EAAOC,IAClC,gBAAC,WAAc,CAACC,IAAKD,GAAID,MAI/B,gBAAC,IAAc,CAAClB,KAAMlB,EAAE,gCACxB,uBAAKC,UAAU,OACb,uBAAKA,UAAU,YACb,gBAAC,IAAe,CAACsC,SAAUtE,GACxBsD,GAAmB,0BAAKvB,EAAE,4BAC1BuB,GAAmB,0BAAKA,GACxBd,GAAyB,0BAAKT,EAAE,mCAChCS,GAAyB,0BAAKA,GAC/B,0BAAKT,EAAE,uBACP,0BAAKwB,GAA0B,IAEjC,gBAAChB,EAA2B,CAACvC,YAAaA,OAIhD,uBAAKgC,UAAU,mBACb,gBAAC,IAAc,CAACiB,KAAMlB,EAAE,iBACvB,IAAU/B,EAAY0D,OAAOtD,MAC5B,wBAAM4B,UAAU,cAAcD,EAAE,mBAEhC,uBAAKC,UAAU,OACb,uBAAKA,UAAU,6CACb,uBAAKA,UAAU,6BACb,uBAAKA,UAAU,8BAA8BD,EAAE,gBAC/C,uBAAKC,UAAU,8BAA8BD,EAAE,gBAC/C,uBAAKC,UAAU,+BAA+BD,EAAE,sBAChD,uBAAKC,UAAU,gCAAgCD,EAAE,yBAEnD,uBAAKC,UAAU,yBACZ,IAAMhC,EAAY0D,OAAOtD,KAAOmB,GAC/B,gBAACD,EAAkB,CACjB+C,IAAK9C,EAAUlB,IACfL,YAAaA,EACbH,QAAS2D,EAAcjC,EAAUlB,KACjCkB,UAAWA,WAYzBgD,EAAwD,EAAGlB,IAAKrD,MACpE,MAAMwE,EAAwB,IAAMxE,EAAa,eACjD,OACE,gBAAC,IAAmB,CAClByE,gBAAiBD,EACjBE,gBAAiB1E,EAAYkC,SAAS1B,KACtCmE,qBAAsB3E,EAAYkC,SAASC,aAIjDoC,EAAmBK,YAAc,qBAEjC,MAAMC,EAAQ,CACZ,aAAWC,QAAQ1B,GACnB,aAAW2B,WACX,aAAWC,QAAQT,IAERU,EAAsCC,GACjD,gBAAC,IAAW,iBAAKA,EAAK,CAAEjD,KAhR8B,cAgRDb,YAAaA,EAAayD,MAAOA,KAExFI,EAAwBL,YAAc,0BAEtC,MAAMO,EAAqB,CACzB,GACA,GACA,iCACA,iCACA,IAAMC,aAGFC,EAAmE,EAAGhC,SAExE,gCACE,gBAAC,IAAS,CAACrB,UAAWmD,EAAmB,IACvC,gBAAC,eAAY,CACXlD,KAjS8C,cAkS9CzB,KAAM6C,EAAInB,SAAS1B,KACnB2B,UAAWkB,EAAInB,SAASC,aAG5B,gBAAC,IAAS,CACRH,UAAW,EAAWmD,EAAmB,GAAI,iBAC7CG,SAAS,aAET,gBAAC,eAAY,CAACrD,KAAK,YAAYzB,KAAM6C,EAAInB,SAASC,aAEpD,gBAAC,IAAS,CAACH,UAAWmD,EAAmB,IACvC,gBAAC,IAAS,CAAClD,KA7SqC,cA6SRsD,OAAQlC,EAAInB,SAASqD,UAE/D,gBAAC,IAAS,CAACvD,UAAWmD,EAAmB,IACvC,gBAAC,YAAS,CAAC7C,UAAWe,EAAInB,SAASsD,qBAErC,gBAAC,IAAS,CAACxD,UAAWmD,EAAmB,IACvC,gBAAC,IAAa,CAACM,QAASrE,EAAaa,KAnTW,cAmTkBqC,SAAUjB,MAMvEqC,EAA+BR,IAC1C,MAAM,EAAEnD,GAAM,2BACR4D,EAA0B,IACvB,CACL,CACEvD,MAAOL,EAAE,eACT6D,UAAW,gBACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,KAEzC,CACE/C,MAAOL,EAAE,oBACT6D,UAAW,qBACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,IACvCW,GAAI,aAEN,CACE1D,MAAOL,EAAE,iBACT6D,UAAW,kBACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,KAEzC,CACE/C,MAAOL,EAAE,kBACT6D,UAAW,6BACXC,WAAY,CAAC,KACbX,MAAO,CAAElD,UAAWmD,EAAmB,KAEzC,CACE/C,MAAO,GACP8C,MAAO,CAAElD,UAAWmD,EAAmB,MAM7C,OAFAQ,EAAwBf,YAAc,0BAGpC,gBAAC,IAAK,iBACAM,EAAK,cACGnD,EAAE,uBACdgE,OAAQJ,EACRK,IAAKX,EACLY,YAAU,MAKhBP,EAAiBd,YAAc,mBAExB,MAAMsB,EAAcC,GAAUA,EAAMzC,OAAO0C,MAErCC,GAAsDnB,IACjE,MAAM,EAAEnD,GAAM,2BACd,OACE,gBAAC,IAAQ,iBACHmD,EAAK,CACT9C,MAAOL,EAAE,uBACTE,KAnXkD,cAoXlDqE,cAAeZ,EACfa,WAAW,MAKjBF,GAAiBzB,YAAc,wB,kCCpZ/B,+E,kCCAA,4iC,kCCAA,2Q,kCCAA,IAAY4B,EAGAC,EAGAC,EAOAC,EAMAC,EAIAC,EAOAC,EAOAC,EASAC,EA9CZ,63BAAYR,GACV,+CADF,CAAYA,MAAc,KAG1B,SAAYC,GACV,0CADF,CAAYA,MAAmB,KAG/B,SAAYC,GACV,gDACA,yBACA,qCACA,8CACA,wCALF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,mBACA,wBACA,wBACA,4BAJF,CAAYA,MAAa,KAMzB,SAAYC,GACV,mDACA,sCAFF,CAAYA,MAAe,KAI3B,SAAYC,GACV,iCACA,uCACA,+BACA,yCAJF,CAAYA,MAAmB,KAO/B,SAAYC,GACV,YACA,gBACA,oBACA,oBAJF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,4BACA,kCACA,wBACA,kBACA,YACA,4CANF,CAAYA,MAAW,KASvB,SAAYC,GACV,YACA,iBAFF,CAAYA,MAAkB,KAM3BA,EAAmBC,IACnBD,EAAmBE,MAFf,MAKMC,EAAsB,QACtBC,EAAsB,QACtBC,EAAwC,QACxCC,EAA2B,WAC3BC,EAAiC,wCAEjCC,EAAuB,IACvBC,EAA8B,IAG9BC,EAAkB,GAGlBC,EAA0B,sCAC1BC,EAAyB,2BAEzBC,EAAqB,sBACrBC,EAAiC,YACjCC,EAAuB,SAEpC,IAAYC,GAAZ,SAAYA,GACV,sCACA,kDACA,kCACA,4CAJF,CAAYA,MAAoB,KAOzB,MAAMC,EAAyB,yBACzBC,EACX,2CACWC,EACX,4C,kCCtFF,4jBAmBO,MAAMC,EAAiB,CAC5B,cACA,oBACA,aACA,eACA,OACA,WACA,QAQWC,EAA0B,EAAGC,WACxCA,EAAMC,IAAI,KAECC,EAAuBC,I,UAClC,MAAMC,EAAiB,IAAOD,EAAc,CAAC,gBAAiB,QAC9D,MAAO,CACLE,OAA4B,QAApB,EAAAD,aAAc,EAAdA,EAAgBvI,YAAI,eAAE6C,KAC9B4F,WAAiD,QAArC,EAAoB,QAApB,EAAAF,aAAc,EAAdA,EAAgBvI,YAAI,eAAE0I,uBAAe,eAAEC,WA2B1CC,EAAa,CACxBC,EACAC,EACAN,EACAO,KAEA,IAAKF,EACH,OAAO,KAET,MAAMG,EAhCc,EAACC,EAA4BC,EAAiBH,KAClE,MAAMI,EAAU,WAAWF,EAAO9E,YAAY8E,EAAOG,SAASH,EAAO5I,OACrE,IAAK6I,EACH,OAAOC,EAET,MAAME,EAAcN,EAAa,IAAIA,EAAWO,QAAQ,MAAO,IAAQ,GACvE,OAAIL,EAAO9E,SAASoF,SAAS,UACpB,GAAGJ,UAAgBD,IAASG,IAEjCJ,EAAO9E,SAASoF,SAAS,UACpB,GAAGJ,YAAkBD,IAASG,IAEnCJ,EAAO9E,SAASoF,SAAS,SACpB,GAAGJ,gBAAsBD,IAASG,IAIvCJ,EAAO9E,SAASoF,SAAS,eAAiBL,EAAOK,SAAS,KACrD,GAAGJ,SAAeD,IAASG,IAE7BF,GAYYK,CAAc,EAAYX,GAASC,EAAWC,GACjE,OAAOP,EAAS,GAAGA,WAAgBQ,4BAAuCA,GAG/DS,EAAiC,CAC5CnB,EACAtG,K,QAIA,OAF+F,QAA7E,EAAuE,QAAvE,MAAOsG,EAAc,CAAC,gBAAiB,mBAAmBtG,WAAa,eAAEhC,YAAI,eAC3F6C,OACgB,IAMT6G,EAAiC,CAC5CC,EACAC,IAGKA,EAGED,EAAKE,OAAQC,GACX,IAAMA,EAAI,CAAC,WAAY,SALhB,gCAKwCF,GAH/CD,EAUEI,EAAe,CAAC5F,EAA2B6F,IAClDA,EAAOC,OAAS,IAAM,IAAUD,EAAO,GAAGhK,MACrC,YAAegK,EAAO,IAExB,KAGIE,EAA6BC,I,MACxC,OAAKA,EAGEA,EAAehG,WAAoC,QAAxB,EAAAgG,EAAeC,iBAAS,eAAElH,KAFnD,MAKEmH,EAAoCC,I,MAE/C,OADsC,QAApB,EAAAA,SAAoB,eAAED,gBACbH,EAA0BI,aAAI,EAAJA,EAAMC,YAGhDC,EAAmBF,GACvBA,aAAgB,IAClBA,EAAqBE,kBACtB,aAAaN,EAA0BI,aAAI,EAAJA,EAAMC,YAGtCE,EAAoC,CAC/CC,EACAd,KAEA,MAAMe,EAAWD,aAAI,EAAJA,EAAMH,UACjBpG,EAAWkG,EAAYK,GAC7B,IAAKA,IAASvG,IAAa,IAAOwG,EAASP,WACzC,OAAOQ,QAAQC,SAGjB,MAAMT,EAA+B,GAC/BU,EAA0B,GAEhCV,EAAUxG,KAAKO,GAEXuG,EAAKK,YAAc,KACrB,IAAUJ,EAASK,eAAiBC,IAClCb,EAAUxG,KAAKqH,EAAc9G,YAIjC,IAAK,MAAM+G,KAAgBd,EAAW,CACpC,MAAMe,EAAe,aAAS,aAAaD,IAC3C,IAAKC,EACH,OAAOP,QAAQC,OACb,IAAIO,MACF,IAAQxJ,EAAE,yEAA0E,CAClFE,KAAMoJ,EAAapJ,SAK3BgJ,EAAQlH,KAAK,YAA0BuH,EAAcD,EAActB,IAGrE,OAAOgB,QAAQS,IAAIP,IAGRQ,EAAmC,CAC9CC,EACAC,EACAC,EAAiC,OAE5BF,GAAWC,GAAUD,IAAWC,EAM9B,YAAyBD,EAAQC,EAAQC,GALvCb,QAAQC,OACb,IAAIO,MAAM,IAAQxJ,EAAE,iEAOb8J,EAAoCC,IAC/C,MAAMJ,EAASlB,EAAYsB,EAAKC,aAC1BJ,EAASnB,EAAYsB,EAAKE,aAEhC,OAAKN,GAAWC,EAIT,YAAyBD,EAAQC,GAH/BZ,QAAQC,W,kCChMnB,uSAKO,MAAMiB,EAAuBC,IAClC,OAAQA,GACN,KAAK,IAAsBR,OACzB,OAAO,IAAWS,UACpB,KAAK,IAAsBvK,MACzB,OAAO,IAAWwK,iBACpB,QACE,OAAO,IAAWC,SAIXC,EAAqBC,IAChC,MAAM,KAAEzC,EAAI,KAAE5G,GAASqJ,EACvB,OAAQrJ,GACN,KAAK,IAAWiJ,UAChB,KAAK,IAAWK,QACd,OAAO,IAAsBd,OAC/B,KAAK,IAAWU,iBAChB,KAAK,IAAWK,UACd,OAAO,IAAsB7K,MAC/B,QACE,OAAIkI,aAAI,EAAJA,EAAO,sBAAsC,IAAjB,IAAOA,GAC9B,IAAsB4C,QAExB,IAAsBC,UAItBC,EAAiB,KAE5B,MAAMC,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,GACf,OAAOL,IAAOA,IAAOA,IAAOA,KAGjBM,EAAuBC,IAClC,MAAMC,EAAW,IAAOD,GAAY1M,OACpC,OAAI,IAAU2M,EAAU,CAAC,UAAW,YAC3B,IAAWC,IACT,IAAUD,EAAU,CAAC,SAAU,YAAa,iBAAkB,UAChE,IAAWE,oBACT,IAAUF,EAAU,CAAC,eACvB,IAAWZ,UACT,IAAUY,EAAU,CAAC,sBACvB,IAAWjB,iBACT,IAAUiB,EAAU,CAAC,WAAY,aACnC,IAAWlB,UACT,IAAUkB,EAAU,CAAC,mBACvB,IAAWb,QAEb,IAAWH,QAGPmB,EAAqBC,IAChC,OAAQA,GACN,KAAK,IAAWhB,UACd,MAAO,aACT,KAAK,IAAWL,iBACd,MAAO,oBACT,QACE,OAAOqB,IAIAC,EAAiB,CAC5BC,EACAzB,KAEA,MAAM,EAAEnK,GAAM,2BACd,OAAQmK,GACN,KAAK,IAAsBS,QACzB,OAAkB5K,EAAX4L,EAAa,iCAAsC,gCAC5D,KAAK,IAAsB/L,MACzB,OAAkBG,EAAX4L,EAAa,kCAAuC,iCAC7D,QACE,OACI5L,EADG4L,EACD,sCACA,oCADuC,CAAEF,WAAYvB,MAKpD0B,EAAwB1B,IACnC,MAAM,EAAEnK,GAAM,2BACd,OAAQmK,GACN,KAAK,IAAsBS,QACzB,OAAO5K,EACL,mHAEJ,KAAK,IAAsB2J,OACzB,OAAO3J,EAAE,oEACX,KAAK,IAAsBH,MACzB,OAAOG,EAAE,oFACX,KAAK,IAAsB2K,QACzB,OAAO3K,EAAE,kEACX,QACE,OAAO,Q,kCCtGb,+N,wXCWO,MAAe8L,EAGpB,YAAYC,GACVC,KAAKD,UAAYA,EA+Fb,mB,yCACJ,IACE,MAAME,QAAiBD,KAAKE,kBACtBC,EAAa,YAAiBF,EAASG,OAC7C,GAAIH,EAASG,MAAMzE,SAAS,gBAAiB,CAC3C,MAAM0E,QAA2BL,KAAKM,wBACtC,GAAI,YAAeD,GACjB,OAAOF,EAAWxN,KAAK,CAACC,EAAGC,IACL,kBAAhBA,EAAE0N,UAAsC,EACxB,kBAAhB3N,EAAE2N,WAAuC,EACtC,GAIb,OAAOJ,EACP,MAAOK,GACP,MAAO,U,kCC9Hb,sDAIO,MAAMC,EAAsBtJ,GACjC,gBAAC,IAAc,eACbuJ,OAAQ,IAAM,0CAAiCC,KAAMC,GAAMA,EAAEH,qBACzDtJ,K,kCCPR,qlB,kCCAA,yS,8eCIO,MAAM0J,EAAgB,kCA2BhBC,EAAkBC,GACtBC,OAAOC,KAAKF,GAASG,OAAO,CAACC,EAAQ7K,KAC1C6K,EAAO7K,GAAO,CAACyK,EAAQzK,IAChB6K,GACN,IAMQC,EAA2BC,GAAuD,OAAD,6BAC5F,MAAMC,QAAqC,mBAAiBC,KAAKV,EAAeQ,GAChF,IAAKC,EAAcE,WACjB,MAAM,IAAIhE,MAAM,sDAElB,GAAI8D,EAAcE,WAAa,KAAOF,EAAcE,YAAc,IAChE,MAAM,IAAI,IACR,2BAA2BF,EAAcE,WACzCF,EAAcE,WACd,KACAF,GAGJ,OAAOA,KAGIG,EAA4BJ,GAChCD,EAAkBC,GAAcV,KAAMe,GApC1B,CAACC,IACpB,IACEC,KAAKC,MAAMF,GACX,MAAOnB,GACP,OAAO,EAET,OAAO,GA+BEsB,CAAaJ,EAASK,MAAQH,KAAKC,MAAMH,EAASK,MAAQ,mBAASL,EAASK,Q,kCC3DvF,yMAoBO,MAAMC,EAAqD7K,IAChE,MAAM,SAAEyI,EAAQ,MAAEqC,EAAK,SAAEC,GAAa/K,GAChC,EAAEnD,GAAM,2BACRmO,EAAW,wBACXC,EAAS,sBAETC,EAAiB,IAAOlL,EAAM7B,IAAK,CAAC,WAAY,SAChDgN,EAAoB,YAAoBnL,EAAMoL,uBAC9CC,EAAgB,IAAe,GAAIrL,EAAMsL,MAAOJ,EAAgB,CACpEK,WAAY,KACZ3G,KAAM,GACN7H,KAAM,SACNC,SAAU,CACR1B,KAAM,IAER0C,KAAMmN,KAGDC,GAAyB,WAAepL,EAAMoL,wBAC9C/D,EAAQmE,GAAa,WAAeH,IACpCI,EAAYC,GAAiB,YAAe,IAC5CzM,EAAO0M,GAAY,cACnBzD,EAAY0D,GAAiB,WAClC,IAAY,IAAM5L,EAAM7B,IAAK,QAAUP,GAC9BA,EAAQ,SAAOiO,OAAOjO,GAAS,MAGnCkO,EAAkBC,GAAuB,WAAe,KACxDC,EAAaC,GAAkB,YAAe,GAC/C/O,EAAQ,YAAeuL,EAAU2C,GACjCc,EAAW,YAAqBd,GAChCe,EAAS,IAAMnB,EAAS,WAAWC,EAAOpN,qBAE1CuO,EAAiBC,IACrBT,EAAc,OAAD,UAAMS,aAAW,EAAXA,EAAanE,aAChC6D,EAAoB,OAAD,UAAMM,aAAW,EAAXA,EAAaP,oBAGlCQ,EAAWC,IACfZ,EAASY,GACTb,GAAc,IAGVc,EAAiBC,IACrB,MAAMnR,EAAOmR,EAAMhG,OAAO7I,MACpB8O,EAAY,IAAYrF,GAC9BqF,EAAU1P,SAAS1B,KAAOA,EAC1BkQ,EAAUkB,IAGNC,EAAQtD,IACZA,EAAEuD,iBACF,MAAM,SAAE5P,GAAaqK,EACrBqE,GAAc,GACd,MAAM9G,EAAO,OAAH,wBACL,IAAYsD,EAAatK,GACnB,SAAOiP,OAAOjP,KAEpBkO,GAECY,EAAY,IAChB,GACArF,EACA,CACEzC,QAIF6D,EAAW,CAAEzK,KAAM,YAAoBkK,IAAgB,KAExDO,EACG,aAAU,cAAaiE,GACvB,aAAU,cAAaA,EAAW1P,EAASC,UAAWyP,EAAU1P,SAAS1B,OAC3EkO,KACCsD,IACCpB,GAAc,GACV1L,EAAM+M,QACR/M,EAAM+M,OAAOD,EAAE9P,SAAS1B,MAErB0E,EAAM8K,OACTE,EAAS,aAAgB8B,EAAG,aAAaA,MAG5CP,IACCZ,EAASY,EAAIzN,SACb4M,GAAc,MAKdsB,EAAa,K,MAGjB,OACE,gCACE,4BAAUC,UAAWxE,GACnB,uBAAK3L,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAQ,eAClDrQ,EAAE,uBAEL,2BACE,yBACEC,UAAU,uBACVkB,KAAK,OACLmP,SAAUX,EACV5O,MAAuB,QAAhB,EAAAyJ,aAAM,EAANA,EAAQrK,gBAAQ,eAAE1B,KAAI,mBACZ,mBACjBsF,GAAG,cAAa,YACN,cACVwM,UAAQ,IAEV,qBAAGtQ,UAAU,aAAa8D,GAAG,oBAC1B/D,EAAE,6CAKX,gBAAC,IAAa,CACZmK,gBAAiBhH,EAAMoL,sBACvB+B,SAAUf,EACVE,QAASA,EACTe,cAAgBC,GAAYrB,EAAeqB,GAC3CpF,WAAYA,EACZK,WAAYlB,EAAOrJ,KACnByK,SAAUA,MAMlB,OAAOqC,EACL,wBAAMhO,UAAU,sCAAsCyQ,SAAUZ,GAC9D,gBAAC,IAAU,KAAEzP,GACb,gBAAC,IAAS,KAAE8P,KACZ,gBAAC,IAAiB,CAChBQ,aAAcvO,GAAS,GACvBwM,WAAYA,EACZgC,WAAY5Q,EAAE,iBACdsP,OAAQpB,GAAYoB,KAIxB,uBAAKrP,UAAU,mBACb,gBAAC,IAAM,KACL,6BAAQI,IAEV,gBAAC,IAAW,CAACA,MAAOA,EAAOwQ,SAAUxB,IACrC,uBAAKpP,UAAU,mBACb,wBAAMA,UAAU,8CAA8CyQ,SAAUZ,GACrEK,IACD,gBAAC,IAAS,CAACQ,aAAcvO,EAAOwM,WAAYA,GAC1C,gBAAC,IAAW,CAAC3O,UAAU,gBACrB,gBAAC,IAAM,CACLkB,KAAK,SAAQ,YACH,eACV2P,WAAY3B,EACZ/N,QAAQ,UACR2C,GAAG,gBAEFZ,EAAM4N,gBAAkB/Q,EAAE,kBAE7B,gBAAC,IAAM,CAACmB,KAAK,SAASC,QAAQ,YAAY2C,GAAG,SAASiN,QAAS9C,GAAYoB,GACxEtP,EAAE,yB,kCCpLnB,geAuBYiR,EAvBZ,mBAuBA,SAAYA,GACV,sCACA,0BACA,kDAHF,CAAYA,MAAkB,KAqQvB,MAAMC,EAAmB,CAC9B,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,OAAQ,QACrB,CAAC,IAAYC,WAAY,YACzB,CAAC,IAAYC,QAAS,SAGxB,IAAYC,EAOAC,EAMAC,EAOAC,GApBZ,SAAYH,GACV,YACA,oBACA,kBACA,YAJF,CAAYA,MAAW,KAOvB,SAAYC,GACV,wBACA,0BACA,2BAHF,CAAYA,MAAS,KAMrB,SAAYC,GACV,kBACA,sCACA,wBACA,sBAJF,CAAYA,MAAY,KAOxB,SAAYC,GAEV,sBACA,oBACA,kBACA,kBACA,cACA,2BAPF,CAAYA,MAAa,KAUlB,MAAMC,EAAoD,CAC/D,CAACH,EAAUI,WAAY,wBAAsBC,SAC7C,CAACL,EAAUM,YAAa,kBAAgBD,SAExC,CAACL,EAAUO,gBAAiB,oCAGjBC,EAAqD,CAChE,CAACP,EAAaQ,QAAS,yBAEvB,CAACR,EAAaS,kBAAmB,+CAEjC,CAACT,EAAaU,WAAY,mCAC1B,CAACV,EAAaW,UAAW,uBAGdC,EAA4C,CACvD,CAACb,EAAUI,WAAY,wBAAsB3R,KAC7C,CAACuR,EAAUM,YAAa,kBAAgB7R,KACxC,CAACuR,EAAUO,gBAAiB,WAU9B,IAAYO,EAMAC,EAMAC,EAYAC,EAMAC,EAKAC,GAnCZ,SAAYL,GACV,cACA,4BACA,wBAHF,CAAYA,MAAe,KAM3B,SAAYC,GACV,cACA,gBACA,sBAHF,CAAYA,MAAmB,KAM/B,SAAYC,GACV,cACA,sBAFF,CAAYA,MAA8B,KAY1C,SAAYC,GACV,iBAEA,cAHF,CAAYA,MAAQ,KAMpB,SAAYC,GACV,UACA,UAFF,CAAYA,MAAW,KAKvB,SAAYC,GACV,YACA,wBACA,oBACA,0BACA,oBACA,sBACA,4BACA,4BACA,kCACA,0BACA,oBACA,8BACA,4BACA,wBAdF,CAAYA,MAAa,M,4cC5XlB,MAAMC,EAAoE,I,IAAA,gBAC/E1I,GAAe,EACZhH,EAAK,IAFuE,qBAI/E,OAAQgH,GACN,KAAK,IAAsBR,OACzB,OAAO,gBAAC,IAAgB,iBAAKxG,IAC/B,KAAK,IAAsBtD,MACzB,OAAO,gBAAC,IAAc,iBAAKsD,IAC7B,KAAK,IAAsBwH,QACzB,OAAO,gBAAC,IAAiB,iBAAKxH,IAChC,QACE,OAAO,gBAAC,IAAiB,iBAAKA,O,kCCpBpC,wFASA,MAAM2P,UAAwC,YAI5C,YAAY3P,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX7R,KAAM6K,KAAK7I,MAAMuI,WACjBL,WAAYW,KAAK7I,MAAMkI,YAAc,GACrC4H,SAAU,IAAW7I,WAEvB4B,KAAKkH,yBAA2BlH,KAAKkH,yBAAyBC,KAAKnH,MACnEA,KAAKuD,cAAgBvD,KAAKuD,cAAc4D,KAAKnH,MAE/C,yBAAyB7K,GACvB6K,KAAKoH,SACH,CACEjS,QAEF,IAAM6K,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,cAAcxD,GACZxD,KAAKoH,SACH,CACE/H,WAAY,OAAF,UAAOmE,IAEnB,IAAMxD,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,SACE,MAAM,EAAEhT,GAAMgM,KAAK7I,MACbkQ,EAAY,CAChB,CAAC,IAAWjJ,WAAYpK,EAAE,+BAC1B,CAAC,IAAWyK,SAAUzK,EAAE,mBAE1B,OACE,gCACGgM,KAAK7I,MAAMyI,SACV,uBAAK3L,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAQ,eACtCrQ,EAAE,+BAEL,uBAAKC,UAAU,8BACb,gBAAC,IAAQ,CACPqT,MAAOD,EACPE,kBAAkB,uBAClBxP,GAAG,qBACHyP,YAAaxH,KAAKgH,MAAMC,SACxB3C,SAAUtE,KAAKkH,6BAInB,KACHlH,KAAKgH,MAAM7R,OAAS,IAAWiJ,UAC9B,gBAAC,IAAgB,CAACkG,SAAUtE,KAAKuD,cAAelE,WAAYW,KAAKgH,MAAM3H,aAEvE,gBAAC,IAAc,CAACiF,SAAUtE,KAAKuD,cAAelE,WAAYW,KAAKgH,MAAM3H,eAOxE,MAAMoI,EAAmB,4BAAkBX,I,kCCzElD,oDAKA,MAAMY,UAAwC,YAI5C,YAAYvQ,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACXW,SAAU3H,KAAK7I,MAAMkI,WAAWsI,UAAY,GAC5CC,SAAU5H,KAAK7I,MAAMkI,WAAWuI,UAAY,IAE9C5H,KAAK6H,WAAa7H,KAAK6H,WAAWV,KAAKnH,MAEzC,WAAW4D,GACT5D,KAAKoH,SACH,CACE,CAACxD,EAAMhG,OAAOnL,MAAOmR,EAAMhG,OAAO7I,OAEpC,IAAMiL,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAInC,SACE,MAAM,EAAEhT,GAAMgM,KAAK7I,MACnB,OACE,gCACE,uBAAKlD,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAQ,YACtCrQ,EAAE,oBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjB5C,KAAK,OACL1C,KAAK,WACL6R,SAAUtE,KAAK6H,WACf9S,MAAOiL,KAAKgH,MAAMW,WAEpB,qBAAG1T,UAAU,aAAa8D,GAAG,iBAC1B/D,EAAE,uDAIT,uBAAKC,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAQ,YAClDrQ,EAAE,6BAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjB5C,KAAK,WACL1C,KAAK,WACL6R,SAAUtE,KAAK6H,WACf9S,MAAOiL,KAAKgH,MAAMY,SAClBrD,UAAQ,IAEV,qBAAGtQ,UAAU,aAAa8D,GAAG,iBAC1B/D,EACC,mHAUT,MAAM8T,EAAmB,4BAAkBJ,I,kCC9ElD,8DAKO,MAAMK,EAAgD,EAAGzD,WAAUjF,iBACxE,MAAM,EAAErL,GAAM,2BAKd,OACE,gBAAC,IAAkB,CACjBsQ,SANkB0D,IACpB,MAAMjT,EAAQiT,EAASC,SAAS,MAAQD,EAAcA,EAAH,KACnD1D,EAAS,CAAE,iBAAkBvP,KAK3BmT,cAAe7I,EAAW,mBAAqB,GAC/CtH,GAAG,iBACHoQ,MAAOnU,EAAE,0BACToU,mBAAoBpU,EAClB,oFAEFqU,sBAAuBrU,EAAE,uDACzBsU,YAAY,M,kCCrBlB,4GAUO,MAAMC,EAA+C,EAC1DjE,WACAb,UACAe,gBACAnF,aACAK,aACAE,eAEA,MAAOqH,EAAUuB,GAAe,WAAe,gBACzC,EAAExU,GAAM,2BAERyU,EAAiB,UAA8B,K,MACnD,IACE,MAAMnS,EAAM,YAAkBoJ,GACxBgJ,EAA6B,QAAf,EAAArJ,EAAW/I,UAAI,QAAI,KACvC,OAAOsL,KAAKC,MAAM6G,GAClB,MAAOhF,GAEP,OADAD,EAAQ,gCAAgCC,EAAIzN,SACrC,KAER,CAACoJ,EAAYK,IAEV6D,EAAgB,cACnBoF,IACM,IAAUA,IACbnE,GAAc,GAEhB,MAAMoE,EAAaD,EAAW,KAAa,oBAAsB,aACjErE,EAAS,CACPjF,WAAY,CACV,CAACuJ,GAAahH,KAAKiH,UAAUF,IAE/B1F,iBAAkB,MAGtB,CAACuB,EAAesE,WAGZzB,EAAY,CAChB0B,YAAa/U,EAAE,qCACf,cAAeA,EAAE,qCAGnB,OACE,gCACG4L,GACC,uBAAK3L,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAQ,eACtCrQ,EAAE,+BAEL,uBAAKC,UAAU,8BACb,gBAAC,IAAQ,CACPqT,MAAOD,EACPE,kBAAkB,uBAClBxP,GAAG,qBACHyP,YAAaP,EACb3C,SAAUkE,MAKJ,gBAAbvB,EACC,gBAAC,IAAmB,CAAC3C,SAAUf,EAAelE,WAAYoJ,IAE1D,gBAAC,IAAmB,CAClBnE,SAAUf,EACVlE,WAAYoJ,EACZO,UAAWxE,O,kCC7ErB,mMAWA,MAAMyE,UAA2C,YAI/C,YAAY9R,G,MACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CAEXkC,mBAAoB,IAAUlJ,KAAK7I,MAAMkI,eAAiBW,KAAK7I,MAAMkI,WAAW,KAChF8J,mBAAoBnJ,KAAKoJ,0BACF,QAArB,EAAApJ,KAAK7I,MAAMkI,kBAAU,eAAG,OAAcW,KAAK7I,MAAMkI,YAEnDgK,cAAc,GAEhBrJ,KAAKuD,cAAgBvD,KAAKuD,cAAc4D,KAAKnH,MAE/C,sBACE,MAAO,CACLsJ,MAAO,CACLC,QAAS,GACT5B,SAAU,GACVC,SAAU,GACV4B,MAAO,GACPC,KAAM,IAERC,IAAK,OAGT,yBAAyBC,GACvB,MAAMC,EAAmB,GACzB,OAAI,IAAUD,GACL,IAASC,EAAkB5J,KAAK6J,wBAEzC,IAAOF,EAAmB,CAACG,EAAGC,KAE5B,MAAMC,EAAc,SAAOhH,OAAO,IAAM8G,EAAG,OAAQ,KAC7CG,EAAa,IAAUD,GAAe,IAAOE,MAAM,GAAI,IAAM,IAAQF,EAAa,KACxFJ,EAAiB5T,KAAK,CACpBsT,MAAO,CACLC,QAASQ,EACTpC,SAAU,IAAMmC,EAAG,WAAYG,EAAW,IAC1CrC,SAAU,IAAMkC,EAAG,WAAYG,EAAW,IAC1CT,MAAO,IAAMM,EAAG,QAAS,IACzBL,KAAM,IAAMK,EAAG,OAAQ,KAEzBJ,IAAK,IAAMI,EAAG,MAAO,WAGlBF,GAET,yBAAyBA,GACvB,MAAMO,EAAqB,GAS3B,OARA,IAAOP,EAAmB7U,IACxBoV,EAAmBpV,EAAMuU,MAAMC,SAAW,IAAOxU,EAAMuU,MAAO,CAC5D,WACA,WACA,OACA,YAGGa,EAET,qBAAqBhB,GACnB,MAAMQ,EAAoB3J,KAAKoK,yBAAyBjB,GACxDnJ,KAAK7I,MAAMmN,SACTtE,KAAKgH,MAAMkC,mBAAqB,CAAE,CAAC,KAAYS,GAAsBA,GAGzE,cAAcU,EAAcC,GAC1BtK,KAAKoH,SACFJ,IACC,MAAMmC,EAAqB,IAAInC,EAAMmC,oBAC/BoB,EAAmB,CACvBb,IAAKP,EAAmBmB,GAAYZ,IACpCJ,MAAOe,EACPZ,KAAM,SAAOzF,OAAO,GAAGqG,EAAa1C,YAAY0C,EAAazC,aAG/D,OADAuB,EAAmBmB,GAAcC,EAC1B,CACLpB,uBAGJ,IAAMnJ,KAAKwK,qBAAqBxK,KAAKgH,MAAMmC,qBAG/C,YAAYmB,GACVtK,KAAKoH,SACFJ,IACC,MAAMmC,EAAqB,IAAInC,EAAMmC,oBAErC,OADAA,EAAmBsB,OAAOH,EAAY,GAC/B,CAAEnB,uBAEX,IAAMnJ,KAAKwK,qBAAqBxK,KAAKgH,MAAMmC,qBAG/C,WACEnJ,KAAKoH,SACH,CACE+B,mBAAoB,IAASnJ,KAAKgH,MAAMmC,mBAAoBnJ,KAAK6J,wBAEnE,KACE7J,KAAKwK,qBAAqBxK,KAAKgH,MAAMmC,sBAI3C,SACE,MAAM,EAAEnV,GAAMgM,KAAK7I,MACbuT,EAAoB,IAAM1K,KAAKgH,MAAMmC,mBAAoB,CAACwB,EAAWC,KACzE,MAAM,IAAElB,EAAG,MAAEJ,GAAUqB,UAAa,IAC9B,QAAEpB,EAAO,MAAEC,EAAK,SAAE5B,EAAQ,SAAED,GAAa2B,UAAS,GACxD,OACE,uBAAKrV,UAAU,4BAA4BqC,IAAKoT,GAC7C,IAAO1J,KAAKgH,MAAMmC,oBAAsB,GACvC,uBAAKlV,UAAU,0CACb,gBAAC,IAAM,CACL+Q,QAAS,IAAMhF,KAAK6K,YAAYD,GAChCzV,KAAK,SACLC,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACnB,UAAU,oBAC1BD,EAAE,+BAIT,gBAAC,IAAyB,CACxB+D,GAAI6S,EACJrB,QAASA,EACTC,MAAOA,EACP5B,SAAUA,EACVD,SAAUA,EACVrD,SAAUtE,KAAKuD,mBAKvB,OACE,gCACGmH,EACD,gBAAC,IAAM,CACLzW,UAAU,+DACV+Q,QAAS,IAAMhF,KAAK8K,WACpB3V,KAAK,SACLC,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACnB,UAAU,oBACzBD,EAAE,6BAON,MAAM+W,EAAsB,4BAAkB9B,I,kCCrKrD,6DAIO,MAAM+B,EAAsE,EACjFjT,KACAwR,UACAC,QACA5B,WACAD,WACArD,eAEA,MAAM,EAAEtQ,GAAM,2BAERiX,EAAc,CAACxY,EAAcsC,KACjC,MAAMmW,EAAkBvD,EAASwD,OAC3BC,EAAkBxD,EAASuD,OAC3B1B,EAAO9B,GAAYC,EAAW,SAAO5D,OAAO,GAAGkH,KAAmBE,KAAqB,GAC7F9G,EAAS,OAAD,QAEJiF,UACA5B,WACAC,WACA4B,QACA,CAAC/W,GAAOsC,GACJ0U,EAAO,CAAEA,QAAS,IAExB1R,IAIEsT,EAAmB7K,GACvByK,EAAYzK,EAAE8K,cAAc7Y,KAAM+N,EAAE8K,cAAcvW,MAAMoW,QAEpDI,EAAqB/K,GACzByK,EAAYzK,EAAE8K,cAAc7Y,KAAM+N,EAAE8K,cAAcvW,OAEpD,OACE,uBAAKd,UAAU,wBAAuB,eAAc,4BAClD,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYtM,EAAH,YACnD/D,EAAE,mCAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,WAAe,mBACEA,EAAH,gBAClB5C,KAAK,OACL1C,KAAK,UACL6R,SAAUiH,EACVxW,MAAOwU,EACPiC,OAAQH,EAAe,YACb,uBACV9G,UAAQ,KAGZ,qBAAGtQ,UAAU,aAAa8D,GAAOA,EAAH,iBAC3B/D,EAAE,6CAGP,uBAAKC,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYtM,EAAH,aACnD/D,EAAE,oBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,YACJ5C,KAAK,OACL1C,KAAK,WACL6R,SAAUiH,EACVxW,MAAO4S,EACP6D,OAAQH,EAAe,YACb,wBACV9G,UAAQ,MAId,uBAAKtQ,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYtM,EAAH,aACnD/D,EAAE,oBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,YACJ5C,KAAK,WACL1C,KAAK,WACL6R,SAAUiH,EACVxW,MAAO6S,EACP4D,OAAQH,EAAe,YACb,wBACV9G,UAAQ,MAId,uBAAKtQ,UAAU,cACb,yBAAOA,UAAU,gBAAgBoQ,QAAYtM,EAAH,UACvC/D,EAAE,iBAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOA,EAAH,SACJ5C,KAAK,OACL1C,KAAK,QACL6R,SAAUiH,EACVxW,MAAOyU,EACPgC,OAAQH,EAAe,YACb,4B,kCC9GtB,0FAMA,MAAMI,UAA2C,YAI/C,YAAYtU,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX0E,WAAY,IAAU1L,KAAK7I,MAAMkI,YAAc,GAAKuC,KAAKiH,UAAU7I,KAAK7I,MAAMkI,YAC9EsM,YAAY,GAEd3L,KAAK6H,WAAa7H,KAAK6H,WAAWV,KAAKnH,MACvCA,KAAK4L,aAAe5L,KAAK4L,aAAazE,KAAKnH,MAE7C,WAAW4D,GACT5D,KAAK6L,YAAY,IAAUjK,KAAKC,MAAO+B,EAAMhG,OAAO7I,OAAQ6O,EAAMhG,OAAO7I,OAE3E,aAAaiT,GACXhI,KAAK6L,YAAY,IAAUjK,KAAKC,MAAOmG,GAAWA,GAEpD,YAAY8D,EAAYzM,GACtBW,KAAKoH,SACH,CACEsE,WAAYrM,EACZsM,WAAY,IAAUG,IAExB,KACE9L,KAAK7I,MAAMmN,SAASwH,GACpB9L,KAAK7I,MAAM6R,UAAUhJ,KAAKgH,MAAM2E,cAItC,SACE,MAAM,EAAE3X,GAAMgM,KAAK7I,MACnB,OACE,gCACE,gBAAC,IAAkB,CACjBmN,SAAUtE,KAAK4L,aACf1D,cAAelI,KAAKgH,MAAM0E,WAC1B3T,GAAG,gBACHoQ,MAAOnU,EAAE,6BACToU,mBAAoBpU,EAAE,2DACtBqU,sBAAuBrU,EACrB,oGAEFsU,YAAY,IAEbtI,KAAKgH,MAAM2E,YACV,uBAAK1X,UAAU,4BACZD,EAAE,0DAQR,MAAM+X,EAAsB,4BAAkBN,I,kCC9DrD,8DAMA,MAAMO,UAAyC,YAI7C,YAAY7U,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX3H,WAAY,CAAE4M,iBAAkBjM,KAAK7I,MAAMkI,WAAW4M,kBAAoB,KAE5EjM,KAAKkM,uBAAyBlM,KAAKkM,uBAAuB/E,KAAKnH,MAC/DA,KAAKmM,sBAAwBnM,KAAKmM,sBAAsBhF,KAAKnH,MAE/D,uBAAuB4D,GACrB5D,KAAKoH,SACH,CACE/H,WAAY,CAAE4M,iBAAkBrI,EAAMhG,OAAO7I,QAE/C,IAAMiL,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,wBACEhH,KAAKoH,SACH,CACE/H,WAAY,CAAE4M,iBAAkB,gBAElC,IAAMjM,KAAK7I,MAAMmN,SAAStE,KAAKgH,QAGnC,SACE,MAAM,EAAEhT,GAAMgM,KAAK7I,MACnB,OACE,uBAAKlD,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAQ,sBAClDrQ,EAAE,8BAEL,uBAAKC,UAAU,uBACb,yBACEA,UAAU,uBACV8D,GAAG,qBAAoB,YACb,aACV5C,KAAK,OACL1C,KAAK,mBACL6R,SAAUtE,KAAKkM,uBACfnX,MAAOiL,KAAKgH,MAAM3H,WAAW4M,iBAAgB,mBAC5B,sBACjB1H,UAAQ,IAEV,0BACEpP,KAAK,SACL6P,QAAShF,KAAKmM,sBACdlY,UAAU,+BAA8B,YAC9B,2BAETD,EAAE,qBAGP,qBAAGC,UAAU,aAAa8D,GAAG,uBAC1B/D,EAAE,6EAON,MAAMoY,EAAoB,4BAAkBJ,I,kCCtEnD,yKAYA,MAAMK,UAAyC,YAI7C,YAAYlV,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACXmC,mBAAoBnJ,KAAKsM,2BAA2BtM,KAAK7I,MAAMkI,aAEjEW,KAAKuD,cAAgBvD,KAAKuD,cAAc4D,KAAKnH,MAE/C,wBACE,MAAO,CACLsJ,MAAO,CACLhT,IAAK,GACLvB,MAAO,IAET2U,IAAK,OAGT,2BAA2B6C,GACzB,OAAI,IAAUA,GACL,CAACvM,KAAKwM,yBAER,IAAMD,EAAqB,CAACxX,EAAOuB,KACxC,MAAMmW,EAAW,WAAc,KAAM1X,GACrC,MAAO,CACL2U,IAAK,MACLJ,MAAO,CACLhT,MACAvB,MAAO0X,EAAW,SAAOzI,OAAOjP,GAASA,EACzC2X,SAAUD,EACVA,eAKR,2BAA2BE,GACzB,OAAO,IACLA,EACA,CAAC/W,EAAKmU,K,QACJ,WAASnU,EAAK,CACZ,CAACmU,EAAET,MAAMhT,MACA,QAAP,EAAAyT,EAAET,aAAK,eAAEoD,YAAmB,QAAP,EAAA3C,EAAET,aAAK,eAAEmD,UAAW1C,EAAET,MAAMvU,MAAQ,SAAOiP,OAAO+F,EAAET,MAAMvU,UAErF,IAGJ,cAAcsV,EAAcuC,GAC1B,MAAMC,EAA4B,IAAI7M,KAAKgH,MAAMmC,oBAC3CoB,EAAmB,CACvBb,IAAKmD,EAA0BD,GAASlD,IACxCJ,MAAOe,GAETwC,EAA0BD,GAAWrC,EACrCvK,KAAKoH,SACH,CACE+B,mBAAoB0D,GAEtB,IACE7M,KAAK7I,MAAMmN,SAAS,CAClBrB,iBAAkBjD,KAAK8M,2BAA2B9M,KAAKgH,MAAMmC,uBAIrE,YAAYyD,GACV,MAAMC,EAA4B,IAAI7M,KAAKgH,MAAMmC,oBACjD0D,EAA0BpC,OAAOmC,EAAS,GAC1C5M,KAAKoH,SACH,CACE+B,mBAAoB0D,GAEtB,IACE7M,KAAK7I,MAAMmN,SAAS,CAClBrB,iBAAkBjD,KAAK8M,2BAA2B9M,KAAKgH,MAAMmC,uBAIrE,WACEnJ,KAAKoH,SACH,CACE+B,mBAAoB,IAASnJ,KAAKgH,MAAMmC,mBAAoBnJ,KAAKwM,0BAEnE,IACExM,KAAK7I,MAAMmN,SAAS,CAClBrB,iBAAkBjD,KAAK8M,2BAA2B9M,KAAKgH,MAAMmC,uBAIrE,SACE,MAAM,EAAEnV,GAAMgM,KAAK7I,MACbuT,EAAoB,IAAM1K,KAAKgH,MAAMmC,mBAAoB,CAACwB,EAAWC,IAEvE,uBAAK3W,UAAU,4BAA4BqC,IAAKqU,EAAUjB,KACvD,IAAO1J,KAAKgH,MAAMmC,oBAAsB,GACvC,uBAAKlV,UAAU,0CACb,gBAAC,IAAM,CACLkB,KAAK,SACL6P,QAAS,IAAMhF,KAAK6K,YAAYD,GAChCxV,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACnB,UAAU,oBAC1BD,EAAE,6BAIT,gBAAC,IAAiB,CAAC+D,GAAI6S,EAAOtB,MAAOqB,EAAUrB,MAAOhF,SAAUtE,KAAKuD,kBAI3E,OACE,gCACGmH,EACD,gBAAC,IAAM,CACLzW,UAAU,+DACV+Q,QAAS,IAAMhF,KAAK8K,WACpB3V,KAAK,SACLC,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACnB,UAAU,oBACzBD,EAAE,2BAON,MAAM+Y,EAAoB,4BAAkBV,I,kCC7InD,gGAMO,MAAMW,UAAyC,YAIpD,YAAY7V,GACV4P,MAAM5P,GACN6I,KAAKgH,MAAQ,CACX1Q,IAAKa,EAAMmS,MAAMhT,IACjBvB,MAAOoC,EAAMmS,MAAMvU,MACnB0X,SAAUtV,EAAMmS,MAAMmD,UAExBzM,KAAKiN,cAAgBjN,KAAKiN,cAAc9F,KAAKnH,MAC7CA,KAAKkN,YAAclN,KAAKkN,YAAY/F,KAAKnH,MAE3C,cAAcgI,EAAUyE,GACtBzM,KAAKoH,SACH,CACErS,MAAOiT,EACP0E,SAAUD,GAEZ,IAAMzM,KAAK7I,MAAMmN,SAAStE,KAAKgH,MAAOhH,KAAK7I,MAAMY,KAGrD,YAAY6L,GACV5D,KAAKoH,SACH,CACE9Q,IAAKsN,EAAMhG,OAAO7I,OAEpB,IAAMiL,KAAK7I,MAAMmN,SAAStE,KAAKgH,MAAOhH,KAAK7I,MAAMY,KAGrD,SACE,MAAM,EAAE/D,GAAMgM,KAAK7I,MACnB,OACE,uBAAKlD,UAAU,kCACb,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4BoQ,QAAYrE,KAAK7I,MAAMY,GAAd,QACnD/D,EAAE,eAEL,2BACE,yBACEC,UAAU,uBACV8D,GAAOiI,KAAK7I,MAAMY,GAAd,OACJ5C,KAAK,OACL1C,KAAK,MACL6R,SAAUtE,KAAKkN,YACfnY,MAAOiL,KAAKgH,MAAM1Q,IAAG,YACX,aACViO,UAAQ,MAId,uBAAKtQ,UAAU,cACb,2BACE,gBAAC,IAAkB,CACjBqQ,SAAUtE,KAAKiN,cACf/E,cAAelI,KAAKgH,MAAMjS,MAC1BgD,GAAOiI,KAAK7I,MAAMY,GAAd,SACJoQ,MAAOnU,EAAE,gBACToU,mBAAoBpU,EAClB,0EAEFmZ,kBAAmBnN,KAAKgH,MAAMyF,eASrC,MAAMW,EAAoB,4BAAkBJ,I,kCC7EnD,IAAYK,EAkBAC,EASAC,EA3BZ,+GAAYF,GACV,yBACA,+BACA,iBACA,qDACA,qBALF,CAAYA,MAAU,KAkBtB,SAAYC,GACV,kBACA,wBACA,kBACA,gBACA,iBACA,aANF,CAAYA,MAAW,KASvB,SAAYC,GACV,iBACA,+BACA,yBACA,iDAJF,CAAYA,MAAc,M,8bCXnB,MAAMC,UAAsB,IAKjC,YAAYzN,GACVgH,MAAMhH,GAQE,KAAA0N,gBAAkB,KAC1B,OAAQzN,KAAKD,UAAUL,YACrB,KAAK,IAAWgO,sBAChB,KAAK,IAAWC,WAChB,KAAK,IAAWC,MACd,MAAO,CAAEnE,KAAM,SAAOzG,OAAOhD,KAAKD,UAAU8N,cAAcjG,WAC5D,QACE,OAAO,OAIH,KAAAkG,gBAAkB,K,MAC1B,MAAM,KAAErb,EAAI,MAAE+I,EAAK,OAAEmC,GAAW,EAAYqC,KAAKD,UAAUgO,KACrD5S,GAAsC,QAAzB,EAAA6E,KAAKD,UAAU5E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLsS,SAAUvb,EACV+I,QACAyS,KAAMtQ,EACNuQ,cAAelO,KAAKD,UAAUoO,IAC9BhT,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,IAME,GAAoB,aALDtO,KAAKuO,OAAOC,MAAMhU,IAAI,CACvCgB,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,YAGbrY,OACP,OAAO,IAAW+Y,UAEpB,MAAOlO,GACP,OAAQA,EAAE7K,QACR,KAAK,IACH,OAAO,IAAWgZ,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWC,uBAEpB,QACE,OAAO,IAAWC,aAIxB,OAAO,IAAWA,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMC,QAAahP,KAAKuO,OAAOC,MAAMS,aAAa,CAChDzT,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,WAKtB,MAAO,CAAEkB,SAHIF,EAAKjT,KAAKoT,IAAKC,GACnBA,EAAE3c,OAGX,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAhP,gBAAyBkC,GAA8D,EAAD,gCACpF,IACE,MAAM4M,QAAahP,KAAKuO,OAAOC,MAAMa,YAAY,OAAD,sBAC9C7T,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,UAChB5L,IAAUA,aAAM,EAANA,EAAQkN,cAClB,CAAEC,KAAM,GAAGvP,KAAK7L,SAASgH,cAAciH,EAAOkN,gBAC9C,CAAEC,KAAMvP,KAAK7L,SAASgH,aACtB6E,KAAK7L,SAAS+Z,cAAgB,CAAEC,IAAKnO,KAAK7L,SAAS+Z,eAAkB,KAE3E,IAAI9N,EAAQ,GAIZ,OAHoB,MAAhB4O,EAAKrZ,QAAkBuU,MAAMsF,QAAQR,EAAKjT,QAC5CqE,EAAQ4O,EAAKjT,KAAKoT,IAAKnb,GAAMA,EAAEvB,OAE1B,CAAE2N,SACT,MAAOI,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMT,QAAahP,KAAKuO,OAAOC,MAAMkB,cAAc,CACjDlU,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,WAEtB,OAAoB,MAAhBgB,EAAKrZ,OACA,CAAEga,UAAW3O,OAAOC,KAAK+N,EAAKjT,OAEhC,CAAE4T,UAAW,IACpB,MAAOnP,GACP,MAAO,CAAEmP,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMjP,EAAU,CACdkP,OAAQ,CAAC,+BACTC,cAAe,CAAC,UAAUL,GAC1B,uBAAwB,CAAC,eAErB9N,EAAO,CACXtP,KAAM,MACN0d,QAAQ,EACRC,OAAQ,CACNrC,IAAK+B,EACLO,aAAc,OACdC,aAAcP,EAAkB,IAAM,IACtCvR,OAAQwR,GAEVO,OAAQ,CAAC,OAAQ,iBAEbC,EACmB,eAAvBxQ,KAAK7L,SAAS8Z,KACV,yBACA,WAAWjO,KAAK7L,SAAS8Z,cAS/B,OAAsC,aAPO,mBAAiB1M,KAAK,IAAe,CAChFwM,IAAK,GAAGyC,WAA2BxQ,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,iBACxEyC,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gCACvD,IAOE,OAAuB,aANJvP,KAAKuO,OAAOC,MAAMa,YAAY,OAAD,QAC9C7T,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,SACpBuB,QACIvP,KAAK7L,SAAS+Z,cAAgB,CAAEC,IAAKnO,KAAK7L,SAAS+Z,eAAkB,MAE/DvY,OACZ,MAAO6K,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gCAC9D,IACE,MAAMP,QAAahP,KAAKuO,OAAOC,MAAMa,YAAY,OAAD,QAC9C7T,MAAOwE,KAAK7L,SAASqH,MACrBiT,KAAMzO,KAAK7L,SAAS6Z,SACpBuB,QACIvP,KAAK7L,SAAS+Z,cAAgB,CAAEC,IAAKnO,KAAK7L,SAAS+Z,eAAkB,KAE3E,OAAoB,MAAhBc,EAAKrZ,OAEAib,EAAOjd,KAAKqb,EAAKjT,KAAc,QAAG,UAAUmD,WAE9C,KACP,MAAOsB,GACP,OAAO,SAIX,KAAAqQ,oBAAsB,IACpB7Q,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAElE,KAAAyC,sBAAwB,IAAM9Q,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,YAEjD,KAAA4V,qBAAuB,IACrB/Q,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAEnE,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,eACnB6E,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,aAErB,KAAA8V,mBAAqB,IACnBjR,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,eACpB6E,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,aAEtB,KAAA+V,iBAAmB,IACjBlR,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAElE,KAAA+C,kBAAoB,IAClBnR,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAEnE,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,iBA1MhD,MAAMiW,EAAWpR,KAAKyN,kBACtBzN,KAAK7L,SAAW6L,KAAK8N,kBACrB,MAAMvS,EACmB,eAAvByE,KAAK7L,SAAS8Z,KAAwB,KAAO,WAAWjO,KAAK7L,SAAS8Z,cACxEjO,KAAKuO,OAAS,IAAI,EAAQ,OAAD,wBAAM6C,GAAQ,CAAE7V,iB,2cCNtC,MAAM8V,UAAyB,IAOpC,YAAYtR,GACVgH,MAAMhH,GALA,KAAAuR,QAAU,gCAEV,KAAAC,UAAW,EAWT,KAAA9D,gBAAkB,KAC1B,OAAQzN,KAAKD,UAAUL,YACrB,KAAK,IAAWiO,WAAY,CAC1B,MAAM,SAAEhG,EAAQ,SAAEC,GAAa5H,KAAKD,UAAU8N,cAE9C,MAAO,CAAEqC,cAAe,SADJ,SAAOlM,OAAO,GAAG,SAAOhB,OAAO2E,MAAa,SAAO3E,OAAO4E,OAGhF,QACE,OAAO,OAIH,KAAA4J,UAAY,CACpBzD,EACA0D,EACA1Q,EACAgB,IACG,EAAD,gCACF,MAAM2P,EAAc1R,KAAKyN,kBAEnBkE,EAAiB,OAAH,sBAClB1B,OAAQ,oBACLyB,GACA3Q,GAGL,GAAIf,KAAKuR,SACP,OAAO,YAAsB,OAAD,QAC1BxD,MACA0C,OAAQgB,GAAiB,MACzB1Q,QAAS,YAAe4Q,IACpB5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAIvC,MAAML,QAAiBkQ,MAAM7D,EAAK,OAAF,QAC9B0C,OAAQgB,GAAiB,MACzB1Q,QAAS4Q,GACL5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAErC,IAAKL,EAASmQ,GACZ,MAAMnQ,EAER,MAA6C,eAAzCA,EAASX,QAAQvG,IAAI,gBAChBkH,EAASxM,OAEXwM,EAASoQ,UAGlB,KAAAhE,gBAAkB,K,MAChB,MAAM,KAAErb,EAAI,MAAE+I,EAAK,KAAEyS,GAAS,EAAkBjO,KAAKD,UAAUgO,KACzD5S,GAAsC,QAAzB,EAAA6E,KAAKD,UAAU5E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLsS,SAAUvb,EACV+I,QACAyS,OACAC,cAAelO,KAAKD,UAAUoO,KAAO,OACrChT,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMP,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,WACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,WACzE,IAEE,UADmBhO,KAAKwR,UAAUzD,IACzBgE,OAAS/R,KAAK7L,SAAS6Z,SAC9B,OAAO,IAAWU,UAEpB,MAAOlO,GACP,OAAQA,EAAE7K,QACR,KAAK,IACH,OAAO,IAAWgZ,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWoD,iBAEpB,QACE,OAAO,IAAWnD,wBAIxB,OAAO,IAAWC,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,MAAMhB,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,oBACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,yBACzE,IACE,MAAMjS,QAAaiE,KAAKwR,UAAUzD,GAElC,MAAO,CAAEmB,SADInT,EAAKkW,OAAO9C,IAAKtc,GAAMA,EAAEJ,OAEtC,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAgD,YAAc,CAACX,EAAmBjC,KAChC,IAAIvB,EAAM,GAUV,OAREA,EADEuB,EACIiC,EACF,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,kBAAkBhO,KAAK7L,SAASgH,cAAcmU,iBAA4BtP,KAAK7L,SAAS+Z,gBAC/J,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBlO,KAAK7L,SAASgH,cAAcmU,eAE9IiC,EACF,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,kBAAkBhO,KAAK7L,SAASgH,0BAA0B6E,KAAK7L,SAAS+Z,gBAC/I,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBlO,KAAK7L,SAASgH,wBAEjI4S,GAGT,KAAA7N,gBAAyBkC,GAA8D,EAAD,gC,MACpF,MAAM2L,GAAM3L,aAAM,EAANA,EAAQkN,cAChBtP,KAAKkS,YAAYlS,KAAKuR,SAAUnP,EAAOkN,cACvCtP,KAAKkS,YAAYlS,KAAKuR,UAC1B,IACE,MAAMxV,QAAaiE,KAAKwR,UAAUzD,GAElC,MAAO,CAAE3N,MADKJ,KAAKuR,SAAWxV,EAAKkW,QAAoB,QAAX,EAAAlW,EAAKkW,cAAM,eAAE9C,IAAKgD,GAAMA,EAAE5C,QAAS,IAE/E,MAAO/O,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,MAAM1B,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,WACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,WACzE,IAEE,MAAO,CAAE2B,UAAW,QADD3P,KAAKwR,UAAUzD,IACRqE,WAC1B,MAAO5R,GACP,MAAO,CAAEmP,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMhP,EAAU,CACd,eAAgB,CAAC,oBACjBmP,cAAe,CAAC,SAASL,IAErB9N,EAAO,CACXgM,IAAK+B,EACLS,OAAQ,CAAC,YAAa,sBAAuB,uBAC7C8B,wBAAyBtC,EACzBI,QAAQ,GAEJpC,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,iBACvE,GAAGhO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,iBAUzE,OAAsC,aAPO,mBAAiBzM,KAAK,IAAe,CAChFwM,MACA0C,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gCACvD,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,gBAAgBsE,QAAetS,KAAK7L,SAAS+Z,gBACpH,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBoE,IACxH,IAEE,aADMtS,KAAKwR,UAAUzD,IACd,EACP,MAAOvN,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gCAC9D,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM/N,KAAKuR,SACb,GAAGvR,KAAKsR,oBAAoBtR,KAAK7L,SAASqH,eAAewE,KAAK7L,SAAS6Z,gBAAgBsE,QAAetS,KAAK7L,SAAS+Z,gBACpH,GAAGlO,KAAKsR,wBAAwBtR,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBhO,KAAK7L,SAAS+Z,iBAAiBoE,IACxH,IAEE,aADmBtS,KAAKwR,UAAUzD,GAElC,MAAOvN,GACP,OAAO,SAIX,KAAAqQ,oBAAsB,IACpB7Q,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAElE,KAAAyC,sBAAwB,IAAM9Q,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,YAEjD,KAAA4V,qBAAuB,IACrB/Q,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAEnE,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,eACnB6E,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,aAErB,KAAA8V,mBAAqB,IACnBjR,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,eACpB6E,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,aAEtB,KAAA+V,iBAAmB,IACjBlR,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAElE,KAAA+C,kBAAoB,IAClBnR,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAEnE,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,iBApOhD6E,KAAK7L,SAAW6L,KAAK8N,kBACM,kBAAvB9N,KAAK7L,SAAS8Z,OAChBjO,KAAKsR,QAAU,WAAWtR,KAAK7L,SAAS8Z,oBACxCjO,KAAKuR,UAAW,M,ybCTf,MAAMgB,UAAsB,IAOjC,YAAYxS,GACVgH,MAAMhH,GAUA,KAAAyS,QAAU,IAAiC,EAAD,gCAChD,GAAIxS,KAAKyO,KACP,OAAOzR,QAAQyV,QAAQzS,KAAKyO,MAE9B,MAAMA,QAAyBzO,KAAKuO,OAAOmE,SAASC,KAAK3S,KAAK7L,SAASye,UACvE,IAAKnE,EACH,MAAM,IAAIjR,MAAM,IAAKxJ,EAAE,0CAClB,GAAIya,EAAKoE,sBAAwB7S,KAAK7L,SAASye,SACpD,MAAM,IAAIpV,MACR,IAAKxJ,EAAE,6EAA8E,CACnFub,KAAMd,EAAKoE,oBACXpgB,KAAMuN,KAAK7L,SAASye,YAM1B,OADA5S,KAAKyO,KAAOA,EACLzR,QAAQyV,QAAQzS,KAAKyO,SAmB9B,KAAAhB,gBAAkB,KAChB,OAAQzN,KAAKD,UAAUL,YACrB,KAAK,IAAWgO,sBAChB,KAAK,IAAWE,MAChB,KAAK,IAAWD,WACd,OAAO,SAAO3K,OAAOhD,KAAKD,UAAU8N,cAAcjG,UACpD,QACE,OAAO,OAIb,KAAAkL,aAAe,IAA0B,EAAD,gCACtC,IAEE,aADmB9S,KAAKwS,WACZza,GACZ,MAAOyI,GACP,MAAMA,MAIV,KAAA8N,gBAAkB,IAAiC,EAAD,gCAChD,IAEE,aADMtO,KAAKwS,UACJ,IAAW9D,UAClB,MAAOlO,GACP,OAAQA,EAAE7K,QACR,KAAK,IACH,OAAO,IAAWgZ,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWoD,iBAEpB,KAAK,IACH,OAAO,IAAWnD,uBAEpB,QACE,OAAO,IAAWC,iBAM1B,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMgE,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAOyE,SAASvV,IAAIsV,GAE5C,MAAO,CAAE7D,SADIF,EAAKG,IAAKtc,GAAMA,EAAEJ,OAE/B,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAhP,gBAAyBkC,GAGI,EAAD,gCAC1B,IACE,MAAM2Q,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAO0E,aAAaC,KAAKH,EAAW,OAAF,WACpD3Q,aAAM,EAANA,EAAQkN,cACR,CAAEC,KAAMvP,KAAKsS,SAASlQ,EAAOkN,eAC7B,CAAEC,KAAMvP,KAAK7L,SAASgH,cAO5B,MAAO,CAAEiF,MALK4O,EAAK9N,OAAO,CAACtL,EAAKud,MACZ,SAAdA,EAAKhe,OAAoBiN,aAAM,EAANA,EAAQgR,gBAA+B,SAAdD,EAAKhe,OACzDS,EAAII,KAAKmd,EAAK5D,MACT3Z,GACN,KAEH,MAAO4K,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMsD,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAOmE,SAAS/C,UAAUoD,GAClD,MAAO,CAAEpD,UAAW3O,OAAOC,KAAK+N,IAChC,MAAOxO,GACP,MAAO,CAAEmP,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAM+C,QAAkB/S,KAAK8S,eACvB/R,EAAU,CACd,eAAgB,CAAC,oBACjB,gBAAiB,CAAC8O,IAEd9N,EAAO,CACXgM,IAAK+B,EACLuD,aAAa,EACbC,uBAAuB,EACvBC,wBAAyBxD,EACzBF,MAAOG,GAUT,OAAsC,aAPO,mBAAiBzO,KAAK,IAAe,CAChFwM,IAAK,GAAG/N,KAAK7L,SAAS8Z,wBAAwB8E,UAC9CtC,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gC,MACvD,IACE,MAAMwD,QAAkB/S,KAAK8S,eACvB3E,EAAMnO,KAAK7L,SAAS+Z,gBAAmC,QAAjB,EAAAlO,KAAKyO,YAAY,eAAE+E,gBAE/D,aADMxT,KAAKuO,OAAOkF,gBAAgBC,QAAQX,EAAWxD,EAAMpB,IACpD,EACP,MAAO3N,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gC,MAC9D,IACE,MAAMwD,QAAkB/S,KAAK8S,eACvB3E,EAAMnO,KAAK7L,SAAS+Z,gBAAmC,QAAjB,EAAAlO,KAAKyO,YAAY,eAAE+E,gBACzDlB,EAAW/C,EAAK7T,QAAQ,OAAQ,IACtC,aAAasE,KAAKuO,OAAOkF,gBAAgBC,QAAQX,EAAWT,EAAUnE,GACtE,MAAO3N,GACP,OAAO,SAIX,KAAA8R,SAAYa,GACHnT,KAAK7L,SAASgH,WAAa,GAAG6E,KAAK7L,SAASgH,cAAcgY,IAASA,EAG5E,KAAAtC,oBAAsB,IAAM7Q,KAAK0Q,cAAc1Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASka,iBAE9E,KAAAyC,sBAAwB,IAA8B,EAAD,gCACnD,IACE,MAAMiC,QAAkB/S,KAAK8S,eACvB9D,QAAahP,KAAKuO,OAAO0E,aAAaC,KAAKH,EAAW,CAC1DxD,KAAMvP,KAAK7L,SAASgH,aAKtB,QAH4B6T,EAAK2E,KAC9BR,GAAuB,SAAdA,EAAKhe,MAAiC,YAAdge,EAAK1gB,MAGzC,MAAO+N,GACP,OAAO,MAIX,KAAAuQ,qBAAuB,IACrB/Q,KAAK2Q,eAAe3Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASka,iBAErD,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAc1Q,KAAKsS,SAAS,eAAiBtS,KAAK0Q,cAAc1Q,KAAKsS,SAAS,aAErF,KAAArB,mBAAqB,IACnBjR,KAAK2Q,eAAe3Q,KAAKsS,SAAS,eAClCtS,KAAK2Q,eAAe3Q,KAAKsS,SAAS,aAEpC,KAAApB,iBAAmB,IAAMlR,KAAK0Q,cAAc1Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASia,cAE3E,KAAA+C,kBAAoB,IAAMnR,KAAK2Q,eAAe3Q,KAAKsS,SAAS,GAAGtS,KAAK7L,SAASia,cAE7E,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAe3Q,KAAKsS,SAAS,iBA3N9DtS,KAAK7L,SAAW6L,KAAK8N,kBACrB,MAAM+B,EAAQ7P,KAAKyN,kBACnBzN,KAAKuO,OAAS,IAAI,SAAO,CACvBN,KAAMjO,KAAK7L,SAAS8Z,KACpB4B,UAEF7P,KAAKyO,KAAO,KAuBd,kBACE,MAAM,KAAEhc,EAAI,MAAE+I,EAAK,SAAEjF,EAAUqd,UAAWhB,GAAa,EAAY5S,KAAKD,UAAUgO,KAC5E5S,GA1CkCwG,OAAhBA,EA0Cc3B,KAAKD,UAAU5E,iBA1CV,EAAHwG,EAAKjG,QAAQ,MAAO,MAAO,GAA5C,IAACiG,EA4CxB,MAAO,CACLqM,SAAUvb,EACV+I,QACAyS,KAJW,WAAW1X,EAKtB2X,cAAelO,KAAKD,UAAUoO,IAC9ByE,WACAzX,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,mB,ybCnD9B,MAAMwF,UAAqB,IAKhC,YAAY9T,GACVgH,MAAMhH,GAHA,KAAAwR,UAAW,EAUT,KAAA9D,gBAAkB,KAC1B,GAAIzN,KAAKD,UAAUL,aAAe,IAAWiO,WAAY,CACvD,MAAM,SAAEhG,EAAQ,SAAEC,GAAa5H,KAAKD,UAAU8N,cAC9C,IAAK,IAAUlG,GAAW,CAExB,MAAO,CAAEmM,cAAe,SADJ,SAAO9P,OAAO,GAAG,SAAOhB,OAAO2E,MAAa,SAAO3E,OAAO4E,OAGhF,MAAO,CAAEsI,cAAe,SAAS,SAAOlN,OAAO4E,IAEjD,OAAO,MAGC,KAAA4J,UAAY,CACpBzD,EACA0D,EACA1Q,EACAgB,IACG,EAAD,gCACF,MAAM2P,EAAc1R,KAAKyN,kBACnBkE,EAAiB,OAAH,sBAClB1B,OAAQ,oBACLyB,GACA3Q,GAEL,GAAIf,KAAKuR,SACP,OAAO,YAAsB,OAAD,QAC1BwC,eAAe,EACfhG,MACA0C,OAAQgB,GAAiB,MACzB1Q,QAAS,YAAe4Q,IACpB5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAIvC,MAAML,QAAiBkQ,MAAM7D,EAAK,OAAF,QAC9B0C,OAAQgB,GAAiB,MACzB1Q,QAAS4Q,GACL5P,GAAQ,CAAEA,KAAMH,KAAKiH,UAAU9G,MAErC,IAAKL,EAASmQ,GACZ,MAAMnQ,EAER,MAA6C,eAAzCA,EAASX,QAAQvG,IAAI,gBAChBkH,EAASxM,OAEXwM,EAASoQ,UAGlB,KAAAhE,gBAAkB,K,MAChB,MAAM,KAAErb,EAAI,MAAE+I,EAAK,SAAEjF,EAAUqd,UAAWhB,GAAa,EAAY5S,KAAKD,UAAUgO,KAC5E5S,GAAsC,QAAzB,EAAA6E,KAAKD,UAAU5E,kBAAU,eAAEO,QAAQ,MAAO,MAAO,GAEpE,MAAO,CACLsS,SAAUvb,EACV+I,QACAyS,KAJW,WAAW1X,EAKtB2X,cAAelO,KAAKD,UAAUoO,IAC9ByE,WACAzX,aACAiT,YAAapO,KAAKD,UAAUqO,YAC5BC,eAAgBrO,KAAKD,UAAUsO,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMP,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,WACvF,IACE,MAAMjS,QAAwCiE,KAAKwR,UAAUzD,GAC7D,IAAIhS,aAAI,EAAJA,EAAMtJ,QAASuN,KAAK7L,SAAS6Z,SAC/B,OAAO,IAAWU,UAEpB,MAAOlO,GACP,OAAO,IAAWwT,qBAEpB,OAAO,IAAWA,wBAGpB,KAAAjF,kBAAoB,IAAiC,EAAD,gCAClD,MAAMhB,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,oBACvF,IACE,MAAMjS,QAAsCiE,KAAKwR,UAAUzD,GAE3D,MAAO,CAAEmB,UADInT,aAAI,EAAJA,EAAMoT,IAAKtc,GAAMA,EAAEJ,QAAS,IAEzC,MAAO+N,GACP,MAAO,CAAE0O,SAAU,QAIvB,KAAAhP,gBAAyBkC,GAA8D,EAAD,gCACpF,MAAM2L,GAAM3L,aAAM,EAANA,EAAQkN,cAChB,GAAGtP,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBAAqBhO,KAAK7L,SAASgH,cAAciH,EAAOkN,eACnI,GAAGtP,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBAAqBhO,KAAK7L,SAASgH,aAElH,IACE,MAAMY,QAAgDiE,KAAKwR,UAAUzD,GAErE,MAAO,CAAE3N,OADIrE,aAAI,EAAJA,EAAMoT,IAAKgD,GAAMA,EAAE1f,QAAS,IAEzC,MAAO+N,GACP,MAAO,CAAEJ,MAAO,QAIpB,KAAAqP,oBAAsB,IAAuC,EAAD,gCAC1D,MAAM1B,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBACvF,IACE,MAAMjS,QAAwCiE,KAAKwR,UAAUzD,GAE7D,MAAO,CAAE4B,WADI3O,kBAAM,EAANA,OAAQC,KAAKlF,KAAS,IAEnC,MAAOyE,GACP,MAAO,CAAEmP,UAAW,QAKxB,KAAAC,kBAAoB,CAAOC,EAAeC,IAAyC,EAAD,gCAChF,MAAM/O,EAAU,CACd,eAAgB,CAAC,oBACjBmP,cAAe,CAAC,SAASL,IAErB9N,EAAO,CACXoO,QAAQ,EACR8D,qBAAsB,GACtBC,cAAe,IACf9D,OAAQ,CACNC,aAAc,OACdtC,IAAK+B,GAEPS,OAAQ,CAAC,OAAQ,gBACjBpb,KAAM,SAEF4Y,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,iBAUvF,OAAsC,aAPO,mBAAiBzM,KAAK,IAAe,CAChFwM,MACA0C,OAAQ,OACR1P,UACAgB,KAAMH,KAAKiH,UAAU9G,MAGAP,cAGzB,KAAAkP,cAAuBnB,GAAmC,EAAD,gCACvD,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,qBAAqBsE,SAAgBtS,KAAK7L,SAAS+Z,gBAC1I,IAEE,aADMlO,KAAKwR,UAAUzD,IACd,EACP,MAAOvN,GACP,OAAO,MAIX,KAAAmQ,eAAwBpB,GAAyC,EAAD,gCAC9D,MAAM+C,EAAW/C,EAAK7T,QAAQ,MAAO,IAC/BqS,EAAM,GAAG/N,KAAK7L,SAAS8Z,qBAAqBjO,KAAK7L,SAASqH,SAASwE,KAAK7L,SAAS6Z,gBAAgBsE,SAAgBtS,KAAK7L,SAAS+Z,gBACrI,IAEE,aADmBlO,KAAKwR,UAAUzD,GAElC,MAAOvN,GAGP,OADA2T,QAAQC,KAAK,8BAA+B5T,GACrC,SAIX,KAAAqQ,oBAAsB,IACpB7Q,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAElE,KAAAyC,sBAAwB,IAAM9Q,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,YAEjD,KAAA4V,qBAAuB,IACrB/Q,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASka,kBAEnE,KAAA2C,kBAAoB,IAClBhR,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,eACnB6E,KAAK0Q,cAAiB1Q,KAAK7L,SAASgH,WAAjB,aAErB,KAAA8V,mBAAqB,IACnBjR,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,eACpB6E,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,aAEtB,KAAA+V,iBAAmB,IACjBlR,KAAK0Q,cAAc,GAAG1Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAElE,KAAA+C,kBAAoB,IAClBnR,KAAK2Q,eAAe,GAAG3Q,KAAK7L,SAASgH,cAAc6E,KAAK7L,SAASia,eAEnE,KAAA9N,sBAAwB,IAAMN,KAAK2Q,eAAkB3Q,KAAK7L,SAASgH,WAAjB,iBAnMhD6E,KAAK7L,SAAW6L,KAAK8N,kBAChB9N,KAAK7L,SAAS8Z,KAAKtS,SAAS,eAC/BqE,KAAKuR,UAAW,M,wXCpBtB,MAAM8C,EAA0B,CAC9B,CACE5hB,KAAM,QACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgB,UAChBC,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgB,aAChBC,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,KACVkC,eAAgBE,OAAO,CAAC,WAAY,aAAc,cAAcC,KAAK,MACrEF,SAAU,GAEZ,CACE9hB,KAAM,OACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgBE,OAAO,CAAC,UAAW,WAAY,aAAaC,KAAK,MACjEF,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,aACVkC,eAAgBE,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACxFF,SAAU,GAEZ,CACE9hB,KAAM,iBACN0C,KAAM,gBACNid,SAAU,aACVkC,eAAgB,gBAChBC,SAAU,EACVG,gBAAwBC,GAAe,OAAD,6BACpC,MAAMC,QAAoBD,EAAWrU,wBACrC,OAAO,YAAesU,GAAe,CAAC,gBAAkB,OAG5D,CACEniB,KAAM,MACN0C,KAAM,MACNid,SAAU,MACVkC,eAAgBE,OAAO,CAAC,YAAa,iBAAiBC,KAAK,MAC3DF,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,SACVkC,eAAgBE,OAAO,CAAC,mBAAoB,YAAYC,KAAK,MAC7DF,SAAU,GAEZ,CACE9hB,KAAM,OACN0C,KAAM,OACNid,SAAU,OACVkC,eAAgBE,OAAO,CAAC,WAAY,YAAYC,KAAK,MACrDF,SAAU,GAEZ,CACE9hB,KAAM,SACN0C,KAAM,SACNid,SAAU,KACVkC,eAAgBE,OAAO,CAAC,eAAgB,aAAaC,KAAK,MAC1DF,SAAU,IAYDM,EAA0BF,GAA0D,OAAD,6BAC9F,MAAM,MAAEvU,SAAgBuU,EAAWzU,kBAkBnC,aAhByBlD,QAAQS,IAC/B4W,EAAWlF,IAAuCnb,GAAM,OAAD,6BACrD,IAAI8gB,EAAgB1U,EAAMnE,OAAQkW,GAAMne,EAAEsgB,eAAeS,KAAK5C,IAI9D,OAHI2C,EAAczY,OAAS,GAAKrI,EAAE0gB,kBAChCI,QAAsB9gB,EAAE0gB,gBAAgBC,IAEnC,CACLliB,KAAMuB,EAAEvB,KACR0C,KAAMnB,EAAEmB,KACRid,SAAUpe,EAAEoe,SACZmC,SAAUvgB,EAAEugB,SACZO,uBAMH7Y,OAAQjI,KAAQA,EAAE8gB,cAAczY,QAChC1J,KAAK,CAACqiB,EAAIC,IAAOA,EAAGV,SAAWS,EAAGT,c,kCCtHvC,wVAIYW,EAJZ,oCAIA,SAAYA,GACV,2CACA,2CACA,sCACA,wBACA,4CACA,0CACA,oCACA,0DACA,gDACA,gDACA,8CAXF,CAAYA,MAAsB,KAc3B,MAAMC,EAAqBC,I,MAChC,MAAMtf,EAAa,IAAMsf,EAAa,CAAC,SAAU,cAAe,IAChE,GAA0B,IAAtBtf,EAAWuG,OAAc,OAAO,KAEpC,MAAMgZ,EAAmBvf,EAAW6d,KAAM/S,GAAiB,cAAXA,EAAEzL,MAC5CmgB,EAAqBxf,EAAW6d,KAAM/S,GAAmB,cAAbA,EAAE2U,QAEpD,GACE,CACEL,EAAuBM,mBACvBN,EAAuBO,sBACvB9Z,SAAyB,QAAhB,EAAAyZ,EAAYhjB,YAAI,eAAEuD,UAC5B2f,EAED,OAAO,IAAeI,WAGxB,IAAKL,IAAqBA,EAAiB1f,OACzC,OAAO,KAGT,MAAMA,EACwB,SAA5B0f,EAAiB1f,OACb,IAAeggB,UACa,UAA5BN,EAAiB1f,OACjB,IAAeigB,OACf,IAAeC,QAErB,GAAIR,EAAiBE,QAAUF,EAAiBE,SAAW5f,EACzD,OAAQ0f,EAAiBE,QACvB,KAAKL,EAAuBO,qBAC5B,KAAKP,EAAuBY,iBAC5B,KAAKZ,EAAuBa,UAC5B,KAAKb,EAAuBM,mBAC1B,OAAO,IAAeO,UACxB,KAAKb,EAAuBc,oBAC5B,KAAKd,EAAuBe,gBAC1B,OAAO,IAAeL,OACxB,KAAKV,EAAuBgB,2BAC5B,KAAKhB,EAAuBiB,sBAC5B,KAAKjB,EAAuBkB,sBAC5B,KAAKlB,EAAuBmB,mBAC1B,OAAO,IAAeC,QACxB,KAAKpB,EAAuBqB,qBAC1B,OAAO,IAAeC,QACxB,QACE,OAAO7gB,EAGb,OAAOA,GAKI8gB,EAA0BrB,IACrC,MAAMzf,EAASwf,EAAkBC,GACjC,IAAKzf,EAAQ,MAAO,IACpB,OAAQA,GACN,KAAK,IAAeogB,UAClB,OAAO,IAAQ/hB,EAAE,8BACnB,KAAK,IAAe4hB,OAClB,OAAO,IAAQ5hB,EAAE,2BACnB,KAAK,IAAe2hB,UAClB,OAAO,IAAQ3hB,EAAE,8BACnB,KAAK,IAAesiB,QAClB,OAAO,IAAQtiB,EAAE,4BACnB,KAAK,IAAe6hB,QAClB,OAAO,IAAQ7hB,EAAE,4BACnB,KAAK,IAAewiB,QAClB,OAAO,IAAQxiB,EAAE,4BACnB,KAAK,IAAe0hB,WAClB,OAAO,IAAQ1hB,EAAE,+BACnB,QACE,OAAO2B,IAIA+gB,EAAyBC,GAC/BA,EAASC,WACPzB,EAAkBwB,EAASC,YADF,IAAeC,MAIpCC,EAA8BH,GACpCA,EAASC,WACPH,EAAuBE,EAASC,YADP,IAIrBG,EAAiC3B,GAC7BqB,EAAuBrB,IACrB,IAEN4B,EAA4B5B,GACxBD,EAAkBC,IAChB,IAAeyB,MAGrBI,EAAuB,CAACC,EAASP,K,MAC5C,IAAKO,IAAYA,EAAQC,WAAaD,EAAQC,SAAS9a,OACrD,OAAO,EAET,MAAM1G,EAAS+gB,EAAsBC,GACrC,OAAuB,QAAhB,EAAAO,EAAQC,gBAAQ,eAAExb,SAAShG,MAAY,IAAWuhB,EAAQzZ,IAAK9H,IAG3DyhB,EAA0B,CAACC,EAAQV,K,MAC9C,IAAKU,IAAWA,EAAOF,WAAaE,EAAOF,SAAS9a,OAClD,OAAO,EAGT,MAAM1G,EAASqhB,EAAyBL,GACxC,OAAsB,QAAf,EAAAU,EAAOF,gBAAQ,eAAExb,SAAShG,MAAY,IAAW0hB,EAAO5Z,IAAK9H,IAezD2hB,EAAwBC,GACpBpC,EAAkBoC,IAChB,IAAeV,MAGrBW,EAA6BD,GACzBd,EAAuBc,IACrB,K,kCCtJnB,6CAgBA,MAAME,EAAiC,CACrCC,QAAS,OACTC,KAAM,EACNC,cAAe,SACfC,OAAQ,qCA2BK,IAxBiC,EAC9CxjB,QACAyjB,WACAC,YACAC,WACAC,aACAC,cACAC,WACAC,WAEA,uBACEnkB,UAAW,IAAG,eAAgB,CAC5B,mBAAoB8jB,EACpB,iCAAkCG,IAEpCE,MAAK,+BAAQH,EAAaR,EAAY,IAASW,GAAS,IAAG,YAChDD,GAEV9jB,GAAS,sBAAIJ,UAAU,6BAA6BI,GACpDyjB,GAAY,gBAAC,IAAc,KAAEA,GAC7BE,I,kCCzCL,IAAYK,EAAZ,2CAAYA,GACV,YACA,sBAFF,CAAYA,MAAY,M,kCCDxB,8kBASA,MAAMC,EAAgB,oEAChBC,EAAY,SAGLC,EAAc,8JAgBdC,EAA8B,WAAaC,MAAM,CAC5DjmB,KAAM,WAEHkmB,QArBoB,kCAuBnB,yHAEDpU,SAAS,cAGDqU,EAAkC,WAAaF,MAAM,CAChElR,YAAa,WACb/U,KAAM,WAEHomB,IAAI,GAAI,wCACRC,KAAK,cAAe,CACnBC,GAAI,IACJpY,KAAM,WAAa4D,SAAS,gBAIrByU,EAA8BhlB,GACzC,WAAa0kB,MAAM,CACjBO,SAAU,WAEPC,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CpE,KAAK,YAAU/gB,EAAE,6CACjBqlB,IAAI,EAAGrlB,EAAE,4DACT6kB,IACCS,OAAOC,iBACPvlB,EAAE,0EAA2E,CAC3EwlB,eAAgBF,OAAOC,oBAG1BxE,KAAK,CACJtiB,KAAM,UACNsiB,KAAOhgB,QAAoBqkB,IAAVrkB,EACjBkB,QAASjC,EAAE,8CAINylB,EAA4B,WAEtCC,MAAM,CAAC,IAAU7T,UAAW,IAAUE,WAAY,IAAUC,iBAC5DzB,WAEUoV,EAA8B3lB,GACzC,WAAa8kB,KAAK,YAAa,CAC7BC,GAAI,IAAU/S,eACdrF,KAAM,WAAa+X,MAAM,CACvBkB,QAAS,SAAW,CAClBC,QAAS,WAENX,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CpE,KAAK,YAAU/gB,EAAE,6CACjBqlB,IAAI,EAAGrlB,EAAE,4DACT6kB,IACCS,OAAOC,iBACPvlB,EAAE,0EAA2E,CAC3EwlB,eAAgBF,OAAOC,oBAG7BO,QAAS,WAENZ,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CpE,KAAK,YAAU/gB,EAAE,6CACjBqlB,IAAI,EAAGrlB,EAAE,4DACT6kB,IACCS,OAAOC,iBACPvlB,EAAE,0EAA2E,CAC3EwlB,eAAgBF,OAAOC,oBAG1BxE,KAAK,CACJ,KAAKgF,GACH,MAAM,QAAEF,GAAY7Z,KAAKga,OACzB,OAAOD,GAAQA,GAASF,GAE1B5jB,QAASjC,EAAE,oEAEfimB,kBAAmB,WAEhBf,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CpE,KAAK,YAAU/gB,EAAE,uDACjBqlB,IAAI,EAAGrlB,EAAE,sEACT6kB,IACCS,OAAOC,iBACPvlB,EAAE,oFAAqF,CACrFwlB,eAAgBF,OAAOC,oBAG7BW,iBAAkB,WAEfhB,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CpE,KAAK,YAAU/gB,EAAE,sDACjBqlB,IAAI,EAAGrlB,EAAE,qEACT6kB,IACCS,OAAOC,iBACPvlB,EAAE,mFAAoF,CACpFwlB,eAAgBF,OAAOC,oBAG7BY,uBAAwB,WAErBjB,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CE,IAAI,EAAGrlB,EAAE,kEACT6kB,IAAI,IAAK7kB,EAAE,kEACdomB,UAAW,WAAa1B,MAAM,CAC5B2B,gBAAiB,WAEdnB,UAAWC,GAAQ,IAAQA,QAAMC,EAAYD,GAC7CpE,KAAK,CACJ,KAAKsF,GACH,GAAIA,EAAiB,CACnB,MAAM,oBAAEC,GAAwBta,KAAKga,OAC/BjlB,EAjIH,EAACA,EAAewlB,KACnC,OAAQA,GACN,IAAK,IACH,OAAe,GAARxlB,EAET,IAAK,IACH,OAAe,KAARA,EAET,QACE,OAAOA,IAwHmBylB,CAAaH,EAAiBC,GAC5C,OAAOvlB,GAAS,GAAKA,GAAS,KAEhC,OAAO,GAETkB,QAASjC,EAAE,gEAInBymB,cAAe,UAAYC,GACzB,WAEGxB,UAAU,KACVP,QAAQL,EAAe,CACtBriB,QAASjC,EACP,4IAEF2mB,oBAAoB,IAErB5F,KACC,2BACA/gB,EAAE,oFACF,SAAU4mB,GACR,OAAOA,EAAW7oB,MAAM,KAAKsK,QAAU,UAOxCwe,EAAyB7mB,GACpC,WAAa0kB,MAAM,CACjBoC,OAAQ,YACRvb,IAAK,WAAauZ,KAAK,SAAU,CAC/BC,IAAI,EACJpY,KAAM,SAAW,CACfoa,YAAa,WAAaxW,SAASvQ,EAAE,qDAGzCgnB,SAAU,WAEPrC,QAAQL,EAAe,CACtBriB,QAASjC,EACP,yIAEF2mB,oBAAoB,IAErB9B,IAAI,IAAK7kB,EAAE,qDACdub,KAAM,WAAaoJ,QAAQJ,EAAW,CACpCtiB,QAASjC,EAAE,sCACX2mB,oBAAoB,IAEtBM,kBAAmB,WAEhBC,UAAUlnB,EAAE,wCACZmnB,QAAQnnB,EAAE,wCACVqlB,IAAI,EAAGrlB,EAAE,iDACT6kB,IAAI,MAAO7kB,EAAE,mDAGPonB,EAA0BpnB,GACrC,WAAa0kB,MAAM,CACjB2C,IAAK,WAAa3C,MAAM,CACtB4C,QAAS,WAENpC,UAAWoC,GAAa,IAAQA,QAAWlC,EAAYkC,GACvDjC,IAAI,EAAGrlB,EAAE,2DACT+gB,KAAK,CACJ,KAAKuG,GACH,MAAM,YAAEC,EAAW,MAAExB,EAAK,UAAEyB,GAAcxb,KAAKga,OAC/C,YAAcZ,IAAVW,GAEA,aAAmB,GAAGuB,IAAUC,MAChC,aAAmB,GAAGxB,IAAQyB,MAKpCvlB,QAASjC,EAAE,iEAEfunB,YAAa,SAAWvnB,EAAE,iDAAiDynB,SAC3ED,UAAW,SAAWxnB,EAAE,iDAAiDynB,SACzE1B,MAAO,WAEJb,UAAWa,GAAW,IAAQA,QAASX,EAAYW,GACnDV,IAAI,EAAGrlB,EAAE,yDACT+gB,KAAK,CACJ,KAAKgF,GACH,MAAM,QAAEuB,EAAO,YAAEC,EAAW,UAAEC,GAAcxb,KAAKga,OACjD,YAAcZ,IAAVW,GAEA,aAAmB,GAAGA,IAAQyB,MAC9B,aAAmB,GAAGF,IAAUC,MAKtCtlB,QAASjC,EAAE,sEAGjB0nB,OAAQ,WAAahD,MAAM,CACzB4C,QAAS,WAENpC,UAAWoC,GAAa,IAAQA,QAAWlC,EAAYkC,GACvDjC,IAAI,EAAGrlB,EAAE,2DACT+gB,KAAK,CACJ,KAAKuG,GACH,MAAM,YAAEC,EAAW,MAAExB,EAAK,UAAEyB,GAAcxb,KAAKga,OAC/C,YAAcZ,IAAVW,GAEA,aAAmB,GAAGuB,IAAUC,MAChC,aAAmB,GAAGxB,IAAQyB,MAKpCvlB,QAASjC,EAAE,oEAEfunB,YAAa,SAAWvnB,EAAE,sCAC1B+lB,MAAO,WAEJb,UAAWa,GAAW,IAAQA,QAASX,EAAYW,GACnDV,IAAI,EAAGrlB,EAAE,yDACT+gB,KAAK,CACJ,KAAKgF,GACH,MAAM,QAAEuB,EAAO,YAAEC,EAAW,UAAEC,GAAcxb,KAAKga,OACjD,YAAcZ,IAAVW,GAEA,aAAmB,GAAGuB,IAAUC,MAChC,aAAmB,GAAGxB,IAAQyB,MAKpCvlB,QAASjC,EAAE,uEAEfwnB,UAAW,SAAWxnB,EAAE,0CAIjB2nB,EAAyB3nB,GACpC,WAAa8kB,KAAK,QAAS,CACzBC,GAAK3gB,GAA6B,WAAnBA,EAAMwjB,SACrBjb,KAAM,WAAa+X,MAAM,CACvBvB,SAAU,WAAa5S,SAASvQ,EAAE,wBAClC1B,IAAK,WAAaiS,SAASvQ,EAAE,4BAItB6nB,EAAuB7nB,GAClC,WAAa0kB,MAAM,CACjB3K,IAAK,WAEF8K,IAAI,IAAM7kB,EAAE,qEACZ2kB,QAAQH,EAAaxkB,EAAE,gCACvBuQ,SAASvQ,EAAE,wBACdmB,KAAM,WAAa2jB,KAAK,cAAe,CACrCC,IAAI,EACJpY,KAAM,WAEH4D,SAASvQ,EAAE,6EAEhB8nB,YAAa,cAGJC,EAA0B/nB,GACrC,WAAa8kB,KAAK,QAAS,CACzBC,GAAK3gB,GAA6B,WAAnBA,EAAMwjB,SACrBjb,KAAM,WAAa+X,MAAM,CACvBsD,cAAe,WAEZjH,KAAK,YAAU/gB,EAAE,oDACpBqa,eAAgB,WAAa9J,SAASvQ,EAAE,4BAIjCioB,EAA2BjoB,GACtC,WAAa8kB,KAAK,QAAS,CACzBC,GAAK3gB,GAA6B,YAAnBA,EAAMwjB,SACrBjb,KAAM,WAAa+X,MAAM,CACvBtK,YAAa,WAAa7J,SAASvQ,EAAE,wBACrCkoB,eAAgB,WAEb7C,IAAI,EAAGrlB,EAAE,wBACTuQ,SAASvQ,EAAE,wBACdmoB,gBAAiB,YAAczC,MAAM,EAAC,IACtC0C,0BAA2B,WAAa7X,SAASvQ,EAAE,4BAI5CqoB,EAAwB,WAAa3D,MAAM,CACtDkD,SAAU,aAMCU,EAAuBtoB,GAClC,WAAa0kB,MAAM,CACjBjmB,KAAM,WAAa8R,SAASvQ,EAAE,wBAC9BH,MAAO,WAAa0Q,SAASvQ,EAAE,wBAC/B1B,IAAK,WACLqD,OAAQ,WAAa4O,SAASvQ,EAAE,0BAGvBuoB,EAA6C,WAEvDzD,KAAK,CAAC,UAAW,eAAgB,QAAS,CACzCC,GAAI,CAACyD,EAAmBC,EAAaC,KAClCF,GAAqBC,IAAgB,IAAarW,YACnDsW,IAAiB,IAAaC,IAChChc,KAAM,WAAa+X,MAAM,CACvBkE,iBAAkB,WAAarY,gB,kCCrWrC,srBAGA,MAAMsY,EAAQ,wBAAiB9nB,MAElB+nB,EAAyB,CACpCC,SAAU,aACVra,WAAY,KACZyF,MAAO,WAEPrC,SAAU,4BAEVkX,eAAgB,6BAChBC,OAAQ,YACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,WACN6D,GAAI,WACJqlB,YAAa,YACbC,KAAK,EACLR,SAGWS,EAAgC,CAC3CP,SAAU,aACVra,WAAY,UACZyF,MAAO,WAEPrC,SAAU,4BAEVkX,eAAgB,6BAChBC,OAAQ,YACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,WACN6D,GAAI,WACJqlB,YAAa,YACbC,KAAK,EACLR,SAGWU,EAA4B,CACvCR,SAAU,aACVra,WAAY,KACZyF,MAAO,cAEPrC,SAAU,+BAEVkX,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,MACNC,YAAY,EACZjpB,KAAM,cACN6D,GAAI,cACJqlB,YAAa,eACbC,KAAK,EACLR,SAGWW,EAAmC,CAC9CT,SAAU,aACVra,WAAY,UACZyF,MAAO,cAEPrC,SAAU,+BAEVkX,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,MACNC,YAAY,EACZjpB,KAAM,cACN6D,GAAI,cACJqlB,YAAa,eACbC,KAAK,EACLR,SAGWY,EAAqB,CAChCV,SAAU,aACVra,WAAY,KACZyF,MAAO,OAEPrC,SAAU,wBAEVkX,eAAgB,yBAChBC,OAAQ,QACRC,KAAM,IACNC,YAAY,EACZjpB,KAAM,OACN6D,GAAI,OACJqlB,YAAa,QACbC,KAAK,EACLR,SAGWa,EAA4B,CACvCX,SAAU,aACVra,WAAY,UACZyF,MAAO,OAEPrC,SAAU,wBAEVkX,eAAgB,yBAChBC,OAAQ,QACRC,KAAM,IACNC,YAAY,EACZjpB,KAAM,OACN6D,GAAI,OACJqlB,YAAa,QACbC,KAAK,EACLR,SAGWc,EAAwB,CACnCZ,SAAU,aACVra,WAAY,KACZyF,MAAO,UAEPrC,SAAU,2BAEVkX,eAAgB,4BAChBC,OAAQ,WACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,UACN6D,GAAI,UACJqlB,YAAa,WACbC,KAAK,EACLR,SAGWe,EAA+B,CAC1Cb,SAAU,aACVra,WAAY,UACZyF,MAAO,UAEPrC,SAAU,2BAEVkX,eAAgB,4BAChBC,OAAQ,WACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,UACN6D,GAAI,UACJqlB,YAAa,WACbC,KAAK,EACLR,SAGWgB,EAAiC,CAC5Cd,SAAU,aACVra,WAAY,UACZyF,MAAO,YAEPrC,SAAU,6BAEVkX,eAAgB,8BAChBC,OAAQ,aACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,YACN6D,GAAI,YACJqlB,YAAa,aACbC,KAAK,EACLR,SAGWiB,EAAiC,CAC5Cf,SAAU,aACVra,WAAY,WACZyF,MAAO,mBAEPrC,SAAU,oCAEVkX,eAAgB,qCAChBC,OAAQ,oBACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,mBACN6D,GAAI,mBACJqlB,YAAa,oBACbC,KAAK,EACLR,SAGWkB,EAA4B,CACvChB,SAAU,aACVra,WAAY,UACZyF,MAAO,cAEPrC,SAAU,+BAEVkX,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,cACN6D,GAAI,cACJqlB,YAAa,eACbC,KAAK,EACLR,SAGWmB,EAA0B,CACrCjB,SAAU,aACVra,WAAY,WACZyF,MAAO,YAEPrC,SAAU,6BAEVkX,eAAgB,8BAChBC,OAAQ,aACRC,KAAM,IACNC,YAAY,EACZjpB,KAAM,YACN6D,GAAI,YACJqlB,YAAa,aACbC,KAAK,EACLR,SAGWoB,EAA+B,CAC1ClB,SAAU,sBACVra,WAAY,UACZyF,MAAO,iBAEPrC,SAAU,kCAEVkX,eAAgB,mCAChBC,OAAQ,kBACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,iBACN6D,GAAI,iBACJqlB,YAAa,kBACbC,KAAK,EACLR,SAGWqB,EAAsC,CACjDnB,SAAU,sBACVra,WAAY,UACZyF,MAAO,wBAEPrC,SAAU,yCAEVkX,eAAgB,0CAChBC,OAAQ,yBACRC,KAAM,MACNC,YAAY,EACZjpB,KAAM,wBACN6D,GAAI,wBACJqlB,YAAa,yBACbC,KAAK,EACLR,SAGWsB,EAAgC,CAC3CpB,SAAU,sBACVra,WAAY,UACZyF,MAAO,kBAEPrC,SAAU,mCAEVkX,eAAgB,oCAChBC,OAAQ,mBACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,kBACN6D,GAAI,kBACJqlB,YAAa,mBACbC,KAAK,EACLR,SAGWuB,EAA8B,CACzCrB,SAAU,sBACVra,WAAY,UACZyF,MAAO,gBAEPrC,SAAU,iCAEVkX,eAAgB,kCAChBC,OAAQ,iBACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,gBACN6D,GAAI,gBACJqlB,YAAa,iBACbC,KAAK,EACLR,SAGWwB,EAA2B,CACtCtB,SAAU,6BACVra,WAAY,WACZyF,MAAO,aAEPrC,SAAU,8BAEVkX,eAAgB,gCAChBC,OAAQ,eACRC,KAAM,IACNC,YAAY,EACZjpB,KAAM,aACN6D,GAAI,aACJqlB,YAAa,eACbC,KAAK,EACLR,SAGWyB,EAA6B,CACxCvB,SAAU,sBACVra,WAAY,WACZyF,MAAO,eAEPrC,SAAU,gCAEVkX,eAAgB,iCAChBC,OAAQ,gBACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,eACN6D,GAAI,eACJqlB,YAAa,gBACbC,KAAK,GAGMkB,EAA0B,CACrCxB,SAAU,sBACVra,WAAY,WACZyF,MAAO,YAEPrC,SAAU,6BAEVkX,eAAgB,8BAChBC,OAAQ,aACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,YACN6D,GAAI,YACJqlB,YAAa,aACbC,KAAK,GAGMmB,EAA6B,CACxCzB,SAAU,sBACVra,WAAY,WACZyF,MAAO,eAEPrC,SAAU,gCAEVkX,eAAgB,iCAChBC,OAAQ,gBACRC,KAAM,KACNC,YAAY,EACZjpB,KAAM,eACN6D,GAAI,eACJqlB,YAAa,gBACbC,KAAK,I,kCCvWP,slCA6EO,MAOMvnB,EACS2oB,GAClBA,EAAKjiB,WACLiiB,EAAKjiB,UAAUkiB,QACfD,EAAKjiB,UAAUkiB,OAAOriB,OAAS,KAC7BoiB,EAAKjiB,UAAUkiB,OAAO,GAAG/qB,KALlBmC,EAMa2oB,GAAgCA,EAAKE,UAAYF,EAAKE,SAAStiB,OAAS,EAGlG,IAAYuiB,GAAZ,SAAYA,GACV,oBACA,kBACA,wBACA,wBACA,YALF,CAAYA,MAAY,KAQjB,MAAMC,EAAmB,CAC9B,CAACD,EAAa/I,SAAU,IAAQ7hB,EAAE,4BAClC,CAAC4qB,EAAahJ,QAAS,IAAQ5hB,EAAE,2BACjC,CAAC4qB,EAAajJ,WAAY,IAAQ3hB,EAAE,8BACpC,CAAC4qB,EAAa7I,WAAY,IAAQ/hB,EAAE,8BACpC,CAAC4qB,EAAa/H,OAAQ,IAAQ7iB,EAAE,2BAGlC,IAAY8qB,GAAZ,SAAYA,GACV,YACA,4BACA,gBACA,oBACA,oBACA,0BANF,CAAYA,MAA4B,KAUrCA,EAA6B5lB,IAC7B4lB,EAA6BC,YAC7BD,EAA6B3lB,MAC7B2lB,EAA6BE,QAC7BF,EAA6BG,QAC7BH,EAA6BI,WANzB,MAeMC,EAA0B,CACrCxI,EACAvB,EACAgK,EACAC,GAAiB,MAEFA,EAAiB1I,EAASvkB,KAAKktB,QAAU3I,EAASvkB,KAAKmtB,QAAU,IAEnEpQ,IAAKsP,I,MAChB,IAAKrJ,EAAYzf,OACf,OAAO8oB,EAET,IAAKW,GAAgC,IAApBA,EAAS/iB,OACxB,OAAI+Y,EAAYhjB,KAAKuD,SAAW,IAAuB8f,qBAC9C,IAAQgJ,EAAM,CAAE9oB,OAAQ,CAAE4f,OAAQ,IAAeQ,aAEtDX,EAAYhjB,KAAKuD,SAAW,IAAuB0gB,mBAC9C,IAAQoI,EAAM,CAAE9oB,OAAQ,CAAE4f,OAAQ,IAAeiK,QAEnD,IAAQf,EAAM,CAAE9oB,OAAQ,CAAE4f,OAAQ,IAAeK,UAG1D,MAAM2B,EAAU,IACd6H,EACCK,GAAOA,EAAGtrB,SAASqD,OAAO,IAAoBkoB,gBAAkBjB,EAAKhsB,MAElEktB,EAA4BpI,aAAO,EAAPA,EAAS5hB,OAErCiqB,EAAQ,IAAQnB,EAAM,CAC1B9oB,QAA2B,QAAnB,EAAAyf,aAAW,EAAXA,EAAazf,cAAM,eAAEypB,UACzB,IAAM,IAAOhK,EAAYzf,OAAOypB,SAAU,CAAES,iBAAkBpB,EAAKhsB,OAAS,UAC5EktB,IAGN,GAAIC,EAAMjqB,QAAUiqB,EAAMjqB,OAAOmqB,gBAAkBF,EAAMjqB,OAAOoqB,UAAW,CACzE,MAAMC,EACJ,IAAIC,KAAKL,EAAMjqB,OAAOmqB,gBAAgBI,UACtC,IAAID,KAAKL,EAAMjqB,OAAOoqB,WAAWG,UACnCN,EAAMjqB,OAAOwqB,SAAW,YAAyBH,GAUnD,OAPKJ,EAAMjqB,OAEAiqB,EAAMjqB,QAAUiqB,EAAMjqB,OAAOG,WACtC8pB,EAAMjqB,OAAO4f,OAAS,YAAkBqK,IAAU,IAAetJ,QACxDsJ,EAAMjqB,SAAWiqB,EAAMjqB,OAAO4f,SACvCqK,EAAMjqB,OAAO4f,OAAS,IAAee,SAJrCsJ,EAAMjqB,OAAS,CAAE4f,OAAQ,IAAee,SAMnCsJ,IAIEQ,EAAmB,CAC9BzJ,EACAvB,EAA+B,CAC7B1S,WAAY,GACZvO,SAAU,GACVD,KAAM,cACN9B,KAAM,IAERgtB,K,MAGA,MAAMiB,EAAM,GACZ,KAAkB,QAAb,EAAA1J,EAASvkB,YAAI,eAAEmtB,QAAS,IAAU5I,EAASvkB,KAAKmtB,OACnD,OAAOc,EAET,MAAMC,EAAWnB,EAAwBxI,EAAUvB,EAAagK,GAoEhE,OAjEAkB,EAASC,QAAS9B,IACX3oB,EAA6B2oB,IAAU3oB,EAAiC2oB,KACxD,IAAf4B,EAAIhkB,QACNgkB,EAAIrqB,KAAK,IAEXqqB,EAAI,GAAGrqB,KAAKyoB,MAKhB6B,EAASC,QAAS9B,I,MAChB,IAAK3oB,EAAiC2oB,IAAS3oB,EAA6B2oB,GAAO,CACjF,IAAI+B,EAAOH,EAAIhkB,OAAS,EACxB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgqB,EAAIhkB,OAAQhG,IAC9B,IAAK,MAAMrC,KAAKqsB,EAAIhqB,IAEP,QAAT,EAAArC,EAAEysB,eAAO,eAAEhuB,QAASgsB,EAAKjiB,UAAUkiB,OAAO,GAAG/qB,KAAK,IAClDK,EAAEvB,OAASgsB,EAAKjiB,UAAUkiB,OAAO,GAAG/qB,KAAK,KAEzC6sB,EAAOnqB,GAIb,MAAMqqB,EAAaL,EAAIG,EAAO,GAAKH,EAAIG,EAAO,GAAK,KAEjDE,GACAA,EAAW,IACXA,EAAW,GAAGlkB,WACdkkB,EAAW,GAAGlkB,UAAUkiB,QACxBgC,EAAW,GAAGlkB,UAAUkiB,OAAO,IAC/BgC,EAAW,GAAGlkB,UAAUkiB,OAAO,GAAG/qB,MAClC+sB,EAAW,GAAGlkB,UAAUkiB,OAAO,GAAG/qB,KAAK,IACvC+sB,EAAW,GAAGlkB,UAAUkiB,OAAO,GAAG/qB,KAAK,KAAO8qB,EAAKjiB,UAAUkiB,OAAO,GAAG/qB,KAAK,GAE5E+sB,EAAW1qB,KAAKyoB,GAEhB4B,EAAI5V,OAAO+V,EAAO,EAAG,EAAG,CAAC/B,OAM/B6B,EAASC,QAAS9B,I,MAChB,GAAI3oB,EAAiC2oB,GAAO,CAC1C,IAAI+B,EAAOH,EAAIhkB,OAAS,EACxB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgqB,EAAIhkB,OAAQhG,IAC9B,IAAK,MAAMrC,KAAKqsB,EAAIhqB,IACL,QAAT,EAAArC,EAAEysB,eAAO,eAAEhuB,QAASgsB,EAAKE,SAAS,IAAM3qB,EAAEvB,OAASgsB,EAAKE,SAAS,KACnE6B,EAAOnqB,GAIb,MAAMqqB,EAAaL,EAAIG,EAAO,GAAKH,EAAIG,EAAO,GAAK,KAEjDE,GACAA,EAAW,GAAG/B,UACd+B,EAAW,GAAG/B,SAAS,IACvB+B,EAAW,GAAG/B,SAAS,KAAOF,EAAKE,SAAS,GAE5C+B,EAAW1qB,KAAKyoB,GAEhB4B,EAAI5V,OAAO+V,EAAO,EAAG,EAAG,CAAC/B,OAIxB4B,GAGIM,EAA4B,CACvChK,EACAvB,EACAgK,IACGD,EAAwBxI,EAAUvB,EAAagK,GAAU,GAEjDwB,EAA8BC,IACzC,IAAKA,EACH,OAAO,IAET,MAAM,MAAE7Z,EAAK,UAAE8Z,GAAcD,EAC7B,OAAI7Z,EAAM+Z,UAAY,IAAUD,GACvB,IAEL9Z,EAAM+Z,QACD,IAEL/Z,EAAMga,WACD,IAEF,KAWIC,EACXC,IAEA,IAAKA,GAAwC,IAAxBA,EAAa7kB,OAEhC,MAAO,CAAE8kB,kBAAmB,KAAMxrB,OAAQ,IAAeyrB,oBAG3D,MAAMD,EAAoB,YAAaD,EAAc,qBAErD,IAAKC,EAEH,MAAO,CAAEA,kBAAmB,KAAMxrB,OAAQ,IAAeyrB,oBAG3D,IAAIzrB,EAAiB,YAAyBwrB,GAK9C,MAJe,MAAXxrB,IACFA,EAAS,IAAe2gB,SAGnB,CACL6K,oBACAxrB,WAIS0rB,EAAwBC,GAEjCA,GACAA,EAAenS,IAAKoS,IAAU,CAC5B9uB,KAAM8uB,EAAM9uB,KACZsC,MAAOwsB,EAAMC,WAKNC,EACXC,GAGEA,GACAA,EAAmBvS,IAAKwS,GAAe,OAAD,QACpClvB,KAAMkvB,EAAUlvB,MACbkvB,EAAU5lB,OAKN6lB,EAAoB,CAAC7B,EAAmB8B,EAAkBC,KACrE,MAAMC,EAAQ,IAAI9B,KAAKF,GAAWG,UAE5B8B,IADMH,EAAU,IAAI5B,KAAK4B,GAAS3B,WAAY,IAAID,MAAOC,WAC9B6B,GAAS,IAC1C,OAAO,YAAYC,EAAmBF,IAG3BG,EAAuBC,I,YAClC,MAAMnC,EAAkC,QAAtB,EAAW,QAAX,EAAAmC,aAAG,EAAHA,EAAKvsB,cAAM,eAAEoqB,iBAAS,QAAI,KACtCD,EAA4C,QAA3B,EAAW,QAAX,EAAAoC,aAAG,EAAHA,EAAKvsB,cAAM,eAAEmqB,sBAAc,QAAI,KAGtD,OAAKC,IAAeD,GAA6C,YAA3B,YAAkBoC,GAC/C,IAEFN,EAAkB7B,EAAWD,GAAgB,IAGzCqC,EAAuB,CAClCC,EACAC,EACAC,KAEA,MAAMC,EAAwB,IAAYF,GAQ1C,OAPAE,EAAsBC,QAAU,IAAID,EAAsBC,QAAS,CAAE/vB,KAAM2vB,IACvEE,IACFC,EAAsBE,iBAAmB,IACpCF,EAAsBE,iBACzB,CAAEhwB,KAAM2vB,KAGL,aAAU,sBAAqBG,IAG3BG,EAAkC,CAC7ClkB,EACApK,EACAuuB,KAEA,aAAO,sBAAqB,IAA0BvuB,GACnDuM,KAAMiiB,SAC0ExJ,IAA3E,IAAOwJ,EAAeJ,QAAUve,GAAMA,EAAExR,OAAS+L,EAAOrK,SAAS1B,OACnE0vB,EAAqB3jB,EAAOrK,SAAS1B,KAAMmwB,EAAgBD,KAG9DE,MAAOnf,IACN,qBAAW,CAAEtN,MAAOsN,EAAIzN,aASxB6sB,EAAmB,CAACpjB,EAAoBqjB,IAExCrjB,IAAe,IAAmBxG,IAC7B,cAAuB,IAAmBA,OAAO6pB,IAEtDrjB,IAAe,IAAmBvG,MAC7B,cAAuB,IAAmBA,SAAS4pB,IAErD,KAGIC,EAAuB,CAClCC,EACAC,EAAiD,MAEjD,IAAIC,EAAQ,EACRC,EAAgBN,EAAiBG,aAAU,EAAVA,EAAY3sB,IAAK6sB,GACtD,IAAKC,EACH,OAAOF,EAET,KACEA,EAAoBE,IACpBF,EAAoBE,MAAmBH,aAAU,EAAVA,EAAYluB,QAEnDquB,EAAgBN,EAAiBG,aAAU,EAAVA,EAAY3sB,MAAO6sB,GAGtD,OAAO,OAAP,wBAAYD,GAAmB,CAAE,CAACE,GAAgBH,aAAU,EAAVA,EAAYluB,SAGnDsuB,EAAgBC,IAC3B,OAAQA,EAAQpvB,MACd,KAAK,gBAAcA,KACnB,KAAK,YAAUA,KACf,KAAK,qBAAmBA,KACtB,MAAO,GACT,KAAK,mBAAiBA,KACpB,MAAO,gBACT,KAAK,wBAAsBA,KACzB,MAAO,qBACT,KAAK,iBAAeA,KAClB,MAAO,aACT,KAAK,eAAaA,KAChB,MAAO,YACT,KAAK,mBAAiBA,KACpB,MAAO,gBACT,KAAK,uBAAqBA,KACxB,MAAO,oBACT,KAAK,sBAAoBA,KACvB,MAAO,mBACT,KAAK,6BAA2BA,KAC9B,MAAO,2BACT,KAAK,kBAAgBA,KACnB,MAAO,eACT,QACE,OAAO,OAIAqvB,EAAiB,CAC5BC,EACAC,EACAC,IAEOF,EAAavnB,OAAQ0nB,IAC1B,MAAM,gBAAEC,EAAkB,IAAOD,EAAIxvB,SAErC,OAAOyvB,EAAgBC,KACpBC,GAAcA,EAAUrxB,OAASgxB,GAAqBK,EAAU5vB,OAASwvB,KAKnEK,EAAc,CAACxtB,EAA2BytB,IACpCA,EAAUrQ,KAAMsQ,GAAoBA,EAAE9vB,SAAS1B,OAAS8D,EAASpC,SAAS1B,MAIhFyxB,EAAsB,CACjCvN,EACAwN,IAEwBA,EAAiBloB,OACtCmoB,KACGA,EAAGhyB,KAAKiyB,kBAAkB1Q,KACzB2Q,IAAM,MAAC,OAAmB,QAAnB,EAAAA,EAAGlyB,KAAKmyB,mBAAW,eAAE9xB,QAASkkB,EAASxiB,SAAS1B,QAMnD+xB,EAAoB,CAC/BL,EACAM,IAE+BA,EAAevjB,OAAO,CAACtL,EAAK8uB,KACxCA,EAAGtyB,KAAKuyB,SAAS1oB,OAAQjI,GACxCmwB,EAAiBxQ,KAAMyQ,IAAM,MAAC,OAAAA,aAAE,EAAFA,EAAIjwB,SAAS1B,SAAoB,QAAX,EAAAuB,aAAC,EAADA,EAAG4wB,gBAAQ,eAAEzW,QAEtD9R,OAAS,GACpBzG,EAAII,KAAK0uB,GAEJ9uB,GACN,IAIQivB,EAA4BlO,GACX,uBAAxBA,EAASjU,WACJ,uBAEF,gBAGIoiB,EAA+B1P,GACX,uBAA3BA,EAAY1S,WACP,0BAEF,mBAGIqiB,EAAwBtG,GACX,uBAApBA,EAAK/b,WACA,mBAEF,YAGT,IAAYsiB,EAKAC,EAIAC,GATZ,SAAYF,GACV,yBACA,2BAFF,CAAYA,MAAyB,KAKrC,SAAYC,GACV,gCADF,CAAYA,MAA6B,KAIzC,SAAYC,GACV,+BACA,sBACA,4BACA,4BAJF,CAAYA,MAAc,KAOnB,MAAMC,EAAkBC,GAC7BA,aAAQ,EAARA,EAAUzR,KACP8L,IAAM,QAAC,OAAyB,QAAzB,EAAY,QAAZ,EAAAA,aAAE,EAAFA,EAAItrB,gBAAQ,eAAEkxB,mBAAW,eAAGL,EAA0BM,QAASJ,EAAeK,OAG7EC,EAAmBC,I,QAC9B,OAAkC,QAAlC,EAAqB,QAArB,EAAAA,aAAW,EAAXA,EAAatxB,gBAAQ,eAAEkxB,mBAAW,eAAGL,EAA0BU,SAC/DT,EAA8BU,eAEnBC,EAAeH,I,YAC1B,OAEC,QAFD,EAAkE,QAAlE,GAAoB,QAAnB,EAAAA,aAAW,EAAXA,EAAa9vB,cAAM,eAAEkwB,WAA8B,QAAnB,EAAAJ,aAAW,EAAXA,EAAa9vB,cAAM,eAAEmwB,oBAAY,eAAEnS,KACjEvE,GAAMA,EAAE3c,OAASyyB,EAAeK,aAClC,eAAExwB,OAEQgxB,EAAeC,I,YAC1B,OAEC,QAFD,EAAsE,QAAtE,GAAoB,QAAnB,EAAAA,aAAW,EAAXA,EAAarwB,cAAM,eAAEkwB,WAA8B,QAAnB,EAAAG,aAAW,EAAXA,EAAarwB,cAAM,eAAEswB,wBAAgB,eAAEtS,KACrEvE,GAAMA,EAAE3c,OAASyyB,EAAegB,yBAClC,eAAEnxB,OAEQoxB,EAAiB5O,I,QAC5B,KAAgC,QAA3B,EAAe,QAAf,EAAAA,aAAO,EAAPA,EAAS5hB,cAAM,eAAEG,kBAAU,eAAEuG,QAChC,OAAO,IAAeia,QAGxB,OAD+B,YAAkBiB,IAItC6O,GAAwBhR,I,UACnC,MAAMiR,EAEL,QAFyB,EAA+B,QAA/B,EAAmB,QAAnB,EAAAjR,aAAW,EAAXA,EAAazf,cAAM,eAAEG,kBAAU,eAAE6d,KACxD5d,GAAkC,eAApBA,aAAS,EAATA,EAAWZ,cAC3B,eAAEc,QAGG0iB,EAAU0N,aAAiB,EAAjBA,EAAmBC,MAAM,2BAEnCC,EAAgC,GACtC5N,WAAS4H,QAAS+F,IAChB,MAAOhwB,EAAKvB,GAASuxB,EAAMv0B,MAAM,gBACjCw0B,EAAOjwB,EAAI6U,QAAUmO,OAAOvkB,EAAMoW,UAGpC,MAAMqb,IACHD,aAAM,EAANA,EAAQE,YAAa,KAAMF,aAAM,EAANA,EAAQ3Q,SAAU,KAAM2Q,aAAM,EAANA,EAAQxQ,YAAa,GAc3E,MAZqC,CACnCF,SAAS0Q,aAAM,EAANA,EAAQG,aAAc,EAC/B/Q,UAAW6Q,GAAkB,EAC7BzQ,WAAWwQ,aAAM,EAANA,EAAQxQ,YAAa,EAChCH,QAAQ2Q,aAAM,EAANA,EAAQ3Q,SAAU,EAC1BY,SAAS+P,aAAM,EAANA,EAAQ/P,UAAW,EAC5BiQ,WAAWF,aAAM,EAANA,EAAQE,YAAa,EAChC/Q,YAAY6Q,aAAM,EAANA,EAAQxQ,YAAa,EACjCqL,mBAAoB,EACpB9K,QAAS,K,kCC1lBb,oEAAO,MAAMqQ,EAAa1wB,IAAY,CACpC8e,KAAKhgB,GACa,MAATA,GAAiBukB,OAAOqN,UAAU5xB,GAE3CkB,YAGW2wB,EAAyB,iC,4jBCgD/B,MAAMC,EAA2B,CACtC7qB,EACA8qB,EAA0B9qB,KAE1B,OAAQ8qB,GACN,KAAK,IACL,KAAK,IACH,MAAO,GACT,QACE,OAAO9qB,IAKP+qB,EAAqB,CACzBxpB,EACAT,EACAd,KAEA,MAAMxE,EAAS,OAAH,wBAAQsF,EAAK3I,SAASqD,QAAM,CAAE,4BAA6BwE,QAAeod,IAEtF,IAAK7b,EACH,OAAOP,QAAQC,SAGjB,MAAM+pB,EAAQ,CACZ,CACEC,GAAI,IAAUzvB,GAAU,MAAQ,UAChC+X,KAAM,mBACNxa,MAAOyC,IAIX,OAAO,aAAS+F,EAAcT,EAAMkqB,IAIzBE,EAA4B,CACvC3pB,EACAhH,EACAyF,KAEA,IAAKzF,EACH,OAAOyG,QAAQC,OACb,IAAIO,MAAM,IAAQxJ,EAAE,qEAGxB,IAAKuJ,EACH,OAAOP,QAAQC,OACb,IAAIO,MACF,IAAQxJ,EAAE,8EAKhB,MAAMmzB,EAAe,IAAM5wB,EAAU,CAAC,WAAY,SAAU,+BACtD6wB,EAAkB,IAAM7wB,EAAU,CAAC,WAAY,SAAU,8BAEzD8wB,EAA0B,CAACN,EAAmBxpB,EAAchH,EAAUyF,IAG5E,IAAKmrB,EACH,OAAOnqB,QAAQS,IAAI4pB,GAYrB,OALID,IAHkB,CACpB,6BAA8BD,GAGhB,6BAA+BC,GAIxC,YAAsB7wB,EAASpC,SAASC,UAAW+yB,EAAc,CACtE,4BAA6BC,IAC5BzmB,KAAM2mB,IACP,IAAUA,EAAaC,IACrB,IAAUA,EAAOzqB,KAEXsqB,GAAoB,IAAMtqB,EAAM,CAAC,WAAY,SAAU,+BACzDuqB,EAAQrxB,KAAK+wB,EAAmB,aAASjqB,EAAK5I,MAAO4I,EAAMd,QAK1DgB,QAAQS,IAAI4pB,MAIjBG,EAAe,CACnBC,EACAC,EAAsC,GACtCC,IACG,OAAD,6B,QACF,IACE,GAAIA,EAAqB,CACvB,MAAMC,QAAwB,aAAY,CACxCC,MAAOJ,EAAM1K,SACbxmB,SAAUkxB,EAAMxK,OAChB6K,KAAM,OACN1zB,UAAWszB,aAAW,EAAXA,EAAa1yB,KAE1B,KAA4B,QAAvB,EAAA4yB,aAAe,EAAfA,EAAiBjyB,cAAM,eAAEoyB,SAC5B,MAAO,GAGX,aAAa,aAAQN,EAAOC,GAC5B,MAAOtxB,GAEP,GAAgC,OAAb,QAAf,EAAAA,aAAK,EAALA,EAAOsL,gBAAQ,eAAE/L,QAGnB,OADAwe,QAAQC,KAAK,qBAAqBqT,EAAMxK,wBAAyB7mB,GAC1D,GAIT,MADA+d,QAAQC,KAAK,6BAA6BqT,EAAMxK,UAAW7mB,GACrDA,MAIJ4xB,EAAW,CAAOP,EAAiBnyB,IAAyB,OAAD,6B,MAQ/D,WAPmB,aAAY,CAC7BuyB,MAAOJ,EAAM1K,SACbxmB,SAAUkxB,EAAMxK,OAChB6K,KAAM,SACNr1B,KAAM6C,EAAInB,SAAS1B,KACnB2B,UAAWkB,EAAInB,SAASC,aAEhBuB,OAAOoyB,QAGf,OADA5T,QAAQC,KAAK,0CAA0CqT,EAAMxK,UAAU3nB,EAAInB,SAAS1B,SAC7E,KAET,IACE,aAAa,aAAQg1B,EAAOnyB,GAC5B,MAAOc,GAEP,GAAgC,OAAb,QAAf,EAAAA,aAAK,EAALA,EAAOsL,gBAAQ,eAAE/L,QAMnB,OAJAwe,QAAQC,KACN,YAAYqT,EAAMxK,UAAU3nB,EAAInB,SAAS1B,yCACzC2D,GAEK,KAIT,MADA+d,QAAQC,KAAK,iCAAiCqT,EAAMxK,UAAU3nB,EAAInB,SAAS1B,QAAS2D,GAC9EA,MAIJ6xB,EAAiB,CAAO1xB,EAA2B2xB,IAAqC,OAAD,6B,QAC3F,MAAMC,EAAuD,QAA9B,EAAiB,QAAjB,EAAA5xB,EAASpC,gBAAQ,eAAEkxB,mBAAW,QAAI,GAC3D+C,EAAU,YAAcD,EAAuB,6BAC/CE,QAAmB,aAAQ,cAAa,CAC5CrzB,GAAIuB,EAASpC,SAASC,YAExB,IAAIk0B,EACJ,IAAIJ,aAAY,EAAZA,EAAc7rB,QAAS,EACzBisB,EAAWJ,aAAY,EAAZA,EAAchnB,OAAO,CAACqnB,EAAUC,K,QAgBzC,MAAO,IAAID,MAfuB,QAAjB,EAAO,QAAP,EAAAC,EAAGp2B,YAAI,eAAEuyB,gBAAQ,QAAI,IAChBzjB,OAAO,CAACtO,EAAGoB,K,QAC/B,IAAIy0B,EACJ,MAAMC,EAAc10B,EAAE4K,QAAU,UAAYwpB,EACtCO,EAAiB30B,EAAE4K,SAAW5K,EAAEo0B,GACtC,GAAIO,EAAgB,CAClB,MAAMvG,EACgC,QAApC,EAA8B,QAA9B,EAAAuG,EAAeC,uBAAe,eAAEn2B,YAAI,QACpC,GAAG8D,EAASpC,SAAS1B,QAAQi2B,mBAC/BD,EAAiBJ,EAAW1U,KACzBnV,GAA4BA,EAAOrK,SAAS1B,OAAS2vB,GAG1D,OAAOqG,EAAiB,IAAI71B,EAAGo1B,EAAS,cAAaS,IAAmB71B,GACvE,MAEF,QACE,CACL,MAAMi2B,EAAwBR,EAAW1U,KACtCnV,GACCA,EAAOrK,SAAS1B,OAAY8D,EAASpC,SAAS1B,KAArB,2BAEvBq2B,EAAwBT,EAAW1U,KACtCnV,GACCA,EAAOrK,SAAS1B,OAAS,GAAG8D,EAASpC,SAAS1B,QAAQ21B,oBAE1DE,EAAW,CACTN,EAAS,cAAaa,GACtBb,EAAS,cAAac,IAG1B,OAAOR,KAGIS,EAAyBxyB,GAA0D,OAAD,6BAC7F,MAAMyyB,EAAO,GAEPd,QAAqBV,EAAa,mBAAkB,CAAExyB,GAAIuB,EAASpC,SAASC,YAC5E60B,QAAezB,EAAa,aAAY,CAAExyB,GAAIuB,EAASpC,SAASC,YAChE4vB,QAAkBwD,EAAa,gBAAe,CAAExyB,GAAIuB,EAASpC,SAASC,YAAa,GACnF+vB,QAAyBqD,EAC7B,uBACA,CACExyB,GAAIuB,EAASpC,SAASC,YAExB,GAEIqwB,QAAuB+C,EAC3B,qBACA,CACExyB,GAAIuB,EAASpC,SAASC,YAExB,GAEI80B,QAAsB,6BAEtBC,EAAgB,aAAS,aAAa5yB,IACtCiG,EAAY,CAChB0rB,aAAc,CACZnsB,KAAMmsB,EACNkB,QAAQ,EACRC,UAAW,MAEbJ,OAAQ,CACNltB,KAAMktB,EACNG,QAAQ,EACRC,UAAW,OAGTC,EAAuB,aAA2B/yB,EAAUiG,GAC5D+sB,GAAwB,IAAUD,GAClC3S,EAAW,YAAYpgB,EAAUytB,GACvC,IAAIwF,EAAkD,GAClDC,EAA8C,GAElD,MAAMC,EAAe,CAAC,eAAc,aAAY,oBAC1CC,EAAsB,CAAC,IAAqB,oBAE7C,IAAUhT,KACb+S,EAAa1zB,KAAK,iBAClB2zB,EAAoB3zB,KAAK,iBACzBwzB,EAA2B,YAAoB7S,EAAUwN,GACzDsF,EAAyB,YAAkBD,EAA0B/E,IAEvE,MAAMmF,EAAe,IAAYrzB,GAC3BszB,EAAgB,CAACpC,EAAiBqC,KACtC,MAAMC,EAAM/B,EAASP,EAAOqC,GAC5BC,GAAOf,EAAKhzB,KAAK+zB,IAEfR,GACFD,EAAqB/I,QAASiI,IAC5BqB,EAAc,mBAAkBrB,KAGpC,MAAMwB,EAAsB,CAACC,EAAoBH,KAC/CG,EAAO1J,QAASkH,GAAUoC,EAAcpC,EAAOqC,KAejD,OAbI,qCAA2B,aAAavzB,KAC1CszB,EAAc,aAAS,aAAatzB,IAAYA,GAC9C2yB,EAAcvV,KAAMuW,GAAYA,EAAQh2B,OAASqC,EAASrC,OAC5D21B,EAAcV,EAAe5yB,GAE3BizB,EAAyBntB,OAAS,GACpCmtB,EAAyBjJ,QAAS6D,GAAOyF,EAAc,uBAAsBzF,IAG3EqF,EAAuBptB,OAAS,GAClCotB,EAAuBlJ,QAASmE,GAAOmF,EAAc,qBAAoBnF,IAGnEnuB,EAASrC,MACf,KAAK,iBAAeA,KACpB,KAAK,mBAAiBA,KACtB,KAAK,WAASA,KACd,KAAK,eAAaA,KAClB,KAAK,IAAoBA,KACvB21B,EAAcV,EAAe5yB,GAC7B,MACF,KAAK,kBAAgBrC,KACrB,KAAK,wBAAsBA,KACzB21B,EAAcV,EAAe5yB,GAC7ByzB,EAAoBN,EAAcnzB,GAClC,MACF,KAAK,IAAoBrC,KACvB81B,EAAoBL,EAAqBC,GACzC,MACF,KAAK,IAAyB11B,KAC9B,KAAK,IAAeA,KAClB21B,EAAcV,EAAe5yB,GAajC,OAPIgzB,GACFP,EAAKhzB,cAAeiyB,EAAe1xB,EAAU+yB,IAE3C3S,GACFqS,EAAKhzB,cAAeiyB,EAAe1xB,IAG9ByG,QAAQS,IAAIurB,O,kCCzRrB,IAAYmB,EAOAC,EAOAC,EAdZ,+GAAYF,GACV,wEACA,wDACA,gEACA,gDAJF,CAAYA,MAAY,KAOxB,SAAYC,GACV,sBACA,4BACA,cACA,oBAJF,CAAYA,MAAU,KAOtB,SAAYC,GACV,wBACA,wBACA,wBAHF,CAAYA,MAAa,M,yDCyFzB,kCAAO,MAAMC,EAAmD,CAC9DzC,MAAO,aACP0C,QAAS,KACTr2B,KAAM,gB,gFCtIR,kCAAO,MAAMs2B,EAA+C,CAC1D3C,MAAO,aACP0C,QAAS,KACTr2B,KAAM,Y,kCCnDR,IAAYu2B,EAgBAC,EAhBZ,2CAAYD,GACV,0BACA,wBACA,kBACA,oBAEA,+BACA,gCACA,0CACA,oBACA,wBACA,oBACA,cACA,YAbF,CAAYA,MAAc,KAgB1B,SAAYC,GACV,8BADF,CAAYA,MAAe,M,sZCF3B,MAAMC,EAA2C,CAC/C,CACEl4B,KAAM,UACN0C,KAAM,IAAey1B,QACrBtW,eAAgB,qBAChBC,SAAU,GAEZ,CACE9hB,KAAM,aACN0C,KAAM,IAAe01B,WACrBvW,eAAgB,gCAChBC,SAAU,GAEZ,CACE9hB,KAAM,sBACN0C,KAAM,IAAe21B,oBACrBxW,eAAgB,qBAChBC,SAAU,GAEZ,CACE9hB,KAAM,gBACN0C,KAAM,IAAe41B,IACrBzW,eAAgB,IAChBC,SAAU,EACVG,gBAAiB,MAmBRsW,EAAyB,CACpCC,EACAtW,EACAuW,GAA+B,IACE,OAAD,6BAChC,IACIC,EADAC,EAAyC,GAEzChC,GAAkB,EAClBC,EAAY,KAEhB,MAAMgC,EAAmB1W,QACfA,EAAWrG,kBACjB,IAAWgd,mBACf,IACIC,EADAzW,EAA0B,GAG9B,GAAIuW,IAAqB,IAAW3c,UAClC,IACE,MAAM,MAAEtO,SAAgBuU,EAAWzU,gBAAgB,CAAEkT,eAAe,IACpE+X,QAAgC,YAAyBD,EAAqBvW,GAE9EyW,QAA2BpuB,QAAQS,IACjCktB,EAAmBxb,IAAsCyM,GAAa,OAAD,6BAKnE,OAJA9G,EAAgB1U,EAAMnE,OAAQkW,GAAMyJ,EAAStH,eAAeS,KAAK5C,IAC7D2C,EAAczY,OAAS,GAAKuf,EAASlH,kBACvC6W,QAA2B3P,EAASlH,gBAAgBC,IAE/C,CACLliB,KAAMmpB,EAASnpB,KACf0C,KAAMymB,EAASzmB,KACfof,SAAUqH,EAASrH,SACnBO,gBACAyW,2BAINnC,GAAS,EACT,MAAO1lB,GACP0lB,GAAS,EACTC,EAAY3lB,EAAIzN,aAGlBmzB,GAAS,EAaX,OAVK+B,IACHC,EAAqBA,EAAmBnvB,OACrC2f,GAAaA,EAASzmB,OAAS,IAAe21B,sBAInDM,EAAqBA,EAClBnvB,OAAQ2f,IAAY,MAAC,QAAEA,EAAS9G,cAAczY,WAAuC,QAA3B,EAAAuf,EAAS2P,0BAAkB,eAAElvB,UACvF1J,KAAK,CAACqiB,EAAIC,IAAOA,EAAGV,SAAWS,EAAGT,UAE9B,CACL6U,SACAC,YACAgC,mBACAG,WAAYJ,O,kCCpHhB,knBAEO,MAAMK,EAAoB,eACpBC,EAAkB,aAClBC,EAAkB,aAClBC,EAA0B,qBAC1BC,EAAyB,oBACzBC,EAAuB,kBACvBC,EAA6B,0BAC7BC,EAAqB,eACrBC,EAA0B,oBAC1BC,EAAuB,kBACvBC,EAAwB,mBACxBC,EAAwB,mBACxBC,EAAgB,WAEhBC,EAA2B,IAC3BC,EAA4B,IAC5BC,EAA6B,CACxC,IACA,IACA,IAAoB,GACpB,KAGWC,EAAsB,EAGtBC,EAAW,O,kCC5BxB,ijBAmDO,MAAMC,EAAe,CAACC,EAAyBC,KACpD,KAAKD,GAAUA,EAAKvwB,OAAS,GAAOwwB,GAClC,OAAO,KAET,IAAIjW,EAAYgW,EAAK,GACrB,GAAc,sBAAVC,EACF,IAAK,IAAIx2B,EAAI,EAAGA,EAAIu2B,EAAKvwB,OAAQhG,IAC/BugB,EACEgW,EAAKv2B,IACLu2B,EAAKv2B,GAAGlC,UACRy4B,EAAKv2B,GAAGlC,SAAS04B,IACjB,IAAI5M,KAAK2M,EAAKv2B,GAAGlC,SAAS04B,IAAU,IAAI5M,KAAKrJ,EAAUziB,SAAS04B,IAC5DD,EAAKv2B,GACLugB,OAEH,GAAc,cAAViW,GAAmC,mBAAVA,EAClC,IAAK,IAAIx2B,EAAI,EAAGA,EAAIu2B,EAAKvwB,OAAQhG,IAC/BugB,EACEgW,EAAKv2B,IACLu2B,EAAKv2B,GAAGV,QACRi3B,EAAKv2B,GAAGV,OAAOk3B,IACf,IAAI5M,KAAK2M,EAAKv2B,GAAGV,OAAOk3B,IAAU,IAAI5M,KAAKrJ,EAAUjhB,OAAOk3B,IACxDD,EAAKv2B,GACLugB,OAGRA,EAAYgW,EAAKA,EAAKvwB,OAAS,GASjC,OAPKua,EAAUjhB,SACbihB,EAAY,OAAH,wBAAQA,GAAS,CAAEjhB,OAAQ,CAAEm3B,aAAc,CAAEvN,MAAO,QAE1D3I,EAAUjhB,OAAOo3B,qBACpBnW,EAAUjhB,OAAS,OAAH,wBAAQihB,EAAUjhB,QAAM,CAAEo3B,mBAAoB,MAEhEnW,EAAUjhB,OAAOo3B,mBAAqB,YAAyBnW,GACxDA,GAGIoW,EAAoB,CAC/BhJ,EACAiJ,IAEOjJ,EAAU7U,IAAKwH,IACpB,MAAMuW,EAAiBD,EAAahxB,OACjCkxB,IAAM,MAAC,OAAkB,QAAlB,EAAAA,EAAGh5B,SAASqD,cAAM,eAAG,0BAA2Bmf,EAASxiB,SAAS1B,OAG5E,OADAkkB,EAASC,UAAY+V,EAAaO,EAAgB,qBAC3CvW,IAIEyW,EAAqBz3B,IAChC,OAAQA,GACN,KAAK,IAAeggB,UAClB,MAAO,CAAE1f,QAAS,IAAQjC,EAAE,8BAA+Bq5B,QAAS,yBACtE,KAAK,IAAezX,OAClB,MAAO,CAAE3f,QAAS,IAAQjC,EAAE,2BAA4Bq5B,QAAS,2BACnE,KAAK,IAAeC,cAClB,MAAO,CACLr3B,QAAS,IAAQjC,EAAE,gDACnBq5B,QAAS,2BAEb,KAAK,IAAexX,QAEpB,KAAK,IAAe,eAClB,MAAO,CAAE5f,QAAS,IAAQjC,EAAE,4BAA6Bq5B,QAAS,wBAEpE,KAAK,IAAe7W,QAClB,MAAO,CAAEvgB,QAAS,IAAQjC,EAAE,4BAA6Bq5B,QAAS,yBACpE,KAAK,IAAetX,UAClB,MAAO,CAAE9f,QAAS,IAAQjC,EAAE,8BAA+Bq5B,QAAS,yBACtE,KAAK,IAAe3X,WAClB,MAAO,CAAEzf,QAAS,IAAQjC,EAAE,+BAAgCq5B,QAAS,yBACvE,KAAK,IAAe7N,KACpB,KAAK,IAAelJ,QAClB,MAAO,CAAErgB,QAAS,IAAQjC,EAAE,4BAA6Bq5B,QAAS,wBACpE,QACE,MAAO,CACLp3B,QAAS,IAAQjC,EAAE,gDACnBq5B,QAAS,0BAQJE,EAA8BnY,I,cACzC,MAAMoY,GACyB,QAA7B,EAAqB,QAArB,EAAApY,aAAW,EAAXA,EAAajhB,gBAAQ,eAAEqD,cAAM,eAAG,IAAoBmf,aAAkC,QAArB,EAAAvB,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,MACpFq6B,GAAkC,QAAnB,EAAA1X,aAAW,EAAXA,EAAazf,cAAM,eAAEm3B,gBAAiC,QAAjB,EAAA1X,aAAW,EAAXA,EAAahjB,YAAI,eAAE06B,cAC7E,OAAKU,GAAiBV,EAGf,CACLpqB,WAAY,YAAmB,iBAC/BxO,KAAM,gBAAcA,KACpBC,SAAU,CACR1B,KAAM+6B,EACNp5B,UAAWghB,EAAYjhB,SAASC,WAElChC,KAAM06B,GATC,MAqCEW,EAAgB,CAC3BC,EACA/W,EACAyI,K,cAEA,MAAMuO,EA7B6B,CAACC,I,YACpC,IAAKA,EACH,OAAO,EAIT,OAF8D,QAA1C,IAAqB,QAArB,EAAAA,EAAiBx7B,YAAI,eAAEmtB,QAAS,IAAIljB,cAAM,QAAI,IACA,QAA5C,IAAqB,QAArB,EAAAuxB,EAAiBx7B,YAAI,eAAEktB,UAAW,IAAIjjB,cAAM,QAAI,IAwBnDwxB,CAAsBlX,GApBA,CAACiX,I,YAC1C,IAAKA,EACH,OAAO,EAUT,OALU,QAFP,IAAqB,QAArB,EAAAA,EAAiBx7B,YAAI,eAAEmtB,QAAS,IAAItjB,OAClCwiB,IAAQ,QAAC,MAAuB,UAAX,QAAZ,EAAAA,EAAKgC,eAAO,eAAEvsB,OAA0C,iBAAX,QAAZ,EAAAuqB,EAAKgC,eAAO,eAAEvsB,QACzDmI,cAAM,QAAI,IAIJ,QAFP,IAAqB,QAArB,EAAAuxB,EAAiBx7B,YAAI,eAAEktB,UAAW,IAAIrjB,OACpCwiB,IAAQ,QAAC,MAAuB,UAAX,QAAZ,EAAAA,EAAKgC,eAAO,eAAEvsB,OAA0C,iBAAX,QAAZ,EAAAuqB,EAAKgC,eAAO,eAAEvsB,QACzDmI,cAAM,QAAI,IASuCyxB,CAA4BnX,GAC3EoX,EAAW,K,MACf,OAAuB,QAAnB,EAAAL,aAAW,EAAXA,EAAa/3B,cAAM,eAAEypB,UAChBpe,OAAOC,KAAKysB,EAAY/3B,OAAOypB,UAEpCA,EACKA,aAAQ,EAARA,EAAUjQ,IAAK6e,GAASA,EAAK75B,SAAS1B,MAExC,IAEHw7B,EAAgBF,IAAW1xB,OAC3B6xB,IAAwC,QAAnB,EAAAR,aAAW,EAAXA,EAAa/3B,cAAM,eAAEw4B,eAAgB,IAAI9xB,OAC9DsjB,EAAyB,CAC7ByB,mBAAoB,EACpB9K,QAAS,EACTT,QAAS,EACTF,UAAW,EACXC,OAAQ,EACRG,UAAW,EACXS,QAAS0X,GAGX,IAAuB,QAAnB,EAAAR,aAAW,EAAXA,EAAa/3B,cAAM,eAAEypB,WAAYA,EAAU,CAC7C2O,IAAWxN,QAAShJ,IAClB,MAAM5hB,EAAS,aACbypB,aAAQ,EAARA,EAAUzL,KAAMqa,GAASA,EAAK75B,SAAS1B,OAAS8kB,KAC9CmW,EAAY/3B,OAAOypB,SAAS7H,IAEjB,cAAX5hB,EACFgqB,EAAW,IAAehK,aACN,YAAXhgB,EACTgqB,EAAW,IAAe9J,WACN,WAAXlgB,EACTgqB,EAAW,IAAe/J,UACN,cAAXjgB,EACTgqB,EAAW,IAAe5J,aAE1B4J,EAAW,IAAerJ,aAI9B,MAAM8X,EAAwBzO,EAAW,IAAe/J,QAAU,EAC5DyY,EACJ,YAAyBX,KAAiB,IAAe3X,UACrDuY,EACJX,GAAcM,EAAgBN,EAAaM,EAAgBC,EAAoBP,EAE7ES,GAAyBC,EAC3B1O,EAAW,IAAe5J,YAAcuY,EAExC3O,EAAW,IAAerJ,UAAYgY,MAGS,WAAb,QAApC,EAA+B,QAA/B,EAAmB,QAAnB,EAAAZ,aAAW,EAAXA,EAAa/3B,cAAM,eAAEG,kBAAU,eAAG,UAAE,eAAEH,UACtC+3B,aAAW,EAAXA,EAAat7B,KAAKuD,UAAW,IAAuB8f,qBAEpDkK,EAAW,IAAe5J,WAAa4X,GAC9BD,aAAW,EAAXA,EAAat7B,KAAKuD,UAAW,IAAuB0gB,mBAC7DsJ,EAAW,IAAerJ,UAAYqX,EAEtChO,EAAW,IAAeyB,sBAE5B,OAAOzB,GAGI4O,EAAgCr6B,GACvCA,IAAS,mBAAiBA,KACrB,mBAELA,IAAS,YAAUA,WAAiBklB,IAATllB,EACtB,YAEF,KAGIs6B,EAA2Bt6B,IACrCq6B,EAA6Br6B,IAAS,aAAWA,KAEvCu6B,EAAmCv6B,GAC1CA,IAAS,6BAA2BA,KAC/B,6BAELA,IAAS,sBAAoBA,WAAiBklB,IAATllB,EAChC,sBAEF,KAGIw6B,EAA8Bx6B,IACxCu6B,EAAgCv6B,IAAS,uBAAqBA,KAapDy6B,EAAiCz6B,IAC5C,MAAMuzB,EAAQ8G,EAA6Br6B,GAC3C,OAAO,aAAkBuzB,IAGdmH,EAAoB,CAC/BxZ,EACAgK,KAEA,MAAMyP,EAAezP,GAAYqO,EAAcrY,OAAagE,EAAWgG,GACvE,OAAOyP,aAAY,EAAZA,EAAchZ,SAGViZ,EAA4B,CACvC1Z,EACAgK,MAGEhK,IACCwZ,EAAkBxZ,EAAagK,GAAY,GAC1C,YAAyBhK,KAAiB,IAAeS,UAGlDkZ,EAA4C,CACvD3Z,EACA4Z,MAGE5Z,KACC4Z,aAAgB,EAAhBA,EAAkBnZ,SAAU,GAC3B,YAAyBT,KAAiB,IAAeS,UAGlDoZ,EAA8B,CACzC7Z,EACAgK,MAGEhK,GACAwZ,EAAkBxZ,EAAagK,GAAY,GAC3C,YAAyBhK,KAAiB,IAAeW,WAGhDmZ,EAA8C,CACzD9Z,EACA4Z,MAGE5Z,IACA4Z,aAAgB,EAAhBA,EAAkBnZ,SAAU,GAC5B,YAAyBT,KAAiB,IAAeW,Y,kCCjV7D,0IAWO,MAAMoZ,EAAuB,4BAClC,cAAmC,YAAnC,c,oBAIW,KAAAnoB,MAAmC,CAC1CzE,sBAAuB,IAAsB3D,SAE/C,qBACE,IAAK,IAAUoB,KAAK7I,MAAM7B,IAAIyG,MAAO,CACnC,MAAMwG,EAAwB,YAAkBvC,KAAK7I,MAAM7B,IAAIyG,MAC3DiE,KAAKgH,MAAMzE,wBAA0BA,GACvCvC,KAAKoH,SAAS,CACZ7E,2BAKR,SACE,MAAM,IAAEjN,EAAG,UAAE85B,GAAcpvB,KAAK7I,OAC1B,sBAAEoL,GAA0BvC,KAAKgH,MACvC,IAAKzE,EACH,OAAO,gBAAC,IAAU,MAEpB,MAAME,EAAQ2sB,aAAS,EAATA,EAAWluB,OAAO,CAACtL,EAAKmU,KAAK,MAAC,sCAAMnU,GAAG,CAAE,CAACmU,IAAY,QAAR,EAAAzU,EAAIyG,YAAI,eAAGgO,KAAM,MAAO,IAEpF,OACE,gBAAC,KAAS,iBAAKzU,GACb,gBAAC,IAAiB,iBACZ0K,KAAK7I,MAAK,CACdoL,sBAAuBA,EACvBjN,IAAKA,EAAIyG,KACT0G,MAAOA,SAQN4sB,EAAa,EAAGn7B,WAC3B,MAAMkO,EAAS,uBACT,EAAEpO,GAAM,2BACd,OACE,gBAAC,IAAQ,CACPwI,UAAW,CAAC,CAAEtI,OAAMzB,KAAM2P,EAAO3P,KAAM2B,UAAWgO,EAAOpN,GAAIs6B,QAAQ,EAAOC,KAAM,SAElF,gBAACJ,EAAoB,CAACC,UAAW,CAAC,OAAQ,YAAarqB,eAAgB/Q,EAAE,oB,kCC1D/E,+DAKO,MAAMw7B,EAAe,KAC1B,MAAMptB,EAAS,sBACTG,EAAwBH,EAAOjN,KACrC,OACE,gBAAC,IAAiB,CAChBsN,MAAO,CAAEtO,SAAU,CAAEC,UAAWgO,EAAOpN,KACvCuN,sBAAuBA,EACvB3C,UAAU,M,gFCWhB,IAAY6vB,EAAZ,2CAAYA,GACV,6BACA,iCACA,6CACA,+CACA,uDACA,iCACA,2CACA,mDARF,CAAYA,MAAU,M,kCCTtB,oEAAO,MAAMC,EAAmB,CAC9Bj9B,KAAM,QACN0C,KAAM,OACNid,SAAU,OACVud,gBAAiBnb,OAAO,CAAC,WAAWC,KAAK,MACzCmb,cAAe,CAAC,YAGLC,EAAoB,CAC/Bp9B,KAAM,SACN0C,KAAM,OACNid,SAAU,OACVud,gBAAiBnb,OAAO,CAAC,cAAcC,KAAK,MAC5Cmb,cAAe,CAAC,eAAgB,UAAW,gBAGhCE,EAAoB,CAC/Br9B,KAAM,SACN0C,KAAM,SACNid,SAAU,KACVud,gBAAiBnb,OAAO,CAAC,WAAY,aAAc,cAAcC,KAAK,MACtEmb,cAAe,CAAC,UAAW,aAAc,eAG9BG,EAAkB,CAC7Bt9B,KAAM,OACN0C,KAAM,OACNid,SAAU,OACVud,gBAAiBnb,OAAO,CAAC,UAAW,WAAY,aAAaC,KAAK,MAClEmb,cAAe,CAAC,UAAW,WAAY,cAG5BI,EAAoB,CAC/Bv9B,KAAM,SACN0C,KAAM,SACNid,SAAU,aACVud,gBAAiBnb,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACzFmb,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDK,EAA0B,CACrCx9B,KAAM,iBACN0C,KAAM,gBACNid,SAAU,aACVud,gBAAiBnb,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACzFmb,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDM,EAAiB,CAC5Bz9B,KAAM,MACN0C,KAAM,MACNid,SAAU,MACVud,gBAAiBnb,OAAO,CAAC,YAAa,iBAAiBC,KAAK,MAC5Dmb,cAAe,CAAC,YAAa,kBAGlBO,EAAoB,CAC/B19B,KAAM,SACN0C,KAAM,SACNid,SAAU,SACVud,gBAAiBnb,OAAO,CAAC,mBAAoB,YAAYC,KAAK,MAC9Dmb,cAAe,CAAC,mBAAoB,aAGzBQ,EAAkB,CAC7B39B,KAAM,OACN0C,KAAM,OACNid,SAAU,OACVud,gBAAiBnb,OAAO,CAAC,WAAY,YAAYC,KAAK,MACtDmb,cAAe,CAAC,WAAY,aAWjBvb,EAAa,CARO,CAC/B5hB,KAAM,SACN0C,KAAM,SACNid,SAAU,KACVud,gBAAiBnb,OAAO,CAAC,eAAgB,aAAaC,KAAK,MAC3Dmb,cAAe,CAAC,eAAgB,eAKhCE,EACAD,EACAH,EACAM,EACAC,EACAG,EACAF,EACAC,EACAJ,GAGWM,EAAqB,CAChC,QACA,UACA,gBACA,MACA,WACA,c,kCCjHF,2F,kCCAA,kFAEO,SAASxb,EAAiBzU,GAK/B,OAJmB,IAAW+O,IAAKnb,IACjC,MAAMs8B,EAAelwB,EAAMnE,OAAQkW,GAAcne,EAAE27B,gBAAgB5a,KAAK5C,IACxE,MAAO,CAAE5R,UAAWvM,EAAEmB,KAAMid,SAAUpe,EAAEoe,SAAUhS,MAAOkwB,KAGxDr0B,OAAQpJ,GAAiBA,EAAEuN,MAAM/D,OAAS,GAC1C1J,KAAK,CAACC,EAAGC,IAAMA,EAAEuN,MAAM/D,OAASzJ,EAAEwN,MAAM/D,QAGtC,SAASk0B,EAAelwB,GAC7B,IACE,MAAMuU,EAAchT,KAAKC,MAAMxB,GAC/B,OAAO,IAAmBwjB,KAAM2M,GAAQA,KAAO5b,EAAY6b,cAC3D,SACA,OAAO,K,kCCjBX,kGASO,SAASC,EACdzF,EACA0F,EACAxiB,EACAhT,EACAqD,EACA4P,EACAC,GAEA,IAAI3O,EACAmO,EACJ,OAAQrP,aAAM,EAANA,EAAQrJ,MACd,KAAK,aAAWiJ,UACdsB,EAAa,IAAciO,WAC3BE,EAAgBrP,EAAOzC,KACvB,MACF,KAAK,aAAW0C,QACdiB,EAAa,IAAckxB,IAC3B/iB,EAAgBrP,EAAO,kBACvB,MACF,QACEkB,EAAa,IAAcmxB,QAE/B,MAAMC,EAAuB,CAC3B/iB,IAAKkd,EACL9c,MACAhT,aACAuE,aACAmO,gBACAO,cACAC,kBAGF,OAAQsiB,GACN,KAAK,IAAYxrB,OACf,OAAO,IAAI,IAAc2rB,GAC3B,KAAK,IAAYxrB,UACf,OAAO,IAAI,IAAiBwrB,GAC9B,KAAK,IAAY1rB,OACf,OAAO,IAAI,IAAc0rB,GAC3B,KAAK,IAAYzrB,MACf,OAAO,IAAI,IAAayrB,GAC1B,QACE,OAAO,Q,kCCpDb,mE,kCCAA,gDAEO,MAAMC,EAKX,YAAYC,GACVhxB,KAAKgxB,QAAUA,EACfhxB,KAAKixB,eAAiBjxB,KAAK6B,QAG7B,QACE,IAAIqvB,EAAgC,GACpC,IACEA,EAAgB,gBAAMlxB,KAAKgxB,SAC3B,UACF,OAAOE,EAGT,mBACE,MAAMC,EAAMnxB,KAAKixB,eAAeh1B,OAAQ2E,GAA+B,WAAXA,EAAEnO,MAC9D,GAAI0+B,EAAI90B,OAAS,EAAG,CAClB,MAAM+0B,EAAgBD,EAAI,GAC1B,GAAKC,EAAcC,KAAKh1B,OAAoB,EAAG,OAAOid,OAAO8X,EAAcC,KAAK,IAElF,OAAO,Q,kCCzBX,6eAwCO,MAWMC,EAAsB,CAACv1B,EAAMtJ,K,oBACxC,KAAKsJ,aAAI,EAAJA,EAAMktB,WAAWltB,aAAI,EAAJA,EAAMmsB,iBAAiBnsB,aAAI,EAAJA,EAAMioB,WACjD,OAAO,KAGT,MAAMuN,EAAqBz0B,IAAQ,UAAC,OAA6B,QAA7B,EAAiB,QAAjB,EAAS,QAAT,EAAAA,EAAK1K,YAAI,eAAEuL,cAAM,eAAExC,kBAAU,QAAI,MAC/Dq2B,EAA+B,QAAlB,EAAY,QAAZ,EAAAz1B,aAAI,EAAJA,EAAMktB,cAAM,eAAEltB,YAAI,eAAE4X,KACpCvb,GAA2BA,EAAMjE,SAAS1B,OAASA,GAEtD,GAAI++B,EAAY,CAEd,OADmBD,EAAkBC,GAIvC,MAAMC,EAA0C,QAAxB,EAAkB,QAAlB,EAAA11B,aAAI,EAAJA,EAAMmsB,oBAAY,eAAEnsB,YAAI,eAAE4X,KAC/C+d,GAAiCA,EAAYv9B,SAAS1B,OAASA,GAElE,GAAIg/B,EAAiB,CAEnB,OADmBF,EAAkBE,GAIvC,MAAME,EAAqC,QAArB,EAAe,QAAf,EAAA51B,aAAI,EAAJA,EAAMioB,iBAAS,eAAEjoB,YAAI,eAAE4X,KAC1CgD,GAA8BA,EAASxiB,SAAS1B,OAASA,GAE5D,GAAIk/B,EAAe,CACjB,MAAMC,EAA8C,QAA3B,EAAmB,QAAnB,EAAAD,aAAa,EAAbA,EAAev/B,YAAI,eAAEgQ,cAAM,eAAEuR,KACnD4N,GAAyB,iBAAfA,EAAM9uB,MAEnB,GAAIm/B,EACF,OAAOA,EAAiBpQ,QAG5B,OAAO,MAMIqQ,EAAyB,CACpCt7B,EACAu7B,EACA38B,EACA48B,EACAC,GAAiC,EACjCx1B,KAEA,MAAM,iBAAEy1B,EAAmB,IAAOH,EAC5BI,EAAQ,IAAM37B,EAAU,gBACxB47B,EAAoB,IAAM57B,EAAU,kBAAmB,IACvD4xB,EAAyB,IAAM5xB,EAAU,uBAAwB,IACjE67B,EAAkB,IAAM77B,EAAU,gBAAiB,IACnD4E,EAAam2B,EAAoB90B,EAAW41B,GAC5CC,EACJ,YAAqB,QAAQF,EAAkB,8BAC/C,YAAqB,QAAQA,EAAkB,2BACjD,MAAO,CACLp6B,GAAIm6B,EACJz/B,MAAM8D,aAAQ,EAARA,EAAUpC,SAAS1B,OAAQ0/B,EAAkB,8BACnDh9B,OACAoB,WACAiG,UAAW,OAAF,wBAAOs1B,GAAY,CAAEQ,wBAAyBN,IACvDj2B,KAAM,CACJk2B,mBACA/9B,KAAM,aAAaqC,GACnBg8B,QAASpK,EAAuB,6BAChCltB,OAAQktB,EAAuB,4BAC/BqK,OAAQrK,EAAuB,4BAC/BhtB,aACAs3B,aAAcJ,GAAoBN,EAClCW,qBACEv9B,GACCA,IAAS,KACRA,IAAS,KACTA,IAAS,MAEP,aAAiBoB,EAAU,sBAQ1Bo8B,EAAsB,CACjCp8B,EACApB,EACA4G,EACA62B,EACA5a,EACAza,EACAmb,K,MAEA,MAAMhP,EAAMnT,aAAQ,EAARA,EAAUpC,SAASuV,IACzBjX,EAAO8D,aAAQ,EAARA,EAAUpC,SAAS1B,KAC1B0V,EAAiC,QAAzB,EAAA5R,aAAQ,EAARA,EAAUpC,SAASqD,cAAM,eAAG,6BACpCtD,EAAOqJ,GAAgB,aAAahH,GAC1C,OAAO,OAAP,sBACEwB,GAAI2R,EACJvU,OACAgT,MAAOA,GAAS1V,EAChBimB,QACAniB,WACAgH,aAAcrJ,EACd6H,QACIic,GAAYA,EAAS3b,QAAU,CAAE2b,aACjC4a,GAAa,KAIRC,EAAqB,CAChCC,MAAO,IACPC,OAAQ,IACRlL,OAAO,EACPmL,SAAS,EACT5a,MAAO,CACL6a,QAAS,MAOAC,EAAuB,CAClCh3B,EACAM,KAEA,MAAM6oB,EAAc,IAAMnpB,EAAI,wBACxBi3B,EAAQ,GAoCd,OAlCA,IAAU,YAAqB9N,GAAetnB,IAE5C,MAAMq1B,EAAa,IACjB,IAAO52B,EAAY62B,I,cACjB,IAAI5gC,EACJ,GAAoB,iBAATsL,EAIT,OAHAtL,EAC6D,QAA3D,EAA2B,QAA3B,EAAmB,QAAnB,EAAA4gC,EAAWl/B,gBAAQ,eAAEqD,cAAM,eAAG,qCAA6B,QACxC,QAAnB,EAAA67B,EAAWl/B,gBAAQ,eAAE1B,KAChBA,IAASsL,EAElBtL,EAA0B,QAAnB,EAAA4gC,EAAWl/B,gBAAQ,eAAE1B,KAC5B,MAAQiQ,WAAY4wB,EAAgBp/B,KAAMq/B,EAAU9gC,KAAM+gC,GAAaz1B,GACjE,KAAE7J,EAAI,WAAEwO,GAAe2wB,EAC7B,IAAII,EAAahhC,IAAS+gC,GAAYt/B,IAASq/B,EAI/C,OAHI7wB,IACF+wB,EAAaA,GAAc/wB,IAAe4wB,GAErCG,IAET,CAAC,WAAY,QAET/pB,EAAM,IAAMxN,EAAI,CAAC,WAAY,QAC/Bk3B,GACFD,EAAMn9B,KAAK,CACT+B,GAAI,GAAG2R,KAAO0pB,IACdj+B,KAAM,IACNgT,MAAO,IAAQnU,EAAE,6BACjB2J,OAAQ+L,EACR9L,OAAQw1B,MAKPD,GAMIO,EAAyBx3B,IACpC,MAAMy3B,EAAY,IAAMz3B,EAAI,CAAC,WAAY,SAAU,8BACnD,OAAKy3B,EAIE,CACL57B,GAAI,SAAS47B,EACbx+B,KAAM,IACN0yB,OAAO,EACP1f,MAAOwrB,EACP3b,SAAU,CAAC,IAAM9b,EAAI,CAAC,WAAY,SAClC42B,MAAO,IACPC,OAAQ,IACRh3B,KAAM,GACNi3B,SAAS,EACTY,WAAW,EACXxb,MAAO,CACL6a,QAAS,MAfJ,MAqCEY,EAAa,CAACC,EAAqBC,K,MAC9C,IAAKD,EACH,OAIFA,EAAS9b,SAA4B,QAAjB,EAAA8b,EAAS9b,gBAAQ,eAAE/b,OACpC2E,KAAOmzB,aAAc,EAAdA,EAAgBpgB,KAAMqgB,IAAK,MAAC,OAAU,QAAV,EAAAA,EAAEhc,gBAAQ,eAAErc,SAASiF,OAI3D,MAAMqzB,EAAgBF,EAAepgB,KAAMqgB,GAAMA,EAAEnM,OAASmM,EAAEj8B,KAAO+7B,EAAS/7B,IACzEk8B,EAGHH,EAAS9b,SAASuI,QAASxoB,IACpBk8B,EAAcjc,SAASrc,SAAS5D,IACnCk8B,EAAcjc,SAAShiB,KAAK+B,GAlCb,EAAC+7B,EAAqBG,K,cACpB,QAAlB,EAAAA,EAAcl4B,YAAI,eAAEqB,kBAAgC,QAAb,EAAA02B,EAAS/3B,YAAI,eAAEqB,oBAIpC,QAAlB,EAAA62B,EAAcl4B,YAAI,eAAEqB,kBACvB62B,EAAcl4B,KAAKqB,eAAiB,KAEpB,QAAd,EAAA02B,aAAQ,EAARA,EAAU/3B,YAAI,eAAEqB,iBAClB02B,EAAS/3B,KAAKqB,eAAemjB,QAASjrB,IAC/B2+B,EAAcl4B,KAAKqB,eAAezB,SAASrG,IAC9C2+B,EAAcl4B,KAAKqB,eAAepH,KAAKV,OAyBzC4+B,CAAeJ,EAAUG,KAN3BF,EAAe/9B,KAAK89B,IAWXK,EAAc,CAACC,EAAwBL,KAC7CK,GAAcA,EAAU/3B,QAG7B+3B,EAAU7T,QAASuT,IACjBD,EAAWC,EAAUC,MAIZM,EAAyB,CACpCC,EACAC,EACAC,EAAkD,OAE9CF,aAAQ,EAARA,EAAUnB,QACZoB,EAAWpB,MAAMn9B,QAAQs+B,EAASnB,QAEhCmB,aAAQ,EAARA,EAAUG,SACZF,EAAWE,MAAMz+B,QACZs+B,EAASG,MAAMx4B,OACfy4B,IACEA,EAAE7M,QACF0M,EAAWE,MAAM9gB,KAAMghB,IACtB,GAAID,EAAE38B,KAAO48B,EAAS58B,GACpB,OAAO,EAET,MAAM,SAAExB,GAAam+B,EACrB,OACGn+B,KAAci+B,EAAmB7gB,KAAMihB,GAAaA,EAASr+B,EAAUg+B,QAKlFJ,EACEG,EAASG,MAAMx4B,OAAQy4B,GAAMA,EAAE7M,OAC/B0M,EAAWE,SAYJI,EAAuB,CAClCr4B,EACAs4B,EACAC,EAA0B,MAEnB,IACLA,EAAc5lB,IAAK5R,GACVf,EAAUe,GACbf,EAAUe,GAAcxB,KAAKoT,IAAK6lB,IAChC,MAAMC,EAAUD,EAAI9gC,MAAQ4gC,EAASv3B,GACrC,IACImF,EADAxO,EAAO+gC,EAMX,OAJIA,GAAW,aAAmBA,KAChC/gC,EAAO,aAAiB+gC,GACxBvyB,EAAa,YAAuBuyB,IAE/B,OAAP,QACE/gC,OACAwO,cACGsyB,KAGP,KAKGE,EAA2B9gC,IAC/B,CACL+gC,kBAAmB,CACjB7F,QAAQ,EACRp7B,KAAM,mBACNE,YACAghC,UAAU,GAEZC,YAAa,CACX/F,QAAQ,EACRp7B,KAAM,aACNE,YACAghC,UAAU,GAEZE,WAAY,CACVhG,QAAQ,EACRp7B,KAAM,YACNE,YACAghC,UAAU,GAEZG,KAAM,CACJjG,QAAQ,EACRp7B,KAAM,MACNE,YACAghC,UAAU,GAEZI,KAAM,CACJlG,QAAQ,EACRp7B,KAAM,MACNE,YACAghC,UAAU,GAEZK,SAAU,CACRnG,QAAQ,EACRp7B,KAAM,UACNE,YACAghC,UAAU,GAEZM,aAAc,CACZpG,QAAQ,EACRp7B,KAAM,cACNE,YACAghC,UAAU,GAEZO,SAAU,CACRrG,QAAQ,EACRp7B,KAAM,UACNE,YACAghC,UAAU,GAEZQ,KAAM,CACJtG,QAAQ,EACRp7B,KAAM,+BAA6BA,KACnCE,YACAghC,UAAU,GAEZlN,aAAc,CACZoH,QAAQ,EACRp7B,KAAM,mBAAiBA,KACvBE,YACAghC,UAAU,M,kCCpahB,wVAGYS,EAQAC,EAOAC,EAlBZ,WAGA,SAAYF,GACV,0BACA,qBACA,oBACA,YACA,yBALF,CAAYA,MAAgB,KAQ5B,SAAYC,GACV,4BACA,oBACA,sBACA,kBAJF,CAAYA,MAAoB,KAOhC,SAAYC,GACV,cACA,kBACA,kBACA,cAJF,CAAYA,MAAkB,KAOvB,MAAMC,EAAqD,CAChE,CAACH,EAAiBI,YAAa,wCAC/B,CAACJ,EAAiBK,UAAW,4CAC7B,CAACL,EAAiBM,SAAU,qCAC5B,CAACN,EAAiBO,KAAM,iCACxB,CAACP,EAAiBQ,YAAa,yCAGpBC,EAA8D,CACzE,CAACR,EAAqBS,aAAc,uCACpC,CAACT,EAAqBU,SAAU,qCAChC,CAACV,EAAqBW,UAAW,sCACjC,CAACX,EAAqBY,QAAS,qCAKjC,IAAYC,GAAZ,SAAYA,GACV,kBACA,oBAFF,CAAYA,MAAqB,KAK1B,MAAMC,EAAoD,CAC/Dv7B,OAAQ,GACRw7B,oBAAoB,EACpBlG,YAAa,IAAYmG,QACzBrkC,KAAM,GACNge,OAAQ,SACRsmB,kBAAkB,EAClBC,SAAU,GACVr4B,QAAS,CACPkR,MAAO,GACPY,OAAQ,QACRjS,OAAQ,GACRuP,IAAK,GACLkpB,KAAM,GACNC,YAAY,IAIHC,EAAsB,CACjC,CAAC,IAAYhyB,QACX,kHACF,CAAC,IAAYC,QAAS,sEACtB,CAAC,IAAYE,WAAY,qEAGd8xB,EAAkB,CAC7B,CAAC,IAAYjyB,QACX,uFACF,CAAC,IAAYC,QACX,mGACF,CAAC,IAAYE,WAAY,uEAGd+xB,EAAwB,CAAC,aAAc,gBAAiB,e,kCC/ErE,+MAuBO,MAAMC,EAAoBtjC,GAC/B,WAAa0kB,MAAM,CACjBjmB,KAAM,aAAqBuB,GAC3BujC,QAAS,IACTv7B,YAAa,IACbnI,MAAO,YAAsBG,GAC7BwjC,IAAK,YAAoBxjC,GACzByjC,OAAQ,YAAuBzjC,GAC/B0jC,QAAS,YAAwB1jC,GACjCq/B,WAAY,YAA2Br/B,GACvC2jC,WAAY,YAA2B3jC,GACvC4jC,MAAO,YAAsB5jC,GAC7B6jC,OAAQ,YAAuB7jC,GAC/BoE,MAAO,IACPoE,UAAW,IACXs7B,aAAc,YAAmC9jC,GACjD+jC,IAAK,YAAqC/jC,GAC1C2iB,SAAU,MAGRqhB,EAAY,CAACjqB,EAAakqB,IAE5BlqB,EAAImqB,WAAW,WAAWD,OAC1BlqB,EAAImqB,WAAW,eAAeD,OAC9BlqB,EAAIpS,SAAS,IAAIs8B,MAIRE,EAAiBpqB,GACvB,IAAYgH,KAAKhH,GAIlBiqB,EAAUjqB,EAAK,cACV,IAAY5I,OAEjB6yB,EAAUjqB,EAAK,iBACV,IAAYzI,UAEjB0yB,EAAUjqB,EAAK,cACV,IAAY3I,OAEjB4yB,EAAUjqB,EAAK,cAAgBA,EAAIpS,SAAS,SACvC,IAAY0J,MAGd,IAAYE,OAfV,IAAYuxB,QAkBVsB,EAAuBC,IAClC,GAAI,KAAUtjB,KAAKsjB,GACjB,OAAOA,EAGT,MAAMC,EAAe,IAAYD,GACjC,OAAOA,EAAW/R,MAAM,QAAUgS,EAAahS,MAAM,OACjD,OAAOgS,EACPA,GAGOC,EAAqBxqB,IAChC,IAAK,IAAYgH,KAAKhH,GACpB,OAEF,MAAMtb,EAAOsb,EAAIrS,QAAQ,MAAO,IAAI3J,MAAM,KAAKymC,MAC/C,OAAOJ,EAAoB3lC,K,kCCzF7B,0XA4BYgmC,EAOAC,EAnCZ,iGA4BA,SAAYD,GACV,oDACA,gDACA,kEACA,kDAJF,CAAYA,MAAa,KAOzB,SAAYC,GACV,kBACA,4DAFF,CAAYA,MAAkB,KAKvB,MAAMC,EAAiB,CAC5BC,EAAiBF,EAAmBG,+BACjC,CACH,CAAC,IAAqBC,qBAAsB,CAC1C,CAACL,EAAcM,wBAAyB,IACnCH,EAAH,4FAEF,CAACH,EAAcO,yBAA0B,IACvC,OAAOJ,+FAGX,CAAC,IAAqBK,2BAA4B,CAChD,CAACR,EAAcO,yBAA0B,IACvC,+BAA+BJ,yFAEjC,CAACH,EAAcS,gCAAiC,IAC9C,OAAON,wHAET,CAACH,EAAcU,uBAAwB,IACrC,OAAOP,0GAET,CAACH,EAAcM,wBAAyB,IACtC,mBAAmBH,qGAGvB,CAAC,IAAqBQ,4BAA6B,CACjD,CAACX,EAAcO,yBAA0B,IACvC,+BAA+BJ,wGAEjC,CAACH,EAAcS,gCAAiC,IAC9C,OAAON,qIAET,CAACH,EAAcU,uBAAwB,IACrC,OAAOP,uHAET,CAACH,EAAcM,wBAAyB,IACtC,mBAAmBH,sHAOZS,EAAevvB,IACzBA,EAAI,EAAI,IAAM,IAHW,CAACA,GACrB,IAANA,GAAYA,GAAK,MAASA,EAAI,KAAQ,aAAiBA,GAAGwvB,OAASxvB,EAAEyvB,cAAc,GAE9DC,CAAoBz6B,KAAK06B,IAAI3vB,IACvC4vB,EAAc1Z,GAClB,IAAoB2Z,OAAO3Z,GAEvB4Z,EAAyB,CAACrT,EAA0BsT,EAAiBC,KAChF,MAAM,OAAEC,EAAM,OAAE9nB,GAAWsU,EACrByT,EAAY,IAAM/nB,EAASnI,IAC/B,MAAMmwB,EAAI3gB,OAAOxP,EAAE,IACnB,MAAO,CACLowB,EAAG,IAAIja,KAAK,IAAIA,KAAY,IAAPnW,EAAE,IAAWqwB,SAAS,EAAG,EAAG,EAAG,IACpDF,EAAG3gB,OAAO8gB,MAAMH,GAAK,KAAOA,EAC5BF,YAMEhY,EAAQzI,OAAO,IAAM0gB,EAAW,UAChCK,EAAM/gB,OAAO,IAAM,IAAO0gB,GAAY,MACtCM,EAAOR,EAAOD,EAQpB,OAPA,IAAQ9X,EAAOsY,EAAKC,GAAM/Z,QAAQ,CAACvsB,EAAGqC,KACpC,MAAM6jC,EAAI,IAAIja,KAAKjsB,GACf,IAAMgmC,EAAW,CAAC3jC,EAAG,MAAQ6jC,GAC/BF,EAAUvvB,OAAOpU,EAAG,EAAG,CAAE6jC,IAAGD,EAAG,KAAMF,aAIlCC,GAKIO,EAAqB,CAChC74B,EACA84B,EACAC,K,MAEA,MAAM5U,GAAwB,QAAd,EAAAnkB,aAAQ,EAARA,EAAU3F,YAAI,eAAEwqB,SAAU,GAC1C,OAAOV,aAAO,EAAPA,EAAS1W,IAAKC,I,MACnB,OAAgB,QAAT,EAAAA,aAAC,EAADA,EAAG6C,cAAM,eAAE9C,IAAI,EAAE+qB,EAAGD,M,QACzB,MAAO,CACLC,EAAgB,QAAb,EAAAM,aAAQ,EAARA,EAAWprB,UAAE,QAAI,IAAI6Q,KAAS,IAAJia,GAC7BD,EAAgB,QAAb,EAAAQ,aAAQ,EAARA,EAAWR,UAAE,QAAIS,WAAWT,GAC/BF,OAAQ3qB,aAAC,EAADA,EAAG2qB,OACXY,KAAMT,QAMDU,EAAkBC,IAC7B,MAAMC,EAAU,GAChB,IAAKD,EAAU,OAAOC,EACtB,MAAMC,EAAiB,YAAwB,MACzCC,EAAUj8B,KAAKk8B,MAAMJ,EAAWE,GAChCG,EAAI,IAAIjb,KAAKA,KAAKkb,OAExB,IADAD,EAAEf,SAAS,EAAG,EAAG,EAAG,GACbW,EAAQz+B,OAAS,EAAI2+B,GAC1BF,EAAQ9kC,KAAKklC,EAAEhb,WACfgb,EAAEE,QAAQF,EAAEG,UAAY,GAE1B,OAAOP,EAAQQ,MAAM,EAAGN,IAGbO,EAAc,CAACC,EAAiB1Z,KAC3C,GAAgB,IAAZ0Z,EACF,OAAO,IAAQxnC,EAAE,oCAEnB,IAAIynC,EAAM18B,KAAKk8B,MAAMO,GACjBniB,EAAM,EACNqiB,EAAK,EACLvb,EAAW,GA2Bf,OA1BIsb,GAAO,KACTpiB,EAAMta,KAAKC,MAAMy8B,EAAM,IACvBA,GAAO,IAELpiB,GAAO,KACTqiB,EAAK38B,KAAKC,MAAMqa,EAAM,IACtBA,GAAO,IAELqiB,EAAK,IACPvb,GAAY2B,EACR,IAAQ9tB,EAAE,kCAAmC,CAAEmvB,MAAOuY,IACtD,IAAQ1nC,EAAE,2BAA4B,CAAE0nC,OAC5Cvb,GAAY,KAEV9G,EAAM,IACR8G,GAAY2B,EACR,IAAQ9tB,EAAE,oCAAqC,CAAEmvB,MAAO9J,IACxD,IAAQrlB,EAAE,4BAA6B,CAAEqlB,QAC7C8G,GAAY,KAEVsb,EAAM,IACRtb,GAAY2B,EACR,IAAQ9tB,EAAE,oCAAqC,CAAEmvB,MAAOsY,IACxD,IAAQznC,EAAE,4BAA6B,CAAEynC,SAGxCtb,EAAShV,QAGLwwB,EAAkC,KAAM,CACnD,KAAM,IAAQ3nC,EAAE,0BAChB,KAAM,IAAQA,EAAE,2BAChB,KAAM,IAAQA,EAAE,2BAChB,KAAM,IAAQA,EAAE,4BAChB,KAAM,IAAQA,EAAE,4BAChB,KAAM,IAAQA,EAAE,8BAGL4nC,EAA4B7/B,IACvC,IAAI8/B,EAAgB,EACpB,OAAO,IAAS9/B,EAAM,KAAKoT,IAAK2sB,IAC9B,MAAMC,EAAeD,EAAI7B,EAAI4B,EAE7B,OADAA,GAAiBC,EAAI7B,EACd,OAAP,wBAAY6B,GAAG,CAAE7B,EAAG8B,Q,kCCvMxB,iOAIO,MAAMC,EAAsBC,IACjC,MACOH,EAAKvhB,GAAQ0hB,aAAc,EAAdA,EAAgB3V,MADhB,sBAEpB,MAAO,CACLjM,gBAAiBf,OAAOwiB,IAAQ,GAChCxhB,oBAAqBC,GAAQ,IAC7B2hB,2BAA4B3hB,GAAQ,MAIlC4hB,EAAiC,iBAE1BC,EAAmCC,GAC9CA,EAAG3gC,QAAQygC,EAAgC,IAEhCG,EAAgC,CAC3CD,EACAE,K,MAEA,KAAY,QAAP,EAAAF,EAAGjqC,YAAI,eAAE+b,KAAK,OAAO,KAC1B,MAAM,WAAEzL,EAAU,KAAExO,EAAI,KAAEzB,GAAS4pC,EAAGjqC,KAAK+b,IAC3C,OAAO,YAAmB,OAAkBzL,GAC1CxO,IAAS,IAAaA,MACtBzB,IAAS8pC,EACP9pC,EACA,MAGO+pC,EAAgC,CAC3CC,EACAC,IAEO,IACF,IAAIC,IACLF,aAAiB,EAAjBA,EACIxgC,OAAQogC,MACRK,aAAuB,EAAvBA,EAAyBrgC,QAAS,KAC9BqgC,aAAuB,EAAvBA,EAAyB/gC,SAASygC,EAAgCC,MAGvEltB,IAAKulB,GAAM0H,EAAgC1H,MAKvCkI,EAA8BniB,GACzCA,EAAcoJ,KAAMwY,GAAO,IAAI7nB,OAAO2nB,GAAgCpnB,KAAKsnB,IAEhEQ,EAAgC,CAC3CC,EACA/gC,EAA0B,GAC1BghC,IAEAD,EACG7gC,OAAQi/B,GAAM0B,EAA2B,CAAC1B,KAC1C/rB,IAAKktB,I,QACJ,MAAMW,EAAiBjhC,aAAI,EAAJA,EAAM4X,KAC1BunB,GAAMA,EAAE/mC,SAAS1B,OAAS2pC,EAAgCC,IAE7D,OAAOW,IAA0C,QAAxB,EAAmB,QAAnB,EAAAA,EAAe5qC,YAAI,eAAE+b,WAAG,eAAE1b,QAASsqC,EACxDC,EACA,OAEL/gC,OAAQi/B,KAAQA,I,kCCnErB,+BAYA,MAAM+B,UAAoB,IAKxB,cACEl2B,QALK,KAAAxQ,cAAyC6iB,EAEzC,KAAA7b,kBAAsD6b,EAK3D,YAAepZ,KAAM,CACnBzJ,SAAU,IAAW4X,IACrB5Q,aAAc,MAIlB,cACE,OAAOyC,KAAKzJ,SAGd,YAAYA,GACVyJ,KAAKzJ,SAAWA,EAGlB,kBACE,OAAOyJ,KAAKzC,cAAgB,aAAayC,KAAKzJ,UAGhD,gBAAgBrC,GACd8L,KAAKzC,aAAerJ,EAGtB,SAASuzB,GACP1gB,MAAMm2B,SAASzV,GAEX,aAAcA,IAChBznB,KAAKzJ,SAAWkxB,EAAMlxB,UAEpB,iBAAkBkxB,IACpBznB,KAAKzC,aAAekqB,EAAMlqB,eAKjB,O,ktBC7BR,MAAM4/B,EAAY,CAAEC,OAAQ,OAEtBC,EAA8BrpC,GACzC,WAAa0kB,MAAM,CACjBjmB,KAAM,WAEHkmB,QAAQ,KAAW,CAClB1iB,QAASjC,EACP,+IAEF2mB,oBAAoB,IAErBpW,SAASvQ,EAAE,8BACdqH,OAAQ,WAELsd,QAAQ,IAAa3kB,EAAE,sCACvBuQ,SAASvQ,EAAE,8BACdspC,YAAa,WACb3+B,QAAS,WAENma,KAAK,cAAe,CACnBC,GAAI,IAAYzT,UAChB3E,KAAM,WAAa+X,MAAM,CACvBue,KAAM,WAEHte,QAAQ,IAAwB,CAC/B1iB,QAASjC,EACP,4JAEF2mB,oBAAoB,IAErBpW,SAASvQ,EAAE,kCAGjB8kB,KAAK,CAAC,SAAU,cAAe,UAAW,CACzCC,GAAI,CAACtI,EAAQkgB,EAAat1B,IACxBA,KAAYs1B,IAAgB,IAAYxrB,QAAUsL,IAAW,IAAYtL,QAC3ExE,KAAM,WAAa+X,MAAM,CACvB7I,MAAO,WAAakF,KAAK,gBAAiB,YAAY,WACpD,OAAO/U,KAAKga,OAAOnK,OAAS7P,KAAKga,OAAOujB,aAE1CA,UAAW,WAAaxoB,KAAK,gBAAiB,YAAY,WACxD,OAAO/U,KAAKga,OAAOnK,OAAS7P,KAAKga,OAAOujB,mBAMvCC,EAAwCxpC,GACnD,WAAa0kB,MAAM,CACjB/Z,QAAS,WAENma,KAAK,cAAe,CACnBC,GAAI,IAAYzT,UAChB3E,KAAM,WAAa+X,MAAM,CACvBue,KAAM,WAEHte,QAAQ,KAAW,CAClB1iB,QAASjC,EACP,+IAEF2mB,oBAAoB,IAErBpW,SAASvQ,EAAE,kCAGjB8kB,KAAK,CAAC,SAAU,cAAe,UAAW,CACzCC,GAAI,CAACtI,EAAQkgB,EAAat1B,IACxBA,GACAs1B,KACEA,IAAgB,IAAYxrB,QAAUsL,IAAW,IAAYtL,QACjExE,KAAM,WAAa+X,MAAM,CACvB7I,MAAO,WAAakF,KAAK,gBAAiB,YAAY,WACpD,OAAO/U,KAAKga,OAAOnK,OAAS7P,KAAKga,OAAOujB,aAE1CA,UAAW,WAAaxoB,KAAK,gBAAiB,YAAY,WACxD,OAAO/U,KAAKga,OAAOnK,OAAS7P,KAAKga,OAAOujB,mBAMvCE,EAAwCzpC,GAC5C,WAAa0kB,MAAM,CACxBuS,WAAY,WAAanS,KAAK,CAAC,eAAgB,mBAAoB,CACjEC,GAAI,CAAC2D,EAAcghB,IAAoBhhB,IAAiB,IAAaC,KAAO+gB,EAC5E/8B,KAAM68B,EAAqCxpC,OAK3CgkC,EAAY,CAACjqB,EAAakqB,IAE5BlqB,EAAImqB,WAAW,WAAWD,OAC1BlqB,EAAImqB,WAAW,eAAeD,OAC9BlqB,EAAIpS,SAAS,IAAIs8B,MAIRE,EAAiBpqB,GACvB,IAAYgH,KAAKhH,GAIlBiqB,EAAUjqB,EAAK,cACV,IAAY5I,OAEjB6yB,EAAUjqB,EAAK,iBACV,IAAYzI,UAEjB0yB,EAAUjqB,EAAK,cACV,IAAY3I,OAGd,IAAYG,OAZV,IAAYuxB,QAiDV6G,EAA4B,CACvC1rB,EACA7d,EACAoD,EAAoC,GACpC4lC,IAC6B,OAAD,6B,UAC5B,MAAM,KACJ3qC,EAAI,OACJ4I,EACAsD,SAAS,UAAEi/B,EAAS,OAAEntB,EAAM,MAAEZ,EAAOrR,OAAQwR,EAAa,KAAEinB,IAC1DhlB,EACE4rB,EAAgB,SAAO75B,OAAOgM,GAC9B8tB,EAAkB3F,EAAc98B,GACtC,IAAImD,EACAqR,GAAoB,UAAXY,EACXjS,OAjDsB,EACxBu/B,EACA9G,EACApnB,EACAzb,EACA0pC,EACA9tB,EACAotB,IACG,OAAD,6BACF,MAAMrhC,EAAmB,CACvB2G,WAAY,cAAYA,WACxBxO,KAAM,cAAYA,KAClBC,SAAU,CACR6pC,aAAiBD,EAAH,UACd3pC,aAEFe,KAAM,aAAWmJ,OACjBe,WAAY,OAAF,sBACR,iBAAkBwQ,GACdG,GAAiB,CAAE,iBAAkBA,IACrC8tB,IAAoB,IAAYx4B,WAAa,CAC/C,eAAgB,SAAOtB,OAAO,GAAGizB,KAAQpnB,QAK/C,OAAO,YAAkB,CACvB4X,MAAO,cACP1rB,OACA/G,GAAIZ,EACJszB,YAAa0V,EAASD,EAAY,QAmBnBc,CACbxrC,EACAwkC,EACApnB,EACAzb,EACA0pC,EACA9tB,EACAotB,GAGS,WAAX3sB,GACAmtB,IACe,QAAf,EAAAA,aAAS,EAATA,EAAW7hC,YAAI,eAAG,qBAAsB8hC,UAElC,YAAiB,CACrBpW,MAAO,cACPlxB,SAAUqnC,EACV7hC,KAAM,CAAC,CAAEkrB,GAAI,UAAW1X,KAAM,uBAAwBxa,MAAO,SAAOiP,OAAOgM,QAG/E,MAAMkuB,EAAU,EAAY7iC,GAAQsC,OAC9B4/B,EAAY/+B,GAAUo/B,EACtB7hC,EAAO,CACX7H,KAAM,kBAAgBA,KACtBwO,WAAY,sCACZvO,SAAU,OAAF,QACN1B,OACA2B,aACIoD,GAAU,IAEhBpF,KAAM,OAAF,QACF2b,IAAK1S,GACDkiC,GAAyB,eAAZW,EACb,CAEEC,aAAc,OAAF,sCACL,IAAsBxiC,SAASuiC,GAA8B,GAAnB,CAAEnwB,IAAKmwB,IACtC,kBAAZA,EACA,CACEjH,QAEF,IACAsG,EACA,CACE/+B,OAAQ,CACN/L,KAAyB,QAAnB,EAAA8qC,aAAS,EAATA,EAAWppC,gBAAQ,eAAE1B,KAC3B6D,IAAK,kBAGP8nC,eAAgB,CACd3rC,KAAyB,QAAnB,EAAA8qC,aAAS,EAATA,EAAWppC,gBAAQ,eAAE1B,KAC3B6D,IAAK,mBAGT,KAGR,KAWR,aAPuB,YAAkB,CACvCmxB,MAAO,kBACP1rB,OACA/G,GAAIZ,EACJszB,YAAa0V,EAASD,EAAY,QAMzBkB,EAAsB,CACjCpsB,EACA8lB,EACA3O,IACqB,OAAD,6B,UACpB,MAAM,OACJ/tB,EACAsD,SAAS,OAAE8R,EAAM,MAAEZ,EAAOrR,OAAQwR,EAAejC,IAAK+B,EAAU,UAAE8tB,EAAS,KAAE3G,IAC3EhlB,EACE6rB,EAAkB3F,EAAc98B,GAChCsZ,EAAa,YAActZ,EAAQyiC,GAEzC,IAKIQ,EALAvuB,GAAkB,EAClBqZ,GAAsD,WAAnC,QAAT,EAAA2O,aAAG,EAAHA,EAAKh8B,YAAI,eAAG,+BACxBgU,GAAkB,GAKlBuuB,EADER,IAAoB,IAAYx4B,UAErB,UAAXmL,EACI,SAAOzM,OAAO,GAAGizB,KAAQpnB,KACzB,SAAO7M,OAAsB,QAAf,EAAA46B,aAAS,EAATA,EAAW7hC,YAAI,eAAG,iBAEf,UAAX0U,EAAqBZ,EAAQ,SAAO7M,OAAsB,QAAf,EAAA46B,aAAS,EAATA,EAAW7hC,YAAI,eAAG,mBAU3E,aAPoC4Y,EAAW/E,kBAC7C0uB,EACAxuB,EACAC,EACAC,MAaSuuB,EAA2BxwB,IACtC,IAAK,IAAYgH,KAAKhH,GACpB,OAEF,MAAMtb,EAAOsb,EAAIrS,QAAQ,MAAO,IAAI3J,MAAM,KAAKymC,MAC/C,OAZmCH,EAYP5lC,EAXxB,KAAUsiB,KAAKsjB,GACV,OAAOA,EAET,OAAO,IAAYA,GAJQ,IAACA,GAsHxBmG,EAAyB,CACpCC,EACAzwB,IACoB,OAAD,6B,MACnB,IAAI0wB,EACJ,IACE,MAAOC,SAAgC,YAAoC,CACzElX,MAAO,iBACPC,YAAa,CACX1yB,GAAI,IACJ4pC,cAAe,CACbC,YAAa,CACX,uCAAwC,IAAmBJ,IAAYA,OAK/EC,EAA8C,QAA5B,EAAAC,aAAsB,EAAtBA,EAAwB5iC,YAAI,eAAE6oB,SAChD,MAAOpkB,GACP2T,QAAQ2qB,IAAI,oCAAqCt+B,GAGnD,OAD4Bk+B,eAvCe,CAAO1wB,GAAsC,OAAD,6B,MACvF,IAAI+wB,EAtF6B,CAAC/wB,GAA6B,yEAGvDA,UAAY,sgFAmFMgxB,CAAoBhxB,GAC9C,IACE,MAAM4W,QAAiB,YAA8B,CACnD6C,MAAO,iBACPzyB,GAAI,IACJvC,KAAM,OAEU,QAAd,EAAAmyB,aAAQ,EAARA,EAAU7oB,YAAI,eAAE6oB,YAClBma,EAAsBna,EAAS7oB,KAAK6oB,UAEtC,MAAOpkB,GACP2T,QAAQ2qB,IAAI,oCAAqCt+B,GAGnD,OAAOu+B,KAwB+CE,CAA8BjxB,O,kCCrbtF,+CAEA,MAAMuK,EAAY,SAIL2mB,EAAgClrC,GAC3C,WAAa0kB,MAAM,CACjBymB,cAAe,WACfC,SAAU,YACVC,QAAS,YACTC,SAAU,YACVvjC,KAAM,WAAa+c,KAAK,WAAY,CAClCC,IAAI,EACJpY,KAAM,WAAa+X,MAAM,CACvB6mB,cAAe,WAEZpkB,QAAQnnB,EAAE,yCACVqlB,IAAI,EAAGrlB,EAAE,0DACT6kB,IAfc,WAeC7kB,EAAE,2DACpBwrC,oBAAqB,WAElBrkB,QAAQnnB,EAAE,yCACVqlB,IAAI,EAAGrlB,EAAE,iEACT6kB,IApBc,WAoBC7kB,EAAE,2DACpByrC,iBAAkB,WAEftkB,QAAQnnB,EAAE,yCACVqlB,IAAI,EAAGrlB,EAAE,qEACZ0rC,eAAgB,WAEbvkB,QAAQnnB,EAAE,yCACVqlB,IAAI,EAAGrlB,EAAE,2DACT6kB,IA7Bc,WA6BC7kB,EAAE,2DACpB2rC,iBAAkB,WAEfxkB,QAAQnnB,EAAE,yCACVqlB,IAAI,EAAGrlB,EAAE,qEACT6kB,IAlCc,WAkCC7kB,EAAE,2DACpB4rC,YAAa,WACbC,QAAS,WAAa/mB,KAAK,cAAe,CACxCC,GAAI,UACJpY,KAAM,SAAW,CACf4O,KAAM,WAAaoJ,QAAQJ,EAAW,CACpCtiB,QAASjC,EAAE,sCACX2mB,oBAAoB,IAEtBmlB,KAAM,WAAav7B,SAASvQ,EAAE,4BAGlC+rC,UAAW,WAAajnB,KAAK,cAAe,CAC1CC,GAAI,YACJpY,KAAM,SAAW,CACfm/B,KAAM,WAAav7B,SAASvQ,EAAE,4BAGlCgsC,KAAM,WAAalnB,KAAK,cAAe,CACrCC,GAAI,UACJpY,KAAM,SAAW,CACfs/B,QAAS,UAAYvlB,GAAG,WAAanW,SAASvQ,EAAE,mCAO/CksC,EAAsClsC,GACjD,WAAa0kB,MAAM,CACjBynB,eAAgBjB,EAA6BlrC,GAC7CosC,cAAelB,EAA6BlrC,GAC5CqsC,aAAcnB,EAA6BlrC,M,kCCvE/C,gRAAO,MAAMssC,EAAiB,uCACjBC,EACX,oGACWC,EAA0B,uCAC1BC,EAAqB,gCACrBC,EAAkB,2BAClBC,EAAkB,2BAClBC,EAAW,yBACXC,EAAuB,yC,kCC2EpC,0KAAO,MAAMC,EAA8BtgC,GACvB,8BAAXA,EAAErL,KAGE4rC,EAA8BvgC,GACvB,8BAAXA,EAAErL,KAGE6rC,EAA6BxgC,GACtB,6BAAXA,EAAErL,KAGE8rC,EAA4BzgC,GACrB,4BAAXA,EAAErL,KAGE+rC,EAA+B1gC,GACxB,uBAAXA,EAAErL,M,kCCpGX,sJAEO,MAAMgsC,EAA+B,0BAE/BC,EAAuB,IACvBC,EAAwB,IACxBC,EAAyB,K,maCO/B,MAAMC,EAAsB5sB,GAA+C,OAAD,6B,UAG/E,WAFgCA,EAAW3D,qBAGzC,MAAO,CACLiB,OAAQ,IAIZ,MAAMuvB,QAAwB7sB,EAAW1D,qBAEzC,IACE,MAAMwwB,EAAY,IAAWD,GAAqC,YAAaA,GAA/BA,EAE1CE,EAAyB,QAAf,EAAAD,aAAQ,EAARA,EAAUrpC,aAAK,eAAEspC,QAC3BC,EAA6B,QAAf,EAAAF,aAAQ,EAARA,EAAUrpC,aAAK,eAAEwpC,UAC/BnD,EAAUgD,aAAQ,EAARA,EAAUhD,QAE1B,MAAO,CACLxsB,OAAQ,CACNyvB,UACAjD,UACAkD,cACAE,YAN6B,QAAb,EAAAJ,aAAQ,EAARA,EAAUvf,WAAG,eAAE4f,OASnC,SACA,MAAO,CACL7vB,OAAQ,QAKD8vB,EAA2B,CACtC7W,EACAvW,IACqB,OAAD,6B,QAGpB,UAFgCA,EAAW3D,sBAElBka,EAAqB,CAC5C,MAAM8F,QAAgBrc,EAAW1D,qBAC3BwwB,EAAW,YAAazQ,GAC9B,KAAoB,QAAf,EAAAyQ,aAAQ,EAARA,EAAUrpC,aAAK,eAAEspC,UAAwC,SAAd,QAAf,EAAAD,aAAQ,EAARA,EAAUrpC,aAAK,eAAEspC,SAChD,OAAO,EAGX,OAAO,M,qbChCF,MAAMM,EAeX,YAAmB5tC,GAdX,KAAA6tC,WAAsD,GAEvD,KAAA7tC,eAAoBglB,EAEpB,KAAAqO,MAAe,CAAEgN,MAAO,GAAItB,MAAO,IAEnC,KAAA/J,QAAkB,EAElB,KAAAC,eAAoBjQ,EAEpB,KAAA8oB,kBAA4B,EAE5B,KAAAC,iBAA2C,GAwD3C,KAAAC,uBAAyB,KAC9B,MAAMC,EAAgBrhC,OAAOC,KAAKjB,KAAKiiC,YACvCjiC,KAAKmiC,iBAAmBE,EAAcnhC,OAAO,CAACtL,EAAKU,KACjD,GAAI0J,KAAKiiC,WAAW3rC,GAAKkG,UAAW,CAClC,MAAM8lC,EAAUtiC,KAAKiiC,WAAW3rC,GAAKkG,UAAUwD,KAAK5L,WACpD4M,OAAOC,KAAKqhC,GAAS/hB,QAASgiB,IACvB3sC,EAAI2sC,KACP3sC,EAAI2sC,GAAUD,EAAQC,MAI5B,OAAO3sC,GACN,YAAwBoK,KAAK5L,aAG3B,KAAAouC,gBAAkB,CAACzqC,EAAY0qC,KACpCziC,KAAKiiC,WAAWlqC,GAAM,OAAH,wBAASiI,KAAKiiC,WAAWlqC,IAAO,IAAQ0qC,GAC3DziC,KAAK0iC,yBACL1iC,KAAKoiC,0BAGA,KAAAvN,qBAAwBr4B,IAC7B,MAAM8lC,EAAUtiC,KAAKmiC,iBACfrN,EAAW9zB,OAAOC,KAAKqhC,GAASphC,OAAO,CAACtL,EAAKU,KACjDV,EAAIU,GAAOgsC,EAAQhsC,GAAKpC,KACjB0B,GACN,IACH,OAAO,YAAqB4G,EAAWs4B,EAAU90B,KAAK2iC,eAwCjD,KAAAC,mBAA4BpmC,GAAqD,EAAD,gCACrF,MAAMqmC,EAAuB,CAC3BpO,MAAO,GACPtB,MAAO,IAEH2P,EAAU9iC,KAAK+iC,iBAErB,KAAKD,aAAO,EAAPA,EAASzmC,QACZ,OAAOW,QAAQyV,QAAQowB,GAGzB,MAAMG,EAAYhjC,KAAKw0B,mBACjByO,EAAoBjjC,KAAK60B,qBAAqBr4B,GAC9C0mC,EAAWJ,EAAQ3zB,IAAKg0B,IAC5B,IACE,OAAOA,EAAOnjC,KAAK5L,UAAWoI,EAAWymC,GACzC,MAAOziC,GAGP,OADA2T,QAAQ/d,MAAM,2CAA4CoK,GACnD,QAiBX,aAbMxD,QAAQS,IAAIylC,GAAUviC,KAAMspB,IAChCA,EAAO1J,QAASkH,IACd,GAAIA,EACF,IACE,YAAuBA,EAAOob,EAAeG,GAC7C,MAAOxiC,GAEP2T,QAAQ/d,MAAM,2CAA4CoK,QAM3DxD,QAAQyV,QAAQowB,MAGlB,KAAAO,eAAiB,CAAC3b,EAAcjrB,KACrCwD,KAAKqjC,qBAAqB9iB,QAAS+iB,IACjC,IACEA,EAAW7b,EAAOjrB,GAClB,MAAOgE,GAEP2T,QAAQ/d,MAAM,iDAAkDoK,OArKpER,KAAK5L,UAAYA,EAEjB,YAAe4L,KAAM,CACnB5L,UAAW,IACXqzB,MAAO,IAAWtZ,IAClBib,OAAQ,IACRC,UAAW,IACX6Y,iBAAkB,IAClBC,iBAAkB,IAAWh0B,IAC7Bo1B,aAAc,MAMV,yBACN,MAAMlB,EAAgBrhC,OAAOC,KAAKjB,KAAKiiC,YACjCuB,EAAOxjC,KAAKkiC,iBAClBliC,KAAKkiC,iBACHG,EAAchmC,OAAS,GACvBgmC,EAAcoB,MACXntC,KACG0J,KAAKiiC,WAAW3rC,GAAKotC,mBACrB1jC,KAAKiiC,WAAW3rC,GAAKqtC,qBACrB3jC,KAAKiiC,WAAW3rC,GAAKstC,sBAExBJ,GAAQxjC,KAAKkiC,kBAAoBliC,KAAK6jC,oBACzC7jC,KAAK6jC,mBAAmB7jC,MAIrB,gBACL,OAAOA,KAAKiiC,WAGP,aAAalqC,GAClB,OAAOiI,KAAKiiC,WAAWlqC,GAGzB,mBACE,MAAM4qC,EAAe,IAAI,KAUzB,OATA3hC,OAAOC,KAAKjB,KAAKiiC,YAAY1hB,QAASjqB,IAChC0J,KAAKiiC,WAAW3rC,GAAKqsC,cACvB3iC,KAAKiiC,WAAW3rC,GAAKqsC,aAAapiB,QAASujB,IACpCnB,EAAahnC,SAASmoC,IACzBnB,EAAa3sC,KAAK8tC,OAKnBnB,EAiCT,sBACE,OAAO3hC,OAAOC,KAAKjB,KAAKiiC,YAAYtvC,KAClC,CAACoxC,EAAIC,IAAOhkC,KAAKiiC,WAAW8B,GAAIxvB,SAAWvU,KAAKiiC,WAAW+B,GAAIzvB,UAInE,uBACE,OAAOvU,KAAKikC,gBAAgB/iC,OAAO,CAACtL,EAAKU,KACnC0J,KAAKiiC,WAAW3rC,GAAKotC,iBACvB9tC,EAAII,KAAKgK,KAAKiiC,WAAW3rC,GAAKotC,iBAEzB9tC,GACN,IAGL,yBACE,OAAOoK,KAAKikC,gBAAgB/iC,OAAO,CAACtL,EAAKU,KACnC0J,KAAKiiC,WAAW3rC,GAAKqtC,mBACvB/tC,EAAII,KAAKgK,KAAKiiC,WAAW3rC,GAAKqtC,mBAEzB/tC,GACN,IAGL,2BACE,OAAOoK,KAAKikC,gBAAgB/iC,OAAO,CAACtL,EAAKU,KACnC0J,KAAKiiC,WAAW3rC,GAAKstC,qBACvBhuC,EAAII,KAAKgK,KAAKiiC,WAAW3rC,GAAKstC,qBAEzBhuC,GACN,IAGL,mB,UACE,OAA4C,KAAX,QAAzB,EAAiB,QAAjB,EAAU,QAAV,EAAAoK,KAAKynB,aAAK,eAAEgN,aAAK,eAAEp4B,cAAM,QAAI,IAsDlC,MAAM6nC,EAAe,wBAA+B,O,kCCtN3D,wBA6BA,MAAMC,EAAkB,CAAC9J,EAAiB,YAAU+J,KAAMjvC,EAAe,KACvE,GAAGklC,KAAOllC,IAEZ,MAAMkvC,UAA2D,cAkC/D,cACEt9B,QAjCM,KAAAu9B,QAAsC,CAC5C,CAACH,KAAoB,IAAI,eAAankC,OAGhC,KAAAukC,WAAa,IAAI,aAEjB,KAAAC,uBAAwB,EAExB,KAAAC,YAAa,EAEb,KAAAC,kBAA2B,KAE3B,KAAAC,SAAW,IAAI,QAUf,KAAA9c,OAAQ,EAER,KAAA+L,WAAY,EAEZ,KAAAgR,cAAgB,gBAAcC,OAE9B,KAAAnsB,WAA+BU,EAE/B,KAAAzjB,YAAiCyjB,EAKvC,YAkBEpZ,KAAM,CACNskC,QAAS,IAAWQ,QACpBP,WAAY,IAAWp2B,IACvBq2B,sBAAuB,IACvBG,SAAU,IAAWx2B,IACrBsmB,MAAO,IACP5M,MAAO,IACP+L,UAAW,IACXgR,cAAe,IACflsB,MAAO,IACP/iB,OAAQ,IACRovC,YAAa,IACbC,YAAa,IACbC,YAAa,IACbC,cAAe,IACfC,UAAW,IACXC,YAAa,MAvDjB,YACE,OAAIplC,KAAKqlC,cACA,GAGFrlC,KAAKslC,cAAcrpC,OAAO,UAsDnC,kBACE,MAAM+b,EAAWhY,KAAKslC,cACnBrpC,OAAO,UACPA,OAAQy4B,GAAMA,EAAE6Q,aACnB,IAAKvtB,EAAS3b,OACZ,OAAO2D,KAAKwlC,oBAGd,IAAIC,EACJztB,EAASuI,QAAS3f,IAChB,GAAI,iBAAOA,GAAI,CACb,MAAM,QAAEqyB,GAAYryB,EAAE8kC,WAChB7yC,EAAI+N,EAAE+kC,aAEP/kC,EAAEglC,WAAa3S,GAClBpgC,EAAEogC,QAAQryB,EAAE8kC,WAAsBzS,SAE/BwS,EAGHA,EAAKI,MAAMhzC,GAFX4yC,EAAO5yC,EAAEizC,WAOVL,IACHA,EAAO,IAAI,QAGb,MAAM,QAAExS,GAAYjzB,KAAK0lC,WAEzB,OAAOD,EAAKxS,QAAQA,GAGtB,kBACE,OAAOjzB,KAAK+lC,WACTC,WACA/pC,OAAQuE,GAAMA,EAAExC,cAAgBgC,MAGrC,kBACE,OAAOA,KAAK+lC,WACTC,WACA/pC,OAAQuE,GAAMA,EAAEvC,cAAgB+B,MAGrC,cACE,OAAIA,KAAKqlC,cACAt+B,MAAMu+B,cAAcrpC,OAAO,UAE7B8K,MAAMu+B,cAIf,qBACE,OAAOv+B,MAAMu+B,cAAcpkC,OAAO,CAAC+kC,EAAOC,KACpC,iBAAOA,IACTD,EAAMjwC,KAAKkwC,EAASN,UAAYM,EAASC,qBAAuBD,GAE3DD,GACN,IAGL,UACE,OAAO,YAAUvpC,KAGX,oBACN,MAAM,SAAEioC,EAAQ,WAAEJ,GAAevkC,KACjC,OAAO,IAAI,OAAK2kC,EAASzK,EAAGyK,EAAS1K,EAAGsK,EAAWzR,MAAOyR,EAAWxR,QAGvE,YACE,OAAO/yB,KAAK6nB,QAAU7nB,KAAK4zB,UAAY5zB,KAAK+kC,YAAc/kC,KAAKwlC,oBAGjE,UAAUY,GACR,MAAM,MAAEtT,EAAK,OAAEC,GAAW/yB,KAAKukC,WAC3B6B,EAAOtT,QAAUA,GAASsT,EAAOrT,SAAWA,IAC9C/yB,KAAKukC,WAAa,IAAI,aAAW6B,EAAOtT,MAAOsT,EAAOrT,SAExD,MAAM,EAAEmH,EAAC,EAAED,GAAMj6B,KAAK2kC,SAClByB,EAAOlM,IAAMA,GAAKkM,EAAOnM,IAAMA,GACjCj6B,KAAKolC,YAAY,IAAI,QAAMgB,EAAOlM,EAAGkM,EAAOnM,IAIhD,cACE,OAAIj6B,KAAK4lC,WAAa5lC,KAAKslC,cAAcjpC,SAAW2D,KAAK4zB,UAChD5zB,KAAK2lC,YAAYU,YAEnBrmC,KAAK2kC,SAGd,wBAAwB2B,EAAcC,GACpC,MAAMC,EAAUF,EAAMpM,EAAIqM,EAAarM,EACjCuM,EAAUH,EAAMrM,EAAIsM,EAAatM,EACvCj6B,KAAKslC,cAAc/kB,QAASmmB,IAC1B,GAAI,iBAAOA,GAAQ,CACjB,MAAMhqC,EAAOgqC,EACP/B,EAAWjoC,EAAKiqC,cAChBC,EAAc,IAAI,QAAMjC,EAASzK,EAAIsM,EAAS7B,EAAS1K,EAAIwM,GACjE/pC,EAAK0oC,YAAYwB,MAKvB,YAAYN,GACV,GAAItmC,KAAK4lC,WAAa5lC,KAAKslC,cAAcjpC,SAAW2D,KAAK4zB,UAAzD,CACE,MAAM2S,EAAevmC,KAAK2lC,YAAYU,YACtCrmC,KAAK6mC,wBAAwBP,EAAOC,OAFtC,CAKAvmC,KAAK2kC,SAAW2B,EAChBtmC,KAAKykC,YAAa,EAClB,IACEzkC,KAAK8mC,gBAAgBC,UAAU,wBAAuB,CAAErqC,KAAMsD,OAE9D,MAAOQ,MAGX,eACE,OAAOR,KAAKykC,WAGd,gBACE,OAAOzkC,KAAKukC,WAGd,cAAcA,GACZvkC,KAAKukC,WAAaA,EAClBvkC,KAAKwkC,uBAAwB,EAG/B,0BACE,IAAKxkC,KAAKwkC,uBAAyBxkC,KAAK4lC,UAAW,CACjD,MAAMnR,EAAQz0B,KAAKslC,cAAcrpC,OAAO,UACxC,GAAqB,IAAjBw4B,EAAMp4B,OACR,OAAO2D,KAAKwkC,sBAEC/P,EAAMgP,MAAO7iC,GAAMA,EAAEomC,6BAElChnC,KAAKwkC,uBAAwB,GAGjC,OAAOxkC,KAAKwkC,sBAGd,UAAUnK,EAAiBllC,GACzB,IAAI8xC,EAASjnC,KAAKskC,QAAQH,EAAgB9J,EAAKllC,IAU/C,OATK8xC,GAAU9xC,IACb8xC,EAASjnC,KAAKskC,QAAQH,EAAgB9J,KAEnC4M,GAAW5M,IAAQ,YAAU18B,QAAU08B,IAAQ,YAAUz8B,SAC5DqpC,EAASjnC,KAAKskC,QAAQH,EAAgB,YAAUC,KAAMjvC,KACjD8xC,GAAU9xC,IACb8xC,EAASjnC,KAAKskC,QAAQH,EAAgB,YAAUC,SAG7C6C,EAGT,UAAUA,EAAgB5M,EAAiBllC,GACzC,MAAMmB,EAAM6tC,EAAgB9J,EAAKllC,GAC7B8xC,EACFjnC,KAAKskC,QAAQhuC,GAAO2wC,SAEbjnC,KAAKskC,QAAQhuC,GAIxB,WACE,OAAO0J,KAAKy0B,MAGd,UACE,OAAOz0B,KAAK6nB,MAGd,SAASA,GACP7nB,KAAK6nB,MAAQA,EAGf,cACE,OAAO7nB,KAAK4zB,UAGd,aAAaA,GACX,GAAIA,IAAc5zB,KAAK4zB,UAAW,CAKhC,MAAMsT,EAAalnC,KAAK2lC,YAAYU,aAC/BzS,GAAa5zB,KAAK0kC,mBACrB1kC,KAAK6mC,wBAAwBK,EAAYlnC,KAAK0kC,mBAC9C1kC,KAAK0kC,kBAAoB,KACzB1kC,KAAK4zB,UAAYA,IAEjB5zB,KAAK0kC,kBAAoB9Q,EAAYsT,EAAa,KAClDlnC,KAAK4zB,UAAYA,EACjB5zB,KAAKmlC,UAAUnlC,KAAK2lC,YAAYwB,UAAUD,EAAWhN,EAAGgN,EAAWjN,KAErEj6B,KAAK8mC,gBAAgBC,UAAU,6BAA4B,CAAErqC,KAAMsD,QAIvE,mBACE,OAAOA,KAAK4kC,cAGd,iBAAiBD,GACf3kC,KAAK4kC,cAAgBD,EAGvB,eACE,OAAO3kC,KAAK0Y,QAAU1Y,KAAK6nB,MAAQ,YAAU4d,KAAO,YAAU2B,SAGhE,aAAa1uB,GACX1Y,KAAK0Y,MAAQA,EAGf,gBACE,OAAO1Y,KAAKrK,QAAU,aAAW6rB,QAGnC,cAAc7rB,GACZqK,KAAKrK,OAASA,EAGhB,iBACE,OAAOqK,KAAKglC,YAGd,iBACE,OAAOhlC,KAAKilC,YAGd,YACE,OAAOl+B,MAAMw+B,aAAevlC,KAAKgnC,0BAGnC,SAASvf,GAGP,IAAIyT,EACAjX,EAHJld,MAAMm2B,SAASzV,GAKX,UAAWA,GAAwB,MAAfA,EAAMqL,OAAiBrL,EAAMqL,QAAU9yB,KAAKukC,WAAWzR,QACxEoI,IACHA,EAAIl7B,KAAKukC,WAAWuB,SAEtB5K,EAAEpI,MAAQrL,EAAMqL,OAEd,WAAYrL,GAAyB,MAAhBA,EAAMsL,QAAkBtL,EAAMsL,SAAW/yB,KAAKukC,WAAWxR,SAC3EmI,IACHA,EAAIl7B,KAAKukC,WAAWuB,SAEtB5K,EAAEnI,OAAStL,EAAMsL,QAEfmI,GACFl7B,KAAKklC,cAAchK,GAGjB,MAAOzT,GAAoB,MAAXA,EAAMyS,GAAazS,EAAMyS,IAAMl6B,KAAK2kC,SAASzK,IAC1DjW,IACHA,EAAIjkB,KAAK2kC,SAASmB,SAEpB7hB,EAAEiW,EAAIzS,EAAMyS,GAEV,MAAOzS,GAAoB,MAAXA,EAAMwS,GAAaxS,EAAMwS,IAAMj6B,KAAK2kC,SAAS1K,IAC1DhW,IACHA,EAAIjkB,KAAK2kC,SAASmB,SAEpB7hB,EAAEgW,EAAIxS,EAAMwS,GAEVhW,GACFjkB,KAAKolC,YAAYnhB,GAGf,UAAWwD,GACbznB,KAAKqnC,WAAW5f,EAAMI,OAEpB,kBAAmBJ,IACrBznB,KAAK4kC,cAAgBnd,EAAMmd,eAEzB,UAAWnd,IACbznB,KAAK0Y,MAAQ+O,EAAM/O,OAEjB,WAAY+O,IACdznB,KAAKrK,OAAS8xB,EAAM9xB,QAElB,cAAe8xB,GACjBznB,KAAKsnC,eAAe7f,EAAMmM,WAI9B,UACE,OAAO,OAAP,wBACK7sB,MAAMwgC,WAAS,CAClBrN,EAAGl6B,KAAKwnC,eAAiBxnC,KAAK2mC,cAAczM,OAAI9gB,EAChD6gB,EAAGj6B,KAAKwnC,eAAiBxnC,KAAK2mC,cAAc1M,OAAI7gB,EAChD0Z,MAAO9yB,KAAKgnC,0BAA4BhnC,KAAKynC,gBAAgB3U,WAAQ1Z,EACrE2Z,OAAQ/yB,KAAKgnC,0BAA4BhnC,KAAKynC,gBAAgB1U,YAAS3Z,EACvEwa,UAAW5zB,KAAKqlC,cAChBxd,MAAO7nB,KAAK4lC,UACZhB,cAAe5kC,KAAK4kC,cACpBlsB,MAAO1Y,KAAK0Y,MACZ/iB,OAAQqK,KAAKrK,SAIjB,kBAAkB3B,GAChB,IAAKgM,KAAK6nB,OAAS7nB,KAAKqlC,cAAe,CACrC,MAAM,EAAEnL,EAAC,EAAED,GAAMj6B,KAAK2mC,cACtB3yC,EAAE0zC,UAAUxN,EAAGD,IAInB,oBAAoBjmC,GAClB,IAAKgM,KAAK6nB,OAAS7nB,KAAKqlC,cAAe,CACrC,MAAM,EAAEnL,EAAC,EAAED,GAAMj6B,KAAK2mC,cACtB3yC,EAAE0zC,WAAWxN,GAAID,KAKR,O,kCCnbf,8CAKO,MAAM0N,EAAqB,IACzB,sBAAa3gC,GAAqBA,EAAM4gC,GAAGC,MAAM,CAAC,WAAY,c,kCCLvE,6CAiBO,MAAMC,EAAoB,CAACC,EAA2BC,KAC3D,MAAMC,EAAcD,EAAQE,QAAUF,EAAQE,QAAQ3S,KAAOyS,EAAQzS,KACrE,IAAI4S,EAAa,EACbC,EAAa,EACjB,MAAMC,EAAc,GACdC,EAAW,GAmBjB,OAlBIL,aAAW,EAAXA,EAAa5rC,SACf4rC,EAAY1nB,QAAQ,EAAGpsB,UAAY1B,Y,QACjC,MAAM81C,EAAuB,QAAf,EAAAR,aAAO,EAAPA,EAASrsB,cAAM,eAAGjpB,GAChC,GAAI6mB,OAAOkvB,SAASD,GAAQ,CAC1BJ,GAAcI,EACd,MAAME,EAAoB,aAAiBF,GAApB,OACvBF,EAAYryC,KAAK,CAAEvD,OAAMsC,MAAOwzC,EAAOE,mBAGzC,MAAMC,EAAoB,QAAZ,EAAAX,aAAO,EAAPA,EAAS1sB,WAAG,eAAG5oB,GAC7B,GAAI6mB,OAAOkvB,SAASE,GAAQ,CAC1BN,GAAcM,EACdJ,EAAS71C,GAAW,aAAYi2C,GAAf,SACjB,MAAMD,EAAoB,aAAYC,GAAf,SACvBJ,EAAStyC,KAAK,CAAEvD,OAAMsC,MAAO2zC,EAAOD,sBAInC,CAAEN,aAAYC,aAAYC,cAAaC,c,kCC1ChD,wZAAO,MAAMK,EAA0B,qBAC1BC,EAAkC,6BAClCC,EAAoC,+BACpCC,EAAsB,YACtBC,EAAyB,gCACzBC,EAAiC,wCACjCC,EAA0B,iCAC1BC,EAAmD,oCACnDC,EAA8B,+BAC9BC,EAA2B,gCAC3BC,EAAqC,0BACrCC,EAA0C,sC,kCCTvD,gDAEO,MAAMC,EAAmB,CAC9BC,EACApW,EACAqW,EAA0B,OAEnB,YACL,YAAYD,GACZ,YAAYpW,GACZqW,EAAoB,YAAYA,GAAqB,O,kCCZzD,+EAWO,MAAMC,EAAwB5hB,GAAmB6hB,IACtD,MAAMC,EAAuCzyC,IAC3C,MAAM2yB,EAAc,YAAY3yB,EAAM0yC,SAChC1gB,EAAgB,aAAS,aAAaW,IACtCggB,EAAa,aAAgB,CACjCjiB,MAAOsB,EAAcpM,SACrB+K,OACAvxB,SAAU4yB,EAAclM,OACxBxqB,KAAMq3B,EAAY31B,SAAS1B,KAC3B2B,UAAW01B,EAAY31B,SAASC,YAElC,OAAO,gBAACu1C,EAAgB,iBAAMxyC,EAAa,CAAE4yC,QAASD,MAKxD,OAHAF,EAAU/yC,YAAc,wBACtB8yC,EAAiB9yC,aAAe8yC,EAAiBl3C,QAE5C,YAASm3C,K,kCC1BlB,uoBAuCO,MAAMI,EAAoB,CAAC,yBAA0B,4BAE/CC,EAAiB33C,IAAO,QAAC,OAA4B,QAA5B,EAAgB,QAAhB,EAAAA,aAAG,EAAHA,EAAK+yB,mBAAW,eAAE6kB,kBAAU,QAAI,IACzDC,EAAgB73C,IAAO,QAAC,OAA2B,QAA3B,EAAgB,QAAhB,EAAAA,aAAG,EAAHA,EAAK+yB,mBAAW,eAAE+kB,iBAAS,QAAI,IACvDC,EAAuB/3C,IAAO,QAAC,OAAkC,QAAlC,EAAgB,QAAhB,EAAAA,aAAG,EAAHA,EAAK+yB,mBAAW,eAAEilB,wBAAgB,QAAI,IA8BrEC,EAAYC,I,gBAIvB,MA9BoB,CAACC,GACd,IACLA,EACA,CAAClkB,EAAyBxxB,EAAOuB,KAC/B,MAAMo0C,EAAQp0C,EAAIvE,MAAM,KACH,IAAjB24C,EAAMruC,QACRquC,EAAM10C,KAAK,OAGb,MAAMgmB,EAAgB2uB,SAASD,EAAM,GAAI,IAWzC,OAVI,IAAW1uB,GACbuK,EAAOvwB,KAAK,CACVgmB,gBACA4uB,SAAUF,EAAM,GAAGG,gBAIrB12B,QAAQC,KAAK,iCAAkC9d,GAG1CiwB,GAET,IAQKukB,EAF+C,QAApD,EAA4C,QAA5C,EAAuB,QAAvB,EAAAN,aAAgB,EAAhBA,EAAkB32C,aAAK,eAAEk3C,2BAAmB,eAAEC,cAAM,eAAEC,gBACO,QAA7D,EAA4C,QAA5C,EAAuB,QAAvB,EAAAT,aAAgB,EAAhBA,EAAkB32C,aAAK,eAAEk3C,2BAAmB,eAAEG,uBAAe,eAAED,gBAKtDE,EAAgBrL,GAC3B,GAAGA,EAAK9jB,iBAAiB8jB,EAAK8K,WAAWQ,cAE9BC,EAAgB54C,GACpBA,EAAKiJ,QAAQ,gBAAiB,CAAC4vC,EAAOC,EAAMC,KACzCD,GAAQ,KAAOC,EAAOX,eAIrBY,EACXC,IAEaxhC,MAAMsF,QAAQk8B,GAAgBA,EAAe,CAACA,IAC1BzvC,OAAQhK,GAAgB,oBAAUA,IAExCiP,OAAO,CAACyqC,EAAwC15C,K,UACzE,MAAMI,EAAO,wCAA8BJ,GACrC25C,EAAY,kCAAwB35C,IACpC,KAAEQ,GAASR,EAAYkC,SACvB0C,EAAgD,QAAlC,EAAqB,QAArB,EAAA5E,aAAW,EAAXA,EAAakC,gBAAQ,eAAEkxB,mBAAW,eAAG,6BACnDwmB,EAAoC,QAAtB,EAAAD,aAAS,EAATA,EAAWvmB,mBAAW,eAAEwmB,YACtCj1C,EAAuB3E,EAAYkC,SAASC,UAC5CC,EAAQwC,GAAeA,EAAYwF,OAAS,GAAKxF,EAAcw0C,EAAa54C,GAC5Eq5C,EAAY,YAAmBF,GAC/BG,EAAU,YAAqBD,GAarC,OAXAH,EAAcl5C,GAAQ,CACpB6C,IAAKrD,EACLQ,OACAoE,cACAg1C,cACAx3C,QACA03C,UACA15C,OACAu5C,YACAh1C,wBAEK+0C,GACN,IAGQK,EAA4B,CACvCC,EACAC,EACAC,K,QAEA,MAAMC,EAAW,IAAOH,EAAW,CAAEx5C,KAAMy5C,IAG3C,MAAO,CAACE,EAFgE,QAApD,EAAqB,QAArB,EAAAA,aAAQ,EAARA,EAAU/mB,mBAAW,eAAG,oCAA4B,QAAI8mB,IAKjEE,EAAoB55C,IAC/B,IAAKA,EACH,OAEF,MAAM65C,EAAoB,IAAO75C,EAAKV,MAAM,MAC5C,OAAO,IAAQu6C,EAAUv6C,MAAM,gBAGjC,IAAYw6C,EAIAC,GAJZ,SAAYD,GACV,sBACA,sBAFF,CAAYA,MAAY,KAIxB,SAAYC,GACV,wBADF,CAAYA,MAAsB,KAG3B,MAAMC,EAAqBz4C,IACzB,CACL04C,SAAU,CACR33C,MAAOw3C,EAAaG,SACpBvkC,MAAOnU,EAAE,iDAEX24C,SAAU,CACR53C,MAAOw3C,EAAaI,SACpBxkC,MAAOnU,EAAE,yDAuBF44C,EAAsB36C,IACdA,IAAgB,IAAUA,GAnBlB,CAACA,GACrB,IAAUA,EAAY0D,OAAOtD,OAASJ,EAAY0D,OAAOtD,KAAKgK,OACjEpK,EAAY0D,OAAOtD,KAAKM,KAAK,EAAGL,IAAKM,IAAON,IAAKO,MAC/C,MAAMC,EAAK,SAAcF,GACnBG,EAAK,SAAcF,GACzB,OAAKC,GAAOC,EAGPD,EAGAC,EAGE,WAAgBD,EAAIC,IAFjB,EAHD,EAHAH,EAAEI,cAAcH,KAU3B,GAGwDg6C,CAAc56C,GAAe,IACvEiP,OAAO,CAAC7O,GAAQC,UAChCD,EAAKC,GAAOA,EACLD,GACN,IAGQy6C,EAAqB,IACzB,CACL,CACExd,QAAQ,EACRp7B,KAAM,eAAaA,KACnBq7B,KAAM,eAAax3B,KAKZg1C,EAA0B34C,IACrC,MAAMmC,EAAW,GASjB,OARInC,GACFmC,EAASP,KAAK,CACZs5B,QAAQ,EACRp7B,KAAM,mBAAiBA,KACvBq7B,KAAM,mBAAiBx3B,GACvB3D,cAGGmC,I,kCC9MT,09BAAO,MAAMy2C,EAA6B,GAE7BC,EAAsB,EACtBC,EAA0B,EAC1BC,EAAgC,EAChCC,EAA2B,EAE3BC,EAAa,IACbC,EAAc,GACdC,EAAuB,GACvBC,EAAgC,GAEhCC,EAA+B,GAC/BC,EAAwB,GACxBC,EAAgC,GAChCC,EAA0B,GAE1BC,EAAsB,GACtBC,EAAe,GACfC,EAA0B,GAC1BC,EAAsB,GACtBC,EAAiC,GACjCC,EAAiB,GACjBC,EAAkB,IAClBC,EAA2B,GAExC,IAAYC,EAaAC,EAIAC,EAOAC,GAxBZ,SAAYH,GACV,mBACA,iCACA,uBACA,yBACA,6BACA,yBACA,6CACA,8BACA,8CACA,gCACA,cAXF,CAAYA,MAAQ,KAapB,SAAYC,GACV,kCACA,kBAFF,CAAYA,MAAU,KAItB,SAAYC,GACV,gCACA,8CACA,8BACA,4CAJF,CAAYA,MAAc,KAO1B,SAAYC,GAMV,wBAOA,wBAOA,6BApBF,CAAYA,MAAgB,KAuB5B,MAAMC,EAAuC,CAC3CC,QAzEsC,GA0EtCC,QAAS3B,EACT4B,QAAS,GACTC,OAAQ,eACRC,QAAS,KACTC,QAAS,GACTC,QAAS,IAEEC,EAAkB,iBAC1BR,GAEQS,EAAyB,+BACjCD,GAAkB,CACrBN,QAAS3B,EAA6BY,IAE3BuB,EAAmB,+BAC3BV,GAAkB,CACrBE,QAAS3B,EAAuD,EAA1BE,EACtCwB,QA3FsC,GA2FFxB,EACpC6B,QAASN,EAAmBM,QAAoC,EAA1B7B,EACtC8B,QAASP,EAAmBO,QAAoC,EAA1B9B,IAG3BkC,EAA0B,+BAClCD,GAAmB,CACtBR,QAAS3B,EAA6BY,EAAoD,EAA1BV,IAGlE,IAAYmC,GAAZ,SAAYA,GACV,2BADF,CAAYA,MAAU,M,kCCxGtB,iFAOO,MAAMC,EAAkB/4C,IAC7B,MAAMwxC,EAAU,eACV,QAAEC,EAAO,OAAE5e,GAAW,aAAe7yB,EAAUA,EAASrC,KAAMqC,EAASpC,SAASC,WAQtF,OAPoB,UAAc,IAC5B,IAAU2zC,KAAa3e,EAClB,KAEF,YAAkB2e,EAASC,GACjC,CAAC5e,EAAQ2e,EAASC,M,kCCfvB,+EAOO,MAAMuH,EAAoBxxC,GAIxB,YAAa,CAClB1J,MACE,gCACE,gBAAC,KAA6B,CAACJ,UAAU,oBAAqB,IAC9D,gBAAC,QAAK,CAACe,GAAG,YAAU,sBAGxBw6C,WARA,wJAUAC,WAAY,kBACZC,cAAc,EACdC,UAAW,IACF,YAAiC5xC,GAAM8kB,MAAOnf,IACnDA,GAAO,YAAW,CAAEtN,MAAOsN,EAAIzN,e,kCCxBvC,uEAMO,MAAM25C,EAAkB,CAAClzC,EAAYmzC,KAC1C,MAAMC,EAAcpzC,EAAKqzC,cAAgBrzC,EAAKqpC,WAAcrpC,EAAKqzC,iBAAuB32B,EACxF,GAAI02B,IAAgBD,EAClB,OAAO7yC,QAAQC,SAGjB,GAAI6yC,EAAa,CAGf,MAAME,EAAWH,EACb,+BACA,kDACEI,EAAYvzC,EAAKwzC,WACjBC,EAAcL,EAAYI,WAC1BE,EAAcP,aAAW,EAAXA,EAAaK,WAC3Bj6C,EAAU45C,EACd,gBAAC,QAAK,CAAC76C,GAAG,Y,iCACsB,8BAAS,CAAEi7C,c,SAA4B,CAAEE,e,MAAkB,IACxF,CAAEC,e,KAGL,gBAAC,QAAK,CAACp7C,GAAG,Y,mCACwB,8BAAS,CAAEi7C,c,SAA4B,CAAEE,e,KAKvEV,EAAaI,EAAc,gBAAkB,kBAEnD,OAAO,IAAI7yC,QAAQ,CAACyV,EAASxV,KAC3B,YAAa,CACX+yC,WACA/5C,UACAw5C,aACAY,MAAO,KACLpzC,KAEFqG,OAAQ,KACNrG,KAEF0yC,UAAW,IACF,YACLjzC,EACAmzC,EAAcA,EAAYK,WAAa,MAEtCvvC,KAAK8R,GACLoQ,MAAOnf,IACN,MAAMtN,EAAQsN,EAAIzN,QAClB,YAAW,CAAEG,UACb6G,EAAOyG,SAOnB,OAAO,YAAkChH,EAAMmzC,EAAYK,YAAYrtB,MAAOnf,IAC5E,MAAMtN,EAAQsN,EAAIzN,QAClB,YAAW,CAAEG,c,4XC7DV,MAAMk6C,EAAY,CACvBp8C,EACAzB,EACA2B,EACAm8C,KAEA,MAAOx0C,EAAMy0C,GAAW,cACjBpnB,EAAQqnB,GAAa,YAAe,IACpCpnB,EAAWqnB,GAAgB,aAkBlC,OAjBA,YAAgB,KACY,OAAD,6BACvB,IACEA,EAAa,MACbD,GAAU,GACVD,EAAQ,MACR,MAAMj6C,QAAiB,aAAOrC,EAAMzB,EAAM2B,EAAWm8C,GACrDC,EAAQj6C,GACR,MAAOH,GACPs6C,EAAat6C,G,QAEbq6C,GAAU,QAIb,CAACv8C,EAAMzB,EAAM2B,EAAWm8C,IAEpB,CAACx0C,EAAMqtB,EAAQC,K,kCC7BxB,sTAyCO,MAiCMsnB,EAA8Bv7B,I,MACzC,OAAIA,EAAYjhB,SAAS6pC,aAChB5oB,EAAYjhB,SAAS6pC,cAGK,QAAzB,EAAA5oB,EAAYjhB,SAAS1B,YAAI,eAAEiJ,QAAQ,kBAAmB,KAAzD,KAGIk1C,EAAqB,CAChCj6B,EAAyB,KACzBC,EACAi6B,K,gBAEA,IAAKl6B,IAAaC,EAGhB,OADAzC,QAAQ/d,MAAM,wDACP,KAGT,MAAMo3B,EAjCuB,EAAC7W,EAAyBC,K,UACvD,OAAID,EACKA,EAASxiB,SAAS1B,KAGvBmkB,EAEgC,QAAhC,EAA0B,QAA1B,EAAAA,EAAUxkB,KAAKmyB,mBAAW,eAAE9xB,YAAI,SACD,QAA9B,EAAAmkB,EAAUziB,SAASkxB,mBAAW,eAAG,OAA4BzO,EAAUziB,SAAS1B,KAG9E,MAsBcq+C,CAAgBn6B,EAAUC,GAEzCm6B,EAAan6B,aAAS,EAATA,EAAWxkB,KAAK2+C,WAE7BC,EAAkBp6B,aAAS,EAATA,EAAWxkB,KAAKgQ,OAClCkf,EAAiB3K,aAAQ,EAARA,EAAUvkB,KAAKgQ,OAChCA,EAAS4uC,GAAmB,YAAqB1vB,GAGjD+D,EAAc,IAClB,GACkB,QAAlB,EAAA1O,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEkxB,YACD,QAAnB,EAAAzO,aAAS,EAATA,EAAWziB,gBAAQ,eAAEkxB,YACrB,CACE,CAAC,IAAoB4R,MAAO,iBAE7BrgB,aAAS,EAATA,EAAWxkB,KAAKmyB,gBACiB,QAA/B,EAAA3N,aAAS,EAATA,EAAWziB,SAASkxB,mBAAW,eAAG,OAA4B,CAC7D,CAAC,KAA0BmI,WAG1BnI,EAAY,2DACZA,EAAY,qCACZA,EAAY,iCACZA,EAAY,oCACZA,EAAY,oCACZA,EAAY,YACZA,EAAY,KAuCnB,MAtHgC,CAACjQ,IACjC,IAAI67B,EAAiB77B,EAGrB,GAAI,IAAM67B,EADiB,uBACoB,CAG7C,MAAMC,EAAqB,IAAMD,EAJR,uBAKzBA,EAAiB,IAAOA,EAAgB,CALf,wBAMzBA,EAAiB,IAAQA,EAAgB,CACvC7+C,KAAM,CACJ8+C,wBAKN,OAAOD,GAsGAE,CArCgB,CACrBzuC,WAAYiU,EAAWA,EAASjU,WAAakU,EAAUlU,WACvDxO,KAAM,mBAAiBA,KACvBC,SAAU,OAAF,yBACF08C,aAAO,EAAPA,EAAS7S,cACT,CACEA,aAAiBxQ,EAAH,KAEhB,CACE/6B,UACgC2mB,KAAX,QAAnB,EAAAxC,aAAS,EAATA,EAAWziB,gBAAQ,eAAE1B,MACjB,GAAGk+C,EAA2B/5B,KAAa,iBAC3C,GAAG4W,KAAgB,mBACzB,CACNnI,cACAjxB,UAAWuiB,EAAWA,EAASxiB,SAASC,UAAYwiB,EAAUziB,SAASC,UACvEoD,OAAQ,IACN,GACkB,QAAlB,EAAAmf,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEqD,OACD,QAAnB,EAAAof,aAAS,EAATA,EAAWziB,gBAAQ,eAAEqD,SACpBof,aAAS,EAATA,EAAWxkB,KAAKmyB,cAAe5N,IAAa,CAC3C,sBAAuB6W,MAI7Bp7B,KAAM,OAAF,qDACEwkB,aAAS,EAATA,EAAWxkB,OAAQ,MAClBwkB,aAAS,EAATA,EAAWxkB,KAAKmyB,cAAe5N,IAAa,CAC/C4N,YAAa,CACX9xB,KAAM+6B,KAGNprB,GAAU,CAAEA,WAAS,CACzB2uC,aACAp7C,OAAQ,UAMDy7C,EAAiC5jB,IACrC,CACL6jB,oBAAqB,CACnBl9C,SAAU,CACRqD,OAAQ,CAAE,CAAC,IAAoBmf,UAAW6W,IAE5Cp7B,KAAM,CACJk/C,YAAa,CAAC,iBACd90C,UAAW,CACT+rB,SAAU,CACRgpB,QAAS,YAQRC,EACXhkB,IAEO,CACL6jB,oBAAqB,CACnBl9C,SAAU,CACRs9C,WAAY,CAAC,gCACbj6C,OAAQ,CACN,CAAC,IAAoBmf,UAAW6W,EAChC,qBAAsB,OACtB,uBAAwB,OACxB,4BAA6BA,IAGjCp7B,KAAM,CACJk/C,YAAa,CAAC,iBACd90C,UAAW,CACT+rB,SAAU,CACRgpB,QAAS,QAGbG,iBAAkB,UAClBC,WAAY,iBAMdC,EAA4BC,GAChClwB,IAEA,IAAImwB,EAAwD,CAC1D38C,KAAM,IAAY48C,eAClBh2C,KAAM,CAAEi2C,SAAU,KAoBpB,OAjBIH,IACFC,EAAmB,CACjB38C,KAAM,IAAY88C,IAClBl2C,KAAM,CACJm2C,sBAAuB,CACrBC,UAAWN,MAKflwB,EAAUyT,WACZ0c,EAAmB,CACjB38C,KAAM,IAAYi9C,YAClBr2C,KAAM,KAIH,OAAP,wBACK4lB,GACAmwB,IAIMO,EAA6B,CACxC17B,EACA27B,GAAiC,EACjCT,EAAuB,MAEvB,MACE19C,UAAU,UAAEC,GACZhC,MAAM,OAAEgQ,EAAM,UAAE5F,IACdma,EAEJ,MAAO,CACLviB,YACAm+C,YAAanwC,GAAU,IAAI+M,IAAKoS,GAAW,OAAD,wBACrCA,GAAK,CACRxsB,MAAOwsB,EAAMC,WAEfhlB,WAAYA,GAAa,IAAI2S,IAAK5Y,IAA6B,CAC7D9D,KAAM8D,EAAS9D,KACf+/C,UAAWF,EAAwB,IAA2B,GAC9Dv2C,KAAM,OAAF,wBACC,IAA0BxF,EAASpB,OAAK,CAC3CA,KAAMoB,EAASpB,UAGnB47C,YAAap6B,EAASvkB,KAAK2+C,YAAc,IAAI5hC,IAAIyiC,EAAyBC,MAIjEY,EAA8BtjC,GAGlCnO,OAAOC,KAAKkO,GAAKA,IAAK1c,IAEpB,CAAEA,OAAMsC,MADDoa,EAAI1c,MAwBTigD,EAAyB,CACpC/7B,EACAg8B,EACAn7C,EACA6tB,EACAwrB,KAEA,MAAM,WAAE0B,EAAU,WAAExB,GAAe4B,EAE7BC,EAAmC,CACvCz+C,SAAU,CACRkxB,cACA7tB,UAEFpF,KAAM,CACJmyB,YAAa,CACX9xB,KAAMkkB,EAASxiB,SAAS1B,MAE1B2P,OAAQmwC,EAAWpjC,IAAI,EAAG1c,OAAMsC,YAA8B,CAAGtC,OAAMsC,WACvEg8C,WAAY,YAAyBA,KAGzC,OAAOH,EAAmBj6B,EAAUi8B,EAAiB/B,K,kCC7TvD,sCAOYgC,EAPZ,4CAOA,SAAYA,GACV,gBACA,oBAFF,CAAYA,MAAsB,KA0CnB,IA5BuC,EACpD76B,WACA5T,WACA0uC,oBACAC,gBAAe,EACfC,oBAAmB,EACnB59C,UAAUy9C,EAAuBrxB,QACjCyxB,aAEA,uBAAKh/C,UAAU,uBACb,gBAAC,eAAY,CACX6Q,WAAYV,EACZ0uC,kBAAmBA,EACnBC,aAAcA,IAEZC,GAAoB,gBAAC,IAA+B,CAAC5uC,SAAUA,IAChE6uC,GAAW,uBAAKh/C,UAAU,gCAAgCg/C,IAE7D,uBACEh/C,UAAW,EAAG,+BAAgC,CAC5C,CAAC,MAAMmB,GAAYA,IAAYy9C,EAAuBrxB,WAGvDxJ,K,6bCyCQ,IAxCkD,I,IAAA,UAAE5jB,GAAS,EAAK+C,EAAK,IAArB,eAC/D,MAAM,EAAEnD,GAAM,2BACRk/C,EAAiB,YAAwC,KACzDC,EAAwB,YAC5B,MAGIC,EAA6B,UACjC,IAAM,YAAmCD,GACzC,CAACA,IAGG32C,EAAY,UAAc,KAC9B,IAAI62C,EAAuB,YAAwBj/C,GAUnD,MATA,IAAI8+C,KAAmBE,GAA4B7yB,QAAS+yB,I,QAC1D,MAAMC,EAAoD,QAAjC,KAAAD,EAAaE,YAAWh3C,iBAAS,sBAAGpI,GACzDm/C,IACFF,EAAuB,OAAH,wBACfE,GACAF,MAIFryC,OAAOC,KAAKoyC,GAAsBlkC,IAAK7Y,GAAS,OAAD,wBACjD+8C,EAAqB/8C,IAAI,CAC5Bi5B,KAAMj5B,MAEP,CAAC88C,EAA4BF,EAAgB9+C,IAEhD,OACE,gBAAC,IAAQ,CAACoI,UAAWA,GACnB,gBAAC,KAAgB,iBACXrF,EAAK,CACTs8C,YAAaz/C,EAAE,kCACf0/C,aAAc,CAAC,WAAY,SAAU,mC,qrBCvDtC,MAAMC,EAAoCv/C,GAA8C,OAAD,6BAC5F,MASMw/C,SAT6C,YAAQ,IAA4B,CACrF5+C,GAAIZ,KAEuB6H,OAC1B43C,I,cACC,QAAmB,QAAlB,EAAY,QAAZ,EAAAA,EAAI1/C,gBAAQ,eAAE1B,YAAI,eAAEylC,WAAW,mCACZ,QAAlB,EAAY,QAAZ,EAAA2b,EAAI1/C,gBAAQ,eAAE1B,YAAI,eAAEylC,WAAW,kCACvB,QAAV,EAAA2b,EAAIl+C,cAAM,eAAE0C,SAAU,IAA2By7C,oBAEvB3kC,IAAK0kC,GAAQ,gBAAMA,EAAIzhD,KAAKm4B,UAAUtuB,OAAO83C,SAG3E,OADAH,EAASjhD,KAAK,WACVihD,EAASv3C,OAAS,EACbu3C,EAASA,EAASv3C,OAAS,GAE7B,QAGI23C,EAA8B5/C,IACzC,MAAOm2B,EAAS0pB,GAAc,WAA8B,MAS5D,OARA,YAAgB,KACdN,EAA2Bv/C,GACxBuM,KAAKszC,GACLpxB,MAAOzsB,GAEN+d,QAAQC,KAAK,gEAAiEhe,KAEjF,CAAChC,IACGm2B,GAGI2pB,EAAwBC,KAC9BA,GACE,cAAIA,EAAS5pB,QAAS,KAGlB6pB,EAAuBD,KAC7BA,GACE,cAAIA,EAAS5pB,QAAS,KAQlB8pB,EAA2BjgD,IACtC,MAAMkgD,EAA2BN,EAA2B5/C,IACrDgc,GAAU,eAEVmkC,GAAuB,aAAgB,CAC5C1sB,MAAO,oBAAkB9K,SACzBxmB,SAAU,oBAAkB0mB,OAC5B7oB,UAAW,IACX0zB,KAAM,WAbkC,IAACqsB,EA0B3C,MAAO,CACLK,gBA3ByCL,EAgBYG,IAdhD,aAAGH,EAAS5pB,QAAS,KAgBxB,YAAwBna,GACxB,IAAqBgpB,2BASvBqb,YANAH,IAAqBJ,EAAqBI,GACtC,IAAmBI,OACnB,IAAmB7b,4BAKvB0b,wBAISI,EAA+BC,IAC1C,MAAOC,GAAmB,eACpBC,EAAkBd,EAA2Ba,GAC7CE,EAAsD,KAA3BD,aAAe,EAAfA,EAAiBE,SAAeF,aAAe,EAAfA,EAAiBG,QAAS,GAC3FL,EAAe,IAAwBG,IAG5BG,EAA8CN,IACzD,MAAOC,GAAmB,eACpBC,EAAkBd,EAA2Ba,GAC7CM,EACuB,KAA3BL,aAAe,EAAfA,EAAiBE,SAAeF,aAAe,EAAfA,EAAiBG,QAAS,GAC5DL,EACE,IACAO,IAKSC,EAA8CR,IACzD,MAAOC,GAAmB,eACpBC,EAAkBd,EAA2Ba,GAC7CQ,EACuB,KAA3BP,aAAe,EAAfA,EAAiBE,SAAeF,aAAe,EAAfA,EAAiBG,QAAS,GAC5DL,EACE,IACAS,K,kCC7HJ,4GAuBA,MAiCaC,EACXrT,GAEAA,EAAW9yB,IAAKszB,GACP,OAAP,wBACKA,GAAS,CACZ+Q,WAAY,OAAF,wBACL/Q,EAAU+Q,YAAU,CACvBh3C,UAAYpI,GACV4M,OAAOu0C,QAAQ9S,EAAU+Q,WAAWh3C,WAAa,IAAI0E,OAAO,CAACtL,GAAMU,EAAKC,MACtE,MAAMi/C,EA3CM,EACtBphD,EACAquC,EACAgT,EACAhuB,EACA8oB,EAAO,MAEP,IAAK9oB,EACH,OAAO,OAAP,QAASrzB,aAAcm8C,GAGzB,GAAI9oB,EAAM8C,QAAS,CACjB,MAAMmrB,EAAqB,aAA2BjuB,GACtD,OAAO,OAAP,QAASrzB,YAAWF,KAAMwhD,GAAuBnF,GAInD,MAAMoF,EAAgB,aAAkBluB,EAAMI,MAAOJ,EAAMvzB,MAC3D,IAAKyhD,EASH,OAPAxhC,QAAQC,KACN,WAAWquB,EAAUmT,oDAAoDnuB,EAAMI,oBAAoBJ,EAAMvzB,qHAAqHuhD,kEAC9NhT,EACAgT,EACAhuB,EACA8oB,GAEK,KAET,MAAMsF,EAAoB,aAAkBF,GAC5C,OAAO,OAAP,QAASvhD,YAAWF,KAAM2hD,GAAsBtF,IAaZuF,CACxB1hD,EACAquC,EACAnsC,EACAC,aAAQ,EAARA,EAAUkxB,MACVlxB,aAAQ,EAARA,EAAUg6C,MAKZ,OAHIiF,IACF5/C,EAAIU,GAAOk/C,GAEN5/C,GACN,SAqCE,IAhC6C,EAAGxB,YAAW4jB,eACxE,MAAOyP,EAAOyV,GAAY,WAAgC,IAAI,IAAgB9oC,IAE9E,YAAgB,KACd8oC,EAAS,IAAI,IAAgB9oC,KAC5B,CAACA,IAEJ,MAAM8+C,EAAiB,YAAwC,KACzDC,EAAwB,YAC5B,MAGIC,EAA6B,UACjC,IAAMkC,EAAmCnC,GACzC,CAACA,IAGH,OACE,gBAAC,IAAa4C,SAAQ,CAAChhD,MAAO0yB,GAC3BrzB,GACC,gCACG,IAAIg/C,KAA+BF,GAAgB/jC,IAAK/b,GACvD,gBAAC,IAAkB,CAACkD,IAAKlD,EAAQogD,WAAWz7C,GAAIi+C,iBAAkB5iD,EAAQogD,eAI/Ep/C,GAAa,gBAAC,IAAqB,MACnC4jB,K,kCC7GP,6VAMO,MAAMi+B,EAAe,EAC1BxjD,OACAyjD,kBACAv/C,kBACAw/C,cACAjK,cACA93C,gBASA,MAAMoD,EAAS,OAAH,QACV4+C,IAAK3jD,EACL,6BAA8BA,EAC9B,8BAA+BA,EAC/B,yBAA0BA,GACtBkE,GAAmB,CACrB,2BAA4BA,IAiBhC,OAbIw/C,IACF3+C,EAAO,4BAA8B2+C,GAEnCD,GAAmBA,EAAgB/qC,OAAO9O,OAAS,IACrD7E,EAAO,6BAA+B0+C,GAEpChK,IACF10C,EAAO,oCAAsC00C,GAE3C93C,IACFoD,EAAO,sCAAwCpD,GAG1CoD,GAGI6+C,EAAuB,KAC3B,CACL,4BAA6B,wBAIpBC,EAAsB,KAC1B,CACL,CAAC,KAA4B,UAIpBC,EAAoB,CAACC,EAAgBC,KACzC,CACL,2BAA4BD,EAC5B,2BAA4BC,GAAU,KAI7BC,EAAuB,CAClCvX,EACAmN,EACAqK,EACAC,EACAxK,EAAmB,YAChB,CACH,CAAC,MAAsBxqC,KAAKiH,UAAU,CACpC,CACElV,KAAM,CAAEO,KAAM,iBAAkBzB,KAAM,GAAG65C,KAAaF,IAAYh4C,UAAWuiD,GAC7EE,UAAW,4CAA4C1X,aACvD2X,OAAQ,IAAIF,OAkBLG,EAAe,CAACxgD,EAAqB9D,KAChD,MAAM8K,EAAe,IAAehH,GACpC,OAAIgH,EACK,CACL64C,IAAK3jD,EACL,CAAC8K,EAAa6tC,eAAgB34C,GAG3B,CACL2jD,IAAK3jD,IAIIukD,EAAY,CAACC,EAAmCC,K,8DAC3D,GAAI,IAAUD,GAAmB,OAAOC,EAExC,MAAMC,EAAa,IAAQ,GAAIF,GAAoB,GAAIC,GACjDE,EAA2D,QAAvC,EAA0B,QAA1B,EAAAH,aAAgB,EAAhBA,EAAkB9iD,gBAAQ,eAAEkxB,mBAAW,eAAEgyB,cA9BnC,IAACC,EA8CjC,GAfAH,EAAWhjD,SAASqD,OAAS,OAAH,wBACrB0/C,EAAY/iD,SAASqD,QACpB4/C,EAA8C,QAA1B,EAAAH,aAAgB,EAAhBA,EAAkB9iD,gBAAQ,eAAEqD,OAAS,IAE3D2/C,EAAWhjD,SAASkxB,cACtB8xB,EAAWhjD,SAASkxB,YAAc,OAAH,wBACzB+xB,EAC0B,QAA1B,EAAAH,aAAgB,EAAhBA,EAAkB9iD,gBAAQ,eAAEkxB,aAtCHiyB,EAuCoB,QAA1B,EAAAL,aAAgB,EAAhBA,EAAkB9iD,gBAAQ,eAAEkxB,YA7BhD,IAAOiyB,EATa,CACzB,2BACA,2BACA,4BACA,8BACA,gDACA,cACA,uDAgCKJ,EAAY/iD,SAASkxB,eAGW,QAAnC,EAAyB,QAAzB,EAAe,QAAf,EAAA8xB,EAAW/kD,YAAI,eAAEwyB,gBAAQ,eAAEzwB,gBAAQ,eAAEqD,UACvC2/C,EAAW/kD,KAAKwyB,SAASzwB,SAASqD,OAA6C,QAApC,EAA0B,QAA1B,EAAgB,QAAhB,EAAA0/C,EAAY9kD,YAAI,eAAEwyB,gBAAQ,eAAEzwB,gBAAQ,eAAEqD,SAE9E,IAA+C,QAArC,EAA+B,QAA/B,EAAqB,QAArB,EAAAy/C,EAAiB7kD,YAAI,eAAEwyB,gBAAQ,eAAExyB,YAAI,eAAEmlD,YAAa,CACjEJ,EAAW/kD,KAAKwyB,SAASxyB,KAAKmlD,WAAaN,EAAiB7kD,KAAKwyB,SAASxyB,KAAKmlD,WAC/E,MAAM3sC,EAAQ,IAAYqsC,EAAiB7kD,KAAKwyB,SAASxyB,KAAKmlD,WAAY,CACxE9kD,KAAMwkD,EAAiB9iD,SAAS1B,OAE9BmY,GAAS,EACXusC,EAAW/kD,KAAKwyB,SAASxyB,KAAKmlD,WAAW3sC,GAAS,OAAH,sCAC1CqsC,EAAiB7kD,KAAKwyB,SAASxyB,KAAKmlD,WAAW3sC,IAC/CssC,EAAY9kD,KAAKwyB,SAASxyB,KAAKmlD,WAAW,IAAE,CAE/CC,aAAcP,EAAiB7kD,KAAKwyB,SAASxyB,KAAKmlD,WAAW3sC,GAAO4sC,eAGtEL,EAAW/kD,KAAKwyB,SAASxyB,KAAKmlD,WAAWvhD,KAAKkhD,EAAY9kD,KAAKwyB,SAASxyB,KAAKmlD,WAAW,IAiB5F,OAdoB,QAAhB,EAAAJ,aAAU,EAAVA,EAAY/kD,YAAI,eAAEqlD,eAAe,eACnCN,EAAW/kD,KAAKwpB,SAAqC,QAA1B,EAAgB,QAAhB,EAAAs7B,EAAY9kD,YAAI,eAAEwpB,gBAAQ,QAAyB,QAArB,EAAAq7B,EAAiB7kD,YAAI,eAAEwpB,WAE/D,QAAf,EAAAu7B,EAAW/kD,YAAI,eAAEuyB,YACnBwyB,EAAW/kD,KAAKuyB,SAAWuyB,EAAY9kD,KAAKuyB,WAEjB,QAAxB,EAAgB,QAAhB,EAAAuyB,EAAY9kD,YAAI,eAAEuL,cAAM,eAAE+5C,eACE,QAAxB,EAAgB,QAAhB,EAAAP,aAAU,EAAVA,EAAY/kD,YAAI,eAAEuL,cAAM,gBAAE+5C,cAGA,QAA/B,EAAyB,QAAzB,EAAe,QAAf,EAAAP,EAAW/kD,YAAI,eAAEwyB,gBAAQ,eAAExyB,YAAI,eAAEqlD,eAAe,cAClDN,EAAW/kD,KAAKwyB,SAASxyB,KAAKulD,QAA+C,QAArC,EAA+B,QAA/B,EAAqB,QAArB,EAAAV,EAAiB7kD,YAAI,eAAEwyB,gBAAQ,eAAExyB,YAAI,eAAEulD,SAG1ER,GAGIS,EAAqBvkB,I,UAChC,OAAO,IAC+B,QAApC,EAA0B,QAA1B,EAAgB,QAAhB,EAAAA,aAAU,EAAVA,EAAYjhC,YAAI,eAAEwyB,gBAAQ,eAAEzwB,gBAAQ,eAAEqD,OACtC,CAAC5B,EAAKb,EAAOuB,K,QAIX,OAHgC,QAA3B,EAAmB,QAAnB,EAAA+8B,EAAWl/B,gBAAQ,eAAEqD,cAAM,eAAEigD,eAAenhD,MAC/CV,EAAIU,GAAOvB,GAENa,GAET,M,kCC1KJ,6BAgFe,IAvE+C,EAAGogD,uBAC/D,MAAM6B,EAAmB,aAAkC,MACrD,GAAE9/C,EAAE,SAAEwc,EAAQ,UAAE/X,GAAcw5C,EAC9BrT,EAAe,aAAsBqT,EAAiBrT,cACtDmV,EAAmB,SAAoC,CAC3DvjC,WACAouB,eACAnmC,cA6DF,OA1DA,YAAgB,KAEd,IADsBq7C,EAAiBE,aAAahgD,GAChC,CAClB+/C,EAAiB5P,QAAU,CACzB3zB,WACAouB,eACAnmC,aAEFq7C,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,SAEtD,MAAM,aAAE8P,EAAY,mBAAEC,EAAkB,uBAAEC,GAA2BlC,EACjEgC,EACFA,IACGr3C,KAAMwiC,IACL2U,EAAiB5P,QAAQxE,gBAAkBP,EAC3C0U,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,WAEvDrlB,MAAM,KACLi1B,EAAiB5P,QAAQxE,gBAAkB,IAAM1mC,QAAQyV,QAAQ,IACjEolC,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,YAG1D4P,EAAiB5P,QAAQxE,gBAAkB,IAAM1mC,QAAQyV,QAAQ,IACjEolC,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,UAGpD+P,EACFA,IACGt3C,KAAMi0B,IACLkjB,EAAiB5P,QAAQvE,kBAAoB/O,EAC7CijB,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,WAEvDrlB,MAAM,KACLi1B,EAAiB5P,QAAQvE,kBAAoB,KAAM,EACnDkU,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,YAG1D4P,EAAiB5P,QAAQvE,kBAAoB,KAAM,EACnDkU,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,UAGpDgQ,EACFA,IACGv3C,KAAM2iC,IACLwU,EAAiB5P,QAAQtE,oBAAsBN,EAC/CuU,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,WAEvDrlB,MAAM,KACLi1B,EAAiB5P,QAAQtE,oBAAsB,OAC/CiU,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,YAG1D4P,EAAiB5P,QAAQtE,oBAAsB,OAC/CiU,EAAiBrV,gBAAgBzqC,EAAI+/C,EAAiB5P,YAGzD,CAAC2P,EAAkB7B,EAAkBj+C,EAAIwc,EAAU/X,EAAWmmC,IAE1D,O,kCC7ET,4EAwDe,uBAzCqD,EAAGwV,kBACrE,MAAMN,EAAmB,aAAkC,MACrD,UAAEzjD,EAAS,iBAAE8tC,EAAgB,iBAAEC,GAAqB0V,GACnDr7C,EAAW47C,GAAgB,aAC5BnmB,EAAmB,YAAoB79B,GACvCikD,EAAgB,UACpB,IAAOjkD,GAAa8tC,EAAmBC,EAAmB,GAC1D,CAACD,EAAkBC,EAAkB/tC,IAGjCkkD,EAA2B,aAAoBF,EAAc,KAE7DG,EAAmB,YAA8CF,GA0BvE,OAzBA,YAAgB,IAAMC,EAAyBC,GAAmB,CAChED,EACAC,IAIF,YAAgB,KACdV,EAAiBpwB,MAAQ,MAExB,CAACrzB,IAEJ,YAAgB,KACT,IAAUoI,IACb,YAAwBq7C,EAAkBr7C,EAAW27C,EAAalmB,GAC/DtxB,KAAMq0B,IACL6iB,EAAiBxuB,UAAY2L,EAAI3L,UAC7B2L,EAAI5L,SACNyuB,EAAiBzuB,QAAS,EAC1ByuB,EAAiBpwB,MAAQuN,EAAIvN,SAGhC5E,MAAM,SAEV,CAACrmB,EAAW27C,EAAaN,EAAkB5lB,IAEvC,Q,kCCjDT,gDAGO,MAAMumB,EAA0B,CACrCX,EACAr7C,EACA27C,EACAlmB,KAEA,MAAM,iBAAEiQ,EAAgB,iBAAEC,GAAqB0V,EAC/C,IAAK3V,IAAqB1lC,EACxB,OAAOQ,QAAQyV,QAAQ,CAAE2W,QAAQ,EAAOC,UAAW,GAAI5B,MAAO,OAGhE,MAWMgxB,EAAez3C,OAAOC,KAAKzE,GAAWmX,KAAMrd,GAX7B,CAACA,GAChBkG,EAAUlG,GAAK+yB,YAAc8Y,EAAiB7rC,GAAK8+B,SAC9C54B,EAAUlG,GAAK+yB,UAEjB,GAOiDqvB,CAAapiD,IACvE,GAAImiD,EACF,OAAOz7C,QAAQyV,QAAQ,CACrB2W,QAAQ,EACRC,UAAW7sB,EAAUi8C,GAAcpvB,UACnC5B,MAAO,OAIX,IAAKzmB,OAAOC,KAAKzE,GAAWinC,MAAOntC,GAblB,CAACA,GACTkG,EAAUlG,GAAK8yB,QAAW5sB,EAAUlG,GAAK+yB,WAAa8Y,EAAiB7rC,GAAK8+B,SAY1CujB,CAASriD,IAClD,OAAO0G,QAAQyV,QAAQ,CAAE2W,QAAQ,EAAOC,UAAW,GAAI5B,MAAO,OAIhE,MAAMwb,EAAoB4U,EAAiBhjB,qBAAqBr4B,GAG1DwmC,EAAY6U,EAAiBrjB,mBACnC,OAAOqjB,EAAiBjV,mBAAmBpmC,GAAWmE,KAAMi4C,IAC1D,MAAMC,EAAY,YAChBD,EACAf,EAAiBzjD,UACjBoI,EACAymC,EACAD,EACAmV,EACAlmB,GAGF,OADA4lB,EAAiBzU,eAAeyV,EAAWr8C,GACpCQ,QAAQyV,QAAQ,CAAE2W,QAAQ,EAAMC,UAAW,GAAI5B,MAAOoxB,Q,kCCzDjE,sFAsBO,MAGMC,EAAuB,CAClCX,EACA37C,KAEA,MAAMu8C,EAA8CZ,EAAY1jB,MAN1Dx4B,OAAO,EAAGF,UAAWA,EAAKi9C,WAAa,KAO7C,OAAOb,EAAYhlB,MAAMjyB,OAAO,CAACtL,GAAOmG,WACtC,MAAQA,KAAMk9C,GAAsBF,EAAiBplC,KAClDulC,GAAUA,EAAMn9C,KAAKhE,KAAOgE,EAAK4B,SAE5B5B,KAAMo9C,GAAsBJ,EAAiBplC,KAClDulC,GAAUA,EAAMn9C,KAAKhE,KAAOgE,EAAK6B,QAE9Bw7C,EAAqB58C,EAAUmX,KAAMqhB,GAClCA,EAAI7gC,SAAS1B,OAASwmD,EAAkBA,EAAkBD,WAE7DK,EAAqB78C,EAAUmX,KAClCqhB,GAAQA,EAAI7gC,SAAS1B,OAAS0mD,EAAkBA,EAAkBH,WAErE,OAAOI,GAAsBC,EACzB,IACKzjD,EACH,CACEmC,GAAI,GAAGqhD,EAAmBjlD,SAASuV,OAAO2vC,EAAmBllD,SAASuV,MACtEvU,KAAM,IACNwI,OAAQy7C,EAAmBjlD,SAASuV,IACpC9L,OAAQy7C,EAAmBllD,SAASuV,IACpC3N,KAAMA,EAAKu9C,UAGf1jD,GACH,KA2EQ2jD,EAAsB,CACjC9xB,EACArzB,EACAoI,EACAymC,EACAzO,EACA2jB,EACAlmB,KAEA,MACMunB,EAlFyB,CAC/Bh9C,IAEA,MAAMi9C,EAAuB,CAC3BhlB,MAAO,GACPtB,MAAO,IA+BT,OA5BA,IAAe5S,QAASjqB,I,QACtB,GAA0B,QAAtB,EAAgB,QAAhB,EAAAkG,aAAS,EAATA,EAAYlG,UAAI,eAAEyF,YAAI,eAAEM,OAAQ,CAClC,MAAMq9C,EAAwB,CAC5BjlB,MAAO,GACPtB,MAAO,IAGT32B,EAAUlG,GAAKyF,KAAKwkB,QAAShqB,IAC3B,MAAMuG,EAAO,aAA0BxG,EAAKC,EAAUiG,GACtD,GAAIM,EAAM,CACR,MAAMf,EAAO,YACXxF,EACAuG,EACA,IACA,YAAqB,uBACrBsc,EACA5c,GAEFk9C,EAAejlB,MAAMz+B,KACnB,YAAoBO,EAAU,IAAewF,EAAM,MAErD,YAAW,YAAsBxF,GAAWmjD,EAAejlB,UAG/D,YAAuBilB,EAAgBD,MAIpCA,GA8CWE,CADN,OAAH,wBAAQn9C,GAAS,CAAEy1B,sBAQ5B,OANA,YAAuBunB,EAAW/xB,EAAO+M,GA5CZ,CAAC/M,IAC9BA,EAAMgN,MAAMlU,QAASmU,I,QACfA,EAAEv/B,OAAS,MAEbu/B,EAAE1c,SAAW0c,EAAE1c,SAAS/b,OAAQlE,GAAO0vB,EAAMgN,MAAM9gB,KAAM+yB,GAAUA,EAAM3uC,KAAOA,IAChF28B,EAAE34B,KAAKqB,eAA8E,QAA7D,EAAU,QAAV,EAAAs3B,EAAE1c,gBAAQ,eAAE7I,IAAKpX,GAAO0vB,EAAMgN,MAAM9gB,KAAM/S,GAAM7I,IAAO6I,EAAE7I,YAAI,QAAI,MAK7F0vB,EAAMgN,MAAQhN,EAAMgN,MAAMx4B,OACvBy4B,GAAMA,EAAEv/B,OAAS,KAA0Bu/B,EAAE1c,SAAS3b,OAAS,IAmClEu9C,CAAuBnyB,GA/BM,EAACA,EAAcwb,KAE5CA,EAAkB1iB,QAASrkB,IACzBurB,EAAM0L,MAAMn9B,QAAQ,YAAqBkG,EAAI+mC,OA6B/C4W,CAAuBpyB,EAAOwb,GAzBA,EAC9Bxb,EACAwb,EACAkV,KAGIA,GACF1wB,EAAM0L,MAAMn9B,QAAQ8iD,EAAqBX,EAAalV,KAmBxD6W,CAAwBryB,EAAOwb,EAAmBkV,GAE3C1wB,I,kCCpJT,uEAMO,MAAMsyB,EACX3lD,IAMA,MAAO4lD,EAAgBC,EAAaC,GAAiB,YAAuB,CAAE9lD,cACxEsN,EAAW,UAAc,KAC7B,IAAIy4C,EAiBJ,OAhBKD,GAAkBD,IACrBE,EAAY,YAAkBH,aAAc,EAAdA,EAAgBj+C,MAAM5F,OAGpDgkD,EAAU55B,QAAS65B,WACVA,EAAMC,SACTD,EAAME,cACDF,EAAME,KAAKC,sBACXH,EAAME,KAAKE,eAClBJ,EAAME,KAAKnkD,QACTikD,EAAME,KAAKnkD,OAAOoqB,QAASk6B,WAClBA,EAAUJ,eAKpB,CAAEt+C,KAAMo+C,EAAW/wB,QAAS8wB,EAAe7wB,UAAW4wB,IAC5D,CAACA,EAAaC,EAAeF,IAEhC,OAAO,aAAsBt4C,K,kCCnC/B,wDAIO,MAAMg5C,EAAyB,EAAGC,QAAOvmD,gBAC9C,MAAM2Z,EAAM,YAAiB,CAC3B6sC,SAAU,IAAmBC,MAC7BzmD,cAGF,OAAO,qBAAoC2Z,EAAK4sC,EAAOvmD,K,kCCVzD,mD,kCCAA,gIAWO,MAAM0mD,EAAqB,CAChC/+C,EACAg/C,K,MA0BA,OAxBkB,OAAH,4GACTh/C,EAAK0jC,kBAAoB,CAAEA,iBAAkB,IAAY1jC,EAAK0jC,oBAC9D1jC,EAAK4jC,kBAAoB,CAAEA,iBAAkB,IAAY5jC,EAAK4jC,oBAC9D5jC,EAAK6jC,cAAgB,IAAYob,kBAAoB,CACvDhb,KAAMjkC,EAAKikC,OAETjkC,EAAK6jC,cAAgB,IAAYqb,SAAW,CAC9Cpb,QAAS,OAAF,wBACF9jC,EAAKA,EAAK6jC,cAAY,CACzBsb,QAA8B,QAAtB,EAAAn/C,EAAKA,EAAK6jC,oBAAY,eAAEsb,QAASn/C,EAAKA,EAAK6jC,aAAasb,OAAO,GAAK,OAC5Epb,KAAMib,IAAiB,IAAU/0C,eAAiB,EAAI,IAAYjK,EAAK8jC,QAAQC,UAG/E/jC,EAAK6jC,cAAgB,IAAYub,WAAa,CAChDpb,UAAW,CACTD,KAAMib,IAAiB,IAAU/0C,eAAiB,EAAI,IAAYjK,EAAKgkC,UAAUD,SAGjF/jC,EAAKyjC,qBAAuB,CAC9BA,oBAAqB,IAAYzjC,EAAKyjC,uBAEpCzjC,EAAKwjC,eAAiB,CAAEA,cAAe,IAAYxjC,EAAKwjC,iBACxDxjC,EAAK2jC,gBAAkB,CAAEA,eAAgB,IAAY3jC,EAAK2jC,mBAYrD0b,EACXxxB,I,kBAR6B7tB,EAU7B,OAAO,OAAP,oDACK6tB,GAAY,CACfgW,aAZ2B7jC,EAYC6tB,EAX1B,IAAM7tB,EAAM,IAAYk/C,SAAiB,IAAYA,QACrD,IAAMl/C,EAAM,IAAYo/C,WAAmB,IAAYA,UACvD,IAAMp/C,EAAM,gBAAwB,IAAYi/C,iBAC7C,IASLvb,kBAA+C,QAA7B,EAAA7V,EAAa6V,wBAAgB,eAAEvgC,aAAc,GAC/DygC,kBAA+C,QAA7B,EAAA/V,EAAa+V,wBAAgB,eAAEzgC,aAAc,GAC/DsgC,qBAAqD,QAAhC,EAAA5V,EAAa4V,2BAAmB,eAAEtgC,aAAc,GACrEqgC,eAAyC,QAA1B,EAAA3V,EAAa2V,qBAAa,eAAErgC,aAAc,GACzDwgC,gBAA2C,QAA3B,EAAA9V,EAAa8V,sBAAc,eAAExgC,aAAc,KACvD0qB,EAAaiW,SAAW,CAC1BA,QAAS,OAAF,wBACFjW,EAAaiW,SAAO,CACvBC,MAA+B,QAAzB,EAAAlW,EAAaiW,QAAQC,YAAI,eAAE5gC,aAAc,GAC/Cg8C,OAAwC,SAAhCtxB,EAAaiW,QAAQqb,YAAoB9hC,EAAY,CAAC,aAG9DwQ,EAAamW,WAAa,CAC5BA,UAAW,CAAED,MAAiC,QAA3B,EAAAlW,EAAamW,UAAUD,YAAI,eAAE5gC,aAAc,OAKvDm8C,EAAsB,CACjC9kD,EACA+kD,EAAyB,K,wBAEzB,MAAM/D,EAAuD,QAA1C,EAA8B,QAA9B,EAAwB,QAAxB,EAAc,QAAd,EAAAhhD,aAAQ,EAARA,EAAUnE,YAAI,eAAEwyB,gBAAQ,eAAExyB,YAAI,eAAEmlD,kBAAU,QAAI,GAC3DpX,EACgE,QAApE,EAA4B,QAA5B,EAAAoX,aAAU,EAAVA,EAAa+D,UAAe,eAAG,IAAsBC,uBAAe,QAAI,GACpEnb,EAC+D,QAAnE,EAA4B,QAA5B,EAAAmX,aAAU,EAAVA,EAAa+D,UAAe,eAAG,IAAsBE,sBAAc,QAAI,GACnEnb,EAC8D,QAAlE,EAA4B,QAA5B,EAAAkX,aAAU,EAAVA,EAAa+D,UAAe,eAAG,IAAsBG,qBAAa,QAAI,GAkCxE,MAhCqB,CACnBtb,eAAgB,CACdf,UAAU,EACVE,UAAU,EACVD,SAAU,IAAUc,GACpBpkC,KAAO,IAAUokC,GAIb,IAA0BpkC,KAH1B,OAAD,UACMq/C,EAA8Bjb,KAIzCC,cAAe,CACbhB,UAAU,EACVE,UAAU,EACVD,SAAU,IAAUe,GACpBrkC,KAAO,IAAUqkC,GAIb,IAA0BrkC,KAH1B,OAAD,UACMq/C,EAA8Bhb,KAIzCC,aAAc,CACZjB,UAAU,EACVE,UAAU,EACVD,SAAU,IAAUgB,GACpBtkC,KAAO,IAAUskC,GAIb,IAA0BtkC,KAH1B,OAAD,UACMq/C,EAA8B/a,OAQhCqb,EAAgB,CAAC5jB,EAAoCijB,KAChE,MAAM,eAAE5a,EAAc,cAAEC,EAAa,aAAEC,GAAiBvI,EACxD,OAAO,OAAP,sCACMqI,EAAed,QACf,CAAEc,eAAgB2a,EAAmB3a,EAAepkC,KAAMg/C,IAC1D,IACA3a,EAAcf,QACd,CAAEe,cAAe0a,EAAmB1a,EAAcrkC,KAAMg/C,IACxD,IACAA,IAAiB,IAAU/0C,iBAAkBq6B,aAAY,EAAZA,EAAchB,SAC3D,CAAEgB,aAAcya,EAAmBza,EAAatkC,OAChD,M,kCCjIR,IAAY4/C,EAMAC,EANZ,6EAAYD,GACV,kCACA,gCACA,8BAHF,CAAYA,MAAqB,KAMjC,SAAYC,GACV,oBACA,6BACA,wBAHF,CAAYA,MAAW,M,kCCRvB,kFAEO,MAAMC,EAA2B,6BAE3BC,EAA4B,CACvC,CAAC,IAAqBtkB,KAAM,CAC1Bp1B,OAAQ,CACN2L,IAAK,GACLguC,SAAU,KAGd,CAAC,IAAqBloD,OAAQ,CAC5BuO,OAAQ,CACN2L,IAAK,KAGT,CAAC,IAAqBwjC,SAAU,CAC9BnvC,OAAQ,CACNjN,KAAM,GACN6mD,SAAU,GACVC,IAAK,KAGT,CAAC,IAAqBC,SAAU,CAC9B95C,OAAQ,CACN3P,KAAM,GACNsb,IAAK,GACLpG,SAAU,GACVC,SAAU,GACVu0C,SAAU,IAEZ35B,QAAS,CACP45B,OAAQ,GACRvsC,MAAO,O,kCCjCb,6DA4Fe,sBAXU7I,IAAiC,CACxD5S,UAAW,YAAmB4S,GAC9BhL,YAAa,YAAqBgL,KAGRq1C,IAAsC,CAChE/3C,SAAW8xC,IACTiG,EAAS,YAAqBjG,OAInB,CA9D0C,EACvDhiD,YACA4H,cACAsI,WACAF,eAEA,MAAM,EAAEpQ,GAAM,2BACRsoD,EAAuBtoD,EAAE,6BACzBuoD,EAAsBvoD,EAAE,iCACxBwoD,EACJxgD,IAAgB,IACZsgD,EACAtgD,IAAgB,KAChBugD,EACAvgD,GACC3H,EAAOooD,GAAY,WAAuBD,GAMjD,GALA,YAAgB,KACTp4C,GACHq4C,EAASD,IAEV,CAACp4C,EAAUo4C,IACVpoD,IAAc,IAAoB,OAAO,KAM7C,OACE,gBAAC,IAAmB,CAClBH,UAAU,wBACVyoD,gBAAgB,aAChBtoD,UAAWA,EACXC,MAAOA,GAAS,wBAAMJ,UAAU,mBAAmBI,GACnDsoD,YAAa3oD,EAAE,wBACf4oD,gBAAiB,CACfC,eAAgB,IAChBC,iBAAkBR,GAEpBS,iBAAkB,CAChBC,gBAAiB,KACjBC,kBAAmBV,GAErB/0C,YAAaxL,GAAe,IAC5BsI,SApBwB,CAAC44C,EAAwB5mD,KACnDA,IAAQ,IAAuBgO,EAAShO,GAAOgO,EAAS44C,IAoBtDC,mBAAoB,IACpBC,WAAY,IACZh5C,SAAUA,O,yDC3EhB,8RAEO,MAAMi5C,EAA8C,CACzDtlD,GAAI,uBACJklB,OAAQ,yBACRF,SAAU,IACVra,WAAY,WACZxO,KAAM,uBACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,uBAEPrC,SAAU,yCACVsX,YAAa,yBAEbJ,eAAgB,2CAChBE,KAAM,OAGKogC,EAAuC,CAClDvlD,GAAI,gBACJklB,OAAQ,kBACRF,SAAU,IACVra,WAAY,WACZxO,KAAM,gBACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,gBAEPrC,SAAU,kCACVsX,YAAa,kBAEbJ,eAAgB,oCAChBE,KAAM,MAGKqgC,EAA+B,CAC1CxlD,GAAI,QACJklB,OAAQ,SACRF,SAAU,IACVra,WAAY,WACZxO,KAAM,QACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,QAEPrC,SAAU,0BACVsX,YAAa,SAEbJ,eAAgB,2BAChBE,KAAM,KAGKsgC,EAAkC,CAC7CzlD,GAAI,WACJklB,OAAQ,YACRF,SAAU,IACVra,WAAY,WACZxO,KAAM,WACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,WAEPrC,SAAU,6BACVsX,YAAa,YAEbJ,eAAgB,8BAChBE,KAAM,MAGKugC,EAAsC,CACjD1lD,GAAI,uBACJklB,OAAQ,yBACRF,SAAU,IACVra,WAAY,IACZxO,KAAM,uBACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,uBAEPrC,SAAU,yCACVsX,YAAa,yBAEbJ,eAAgB,2CAChBE,KAAM,OAGKwgC,EAA+B,CAC1C3lD,GAAI,gBACJklB,OAAQ,kBACRF,SAAU,IACVra,WAAY,IACZxO,KAAM,gBACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,gBAEPrC,SAAU,kCACVsX,YAAa,kBAEbJ,eAAgB,oCAChBE,KAAM,MAGKygC,EAAuB,CAClC5lD,GAAI,QACJklB,OAAQ,SACRF,SAAU,IACVra,WAAY,IACZxO,KAAM,QACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,QAEPrC,SAAU,0BACVsX,YAAa,SAEbJ,eAAgB,2BAChBE,KAAM,KAGK0gC,EAA0B,CACrC7lD,GAAI,WACJklB,OAAQ,YACRF,SAAU,IACVra,WAAY,IACZxO,KAAM,WACNipB,YAAY,EACZE,KAAK,EAELlV,MAAO,WAEPrC,SAAU,6BACVsX,YAAa,YAEbJ,eAAgB,8BAChBE,KAAM,O,kCChJR,+BAoEe,IArDiD,EAC9DnlB,KACA8lD,KAAK,EACLC,KAAK,EACLC,eAAe,EACfC,aAAa,4BAAgBjpD,MAC7BkpD,eAAe,MAEXC,OAAOC,UAAUC,UAAUziD,SAAS,QAGpC,gBAAC,UAAO,CAAC5D,GAAIA,GACX,0BACEA,GAAIA,EACJmiC,EAAG,IAAmB,KAAf6jB,KACP9jB,EAAG,IAAmB,KAAf8jB,KACPjrB,MAAU,IAAqB,GAAfirB,EAAT,IACPhrB,OAAW,IAAqB,GAAfgrB,EAAT,KAER,kCAAgBM,GAAG,cAAcN,aAAcA,IAC/C,4BAAUF,GAAIA,EAAIC,GAAIA,EAAIv3B,OAAO,eACjC,2BAASy3B,WAAYA,EAAYC,aAAcA,IAC/C,+BAAaK,IAAI,aAAanK,SAAS,OACvC,+BACE,oCACA,+BAAakK,GAAG,qBAQxB,gBAAC,UAAO,CAACtmD,GAAIA,GACX,0BACEA,GAAIA,EACJmiC,EAAG,IAAmB,KAAf6jB,KACP9jB,EAAG,IAAmB,KAAf8jB,KACPjrB,MAAU,IAAqB,GAAfirB,EAAT,IACPhrB,OAAW,IAAqB,GAAfgrB,EAAT,KAER,gCACEF,GAAIA,EACJC,GAAIA,EACJC,aAAcA,EACdC,WAAYA,EACZC,aAAcA,O,kCC7DxB,4MAAO,MAAMM,EAAY,gBACZC,EAAqB,UAErBC,EAAoC,2BACpCC,EAAiC,6BAEjCC,EAA+B,mDAC/BC,EAAwB,W,yDCPrC,2JAWO,MAAMC,EAAiBC,GACrB,IAASA,EAAUh1C,GAAM,IAAcA,IAAM,IAASA,IAAY,KAANA,GAGxDi1C,EAAyB,CACpC38C,EACAjN,EACAf,EACA4qD,KAEA,MAAMC,EAAe,GAAG9pD,KAAQ,YAAe,KACzC+pD,EAAoC,CACxCx8C,WAAY,sBACZxO,KAAM,wBAAsBA,KAC5BC,SAAU,CACR1B,KAAMwsD,EACN7qD,aAEFhC,KAAM,OAAF,QACF+C,OACAiN,OAAQ,YAA2By8C,EAAcz8C,KAC7C48C,GAAc,CAChBx8B,QAAS,IAAMw8B,EAAWjjD,KAAM,CAAChH,EAAOtC,KAC/B,CACL0sD,UAAW1sD,EACX2sD,UAAW3sD,EACX2vB,WAAY48B,EAAW7qD,SAAS1B,WAO1C,OAAO,aAAU,wBAAuBysD,IAG7BG,EAAuB,CAClC7gD,EACArJ,EACAf,KAEA,MACMq0B,EAAiB,CACrB/lB,WAAY,KACZxO,KAAM,SACNC,SAAU,CACR1B,KALiB,GAAG0C,YAAe,YAAe,KAMlDf,aAEFiL,WAAYw/C,EAAcrgD,IAE5B,OAAO,aAAU,cAAaiqB,K,kCC9DhC,yCAgBA,MAAM62B,EAAY,iCAuDH,iBArDkC,EAC7CrrD,YAAWimC,IAAGD,IAAGnH,QAAOC,SAAQ+Y,YAAWyT,OAAMtsB,UAAU,GAC7DusB,KAEA,MAAOC,EAAeC,GAAgB,kBAAQ,IAE9C,IAAIC,EAAY,EACZC,EAAa,EAMjB,OAJIH,KACC3sB,MAAO6sB,EAAW5sB,OAAQ6sB,GAAeH,GAI5C,qBAAGxrD,UAAWA,GACZ,gBAAC,IAAmB,CAAC8D,GAAIunD,IACzB,0BACEhpD,IAAK,UAAUgpD,EACfnxC,IAAKqxC,EACLvjD,OAAQ,yBAAeqjD,GACvBO,GAAI3lB,EAAIylB,EAAY,EACpBG,GAAI7lB,EAAI2lB,EAAa,EACrBxwC,EAAGuwC,EAAY,EAAI1sB,IAEpBssB,EACC,qBAAGpxC,IAAKuxC,GACN,iCACEppD,IAAK,SAASgpD,EACdplB,EAAGA,EAAIylB,EAAY,EACnB1lB,EAAGA,EACHnH,MAAOA,EACPC,OAAQA,GAEPwsB,IAIL,qBAAGpxC,IAAKuxC,GACN,yBACEppD,IAAK,SAASgpD,EACdplB,EAAGA,EAAIylB,EACP1lB,EAAGA,EACHnH,MAAOA,EACPC,OAAQA,EACRgtB,UAAW,YAAqBjU,IAAcA,EAC9C7vC,OAAQ,yBAAeqjD,U,kCC/DnC,WAyCe,IAlC6B,EAAGlnC,QAAO4nC,cAElD,uBACEC,MAAM,6BACNC,QAASF,EAAW,eAAiB,eACrCG,KAAK,eAAc,cACP,OACZC,KAAK,MACLttB,MAAM,MACNC,OAAO,MACP3a,MAAOA,GAEP,wBACE8iB,EAAE,uPACF9iB,MAAO,CACL+nC,KAAM,UAGV,wBACEjlB,EAAE,2+BACF9iB,MAAO,CACL+nC,KAAM,kBAGV,wBACEjlB,EAAE,4sBACF9iB,MAAO,CACL+nC,KAAM,oB,kCClChB,0LAWA,MAEaE,EAAwB,CAAC1pD,EAAyBrE,IAC7D,GAAGqE,KAAmBrE,IAElBguD,EAAkE,EACtEhuD,MACAqE,kBACAC,uBACA2pD,gBAEA,MAAMC,EAAkB,IAAQluD,EAAImuD,qBAAsB,KAC1D,OACE,gCACE,0BACE,uBAAKxsD,UAAU,2CACb,wBAAMA,UAAU,8CACd,gBAAC,IAAU,OAEb,uBAAKA,UAAU,4CACb,gBAAC,YAAS,CAACM,UAAWjC,EAAIwB,QAAS4sD,QAAQ,MAI/C,uBAAKzsD,UAAU,2CACb,wBAAMA,UAAU,wCAChB,uBAAKA,UAAU,uCACb,gBAAC,eAAY,CACXC,KA5B6C,iBA6B7CzB,KAAM4tD,EAAsB1pD,EAAiBrE,EAAIA,KACjD8B,UAAWwC,EACXvC,MAAO/B,EAAIA,IACXgC,OAAQisD,IAEV,uBAAKtsD,UAAU,gB,QAAqBusD,EAAgB,IACpD,uBAAKvsD,UAAU,gBAAgBusD,EAAgB,SASrDG,EAAqB,CACzBC,EACAC,EACAC,IAGED,IACA,IAAYC,EAAkBC,GAAwBA,EAAWzuD,MAAQsuD,GAIhEI,EAA0D,EACrEtqD,kBACAC,kBACAC,2BAEA,MAAM,EAAE5C,GAAM,2BACd,IAAK,IAAO0C,EAAiB,SAC3B,OAAO,gBAAC,IAAQ,CAACyR,MAAOnU,EAAE,mBAE5B,MAAMitD,EAAuB,IAC3B,IAAMvqD,EAAiB,EAAGpE,MAAKgV,WACtB,IAAMA,EAAO,EAAGxT,UAAS2sD,2BAA2B,CACzDnuD,MACAwB,UACA2sD,4BAIAK,EAAkB,IAAUG,EAAW,CAAC,WAAY,CAAC,SACrDC,EAAW,IAAMJ,EAAiB,CAACxuD,EAAc+D,IAEnD,gBAACiqD,EAAuB,CACtBhqD,IAAKhE,EAAImuD,qBACTnuD,IAAKA,EACLqE,gBAAiBA,EACjBC,qBAAsBA,EACtB2pD,UAAWI,EAAmBruD,EAAIA,IAAK+D,EAAGyqD,MAKhD,OACE,gCACE,sBAAI7sD,UAAU,iCACXitD,EACD,2BACE,wBAAMjtD,UAAU,8CACd,gBAAC,IAAU,Y,kCCrEvB,IAAYktD,EASAC,EAXZ,sGAEA,SAAYD,GACV,oBACA,oBACA,wBACA,kBACA,oBALF,CAAYA,MAAsB,KASlC,SAAYC,GACV,oBACA,wBACA,oBAHF,CAAYA,MAAoB,KAMzB,MAAMC,EAAuE,CAElF,CAACD,EAAqBE,SAAU,4BAEhC,CAACF,EAAqBr2B,KAAM,oCAC5B,CAACq2B,EAAqBG,SAAU,8B,kCCrDlC,oHAEO,MAAMC,EAA6B,CAACC,EAAeztD,KACxD,OAAQytD,GACN,KAAK,IAAsBlG,eACzB,MAAO,CACLmG,UAAW1tD,EAAE,8BACb2tD,aAAc3tD,EACZ,yMAIN,KAAK,IAAsBwnD,cACzB,MAAO,CACLkG,UAAW1tD,EAAE,6BACb2tD,aAAc3tD,EACZ,+HAIN,KAAK,IAAsBynD,aACzB,MAAO,CACLiG,UAAW1tD,EAAE,4BACb2tD,aAAc3tD,EACZ,8IAIN,QACE,SAIO4tD,EAAkD,CAC7DxiB,UAAU,EACVC,SAAS,EACTC,UAAU,EACVvjC,KAAM,CACJ0jC,iBAAkB,IAClBG,YAAa,IAAYqb,QACzBpb,QAAS,CACPqb,YAAQ9hC,EACR7J,KAAM,IACNuwB,KAAM,OACN+hB,YAAa,IAEf9hB,UAAW,CACTD,KAAM,QAERE,KAAM,CAAEC,QAAS,CAAC,KAClBT,oBAAqB,IACrBD,cAAe,KACfG,eAAgB,IAChBC,iBAAkB,MAITmiB,EAA+B,CAC1C3hB,eAAgByhB,EAChBxhB,cAAewhB,EACfvhB,aAAcuhB,I,kCC7DhB,snBAkEA,MAAMG,EAAsC,CAAC5sD,EAAM29B,EAAQC,IAAY,CAACtgC,EAAMsJ,IAAU,OAAD,sBACrFhE,GAAItF,EACJ0V,OAAOpM,aAAI,EAAJA,EAAMoM,QAAS1V,EACtBuvD,eAAejmD,aAAI,EAAJA,EAAMimD,gBAAiB,IAClCjmD,GAAQ,CAAEA,SAAO,CACrBg3B,OAAQA,UAAU,IAClBD,MAAOA,UAAS,IAChB39B,SAIW8sD,EAAiDF,EAAkB,IAASG,WAE5EC,EAAuDJ,EAClE,IAASK,kBAGEC,EAAqDN,EAChE,IAASO,YACT,GAEWC,EAAyDR,EACpE,IAASS,gBAEEC,EAAgEV,EAC3E,IAASW,wBAEEC,EAAuDZ,EAClE,IAASa,cAUEC,EAAmDd,EAC9D,IAASe,cAGEC,EAA2B,CACtChwB,EACAD,IAEAivB,EAAkB,IAASiB,qBAAsBlwB,EAAOC,GAEpDkwB,EAAyB,CAAC9tD,EAAgB4G,IAC9CgmD,EAAkB5sD,EAAM4G,EAAK+2B,MAAO/2B,EAAKg3B,OAAzCgvB,CAAiDhmD,EAAKhE,GAAIgE,GAsB/CmnD,EACXzuB,IAYA,MAAM0uB,EAAwC1uB,EAAMvzB,OAAO,CAACtL,EAAK8G,EAAM0mD,KACrE,MACErnD,MACE0iB,MAAM,SAAEE,KAERjiB,EACJ,GAAIiiB,GAAYA,EAAStiB,OAAS,EAAG,CACnC,MAAMtE,EAAa,IAAI4mB,GACpBhsB,KAAK,CAACC,EAAGC,IAAMD,EAAEI,cAAcH,IAC/BqO,OAAO,CAACS,EAAKwM,IAAQ,GAAGxM,KAAOwM,KAE7BjE,MAAMsF,QAAQ5Z,EAAImC,MACrBnC,EAAImC,GAAM,IAEZnC,EAAImC,GAAI/B,KAAK,CACX0G,OACAiiB,WACA0kC,QAASD,IAGb,OAAOxtD,GACN,IAGG0tD,EAAyDtiD,OAAOiR,OACpEkxC,GACAlnD,OAAQF,GAAkCA,EAAKM,OAAS,GAE1D,GAA2C,IAAvCinD,EAA4BjnD,OAE9B,OAAOo4B,EAIT,MAAM8uB,EAAqC,GACrCC,EAAqD,GAoD3D,OAnDAF,EAA4B/iC,QAASkjC,IAEnC,MAAM,SAAE9kC,GAAa8kC,EAAI,GAEnBC,EAAkBD,EAAIt0C,IAAKw0C,GAAYA,EAAQjnD,KAAK3E,IACpD6rD,EAAqB,YAAYF,EAAMjvC,KAAK,KAElDivC,EAAMnjC,QAASsjC,IACR35C,MAAMsF,QAAQg0C,EAAmBK,MACpCL,EAAmBK,GAAa,IAElCL,EAAmBK,GAAW7tD,KAAK4tD,KAGrCL,EAASvtD,KACPqsD,EAAiBuB,EAAoB,CACnCnlC,KAAM,CACJhsB,KAAMmxD,EACNjlC,iBAOR8V,EAAMlU,QAAS7jB,IACb,MAAMonD,EAAqCN,EAAmB9mD,EAAK3E,IACnE,GAAI+rD,GAAgBA,EAAaznD,OAAS,EAAG,CAC3C,MACEN,MAAM,KAAE0iB,GAAM,KACdtpB,GACEuH,EAEEqnD,EAtGkB,CAAC5uD,IAC7B,OAAQA,GACN,KAAK,IAASqtD,eACZ,OAAOD,EACT,KAAK,IAASK,aACZ,OAAOD,EACT,KAAK,IAASL,YACZ,OAAOD,EACT,KAAK,IAASS,aACZ,OAAOD,EACT,KAAK,IAASH,uBACZ,OAAOD,EACT,KAAK,IAASL,iBACZ,OAAOD,EACT,KAAK,IAASD,UACd,QACE,OAAOD,IAsFwD+B,CAAe7uD,GAG9EouD,EAASvtD,KACP+tD,EAAWrnD,EAAK3E,GAAI,OAAF,wBACb2E,EAAKX,MAAI,CACZ0iB,KAAM,OAAF,wBACCA,GAAI,CACPE,SAAUmlC,aAMhBP,EAASvtD,KAAK0G,KAIX6mD,GAmBIU,EAAsB,CACjC3jC,EACA4jC,EACAC,EACAC,EACAC,IAEO/jC,EAASnR,IAAI,CAACsP,EAAM2kC,IAClBT,EAAkBlkC,EAAKhsB,KAAM,CAClC2D,MAAOguD,EAAShB,GAChB3kC,OACAtH,SAAUktC,EAAY1oD,SAAS8iB,EAAKhsB,MACpC0xD,gBAAiB,KACfA,EAAgB1lC,IAElBylC,UAAYI,IACVJ,EAAUzlC,EAAM6lC,OAMXC,EAA4B9vB,GACvC,IACEA,EAAMtlB,IAAKzS,IACT,MACEX,MACE0iB,MAAQhsB,KAAMmL,EAAM,SAAE+gB,EAAW,MAEjCjiB,EAEJ,OAAwB,IAApBiiB,EAAStiB,OAAqB,KAE3BsiB,EAASxP,IAAKxR,IAAW,CAC9B5F,GAAI,GAAG4F,QAAaC,IACpBzI,KAAM,OACNwI,SACAC,eAGJ3B,OAAQuoD,KAAeA,GAEdC,EAAuB,CAACC,EAAwBC,IAEzDD,EAAiB,KAChBA,EAAiB,GAAK,KACrBC,EAA+D,EAA9C,IAAc,KACV,EAAvB,IAISC,EAAuBF,IAClC,MAAMG,EAAwBH,EAAiB,EAAI,IAA0B,EAC7E,OAAO,IAAoC,EAAvB,IAA2BG,GAGpCC,EAAuBC,IAClC,MAAMC,EAAY,IAChBD,EAAa7jD,OAAO,CAACtL,GAAOmG,MAAQ0iB,MAAQE,gBACnCA,EAAW/oB,EAAIqvD,OAAOtmC,GAAY/oB,EACxC,KAEL,OAAO,IACLmvD,EAAa51C,IAAKulB,GAAMA,EAAE38B,IAC1BitD,IAwDSE,EAAe,CAAChwD,EAAciwD,EAAe,uBACxD,IAAKjwD,GAAwB,IAAhBA,EAAKmH,OAChB,OAAO,EAET,MACM+oD,EADSC,SAASC,cAAc,UACfC,WAAW,MAClC,IAAKH,EACH,OAAOlwD,EAAKmH,OAEd+oD,EAAQD,KAAOA,EACf,MAAM,MAAEryB,GAAUsyB,EAAQI,YAAYtwD,GACtC,OAAO49B,GAGI2yB,EAAmCC,IAC9C,MAAMC,EAAQ,6DACd,IAAIhtC,EACJ,MAAMitC,EAAO,GAEb,KAAmD,QAA3CjtC,EAAUgtC,EAAM3lB,KAAK0lB,KAEvB/sC,EAAQ/N,QAAU+6C,EAAME,WAC1BF,EAAME,YAEJltC,IACGitC,EAAKjqD,SAASgd,EAAQ,KACzBitC,EAAK5vD,KAAK2iB,EAAQ,KAIxB,OAAOitC,GAGIE,EAAiBppD,GAA0D,OAAD,wBAClFA,GAAI,CACPq2B,OAAQ,EACRD,MAAO,IAiBIizB,EAAqBtnC,I,MAChC,GAAKA,EAAK3F,KAGV,MAlB2B,CAACnjB,IAC5B,OAAQA,GACN,KAAK,YAAUggB,UACf,KAAK,YAAUC,OACb,OAAO,aAAWowC,IACpB,KAAK,YAAUxvC,QACf,KAAK,YAAU,eACf,KAAK,YAAUgJ,KACb,OAAO,aAAWymC,MACpB,QACE,SAQGC,CAAyB,QAAX,EAAAznC,EAAK9oB,cAAM,eAAE4f,SAGvB4wC,EAAoB,CAC/BxvC,EACAvB,EAA+B,CAC7B1S,WAAY,GACZvO,SAAU,GACVD,KAAM,cACN9B,KAAM,IAERgtB,K,QAMA,IAAKzI,EACH,OAAO,KAGT,MAAM2J,EAAW,IAAU,YAAiB3J,EAAUvB,EAAagK,IAE7DgnC,EAAM,IAAI,IAChB9lC,WAAUC,QAAS9B,IACjB2nC,EAAIC,SAAS5nC,EAAKhsB,KAAMgsB,EAAM,GAAIA,EAAKE,UAAY,MAGrD,MAAM8V,EAAQ,GACR6xB,EAAmB,GACzBF,EAAIG,gBAAiBz8C,IACdw8C,EAAiBx8C,EAAE08C,OAGtBF,EAAiBx8C,EAAE08C,OAASznD,KAAK8Z,IAAIytC,EAAiBx8C,EAAE08C,OAAQtB,EAAap7C,EAAErX,OAF/E6zD,EAAiBx8C,EAAE08C,OAAStB,EAAap7C,EAAErX,QAK/C2zD,EAAIG,gBAAiBE,I,cACnB,MAAMzE,EAAgB,GAChBvjC,EAAOgoC,EAAO1qD,KACd2qD,EAA2B,GAC7BjoC,EAAKrc,QACPqc,EAAKrc,OAAOme,QAAS0D,IACf/Z,MAAMsF,QAAQyU,EAAElvB,OAClBkvB,EAAElvB,MAAMwrB,QAASomC,IACfD,EAAyB1wD,QAAQyvD,EAAgCkB,MAGnED,EAAyB1wD,QAAQyvD,EAAgCxhC,EAAElvB,WAIrE0pB,aAAI,EAAJA,EAAM3F,OACR2F,EAAK3F,KAAKyH,QAAQ,EAAGqmC,QAAO30C,aACtBA,IACFy0C,EAAyB1wD,QAAQyvD,EAAgCmB,IACjE30C,EAAOsO,QAASsmC,IACdH,EAAyB1wD,QAAQyvD,EAAgCoB,SAKzE,MAAMC,EAAe,IAAO,IAAIL,EAAOM,kBASvC,GARID,GACFA,EAAavmC,QAASiQ,I,MACpB,MAAMw2B,EAASZ,EAAIa,SAASzsD,IAAIg2B,IAC5Bw2B,EAAOR,MAAQC,EAAOD,OAAS,IAAyB,QAApB,EAAAC,EAAO1qD,KAAK4iB,gBAAQ,eAAEhjB,SAASqrD,EAAOv0D,SAC5EuvD,EAAchsD,KAAKw6B,KAIrBk2B,EAAyBrqD,OAAS,EAAG,CACvC,MAAMyN,EAAI48C,EAAyBv3C,IAAK+rB,GAC/BkrB,EAAIa,SAASzsD,IAAI0gC,IAEpBgsB,EAAc,IAAQp9C,EAAIoxB,GAAMA,EAAEsrB,OACpB18C,EAAE7N,OAAQnJ,GAAOA,EAAG0zD,QAAUU,EAAYV,OAClDjmC,QAAS4mC,IACfV,EAAOM,gBAAgBprD,SAASwrD,EAAG10D,QACjC00D,EAAGX,MAAQC,EAAOD,OAAS,GAAuC,IAAlCC,EAAOM,gBAAgB1qD,SACzD2lD,EAAchsD,KAAKmxD,EAAG10D,QAK9B,MAAM20D,GAA4C,QAA7B,EAAApmD,OAAOC,KAAKmU,EAAYhjB,aAAK,eAAEiK,QAAS,EAAI,IAAsB,EACjFgrD,EAAiD,QAAjC,EAAmB,QAAnB,EAAAjyC,aAAW,EAAXA,EAAazf,cAAM,eAAEw4B,oBAAY,eAAEtK,KAAM7vB,GAAMA,EAAEvB,OAASgsB,EAAKhsB,MACjE,IAAC60D,EAOrB7yB,EAAMz+B,KACJitD,GARmBqE,EAQ6B,QAAb,EAAA7oC,aAAI,EAAJA,EAAMgC,eAAO,eAAEvsB,OAPpB,SAAbozD,GAAoC,gBAAbA,EAGjC,IAASlF,iBAFP,IAASF,UAMuC,CACvDnqD,GAAI0uD,EAAOh0D,KACX0V,MAAOs+C,EAAOh0D,KACdqgC,MACEwzB,EAAiBG,EAAOD,OACT,EAAf,IACA,IACAY,EACFpF,gBACArsD,OAAQ0xD,EAAgB,YAAU7wC,QAA4B,QAAlB,EAAAiwC,EAAO1qD,KAAKpG,cAAM,eAAE4f,OAChEgyC,WAAYxB,EAAkBU,EAAO1qD,MACrC0iB,KAAMgoC,EAAO1qD,KACb4a,WACAvB,mBAKN,MAAMoyC,EAAkB,YAAwB7wC,EAAUvB,EAAagK,GAAU,GAE3EqoC,GAC4D,QAAhE,EAAAD,EAAgB70D,KAAK,CAACC,EAAGC,IAAMA,EAAEJ,KAAK4J,OAASzJ,EAAEH,KAAK4J,QAAQ,UAAE,eAAE5J,OAAQ,GACtEi1D,EAAeF,EAAgBr4C,IAAKw4C,I,UACxC,MAAMN,EAAiD,QAAjC,EAAmB,QAAnB,EAAAjyC,aAAW,EAAXA,EAAazf,cAAM,eAAEw4B,oBAAY,eAAEtK,KAAM7vB,GAAMA,EAAEvB,OAASk1D,EAAMl1D,MAEtF,OAAOwwD,EAAuB,IAAS2E,aAAc,CACnD7vD,GAAI4vD,EAAMl1D,KACV0V,MAAOw/C,EAAMl1D,KACbqgC,MACEoyB,EAAauC,GAAqC,EAAf,IAAoD,EAAjC,IACxD10B,OAAQ,IACRivB,cAAe,GACfrsD,OAAQ0xD,EAAgB,YAAU7wC,QAAsB,QAAZ,EAAAmxC,EAAMhyD,cAAM,eAAE4f,OAC1DgyC,WAAYxB,EAAkB4B,GAC9BlpC,KAAMkpC,EACNhxC,WACAvB,kBAIEyyC,EAAeH,EAAarrD,OAC9B,CACE,CACEtE,GAAI,mBACJ5C,KAAM,IAAS2yD,cACf9vC,SAAU0vC,EAAav4C,IAAKulB,GAAMA,EAAE38B,IACpC8vB,OAAO,EACPzP,MAAO,CAAE6a,QAAS,OAGtB,GACE80B,EAAwC,yBAC5C,IAAItzB,KAAUizB,GACd,IAASpF,YACT,CAAC,IAASsF,eACVz4C,IAAI22C,GAEA3yB,EAA6B,4BACjC,IAAIsB,KAAUszB,KAAgBL,GAC9B,IAASpF,YACT,IAAS0F,KACT,IAASA,KACT,CAAC,IAASJ,cACV,IAASI,MAGX,MAAO,CACLC,MAAO,CACLlwD,KAA4B,QAArB,EAAAqd,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,OAAQkkB,EAASxiB,SAAS1B,MAApD,SACJ0C,KAAM,YAAU8yD,MAChBC,OAAQ,IAAeC,aACvBC,YAAa,CAAC,GAAK,IAErB3zB,MAAO,IAAIA,KAAUszB,KAAgBL,KAAiBG,GACtD10B,UAISk1B,EAAyB5pC,IAA+B,MAAC,OAAU,QAAV,EAAAA,aAAI,EAAJA,EAAM3F,YAAI,eAAEzc,QAAS,GAE9EisD,EAA0B7zB,GACrCA,EAAM5Q,KAAM6Q,GAAM2zB,EAAsB3zB,EAAE34B,KAAK0iB,OAOpC8pC,EAAiBL,IAC5B,OAAQA,GACN,KAAK,IAAeM,cAClB,OAAO,IACT,KAAK,IAAeL,aAClB,OAAO,IACT,KAAK,IAAeM,oBAClB,OAAO,IACT,KAAK,IAAeC,qBAClB,OAAO,IACT,QACE,OAAO,OAIAC,EAAgC,CAC3ChzD,EACAizD,EACAC,KAEA,IAAIC,EAaAC,EACJ,OAXID,EAFAF,EACEjzD,IAAW,IAAeigB,OACb,wBAAa7gB,MAEb,YAAkBY,GAAQ03B,QAAQt4B,MAEzC8zD,EAGK,kDAFA,4CAMTlzD,GACN,KAAK,IAAeggB,UACpB,KAAK,IAAeC,OAClBmzC,EAAiB,IAAK/0D,EAAE,4CACxB,MACF,KAAK,IAAewiB,QAClBuyC,EAAiB,IAAK/0D,EAAE,gDACxB,MACF,QACE+0D,EAAiB,IAAK/0D,EAAE,oCAE5B,MAAO,CAAE+0D,iBAAgBD,iBAGdE,EAAqBC,IAChC,OAAQA,GACN,KAAK,IAAetzC,UACpB,KAAK,IAAeC,OAClB,OAAO,IAAK5hB,EAAE,4CAChB,KAAK,IAAewiB,QAClB,OAAO,IAAKxiB,EAAE,gDAChB,QACE,OAAO,IAAKA,EAAE,uC,uaCnpBb,MAeDk1D,EACJj3C,GACqC,OAAD,6BACpC,MAAM,UAAE7d,EAAS,UAAEoI,GAAcyV,EAE3Bk3C,EAAoE3sD,EAAU0E,OAClF,CAACtL,EAAKW,EAAUqU,IACPrU,EAASi8C,YAAc,IAA2B,OAAD,wBAAM58C,GAAG,CAAE,CAACgV,GAAQrU,IAAaX,EAE3F,IAEIwzD,QAAyBpsD,QAAQS,IACrCuD,OAAOiR,OAAOk3C,GAAmBh6C,IAAK5Y,GA3BZ,EAC5B8yD,EACAj1D,IAC+B,OAAD,6BAC9B,MACE2H,MAAM,OAAEqG,EAAM,QAAEogB,EAAO,KAAErtB,IACvBk0D,EAEJ,OAAO7mC,EACH,YAAqBA,EAASrtB,EAAMf,GAAWuM,KAAMq+C,GAC5C,YAAuB58C,EAAQjN,EAAMf,EAAW4qD,IAEzD,YAAuB58C,EAAQjN,EAAMf,MAeYk1D,CAAe/yD,EAAUnC,KAE9E,IAAKg1D,GAAgD,IAA5BA,EAAiB/sD,OAAc,OAAO4V,EAE/D,MAAMs3C,EAAcvoD,OAAOC,KAAKkoD,GAChC,OAAO,OAAP,wBACKl3C,GAAM,CACTzV,UAAWA,EAAU2S,IACnB,CAAC5Y,EAAUqU,KACT,GAAIu+C,EAAkBv+C,GAAQ,CAC5B,MAAM4+C,EAAgBD,EAAYE,QAAQ7+C,EAAM1L,YAChD,OAAO,OAAP,wBACK3I,GAAQ,CACXi8C,UAAW4W,EAAiBI,GAAer1D,SAAS1B,OAGxD,OAAO8D,SAiBFmzD,EAAsB,CACjCz3C,EACA0E,EACAnf,EACA6tB,IAC6B,OAAD,6BAC5B,IAAIstB,EAAa1gC,EACjB0gC,QAAmBuW,EAAiBvW,GACpCA,EAnBwB,CAAC1gC,IACzB,MAAM,WAAE8+B,GAAe9+B,EAEvB,OAAK8+B,GAAoC,IAAtBA,EAAW10C,OAEvB,OAAP,wBACK4V,GAAM,CACT8+B,WAAYA,EAAW90C,OAAQ0lB,GAAcA,EAAUxsB,OAAS,IAAYi9C,eAJ3BngC,GAgBtC03C,CAAkBhX,GAE/B,MAAMiX,QAA6C,aACjD,mBACA,YAAuBjzC,EAAUg8B,EAAYn7C,EAAQ6tB,IAGvD,OAAOroB,QAAQyV,QAAQm3C,O,y4BCTlB,MAAM/qD,EAAiB,KAE5B,MAAMC,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,GACf,OAAOL,IAAOA,IAAOA,IAAOA,KAGjB+qD,EAAiBC,IAC5B,MAAMvyB,EAAU,CACdpjC,SAAU,CACR1B,KAAMq3D,EAAYr3D,MAEpBoE,YAAaizD,EAAYjzD,YACzBg1C,YAAaie,EAAYje,aAG3B,OAAO,aAAU,sBAAqBtU,IAG3BwyB,EAA4B,CACvCC,EACAC,EACA7sB,EACA8sB,EACApiC,EAAgB,SAChBqiC,EAAmC,M,YAEnC,MAAM,KACJ13D,EACA8kC,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GACrB1+C,OAAQ4yD,EACRv2D,OAASvB,IAAK45C,GAAa,OAC3B10C,GACEwyD,EACEK,EAAa,yBACbp/B,EAAgD,QAAlC,EAAA++B,EAA+BxyB,WAAG,eAAEzpB,IAClDI,EAAyC,QAAlC,EAAA67C,EAA+BxyB,WAAG,eAAErpB,IAC3Cm8C,EAAiD,QAA/B,EAAyB,QAAzB,EAAAJ,aAAY,EAAZA,EAAcj4D,mBAAW,eAAE8J,YAAI,eAAEE,OACtDsuD,IAAU,QAAC,OAAuB,QAAvB,EAAe,QAAf,EAAAA,EAAOp2D,gBAAQ,eAAEqD,cAAM,eAAG6yD,OAAiB7yD,EAAO6yD,IAAe53D,KAEzE+3D,EAAwB,IAAUF,EAAiB,CAAC,4BAA6B,CAAC,SAClFG,EAAuBD,EAAsBnuD,QAAUmuD,EAAsB,IAAO,GACpF7zD,EAAkBszD,GAAmBA,EAAgB91D,SAAS1B,KAC9Di4D,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBACvEye,EAAqB,OAAH,wBAClB1/B,GAAc,YAAkBA,EAAY9c,IAC7C,eAECy8C,EACK,WAAT9iC,GAAsB,IAAU2iC,GAE5Bh4D,EADAg4D,EAAoBt2D,SAASqD,OAAO6yD,GAEpCQ,EAAiB,CACrBnoD,WAAY,wBACZxO,KAAM,cACNC,SAAU,CACR1B,KAAM03D,GAA4BS,EAClCx2D,YACAoD,OAAQ,OAAF,sCACDkzD,GACAN,GAAU,CACb,CAACC,GAAaO,IAEhBvlC,YAAaslC,IAGX14D,EAAc,YAAUw4D,EAAqBI,GAInD,MAHa,WAAT/iC,IACF71B,EAAYkC,SAAS1B,KAAOg4D,EAAoBt2D,SAAS1B,MAE3C,WAATq1B,EACH,aAAU,mBAAkB71B,GAC5B,aAAU,mBAAkB44D,EAAgBztB,EAAS,IAAY,KAG1D0tB,EAAsB,CACjCd,EACA/3D,EACAyN,EACA09B,KAEA,MAAM,KACJ3qC,EACAuJ,aAAevJ,KAAMyjD,GACrB3e,SAAW9kC,KAAM2B,GACjBP,OAASvB,IAAK45C,GACd10C,OAAQ4yD,GACNJ,EAEErzD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDi4D,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBAEvEl8B,EAAgB,CACpBtN,WAAY,KACZ3G,KAAM,GACN7H,KAAM,SACNC,SAAU,CACR1B,KAAM,GAAGA,KAAQiN,mBACjBtL,YACAoD,OAAQ,OAAF,wBAAOkzD,GAAkBN,IAEjC/qD,WAAY,CAAE4M,iBAAkBpN,KAChC1J,KAAM,aAAWmJ,QAGnB,OAAO,aAAU,cAAa0R,EAAeotB,EAAS,IAAY,KAsGvD2tB,EAA4B,CACvCf,EACA/3D,EACAmrC,EACA4tB,EACAljC,EAAgB,SAChBqiC,EAAmC,M,UAEnC,MAAM,KACJ13D,EACA8kC,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GACrB1e,KAAOzpB,IAAKkd,EAAY91B,KAAMizB,EAAO,IAAEja,EAAM,SAAU8tC,IAAK9gD,EAAYqD,OAAQ4jB,GAChFqV,QAAQ,eAAEppB,GACVxa,OAASvB,IAAK45C,EAAW,SAAE+e,GAC3B7yD,OAAO,IAAE8yD,EAAG,SAAEvmC,EAAU/I,SAAUuvC,GAClC3zD,OAAQ4yD,GACNJ,EAEErzD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDmE,EAAuB3E,GAAeA,EAAYkC,SAASC,UAE3Ds2D,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBACvEye,EAAqB,OAAH,wBAAQ,YAAkB1/B,EAAY9c,IAAS,eACvE,IAAIi9C,EAEAC,EAAoBlwD,EACxB,MAAMmwD,EAAeL,EAAWjqD,OAAOC,KAAKgqD,GAAY,GAClDM,EAAaD,EAChBrvD,OAAQ8N,KAAQkhD,EAASlhD,IACzBoF,IAAKpF,IAAM,CAAGtX,KAAMsX,EAAGhV,MAAOk2D,EAASlhD,MACpC63B,EAAYspB,EAAIjvD,OAAQuvD,IAAcF,EAAa3vD,SAAS6vD,EAAS/4D,OAE3E,OAAQ04D,GACN,IAAK,UACHC,GAA6C,QAAzB,EAAAJ,aAAmB,EAAnBA,EAAqB54D,YAAI,eAAEwpB,WAAY,CACzD6vC,eAAgB,CAAEP,MAAK78C,mBAEzBg9C,GAAqD,QAAjC,EAAyB,QAAzB,EAAAL,aAAmB,EAAnBA,EAAqB54D,YAAI,eAAEuL,cAAM,eAAExC,aAAcA,EACrE,MACF,IAAK,SACHiwD,EAAoB,CAClBK,eAAgB,CAAEP,MAAK78C,mBAEzB,MACF,QACE+8C,EAAoB,CAClBM,eAAgB,CACdR,IAAK,IAAIK,KAAe3pB,GACxBjuC,KAAM,CACJO,KAAM,iBACNzB,KAAM,GAAGkE,KAAmBu1C,IAC5B93C,UAAWwC,KAOrB,MAAM+0D,EAAqB,CACzBx2D,KAAM,IAAiBizB,GACvB,CAACA,GAAU,CACTQ,gBAAiB,CAAEn2B,KAAM,GAAGA,KAAQ21B,sBAIlCwjC,EAA8B,CAAC,IAAYrmD,OAAQ,IAAYF,OAE/DwmD,EACK,WAAT/jC,GAAsB,IAAUkjC,GAE5Bv4D,EADAu4D,EAAoB72D,SAASqD,OApDhB,0BAuDbs0D,EAAiB,CACrBppD,WAAY,wBACZxO,KAAM,cACNC,SAAU,CACR1B,KAAM03D,GAA4B0B,EAClCz3D,YACAoD,OAAQ,OAAF,sCAAOkzD,GAAkBN,GAAU,CAAE,yBAAcyB,IACzDxmC,YAAaslC,GAEfv4D,KAAM,CACJ+O,OAAQ,CACN4qD,GAAI,CACF73D,KAAM,iBACNzB,MAAS03D,GAA4B0B,GAA/B,YAGVluD,OAAQ,OAAF,QACJxC,WAAYkwD,EACZ7zB,IAAK,CACHw0B,IAAK/gC,EACL9c,QAEEiU,EAAa,CAAEs1B,aAAc,CAAEjlD,KAAM2vB,IAAiB,IAE5DxG,SAAU,OAAF,QACNzmB,KAAMg2D,GACHC,GAELzmC,SAAU,CACR,CACExvB,KAAM,UACNyJ,QAAS,CACPgqB,gBAAiB,CAAEn2B,KAASA,EAAH,gCAGzBkyB,EAAShmB,UAAYitD,EAA4BjwD,SAASysB,GAC1D,CAACujC,GACD,MACAhnC,EAAS9wB,MAAQ,CAAC,CAAEsB,KAAM,cAAe82D,YAAa,KAAQ,MAC9DtnC,EAASvU,OAAS,CAAC,CAAEjb,KAAM,iBAAoB,MAKnDu8B,EAAc,YAAUs5B,EAAqBc,GAInD,MAHa,WAAThkC,IACF4J,EAAYv9B,SAAS1B,KAAOu4D,EAAoB72D,SAAS1B,MAE3C,WAATq1B,EACH,aAAU,mBAAkB4J,GAC5B,aAAU,mBAAkBo6B,EAAgB1uB,EAAS,IAAY,KAG1D8uB,EAA2B,CACtClC,EACA/3D,EACAmrC,EACA+uB,EACArkC,EAAgB,Y,MAEhB,MAAM,KACJr1B,EACA8kC,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GACrBriD,OAAO,MAAEu4D,EAAO95D,IAAK45C,GACrB7Y,YAAY,IACV63B,EAAG,SACHjyC,EACA0L,UAAY9wB,MAAOo4D,IAErBz0D,OAAQ4yD,EACRvyB,QAAQ,IAAExc,EAAG,OAAEK,GACf8b,KAAOzpB,IAAKkd,EAAU,IAAE9c,GAAK,aAC7B2pB,GACEkyB,EAEErzD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtD0jD,EAAclkD,IAA0C,QAA3B,EAAAA,EAAYkC,SAASqD,cAAM,eAAG,MAC3DkzD,EAAgB,YAAa,CACjCj4D,OACAyjD,kBACAv/C,kBACAu1C,cACAiK,gBAEI7J,EAAY75C,EACZk4D,EAAqB,OAAH,kEACnB,eACA,YAAkB1/B,EAAY9c,IAC9B,eAAqB,CACxB,gDAAiD,MAC9C,YAAqB1b,EAAM65C,EAAWl4C,EAAW63D,IAEhDI,EAAY,YAAa,IAAUtmD,WAAYtT,GAC/C65D,EAAiB,YAAkBH,GAEnCI,EAAgB,CACpB7pD,WAAY,UACZxO,KAAM,aACNC,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,wBAAOkzD,GAAkBN,GAC/B/kC,YAAaslC,GAEfv4D,KAAM,CACJo6D,SAAU,CACR3tB,YAAa,CACXuX,IAAK3jD,IAGTwmB,WACA2L,SAAU,CACRzwB,SAAU,CACRqD,OAAQ,OAAF,sCAAO80D,GAAmBlC,GAAeiC,IAEjDj6D,KAAM,CACJmlD,WAAY,C,eAER9kD,OACAoB,MAAUpB,EAAH,UACP25D,QACAlB,MACA1uD,UAAW,YAAsB,CAAE6e,MAAKK,YACrC,YAAcoc,SAOvBzE,EAAa,YAAU84B,EAAoBI,GAEjD,MAAgB,WAATzkC,EACH,aAAU,kBAAiBuL,GAC3B,aAAU,kBAAiBA,EAAY+J,EAAS,IAAY,KA+QrDqvB,EAA0B,CACrCz4D,EACAg2D,EACA/3D,EACAy6D,EACAtvB,GAAkB,EAClBtV,EAAgB,SAChBoiC,IAC+B,OAAD,6B,6CAC9B,MAAM,KACJz3D,GACA8kC,SAAW9kC,KAAM2B,IACjBwjC,OAAS+0B,OAAQC,GAAc,QAAEnoD,IACjC5Q,OAAO,MAAEu4D,IACTh0D,OACEwjB,SAAUuvC,GACVxmC,UAAYhmB,QAASkuD,IACrBC,OAAQrwC,IAEV4W,YACE1O,UAAY9wB,MAAOo4D,KAErBz0B,KAAOzpB,IAAKkd,GAAY91B,KAAMizB,GAAO,IAAEja,IAAK,SAC5CwI,GAAQ,UACRna,IACEwtD,EACErzD,GAAkB,IAAM1E,EAAa,iBACrC86D,GACmD,QAAvD,EAAkD,QAAlD,EAA6C,QAA7C,EAAqC,QAArC,EAA+B,QAA/B,EAAyB,QAAzB,EAAA7C,aAAY,EAAZA,EAAcx4B,mBAAW,eAAE31B,YAAI,eAAE3J,YAAI,eAAEuL,cAAM,eAAE65B,WAAG,eAAEw0B,WAAG,QACgC,QAAvF,EAA0C,QAA1C,EAAkC,QAAlC,EAA4B,QAA5B,EAAsB,QAAtB,EAAA9B,aAAY,EAAZA,EAAcvzC,gBAAQ,eAAE5a,YAAI,eAAE3J,YAAI,eAAEgQ,cAAM,eAAEuR,KAAM4N,GAA0B,cAAhBA,aAAK,EAALA,EAAO9uB,cAAoB,eACnF+uB,QACNkrC,UAA2B7C,EAAcG,EAASzyB,UAElD,MAAMy1B,GAA+B,GACrC,IAAI7C,GAAmC,GASvC,GAPE3tD,KAAc,IAAUwJ,gBACxB+mD,IACAA,KAAuB9hC,KAEvBk/B,GAA2B,GAAG13D,MAAQ,iBAGpC04D,KAAkB,oBAAkB8B,QAAS,CAC/C,GAAa,WAATnlC,EACF,MAAM,IAAItqB,MAAMxJ,EAAE,+CAEpB,MAvJkC,EACpCg2D,EACA5sB,EACA8sB,EACAC,EAAmC,KACJ,OAAD,6BAC9B,MAEM,KACJ13D,EACA8kC,SAAW9kC,KAAM2B,GACjBsjC,SAAS,0BAAEtb,EAAyB,mBAAE8wC,IACpClD,EAEEmD,EAAoDnsD,OAAOC,KAC/Dmb,GACAlb,OAAO,CAACtL,EAAgCmlD,K,QACxC,MAAMxkD,EAA4B6lB,EAA0B2+B,GAC5D,OAAKxkD,EAGE,OAAP,wBACKX,GAAG,CACN,CAACmlD,GAAe,OAAF,wBACTxkD,GAAQ,CACXpC,SAAU,OAAF,wBACHoC,EAASpC,UAAQ,CACpBkxB,YAAa,OAAF,wBACW,QAAjB,EAAA9uB,EAASpC,gBAAQ,eAAEkxB,aAAW,CACjCgyB,cAAe,SAEjB5kD,OACA2B,YACAoD,OAAQ,OAAF,wBACgB,QAAjB,EAAAjB,EAASpC,gBAAQ,eAAEqD,QAClB01D,EAAqB,CAAE,CAAC,KAAgBA,GAAuB,UAhBlEt3D,GAqBR,IAEGw3D,QAA4BrD,EAChCC,EACAmD,EAAuBl7D,YACvBmrC,EACA8sB,EAxCoB,SA0CpBC,GAGIkD,QAA4BtC,EAChCf,EACAmD,EAAuBl7D,YACvBmrC,EACA+vB,EAAuBG,cAjDH,SAmDpBnD,GAGIoD,QAA8BzC,EAClCd,EACAmD,EAAuBl7D,YACvB,UACAmrC,GAGIowB,QAA2BtB,EAC/BlC,EACAmD,EAAuBl7D,YACvBmrC,EACA+vB,EAAuBM,eAjEH,UAqEhBC,EACJP,EAAuBQ,gBAChB,aACL,eACA,YAAc3D,EAAUmD,EAAuBl7D,YAAak7D,EAAuBQ,SACnFvwB,EAAS,IAAY,KAGnBwwB,EACJT,EAAuBv1B,cAChB,aACL,aACA,YAAYoyB,EAAUmD,EAAuBl7D,YAAak7D,EAAuBv1B,OACjFwF,EAAS,IAAY,KAGnBywB,EAAmB,CACvBT,EACAC,EACAE,EACAC,GAMF,OAHAE,GAAwBG,EAAiB73D,KAAK03D,GAC9CE,GAAiBC,EAAiB73D,KAAK43D,GAEhCC,KAkDEC,CAAuB9D,EAAU5sB,EAAQ8sB,EAAcC,IAGhE,GAAIxzC,GAASxhB,OAAS,IAAawnB,MAAyB,QAAlB,EAAAqtC,aAAQ,EAARA,EAAUrzC,gBAAQ,eAAE0oB,SAAS,CACrE,MAAM0uB,EAA6B,QAAb,EAAA/D,aAAQ,EAARA,EAAUjyB,WAAG,eAAE9M,WAC/BzzB,EAASwyD,aAAQ,EAARA,EAAUxyD,OACnBiX,QAAa,YAA0Bs/C,EAAe35D,GAAWoD,EAAQ4lC,GAC/E4vB,GAAUh3D,KAAKyY,GAGjB,MAAM2+C,SAA4BrD,EAChCC,EACA/3D,EACAmrC,EACA8sB,EACAC,GAA2B,SAAWriC,EACtCqiC,IAIF,GAFA6C,GAAUh3D,KAAKo3D,IAEXz2C,GAAS0oB,SAAW1oB,GAASxhB,OAAS,IAAawnB,KACrD,IAAKygB,EAAQ,CACX,MAAM4wB,OAhQ2B,EACrChE,EACAiE,IAC+B,OAAD,6B,QAC9B,MAAMD,EAAoB,GAC1B,IAAKhE,EAAU,OAAOhtD,QAAQyV,QAAQ,IACtC,MAAM,KAAEhgB,EAAI,IAAE+kC,EAAG,SAAE7gB,EAAQ,QAAE4gB,EAAO,OAAEE,EAAM,MAAE5jC,EAAK,MAAEuE,EAAK,OAAEZ,GAAWwyD,EACvE,IAAIkE,EACJ,MAAM1gC,EAAqC,QAAtB,EAAAygC,aAAY,EAAZA,EAAc95D,gBAAQ,eAAE1B,KAE7C,GAAK,IAAUw7D,IAAiBzgC,IAAiB/6B,GAc1C,GAAIkkB,EAASiO,SAAU,CAC5BspC,QAAwB,YACtBz7D,EACA8kC,EAAQ9kC,KACR+kC,EAAIzpB,IACJypB,EAAIrpB,IACJqpB,EAAIykB,IACJtlC,EACA8gB,EAAOppB,eACPxa,EAAMvB,IACN8F,EAAM8yD,IACN1zD,GAEFw2D,EAAkBh4D,KAAKk4D,GACvB,IACE,MAAMC,QAAyB,YAAcD,EAAiB12B,EAAI42B,cAClEJ,EAAkBh4D,QAAQm4D,GAC1B,MAAO/3D,GAEP+d,QAAQC,KAAK,wCAAyChe,UAhCxD83D,QAAwB,YACtBD,EACAt3C,EAASiO,SACTnyB,EACA8kC,EAAQ9kC,KACR+kC,EAAIzpB,IACJypB,EAAIrpB,IACJqpB,EAAIykB,IACJxkB,EAAOppB,eACPxa,EAAMvB,IACN8F,EAAM8yD,IACN1zD,GAyBJ,GAAIggC,EAAIh5B,OAAQ,CACd,MAAMA,QAAe,aAAO,cAAag5B,EAAIh5B,OAAQ+4B,EAAQ9kC,MACvD4I,EAAS,EAAYm8B,EAAIzpB,KAC/BvP,EAAOrK,SAASkxB,YAAc,YAC5B,CACE/uB,IAAK,MACLvB,MACsB,QAApBsG,EAAOuvC,SAAqBvvC,EAAO9E,SAAW,GAAG8E,EAAOuvC,cAAcvvC,EAAO9E,YAEjFiI,EAAOrK,SAASkxB,mBAEZ,aAAU,cAAa7mB,EAAQ+4B,EAAQ9kC,MAE7C,MAAM47D,QAA+B,aACnC,sBACA,IACA92B,EAAQ9kC,WAEmE2mB,IAAzE,IAAOi1C,EAAuB7rC,QAAUve,GAAMA,EAAExR,OAAS+kC,EAAIh5B,gBACzD,YAAqBg5B,EAAIh5B,OAAQ6vD,GAAwB,IAInE,GAAI,IAA+B,QAAzB,EAAAH,aAAe,EAAfA,EAAiB/5D,gBAAQ,eAAEqD,OAAQ,8BAC3C,IACE,MAAM4d,QAAoB,YAA+B84C,GACzDF,EAAkBh4D,KAAKof,GACvB,MAAOhf,GAEP+d,QAAQ2qB,IAAI,+CAAgD1oC,GAC5D,YAAsB83D,EAAgB/5D,SAAS1B,KAAMy7D,EAAgB/5D,SAASC,WAGlF,OAAO4I,QAAQS,IAAIuwD,MAgLiBM,CAC9BtE,EACsB,QAAtB,EAAAE,aAAY,EAAZA,EAAcvzC,gBAAQ,eAAE5a,MAE1BixD,GAAUh3D,QAAQg4D,SAEXvxC,KAAgB,IAAavW,OACtC8mD,GAAUh3D,WACF+0D,EACJf,EACA/3D,EACAmrC,EACyB,QAAzB,EAAA8sB,aAAY,EAAZA,EAAcx4B,mBAAW,eAAE31B,KAC3BouD,GAA2B,SAAWriC,EACtCqiC,KAGK1tC,KAAgB,IAAatW,kBACtC6mD,GAAUh3D,UAzpB+B,EAC3Cg0D,EACA/3D,EACAmrC,EACAmxB,EACAzmC,EAAgB,SAChBqiC,EAAmC,M,MAEnC,MAAM,KACJ13D,EACA8kC,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GACrB1e,KAAOzpB,IAAKkd,EAAU,IAAE9c,EAAM,SAAU8tC,IAAK9gD,EAAYqD,OAAQ4jB,GACjEqV,QAAQ,eAAEppB,GACVxa,OAASvB,IAAK45C,EAAW,SAAE+e,GAC3B7yD,OAAO,IAAE8yD,EAAKtvC,SAAUuvC,EAAa,qBAAEqD,GACvCh3D,OAAQ4yD,GACNJ,EAEErzD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDg8D,EAAwBx8D,IAAiC,QAAlB,EAAAA,EAAY0D,cAAM,eAAE+4D,uBAE3DhE,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBACvEye,EAAqB,OAAH,wBAAQ,YAAkB1/B,EAAY9c,IAAS,eAEjEm9C,EAAeL,EAAWjqD,OAAOC,KAAKgqD,GAAY,GAClDM,EAAaD,EAChBrvD,OAAQ8N,KAAQkhD,EAASlhD,IACzBoF,IAAKpF,IAAM,CAAGtX,KAAMsX,EAAGhV,MAAOk2D,EAASlhD,MACpC63B,EAAYspB,EAAIjvD,OAAQuvD,IAAcF,EAAa3vD,SAAS6vD,EAAS/4D,OAE3E,IAAIk8D,EAAsB,GAE1B,OAAQxD,GACN,KAAK,oBAAkByD,OACrBD,EAAsB,CACpB,CACEl8D,KAAM,aACNsC,MAAOsZ,IAGX,MACF,KAAK,oBAAkBwgD,OACrBF,EAAsB,CACpB,CACEl8D,KAAM,gBACNsC,MAAO,GAAG05D,KAAyBviB,MAM3C,MAAM4iB,EACK,WAAThnC,GAAsB,IAAUymC,GAE5B97D,EADA87D,EAAwBp6D,SAASqD,OApCpB,0BAuCbu3D,EAAqB,CACzBrsD,WAAY,wBACZxO,KAAM,QACNC,SAAU,CACR1B,KAAM03D,GAA4B2E,EAClC16D,YACAoD,OAAQ,OAAF,sCAAOkzD,GAAkBN,GAAU,CAAE,yBAAc0E,IACzDzpC,YAAaslC,GAEfv4D,KAAM,CACJuL,OAAQ,CACNxI,KAAM,MACNqiC,IAAK,OAAF,QACDzpB,IAAKkd,EACL8wB,SAAU5tC,GACNiU,EAAa,CAAE4sC,YAAa5sC,GAAe,IAEjDjnB,cAEF+vD,IAAK,IAAIK,KAAe3pB,GACxBhmB,SAAU,CACRnpB,KAAM+7D,EACNt6D,KAAM,wBAER+6D,YAAaN,EACbxtD,OAAQ,CACNtN,MAAO,GAAG,OAAgCO,KACxC+1D,GAA4B2E,cAM9BI,EAAkB,YAAUX,EAAyBQ,GAI3D,MAHa,WAATjnC,IACFonC,EAAgB/6D,SAAS1B,KAAO87D,EAAwBp6D,SAAS1B,MAEnD,WAATq1B,EACH,aAAU,IAAsBonC,GAChC,aAAU,IAAsBH,EAAoB3xB,EAAS,IAAY,KA0jBnE+xB,CACJnF,EACA/3D,EACAmrC,EAC6B,QAA7B,EAAA8sB,aAAY,EAAZA,EAAcgF,uBAAe,eAAEnzD,KAC/BouD,GAA2B,SAAWriC,EACtCqiC,KAYN,GAPa,WAATriC,IACFklC,GAAUh3D,WAAW80D,EAAoBd,EAAU/3D,EAAa,UAAWmrC,IACvEyvB,IACFG,GAAUh3D,WAAW80D,EAAoBd,EAAU/3D,EAAam2B,GAASgV,KAIzE4sB,EAASxtD,YAAc,IAAUwJ,eAAgB,CACnD,MAAMopD,EAAiBhC,GAAoBz3D,OAAO+4D,sBAE5CW,GAAmE,QAA7C,GAAmC,QAAnC,GAA6B,QAA7B,GAAAnF,aAAY,EAAZA,EAAcoF,uBAAe,iBAAEvzD,YAAI,iBAAE5H,gBAAQ,iBAAEkxB,cAAe,GACpFkqC,EAAqB,YACzB98D,GACA03D,IAA4B13D,GAC5B2B,GACA63D,IAEI5mC,EACJrkB,OAAOC,KAAKouD,GAAqBhzD,OAAS,EACtC,OAAD,sCACMgzD,GACA,YAAkBpkC,GAAY9c,KAC9BohD,GAEL,OAAD,kEACMF,GACA,eACA,eACA,YAAkBpkC,GAAY9c,KAC9BohD,GAELC,EAAuB,YAC3BxF,EACAoF,EACAz4D,QACAyiB,OACAA,EACAiM,EACA,IAAM6kC,EAAc,wBACpBC,IAEIsF,QAA+B,YACnCzF,EACAwF,EACApyB,GAQF,MAAO,UANwBpgC,QAAQS,IAAI,CAChC,WAATqqB,EACI,aAAU,IAAgB0nC,EAAsB,KAAM,KAAMpyB,EAAS,IAAY,IACjF,aAAU,IAAgBoyB,EAAsBpyB,EAAS,IAAY,OACtEqyB,OAE2BzC,IAyBlC,GAtBIhD,EAASxtD,YAAc,IAAUuJ,WACnCinD,GAAUh3D,WACFk2D,EACJlC,EACA/3D,EACAmrC,EACA,IAAM8sB,EAAc,wBACpBpiC,IAGKkiC,EAASxtD,YAAc,IAAUqJ,WAC1CmnD,GAAUh3D,UAjbgC,EAC5Cg0D,EACA/3D,EACAmrC,EACAsyB,EACA5nC,EAAgB,YAEhB,MAAM,KACJr1B,EACA8kC,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GACrBriD,OAAO,MAAEu4D,EAAO95D,IAAK45C,GACrB7Y,YAAY,IAAE63B,EAAG,SAAEjyC,EAAQ,SAAE0L,GAC7BntB,OAAQ4yD,EACRvyB,QAAQ,IAAExc,EAAG,OAAEK,GACf8b,KAAOzpB,IAAKkd,EAAU,IAAE9c,GAAK,aAC7B2pB,GACEkyB,EAEErzD,EAAkB1E,GAAeA,EAAYkC,SAAS1B,KACtDi4D,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBACvEye,EAAqB,OAAH,sCACnB,eACA,YAAkB1/B,EAAY9c,IAC9B,eAECk+C,EAAY,YAAa,IAAUxmD,UAAWpT,GAC9C65D,EAAiB,YAAkBoD,GAEnCC,EAAsB,CAC1BjtD,WAAY,uBACZxO,KAAM,mBACNC,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,wBAAOkzD,GAAkBN,GAC/B/kC,YAAaslC,GAEfv4D,KAAM,CACJo6D,SAAUH,EACVpzC,WACA2L,SAAU,CACRzwB,SAAU,CACRqD,OAAQ,OAAF,sCAAO80D,GAAmBlC,GAAeiC,IAEjDj6D,KAAM,CACJmlD,WAAY,C,eAER9kD,OACAoB,MAAUpB,EAAH,UACP25D,QACAlB,MACA1uD,UAAW,YAAsB,CAAE6e,MAAKK,YACrC,YAAcoc,OAKzBnT,SAAU,CACR,CACExvB,KAAM,cACNy6D,kBAAmB,CACjBC,UAAWlrC,EAAS9wB,MACpBi8D,eAAgB,CAACr9D,GACjBkB,KAAM,CACJO,KAAM,iBACNzB,KAASA,EAAH,gBAIRkyB,EAASvU,OAAS,CAAC,CAAEjb,KAAM,iBAAoB,MAInD46D,EAAmB,YAAUL,EAA0BC,GAE7D,MAAgB,WAAT7nC,EACH,aAAU,wBAAuBioC,GACjC,aAAU,wBAAuBA,EAAkB3yB,EAAS,IAAY,KAoWlE4yB,CACJhG,EACA/3D,EACAmrC,EACA,IAAM8sB,EAAc,wBACpBpiC,KAMH,IAAUskC,KACXjB,KAAkB,oBAAkByD,QACpCzD,KAAkB,oBAAkB0D,OACpC,CACA,MAAMoB,EAAkB,IAAM/F,EAAc,gBACtCyD,EAAU,YAAc3D,EAAU/3D,EAAag+D,GAExC,WAATnoC,EACFklC,GAAUh3D,WAAW,aAAU,eAAc23D,EAASvwB,EAAS,IAAY,KACzD,WAATtV,GAAsB,IAAUmoC,IACzCjD,GAAUh3D,WAAW,aAAU,eAAc23D,IAG/C,MAAMuC,EAAgB,IAAMhG,EAAc,cACpCtyB,EAAQ,YAAYoyB,EAAU/3D,EAAai+D,GACpC,WAATpoC,GAAqBrjB,GACvBuoD,GAAUh3D,WAAW,aAAU,aAAY4hC,EAAOxjC,GAAW3B,KACpDm6D,IACTI,GAAUh3D,WAAW,aAAU,aAAY4hC,EAAOwF,EAAS,IAAY,KAI3E,OAAO4vB,MAGImD,EAA2B3zD,GACtCA,EAAUP,OACP1F,GACCA,EAASrC,OAAS,kBAAgBA,MAClCqC,EAASrC,OAAS,wBAAsBA,MACvCqC,EAASrC,OAAS,IAAeA,MAChCqC,EAASmM,aAAe,GAAG,IAAeqa,YAAY,IAAera,cAiBhE0tD,EAAiB,CAC5B74B,EACA84B,EACAC,EACAC,IACG,OAAD,6BACF,MAAMC,EAAkBF,EAAsB38C,KAAM7W,GAASA,EAAK02C,WAAWz7C,KAAOs4D,GAC9EI,SAAqBD,EAAgBhd,WAAWkd,qBAAqBn5B,GAEvEg5B,EACF,KAAQv6D,KAxBgC,EAC1C+X,EACA4iD,KAEA,MAAMC,EAAS,IAAIC,IAAI9iD,EAAK,iBAO5B,OALA6iD,EAAOE,OAAS,IAAIC,gBAAgB,OAAD,wBAC9B/vD,OAAOgwD,YAAYJ,EAAOD,eACzBA,EAAe3vD,OAAOgwD,YAAYL,GAAgB,KACrDzxD,WAEI0xD,EAAO1xD,WAAWxD,QAAQk1D,EAAOhmB,SAAU,KAanCqmB,CAA6BR,EAAaF,IAEvD,KAAQv6D,KAAKy6D,MAIJS,EAAwB,CACnC/7D,EACAg8D,EACAC,K,MAEA,GAAIj8D,IAAS,IAAU6Q,gBAAkBmrD,EAAW,CAClD,GAAMA,EAAUn2C,UAAcm2C,EAAU5hD,OAAS4hD,EAAUr2C,OAAQ,OAAO,EAC1E,GAAIq2C,aAAS,EAATA,EAAW5xD,IACb,IAAK,MAAM8xD,KAAUF,EAAU5xD,IAC7B,GAAI4xD,EAAU5xD,IAAIk4C,eAAe4Z,GAAS,CACxC,GACE,CAAC,gBAAiB,cAAe,2BAA4B,OAAO11D,SAAS01D,IAC3EF,EAAU5xD,IAAI8xD,GAEhB,OAAO,EACT,GAAe,kCAAXA,GAAwE,SAA1BF,EAAU5xD,IAAI8xD,GAC9D,OAAO,EACT,GAAe,gBAAXA,GAAsD,cAA1BF,EAAU5xD,IAAI8xD,GAAyB,OAAO,EAIpF,OAAO,EAET,OAA+B,QAA3B,EAAAD,EAAc32C,qBAAa,eAAEpe,QAAS,GAI/Bi1D,EAAsB,CACjCn8D,EACAo8D,EACAC,KAEA,GAAIr8D,IAAS,IAAU6Q,iBAAkBurD,aAAW,EAAXA,EAAat4C,UAAW,EAC/D,OAAO,EAET,MAAMw4C,EAAkBD,aAAQ,EAARA,EAAU53C,QAClC,GAAI63C,EACF,IAAK,MAAMC,KAASD,EAClB,GAAIA,EAAgBha,eAAeia,GAAQ,CACzC,GAAI,CAAC,mBAAoB,UAAW,WAAW/1D,SAAS+1D,IAAYD,EAAgBC,GAClF,OAAO,EACT,GACY,sBAAVA,GACAD,EAAgBC,KAAWD,EAAgBE,yBAE3C,OAAO,EACT,GACY,2BAAVD,GACAD,EAAgBC,KAAWD,EAAgBG,8BAE3C,OAAO,EACT,GAAc,cAAVF,GAAyBD,EAAgBC,GAAQ,CACnD,MAAMG,EAAgBJ,EAAgBC,GACtC,IAAK,MAAMI,KAASD,EAClB,GAAIA,EAAcpa,eAAeqa,GAAQ,CACvC,GACY,oBAAVA,GACAD,EAAcC,KAAWD,EAAcE,uBAEvC,OAAO,EACT,GACY,wBAAVD,GACAD,EAAcC,KAAWD,EAAc31B,2BAEvC,OAAO,IAOrB,OAAO,GAGI81B,EAA6BC,IACxC,MAAMC,EAAeC,IACnB,IAAK,MAAMC,KAAYD,EACrB,GAAIA,EAAY1a,eAAe2a,GAAW,CACxC,GAAI,CAAC,QAAS,WAAWz2D,SAASy2D,IAAeD,EAAYC,GAAW,OAAO,EAC/E,GAAiB,cAAbA,GAA4BD,EAAYC,KAAcD,EAAYE,iBACpE,OAAO,EACT,GAAiB,gBAAbD,GAA8BD,EAAYC,KAAcD,EAAYG,mBACtE,OAAO,EAGb,OAAO,GAGT,SAAIJ,EAAYD,EAAU52C,OAAQ62C,EAAYD,EAAUv2C,UAI7C62C,EAAsBtgD,I,kEACjC,IAAKA,EAAQ,MAAO,GAEpB,IAAIugD,GACc,QAAd,EAAAvgD,EAAOylB,eAAO,eAAExb,kBAClBs2C,EAAc,YAAavgD,EAAOylB,QAAQxb,iBAE5C,MAAM4K,IACgB,QAAlB,EAAA7U,EAAOjW,mBAAW,eAAEwL,eAAiC,QAAlB,EAAAyK,EAAOjW,mBAAW,eAAEvJ,QACvC,QAAlB,EAAAwf,EAAOjW,mBAAW,eAAEwL,gBAAkC,QAAlB,EAAAyK,EAAOjW,mBAAW,eAAEvJ,MACpD,WACkB,QAAlB,EAAAwf,EAAOjW,mBAAW,eAAEwL,eAAgB,MAA8C,QAAlB,EAAAyK,EAAOjW,mBAAW,eAAEvJ,MACpF,SACA,OACAsoD,EACJ9oC,EAAOzV,YAAc,IAAUuJ,WAC3B,aACAkM,EAAOzV,YAAc,IAAUqJ,UAC/B,mBACAoM,EAAOzV,YAAc,IAAUwJ,gBAAkB,kBACjDysD,EAA6C,QAA/B,EAAa,QAAb,EAAAxgD,EAAOygD,cAAM,eAAEC,wBAAgB,eAAElgE,KA6CrD,MA5C4B,CAC1BmgE,gBAA4B,QAAZ,EAAA3gD,EAAOpe,aAAK,eAAEg/D,gBAA4B,QAAZ,EAAA5gD,EAAOpe,aAAK,eAAEsjB,UAC5D27C,oBAAuD,QAAlC,EAAa,QAAb,EAAA7gD,EAAOygD,cAAM,eAAEI,2BAAmB,eAAErgE,KACzDsgE,wBAAqC,QAAZ,EAAA9gD,EAAOpe,aAAK,eAAEg/D,YACvCj3C,SAAU62C,EACVhgC,aAA0B,QAAZ,EAAAxgB,EAAOpe,aAAK,eAAEsjB,SAE5B67C,iBAAsC,QAArB,EAAAR,aAAW,EAAXA,EAAar+D,gBAAQ,eAAE8+D,cAAe,GACvDC,oBAAyC,QAArB,EAAAV,aAAW,EAAXA,EAAar+D,gBAAQ,eAAEie,WAAY,GAEvDpW,YAAa8qB,EAEbvwB,SAAUwkD,EAEVoY,qBAAiC,QAAZ,EAAAlhD,EAAO2lB,aAAK,eAAE3c,mBAGnCm4C,iBAAuC,QAAtB,EAAY,QAAZ,EAAAnhD,EAAOpe,aAAK,eAAEo3D,gBAAQ,eAAEoI,SAEzCC,sBAA0C,MAAnBrhD,EAAOulB,IAAIykB,OAAiBhqC,EAAOulB,IAAIrpB,OAAS8D,EAAOulB,IAAIh5B,OAElF+0D,yBACc,QAAZ,EAAAthD,EAAO7Z,aAAK,eAAE8yD,IAAI7uD,QAAS,GAAK,IAAmB,QAAZ,EAAA4V,EAAO7Z,aAAK,eAAEusB,SAAWruB,IAASA,GAC3Ek9D,6BACkB,YAAhBf,KACkB,QAAjB,EAAAxgD,EAAOohB,kBAAU,eAAE63B,IAAI7uD,QAAS,KAAiC,QAA3B,EAAiB,QAAjB,EAAA4V,EAAOohB,kBAAU,eAAE1O,gBAAQ,eAAE9wB,QACtE4/D,wBAAyBvC,EACvBj/C,EAAOzV,UACPyV,EAAO2lB,MACP3lB,EAAO0lB,YAET+7B,gCACoC,QAAlC,EAAmB,QAAnB,EAAAzhD,EAAO6lB,oBAAY,eAAEsI,qBAAa,eAAEf,WACD,QAAnC,EAAmB,QAAnB,EAAAptB,EAAO6lB,oBAAY,eAAEqI,sBAAc,eAAEd,WACJ,QAAjC,EAAmB,QAAnB,EAAAptB,EAAO6lB,oBAAY,eAAEuI,oBAAY,eAAEhB,SACrCs0B,0BAA2BrC,EACzBr/C,EAAOzV,UACPyV,EAAOohB,WACPphB,EAAO0lB,YAETi8B,iCAAkC5B,EAA0B//C,EAAO4lB,QACnEg8B,0BAA2B,IAAU5hD,EAAOza,W,yiBCnnChD,MAAMuuB,EAAc,CAACtzB,EAAc2B,IAC1B,oDAAoDA,KAAa3B,IAgB7DqhE,EAAoB,CAC/B1xD,EACA3P,EACA2B,EACAiH,EACAo7C,EACAsd,EACA1lD,EACA/b,EACAk5D,KAEQppD,GAAU,IAAI+M,IAAKoS,IACzB,OAAQA,EAAM9uB,MACZ,IAAK,WACH,OAAO,OAAP,wBAAY8uB,GAAK,CAAEC,QAAS/uB,IAC9B,IAAK,WACH,OAAO,OAAP,wBAAY8uB,GAAK,CAAEC,QAASnmB,IAC9B,IAAK,eACH,OAAO,OAAP,wBAAYkmB,GAAK,CAAEC,QAASi1B,GAAU,KACxC,IAAK,eACH,OAAO,OAAP,wBAAYl1B,GAAK,CAAEC,QAASuyC,EAAOr4D,QAAQ,MAAO,KAAO6lB,EAAMC,UACjE,IAAK,aACH,OAAO,OAAP,wBAAYD,GAAK,CAAEC,QAASuE,EAAYtzB,EAAM2B,KAChD,IAAK,aACH,OAAO,OAAP,wBAAYmtB,GAAK,CAAEC,QAASnT,IAC9B,IAAK,UACH,OAAO,OAAP,wBAAYkT,GAAK,CAAEC,QAASlvB,GAAOivB,EAAMC,UAC3C,IAAK,aACH,OAAO,OAAP,wBAAYD,GAAK,CAAEC,QAASgqC,GAAYjqC,EAAMC,UAChD,QACE,OAAOD,KAcFyyC,EAAoBpvC,IAAmC,QAClE,MAA0D,YAAhC,QAA1B,EAAkB,QAAlB,EAAAA,aAAQ,EAARA,EAAUzwB,gBAAQ,eAAEqD,cAAM,eAAG,OAElBy8D,EAA8B,CACzCxhE,EACA2B,EACAiH,EACAo7C,EACAsd,EACAp9C,EACAtI,EACA/b,EACAk5D,EACAh0D,EAAoC,KACjC,OAAD,6B,MACF,MAAMotB,EAAW,IAAYjO,EAASiO,UA8BtC,OA5BAA,EAASzwB,SAAW,CAClB1B,KAAM,GAAGA,EACT2B,YACAoD,OAAQ,OAAF,oDACgB,QAAjB,EAAAotB,EAASzwB,gBAAQ,eAAEqD,QACnBA,GAAM,CACT,6BAA8B/E,EAC9B,yBAA0BA,KACrBuhE,EAAiBpvC,IAAa,CACjC,CAAC,KAAiCtyB,KAKxCsyB,EAASxyB,KAAKgQ,OACZwiB,EAASxyB,KAAKgQ,QACd0xD,EACElvC,EAASxyB,KAAKgQ,OACd3P,EACA2B,EACAiH,EACAo7C,EACAsd,EACA1lD,EACA/b,EACAk5D,GAGG,aAAU,gBAAe5mC,EAAU,CAAE5vB,GAAIZ,OAGrC8/D,EACXv9C,GAC6B,OAAD,6B,QAC5B,MAAMw9C,EACqD,UAA/B,QAA1B,EAAkB,QAAlB,EAAAx9C,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEqD,cAAM,eAAG,yBACzB48D,EAAqB,+BACtB,YAA2Bz9C,IAAS,CACvCo6B,YAAap6B,EAASvkB,KAAK2+C,YAAc,IAAI5hC,IAAKwS,I,QAA+B,sCAC5EA,GAAS,CACZxsB,KAAM,IAAYk/D,oBAClBt4D,KAAMo4D,EACF,YAAoE,QAAlB,EAAAx9C,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAE1B,MACtE,YAAgD,QAAlB,EAAAkkB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAE1B,UAExD6hE,YAAY,IAEd,OAAO,YAAoBF,EAAuBz9C,MAEvC49C,EAA8B,CACzC59C,EACAiO,EACAnyB,EACA2B,EACAiH,EACAo7C,EACAsd,EACA1lD,EACA/b,EACAk5D,EACAh0D,EAAoC,KACV,OAAD,6B,MACzB,IAAIg9D,EAAkB,IAAY79C,GAoClC,OAlCKiO,GA1FwC,EAC7CA,EACAjO,K,YAEA,OAAiB,QAAjB,EAAAiO,EAASzwB,gBAAQ,eAAEqD,OAAO,SACP,QAAjB,EAAAmf,EAASxiB,gBAAQ,eAAEqD,OAAO,QACX,QAAjB,EAAAotB,EAASzwB,gBAAQ,eAAEqD,OAAO,SACP,QAAjB,EAAAmf,EAASxiB,gBAAQ,eAAEqD,OAAO,OAyFtBi9D,CAAgC7vC,EAAUjO,KAC5C69C,EAAkB,IAAY5vC,GAC9B4vC,EAAgBrgE,SAAW,CACzBugE,gBAAiB/9C,EAASxiB,SAASugE,gBACnCjiE,KAAM,GAAGA,EACT2B,YACAoD,OAAQ,OAAF,oDACgB,QAAjB,EAAAotB,EAASzwB,gBAAQ,eAAEqD,QACnBA,GAAM,CACT,6BAA8B/E,EAC9B,yBAA0BA,KACrBuhE,EAAiBpvC,IAAa,CAAE,CAAC,KAAiCtyB,MAK7EkiE,EAAgBpiE,KAAKgQ,OAAS0xD,EAC5BlvC,EAASxyB,KAAKgQ,OACd3P,EACA2B,EACAiH,EACAo7C,EACAsd,EACA1lD,EACA/b,EACAk5D,IA9BFgJ,EAAgBrgE,SAASqD,OAAS,IAAO,OAAD,wBACjCg9D,EAAgBrgE,SAASqD,QAAWA,GACzC,8BA+BG,aAAU,gBAAeg9D,EAAiBpgE,EAAW3B,O,ihBCnLvD,MAAM0qC,EAAY,CAAEzV,YAAa,CAAE0V,OAAQ,QACrCu3B,EAA+B,CAC1C3K,EACA4K,EACAj+D,EACAk+D,EACAle,EACAtxB,EACAyvC,EACA3K,K,QAEA,MAAM,KACJ13D,EACAuJ,aAAevJ,KAAMyjD,GACrB3e,SAAW9kC,KAAM2B,GAAW,YAC5B+hD,EACAxe,YAAY,QAAE/d,GAAS,OACvBie,EACAD,OAAO,kBAAE3c,EAAiB,OAAE0xC,EAAM,mBAAEoI,GAAoB,OACxDv9D,EACA3D,OAASvB,IAAK85C,GACd/Y,YAAY,IACV63B,EACAvmC,UAAY9wB,MAAOmhE,IACpB,aACDl9B,EAAY,UACZt7B,EAAS,SACTy4D,GACEjL,GACE,WAAEkL,GAAelL,EACjB2I,EAAmC,QAAhB,EAAA3I,aAAQ,EAARA,EAAU0I,cAAM,eAAEC,iBAErCwC,EAAiBxqB,SAAS1vB,EAAmB,KAAO85C,EACpDK,EAAgBJ,EAAc,IAAgBK,OAAS,IAAgBC,cACvE,iBACJp7C,EAAgB,kBAChBD,EAAiB,QACjBJ,EAAO,QACPC,EACAM,WAAW,gBAAEC,EAAe,oBAAEC,GAAqB,uBACnDH,GACEP,GAEFyB,KACEC,QAASi6C,EACTh6C,YAAai6C,EACbz7C,MAAO07C,EACPj6C,UAAWk6C,GAEbh6C,QACEJ,QAASq6C,EACTp6C,YAAaq6C,EACb77C,MAAO87C,EACPr6C,UAAWs6C,IAEXj+B,EACEk+B,EAAe,YAAa,CAChCtjE,OACAyjD,kBACAv/C,kBACAu1C,YAAa2oB,GAAkBzoB,EAC/Bh4C,UAAWuiD,EACXR,gBAGF,UADO4f,EAAa3f,IAChB8e,EAAY,CACd,MAAMc,EAAa9K,aAAG,EAAHA,EAAK+K,UAAWz1D,GAAiB,cAAXA,EAAE/N,OACvB,IAAhBujE,EAC0B,KAAxBd,EAAWgB,SACZhL,EAAI8K,GAA8BjhE,MAAQmgE,EAAWgB,SAEtDhL,EAAIzgD,OAAOurD,EAAY,GAEQ,KAAxBd,EAAWgB,UACpBhL,EAAIl1D,KAAK,CAAEvD,KAAM,YAAasC,MAAOmgE,EAAWgB,WAGpD,MAAMC,EAA4C,CAChDjiE,KAAM,IAAaA,KACnBwO,WAAY,GAAG,IAAaqa,YAAY,IAAara,aACrDvO,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,gFACDu+D,GACAv+D,GACc,uBAAby9D,GAAqC,CAAE,uBAAwB,UAC9DtI,GAAU,CAAE,oCAAqC,oBACT,QAAxC,EAAC3C,EAA+BrzC,gBAAQ,eAAE0oB,UAAW8qB,IAA6B,CACrF,yBAA0B13D,IAExBkgE,IACFA,aAAgB,EAAhBA,EAAkBx9D,QAAS,IAAe21B,qBAAuB,CAC/D,uBAAwB,SAG9BzF,YAAa6vC,EAAa,OAAD,wBAAM7vC,GAAW,CAAE+wC,YAAalB,EAAWziE,OAAS4yB,GAE/EjzB,KAAM,CACJwyB,SAAU,CACRzwB,SAAU,CACRqD,OAAQ,OAAF,sCACDu+D,GACAv+D,GAAM,CACT,yBAA0B2yD,EACtBH,EAASv3D,KACT+E,EAAO,4BAEb6tB,YAAa,OAAF,kEACLpL,GAAqB,CACvB,iCAAkC,GAAGA,IAEnCJ,GAAW,CAAE,oCAAqC,GAAGA,IACrDC,GAAW,CAAE,oCAAqC,GAAGA,IACrDO,GAAmB,CACrB,iCAAkC,GAAGA,IAAkBC,MAErDH,GAA0B,CAC5B,wDAAyD,GAAGA,KAIlE/nB,KAAM,OAAF,wBACE8nB,GAAoB,CAAEm8C,qBAAsBn8C,IAAmB,CACnEq9B,WAAY,C,2CAER9kD,OACAoB,MAAO,GAAG+gE,GACNO,GAAkB,CACpB/I,MAAO,CACL,CACEpwC,cAAem5C,MAGnB,CACFmB,gBAAiBlB,EACjBmB,gBAAiB,CACfC,0BAA0B,EAC1BC,aAAc,CACZC,KAAM,CAAC,QAETC,cAAc,EACdC,eAAgB,CACdzhE,KAAM,mBAGV+1D,MACA1uD,UAAW,OAAF,yBACFi5D,GAAYI,IAAgB,CAC/Bh+B,OAAQ,OAAF,wBACA49B,GAAY,CAAEp6C,IAAK,GAAGo6C,IAAWC,MACjCG,GAAe,CAAEn6C,OAAQ,GAAGm6C,IAAcC,SAG7CP,GAAcI,IAAkB,CACnCptC,SAAU,OAAF,wBACFgtC,GAAc,CAAEl6C,IAAK,GAAGk6C,IAAaC,MACrCG,GAAiB,CAAEj6C,OAAQ,GAAGi6C,IAAgBC,UAIrD,YAAc99B,EAAct7B,UAO3C,IAAIq6D,GAAwB,GACvB,IAAU/B,KACb+B,GAAwB,IAAO/B,EAAwB,CACrD,SACA,8BACA,mCAKJ,OAF8B,YAAU+B,IAAyB,GAAIV,IAmBjEW,EAA0B,CAC9BrkE,EACAskE,EACAC,KAEA,MAAM,KACJ9iE,EAAI,WACJwO,EACAvO,UAAY1B,KAAMwkE,EAAO,UAAE7iE,IACzB2iE,EACJ,OAAO,OAAP,wBACMC,EACA,OAAD,UAAMA,GACL,CACE9iE,KAAM,IAAmBA,KACzBwO,WAAY,GAAG,IAAmBqa,YAAY,IAAmBra,aACjEvO,SAAU,CACR1B,OACA2B,eAEF,CACNhC,KAAM,CACJ+b,IAAK,CACH1b,KAAMwkE,EACN/iE,OACAwO,kBAMKw0D,EAA4B,CACvCH,EACAI,KAEA,MACEhjE,UAAU,KAAE1B,EAAI,UAAE2B,IAChB2iE,EACEtH,EAAyB,GAC/B,OAAO,aAAO,IAAoB,KAAMr7D,GACrCuM,KAAMq0B,IACL,MAAMoiC,EAAuBpiC,EAAI1tB,MACjC,KAAK6vD,aAAqB,EAArBA,EAAuB96D,WAAW+6D,aAAoB,EAApBA,EAAsB/6D,QAC3D,OAAOW,QAAQyV,QAAQ,IAIzB,MAAM4kD,GA5DVC,EA6DM7kE,EA3DN8kE,EA6DMJ,EADAC,EAzDHn7D,OAAQu7D,IAAS,QAAC,OAAe,QAAf,EAAU,QAAV,EAAAA,EAAMplE,YAAI,eAAE+b,WAAG,eAAE1b,QAAS6kE,IAC5Cr7D,OAAQw7D,KAAWF,aAAqB,EAArBA,EAAuB57D,SAAS87D,EAAMtjE,SAAS1B,QAClE0c,IAAKuoD,IAAU,CACdC,OAAQ,IAA4BC,OACpCrhE,SAAUmhE,MAVmB,IACjCJ,EAEAC,EA+DI9H,EAAuBz5D,QAAQqhE,GAG/B,MAAMQ,EAAqBV,EAAsBhoD,IAAKyL,IACpD,MAAMo8C,EAAmBI,EAAqBzjD,KAC3CmkD,GAAcA,EAAU3jE,SAAS1B,OAASmoB,GAE7C,IAAIm9C,EAYJ,OAVEA,EADEf,EAC0B,CAC1BW,OAAQ,IAA4BK,OACpCzhE,SAAUugE,EAAwBl8C,EAAYm8C,EAAoBC,IAGxC,CAC1BW,OAAQ,IAA4BM,OACpC1hE,SAAUugE,EAAwBl8C,EAAYm8C,IAG3CgB,IAIT,OAFAtI,EAAuBz5D,QAAQ6hE,GAExBpI,IAER5sC,MAAOnf,IAENyQ,QAAQ2qB,IAAI,yCAA0Cp7B,GAC/C+rD,KAIAyI,EAA2B,CACtClO,EACA+M,EACA35B,IACwC,OAAD,6BACvC,MACEzF,YAAcld,cAAe08C,EAAwB,KACnDnN,EACEyF,QAA+ByH,EAA0BH,EAAoB,IAC9E,IAAIp6B,IAAIw6B,EAAsBhoD,IAAKktB,GAAOA,EAAG3gC,QAAQ,iBAAkB,QAEtE6sB,EAAuC,GAiB7C,OAhBAknC,EAAuBpzD,QACrBozD,EAAuBlvC,QAAQ,EAAGo3C,SAAQphE,SAAUihE,MAClD,OAAQG,GACN,KAAK,IAA4BM,OAC/B1vC,EAASvyB,KAAK,aAAU,IAAoBwhE,EAAOp6B,EAASD,EAAY,KACxE,MACF,KAAK,IAA4B66B,OAC/BzvC,EAASvyB,KAAK,aAAU,IAAoBwhE,EAAO,KAAM,KAAMp6B,EAASD,EAAY,KACpF,MACF,KAAK,IAA4By6B,OAC/BrvC,EAASvyB,KAAK,aAAQ,IAAoBwhE,EAAOp6B,EAASD,EAAY,QAMvE5U,M,kCCxUT,gHAKO,MAAM4vC,EAAoB,IAC/B,YAAwB,oBAAmB,KAEhCC,EAA2BhoD,IACtC,IAAKA,EACH,OAAO,IAAqBioD,kBAE9B,MAAM,SAAE1hD,GAAavG,EAAOhe,KAC5B,OACEukB,EAAS,IAAa2hD,qCAAuC,IAAcC,WAC3E5hD,EAAS,IAAa6hD,iCAAmC,IAAcD,WACvE5hD,EAAS,IAAa8hD,6BAA+B,IAAWC,UAChE/hD,EAAS,IAAagiD,yBAA2B,IAAWC,KAErD,IAAqB9/B,oBAG5BniB,EAAS,IAAa2hD,qCAAuC,IAAcO,WAC3EliD,EAAS,IAAa6hD,iCAAmC,IAAcK,WACvEliD,EAAS,IAAa8hD,6BAA+B,IAAWK,aAChEniD,EAAS,IAAagiD,yBAA2B,IAAWI,QAErD,IAAqB9/B,0BAEvB,IAAqBo/B,oB,kCCoKvB,SAASW,EACdr7D,G,QAEA,MAAwB,eAAjBA,aAAM,EAANA,EAAQxI,UAAsD,QAA5B,EAAgB,QAAhB,EAAAwI,EAAOs7D,iBAAS,eAAEhuC,kBAAU,eAAEld,KAGlE,SAASmrD,EACdv7D,G,MAEA,MAAwB,qBAAjBA,aAAM,EAANA,EAAQxI,UAAsD,QAAtB,EAAAwI,EAAOw7D,uBAAe,eAAEtlE,OATzE,qE,kCCjMA,wLAaO,MAAMulE,EAA0B,CACrCnnD,EACA1b,EACAsqB,KAEA,MACEiX,cAAc,eAAEqI,EAAc,cAAEC,EAAa,aAAEC,GAAc,cAC7DlB,EAAa,aACbrH,GACE7lB,EACEonD,EAAkB,IAAY9iE,GAC9B+kD,EAAiB,IAAY+d,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAY,CAChF,OACApY,IA4BF,OA1BAk6B,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAAkB,OAAH,wBACxDz6B,GACA,YAAciX,EAAc,YAAiBvhC,KAG7C4pC,EAAed,UAClBg6B,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAAkB,IAC9D+d,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAC9C,GAAG,IAAsBC,iBAIxBnb,EAAcf,UACjBg6B,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAAkB,IAC9D+d,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAC9C,GAAG,IAAsBE,gBAIxBnb,EAAahB,UAChBg6B,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAAkB,IAC9D+d,EAAgBjnE,KAAKwyB,SAASxyB,KAAKmlD,WAAW+D,GAC9C,GAAG,IAAsBG,eAItB4d,GAOIC,EAAqB,wBAAsC,CAAEC,UAAU,IAEvEC,EAAqBjjE,IAChC,MAAMkxB,EAAQ,aAAS,aAAalxB,IAQpC,OAPsB,aAAgB,CACpCsxB,MAAOJ,EAAM1K,SACbxmB,SAAUkxB,EAAMxK,OAChBxqB,KAAM8D,EAASpC,SAAS1B,KACxB2B,UAAWmC,EAASpC,SAASC,UAC7B0zB,KAAM,a,0dC1CH,MAAM2xC,EAAc,CAAOC,EAAgB1kE,EAAY2kE,EAAY,IAAM,OAAD,6B,YAC7E,MAAMC,QAAsC,aAAO,qBAAoBF,EAAQ1kE,GACzE6kE,EAAyC,QAAlB,EAAAD,aAAU,EAAVA,EAAYjkE,cAAM,eAAEmkE,cAAcC,cAE/D,IACE,IAAKF,EAOH,YANIF,EAAY,EACdK,WAAW,IAAMP,EAAYC,EAAQ1kE,EAAI2kE,EAAY,GAAI,WAGnD,aAAU,aAAY,YAAyBC,GAAa,CAAE5kE,QAMxE,MACMilE,EAA8C,QAAhC,EAA2B,QAA3B,EAAoB,QAApB,SADU,aAAO,eAAcJ,EAAsB7kE,IACrC5C,YAAI,eAAEg6D,aAAK,eAAG,UAAE,eAAE35D,KAGhDmlC,EAAmB,YACvBgiC,EACAC,EACAI,SAEI,aAAU,aAAYriC,EAAO,CAAE5iC,OACrC,MAAOwL,GACP,YAAW,CACTnM,MAAO,uBACP+B,MAAOoK,EAAEvK,SAAW,iDAKbikE,EAAgB,CAC3BvjD,EACAg8B,IAC+B,OAAD,6BAC9B,MAAM,eAAEwnB,GAAmBxnB,EACrBynB,EAAgBzjD,EAASxiB,SAASC,UAElCghB,EAA+B,YAAuBuB,EAAUg8B,EAAY,KAAM,KAAM,CAC5F3U,cAAc,IAEVq8B,EAAoDF,EAAe5jE,SAASnE,KAAKgQ,OAAO+M,IAC5F,EAAG1c,WAAW,CAAGA,UAEb6nE,EAAuC,YAC3C3jD,EACAvB,EACAilD,GAEIE,QAAgC,YAA2BH,GAC3DI,EAAmC,YACvC,CAACL,EAAe5jE,UAChB+jE,EACAC,GAEIpmE,EAAW,CAAEa,GAAIolE,GACvB,IAAI59D,EACJ,IAEE,MAAMi+D,QAAmB,aAAU,uBAAsBH,EAAiBnmE,GAM1EqI,EAAY,CAACi+D,QAHY,aAAU,qBAAoBD,EAAermE,IAItE,MAAOuP,GACP,OAAO1G,QAAQC,OAAOyG,GAKxB,OAFA+1D,EAAYe,EAAcrmE,SAAS1B,KAAM2nE,GAElCp9D,QAAQyV,QAAQjW,MAGZk+D,EAAgB,CAC3B/jD,EACAgkD,IAC+B,OAAD,6BAC9B,MAAMvR,EAAmB,GACnBwR,EAAwBD,EAAqBA,EAAH,QAA4B,cACtEE,QAA8B,aAAO,6BAA4BD,GACvE,GAAIC,EAAuB,CACzB,MAAMC,EAAa,+BACd,YAA2BnkD,IAAS,CACvCo6B,YAAap6B,EAASvkB,KAAK2+C,YAAc,IAAI5hC,IAAKwS,I,MAA+B,sCAC5EA,GAAS,CACZxsB,KAAM,IAAYk/D,oBAClBt4D,KAAM,YAAgD,QAAlB,EAAA4a,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAE1B,UAE1D0nE,eAAgB,CACd1nE,KAAMmoE,EACNrkE,SAAUskE,KAGRr+D,QAAkB09D,EAAcvjD,EAAUmkD,GAChD1R,EAAiBpzD,QAAQwG,GAE3B,OAAOQ,QAAQyV,QAAQ22C,O,kCCjIzB,wKAiBO,MAAMjsB,EAAY,CAAEzV,YAAa,CAAE0V,OAAQ,QAE5C29B,EACJ/Q,GAEO,QAAUA,EAGNgR,EAAgB,CAC3BhR,EACAC,EACAgG,EACAC,K,YAEA,MACE34B,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GAAiB,KACtCzjD,EACA+E,OAAQ4yD,EACRv2D,OAASu4D,MAAO6O,EAAY3oE,IAAK45C,GACjCtU,OAAO,kBAAE3c,EAAiB,mBAAE85C,GAAoB,UAChDv4D,GACEwtD,EAEErzD,EAAkB,IAAMszD,EAAiB,kBAAoB,IAAMD,EAAU,cAC7ExyB,EAAM,IAAMwyB,EAAU,OAEtBU,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBACvEmgB,EAAY,YAAa7vD,EAAW/J,GACpCk4D,EAAqBnzB,EACvB,OAAD,wBAAM,YAAkBA,EAAIzpB,IAAKypB,EAAIrpB,MAAS,eAC7C,cAEJ,IAAIi+C,EAAQ6O,EACZ,MAAM9P,EAA8B,QAAd,EAAAnB,EAAS5xD,aAAK,eAAEwjB,SACtC,GAAIuvC,IAAkB,oBAAkByD,QAAU3zC,EAAmB,CAEnEmxC,EAAQ,CADK,CAAEpwC,cAAe,IAAYf,GAAoB2vB,SAAU,aAEnE,GACLugB,IAAkB,oBAAkB8B,SACnC,IAA+B,QAArB,EAAAgD,aAAe,EAAfA,EAAiB79D,YAAI,eAAEg6D,QAS7B,GAAI2O,EAAsB/Q,GAAW,CAC1C,MACEkR,KAAO9O,MAAO+O,IACZnR,EACJoC,EAAQ+O,OACH,GAAI,IAAU/O,GAAQ,CAE3BA,EAAQ,CADK,CAAEpwC,cAAe+4C,EAAoBnqB,SAAU,cAb5DwhB,EAAQ,IACH6D,EAAgB79D,KAAKg6D,MAAMj9C,IAAK2wB,IAAS,CAC1CrtC,KAAMqtC,EAAKrtC,KACXupB,cAAe8jB,EAAKA,KACpB8K,SAAU,UAYhB,GACE3vB,IACCmxC,EAAMvoC,KAAMic,GAAS7kB,IAAsB6kB,EAAK9jB,cAAc9c,YAC/D,CACA,MAAM4gC,EAAO,CAAE9jB,cAAe,IAAYf,GAAoB2vB,SAAU,OAClEwwB,EAAmD,QAAzB,EAAmB,QAAnB,EAAAlL,aAAa,EAAbA,EAAe99D,YAAI,eAAE0tC,YAAI,eAAEu7B,WAC3DjP,EAAQ,IAAIA,EAAMnwD,OAAQgoB,GAAMA,EAAEjI,gBAAkB+4C,GAAqBj1B,GAErEs7B,IACFhP,EAAQ,IAAIA,EAAMnwD,OAAQgoB,GAAMA,EAAEjI,gBAAkBo/C,GAA0Bt7B,IAIlF,MAAMw7B,EAAkB,CACtBpnE,KAAM,UACNwO,WAAY,KACZvO,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,wBAAOkzD,GAAkBN,GAC/B/kC,YAAa,OAAF,UAAOslC,IAEpBv4D,KAAM,CACJo6D,SAAUH,EACVD,MAAO,IAAMA,EAAQtsB,IAAS,CAC5BA,KAAMA,EAAK9jB,cACXq/C,WAAYv7B,EAAK9jB,cACjB4uB,SAAU9K,EAAK8K,SAEfn4C,KAAMqtC,EAAKrtC,MAAQ,YAAaqtC,QAOtC,OAFgB,YAAUmwB,EAAiBqL,IAKhCC,EAAc,CACzBvR,EACAC,EACAiG,K,YAEA,MACE34B,SAAW9kC,KAAM2B,GACjB4H,aAAevJ,KAAMyjD,GAAiB,KACtCzjD,EACA+E,OAAQ4yD,EACRxyB,OAAO,SACL5c,EAAQ,kBACRC,EAAiB,mBACjB85C,EAAkB,OAClBj6C,EAAM,KACNvL,EAAI,IACJhQ,EACA/H,OAAQgkE,GAEV3nE,OAASu4D,MAAO6O,EAAY3oE,IAAK45C,IAC/B8d,EAEErzD,EAAkB,IAAMszD,EAAiB,kBAAoB,IAAMD,EAAU,cAC7ExyB,EAAM,IAAMwyB,EAAU,OAEtBU,EAAgB,YAAa,CAAEj4D,OAAMyjD,kBAAiBv/C,kBAAiBu1C,gBACvEye,EAAqBnzB,EACvB,OAAD,wBAAM,YAAkBA,EAAIzpB,IAAKypB,EAAIrpB,MAAS,eAC7C,cAEJ,IAQIktD,EARAjP,EAAQ6O,EACZ,GAAIF,EAAsB/Q,GAAW,CACnC,MACEkR,KAAO9O,MAAO+O,IACZnR,EACJoC,EAAQ+O,EAIV,MAAMhQ,EAA8B,QAAd,EAAAnB,EAAS5xD,aAAK,eAAEwjB,SAEpCy/C,EADElQ,IAAkB,oBAAkByD,QAAU3zC,EACnC,YAAa,CACxBe,cAAe,IAAYf,GAC3B2vB,SAAU,QAEHugB,IAAkB,oBAAkB8B,QACP,QAAzB,EAAmB,QAAnB,EAAAiD,aAAa,EAAbA,EAAe99D,YAAI,eAAE0tC,YAAI,eAAEu7B,WAC/BpgD,EACI,YAAa,CAAEe,cAAe,IAAYf,GAAoB2vB,SAAU,QAExE,YAAa,CACxB5uB,eAAuB,QAAR,EAAAowC,EAAM,UAAE,eAAEpwC,gBAAiB+4C,EAC1CnqB,SAAU,QAId,MAAM6wB,EAAgB,CACpBvnE,KAAM,QACNwO,WAAY,wBACZvO,SAAU,CACR1B,OACA2B,YACAoD,OAAQ,OAAF,sCAAOkzD,GAAkBN,GAAeoR,GAC9Cn2C,YAAaslC,GAEfv4D,KAAM,CACJ25D,GAAI,CACF73D,KAAM,UACNzB,QAEF8M,IAAKub,EAASvb,EAAM,KACpB0O,KAAM+M,EACNzL,OAEAuwB,KAAM,CAKJu7B,cAEFK,eAAgB,SAMpB,OAFc,YAAUxL,EAAeuL,K,kCCvMzC,iUAWA,MAIaE,EAAmB,CAACC,EAAuB/mB,KACtD,GAAI,YAAkB+mB,EAAOxpE,KAAKuL,QAAS,CACzC,MAAM,UAAEs7D,GAAc2C,EAAOxpE,KAAKuL,OAC5BgzD,EAAe,IAAII,gBAUzB,OATAJ,EAAakL,IAAI,WAAY,UAC7BlL,EAAakL,IAAI,SAAUD,EAAOznE,SAAS1B,MAC3Ck+D,EAAakL,IAAI,iBAAkB5C,EAAUhuC,WAAWld,KACpDkrD,EAAUhuC,WAAW8wB,UACvB4U,EAAakL,IAAI,eAAgB5C,EAAUhuC,WAAW8wB,UAEpDkd,EAAUhuC,WAAW9vB,YACvBw1D,EAAakL,IAAI,iBAAkB5C,EAAUhuC,WAAW9vB,YAEnD,cAAc05C,KAAmB8b,IAG1C,GAAI,YAAwBiL,EAAOxpE,KAAKuL,QAAS,CAC/C,MAAM,gBAAEw7D,GAAoByC,EAAOxpE,KAAKuL,OAClCgzD,EAAe,IAAII,gBAGzB,OAFAJ,EAAakL,IAAI,SAAUD,EAAOznE,SAAS1B,MAC3Ck+D,EAAakL,IAAI,QAAS1C,EAAgBtlE,OACnC,oBAAoBghD,KAAmB8b,IAIhD,OAAO,MAGImL,EAAqB,KAIhC,MAAMnL,EAAe,IAAII,gBAAgB7S,OAAOlC,SAAS8U,QACzD,MAAO,CACLiL,WAAYpL,EAAan2D,IAAI,UAC7BywB,WAAY,CACVld,IAAK4iD,EAAan2D,IAAI,kBACtBuhD,SAAU4U,EAAan2D,IAAI,gBAC3BW,WAAYw1D,EAAan2D,IAAI,qBAKtBwhE,EAA2B,KACtC,MAAMrL,EAAe,IAAII,gBAAgB7S,OAAOlC,SAAS8U,QACzD,MAAO,CACLiL,WAAYpL,EAAan2D,IAAI,UAC7B3G,MAAO88D,EAAan2D,IAAI,WAIfyhE,EAA0B,MAC5B,IAAIlL,gBAAgB7S,OAAOlC,SAAS8U,QAAQt2D,IAAI,UAG9C0hE,EAA6BriC,GACjCA,EAAQ34B,OAAwC,CAACi7D,EAASC,K,MAC/D,MAAM3pE,GACyB,QAA7B,EAAA2pE,EAAcjoE,SAASqD,cAAM,eA9DH,+BA8DkC4kE,EAAcjoE,SAAS1B,KAGrF,OAFK0pE,EAAQ1pE,KAAO0pE,EAAQ1pE,GAAQ,IACpC0pE,EAAQ1pE,GAAMuD,KAAKomE,GACZD,GACN,IAoBQE,EAAe,CAACxiC,EAA0BznB,K,YACrD,IAAKynB,IAAYA,EAAQx9B,OACvB,OAAO,KAET,MAAMigE,GAAqBlqD,GAAY,MAAMrgB,MAAM,KAAK,GAAGq5C,cACrDmxB,IAAqBnqD,GAAY,IAAIrgB,MAAM,KAAK,IAAM,IAAI84C,cAEhE,IAAI2xB,EAA4C,KAC5CC,EAA4C,KAC5CC,EAA6C,KAC7CC,EAA2C,KAC3CC,EAA4C,KAEhD,IAAK,MAAMhB,KAAU/hC,EAAS,CAC5B,MAAMgjC,IACmB,QAAvB,EAAe,QAAf,EAAAjB,EAAOznE,gBAAQ,eAAEqD,cAAM,eApGO,+BAoG4B,MAC1D4zC,cACI0xB,IACmB,QAAvB,EAAe,QAAf,EAAAlB,EAAOznE,gBAAQ,eAAEqD,cAAM,eAtGM,kCAsG4B,IACzDqzC,cAEF,GAAIgyB,IAAmBP,GAAqBQ,IAAkBP,EAC5D,OAAOX,EAELiB,IAAmBP,IAChBQ,GAAkBN,EAEZM,IAAkBL,IAC3BA,EAA6Bb,GAF7BY,EAA6BZ,GAKV,OAAnBiB,IACEC,IAAkBP,GAAqBG,EAE/BI,GAAkBH,EAElBC,IACVA,EAA6BhB,GAF7Be,EAA4Bf,EAF5Bc,EAA8Bd,GAQpC,OACEY,GACAC,GACAC,GACAC,GACAC,GAISG,EAAa,IACjB,YAAqC,CAC1CztC,QAAQ,EACR0tC,iBAAkB,sCAA4B,OAIrCC,EAAaxqE,GACxB,YAAe,CAAEg1B,MAAO,IAAoBh1B,U,kCC1J9C,+JAeO,MAAMyqE,EAAwB,CACnCvmD,EACAvB,EACAhT,KAEO,CACLM,WAAY,YAAmB,wBAC/BxO,KAAM,uBAAqBA,KAC3BC,SAAU,CACR1B,KAAM,oBAAoBkkB,EAASxiB,SAAS1B,QAAQ,kBAEtDL,KAAM,CACJgQ,SACAiiB,kBAAmB,CAACjP,MAKb+nD,EAAsB,CACjCC,EACA9C,EACAC,KA8BA,MAAO,CACL73D,WAAY,YAAmB,sBAC/BxO,KAAM,qBAAmBA,KACzBC,SAAU,CACR1B,KAAM,kBAAkB,gBAE1BL,KAAM,CACJ8+C,mBAAoB,IACpBvsB,SAAU,CACR,CACE04C,SAAUD,EAAgBjuD,IApCQgrD,GAIH,KAAnCI,aAAuB,EAAvBA,EAAyBvlB,QACW,KAAnCulB,aAAuB,EAAvBA,EAAyBvlB,QAAkD,KAAnCulB,aAAuB,EAAvBA,EAAyBtlB,OAE3D,CACL/gD,KAAMimE,EAAejmE,KACrBzB,KAAM0nE,EAAehmE,SAAS1B,MAG3B,CACLyB,KAAMimE,EAAejmE,KACrBia,IAAKgsD,EAAehmE,SAAS1B,OAuBzBmyB,UApBoBnyB,EAoBS6nE,EAAgBnmE,SAAS1B,KAnBvD,YAAqB8nE,GAKnB,CAAEpsD,IAAK1b,GAJL,CACLA,aAHqB,IAACA,GA2BjB6qE,EAA2B,CACtC9C,EACAT,EACAsB,EAAqB,QAErB,MAAMkC,EAAoB/C,EAAcrmE,SAAS1B,KAE3C+qE,EAAgBzD,GAAiB,MAAMwD,EAE7C,MAAO,CACL76D,WAAY,YAAmB,cAC/BxO,KAAM,aAAWA,KACjBC,SAAU,CACR1B,KAAM+qE,EACNhmE,OAAQ,CACN,+BAAgC,qBAAmBtD,KACnD,4BAA6B,WAC7BupE,cAAeF,IAGnBnrE,KAAM,CACJ0tC,KAAM,CACJu7B,cAEFtP,GAAI,CACF73D,KAAM,UACNzB,KAAM+qE,EACNE,OAAQ,S,kCChHhB,+FAsBA,MAsDMC,EAAkB,aAtDoC,EACxDzpE,OAAMgmC,IAAGD,IAAG2jC,iBACdC,KAEA,MAAM,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,GAZ7B,SAAsC9pE,GACpC,MAAMovB,EAAU,aAASpvB,GACnB6pE,EAAU,YAAIz6C,EAAS,OAAQpvB,GAC/B8pE,EAAY,YAAI16C,EAAS,aAASlK,GAExC,MAAO,CAAE2kD,UAASD,SADAx6C,GAAWA,EAAQpG,MAAS,aAAW6gD,GAC7BC,aAOaC,CAA6B/pE,IAC/DgqE,EAAUC,GAAW,kBAAQ,IAEpC,IAAI14B,EAAO,KACP24B,EAAW,EACXC,EAAW,EACXvrC,EAAQ,EACRC,EAAS,EAqBb,OAnBImrC,MACCnrC,SAAQD,SAAUorC,GACrBE,EAAWrrC,EAAS,EACpBsrC,EAAWtrC,EAAS,GACpBA,GAAqB,EAAXsrC,EACV54B,EACE,wBACE0a,KAAM6d,EACN7vD,IAAK0vD,EACL3jC,EAAGA,GAAK0jC,EAAgB,EAAIQ,EAAWtrC,EAAQ,GAC/CA,MAAOorC,EAASprC,MAAmB,EAAXsrC,EACxBnkC,EAAGA,GAAK2jC,EAAgB,EAAIS,EAAWH,EAASnrC,OAAS,GACzDA,OAAQA,EACRurC,GAAIvrC,EAAS,EACbwrC,GAAIxrC,EAAS,KAMjB,qBACE9+B,UAAW,IAAG,oBAAqB,CACjC,CAAC,qBAAqB8pE,EAAQ3yB,gBAAmB4yB,IACjD,YACS,QAAQD,EAAQ3yB,eAE1B3F,EACD,6BAAQs4B,GACR,wBACE5vD,IAAKgwD,EACLjkC,EAAGA,GAAK0jC,EAAgBQ,EAAWtrC,EAAQ,EAAI,GAC/CmH,EAAGA,GAAK2jC,GAAiBS,EAAWtrC,GAAU,EAAI,GAClDyrC,WAAW,SACX1gB,GAAG,UAEFggB,O,kCCrET,geAkDYW,EAlDZ,wQAkDA,SAAYA,GACV,wBACA,sCACA,2BACA,8BAJF,CAAYA,MAAmB,KAOxB,MAAMC,EAAwBC,IACnC,OAAQA,GACN,KAAKF,EAAoBvlE,IAEvB,MAAO,6BACT,KAAKulE,EAAoBG,WAEvB,MAAO,oCACT,KAAKH,EAAoBI,UAEvB,MAAO,0BACT,KAAKJ,EAAoBK,UAEvB,MAAO,6BACT,QACE,OAAOH,IAIb,IAAYI,GAAZ,SAAYA,GACV,YACA,kBAFF,CAAYA,MAAe,KAK3B,MAEMC,EAAsBttC,IAAwC,QAClE,OAAyB,QAAzB,EAAiB,QAAjB,EAAAA,aAAW,EAAXA,EAAat/B,YAAI,eAAEuL,cAAM,eAAExI,MAEhB8pE,EAAoB1oE,IAC/B,OAAQA,EAASrC,MACf,KAAK,wBAAsBA,KACzB,OAAO,IAAU2R,UACnB,KAAK,kBAAgB3R,KACnB,OAAO,IAAU6R,WACnB,KAAK,aAAaxP,KAAc,aAAkB,KAAgB,IAAarC,KAAO,GACpF,OAAO,IAAU8R,eACnB,QACE,OAAO,OAIAk5D,EAAc,CAAC/T,EAAuB5qD,KACjD,OAAQ4qD,GACN,KAAK,oBAAkB0D,OACrB,OAAOtuD,IAAcw+D,EAAgBI,OACjCV,EAAoBK,UACpBL,EAAoBvlE,IAC1B,KAAK,oBAAkB01D,OACrB,OAAO6P,EAAoBG,WAC7B,QACE,OAAOH,EAAoBI,YAIpBO,EAAsB,CACjCjU,EACA5qD,KAEA,OAAQ4qD,GACN,KAAK,oBAAkB0D,OACrB,OAAOtuD,IAAcw+D,EAAgBI,OAAS,IAAsB,IACtE,KAAK,oBAAkBvQ,OACrB,OAAO,IACT,QACE,OAAO,MAIAyQ,EAAuB,CAClC16C,EACAxvB,EACAoI,MAES,IAAOonB,EAAW26C,I,MACzB,OAAI/hE,IAAiB,wBAAsBrJ,MAAiB,gBAATiB,EAC1CmqE,EAAQnqE,OAASA,IAAiC,QAAzB,EAAAmqE,EAAQ1P,yBAAiB,eAAEC,WAEtDyP,EAAQnqE,OAASA,IAgDfoqE,EAAoBhpE,I,oBAC/B,MAAM,SAAEpC,EAAQ,KAAE/B,GAASmE,EACrBghD,EAA6C,QAAhC,EAAoB,QAApB,EAAc,QAAd,EAAAnlD,aAAI,EAAJA,EAAMwyB,gBAAQ,eAAExyB,YAAI,eAAEmlD,kBAAU,QAAI,GACjDzX,EAAiD,QAA1C,EAA2B,QAA3B,EAAsB,QAAtB,EAAe,QAAf,EAAAyX,aAAU,EAAVA,EAAa,UAAE,eAAE6U,aAAK,eAAG,UAAE,eAAEpwC,qBAAa,QAAI,GAO3D,MANkB,CAChB2wC,OAA8D,mBAAtC,QAAhB,EAAAx4D,aAAQ,EAARA,EAAUqD,cAAM,eAAG,MAC3ByjB,kBAAmB,IAAW6kB,GAC9Bu7B,WAAY,IAAWv7B,GACvBi1B,mBAAoB,OAiBXyK,EAAiB,CAC5B5nC,EACArhC,KAEA,MAAMkpE,EAAY,IAAMlpE,EAAU,kBAAmB,IAC/CmpE,EAAiB,IAAM9nC,EAAO,kBAAmB,IAKvD,OAJ4B,IAAO8nC,EAAgB,CAhBjD,MACA,6BACA,2BACA,4BACA,mCACA,qCACA,uCAYG1+D,OAAOC,KAAKw+D,MAKNE,EAAe,CAAC/nC,EAAwBrhC,K,YACnD,IAAI46D,EAAY,CACd1sD,SAAU,IAAUmzB,GACpB+0B,QAAS,IAAU/0B,GACnByjC,WAAY,IAAMzjC,EAAO,uBAAwB,IACjD3c,kBAAmB,IAAoD,QAAzC,EAA6B,QAA7B,EAAiB,QAAjB,EAAW,QAAX,EAAA2c,aAAK,EAALA,EAAOxlC,YAAI,eAAE0tC,YAAI,eAAEu7B,kBAAU,eAAEtpE,MAAM,YAAI,eAAG,KAAO,GACjFgjE,mBAAoB,KACpBxlD,KAAM,IAAMqoB,EAAO,YAAa,IAChC5c,SAAU,IAAM4c,EAAO,YAAa,IACpC9c,OAAQ,IAAM8c,EAAO,wBACrBr4B,IAAK,CACHwb,YAAa,IAAM6c,EAAO,uBAAwB,MAClDgoC,8BAA+B,IAAMhoC,EAAO,yCAA0C,MACtFioC,cAAe,IAAMjoC,EAAO,yBAA0B,IACtDkoC,YAAa,IAAMloC,EAAO,uBAAwB,IAClDmoC,yBAA0B,IAAMnoC,EAAO,oCAAqC,IAC5EthC,IAAK,IAAMshC,EAAO,eAAgB,KAEpCpgC,OAAQgoE,EAAe5nC,EAAOrhC,IAQhC,OANI0oE,EAAiB1oE,KAAc,IAAUyP,iBAC3CmrD,EAAY,OAAH,wBACJA,GACAoO,EAAiBhpE,KAGjB46D,GAoBI6O,EAAe,CAC1BtuC,EACAw9B,EACAv4C,EACAyR,KAEA,MAAM3L,EAvBe,EACrBiV,EACAw9B,EACAv4C,IAEI+a,EACK,IAAaxrB,OAElBgpD,EACK,IAAa/oD,iBAElBwQ,EACK,IAAavQ,UAEf,IAAaC,SASA45D,CAAevuC,EAAaw9B,EAAiBv4C,GACjE,IAAIupD,EACAC,EACA/U,EAEJ,GAAI3uC,IAAgB,IAAavW,OAC/Bg6D,EAAoB,IAAMxuC,EAAa,qBAAsB,SACxD,GAAIjV,IAAgB,IAAatW,iBAEtC,OADAg6D,EAAqC,IAAMjR,EAAiB,qBAAsB,IAC1EiR,GACN,KAAK,IAAqB7e,QACxB4e,EAAoB,oBAAkBtR,OACtC,MACF,KAAK,IAAqB7jC,IACxBm1C,EAAoB,oBAAkBrR,OACtC,MACF,QACEqR,EAAoB,GAI1B,GAAIzjD,IAAgB,IAAavW,OAC/B,OAAQg6D,GACN,KAAK,oBAAkBrR,OACrBzD,EAAoB,IAAM15B,EAAa,gCACvC,MACF,KAAK,oBAAkBk9B,OACrBxD,EAAoB,IAAM15B,EAAa,gCACvC,MACF,QACE05B,EAAoB,CAAEF,IAAK,SAEtBzuC,IAAgB,IAAatW,mBACtCilD,EAAoB,IAAM8D,EAAiB,SAG7C,MAAMvqC,EAAW,IAAM+M,EAAa,iBAgBpC,MAd6B,CAC3Bw5B,KAAKE,aAAiB,EAAjBA,EAAmBF,MAAO,GAC/BvmC,SAAU,CACRhmB,QAAS0gE,EAAqB16C,EAAU,IAAiByD,IACzDv0B,MAAOwrE,EAAqB16C,EAAU,eACtCvU,OAAQivD,EAAqB16C,EAAU,iBAEzC/I,SACEskD,IACC,YAAiBvpD,GAAY,oBAAkBi4C,OAAS,oBAAkBC,QAC7ElxD,OAAQ,CAAExI,KAAM6pE,EAAmBttC,IACnCo7B,OAAQrwC,EACR+xC,qBAAsB2R,IAKbC,EAAqB7pE,IAChC,IAAI8pE,EAAiC,CACnCzmD,QAAS,CACPC,QAAS,GACTC,QAAS,GACTG,kBAAmB,GACnBC,iBAAkB,GAClBE,UAAW,CACTC,gBAAiB,GACjBC,oBAAqB,IACrB4hB,2BAA4B,KAE9B/hB,uBAAwB,IAE1BM,cAAe,IAEjB,GAAIwkD,EAAiB1oE,KAAc,IAAUyP,eAAgB,CAC3D,MACE5T,MACEwyB,UAAU,SAAEzwB,EAAQ,KAAE/B,KAEtBmE,EACE8uB,EAAclxB,aAAQ,EAARA,EAAUkxB,YACxBi7C,GAA4Bj7C,aAAW,EAAXA,EAAc,OAAuC,IACjF,gBAAEhL,EAAe,oBAAEC,EAAmB,2BAAE4hB,GAA+B,YAC3EokC,GAEFD,EAAiB,CACfzmD,QAAS,CACPC,SAASwL,aAAW,EAAXA,EAAc,OAAgC,GACvDvL,SAASuL,aAAW,EAAXA,EAAc,OAAgC,GACvDpL,mBAAmBoL,aAAW,EAAXA,EAAc,OAAyC,GAC1EnL,kBAAkB9nB,aAAI,EAAJA,EAAMikE,uBAAwB,GAChDj8C,UAAW,CACTC,kBACAC,sBACA4hB,8BAEF/hB,wBAAwBkL,aAAW,EAAXA,EAAc,OAA8C,IAEtF5K,cAAe,IAGnB,OAAO4lD,GAGIE,EAAqBhqE,I,gCAChC,MAAMiqE,EAAiC,CACrCtV,IAAK,GACLjyC,SAAU,EACV0L,SAAU,CAAE9wB,OAAO,EAAMuc,QAAQ,IAE7ByQ,EAAqD,QAAzC,EAA6B,QAA7B,EAAuB,QAAvB,EAAa,QAAb,EAAAtqB,EAASnE,YAAI,eAAEwyB,gBAAQ,eAAExyB,YAAI,eAAEmlD,kBAAU,eAAE5jC,KAAM/S,IAAK,MACtE,OAACrK,EAASpC,SAAS1B,KAA8B,QAAxB,EAAA8D,EAASpC,SAASqD,cAAM,eAAG,2BAA2BmE,SAASiF,EAAEnO,QAEtFy4D,EAAoB,QAAd,EAAArqC,aAAS,EAATA,EAAWqqC,WAAG,QAAI,GAC9B,OAAQ+T,EAAiB1oE,IACvB,KAAK,IAAUyP,eACb,OAAO,OAAP,wBACKw6D,GAAc,CACjBtV,MACAvmC,SAAU,CACR9wB,OAAOgtB,aAAS,EAATA,EAAWy1C,mBAAoB,IAAgBjB,UAG5D,KAAK,IAAUxvD,UAAW,CACxB,MAAM8e,EAAwB,QAAb,EAAApuB,EAASnE,YAAI,eAAEuyB,SAChC,MAAO,CACLumC,MACAvmC,SAAU,CACR9wB,MAAOwrE,EAAqB16C,EAAU,cAAepuB,EAASrC,MAC9Dkc,OAAQivD,EAAqB16C,EAAU,iBAEzC1L,SAAiC,QAAvB,EAAa,QAAb,EAAA1iB,EAASnE,YAAI,eAAE6mB,gBAAQ,QAAI,GAGzC,KAAK,IAAUlT,WAAY,CACzB,MAAM6wC,EAEL,QAFoB,EAAAh1C,KAAKC,MACuC,QAA/D,EAA8B,QAA9B,EAAiB,QAAjB,EAAAtL,EAASpC,gBAAQ,eAAEkxB,mBAAW,eAAG,sCAA8B,QAAI,aACpE,eAAG,GACJ,MAAO,CACL6lC,MACAvmC,SAAU,CACR9wB,MAAgC,WAAzB+iD,aAAY,EAAZA,EAAcE,SAEvB79B,SAAiC,QAAvB,EAAa,QAAb,EAAA1iB,EAASnE,YAAI,eAAE6mB,gBAAQ,QAAI,GAGzC,QACE,OAAOunD,IAIAC,EAAiBlqE,IAC5B,MAAMkpE,EAAY,IAAMlpE,EAAU,kBAAmB,IAErD,OADmB,IAAOkpE,EAlOnB,CACL,MACA,6BACA,2BACA,4BACA,mCACA,qCACA,uCA+QSiB,EAAwBpR,I,QACnC,MAAMqR,EAAgD,QAAjC,EAAyB,QAAzB,EAAArR,aAAe,EAAfA,EAAiBn7D,gBAAQ,eAAEqD,cAAM,eAAG,4BAEzD,MAAO,CACL2+C,YAFkBwqB,GAAgB,YAAQA,GAAgBA,EAAe,OAMhEC,EAAmC,CAC9ClvC,EACAw9B,EACAv4C,K,kCAEA,GAAI,IAAU+a,IAAgB,IAAUw9B,IAAoB,IAAUv4C,GACpE,MAAO,GAGT,MAAMkqD,EAAe,IAA+D,QAAvD,EAAiD,QAAjD,EAA2C,QAA3C,EAA2B,QAA3B,EAAiB,QAAjB,EAAAnvC,aAAW,EAAXA,EAAat/B,YAAI,eAAEwpB,gBAAQ,eAAE8vC,sBAAc,eAAE/3D,YAAI,eAAElB,YAAI,QAAI,GAAI,KACtF+kC,EAAO,IAAU9F,GAElB,IAAUw9B,GAtVc,CAACv4C,I,kBAC9B,MAAMvU,EAAuB,QAAd,EAAAuU,aAAQ,EAARA,EAAUvkB,YAAI,eAAEgQ,OACzB2L,EAAmE,QAA5D,EAAmD,QAAnD,EAAA3L,aAAM,EAANA,EAAQuR,KAAM4N,GAA0B,cAAhBA,aAAK,EAALA,EAAO9uB,cAAoB,eAAE+uB,eAAO,QAAI,GAG7E,MAAO,CACLzT,MACAI,IAJ0E,QAAhE,EAAuD,QAAvD,EAAA/L,aAAM,EAANA,EAAQuR,KAAM4N,GAA0B,kBAAhBA,aAAK,EAALA,EAAO9uB,cAAwB,eAAE+uB,eAAO,QAAI,GAK9Ey6B,IAJ0E,QAAhE,EAAuD,QAAvD,EAAA75C,aAAM,EAANA,EAAQuR,KAAM4N,GAA0B,kBAAhBA,aAAK,EAALA,EAAO9uB,cAAwB,eAAE+uB,eAAO,QAAI,IAK9ErsB,KAAM,YAAc4Y,GACpB+N,aAAa,EACbtd,OAAQ,GACRsiE,iBAAiB,IA4UfC,CAAuBpqD,GAxUS,CAACu4C,I,YACrC,MAAMnhD,EAA6C,QAAvC,EAAkC,QAAlC,EAA6B,QAA7B,EAAqB,QAArB,EAAAmhD,aAAe,EAAfA,EAAiB98D,YAAI,eAAEuL,cAAM,eAAE65B,WAAG,eAAEzpB,WAAG,QAAI,GAUvD,MATgB,CACdA,MACA5Y,KAAM,YAAc4Y,GACpBI,IAAK,IAAM+gD,EAAiB,2BAA4B,IACxDjT,IAAK,IAAMiT,EAAiB,yBAA0B,IACtDpzC,aAAa,EACbtd,OAAQ,IAAM0wD,EAAiB,8BAA+B,IAC9D4R,iBAAiB,IA8TfE,CAA8B9R,GArWK,CAACx9B,I,YACxC,MAAM3jB,EAAyC,QAAnC,EAA8B,QAA9B,EAAyB,QAAzB,EAAiB,QAAjB,EAAA2jB,aAAW,EAAXA,EAAat/B,YAAI,eAAEuL,cAAM,eAAE65B,WAAG,eAAEw0B,WAAG,QAAI,GAUnD,MATgB,CACdj+C,MACA5Y,KAAM,YAAc4Y,GACpBI,IAAK,IAAMujB,EAAa,sBAAuB,IAC/CuqB,IAAK,IAAMvqB,EAAa,yBAA0B,IAClD5V,aAAa,EACbtd,OAAQ,IAAMkzB,EAAa,gCAAiC,IAC5DovC,iBAAiB,IA0VfG,CAA0BvvC,GAuB9B,MAnBsB,CACpB8F,MACAC,OAAQ,CACNppB,gBAC6C,QAA3C,EAA2B,QAA3B,EAAiB,QAAjB,EAAAqjB,aAAW,EAAXA,EAAat/B,YAAI,eAAEwpB,gBAAQ,eAAE6vC,sBAAc,eAAEp9C,kBACwB,QAArE,EAAsB,QAAtB,EAAc,QAAd,EAAAsI,aAAQ,EAARA,EAAUvkB,YAAI,eAAEgQ,cAAM,eAAEuR,KAAM4N,GAA0B,gBAAhBA,aAAK,EAALA,EAAO9uB,cAAsB,eAAE+uB,UACvE,cAEJ3tB,MAAO,CACLsjB,UAAoC,QAA1B,EAAkB,QAAlB,EAAAR,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEqD,cAAM,eAAG,OAA2BqpE,EAAa,IAAM,GACrFhO,YAAa,GACbvgE,KAA+B,QAA1B,EAAkB,QAAlB,EAAAqkB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEqD,cAAM,eAAG,OAAmCqpE,EAAa,IAAM,GACxFK,OAAQ,GACR9U,MAAO,GACP+U,gBAAgB,EAChBC,mBAAmB,GAErBhpE,MAAO4nE,EAAatuC,EAAaw9B,EAAiBv4C,EAAU6gB,EAAIriC,QAKvDksE,EAA2B,CACtCC,WAAY,GACZC,SAAU,WACVC,uBAAuB,EACvBvvE,YAAa,CACX4B,MAAO,GACPvB,IAAK,GACL8B,UAAW,IAEb8mE,IAAK,CACHzoE,KAAM,GACNoB,MAAO,GACPvB,IAAK,GACLqD,OAAQ,CAAExB,SAAU,GAAIwB,OAAQ,IAChCy2D,MAAO,IAETv4D,MAAO,CACLpB,KAAM,GACNoB,MAAO,GACPvB,IAAK,GACLqD,OAAQ,CAAExB,SAAU,GAAIwB,OAAQ,IAChCy2D,MAAO,IAETh0D,MAAO,CACL8yD,IAAK,GACLvmC,SAAU,GACV/I,SAAU,IAEZ6lD,qBAAqB,GA8CVC,EAA0BC,IACrC,MAAMlvE,EAAO,IAAMkvE,EAAa,yCAA0C,MAC1E,OAAI,IAAUA,KAAiBlvE,EACtB4uE,EAEF,OAAP,wBACKA,GAAwB,CAC3BC,WAAY7uE,EACZ8uE,SAAU,IAAa70B,SACvBz6C,YAAa,OAAF,UACNovE,EAAyBpvE,gBAsBrB2vE,EAAmB,CAC9B1X,EACA2X,EACAztE,K,cAEA,MAAM0tE,EAAkD,QAA5B,EAAA5X,EAAaoF,uBAAe,eAAEvzD,KACpDo1D,EAA8B,QAAlB,EAAAjH,EAAatyB,aAAK,eAAE77B,KAChC01B,EAA0C,QAAxB,EAAAy4B,EAAax4B,mBAAW,eAAE31B,KAC5CgmE,EAAkD,QAA5B,EAAA7X,EAAagF,uBAAe,eAAEnzD,KACpDkyD,EAAoC,QAArB,EAAA/D,EAAavzC,gBAAQ,eAAE5a,KAEtCimE,EAlN8B,EACpC1S,EACA13B,EACAq2B,EACAx7D,EACA2B,KAEA,MAAM6tE,EAAe,IAAM3S,EAAiB,gDAsC5C,MArC4B,CAC1B2F,SAAU,OACVxiE,OACAuJ,YAAa,CACXvJ,KAAMwvE,GAAgB,GACtBz6D,YAAay6D,GAAgB,KAE/B1qC,QAAS,CACP9kC,KAAM2B,GAERwjC,MAAO+nC,EAAa/nC,EAAO03B,GAC3B9yD,UAAWyiE,EAAiB3P,GAC5B33B,WAAYyoC,EAAkB9Q,GAC9B34C,SAAU,CACR0oB,SAAU,IAAU4uB,GACpB94D,KAAM,IAAaujE,UAErB3gC,IAAK,CACHmqC,aAAa,EACbj3C,WAAY,OAAF,UACL,MAGPoI,WAAYktC,EAAkBjR,GAC9B93D,OAAQipE,EAAcnR,GACtBz3B,OAAQ,aAA0By3B,GAClCx3B,aAAc,YAAoBw3B,GAClCoD,OAAQ,CACNyP,wBAAwB,EACxBxP,iBAAkB,CAChBlgE,KAAM,GACN0C,KAAM,IAAe41B,IACrBxW,SAAU,EACVO,cAAe,OAyKAstD,CACnBN,EACA3Q,EACAlD,EACA4T,EACAztE,GAEIiuE,EAAkBzB,EACtBnvC,EACAswC,EACA9T,GAEF,IAAIqU,EAAmB,GACnBC,EAAa,GACbC,EAAsB,GACtBC,EAAsB,GAqB1B,OApBI,IAAUJ,IACZE,EAAa7B,EAAqBoB,GAClCU,EAxGyC,CAACtY,I,gBAC5C,MAAMI,EAA2C,QAAzB,EAAAJ,aAAY,EAAZA,EAAcj4D,mBAAW,eAAE8J,KACnD,GAAI,IAAUuuD,GACZ,MAAO,GAET,MAAMr4D,EAAc,IAAUq4D,EAAiB,CAAC,4BAA6B,CAAC,SACxEL,EAA8C,QAA5B,EAAsB,QAAtB,EAAgB,QAAhB,EAAAh4D,aAAW,EAAXA,EAAc,UAAE,eAAEG,YAAI,eAAEC,YAAI,eAAG,GACjDI,EAA4B,QAArB,EAAAw3D,aAAe,EAAfA,EAAiBt2D,YAAI,eAAElB,KAC9BiwE,GAAuD,QAA7B,EAAAzY,aAAe,EAAfA,EAAiB0Y,oBAAY,eAAExmB,YAAY,EAC3E,OAAO,OAAP,wBACKklB,GAAwB,CAC3BC,WAAY7uE,EACZ8uE,SAAU,WACVC,sBAAuBkB,EACvBzwE,YAAa,OAAF,UACNovE,EAAyBpvE,gBAyFR2wE,CAA8B1Y,GACpDuY,EAAsB,IAAUD,GArFS,CAAClT,IAC5C,MAAM14D,EAAuB,IAC3B04D,EACA,wDACA,IAEI34D,EAAkB,IAAM24D,EAAiB,8CAA+C,IACxFuF,EAAiB,IACrBvF,EACA,sDACA,IAEF,OAAO,OAAP,wBACK+R,GAAwB,CAC3BE,SAAU,IAAa50B,SACvB16C,YAAa,CACX4B,MAAO8C,EACPrE,IAAKuiE,EACLzgE,UAAWwC,MAoETisE,CAA8Bf,GAC9B,IAEF,IAAUU,IACT,IAAMC,EAAqB,oBAC3B,IAAMA,EAAqB,uBAExBX,aAAmB,EAAnBA,EAAqB5tE,QAAS,IAAaA,OAC7CuuE,EAAsB,GACtBD,EAAsBd,EAAuBI,KAGxB9C,EAAmBvtC,KA5kBYstC,EAAgBI,SA6kBxEmD,EA7D+B,EAAC/rE,EAA2Bm7B,K,0BAC7D,MAAMutB,EAAe1oD,EAASpC,SAAS1B,KACjCqwE,EAAyD,QAA9C,EAAiC,QAAjC,EAAoB,QAApB,EAAApxC,EAAYv9B,gBAAQ,eAAEkxB,mBAAW,eAAE+wC,mBAAW,QAAI,GAC7DF,EAGqD,QAFzD,EAEkD,QAFlD,EAEO,QAFP,EACwD,QADxD,EAAyC,QAAzC,EAA6B,QAA7B,EAAuB,QAAvB,EAAa,QAAb,EAAA3/D,EAASnE,YAAI,eAAEwyB,gBAAQ,eAAExyB,YAAI,eAAEmlD,kBAAU,eACrC5jC,KAAMkN,GAAcA,EAAUpuB,OAASwsD,UAAa,eACpDiM,WAAG,eAAEv3C,KAAM0d,GAAuB,cAAdA,EAAK5+B,aAAqB,eAAEsC,aAAK,QAAI,GAC/D,OAAO,OAAP,QACEmgE,WAAY,CACVziE,KAAMqwE,EACN/tE,MAAO,GACPmhE,aAECwK,EAAqBnqE,KAgDLwsE,CAAoBjB,EAAqBrwC,IAGvD,OAAP,gFACKuwC,GACAO,GACAD,GACAD,GACAG,GACAC,K,kCCxqBP,oHAEO,MAAMO,EAA4B,K,MACvC,IACE,OAAOphE,KAAKC,MAA4D,QAAtD,EAAAohE,eAAeC,QAAQ,YAA+B,QAAI,MAC5E,MAAO1iE,GACP,MAAO,KAIE2iE,EAA0B/uE,I,MACrC,OAA6C,QAAtC,EAAA4uE,IAA4B5uE,UAAU,QAAI,IAEtCgvE,EAAuB,CAAC51C,EAAsBp5B,IAClD+uE,EAAuB/uE,GAAWuH,SAAS6xB,GAGvC61C,EAA2B,CAAC71C,EAAsBp5B,KAC7D,IAAKo5B,IAAiBp5B,EAAW,OAEjC,MAAMkvE,EAAUH,EAAuB/uE,GAAW6H,OAAQsnE,GAAUA,IAAU/1C,GAE9Ey1C,eAAeO,QACb,IACA5hE,KAAKiH,UAAU,OAAD,wBAAMm6D,KAA2B,CAAE,CAAC5uE,GAAYkvE,OAIrDG,EAAwB,CAACj2C,EAAsBp5B,KAC1D,IAAKo5B,IAAiBp5B,EAAW,OACjC,MAAM65D,EAAe+U,IAEhB/U,EAAa75D,KAChB65D,EAAa75D,GAAa,IAEvB65D,EAAa75D,GAAWuH,SAAS6xB,KACpCygC,EAAa75D,GAAW4B,KAAKw3B,GAC7By1C,eAAeO,QAAQ,IAAgC5hE,KAAKiH,UAAUolD,O,kCCrC1E,gEAkBA,MAAMyV,EAAqC,EAAGrzB,QAAOj8C,YAAW0P,OAAMpE,gBAOlE,gBAAC,oBAAiB,CAChBwC,SAAUmuC,EACVnsC,OARgBzR,IAClB49C,IACAvsC,EAAKrR,IAOHgQ,MAAO,CAAEtO,SAAU,CAAEC,cACrBmO,sBAAuB7C,EACvBE,UAAQ,EACRqC,OAAK,IAKE0hE,EAAsB,YAA2BD,I,kCCpC9D,0NAyEA,MAEaE,EAAqE,EAChFC,kBACAplD,OACArqB,YACA+gB,oBACA2uD,iBACA3sD,WACA4sD,YACAjxC,QACAC,SACA81B,oB,QAEA,MAAMxT,EAA6C,YACjD,KAEI11B,EAAalB,EAAK9oB,QAAU,CAChCwqB,SAAU,GACV5K,OAAQ,IAAeiK,MAGvBrK,IAAsB,IAAeS,QACrCT,IAAsB,IAAeY,YAGxB,QAAX,EAAA0I,EAAK9oB,cAAM,eAAE4f,UAAW,IAAeiK,OAC5B,QAAX,EAAAf,EAAK9oB,cAAM,eAAE4f,UAAW,IAAee,UAEvCqJ,EAAWpK,OAAS,IAAeQ,WAGnCguD,IACFpkD,EAAWpK,OAAS,IAAeiB,SAGrC,MAAMwtD,EACJ,gBAACC,EAAa,CACZJ,gBAAiBA,EACjBpxE,KAAMgsB,EAAKhsB,MAAQ,GACnBgsB,KAAMA,EAAKylD,UAAY,CAAEnoE,KAAM,CAAE3J,KAAMqsB,EAAKylD,WAC5C9vE,UAAWA,EACXuB,OAAQgqB,EACRipC,gBAAiBzzC,EACjBgvD,4BAA6BL,EAC7B3sD,SAAUA,EACV2b,MAAOA,EACPC,OAAQA,EACR81B,cAAeA,EACfnpC,aAAcjB,IAIlB,GAAIqlD,GAAkBrlD,EAAKylD,SACzB,OAAOF,EAGT,IAAIxnE,EAmBJ,OATEA,EATG64C,GAA8C52B,EAAKgC,QAAQvsB,OAAS,mBAAiBA,KAS5E,CACV,CACEA,KAAM,aAAkB,aACxBzB,KAAMgsB,EAAKgC,QAAQhuB,KACnB2B,YACAm7B,KAAM,SAbE,CACV,CACEr7B,KAAM,aAAkB,oBACxBzB,KAAMgsB,EAAKgC,QAAQhuB,KACnB88B,KAAM,SAaL,gBAAC,IAAQ,CAAC/yB,UAAWA,GAAYwnE,IAEpCC,EAAqC,EACzCJ,kBACAzvE,YACAqqB,OACA9oB,SACAlD,OACAm2D,gBACAub,8BACAhtD,WACA2b,QACAC,SACA81B,gBACAnpC,mB,YAEA,MACM0kD,IAD2B,QAAhB,EAAU,QAAV,EAAA3lD,aAAI,EAAJA,EAAM1iB,YAAI,eAAE3J,YAAI,eAAEiyE,QAAS,IACEl1D,IAAKmrB,GAAS,YAAiBA,EAAM3kC,IAC7E2uE,EAA2B1b,KAAmBjzD,KAAYA,EAAO4f,OACjEgvD,EAAa9xE,GAAQ,IAAMgsB,EAAM,CAAC,WAAY,QAAS,IACvD+lD,EAAU,WACVC,EAAU,WACVl1D,EAAOs0D,EACT,GAAG,aAAsB,mBAAkBA,EAAiBzvE,WAAmB3B,SAC/E2mB,EACEsrD,GACJ/uE,aAAM,EAANA,EAAQ4f,UAAW,IAAeiK,OAClC7pB,aAAM,EAANA,EAAQ4f,UAAW,IAAee,UAClC3gB,aAAM,EAANA,EAAQ4f,UAAW,IAAeQ,aAChCxG,EACEo1D,GAAsC,QAAlB,EAAAjlD,aAAY,EAAZA,EAAc5G,YAAI,eAAEzc,QAAS,EACjDuoE,GAAoC,QAAtB,EAAAllD,aAAY,EAAZA,EAAcf,gBAAQ,eAAEtiB,QAAS,EAC/CwoE,EAAkBlvE,EACpB,YAAkBA,EAAO4f,QAAQ8X,QAAQt4B,MACzC,YAAkB,IAAeghB,WAAWsX,QAAQt4B,OAEjD+vE,EAAOC,GAAY,qBACpBC,EAAsB,UAC1B,IAAM,aAAeT,EAAY,CAAEloE,OAAQioE,EAAkB,GAAK,GAAIW,aAAa,IACnF,CAACV,EAAYD,IAGTY,EACJ,wBACE/2D,IAAKq2D,EACLtqC,EAAGoqC,EAAkB,GAAKxxC,EAAQ,EAClCmH,EAAGlH,EAAS,EAAI,EAChB9+B,UAAW,EAAG,6BAA8B,CAC1C,kBAAmB20D,EACnB,YAAa8b,KAGdM,GAIL,IAAIG,EACF,qBAAGh3D,IAAK42D,GACN,gBAAC,IAAmB,CAACjnB,GAAI,EAAG/lD,GAtIhB,8BAuIZ,wBACEkE,OAAQ6oE,EAAQ,yBAxIN,6BAwIkC,GAC5ChyC,MAAOA,EACPC,OAAQA,EACRurC,GAAI,GACJrqE,UAAW,EAAG,wBAAyB,CACrC,cAAekjB,EACf,YAAautD,MAGhBH,IAAeS,GAAuBb,EACrC,gBAAC,IAAO,CAACiB,WAAYZ,EAASxzC,QAASuzC,GACpCW,GAED,EAIHZ,GACC,gCACE,uBACExxC,MAAO,GACPC,OAAQ,GACRmtB,QAAQ,cACR9nC,MAAO,CACLyE,MAAOgoD,IAGT,qBACE5wE,UAAW,EAAG,CACZ,2CACE0B,EAAO4f,SAAW,IAAeM,QACnC,mCAAoClgB,EAAO4f,SAAW,IAAeM,WAGvE,gBAAC,IAAU,CAAClgB,OAAQA,EAAO4f,OAAQ8vD,aAAW,MAGlD,gBAACC,EAAa,CAACjB,MAAOD,EAAgBlqC,EAAG,GAAID,EAAG,GAAInH,MAAOA,EAAQ,EAAI,OAM1EqxC,IACHgB,EACE,gCACE,gBAAC,IAAO,CACNC,WAAYX,EACZ9/B,SAAS,SACT4gC,YAAY,EACZv0C,QACE,gBAAC,IAA6B,CAC5Bw0C,gBAAiB5c,EACjB6c,SAAUlB,EACVF,MAAOD,EACPvb,cAAeA,KAInB,qBAAG16C,IAAKs2D,GAAUU,MAM1B,MAAMO,EACJ,gCACGf,GACC,gBAAC,IAAuB,CACtB7xC,MAAO,IACPC,OAAQ,IACR4yC,YAAaf,IAAgB/b,EAC7BD,cAAeA,EACfjzD,OAAQA,EAAO4f,OACfqwD,eAAa,EACbC,WAAY1B,IAAgCtb,EAAgB,EAAI,EAChEA,cAAeA,IAGlBsc,GAGL,OAAOT,EACL,gBAAC,OAAI,CAAC3Y,GAAIx8C,GACR,iCAAc,QAAQg1D,GAAemB,IAErC,GAYAJ,EAA8C,EAAGjB,QAAOnqC,IAAGD,IAAGnH,YAClE,GAAqB,IAAjBuxC,EAAMhoE,OACR,OAAO,KAET,MAAMypE,EAAYhzC,EAAQuxC,EAAMhoE,OAEhC,OACE,yBACGgoE,EAAMl1D,IAAI,CAACmrB,EAAM1vB,IAEd,wBACEtU,IAAKgkC,EAAK7nC,KACVynC,EAAGA,EAAI4rC,EAAYl7D,EACnBqvB,EAAGA,EACHnH,MAAOgzC,EATL,EAUF/yC,OAAQ,EACRotB,KAAM,YAAkB7lB,EAAK3kC,QAAQ03B,QAAQt4B,Y,kCCnUzD,4FAQA,MAAM0f,EAAO,IAAIsxD,IAAuBA,EAAS9pE,OAAQ+pE,KAAUA,GAAKvxD,KAAK,KAEvEwxD,EAAgC,CAACC,EAAIC,IAAOD,EAAGhsC,EAAIisC,EAAGjsC,EACtDksC,EAA8B,CAACF,EAAIC,IAAOD,EAAGjsC,EAAIksC,EAAGlsC,EACpDosC,EAA+B,CAACH,EAAIC,IAAOD,EAAGjsC,EAAIksC,EAAGlsC,EAErDqM,EAAqBriB,GAAM,GAAGA,EAAEiW,KAAKjW,EAAEgW,IACvCqsC,EAAsBriD,GAAM,KAAKqiB,EAAMriB,GACvCsiD,EAAsBtiD,GAAM,KAAKqiB,EAAMriB,GACvCuiD,EAAqB,CAACC,EAAQpsC,IAAQ,KAAKiM,EAAMmgC,MAAWngC,EAAMjM,KAIlEqsC,EAAkB,EAAlBA,EAAwB,GACxBC,EAAoB,CAACC,EAAWC,EAAaC,KAEjD,GADoBV,EAAQQ,EAAWE,GACtB,CACf,MAAMC,EAAed,EAAUW,EAAWC,IAAgBT,EAAQS,EAAaC,GACzEE,EAAeZ,EAAQQ,EAAWC,IAAgBZ,EAAUY,EAAaC,GAC/E,GAAIC,EACF,OAAOtyD,EACL8xD,EAAOM,EAAY/gC,QAAQ4B,WAAWg/B,EAAc,IACpDF,EAAOK,EAAaA,EAAY/gC,QAAQ4B,UAAU,EAAGg/B,KAGzD,GAAIM,EACF,OAAOvyD,EACL8xD,EAAOM,EAAY/gC,QAAQ4B,UAAU,GAAIg/B,IACzCF,EAAOK,EAAaA,EAAY/gC,QAAQ4B,UAAUg/B,EAAc,SAG/D,CACL,MAAMO,EAAahB,EAAUW,EAAWC,IAAgBR,EAASQ,EAAaC,GACxEI,EAAab,EAASO,EAAWC,IAAgBZ,EAAUY,EAAaC,GAC9E,GAAIG,EACF,OAAOxyD,EACL8xD,EAAOM,EAAY/gC,QAAQ4B,WAAWg/B,EAAc,IACpDF,EAAOK,EAAaA,EAAY/gC,QAAQ4B,UAAU,GAAIg/B,KAG1D,GAAIQ,EACF,OAAOzyD,EACL8xD,EAAOM,EAAY/gC,QAAQ4B,UAAU,EAAGg/B,IACxCF,EAAOK,EAAaA,EAAY/gC,QAAQ4B,UAAUg/B,EAAc,KAKtE,MAAO,IAGIS,EAA2B,CAACplD,EAAOqlD,IAAW3yD,EAAK6xD,EAAOvkD,GAAQwkD,EAAOa,IAEzEC,EAAgC,CAACtlD,EAAOqlD,KAEnD,IAAIE,EAAqB,KACrBC,EAAsB,KAE1B,GAAIxlD,EAAMkY,IAAMmtC,EAAOntC,EAAG,CACxB,MAAMutC,EAAUzoE,KAAKC,MAAM+iB,EAAMmY,EAAI,IAA6B,GAC5DutC,EAAc,IAAI,QAAMD,EAASzlD,EAAMkY,GACvCytC,EAAe,IAAI,QAAMF,EAASJ,EAAOntC,GAE/CqtC,EAAaX,EAAM5kD,EAAO0lD,EAAaC,GACvCH,EAAcZ,EAAMc,EAAaC,EAAcN,GAGjD,OAAO3yD,EAAK6xD,EAAOvkD,GAAQulD,EAAYC,EAAahB,EAAOa,M,iCC3E7D,yDA4Be,IAd+C,EAAGO,WAAUztC,IAAGD,QAC5E,MAAM4jC,EAAU,WAChB,OACE,gBAAC,IAAO,CAACuH,WAAYvH,EAAS7sC,QAAS22C,GACrC,qBAAGx5D,IAAK0vD,EAAS5pE,UAAU,2BAA2BilB,UAAW,aAAaghB,MAAMD,MAClF,0BAAQ4lB,GAAI,EAAGC,GAAI,EAAG1wC,EAAG,IAA+B+wC,KAAM,0BAASprD,QACvE,qBAAGmkB,UAAU,qBACX,gBAAC,IAAe,CAAC2D,MAAM,e,kCCpBjC,uHAgBO,MAAM+qD,EAAgB,YAEhBC,EAA8B7zE,GACzC,WAAa0kB,MAAM,CACjBjmB,KAAM,WAEHkmB,QAAQivD,EAAe,CACtB3xE,QAASjC,EAAE,oCAEZ6kB,IAAI,IAAK7kB,EAAE,qDACXuQ,SAASvQ,EAAE,wBACdkiE,SAAU,aAGD5+B,EAAoBtjC,GAC/B,WAAa0kB,MAAM,CACjBjmB,KAAM,aAAqBuB,GAC3BkhE,WAAY2S,EAA2B7zE,GACvCujC,QAAS,IACTv7B,YAAa,IACbnI,MAAO,YAAsBG,GAC7Bq/B,WAAY,YAA2Br/B,GACvC2jC,WAAY,YAA2B3jC,GACvC4jC,MAAO,YAAsB5jC,GAC7B6jC,OAAQ,YAAuB7jC,GAC/BoE,MAAO,IACPoE,UAAW,IACXs7B,aAAc,YAAmC9jC,KAGxC8zE,EAAcr1E,IACzB,GAAKm1E,EAAc7yD,KAAKtiB,GAGxB,OAAO,IAAYA,EAAKV,MAAM,KAAKg2E,W,kCCnDrC,+DA4Ee,IA3D+B,EAC5CxwC,UACAywC,sBACA9vD,cACA+vD,UACAlwD,gBAEA,MAAOmwD,GAAsB,YAC3BD,EAAaA,EAAH,uBAAmC,wBAExChT,GAAY,YAAS,aACtB,EAAEjhE,GAAM,2BACd,OACE,gBAAC,IAAW,CAACK,MAAOL,EAAE,sBAAuBkkB,YAAaA,EAAaH,UAAWA,GAC/EiwD,GACC,gCACE,gBAAC,KAAU,CACT7yE,KAAM,IAAeD,KAAI,eACZ,gCACbzC,KAAMw1E,EAAaA,EAAH,gBAA4B,eAC5C9/D,MAAOnU,EAAE,2BACT6Q,SAAU7Q,EAAE,6CACZuQ,UAAQ,IAEV,gBAAC,KAAU,CACTpP,KAAM,IAAeD,KAAI,eACZ,wCACbzC,KAAMw1E,EAAaA,EAAH,uBAAmC,sBACnD9/D,MAAOnU,EAAE,qCAEX,gBAAC,KAAa,gBACC,uCACbvB,KAAMw1E,EAAaA,EAAH,uBAAmC,sBACnD9/D,MAAOnU,EAAE,sCAIbk0E,EAAmBnzE,OACnB,gBAAC,IAAmB,CAClBX,UAAWmjC,EAAQ9kC,KACnBu1E,oBAAqBA,EACrBC,QAASA,IAGb,gBAAC,KAAU,CACT9yE,KAAM,IAAeD,KAAI,eACZ,4BACbzC,KAAMw1E,EAAaA,EAAH,QAAoB,OACpC9/D,MAAOnU,EAAE,mBACT6Q,SAAU7Q,EACR,mGAEF8Q,WAAYmwD,EAASlgE,OAA4B,SAAnBkgE,EAASlgE,MACvCwP,WAAY0wD,EAASlgE,OAA4B,SAAnBkgE,EAASlgE,Y,kCCpE/C,kCAAO,MAAMozE,EAA+B,CAC1Cj0E,KAAM,gBACNiU,MAAO,gBACPiV,YAAa,iBACbL,SAAU,uBACVra,WAAY,KACZwa,KAAM,KACNC,YAAY,EACZE,KAAK,EACLJ,OAAQ,iBACRmrD,kBAAmB,e,kCCXrB,2EAcO,MAAMC,EAA0Br0E,GACrC,WAAa0kB,MAAM,CACjB6e,QAAS,IACTv7B,YAAa,IACbvJ,KAAM,aAAqBuB,GAC3BknE,IAAK,YAAoBlnE,GACzB2jC,WAAY,YAA2B3jC,GACvCq/B,WAAY,YAA2Br/B,GACvC4jC,MAAO,YAAsB5jC,GAC7B6jC,OAAQ,YAAuB7jC,GAC/BwI,UAAW,IACXs7B,aAAc,YAAmC9jC,M,kCC1BrD,4OA0BO,MAAMs0E,EAA6C,CAACp0E,EAAiBiB,KAC1E,OAAQjB,GACN,KAAK,YAAU+zD,MACb,OAAO,iBACT,KAAK,YAAUlqD,KACb,OAAO,IACT,KAAK,YAAUrB,KACb,OAAQvH,GACN,KAAK,IAAS+sD,UACZ,OAAO,IACT,KAAK,IAASI,YACZ,OAAO,aACT,KAAK,IAASE,eACZ,OAAO,IACT,KAAK,IAASE,uBACZ,OAAO,IACT,KAAK,IAASE,aACZ,OAAO,IACT,KAAK,IAASgF,aACZ,OAAO,IACT,KAAK,IAAS5E,qBACZ,OAAO,IACT,KAAK,IAASF,aACZ,OAAO,IACT,QACE,OAEN,QACE,SAIOylB,EAAgD,CAACr0E,EAAiBiB,KAC7E,OAAQjB,GACN,KAAK,YAAU+zD,MACb,OAAO,wBAAc,kBACvB,KAAK,YAAUlqD,KACb,OAAO,WACT,KAAK,YAAUrB,KACb,OAAQvH,GACN,KAAK,IAAS+sD,UACd,KAAK,IAAS0F,aACZ,OAAO,IACT,KAAK,IAASxF,iBACZ,OAAO,IACT,KAAK,IAAS0F,cACZ,OAAO,mBACT,KAAK,IAASxF,YACZ,OAAO,aACT,QACE,OAEN,QACE,SAIOkmB,EAA+B,CAACrzE,EAAc8yD,KACzD,OAAQ9yD,GACN,KAAK,IAAeqzD,cACpB,KAAK,IAAeE,qBAClB,OAAO,IAAI,cAAYT,EAAO,OAAF,QAG1BwgB,aAAc,EACdC,aAAc,EACdC,cAAe,EACfC,gBAAiB,EACjBC,gBAAiB,EACjBC,eAAgB,EAChBC,WAAW,EACXC,cAAc,GACX,YAAc7zE,KAErB,KAAK,IAAegzD,aAClB,OAAO,IAAI,sBAAoBF,EAAO,CAAEvZ,QAAS,KACnD,QACE,U,4hBCpFC,MAAMu6B,EAAyC,I,IAAA,OAAEtzE,EAAM,YAAE0vE,GAAW,EAAKluE,EAAK,IAA/B,0BACpD,OAAQxB,GACN,KAAK,IAAe,eACpB,KAAK,IAAekgB,QAClB,OAAO,gBAAC,IAAW,iBAAK1e,EAAK,CAAElD,UAAW,EAAG,CAAE,WAAYoxE,OAE7D,KAAK,IAAe1vD,UAClB,OAAO,gBAAC,IAAe,iBAAKxe,IAE9B,KAAK,IAAeye,OAClB,OAAO,gBAAC,IAAqB,iBAAKze,IAEpC,KAAK,IAAeqoB,KACpB,KAAK,IAAelJ,QAClB,OAAO,gBAAC,IAAiB,iBAAKnf,IAEhC,KAAK,IAAe4e,UAClB,OAAO,gBAAC,IAA6B,iBAAK5e,IAE5C,KAAK,IAAeqf,QAClB,OAAO,gBAAC,IAAoB,iBAAKrf,IAEnC,QACE,OAAO,gBAAC,IAAU,iBAAKA,MAIhB+xE,EAAgD,I,IAAA,OAAEvzE,GAAM,EAAKwzE,EAAM,IAAnB,YAC3D,OACE,uBACE/wD,MAAO,CACLyE,MAAOlnB,EACH,YAAkBA,GAAQ03B,QAAQt4B,MAClC,YAAkB,IAAeghB,WAAWsX,QAAQt4B,QAG1D,gBAACk0E,EAAU,eAACtzE,OAAQA,GAAYwzE,O,kCCvDtC,sIAyJe,IA7HiD,EAC9D/0E,YACA4zE,sBACAC,cAEA,MAAM,EAAEj0E,GAAM,4BACPo1E,EAAuBC,GAA4B,YAAe,GACnEC,EAAwB,SAAuB,IAC/CC,GAAqBvB,GAEpBxgE,GAAa,QAAEgiE,EAAO,MAAEpzE,IAAW,YACxC6xE,EAAaA,EAAH,2BAAuC,4BAE5CwB,GAAa,YAASxB,EAAaA,EAAH,oBAAgC,qBACjE,cAAEyB,EAAa,gBAAEC,GAAoB,eACpCC,EAAmBC,GAAwB,YAAwB,GACpEC,EAA0B,WAC1BC,EAAU,aAAW,mBAAoB,YACzCC,IAAYR,GAAWpzE,GACvBuO,EAAgBqlE,EAAkB,GAAR5zE,EAEhC,aAAuBoR,EAAYzS,OAEnC,MAqBMk1E,EAAc,CAClB,CACEC,YAAal2E,EAAE,+BACfm2E,UAAW,KAEb,CACED,YAAal2E,EAAE,iCACfm2E,UAAW,MAaThiE,EAAQnU,EAAE,wBACVo2E,EACFp2E,EADkB41E,EAChB,6DACA,qFAQN,OANA,YAAgB,K,MACVpiE,EAAYzS,QAAU,MACO,QAA/B,EAAA+0E,EAAwB5hC,eAAO,SAAEmiC,UAElC,CAAC7iE,EAAYzS,QAGd,gCACGw0E,GAAqBH,GACpB,gBAAC,IAAS,CAACW,QAASA,EAAS5hE,MAAOA,GAClC,gBAAC,IAAmB,CAClBpQ,GAAIgyE,EACJO,UAAWniE,EACXZ,kBAAkB,uBAClBgjE,cAAc,2BACdn2E,UAAWA,EACX61E,YAAaA,EACbO,YAAU,EACVhjE,YAAaA,EAAYzS,MACzBuP,SAjEe,CAAChO,EAAa0F,KACrC0tE,EAAcliE,EAAY/U,KAAM6D,GAChCqzE,EAAgBniE,EAAY/U,MAAM,GAClCi3E,EAAcD,EAAUh3E,KAAM,YAAyBuJ,EAAa1F,IACpEqzE,EAAgBF,EAAUh3E,MAAM,GAChCo3E,GAAqB,IA6DbY,OA1DYC,I,MACpB,MAAMC,EAA0B,IAAUD,GAC1CrB,GAA0BsB,GAC1BrB,EAAsBphC,QAAU,IAAOwiC,GACnCC,IACFjB,EAAcliE,EAAY/U,KAAM,IAChCi3E,EACED,EAAUh3E,KAC+C,QAAxD,EAAA+U,EAAYzS,QAAU,KAAkB00E,EAAU10E,aAAM,QAAI,QAqD3D,gBAAC,IAAc,KACb,gBAAC,IAAU,KACPi1E,EAKA,gBAAC,IAAc,KACZh2E,EAAE,4DALL,gBAAC,IAAc,CAACoB,QAAQ,QAAQmqD,KAAM,gBAAC,KAAwB,OAC5D56C,QAWVykE,GAAyB5hE,EAAYzS,QAAU,MAChD,gBAAC,KAAU,CACTI,KAAM,IAAeD,KACrBqP,SAAUiD,EAAYzS,QAAU,IAChCtC,KAAMg3E,EAAUh3E,KAChB0b,IAAK27D,EACL3hE,MAAOnU,EAAE,6BAA4B,eACxB,6BACb6Q,SAAUulE,EACVQ,UAAWhB,EAAoB,IAAiB1zE,QAAU,IAAiBsrB,QAC3Eld,SA9DiBV,IACvBimE,EAAqBP,EAAsBphC,QAAQvsC,SAASiI,EAAMhG,OAAO7I,MAAMoW,UA8DzEK,OA3De5H,IACrB,MAAMinE,EAAyBjnE,EAAMhG,OAAO7I,MAAMoW,OAClDu+D,EAAcD,EAAUh3E,KAAMo4E,S,kCCzFlC,2E,qHCAA,sCAGKC,EAHL,qBAGA,SAAKA,GACH,wBADF,CAAKA,MAAiB,KAqBtB,MAAMC,EAAkB,CAACzwC,EAAM3kC,KACSA,EAAO0uE,OAAS,IACnC1wD,KAAMq3D,GAGhBA,EAAWv4E,OAAS6nC,EAAK7nC,MAAQu4E,EAAWv4E,OAAS,QAAQ6nC,EAAK7nC,MAIvEw4E,EAA2BC,GAC1BA,EAEDA,EAAalqD,WACR,YAAkBkqD,EAAalqD,WAAWmqD,UAAWD,EAAalqD,WAAWoqD,YAGlFF,EAAaG,QACR,YAAkBH,EAAaG,QAAQF,WAGzC,GAVmB,GAmBfG,EAAmB,CAAChxC,EAAwB3kC,KACvD,IAAI41E,EAAgC,IAAenqD,mBAC/CjB,EAAmB,KAEvB,GAAKxqB,GAAWA,EAAO4f,OAEhB,GAAI5f,EAAO4f,SAAW,IAAe,eAAgB,CAE1D,MAAM21D,EAA+BH,EAAgBzwC,EAAM3kC,GAEtDu1E,EAEMA,EAAalqD,YACtBuqD,EACEL,EAAalqD,WAAWzL,SAAWu1D,EAAkBrkD,UACjD,IAAe9Q,UACf,IAAeC,OACrBuK,EAAW8qD,EAAwBC,IAC1BA,EAAaG,SACtBE,EAAgB,IAAe,eAC/BprD,EAAW8qD,EAAwBC,IAC1BA,EAAanqD,UACtBwqD,EAAgB,IAAej1D,SAX/Bi1D,EAAgB,IAAej1D,aAejCi1D,EAAgB51E,EAAO4f,OAEvB4K,EAAW8qD,EAAwBF,EAAgBzwC,EAAM3kC,KAAYA,EAAOwqB,cAvB5EorD,EAAgB,IAAex1D,UA0BjC,MAAO,CACLoK,WACA1tB,KAAM6nC,EAAK7nC,KACXkD,OAAQ41E,K,kCCvFZ,2GAkBA,MAAMC,EAA2B,EAAG71E,aAClC,MACM81E,EAAc,CAClB14C,OAFW,GAGXD,MAHW,IAMPysB,EAAO,gBAAC,IAAU,eAAC5pD,OAAQA,GAAY81E,IAE7C,OAAI91E,IAAW,IAAeggB,WAAahgB,IAAW,IAAeigB,OAIjE,uBAAKwC,MAAO,CAAEyE,MAAO,YAAkBlnB,GAAQ03B,QAAQt4B,QACrD,uCAAS02E,GACP,0BACEx3E,UAAU,sDACV4rD,GAAI6rB,EACJ5rB,GAAI4rB,EACJt8D,EAAGs8D,IAEJnsB,IAMFA,GAGIosB,EAA8E,EACzFnG,iBACAC,WACApB,QACAxb,gBACA+iB,iBAEA,MAAM,EAAE53E,GAAM,2BACd,OACE,uBAAKC,UAAU,yCACX23E,GACA,uBAAK33E,UAAU,mDAAmDwxE,GAEnE5c,GACC,uBAAK50D,UAAU,mDACZD,EAAE,kCAGNqwE,EAAMl1D,IAAI,EAAGgR,WAAU1tB,OAAMkD,YAE1B,uBACE1B,UAAW,IAAW,6CAA8C,CAClE,wDAAyDuxE,IAE3DlvE,IAAK7D,GAEH+yE,EAKA,wBAAMvxE,UAAU,gDAA8C,KAJ9D,uBAAKA,UAAU,8CACb,gBAACu3E,EAAwB,CAAC71E,OAAQA,KAKtC,uBAAK1B,UAAU,8CAA8CxB,IAC3D+yE,GACA,uBAAKvxE,UAAU,kDAAkDksB,Q,kCCnF/E,8DA6Ce,IA9BiC,EAAG2S,QAAOC,SAAQtgC,WAChE,MAAM0rE,EAAU,WACV0N,EAAgB,UACpB,IAAM,aAAep5E,EAAM,CAAE4J,OAAQ,GAAI4oE,aAAa,IACtD,CAACxyE,IAEH,OACE,yBACE,wBAAMqgC,MAAOA,EAAOC,OAAQA,EAAQurC,GAAI,GAAIrqE,UAAW,kCACvD,yBACE,gBAAC,IAAuB,CACtBimC,EAAG,EACHD,EAAG,IAA0B,EAC7BjJ,QAAS,IAAQh9B,EAAE,kCAGvB,gBAAC,IAAO,CAACoxE,WAAYjH,EAASntC,QAASv+B,GACrC,wBACE0b,IAAKgwD,EACLlqE,UAAU,sCACVimC,EAAGpH,EAAQ,EACXmH,EAAGlH,EAAS,EAAI,GAEf84C,O,kCCtCX,+CA6Ce,IA9BoC,EACjD3xC,IACAD,IACAj1B,UACA8mE,UACAC,sBAEA,MAAMlO,EAAU,WAChB,OACE,gBAAC,IAAO,CAACuH,WAAYvH,EAAS7sC,QAAS86C,EAASnnC,SAAUonC,GACxD,qBACE93E,UAAU,0BACV+Q,QAASA,EACTkU,UAAW,aAAaghB,MAAMD,KAC9B9rB,IAAK0vD,GAEL,0BACEhe,GAAI,EACJC,GAAI,EACJ1wC,EAAG,IACHnb,UAAU,oCAEZ,qBAAGilB,UAAU,qBACX,gBAAC,IAAQ,CAAC2D,MAAM,e,kCCtC1B,uEA8Fe,IArFiB,EAC9BiW,QACAC,SACAi5C,iBACAC,eACAC,YACAC,mBAEA,MAAM,EAAEn4E,GAAM,2BACRoxE,EAAa,SAAa,MAC1BjH,EAAU,YACT2G,EAAOC,GAAY,qBAEpBqH,EAAqBJ,GAAkBh4E,EAAE,6BAEzCq4E,EAAoB,UACxB,IACE,aAAeD,EAAoB,CACjC/vE,OAAQ,GACR4oE,aAAa,IAEjB,CAACmH,IAEGE,EACJ,wBACEpyC,EAAGpH,EAAQ,EACXmH,EAAGlH,EAAS,EAAI,EAChB9+B,UAAU,kCACVka,IAAKgwD,GAEJkO,GAIL,OACE,gCACE,iCACY,YACVl+D,IAAK42D,EACL9wE,UAAU,8BACV+Q,QAAUxE,IACRA,EAAE+rE,kBACFJ,EAAaD,KAGf,wBACE/9D,IAAKi3D,EACLnxE,UAAW,EAAG,0CACd6+B,MAAOA,EACPC,OAAQA,IAEV,yBACE,wBACE9+B,UACE6wE,EACI,+CACA,wCAEN7qC,EAAGlH,EACHD,MAAOA,EACPC,OAAQ+xC,EAAQ,EAAI,IAGrBmH,GAAgBnH,GACf,yBACE,gBAAC,IAAmB,CAClB0H,eAAgBP,EAChB/xC,EAAG,IACHD,EAAG,IAA0B,EAC7BjJ,QAASh9B,EAAE,mCAIhBo4E,IAAuBC,EACtB,gBAAC,IAAO,CAACr7C,QAASo7C,EAAoBhH,WAAYjH,GAC/CmO,GAED,O,kCCtFd,yCA+Be,uBApB2B,EAAGziC,UAASi6B,qB,YACpD,MAAM,OAAE/wC,EAAM,MAAED,GAAU+W,EAAQlE,aAC5B,SAAEhvB,EAAQ,YAAEvB,EAAW,KAAEqJ,EAAI,SAAEtH,GAAa0yB,EAAQltC,UACpD0qD,EAAiD,QAAjC,EAAmB,QAAnB,EAAAjyC,aAAW,EAAXA,EAAazf,cAAM,eAAEw4B,oBAAY,eAAEtK,KAAM7vB,GAAMA,EAAEvB,OAASgsB,EAAKhsB,MAErF,OACE,gBAAC,IAAyB,CACxBoxE,gBAAsC,QAArB,EAAAzuD,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,KACxCgsB,KAAMA,EACNtJ,kBAAmBC,GAAe,YAAyBA,GAC3DhhB,UAA6B,QAAlB,EAAAuiB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEC,UAC/B0vE,eAAgBA,EAChB3sD,SAAUA,EACV2b,MAAOA,EACPC,OAAQA,EACRgxC,UAAW1c,O,kCC1BjB,uCA6Be,uBAjBmC,EAAGxd,UAASmiC,qBAC5D,MAAM,OAAEj5C,EAAS,GAAE,MAAED,EAAQ,KAAQ,IAC/B,UAAEo5C,EAAY,SAAQ,aAAEC,EAAe,SAAQ,aAAEF,EAAe,UACpEpiC,EAAQltC,WAAa,GAEvB,OACE,gBAAC,IAAQ,CACPm2B,MAAOA,EACPC,OAAQA,EACRi5C,eAAgBA,EAChBC,aAAcA,EACdC,UAAWA,EACXC,aAAcA,O,kCCxBpB,kPAySe,IA/PwC,EAAGp0C,MAAK00C,uBAC7D,MAAOr4E,GAAa,gBACd,OAAE6d,EAAM,cAAEy3D,GAAkB,cAC5BgD,EAAcD,EAAsBA,EAAH,IAAyB,IAC1D,YAAE97C,EAAW,QAAEhyB,GAAY,IAAMsT,EAAQw6D,IAAqBx6D,GAC7D06D,EAAeC,GAAoB,WAAe,KAClD58D,EAAe68D,GAAoB,WAAe,KACnD,EAAE74E,GAAM,2BAEd,YAAgB,K,MACd,MAAM84E,EAAkB,QAAT,EAAA/0C,aAAG,EAAHA,EAAKh8B,YAAI,eAAG,kBACvB+wE,IACFF,EAAiBE,GACjBpD,EAAiBgD,EAAH,cAA6BI,KAE5C,CAACJ,EAAa30C,EAAK2xC,IACtB,MACMltE,EAAgC,CACpC,CACE8yB,QAAQ,EACRp7B,KAAM,cAAYA,KAClBq7B,KAAM,cAAYx3B,GAClB3D,cAuFJ,OACE,gBAAC,IAAW,CAAC2jB,WAAY20D,EAAax0D,aAAW,GAC9CyY,GAAeA,IAAgB,IAAYrrB,UAC1C,gBAAC,KAAU,CACT6C,MAAOnU,EAAE,uCACTvB,KAASi6E,EAAH,eACNv3E,KAAM,IAAeD,KACrBqP,UAAQ,IAER,KACJ,gBAAC,KAAe,CACd9R,KAASi6E,EAAH,iBACNvkE,MAAOnU,EAAE,2BACT+4E,UACE,gBAAC,IAAO,CACNpoC,SAAS,QACT3T,QACE,yBACGh9B,EACC,sHAKN,gBAAC,IAAQ,OAGbuQ,UAAQ,EACRssC,QAAS,CACP,CACE97C,MAAO,QACPoT,MAAOnU,EAAE,qCACTg5E,eACE,gBAAC,KAAU,CACTv6E,KAASi6E,EAAH,gBACNv3E,KAAM,IAAeD,KACrB2P,SAAU,gBAtGP,KACf,IAAIA,EACJ,OAAQ8rB,GACN,KAAK,IAAYxrB,OACfN,EACE,gBAAC,QAAK,CAAC7Q,EAAGA,EAAGgB,GAAG,oB,2CAC2B,IACzC,qBACEC,KAAM,IAAoB,IAAYkQ,QACtCvH,OAAO,SACPqvE,IAAI,uBAAqB,QAGtB,I,eACO,oC,eAA0B,iC,MAAc,4C,uDAIxD,MAEF,KAAK,IAAY7nE,OACfP,EACE,gBAAC,QAAK,CAAC7Q,EAAGA,EAAGgB,GAAG,oB,kDACkC,IAChD,qBACEC,KAAM,IAAoB,IAAYmQ,QACtCxH,OAAO,SACPqvE,IAAI,uBAAqB,QAGtB,I,0BACkB,gC,8BAAqC,6C,4CAIhE,MAEF,KAAK,IAAY3nE,UACfT,EACE,gBAAC,QAAK,CAAC7Q,EAAGA,EAAGgB,GAAG,oB,4CAC4B,IAC1C,qBACEC,KAAM,IAAoB,IAAYqQ,WACtC1H,OAAO,SACPqvE,IAAI,uBAAqB,QAGtB,I,0BACkB,4C,YAAgC,IACvD,wG,KAGJ,MAEF,QACEpoE,EACE,gBAAC,QAAK,CAAC7Q,EAAGA,EAAGgB,GAAG,oBAAkB,2IAOxC,OAAO,mCAAmBid,EAAO0e,YAAV,aAAmC9rB,IAuC3B,MACnBN,UAAQ,KAId,CACExP,MAAO,SACPoT,MAAOnU,EAAE,4CAETg5E,eACE,gBAAC,KAAqB,CACpBnoE,SAAU7Q,EACR,8GAEFvB,KAASi6E,EAAH,oBACNlwE,UAAWA,EACXk3C,aAAc,CAAC,WAAY,QAC3BD,YAAaz/C,EAAE,oCACfk5E,mBAnJa,CAACh4E,EAAc4H,KAAsB,MAAC,SAAM5H,EAAiB,QAAX,EAAA4H,aAAI,EAAJA,EAAM3F,aAAK,eAAE1E,OAoJ5EslB,WAAS,EACTo1D,WAAS,EACT7oE,SAAU,CAACyF,EAAGD,EAAGkrB,KACf,GAAIA,GAAOA,EAAIj5B,KAAM,CACnB2tE,EAAiBgD,EAAH,oBAAmC13C,GACjD,MAAMx2B,EAASw2B,aAAG,EAAHA,EAAKj5B,KAAK,kBACrByC,GACFquE,EAAiB,SAAO7pE,OAAOxE,aAS9CG,aAAO,EAAPA,EAASoP,MACR,gBAAC,IAAS,CAACg8D,QAAQ,OAAO5hE,MAAOnU,EAAE,iCACjC,gBAAC,IAAa,CACZo5E,YAAU,EACV36E,KAASi6E,EAAH,cACNW,SAAS,OACTC,SAAS,SACTl1D,MAAO,CAAET,KAAM,MAEdg1D,GAGH,gBAAC,IAAc,KACb,gBAAC,IAAU,KACT,gBAAC,IAAc,KACZ34E,EACC,iJAQX28B,GAAeA,IAAgB,IAAYrrB,UAC1C,gBAAC,IAAS,CACRykE,QAAS,2BACT5hE,MAAOnU,EAAE,oCAET,gBAAC,IAAU,CAACokB,MAAO,CAAEV,QAAS,SAC5B,gBAAC,IAAc,KACb,gBAAC,IAAa,CACZjlB,KAASi6E,EAAH,iBACNW,SAAS,OACTC,SAAS,SACTl1D,MAAO,CAAET,KAAM,KACfrT,SAAU,CAACipE,EAAQzjE,KACjB4/D,EAAiBgD,EAAH,iBAAgC5iE,KAG/CkG,IAGL,gBAAC,IAAc,KACb,gBAAC,IAAM,aAAW,kBAAkB5a,QAAQ,UAAU4P,QAtMpC,KAC5B6nE,EAAiB,iBAsMJ74E,EAAE,iCAKT,KAEH28B,GAAeA,IAAgB,IAAYprB,OAC1C,gCACE,gBAAC,IAAiB,CAACioE,WA5MQ,CAACh2C,IAClC,OAAQA,GACN,KAAK,IAAYryB,OACf,OAAOnR,EAAE,sCACX,KAAK,IAAYoR,OACf,OAAOpR,EAAE,sCACX,KAAK,IAAYsR,UACf,OAAOtR,EAAE,yCACX,QACE,OAAOA,EAAE,qCAmMwBy5E,CAA2B98C,IACxD,gBAAC,IAAS,CACRxoB,MAAOnU,EAAE,oDACT+1E,QAAQ,oBAER,gBAAC,IAAI,CAAC2D,UAAW,IAAaC,OAC5B,gBAAC,IAAkB,CAAClB,iBAAkBA,OAK5C,gBAAC,IAAY,CACXv3E,KAAMlB,EAAE,uDACRiB,KAAM,IAAgB07B,MAGxB,Q,yDCpSV,gGAQO,MAAMi9C,EAAa,IACxB,YAAyB,iBAAgB,IAAU,M,kCCTrD,oHAoBA,MAAMC,EAAS,EAAG71D,eAChB,MAAM,EAAEhkB,GAAM,2BACd,OACE,gBAAC,QAAK,CACJA,EAAGA,EACHgB,GAAG,aACH84E,SAAS,6DACTC,WAAY,CAAC/1D,MAKbg2D,EAAuC,EAAG9jB,eAAcj4C,a,MAC5D,MAAM,EAAEje,GAAM,4BAEPi6E,EAAcC,GAAmB,WAAe,IAKvD,OACE,gBAAC,KAAe,CACdD,aAAcA,EACdE,oBAP6BrxE,IAC/BoxE,EAAgB,IAAID,EAAcnxE,KAOhC+wE,OAAQA,GAER,gBAAC,KAAmB,CAACp7E,KAAMuB,EAAE,6BAC3B,gBAAC,IAAY,CAACK,MAAOL,EAAE,4BAA6B+mD,aAAc9oC,EAAOzV,aAErD,UAArByV,aAAM,EAANA,EAAQgjD,UACP,gBAAC,KAAmB,CAACxiE,KAAMuB,EAAE,0BAC3B,gBAAC,IAAuB,CACtBI,UAAW6d,EAAOslB,QAAQ9kC,KAC1B8D,SAAuC,QAA7B,EAAA2zD,aAAY,EAAZA,EAAcoF,uBAAe,eAAEvzD,QAG3C,KAEJ,gBAAC,KAAmB,CAACtJ,KAAMuB,EAAE,uBAC1Bie,EAAOzV,YAAc,IAAUwJ,eAC9B,gBAAC,IAAwB,MAEzB,gBAAC,IAAc,CAACvT,KAAK,yBAGzB,gBAAC,KAAmB,CAACA,KAAMuB,EAAE,+BAC3B,gBAAC,IAAoB,OAEvB,gBAAC,KAAmB,CAACvB,KAAMuB,EAAE,sBAC3B,gBAAC,IAAY,SAkBN,IAZyC,EAAGie,SAAQi4C,mBACjE,MAAM,EAAEl2D,GAAM,2BACd,OACE,gBAAC,IAAW,CAACK,MAAOL,EAAE,gCACpB,gBAAC,IAAY,CAAC4jC,MAAO3lB,EAAO2lB,MAAOp7B,UAAWyV,EAAOzV,YACrD,2BACE,gBAACwxE,EAAI,CAAC9jB,aAAcA,EAAcj4C,OAAQA,Q,oiBCykBnC,IAxkB+B,EAC5C5d,QACAo4E,mBACA9gC,gBACAyiC,gBACAC,eAAeD,EACfnZ,WACAqZ,aACA33E,kBACA43E,aAAY,MAEZ,MAAM,EAAEv6E,GAAM,2BACRw6E,EAAW,YAEX,MACJC,EAAK,aACLC,EACAz8D,OAAQ08D,EACRnF,QAASoF,EACTC,OAAQC,EAAY,OACpBn5E,EACA+zE,cAAeqF,EACfpF,gBAAiBqF,GACf,cAEEC,EAA4B,aAAQ,MACnCC,EAAyBC,GAAkC,aAAgB,CAChFtnD,MAAO,IAAU9K,SACjBxmB,SAAU,IAAU0mB,OACpB7oB,UAAW,cACX0zB,KAAM,WAGF4kD,EAAcD,EAAsBA,EAAH,IAAyB,GAC1D/C,EAAgB,cACpB,CAACpzE,EAAavB,EAAkCq6E,KAC9CL,EAAoB,GAAGrC,IAAcp2E,IAAcvB,EAAOq6E,IAE5D,CAAC1C,EAAaqC,IAEVpF,EAAkB,cACtB,CAACrzE,EAAakzE,EAAkB4F,KAC9BJ,EAAsB,GAAGtC,IAAcp2E,IAAckzE,EAAS4F,IAEhE,CAAC1C,EAAasC,IAGV/8D,EAA6Bw6D,EAC/B,IAAMkC,EAAclC,GACpBkC,EACEnF,EAA6CiD,EAC/C,IAAMmC,EAAenC,EAAkB,IACvCmC,EACEC,EAA2CpC,EAC7C,IAAMqC,EAAcrC,EAAkB,IACtCqC,EACEO,EAA0B,IAAMV,EAAc,oBAE5C5gE,IAAKuhE,GAAkBrzB,IAAKszB,GAAkBphE,IAAKqhE,IACzDpB,GAAiB,GACbqB,GAAsB,UAC1B,IACEH,GACI,CACEjqD,YAAa,CACX6kB,WAAYolC,GACZhlC,iBAAkBilC,YAAoB,KACtCnlC,UAAWolC,YAAoB,KAGnC,KACN,CAACF,GAAkBC,GAAkBC,KAEjC3a,GAAiB,YAAQ5iD,EAAOpe,MAAMqtE,QAAUuO,GAAsBx9D,EAAOpe,MAAMqtE,OACnFwO,GAA2BrB,GAAc,YAAcxZ,KAE3DpiE,KAAMk9E,GACN3zE,aAAevJ,KAAMm9E,IAA2B,GAChD/7E,OAASsjB,SAAU04D,IAAyB,GAC5Cr4C,KAAOykB,IAAK6zB,GAAe36E,KAAM46E,IAAmB,IAClDvG,GACIhyC,KAAOzpB,IAAKiiE,IAAgB,IAAOnB,GAEpCjE,GAAWqF,IAAgB,WAAiC,IAAiBzuD,UAC7E0uD,GAAYC,IAAiB,aAE9BC,GAAmC,cAChCC,GAA4C,OAAD,6BAEhD,GADA3G,EAAc,wBAAwB,GAClCsG,GAGF,OAFAtG,EAAc,oBAAqB,SACnCA,EAAc,2BAA2B,GAG3C,MAAM4G,EACJ3kC,IACA0kC,aAAkB,EAAlBA,EAAoB18D,KAClB,EAAGxe,KAAM09D,KAAkBA,GAAelnB,EAAc8L,eAAeob,KAEvEyd,GAAwBA,EAAqBn7E,MAC/Cu0E,EAAc,2BAA2B,GACzCA,EAAc,oBAAqB4G,EAAqBn7E,QAExDu0E,EAAc,2BAA2B,GACzCA,EAAc,oBAAqB,QAGvC,CAAC/9B,EAAeqkC,GAAatG,IAGzB6G,GAAiC,cACrC,CAAOniE,EAAqBga,IAAyB,OAAD,6B,MAClD,GAAI4nD,GAGF,OAFAtG,EAAc,yBAA0B,WACxCA,EAAc,2BAA2B,GAG3C,GAAmB,YAAf4E,KAA2C,QAAd,EAAAr8D,EAAOylB,eAAO,eAAE84C,kBAAkB,CACjE9G,EAAc,sBAAuBt7D,GACrCs7D,EAAc,wBAAyB,cACvC,MAAM/0D,EAAa,YACjB1C,EAAOulB,IAAIzpB,IACXqa,EACAnW,EAAOulB,IAAIrpB,IACX8D,EAAOulB,IAAIykB,IACXhqC,EAAOulB,IAAI/O,eACXra,GAEIqiE,EAAkB97D,UAAqBA,EAAWxD,qBACnDs/D,GAIH/G,EAAc,yBAA0B+G,GACxC/G,EAAc,2BAA2B,KAJzCA,EAAc,yBAA0B,MACxCA,EAAc,2BAA2B,QAO/C,CACEsG,GACA1B,EACA5E,EACAz3D,EAAOylB,QACPzlB,EAAOulB,IAAIykB,IACXhqC,EAAOulB,IAAIrpB,IACX8D,EAAOulB,IAAI/O,eACXxW,EAAOulB,IAAIzpB,MAIT2iE,GAAqB,cACzB,CAAO3iE,EAAaI,EAAa8tC,IAAgB,OAAD,6B,YAC9C,GAAIgzB,GAA6BE,EAAgC,OACjE,GAAIT,IAAgB/4E,aAAM,EAANA,EAAQg7E,aAAa,OAIzC,GAHAV,GAAa,IAAiBzuD,SAC9BkoD,EAAc,gBAAiB,IAAiBloD,SAChDkoD,EAAc,uBAAuB,GACjCsG,GAMF,OAHAtG,EAAc,mBAAmB,GACjCC,EAAgB,YAAY,QAC5BD,EAAc,uBAAuB,GAGvC,MAAM5rC,EAAkB,YAAc/vB,GAChC6iE,EAA0B9yC,IAAoB,IAAYv4B,OAC1DsrE,EAA2B,WAAb5b,GAAyB,YAAkBlnD,GAG3D+vB,IAAoB7rB,EAAOulB,IAAI42B,cACjCsb,EAAc,mBAAoB5rC,GAEhC8yC,IAA4B3+D,EAAOulB,IAAI1b,aACzC4tD,EAAc,mBAAmB,IAG9BkH,GAA2B3+D,EAAOulB,IAAI1b,aACzC4tD,EAAc,mBAAmB,GAGnC,MAAMthD,EACJwoD,GAA2B3+D,EAAOulB,IAAI1b,YAAc7J,EAAOulB,IAAIriC,KAAO2oC,EAEpE1V,IAAYnW,EAAOulB,IAAIriC,OACzBw0E,EAAgB,YAAY,GAAO,GACnCD,EAAc,WAAYthD,IAG5B,MAAMzT,EAAa,YACjB5G,EACAqa,EACAja,EACA8tC,EACAhqC,EAAOulB,IAAI/O,eACG,QAAd,EAAAxW,EAAOylB,eAAO,eAAEtpB,YACH,QAAb,EAAA6D,EAAOwlB,cAAM,eAAEppB,gBAGXyiE,QAA2B,YAC/B/iE,EACA4G,EACAs6D,GAA6BC,IAGzB,OACJ9lD,EAAM,UACNC,EAAS,iBACTgC,EACAG,WAAYulD,GACVD,EAIJ,GAFAX,GAAc9kD,GAEVA,IAAqB,IAAW3c,UAkBlC,OAjBAuhE,GAAa,IAAiB/5E,SAC9BwzE,EAAc,gBAAiB,IAAiBxzE,SAChDwzE,EAAc,uBAAuB,GACrCA,EAAc,SAAU,CACtBtgD,QAAQ,EACRC,UAAW,KACXmC,WAAY,GACZmnC,iBAAkB,CAChBlgE,KAAM,gBACN0C,KAAM,IAAe41B,IACrBxW,SAAU,EACVO,cAAe,IAEjBg+C,oBAAqB,KACrBqP,wBAAwB,SAE1BuH,EAAc,iBAAkB,oBAAkB7a,QAWpD,GAPAgiB,IAAgBlB,KAAgB19D,EAAOxf,MAAQi3E,EAAc,OAAQmH,GACrEA,GACsB,SAApB5+D,EAAOgjD,WACNhjD,EAAOjW,YAAYvJ,MACpBwf,EAAOjW,YAAYwL,cAAgB,KACnCkiE,EAAc,mBAAuBmH,EAAH,QAEjB,YAAfvC,GAA4B33E,GAAuC,SAApBsb,EAAOgjD,SAaxD,OAZAgb,GAAa,IAAiBe,SAC9BtH,EAAc,gBAAiB,IAAiBsH,SAChDtH,EAAc,uBAAuB,GACtB,YAAf4E,GAA4B5E,EAAc,iBAAkB,oBAAkBzc,SAC/D,YAAfqhB,KACiB,QAAd,EAAAr8D,EAAOylB,eAAO,eAAExb,iBACjBwtD,EAAc,6BAA8BqH,EAAiB,SAC3C,SAApB9+D,EAAOgjD,UACLhjD,EAAO7Z,MAAMwjB,WAAa,oBAAkBizC,QAC5CuhB,GAC8D,QAA5D,EAAAW,aAAgB,EAAhBA,EAAkBp9D,KAAM1P,GAAMA,EAAE9O,OAAS,IAAe41B,YAAI,eAAEQ,qBAwBpE,GAnBAm+C,EAAc,gBAAiBtgD,GAC/BsgD,EAAc,mBAAoBrgD,GAClCqgD,EAAc,oBAAqBqH,GAC/BA,EAAiB10E,OAAS,GAC5BqtE,EAAc,iCAAiC,GAC/CA,EAAc,0BAA2BqH,EAAiB,IAC1DrH,EAAc,6BAA8BqH,EAAiB,MAE7DrH,EAAc,0BAA2B,CACvCj3E,KAAM,UACN0C,KAAM,IAAey1B,QACrBrW,SAAU,EACVO,cAAe,KAEjB40D,EAAc,6BAA8B,MAC5CA,EAAc,iCAAiC,IAEjDA,EAAc,0BAA0B,GAEpCqH,EAAiB10E,OAAS,EAC5B,OAAQ00E,EAAiB,GAAG57E,MAC1B,KAAK,IAAe41B,IAClB2+C,EAAc,iBAAkB,oBAAkB7a,QAC9CljB,IACF+9B,EAAc,wBAAwB,GACtC0G,GAAiCW,EAAiB,GAAGxlD,qBAEvD,MAEF,KAAK,IAAeX,QAClB8+C,EAAc,iBAAkB,oBAAkBzc,SAClDsjB,GAA+BQ,EAAiB,GAAGj8D,cAAc,GAAIsT,GACrE,MAEF,KAAK,IAAeyC,WAClB6+C,EAAc,iBAAkB,oBAAkB9a,QAClD8a,EAAc,wBAAyBqH,EAAiB,GAAGj8D,cAAc,IACzE40D,EAAc,6BAA6B,GAC3C,MAEF,KAAK,IAAe5+C,oBAClB4+C,EAAc,iBAAkB,IAA4BuH,oBAOlEhB,GAAa,IAAiBe,SAC9BtH,EAAc,gBAAiB,IAAiBsH,SAChDtH,EAAc,uBAAuB,MAEvC,CACEgF,EACA/4E,EACA+zE,EACAsG,GACA/a,EACAhjD,EAAOulB,IAAI42B,aACXn8C,EAAOulB,IAAI1b,YACX7J,EAAOulB,IAAIriC,KACX8c,EAAOulB,IAAI/O,eACXxW,EAAOylB,QACPzlB,EAAOwlB,OACPxlB,EAAOxf,KACPwf,EAAOgjD,SACPhjD,EAAOjW,YAAYvJ,KACnBwf,EAAOjW,YAAYwL,YACnByK,EAAO7Z,MAAMwjB,SACbqzD,EACAC,EACAC,EACAQ,GACArB,EACA33E,EACAgzE,EACAyG,GACAzkC,EACA4kC,KAIEW,GAA8B,aAAoBR,IAElDS,GAA2B,cAAkB,KACjD,GAAIlC,GAA6BE,EAAgC,OACjE,MAAMphE,EAAM2hE,GACNvhE,EAAM,YAAa0mD,IACnB5Y,EAAM,YAAoB4Y,IAChC6U,EAAc,UAAWgG,IAA0B,GACnDhG,EAAc,UAAWv7D,GAAK,GAC9Bu7D,EAAc,UAAWztB,GAAK,GAC9B0tB,EAAgB,WAAW,GAAM,GACjCuH,GAA4BnjE,EAAKI,EAAK8tC,IACrC,CACDi1B,GACAxB,GACA/F,EACAD,EACA7U,GACAoa,EACAE,IAGF,YAAgB,OACZV,GAASqB,IAAiBC,IAAkBV,GAAmBp9D,EAAOulB,IAAI/O,iBAC1ExW,EAAOulB,IAAIzpB,KACXmjE,GAA4Bj/D,EAAOulB,IAAIzpB,IAAKkE,EAAOulB,IAAIrpB,IAAK8D,EAAOulB,IAAIykB,MACxE,CACDwyB,EACAC,EACAoB,GACAT,EACA6B,GACAj/D,EAAOulB,IAAIzpB,IACXkE,EAAOulB,IAAIrpB,IACX8D,EAAOulB,IAAIykB,IACXhqC,EAAOulB,IAAIriC,KACX8c,EAAOulB,IAAI/O,eACXsnD,KAGF,MAAMlrE,GAAW,UAAc,KAC7B,GAAIoN,EAAOulB,IAAIspC,gBACb,OAAU9sE,EAAE,yBAAL,MAET,GAAI42E,KAAc,IAAiBoG,QACjC,OAAOh9E,EAAE,wBAEX,GAAI42E,KAAc,IAAiB10E,QACjC,OAAQg6E,IACN,KAAK,IAAWvhE,kBACd,OAAO3a,EAAE,kCAEX,KAAK,IAAWs3B,mBACd,OAAOt3B,EACL,mHAGJ,KAAK,IAAW4a,YACd,OAAO5a,EACL,6FAGJ,KAAK,IAAWge,iBACd,OAAOhe,EAAE,kDAEX,KAAK,IAAW6a,uBACd,OAAO7a,EACL,4KAIJ,KAAK,IAAWggB,qBACd,OAAOhgB,EACL,qGAGJ,QACE,OAAOA,EAAE,iDAIf,OAAOA,EAAE,iEACR,CAACA,EAAGie,EAAOulB,IAAIspC,gBAAiB8J,GAAWsF,KAExCkB,GAAc,cAAkB,KAC/BvB,KACHnG,EAAc,iBAAkB,IAChCA,EAAc,YAAa,KAE7Bz3D,EAAOpe,MAAMg/D,aAAe6W,EAAc,oBAAqB,IAC/Dz3D,EAAOpe,MAAMutE,mBAAqBsI,EAAc,2BAA2B,GACnD,SAApBz3D,EAAOgjD,WAOV0a,IAAejG,EAAc,OAAQ,KACrCz3D,EAAOjW,YAAYq1E,aAClBp/D,EAAOjW,YAAYwL,cAAgB,MAClCooE,IACDlG,EAAc,mBAAoB,KAVlCz3D,EAAOjW,YAAYwL,cAAgB,KACjCyK,EAAOjW,YAAYwL,cAAgB,MAClCooE,IACDlG,EAAc,mBAAoB,KAQrC,CACDA,EACAz3D,EAAOgjD,SACPhjD,EAAOpe,MAAMg/D,YACb5gD,EAAOpe,MAAMutE,kBACbnvD,EAAOjW,YAAYwL,YACnByK,EAAOjW,YAAYq1E,YACnBzB,GACAC,GACAF,KAyFF,OAtFA,aAAuB19D,EAAOulB,IAAIzpB,KASlC,YAAgB,K,MAEd,GAAIohE,EAAgC,OAEhCZ,IACc,QAAhB,EAAAC,EAAStmC,eAAO,SAAEmiC,SAGpB,MAAM,WAAEtO,EAAY9wC,WAAYqmD,GAAqB,cACrD,GAAIA,aAAgB,EAAhBA,EAAkBvjE,IAAK,CACzB,MAAMtb,EAAO,YAAkB6+E,EAAiBvjE,KAChD27D,EAAc,OAAQj3E,GAAM,GAC5Bi3E,EAAc,mBAAuBj3E,EAAH,QAAe,GACjDi3E,EAAc,UAAW4H,EAAiBvjE,KAAK,GAC3CujE,EAAiBv1B,UACnB2tB,EAAc,UAAW4H,EAAiBv1B,UAAU,GAElDu1B,EAAiBn2E,YACnBuuE,EAAc,UAAW4H,EAAiBn2E,YAAY,GAExDwuE,EAAgB,WAAW,GAAM,GACjCuH,GACEI,EAAiBvjE,IACjBujE,EAAiBv1B,SACjBu1B,EAAiBn2E,YAGjB4gE,EACF,YAAUA,GACPp7D,KAAMi7D,I,YACL,GAAI,YAAkBA,EAAOxpE,KAAKuL,QAAS,CACzC,MAAM,UAAEs7D,GAAc2C,EAAOxpE,KAAKuL,OAClC,KAAK2zE,aAAgB,EAAhBA,EAAkBvjE,KAAK,CAC1B,MAAMtb,EAAO,YAAkB6+E,EAAiBvjE,KAChD27D,EAAc,OAAQj3E,GAAM,GAC5Bi3E,EAAc,mBAAuBj3E,EAAH,QAAe,GACjDi3E,EAAc,UAAWzQ,EAAUhuC,WAAWld,KAAK,GAC/CujE,EAAiBv1B,UACnB2tB,EAAc,UAAW4H,EAAiBv1B,UAAU,GAElDu1B,EAAiBn2E,YACnBuuE,EAAc,UAAW4H,EAAiBn2E,YAAY,GAExDwuE,EAAgB,WAAW,GAAM,GACjCuH,GACEjY,EAAUhuC,WAAWld,IACrBkrD,EAAUhuC,WAAW8wB,SACrBkd,EAAUhuC,WAAW9vB,aAGH,QAAlB,EAAA89D,aAAS,EAATA,EAAWtL,eAAO,eAAE0N,aAAiD,QAAjB,QAAlB,EAAApC,aAAS,EAATA,EAAWtL,eAAO,eAAE0N,aACxDqO,EACE,0BACAzQ,EAAUtL,QAAQ0N,WAAWn8D,YAC7B,QAMJiV,QAAQ/d,MACN,8BAA8B2lE,kBAA8C,QAAnB,EAAW,QAAX,EAAAH,EAAOxpE,YAAI,eAAEuL,cAAM,eAAExI,UAInF0tB,MAAOzsB,IAEN+d,QAAQ/d,MAAM,sCAAsC2lE,MAAgB3lE,KAElD,WAAb6+D,GAAyBya,IAClCyB,MAKD,CAAChC,IAGF,gBAAC,IAAW,CAAC96E,MAAOA,UAASL,EAAE,mBAC7B,gBAAC,KAAU,CACTma,IAAKqgE,EACLr5E,KAAM,IAAeD,KACrBzC,KAASi6E,EAAH,UACNvkE,MAAOnU,EAAE,2BACT6Q,SAAUA,GACV0sE,gBAAiB1sE,GACjB+lE,UAAWA,GACXp/D,OAAShL,IACP,MAAMgxE,EAAahxE,EAAE5C,OAAO7I,MAAMoW,OAC9B3K,EAAE5C,OAAO7I,QAAUy8E,IACrB9H,EAAc,UAAW8H,GACzBN,GAA4BM,EAAYv/D,EAAOulB,IAAIrpB,IAAK8D,EAAOulB,IAAIykB,OAGvE33C,SAAW9D,IACT4wE,KACAF,GAA4B1wE,EAAE5C,OAAO7I,MAAMoW,OAAQ8G,EAAOulB,IAAIrpB,IAAK8D,EAAOulB,IAAIykB,MAC/E,eACY,qBACb13C,UAAQ,EACRO,WAAyB,WAAbmwD,GAAyBya,KAEzB,WAAbza,GAAyBya,IACxB,gBAAC,IAAU,CAAC1qE,QAASmsE,KAEtBl/D,EAAOulB,IAAI1b,aACV,gCACE,gBAAC,IAAe,CAAC4wD,YAAaA,IAC7Bz6D,EAAOulB,IAAIriC,OAAS,IAAYoQ,QAC/B,gBAAC,IAAK,CAACksE,UAAQ,EAACr8E,QAAQ,OAAOf,MAAOL,EAAE,4CACrCA,EAAE,kDAKG,WAAbihE,GAAyB,gBAAC,IAAkB,CAACwX,iBAAkBA,O,kCCppBtE,gFAEO,MAAMiF,EACX,yCAQWC,EAA6B,KAKxC,MACEC,EACAC,EACAC,GACE,aAAgCJ,EAAmD,CACrF52D,QAAQ,EACRi3D,eAAgB,OAChBC,gBAAiB,aAEnB,MAAO,CAACJ,EAAyBC,EAA4BC,K,kCC1B/D,mDAuBe,IAZmC,EAAGz9E,QAAO0mD,kBAC1D,gBAAC,IAAW,CAAC1mD,MAAOA,GAClB,gBAAC,IAAgB,CAAC49E,UAAW,IAAsB12B,iBAEnD,gBAAC,IAAgB,CAAC02B,UAAW,IAAsBz2B,gBAElDT,IAAiB,IAAU/0C,gBAC1B,gBAAC,IAAgB,CAACisE,UAAW,IAAsBx2B,iB,kCClBzD,0GAsIe,IArH2C,EAAGw2B,gB,MAC3D,MAAM,EAAEj+E,GAAM,4BAEZie,QAAQ,aAAE6lB,GAAc,cACxB4xC,GACE,eACE,SAAEnQ,GAAa,aAAiB,MAC/B2Y,EAAoBC,GAAyB,aAC9CC,EAAY,KAChB1I,EAAc,gBAAgBuI,cAAsB,GACpDE,EAAsBr6C,aAAY,EAAZA,EAAem6C,GAAWl2E,OAG5Cs2E,EAAoB,K,MACxB3I,EAAc,gBAAgBuI,EAAa,MACd,QAAzB,EAAAn6C,aAAY,EAAZA,EAAem6C,UAAU,eAAE3yC,UAC7BoqC,EAAc,gBAAgBuI,cAAsB,GAEpDvI,EAAc,gBAAgBuI,cAAsB,IAIlDK,EAAc,K,OACY,QAAzB,EAAAx6C,aAAY,EAAZA,EAAem6C,UAAU,eAAE5yC,UAG9BqqC,EAAc,gBAAgBuI,cAAsB,GACpDvI,EAAc,gBAAgBuI,SAAkBC,IAHhDxI,EAAc,gBAAgBuI,EAAa,KAK7CvI,EAAc,gBAAgBuI,cAAsB,IAGhDM,EAAe,KACnB7I,EAAc,gBAAgBuI,cAAsB,GACpDvI,EAAc,gBAAgBuI,aAAqB,GACnDvI,EAAc,gBAAgBuI,cAAsB,IAGhDO,EAAiB,KACrB9I,EAAc,gBAAgBuI,cAAsB,IAuDtD,OACE,gCACE,uBAAKh+E,UAAU,gEACZ,YAA2Bg+E,EAAWj+E,GAAG0tD,WAChB,QAAzB,EAAA5pB,aAAY,EAAZA,EAAem6C,UAAU,eAAE5yC,UAC1B,gBAAC,IAAM,CACLprC,UAAU,wBACVmB,QAAS,IAAcq9E,KACvBztE,QAASotE,G,KAGR,GAAcp+E,EAAXulE,EAAa,kBAAuB,sBAAsBvlE,EAAE,wBAItE,uBAAKC,UAAU,6BACZ,YAA2Bg+E,EAAWj+E,GAAG2tD,cAE5C,uBAAK1tD,UAAU,6CAtEC,M,QAClB,OAA6B,QAAzB,EAAA6jC,aAAY,EAAZA,EAAem6C,UAAU,eAAE7yC,UACtB,gBAAC,IAAS,CAAC16B,SAAU6tE,EAAcG,QAASJ,EAAaL,UAAWA,KAEhD,QAAzB,EAAAn6C,aAAY,EAAZA,EAAem6C,UAAU,eAAE5yC,SAE3B,gCACE,gBAAC,IAAM,CACLprC,UAAU,uCACVmB,QAAS,IAAcu9E,MACvBlB,UAAQ,EACRzsE,QAASotE,GAET,wBAAMn+E,UAAU,sCACd,gBAAC,IAAoB,MAAI,IACxBD,EAAE,6CAA8C,CAC/C4+E,sBAAuB,YAA2BX,EAAWj+E,GAAG0tD,eAIpE6X,GACA,gBAAC,IAAO,CAACvoC,QAASh9B,EAAE,qBAAsB2wC,SAAS,SACjD,gBAAC,IAAM,CACL1wC,UAAU,yBACVmB,QAAS,IAAcu9E,MACvB3tE,QAASqtE,GAET,gBAAC,IAAe,SAOrB9Y,EACLvlE,EAAE,uCAAwC,CACxC6+E,mBAAoB,YAA2BZ,EAAWj+E,GAAG0tD,YAG/D,gBAAC,IAAM,CACLztD,UAAU,wBACVmB,QAAS,IAAcq9E,KACvBztE,QAASwtE,EACTjzB,KAAM,gBAAC,IAAc,OAEpBvrD,EAAE,yCAA0C,CAC3C8+E,oBAAqB,YAA2Bb,EAAWj+E,GAAG0tD,cAwBNqxB,O,kCCjIlE,6GAwHe,IArF6B,EAAGruE,WAAUguE,UAAST,gB,UAChE,MAAM,EAAEj+E,GAAM,4BAEZie,QAAQ,aAAE6lB,GAAc,OACxB+2C,GACE,eACE,SAAEtV,GAAa,aAAiB,KAChCyZ,EAAqB,CACzBnzC,QAAS7rC,EAAE,uBACXisC,QAASjsC,EAAE,gCACX+rC,UAAW/rC,EAAE,0BAEf,OACE,uBAAKC,UAAU,8BACb,gBAAC,IAAW,KACV,gBAAC,IAAa,CACZxB,KAAM,gBAAgBw/E,qBACtB9pE,MAAOnU,EAAE,mBACTsT,MAAO0rE,EACP3+E,MAAO,IAAY4mD,QACnB72C,SAAUm1D,EACVxhD,WAAS,IAxCQ,EAAChjB,EAAek9E,KACzC,OAAQl9E,GACN,KAAK,IAAYkmD,QACf,OAAO,gBAAC,IAAmB,CAACg3B,UAAWA,IACzC,KAAK,IAAYj3B,iBACf,OAAO,gBAAC,IAAsB,CAACi3B,UAAWA,IAC5C,KAAK,IAAY92B,UACf,OAAO,gBAAC,IAAkB,CAAC82B,UAAWA,IACxC,QACE,OAAO,OAiCJgB,CAAkD,QAA/B,EAAyB,QAAzB,EAAAn7C,aAAY,EAAZA,EAAem6C,UAAU,eAAEl2E,YAAI,eAAE6jC,YAAaqyC,GAClE,gBAAC,KAAU,CACT98E,KAAM,IAAeD,KACrBzC,KAAM,gBAAgBw/E,0BACtB9pE,MAAOnU,EAAE,gCACTokB,MAAO,CAAE86D,SAAU,QACnBruE,SAAU7Q,EACR,yFAEF8Q,WAAYy0D,IAEd,gBAAC,KAAU,CACTpkE,KAAM,IAAeD,KACrBzC,KAAM,gBAAgBw/E,0BACtB9pE,MAAOnU,EAAE,gCACTokB,MAAO,CAAE86D,SAAU,QACnBruE,SAAU7Q,EACR,4GAEF8Q,WAAYy0D,IAEd,gBAAC,KAAe,CACdpkE,KAAM,IAAeD,KACrBzC,KAAM,gBAAgBw/E,6BACtB9pE,MAAOnU,EAAE,4BACT6Q,SAAU7Q,EACR,sFAEFm/E,WAAY,gBAAC,IAAc,KAAEn/E,EAAE,uBAC/BokB,MAAO,CAAE86D,SAAU,QACnBpuE,WAAYy0D,IAEd,gBAAC,KAAe,CACdpkE,KAAM,IAAeD,KACrBzC,KAAM,gBAAgBw/E,uBACtB9pE,MAAOnU,EAAE,qBACT6Q,SAAU7Q,EAAE,8CACZm/E,WAAY,gBAAC,IAAc,KAAEn/E,EAAE,uBAC/BokB,MAAO,CAAE86D,SAAU,QACnBpuE,WAAYy0D,IAEd,gBAAC,KAAe,CACdpkE,KAAM,IAAeD,KACrBzC,KAAM,gBAAgBw/E,wBACtB9pE,MAAOnU,EAAE,sBACT6Q,SAAU7Q,EACR,iHAEFm/E,WAAY,gBAAC,IAAc,KAAEn/E,EAAE,uBAC/BokB,MAAO,CAAE86D,SAAU,QACnBpuE,WAAYy0D,KAGhB,gBAAC,IAAoB,CACnB70D,SAAW60D,OAAsBngD,EAAX1U,EACtBguE,QAASA,EACT5tE,YAAa,IAA8B,QAApB,EAAA+pE,aAAM,EAANA,EAAQ/2C,oBAAY,eAAGm6C,S,kCClHtD,2NAeO,MAAMmB,EAAkB,CAC7Bj0B,EACApE,EACAwe,EACAvlE,IAEI+mD,IAAiB,IAAU/0C,eAE3B,gBAAC,KAAU,CACT7Q,KAAM,IAAeD,KACrBzC,KAAK,eACL0V,MAAOnU,EAAE,mBACTy/C,YAAY,IACZ3uC,YAAU,IAKd,gBAAC,KAAU,CACT3P,KAAM,IAAeD,KACrBzC,KAAM0sD,EACNh3C,MAAOnU,EAAE,mBACT8Q,WAAYy0D,EACZh1D,UAAQ,IAKD8uE,EAAsD,EAAGpB,gB,UACpE,MAAM,EAAEj+E,GAAM,4BAEZie,QAAQ,aAAE6lB,EAAY,UAAEt7B,GAAW,cACnCktE,GACE,eACE,SAAEnQ,GAAa,aAAiB,KAChC1X,EAAsD,QAAxC,EAA+B,QAA/B,EAAyB,QAAzB,EAAA/pB,aAAY,EAAZA,EAAem6C,UAAU,eAAEl2E,YAAI,eAAE8jC,eAAO,eAAEgiB,YACxDyxB,EAAyB,IAAUzxB,GAErC,CAAC,CAAC,GAAI,KADNA,EAAY1yC,IAAK2sB,GAAQ,IAASA,KAE/By3C,EAAWC,GAAgB,WAAeF,GAC3CG,EAAgB,gBAAgBxB,sBAEhCyB,EAAuB,cAC3B,EAAGC,qBACD,MAAMC,EAAwB,IAC5BD,EAAexkE,IAAI,EAAE1c,EAAMsC,KACrB,IAAWA,GACN,CAAEtC,OAAMohF,UAAW9+E,GAExBA,EAAMsH,OACD,CAAE5J,OAAMsC,SAEV,OAGXy+E,EAAaG,GACbjK,EAAc,gBAAgBuI,6BAAsC2B,IAEtE,CAAClK,EAAeuI,IAElB,OACE,gCACE,gBAAC,IAAa,CACZx/E,KAAM,gBAAgBw/E,wBACtB9pE,MAAOnU,EAAE,wBACTe,MAAM,QACN+P,WAAYy0D,IAEd,gBAAC,IAAS,CACRwQ,QAAS,aAAW,gBAAgBkI,6BAAsC,cAC1Ex/E,KAAM,gBAAgBw/E,6BACtB9pE,MAAOnU,EAAE,4BAET,gBAAC,kBAAe,CACd2/E,eAAgBJ,EAChBO,YAAa9/E,EAAE,oBACfqkC,WAAYrkC,EAAE,0BACd+/E,UAAW//E,EAAE,yBACbggF,SAAUza,EACV0a,cAAc,EACdC,iBAAkBR,KAGtB,gBAAC,KAAU,CACTv+E,KAAM,IAAeD,KACrBzC,KAAM,gBAAgBw/E,sBACtB9pE,MAAOnU,EAAE,mBACTy/C,YAAY,IACZ3uC,WAAYy0D,IAEb6Z,EAAgBK,EAAej3E,EAAW+8D,EAAUvlE,KAK9CmgF,EAAqD,EAAGlC,gBACnE,MAAM,EAAEj+E,GAAM,4BAEZie,QAAQ,UAAEzV,IACR,eACE,SAAE+8D,GAAa,aAAiB,KAEtC,OAAO6Z,EADe,gBAAgBnB,wBACAz1E,EAAW+8D,EAAUvlE,IAGhDogF,EAAyD,EAAGnC,gB,UACvE,MAAM,EAAEj+E,GAAM,4BAEZie,QAAQ,aAAE6lB,IACR,eACE,SAAEyhC,GAAa,aAAiB,KAChC8a,GAAgD,QAArC,EAA+B,QAA/B,EAAyB,QAAzB,EAAAv8C,aAAY,EAAZA,EAAem6C,UAAU,eAAEl2E,YAAI,eAAEikC,YAAI,eAAEC,UAAW,CAAC,IACpE,OACE,gBAAC,KAAe,CACdxtC,KAAM,gBAAgBw/E,sBACtB9pE,MAAOnU,EAAE,sBACTsgF,SAAUtgF,EAAE,0BACZy/C,YAAaz/C,EAAE,uBACf6Q,SAAU7Q,EAAE,uDACZuQ,UAAQ,EACRgwE,iBAAsC,IAApBF,EAASh4E,OAC3B+wE,WAAY7T,M,gFCxIlB,qEAyEe,IA5DmD,EAAGib,gBACnE,MAAM,EAAExgF,GAAM,4BAEZie,QAAQ,UAAE4O,IACR,cACJ,OACE,gBAAC,IAAW,CACVxsB,OAAQmgF,GAAaxgF,EAAE,6BACvB8jB,SAAU9jB,EACR,kGAEF+jB,WAAS,GAER8I,GACC,4BACG7sB,EAAE,wB,KACH,gBAAC,KAAY,CAACE,KAAM,iBAAeA,O,IAAU2sB,GAGjD,uBAAK5sB,UAAU,+BAA+BD,EAAE,mBAChD,gBAAC,KAAkB,CACjBvB,KAAK,qBACL0V,MAAOnU,EAAE,sBACTygF,SAAS,yBACTC,YAAa,IACb7vE,SAAU7Q,EAAE,uEAGd,gBAAC,KAAkB,CACjBvB,KAAK,mBACL0V,MAAOnU,EAAE,oBACTygF,SAAS,uBACTC,YAAa,IACb7vE,SAAU7Q,EACR,wFAIJ,uBAAKC,UAAU,+BAA+BD,EAAE,sBAChD,gBAAC,KAAkB,CACjBvB,KAAK,wBACL0V,MAAOnU,EAAE,sBACTygF,SAAS,4BACTC,YAAa,IACb7vE,SAAU7Q,EAAE,0EAGd,gBAAC,KAAkB,CACjBvB,KAAK,sBACL0V,MAAOnU,EAAE,oBACTygF,SAAS,0BACTC,YAAa,IACb7vE,SAAU7Q,EACR,8F,kCClEV,oCAuBe,IAlBoC,EAAGvB,WACpD,MAAM,EAAEuB,GAAM,2BACd,OACE,gBAAC,IAAW,CACVK,MAAOL,EAAE,sBACT8jB,SAAU9jB,EAAE,+DACZmkB,SAAS,WAET,gBAAC,KAAkB,CACjB1lB,KAAMA,EACN0V,MAAOnU,EAAE,uBACT6Q,SAAU7Q,EAAE,qDACZ2gF,wBAAsB,O,kCCjB9B,sEAuDe,IA5CV,EAAGlI,uBACN,MAAMC,EAAcD,EAAsBA,EAAH,IAAyB,IAE1D,EAAEz4E,GAAM,4BACR,cAAE01E,EAAa,gBAAEC,GAAoB,cAErCiL,EAAqB,aAAqBp0E,GAC9CkpE,EAAiBgD,EAAH,UAA0BlsE,EAAE5C,OAA4B7I,QAGlE8/E,EAAqB,aAAqBr0E,IAC9CkpE,EAAiBgD,EAAH,UAA0BlsE,EAAE5C,OAA4B7I,OACtE40E,EAAmB+C,EAAH,aAGlB,OACE,gBAAC,IAAc,CACboI,aAAc9gF,EAAE,wCAChB+gF,cAAe/gF,EAAE,wCACjBmkB,SAAS,wBAET,gBAAC,IAAW,KACV,gBAAC,KAAU,CACThjB,KAAM,IAAeD,KACrBzC,KAASi6E,EAAH,UACNvkE,MAAOnU,EAAE,4BACT6Q,SAAU7Q,EAAE,+CACZsQ,SAAUswE,IAEZ,gBAAC,KAAU,CACTz/E,KAAM,IAAeD,KACrBzC,KAASi6E,EAAH,UACNvkE,MAAOnU,EAAE,0BACT6Q,SAAU7Q,EACR,gGAEFsQ,SAAUuwE,IAEZ,gBAAC,IAAoB,CAACpI,iBAAkBA,Q,kCCjDhD,6HAqGe,IApFV,EAAGA,uBACN,MAAMC,EAAcD,EAAsBA,EAAH,IAAyB,IAE1D,EAAEz4E,GAAM,4BACR,OAAEie,EAAM,cAAEy3D,GAAkB,cAC5Bt1E,EAAoB,IAAM6d,EAAWy6D,EAAH,gBAClCluE,EAAiB,IAAMyT,EAAWy6D,EAAH,eAC9B3wE,EAAMqtB,EAAQC,GAAa,YAChCj1B,GAAaoK,EACT,CACEtK,KAAM,cAAYA,KAClBE,YACA3B,KAAM+L,EACN42B,UAAU,EACV9F,QAAQ,GAEV,MAGA0lD,EAAcviF,IAClBi3E,EAAiBgD,EAAH,aAA4Bj6E,IA2B5C,OARA,YAAgB,KACd22B,IACGC,GACD7qB,GACAzC,GACA2tE,EAAiBgD,EAAH,qBAAoC3wE,IACnD,CAACqtB,EAAQC,EAAW7qB,EAAQzC,EAAM2tE,EAAegD,IAGlD,gCACE,gBAAC,IAAS,CACR3C,QAAS,aAAW,gBAAiB,YACrC5hE,MAAOnU,EAAE,6BAET,gBAAC,IAAoB,CACnBuT,kBAAkB,uBAClBgjE,cAAc,2BACdn2E,UAAWA,EACX61E,YAAa,CACX,CACEC,YAAal2E,EAAE,gCACfm2E,UAjEe,wBAmEjB,CACED,YAAal2E,EAAE,wBACfm2E,UApEc,wBAuElB3iE,YAAahJ,EACbnK,MAAOmK,EACP8F,SA9CsBhO,IA5BH,yBA6BrBA,GACFozE,EAAiBgD,EAAH,aAA4BluE,GAC1C,YAAoB,CAClBpK,YACA0P,KAAMkxE,EACNt1E,WAAY,wBAAsB/B,UAjCd,wBAmCbrH,GACTozE,EAAiBgD,EAAH,aAA4B,IAC1ChD,EAAiBgD,EAAH,qBAAoC,KAElDhD,EAAiBgD,EAAH,aAA4Bp2E,MAqCxC,gBAAC,IAAc,KACb,gBAAC,IAAU,KACT,gBAAC,IAAc,KACZtC,EAAE,2E,kCC5FjB,4CA4Ce,IAzBoDmD,IACjE,MAAM,EAAEnD,GAAM,2BAIRwI,EAAY,CAChB,CACE8yB,QAAQ,EACRl7B,UAAW+C,EAAM/C,UACjBF,KAAM,cAAYA,KAClBq7B,KAAM,YAGV,OACE,gBAAC,IAAQ,CAAC/yB,UAAWA,GACnB,gBAAC,KAAgB,iBACXrF,EAAK,CACTs8C,YAAaz/C,EAAE,iCACfihF,eAhBcn4E,GACG,6BAAdA,EAAK3H,MAAqD,2BAAd2H,EAAK3H,KAgBpDu+C,aAAc,CAAC,WAAY,c,kCCtCnC,qJA2Fe,IAtEyC,EAAGg5B,kBACzD,MAAM,OAAEz6D,EAAM,cAAEy3D,EAAa,gBAAEC,GAAoB,eAC7C,EAAE31E,GAAM,2BAERkhF,EAAuB9sD,IAC3BshD,EAAiBgD,EAAH,WAA0BtkD,GAAS,GACjDuhD,EAAmB+C,EAAH,YAA0B,GAAM,IAE5CyI,EAAY,IAAMljE,EAAWy6D,EAAH,YAEhC,OACE,gCACE,gBAAC,IAAS,CAACvkE,MAAOnU,EAAE,uBAAwBsU,YAAU,EAACvQ,GAAG,YACxD,gBAAC,IAAI,CAACq9E,WAAY,CAAE5zD,QAAS,iBAC3B,gBAAC,IAAQ,KACP,gBAAC,IAAI,CACHvtB,UAAU,wBACVI,MAAO,IAAiB,IAAY8Q,QACpCo6C,KAAM,gBAAC,IAAU,MACjBv6C,QAAS,IAAMkwE,EAAoB,IAAY/vE,QAC/CkwE,WAAYF,IAAc,IAAYhwE,OACtCpN,GAAG,qBAGP,gBAAC,IAAQ,KACP,gBAAC,IAAI,CACH9D,UAAU,wBACVI,MAAO,IAAiB,IAAY+Q,QACpCm6C,KAAM,gBAAC,IAAU,MACjBv6C,QAAS,IAAMkwE,EAAoB,IAAY9vE,QAC/CiwE,WAAYF,IAAc,IAAY/vE,OACtCrN,GAAG,qBAGP,gBAAC,IAAQ,KACP,gBAAC,IAAI,CACH9D,UAAU,wBACVI,MAAO,IAAiB,IAAYiR,WACpCi6C,KAAM,gBAAC,IAAa,MACpBv6C,QAAS,IAAMkwE,EAAoB,IAAY5vE,WAC/C+vE,WAAYF,IAAc,IAAY7vE,UACtCvN,GAAG,wBAGP,gBAAC,IAAQ,KACP,gBAAC,IAAI,CACH9D,UAAU,wBACVI,MAAO,IAAiB,IAAYgR,OACpCk6C,KAAM,gBAAC,IAAS,MAChBv6C,QAAS,IAAMkwE,EAAoB,IAAY7vE,OAC/CgwE,WAAYF,IAAc,IAAY9vE,MACtCtN,GAAG,oBAGP,gBAAC,IAAQ,KACP,gBAAC,IAAI,CACH9D,UAAU,wBACVI,MAAO,IAAiB,IAAYkR,QACpCg6C,KAAM,gBAAC,IAAU,MACjBv6C,QAAS,IAAMkwE,EAAoB,IAAY3vE,QAC/C8vE,WAAYF,IAAc,IAAY5vE,OACtCxN,GAAG,yB,yDClFjB,6CAoBe,IAXKZ,IAClB,MAAM,EAAEnD,GAAM,2BACd,OACE,gBAAC,IAAc,KACb,gBAAC,IAAM,iBAAKmD,EAAK,CAAEhC,KAAK,SAASC,QAAS,IAAcq9E,KAAMhB,UAAQ,IACnEz9E,EAAE,yB,IAA0B,gBAAC,IAAc,U,kCCdpD,2GAuGe,IA/EyD,EACtEshF,uBACAC,mBACAC,iBAAgB,MAEhB,MAAM,EAAExhF,GAAM,4BAEZie,QACEygD,QAAQ,uBAAEyP,EAAsB,iBAAExP,IACnC,cACD+W,EAAa,cACb+L,GACE,eAEFhjF,KAAM65C,EACNj6C,KAAM45C,EACNp1C,YAAa6+E,EAAgB,qBAC7B9+E,GACE0+E,EAEEK,EAAW,GACjB,IACE1pC,EACA,EAAGx5C,UAAYkjF,EAASljF,GAAQ,gBAAC,KAAY,CAACyB,KAAK,iBAAiBzB,KAAMA,KAG5E,MAAO25C,EAAUv1C,GAAe,YAC9Bo1C,EACAspC,EACAG,GAGIE,GACJjjB,aAAgB,EAAhBA,EAAkBx9D,QAAS,IAAe21B,oBAEtC+qD,EAAS,cAcf,OAZA,YAAgB,KACdnM,EAAc,eAAgBt9B,GAC9BypC,EAAO,sBAAqB,GAAGvpC,KAAaipC,IAAoB3+E,GAC7D+J,KAAMk0D,IACL,MAAMzI,EAAQ,YAASyI,GACvB6U,EAAc,cAAetd,KAE9BvpC,MAAOnf,GAAQ+xE,EAAc,cAAe/xE,EAAIzN,WAGlD,CAACs/E,EAAkB7L,EAAe+L,EAAenpC,EAAW11C,EAAsBw1C,IAGnF,gCACE,uBACEh0B,MACG+pD,GAA2ByT,EAExB,GADA,CAAEl+D,QAAS,SAIjB,gBAAC,IAAa,CACZjlB,KAAK,YACL0V,MAAOnU,EAAE,oCACTsT,MAAOquE,EACPthF,MAAOshF,EAASJ,GAChBx9D,WAAS,EACTxT,UAAQ,KAGX6nC,GAAYopC,GAAiB,gBAAC,IAAe,CAAC3+E,YAAaA,EAAavE,IAAK85C,KAC5EwpC,GACA,gBAAC,IAAwB,CACvBnjF,KAAK,iBACLkE,gBAAiB21C,EACjBuoB,eAAgB0gB,O,kCChG1B,gEAgDe,IAhC6D,EAC1E5+D,WACAvB,cACAgK,eAEA,MAAM,EAAEprB,GAAM,2BACd,IAAIg9B,EACJ,MAAMvJ,EAAQ,YAAkB9Q,EAAUvB,EAAagK,GAsBvD,OAlBE4R,GAFGvJ,GAAiC,IAAvBA,EAAMgN,MAAMp4B,QAAuC,IAAvBorB,EAAM0L,MAAM92B,OAGnD,gBAAC,IAAK,CACJjH,QAAQ,OACRq8E,UAAQ,EACRp9E,MAAOL,EAAE,+DAKX,gBAAC,IAAqB,aACV,yBACV8hF,iBAAkB,IAClBruD,MAAOA,EACPsuD,gBAAc,IAKb,uBAAK9hF,UAAU,8BAA8B+8B,K,qZCVvC,WArBsD,I,IAAA,QACnE0Q,EAAO,MACPja,EAAK,iBACLquD,GAAgB,EACb3+E,EAAK,IAJ2D,wCAMnE,OACE,uBACElD,UAAW,EAAG,8BAA+B,CAAEytC,YAAU,YAC9CvqC,EAAM,cAAgB,2BAEjC,gBAAC,IAA4B,eAC3BswB,MAAOA,EACPquD,iBAAkBA,EAClBE,YAAat0C,GACTvqC,Q,kCC7BZ,uEAgEe,IAhDyD,EACtE/C,YACAmC,WACA0/E,iBAEA,MAAM,EAAEjiF,GAAM,4BAEZie,QAAQ,UACNzV,EACA62B,YAAY,IAAE63B,GACdwH,QAAQ,iBAAEC,EAAkBujB,kBAAmBC,KAE/C,cACEC,EAAsB7/E,GAAY,CACtCrC,KAAM,mBACNC,SAAU,CACRC,cAIJ,OACE,gBAAC,IAAW,CAACC,MAAO4hF,GAAcjiF,EAAE,yBAA0B+jB,WAAS,GACrE,gBAAC,IAAa,CACZtlB,KAAK,4BACL0V,MAAOnU,EAAE,wDAEVwI,IAAc,IAAUqJ,WACvB,gBAAC,IAAa,CACZpT,KAAK,6BACL0V,MAAOnU,EAAE,kEAIX2+D,EAAiBx9D,OAAS,IAAe21B,qBAAsBqrD,WAE/D,gBAAC,IAAgB,CACf1jF,KAAK,iBACL0V,MAAOnU,EAAE,mDACT8tC,KAAMopB,EACN51D,IAAK8gF,IAGP,gBAAC,IAAU,S,kCC1DnB,+DAiIe,IArHe,KAC5B,MAAM,EAAEpiF,GAAM,4BACP49E,EAAyB,CAAEE,GAAiC,eAC3Dh3D,OAAQu7D,EAAW,eAAEtE,EAAc,gBAAEC,GAC3CF,GAAiCF,GAEjC3/D,QAAQ,SACNgjD,EACAr9B,OAAO,OAAE9c,EAAM,IAAEvb,IAClB,cACDmqE,GACE,cAEE4M,EAAqB,CACzB,CAAC,IAAgBtuB,MAAOh0D,EAAE,mBAC1B,CAAC,IAAgBuiF,aAAcviF,EAAE,0BACjC,CAAC,IAAgBwiF,WAAYxiF,EAAE,0BAE3ByiF,EACJl3E,EAAIwb,cAAgB,IAAgBw7D,YAChC,CACE,CAAC,IAA+BG,MAAO1iF,EAAE,mBACzC,CAAC,IAA+B2iF,UAAW3iF,EAAE,wBAE/C,CACE,CAAC,IAAoB0iF,MAAO1iF,EAAE,mBAC9B,CAAC,IAAoB4iF,OAAQ5iF,EAAE,oBAC/B,CAAC,IAAoB2iF,UAAW3iF,EAAE,wBAiB1C,OAdA,YAAgB,KACG,SAAbihE,GAAuB6c,IACzBpI,EAAc,eAAgB2M,GAAa,GAC3C3M,EAAc,wBAAyBqI,GAAgB,GACvDrI,EAAc,0CAA2CsI,GAAiB,KAE3E,CACD/c,EACA+c,EACAF,EACAuE,EACA3M,EACAqI,IAGA,gCACE,gBAAC,IAAa,CACZt/E,KAAK,eACL0V,MAAOnU,EAAE,2BACT6iF,UAAW7iF,EAAE,uBACb6Q,SAAU7Q,EACR,oGAGH8mB,GACC,gCACE,gBAAC,IAAa,CACZroB,KAAK,wBACL0V,MAAOnU,EAAE,8BACTsT,MAAOgvE,EACPjiF,MAAOL,EAAE,sCACT+jB,WAAS,IAEX,gBAAC,IAAa,CACZtlB,KAAK,0CACL0V,MAAOnU,EAAE,+BACTsT,MAAOmvE,EACPpiF,MAAOL,EAAE,2CACT6Q,SAAU7Q,EAAE,gEACZ+jB,WAAS,IAEVxY,EAAIwb,aAAmC,gBAApBxb,EAAIwb,aACtB,gCACE,0BAAK/mB,EAAE,4BACP,gBAAC,IAAc,KACZA,EACC,iIAGJ,gBAAC,IAAuB,CACtBvB,KAAK,wBACL0V,MAAOnU,EAAE,0BACT6Q,SAAU7Q,EACR,6HAGJ,gBAAC,IAAuB,CACtBvB,KAAK,gBACL0V,MAAOnU,EAAE,0BACT6Q,SAAU7Q,EACR,qHAGJ,gBAAC,IAAuB,CACtBvB,KAAK,0BACL0V,MAAOnU,EAAE,6BACT6Q,SAAU7Q,EACR,sIAGiB,cAApBuL,EAAIwb,aACH,gBAAC,IAAuB,CACtBtoB,KAAK,qCACL0V,MAAOnU,EAAE,yCACT6Q,SAAU7Q,EACR,2M,kCCrHpB,uDA+Ce,sBACZgT,IAAiC,CAChChL,YAAa,YAAqBgL,KAEpC,CACE8vE,SAAU,KALC,CA3BqD,EAClE9+D,WACAhc,cACA86E,eAEA,MAAMC,EAAc,SAAa/6E,GAC3Bg7E,EAAqB,IAAIjmB,gBAAgB7S,OAAOlC,SAAS8U,QAAQt2D,IACrE,IAAiBy8E,aAiBnB,OAdA,YAAgB,KACd,MAAMC,EAAsBH,EAAY7uC,QAClCivC,EAAe,YAAyBH,GAK9C,OAJIG,GAAgBA,IAAiBD,GACnCJ,EAASK,GAGJ,KACDn7E,IAAgBk7E,GAClBJ,EAASI,KAGZ,CAACF,EAAoBF,EAAUC,EAAa/6E,IAExC,gCAAGgc,EAASg/D,O,kCC5CrB,yGAkNe,uBAtL+C,EAAGntC,cAC/D,MAAM,EAAE71C,GAAM,4BACR,MAAE8+B,EAAK,OAAEC,GAAW8W,EAAQlE,aAC5B,KAAElnB,EAAI,UAAErqB,GAAcy1C,EAAQltC,WAE9B,sBACJy6E,EAAqB,aACrBC,EAAe,GAAE,iBACjBC,EAAmB,GAAE,oBACrBC,EAAsB,GAAE,wBACxBC,EAA0B,GAAE,aAC5BrL,EAAe,UACb1tD,EACEimC,EACJ2yB,EAAah7E,OACbi7E,EAAiBj7E,OACjBk7E,EAAoBl7E,OACpBm7E,EAAwBn7E,OACpBo7E,EAAa,IAAc,IAAc,EACzCC,EAAc,IAAuB,IACrCC,EAAiB,IAAc,IAC/BC,EACJ,IACA,IAAuB,GACH,IAAnBlzB,EAAuB,EAAI,KAExBmzB,EAAgB,EAAGC,eACvB,wBACE7jF,UAAU,4CACVinC,EACEu8C,EAAaK,EAAYH,IAAmB5kD,EAAS,EACjD,YAAa,IAAI,QAAM2kD,EAAa3kD,EAAS,GAAI,IAAI,QAAM,EAAGA,EAAS,IACvE,YACE,IAAI,QAAM,EAAGA,EAAS,GACtB,IAAI,QAAM2kD,EAAaD,EAAaK,EAAYH,MAM5D,OACE,iCAAa,wBACX,wBAAM1jF,UAAU,2BAA2B6+B,MAAOA,EAAOC,OAAQA,EAAQurC,GAAG,KAAKC,GAAG,OAEnF8Y,EAAaloE,IAAI,CAAC4oE,EAAI1hF,IACrB,qBAAGC,IAAKyhF,EAAGtlF,MACT,gBAAColF,EAAa,CAACC,UAAWzhF,IAC1B,iCACa,qBAAqB0hF,EAAGtlF,KACnCymB,UAAW,aAAaw+D,MACtB,IAAcrhF,EAAI,IAAgCA,EAAI,OAExD2O,QAAS+yE,EAAGC,iBAEZ,gBAAC,IAAyB,CACxBv5D,KAAMs5D,EACN3jF,UAAWA,EACX0vE,gBAAc,EACd3sD,SAAU4gE,EAAG5gE,SACb2b,MAAO,IACPC,OAAQ,IACR81B,eAAa,IAEdkvB,EAAG3hF,OACF,gBAAC,IAAkB,CACjB8jC,EAAG,IAA0B,EAC7BD,EAAG,IAAgC,EACnC0tC,SAAUoQ,EAAG3hF,WAMtBmhF,EAAoBpoE,IAAI,CAAC8oE,EAAK5hF,IAC7B,qBAAGC,IAAK2hF,EAAIxlF,KAAI,YAAa,kCAAkCwlF,EAAIxlF,MACjE,gBAAColF,EAAa,CAACC,UAAWzhF,EAAIghF,EAAah7E,SAC3C,qBACE6c,UAAW,aAAaw+D,iBAExB,KAAerhF,EAAIghF,EAAah7E,QAChC,KAAiChG,EAAIghF,EAAah7E,QAClD,QAGA,gBAAC,IAAW,CAACy2B,MAAO,IAAYC,OAAQ,IAAatgC,KAAMwlF,EAAIxlF,KAAM6D,IAAK2hF,EAAIxlF,UAInF+kF,EAAwBroE,IAAI,CAAC+oE,EAAK7hF,IACjC,qBAAGC,IAAK4hF,EAAIzlF,KAAI,YAAa,kCAAkCylF,EAAIzlF,MACjE,gBAAColF,EAAa,CAACC,UAAWzhF,EAAIghF,EAAah7E,OAASk7E,EAAoBl7E,SACxE,qBACE6c,UAAW,aAAaw+D,qBAEpB,KAAerhF,EAAIghF,EAAah7E,OAASk7E,EAAoBl7E,QAC7D,KACGhG,EAAIghF,EAAah7E,OAASk7E,EAAoBl7E,QACjD,QAGJ,gBAAC,IAAQ,CACPy2B,MAAO,IACPC,OAAQ,IACRk5C,aAAciM,EAAIjM,aAClBC,UAAWgM,EAAIC,YACfhM,aAAcA,EACdH,eAAgBkM,EAAIzlF,OAEtB,gBAAC,IAAkB,CACjBynC,EAAG,IAAgC,EACnCD,EAAG,IAAgC,EACnC0tC,SAAU3zE,EAAE,6CAMnBsjF,EAAiBnoE,IAAI,CAACipE,EAAK/hF,IAC1B,qBAAGC,IAAK8hF,EAAI3lF,KAAI,YAAa,0BAA0B2lF,EAAI3lF,MACzD,gBAAColF,EAAa,CACZC,UACEzhF,EAAIghF,EAAah7E,OAASk7E,EAAoBl7E,OAASm7E,EAAwBn7E,SAGnF,qBACE6c,UAAW,aAAaw+D,qBAEpB,KACGrhF,EACCghF,EAAah7E,OACbk7E,EAAoBl7E,OACpBm7E,EAAwBn7E,QAC5B,KACGhG,EACCghF,EAAah7E,OACbk7E,EAAoBl7E,OACpBm7E,EAAwBn7E,QAC5B,QAGJ,gBAAC,IAAQ,CACPy2B,MAAO,IACPC,OAAQ,IACRk5C,aAAcmM,EAAInM,aAClBC,UAAWkM,EAAID,YACfhM,aAAcA,OAMpB,qBACEjzD,UAAW,aAAa0+D,MACtBlzB,EAAiB,KAChBA,EAAiB,GAAK,IACvB,IACA,IACA,OAEFtsC,MAAO,CAAEigE,OAAQ,WACjBrzE,QAASoyE,GAET,yBACE,gBAAC,IAAiB,CAChBl9C,EAAG,EACHD,EAAG,IAA+B,IAClC6xC,QAAS93E,EAAE,uCAEb,wBACEkmC,EAAG,IAAqB,YACd,mBACVjmC,UAAU,kCAETD,EAAE,4C,kCCzMjB,+CA8Ee,IA1DyD,EACtE8+B,QACAC,SACA6yC,gBACAD,cAAa,EACbhwE,SACAkwE,aAAa,EACbhd,gBACAD,oBAEA,MAAM0vB,EAAU,YAEV,eAAEvvB,EAAc,aAAED,GAAiB,YACvCnzD,EACAizD,EACAC,GAEI0vB,EACJx5E,KAAKk8B,MAAMnI,EAAQ/zB,KAAKy5E,IAPT,KAO0Bz5E,KAAKk8B,MAAMlI,EAASh0B,KAAK05E,IAPnD,KAQXC,EACJ,qBACEx/D,UAAW,cAAc4Z,EAAQ+yC,MAAe,IAAc,EAAI0S,EAAgB,KAClFpqE,IAAKmqE,GAEL,oCACY,oBACVrkF,UAAU,wCACV6+B,MAAOA,EACPC,OAAQA,EACRotB,KAAM2I,EACN6vB,OAAQ/vB,EAAgBE,EAAe,gDAExC6c,GACC,wBACEiT,GAAIL,EAAgB,EACpBM,GAAIN,EAAgB,EACpBO,GAAIhmD,EAAQ+yC,EACZkT,GAAIR,EAAgB,EACpBI,OAAO,iDAMf,OAAO/S,EACL,gBAAC,IAAO,CACNR,WAAYkT,EACZ3zC,SAAS,SACT4gC,YAAY,EACZv0C,QAAS,mCAAe,2BAA2B+3B,IAElD2vB,GAED,I,kCC9DN,kCAAO,MAAMM,EAKX,cACEh5E,KAAK0jD,MAAQ,GACb1jD,KAAKinD,SAAW,IAAIgyB,IAGd,MACNxyB,EACAyyB,EACAC,EACA5pE,GAEA,MAAM,KAAE9c,GAASg0D,EACXQ,EAAWR,EAAO2yB,WAClB11B,EAAQ+C,EAAOM,gBACfsyB,EAAM31B,EAAMrnD,OAUlB,GARK88E,IAEHA,EAAU,IAAIF,KAEX1pE,IAEHA,EAAO,KAEL4pE,EAAQG,IAAI7mF,GAAhB,CAGA8c,EAAKvZ,KAAKvD,GACV0mF,EAAQtd,IAAIppE,GAAM,GAClB,IAAK,IAAI4D,EAAI,EAAGA,EAAIgjF,EAAKhjF,IACvB2J,KAAKu5E,MAAMtyB,EAASvD,EAAMrtD,IAAK6iF,EAAIC,EAAS5pE,GAE9C2pE,EAAGzyB,EAAQl3C,GACXA,EAAKipB,OAGC,IAAI/lC,EAAcsJ,GACTiE,KAAKw5E,UAAU/mF,GACvBsJ,KAAOA,EAGhB,UAAUtJ,GACR,IAAKA,EACH,OAAO,KAET,GAAIuN,KAAKinD,SAASqyB,IAAI7mF,GACpB,OAAOuN,KAAKinD,SAASzsD,IAAI/H,GAG3B,MAAMg0D,EAAiB,CACrBh0D,OACA+zD,MAAO,EACP4yB,WAAY,GACZryB,gBAAiB,GACjB0yB,aAAa,EACb19E,KAAM,IAIR,OAFAiE,KAAKinD,SAAS4U,IAAIppE,EAAMg0D,GACxBzmD,KAAK0jD,MAAM1tD,KAAKvD,GACTg0D,EAGT,QAAQ9oD,EAAgBC,GACtB,IAAKD,IAAWC,GAAUD,IAAWC,EACnC,OAEF,MAAM87E,EAAW15E,KAAKw5E,UAAU77E,GAC1Bg8E,EAAS35E,KAAKw5E,UAAU57E,GAE9B,GAAI+7E,EAAOP,WAAWz7E,GACpB,OAUFqC,KAAKu5E,MAAMG,EAPQ,CAACjzB,EAAgBl3C,KAClC,GAAIk3C,EAAOh0D,OAASmL,EAClB,MAAM,IAAIJ,MAAM,mBAAmB+R,EAAKqqE,UAAUnlE,KAAK,sBAAgB7W,KAEvE6oD,EAAOD,MAAQj3C,EAAKlT,SAIxBq9E,EAASD,aAAc,EACvBE,EAAOP,WAAWz7E,GAAU+7E,EAC5BC,EAAO5yB,gBAAgB/wD,KAAK2H,GAG9B,SAASlL,EAAcsJ,EAAW89E,EAA2BC,GAC3D95E,KAAKmP,IAAI1c,EAAMsJ,GAEX89E,IACoB,iBAAXA,EACT75E,KAAK+5E,QAAQtnF,EAAMonF,GAEnBA,EAAOt5D,QAAS1tB,GAAMmN,KAAK+5E,QAAQtnF,EAAMI,KAGzCinF,IACmB,iBAAVA,EACT95E,KAAK+5E,QAAQD,EAAOrnF,GAEpBqnF,EAAMv5D,QAAS3tB,GAAMoN,KAAK+5E,QAAQnnF,EAAGH,KAK3C,gBAAgBymF,GACd,MAAMC,EAAU,IAAIF,KACd,SAAEhyB,GAAajnD,MACf,MAAE0jD,GAAU1jD,KACZq5E,EAAM31B,EAAMrnD,OAElB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgjF,EAAKhjF,IAAK,CAC5B,MAAMowD,EAAiBQ,EAASzsD,IAAIkpD,EAAMrtD,IACrCowD,EAAOgzB,aACVz5E,KAAKu5E,MAAM9yB,EAAQyyB,EAAIC,IAK7B,aACE,MAAMa,EAAe,GAOrB,OANAh6E,KAAKumD,gBAAgB,CAACz8C,EAAG9V,KACvB8V,EAAE/N,KAAKk+E,MAAQj6E,KAAK0jD,MAAMrnD,OAASrI,EAAEqI,OACrC29E,EAAahkF,KAAK8T,EAAErX,QAGtB0hB,QAAQ2qB,IAAIk7C,EAAavlE,KAAK,aACvBulE,EAAavlE,KAAK,e,8HC/I7B,8CAsCe,IA1ByD,EAAGuc,UAASkJ,IAAGD,QACrF,MAAM4jC,EAAU,WAChB,OACE,gBAAC,IAAO,CAACuH,WAAYvH,EAAS7sC,QAASA,GACrC,qBACE7iB,IAAK0vD,EACL5pE,UAAU,gCACVilB,UAAW,aAAaghB,MAAMD,KAC9Bj1B,QAAUxE,IACRA,EAAE+rE,oBAGJ,0BACE1sB,GAAI,EACJC,GAAI,EACJ1wC,EAAG,IACHnb,UAAU,0CAEZ,qBAAGilB,UAAU,qBACX,gBAAC,IAAc,CAACjlB,UAAU,iB,uGC/BpC,yDA2Ce,IA5BiD,EAC9D+8B,UACAkJ,IACAD,IACAuyC,iBAAiB,aAEjB,MAAM0N,EAAW,WACjB,OACE,gBAAC,IAAO,CAAC9U,WAAY8U,EAAUlpD,QAASA,GACtC,qBACE7iB,IAAK+rE,EACLjmF,UAAU,4BACVilB,UAAW,aAAaghB,MAAMD,KAC9Bj1B,QAAUxE,IACRA,EAAE+rE,kBACFC,KACD,UACO,eAER,0BAAQ3sB,GAAI,EAAGC,GAAI,EAAG1wC,EAAG,IAA+B+wC,KAAM,IAAUprD,QACxE,qBAAGmkB,UAAU,qBACX,gBAAC,IAAS,CAAC2D,MAAM,e,gFCpC3B,2EAyEe,uBAtDiC,EAAGgtB,cACjD,MAAM,EAAE71C,GAAM,4BACPmmF,EAASpV,GAAY,sBACtB,MAAEjyC,EAAK,OAAEC,GAAW8W,EAAQlE,YAC5B5pC,EAAO8tC,EAAQltC,WACf,MAAEvG,EAAK,UAAE8tD,EAAS,gBAAEC,GAAoBpoD,EAE9C,OACE,qBAAG9H,UAAU,mBAAkB,YAAY,gBAAgB8H,EAAK0iB,KAAKhsB,KAAQ0b,IAAK42D,GAChF,wBACE7qC,EAA8B,GAA1B,IACJD,EAAG,EACHnH,MAAOA,EAAkC,EAA1B,IACfC,OAAQA,EAAmC,EAA1B,IACjBotB,KAAK,gBAEP,qBAAGn7C,QAAS,IAAMm/C,EAAgBpoD,IAChC,gBAAC,IAAQ,CAAC8tC,QAASA,EAASi6B,gBAAc,IACzC1tE,GACC,gBAAC,IAAkB,CACjB8jC,EAAG,IAAgC,EACnCD,EAAG,IAAgC,EACnC0tC,SAAUvxE,KAIhB,qBAAGgiB,MAAO,CAAEV,QAASyiE,EAAU,QAAU,SACvC,gBAAC,IAAiB,aACN,YACVjgD,EAAGpH,EAAQ,IAA0B,IACrCmH,EAAGlH,EAAS,EACZ+4C,QAAS93E,EAAE,0DACXgR,QAAS,IAAMk/C,EAAU,IAAiBk2B,SAE5C,gBAAC,IAAiB,aACN,aACVlgD,GAAI,IAA0B,IAC9BD,EAAGlH,EAAS,EACZ+4C,QAAS93E,EAAE,2DACXgR,QAAS,IAAMk/C,EAAU,IAAiBm2B,UAE5C,gBAAC,IAAiB,aACN,eACVngD,EAAGpH,EAAQ,EACXmH,EAAGlH,EAAS,IAA0B,IACtC+4C,QAAS93E,EAAE,wCACX+3E,gBAAiB,IAAgBlnC,OACjC7/B,QAAS,IAAMk/C,EAAU,IAAiBo2B,iB,kCClEpD,6IA8CA,MAEMC,EAAiD,EACrD1W,kBACAzvE,YACAqqB,OACAhsB,OACA0xE,8BACArxC,QACAC,SACAynD,iB,MAEA,MAAM,EAAExmF,GAAM,2BACRswE,IAA6BT,EAC7BU,EAAa9xE,GAAQ,IAAMgsB,EAAM,CAAC,WAAY,QAAS,IACvD+lD,EAAU,WACVC,EAAU,WAEVl1D,EAAO,GAAG,aACd,wBACoB,QAApB,EAAAirE,aAAU,EAAVA,EAAYrmF,gBAAQ,eAAE1B,KACtB2B,GAEIswE,IAAkBn1D,GACjBu1D,EAAOC,GAAY,qBACpBC,EAAsB,UAC1B,IAAM,aAAeT,EAAY,CAAEloE,OAAQioE,EAAkB,GAAK,GAAIW,aAAa,IACnF,CAACV,EAAYD,IAGTY,EACJ,wBACE/2D,IAAKq2D,EACLtqC,EAAGoqC,EAAkB,GAAKxxC,EAAQ,EAClCmH,EAAGlH,EAAS,EAAI,EAChB9+B,UAAW,EAAG,6BAA8B,CAC1C,kBAAmB4vE,EACnB,YAAaa,KAGdM,GAIL,IAAIG,EACF,qBAAGh3D,IAAK42D,GACN,gBAAC,IAAmB,CAACjnB,GAAI,EAAG/lD,GA9ChB,8BA+CZ,wBACEkE,OAAQ6oE,EAAQ,yBAhDN,6BAgDkC,GAC5ChyC,MAAOA,EACPC,OAAQA,EACRurC,GAAI,EACJrqE,UAAW,EAAG,wBAAyB,CACrC,gBAAiB4vE,GAAmBiB,EACpC,cAAejB,GAAmBa,IAEpCtsD,MAAO,CACLugE,OAAQ,2BAAgB5jF,SAG3BwvE,IAAeS,GAAuBb,EACrC,gBAAC,IAAO,CAACiB,WAAYZ,EAASxzC,QAASuzC,GACpCW,GAED,EAIHZ,GACC,gCACE,uBACExxC,MAAO,GACPC,OAAQ,GACRmtB,QAAQ,eACR9nC,MAAO,CACLyE,MAAO,2BAAgB9nB,QAGxB,gBAAC,IAAkB,SAmB9B,OAZKovE,IACHgB,EACE,gBAAC,IAAO,CACNC,WAAYX,EACZ9/B,SAAS,SACT4gC,YAAY,EACZv0C,QAASh9B,EAAE,iCAEX,qBAAGma,IAAKs2D,GAAUU,KAKtB,qBAAGlxE,UAAW,EAAG,mCAAoC,CAAE,UAAWywE,KAC/DA,EAAgB,gBAAC,OAAI,CAAC3Y,GAAIx8C,GAAO41D,GAAmBA,IAwC5C,WAAW,mBAnC4B,EAAGt7B,UAASi6B,qB,cAChE,MAAM,OAAE/wC,EAAM,MAAED,GAAU+W,EAAQlE,aAE5B,SAAEhvB,EAAQ,YAAEvB,EAAW,KAAEqJ,GAASorB,EAAQltC,UAE1C89E,EAAiB,GAAwB,QAArB,EAAArlE,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,QAAQgsB,aAAI,EAAJA,EAAMhsB,OAEzD0vC,EAAmB,CACvBu4C,UAAW,CACT1d,iBAAkB,sCAA4B,yBAC9CvqE,KAAMgoF,EACNrmF,UAA6B,QAAlB,EAAAuiB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEC,UAC/Bm7B,KAAM,SAIJorD,EAAgD,YACpDx4C,GAeF,OAXE,gBAACo4C,EAAmB,CAClB1W,gBAAsC,QAArB,EAAAzuD,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,KACxCA,KAAMgsB,EAAKhsB,MAAQ,GACnBgsB,KAAMA,EAAKylD,UAAY,CAAEnoE,KAAM,CAAE3J,KAAMqsB,EAAKylD,WAC5C9vE,UAA6B,QAAlB,EAAAuiB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEC,UAC/B+vE,4BAA6BL,EAC7BhxC,MAAOA,EACPC,OAAQA,EACRynD,WAAmC,QAAvB,EAAAG,EAAcD,iBAAS,eAAE3+E,W,yDCnL3C,qEA6Ee,uBAzDiC,EAAG8tC,cACjD,MAAM,KAAEprB,EAAI,SAAE9H,EAAQ,YAAEvB,GAAgBy0B,EAAQltC,WAC1C,MAAEm2B,EAAK,OAAEC,GAAW8W,EAAQlE,YAC5B8xC,EAAa,IAAc,IAAc,EACzCC,EAAc,IAAuB,IACrCC,EAAiB,IAAc,KAE/B,aAAEN,EAAe,IAAO54D,EAC9B,OACE,qBAAGvF,UAAU,sBAAqB,YAAW,gBAC3C,wBACEjlB,UAAU,mBACV2mF,YAAa,EACb9nD,MAAOA,EACPC,OAAQA,EACRurC,GAAG,KACHC,GAAG,OAGJ8Y,EAAaloE,IAAI,CAAC4oE,EAAI1hF,K,YACrB,OACE,qBAAGC,IAAKyhF,EAAGtlF,KAAI,YAAa,qBAAqBslF,EAAGtlF,MAClD,wBACEwB,UAAU,8BACVinC,EACEu8C,EAAaphF,EAAIshF,IAAmB5kD,EAAS,EACzC,YAAa,IAAI,QAAM2kD,EAAa3kD,EAAS,GAAI,IAAI,QAAM,EAAGA,EAAS,IACvE,YACE,IAAI,QAAM,EAAGA,EAAS,GACtB,IAAI,QAAM2kD,EAAaD,EAAaphF,EAAIshF,MAIlD,qBACEz+D,UAAW,aAAaw+D,MACtB,IAAcrhF,EAAI,IAAgCA,EAAI,QAGxD,gBAAC,IAAyB,CACxBwtE,gBAAsC,QAArB,EAAAzuD,aAAW,EAAXA,EAAajhB,gBAAQ,eAAE1B,KACxCgsB,KAAMs5D,EACN5iE,kBAAmBC,GAAe,YAAyBA,GAC3DhhB,UAA6B,QAAlB,EAAAuiB,aAAQ,EAARA,EAAUxiB,gBAAQ,eAAEC,UAC/B+iB,SAAU4gE,EAAG5gE,SACb2b,MAAO,IACPC,OAAQ,IACR81B,eAAa,EACbkb,UAA4C,QAAjC,EAAmB,QAAnB,EAAA3uD,aAAW,EAAXA,EAAazf,cAAM,eAAEw4B,oBAAY,eAAEtK,KAAM7vB,GAAMA,EAAEvB,OAASslF,EAAGtlF,gB,yDCnExF,yDA8Be,uBAlBiD,EAAGo3C,cACjE,MAAM,EAAE71C,GAAM,4BAEZyqB,MAAM,KAAEhsB,IACNo3C,EAAQltC,UAEZ,OACE,yBACE,gBAAC,IAAY,CAACktC,QAASA,EAASmiC,eAAgBv5E,IAChD,gBAAC,IAAkB,CACjBynC,EAAG,IAAgC,EACnCD,EAAG,IAAgC,EACnC0tC,SAAU3zE,EAAE,8C,yDCxBpB,+BAae,uBATkC,EAAG61C,cAClD,MAAM,OAAE9W,EAAM,MAAED,GAAU+W,EAAQlE,aAEhClnB,MAAM,KAAEhsB,IACNo3C,EAAQltC,UAEZ,OAAO,gBAAC,IAAW,iBAAK,CAAEm2B,QAAOC,SAAQtgC,a,uiBCoM5B,WAAW,YApKgD,I,yCAAA,QACxEo3C,EAAO,cACPgxC,EAAa,gBACbC,GAAe,EACZC,EAAI,IAJiE,+CAMxE,MAAMh/E,EAAO8tC,EAAQltC,WACdmoE,EAAOC,GAAY,qBACpBtkD,EAAU,WACVu6D,EAAe,4BACf3lC,EAA6C,YACjD,KAEIwT,EAAgBhf,EAAQ1sC,YAAc,IAASyqD,aACrD,IAAIprD,EAED64C,IACiB,QAAlB,EAAS,QAAT,EAAAt5C,EAAK0iB,YAAI,eAAEgC,eAAO,eAAEvsB,QAAS,mBAAiBA,MAO5B,QAAT,EAAA6H,EAAK0iB,YAAI,eAAEgC,WACpBjkB,EAAY,CACVtI,KAAM,aAAkB,aACxBzB,KAAMsJ,EAAK0iB,KAAKgC,QAAQhuB,KACxB2B,UAAW2H,EAAK4a,SAASxiB,SAASC,UAClCm7B,KAAM,SAVR/yB,EAAY,CACVtI,KAAM,aAAkB,oBACxBzB,KAAMsJ,EAAK0iB,KAAKgC,QAAQhuB,KACxB88B,KAAM,QAUV,MAAO9Q,GAAQ,8BAA8BjiB,GAEvCy+E,EAAex8D,GAAQzd,OAAOC,KAAKwd,GAAMpiB,OAASoiB,EAAO1iB,EAAK0iB,KAC9Dy8D,GACgB,QAApB,EAAAD,aAAY,EAAZA,EAActlF,cAAM,eAAE0uE,SAA2B,QAAlB,EAAA4W,aAAY,EAAZA,EAAc7oF,YAAI,eAAEiyE,SAA+B,QAAtB,EAAA4W,aAAY,EAAZA,EAAc/W,gBAAQ,eAAEG,QAAS,GAEzFlvD,EAAoBpZ,EAAKqZ,aAAe,YAAyBrZ,EAAKqZ,aACtE2uD,KACJkX,KACsC,QAAtC,EAAwB,QAAxB,EAAgB,QAAhB,EAAAl/E,EAAKqZ,mBAAW,eAAEzf,cAAM,eAAEw4B,oBAAY,eAAEtK,KACrCs3D,GAAgBA,EAAY1oF,OAASsJ,EAAK0iB,KAAKhsB,KAC/C0oF,GAAgBA,EAAY1oF,OAASwoF,EAAaxoF,QAIjDktB,IAAsB,QAAT,EAAA5jB,EAAK0iB,YAAI,eAAE9oB,SAAU,CACtCwqB,SAAU,GACV5K,OAAQ,IAAeiK,MAGvBrK,IAAsB,IAAeS,QACrCT,IAAsB,IAAeY,YAGlB,QAAjB,EAAS,QAAT,EAAAha,EAAK0iB,YAAI,eAAE9oB,cAAM,eAAE4f,UAAW,IAAeiK,OAC5B,QAAjB,EAAS,QAAT,EAAAzjB,EAAK0iB,YAAI,eAAE9oB,cAAM,eAAE4f,UAAW,IAAee,UAE7CqJ,GAAWpK,OAAS,IAAeQ,WAGnCguD,IACFpkD,GAAWpK,OAAS,IAAeiB,SAGrC,MAAM4tD,GAA+B8W,EAAS/rE,IAAKmrB,GAAS,YAAiBA,EAAM3a,MAC7E,YAAEvK,IAAgBrZ,EAClBq/E,GAAsBhX,GAAenoE,OACzC,EAAGtG,YAAaA,IAAW,IAAeggB,WAC1CtZ,OAEIg/E,GACJjX,GAAe/nE,OAAS,GAAKN,EAAKpG,OAC9B,GAAGylF,MAAuBhX,GAAe/nE,SACzC,KAEAi/E,GAAa,UAAc,KAC/B,MAAMC,EAAU,OAAH,UAAQx/E,GAMrB,OALAiF,OAAOC,KAAKs6E,GAASh7D,QAASjqB,SACP8iB,IAAjBmiE,EAAQjlF,WACHilF,EAAQjlF,KAGZilF,GACN,CAACx/E,IAEEy/E,MAAiBz/E,EAAK0/E,gBAAiB1/E,EAAK2/E,UAC5C3yB,GAAiB,YAAmC,QAAjB,EAAS,QAAT,EAAAhtD,EAAK0iB,YAAI,eAAE9oB,cAAM,eAAE4f,QACtDomE,GAAgB5/E,EAAKwrD,WACzB,gBAAC,gBAAa,CACZ1d,QAASA,EACTl0C,OAAQoG,EAAKwrD,WACbse,WACE2V,GACI,sBAAyD,KAAlC3xC,EAAQlE,YAAY5S,OAAS,GACpD,sBAEN6oD,QAAS7yB,KAET,MAEIt2D,KAAMopF,GAAO,UAAEznF,IAAcghB,cAAW,EAAXA,GAAajhB,SAC5Cob,GAAOssE,GACT,GAAG,aACD,mBACAA,GACAznF,qBACiBy1C,EAAQqG,kBAC3B92B,EAEEsrD,GACJ3oE,EAAKpG,SAAW,IAAe6pB,MAC/BzjB,EAAKpG,SAAW,IAAe2gB,SAC/Bva,EAAKpG,SAAW,IAAeogB,WAC/Bha,EAAKpG,SAAW,IAAe6gB,WAC7BjH,GAEEm2D,GACJ,gBAAC,WAAQ,eACPzxE,UAAU,mCACV41C,QAASA,EACTgxC,cAAe9+E,EAAK+/E,gBAAkBjB,OAAgBzhE,EACtD0hE,gBAAiBA,EACjBiB,WAAYjX,GAASgW,IAAoBE,IAAiB,oBAAkBgB,KAC5EC,qBAAmB,GACfX,GACAP,EAAI,CACRM,MAAOA,GACPa,eAAwC,QAAxB,EAAiB,QAAjB,EAAAryC,EAAQltC,iBAAS,eAAEwL,aAAK,eAAE9L,SAEzCs/E,IAICQ,GAAU,IAAW,mCAAoC,CAAE,UAAWzX,KAC5E,OACE,gBAAC,QAAK,CACJ3sE,GACEijF,IAAiB,oBAAkBgB,OAASlX,GAASgW,GACjD,YACA,iBAGN,iCAAc,QAAQjxC,EAAQqG,WAAcj8C,UAAWkoF,GAAShuE,IAAK42D,GACnE,gBAAC,IAAO,CACNQ,YAAU,EACVH,WAAY3kD,EACZuQ,QACE,gBAAC,IAA6B,CAC5Bw0C,gBAAiBzpE,EAAKpG,OACtB8vE,SAAU57B,EAAQqG,WAClBm0B,MAAOD,GACPvb,cAAeA,KAInB,qBAAG16C,IAAKsS,GAAUikD,GAAgB,gBAAC,OAAI,CAAC3Y,GAAIx8C,IAAOm2D,IAAmBA,W,yDCvMhF,qBAuBe,IAnB+B,EAAG77B,cAC/C,MAAMuyC,EAAoBvyC,EAAQwyC,gBAC5BC,EAAkBzyC,EAAQ0yC,cAC1B/yC,EAAaK,EAAQ7rC,YACrBo1B,EAAayW,EAAQ5rC,YAE3B,OACE,wBACEi9B,EAAG,YACDkhD,EAAWt2C,QAAQ4B,UAAU8B,EAAW7D,YAAY7S,MAAQ,EAAI,EAAG,GACnEwpD,EAASx2C,QAAQ4B,WAAWtU,EAAWuS,YAAY7S,MAAQ,EAAG,IAEhE6lD,OAAO,8CACPx4B,KAAK,OACLjnC,UAAU,yB,kCClBhB,6DAkLe,IA9ImE,EAChFuO,QACAquD,mBACAC,kBAAiB,EACjBC,eAAc,MAEd,MAAOwG,EAAKC,GAAU,WAA2B,OAC1CC,EAASC,GAAc,WAAe,OACtC7pD,EAAO8pD,GAAY,WAAe,MACnCC,EAAmB,SAAa,MAEhC30B,EAAyBzgC,EAAMwgC,MAAMC,OAErC40B,EAAiB,cACpBroD,IACC,MAAMsoD,EAAatoD,EAAMtlB,IAAKzS,GAASA,EAAKipC,aACtCutC,EAAWn0E,KAAKC,MACpB+9E,EAAW5tE,IAAKi3B,GAAWA,EAAOtT,OAAO5xB,OAAO,CAAC87E,EAAIC,IAAOl+E,KAAK8Z,IAAImkE,EAAIC,GAAK,IAE1EC,EAAYn+E,KAAKC,MACrB+9E,EAAW5tE,IAAKi3B,GAAWA,EAAOrT,QAAQ7xB,OAAO,CAACi8E,EAAIC,IAAOr+E,KAAK8Z,IAAIskE,EAAIC,GAAK,IAE3EC,EAAYN,EAAWppE,KAAM2pE,GAAOA,EAAGvqD,SAAWmqD,GAElDK,EAAOx+E,KAAKC,MAChB+9E,EAAW5tE,IAAKi3B,GAAWA,EAAOlM,GAAGh5B,OAAO,CAAC03E,EAAIE,IAAO/5E,KAAK8Z,IAAI+/D,EAAIE,GAAK,IAEtE0E,EAAOz+E,KAAKC,MAChB+9E,EAAW5tE,IAAKi3B,GAAWA,EAAOnM,GAAG/4B,OAAO,CAAC23E,EAAIE,IAAOh6E,KAAK8Z,IAAIggE,EAAIE,GAAK,IAG5E,IAAI0E,EAAmB,EACnBC,EAAiB,EACjBx1B,IACFu1B,EAAmB,YAAcv1B,GAAQnZ,SAAW,EACpD2uC,EAAiB,YAAcx1B,GAAQlZ,SAAW,GAEpD,MAAM2uC,EAAoBN,EAAUpjD,EAAIijD,EAAY,IAAuC,EAAjBQ,EACpEE,EAAoBJ,EAAO,IAAc,IAAuC,EAAjBE,EAErEf,EAAW,CACT5pD,OAAQh0B,KAAK8Z,IAAI8kE,EAAmBC,GAAqB,IACzD9qD,MAAO/zB,KAAK8Z,IACV0kE,EAAOrK,EAAW,IAAyC,EAAnBuK,EACxC,QAIN,CAACd,EAAYz0B,IAqCf,GAlCA,YAAgB,KACd,GAAY,OAARs0B,EAAc,CAChB,MAAMqB,EAAgB,IAAI,gBAC1BA,EAAcC,sBAAsB,KACpCD,EAAcE,yBAAyBjI,GACvC+H,EAAcG,UAAUv2D,GACxBo2D,EAAcI,iBAAiB,8BAA6B,KAC1DpB,EAAiB30C,QAAU21C,EAAc93C,WAAWwB,YAEtDs2C,EAAcI,iBAAiB,yBAAwB,KACrDnB,EAAee,EAAc93C,WAAWm4C,cAE1CzB,EAAOoB,OACF,CACL,MAAM51B,EAAQ40B,EAAiB30C,QAC3B+f,IACFxgC,EAAMwgC,MAAQA,GAEhBu0B,EAAIwB,UAAUv2D,GACd+0D,EAAIz2C,WAAWmiB,WAEhB,CAACs0B,EAAK/0D,EAAOq1D,EAAgBhH,IAEhC,YAAgB,KACd,GAAIruD,GAAS+0D,EAAK,CAChB,MAAMv0B,EAAQ40B,EAAiB30C,QAC3B+f,IACFxgC,EAAMwgC,MAAQA,GAEhBu0B,EAAIwB,UAAUv2D,KAGf,CAACA,EAAO+0D,KAENA,EAAK,OAAO,KAwBjB,OACE,gBAAC,IAAO,CACNp2C,QAAM,EACN+3C,SAAWC,I,MACTxB,EAA2B,QAAlB,EAAAwB,EAAYh4C,cAAM,eAAEtT,SAG9B,EAAGurD,iBAAiB,OACnB,uBAAKlwE,IAAKkwE,GACR,uBACEjmE,MAAO,CACL2a,OAAQijD,EACJ0G,aAAO,EAAPA,EAAS3pD,OACTh0B,KAAKsa,IAAK,IAA2B,IAAO6kC,OAAOogC,YAAa5B,aAAO,EAAPA,EAAS3pD,QAC7ED,MAAOkjD,EAAc0G,aAAO,EAAPA,EAAS5pD,MAAQ/zB,KAAKsa,IAAIqjE,aAAO,EAAPA,EAAS5pD,MAAOA,KAGjE,gBAAC,wBAAqB,CAACyrD,WAAY/B,GAChCzG,EACC,gBAAC,eAAY,CAACyI,YAzCRD,EAyC+B/B,EAxCjD,gBAAC,qBAAkB,CACjBiC,eAAgB,uCAA6B,OAAD,wBACvC,gCAA4B,CAC/BC,eAAgB,iBAAO,KACrBH,EAAWx4C,WAAW44C,QAAQ,EAAI,KAEpCC,gBAAiB,iBAAO,KACtBL,EAAWx4C,WAAW44C,QAAQ,OAEhCE,oBAAqB,iBAAO,KAC1BN,EAAWx4C,WAAW+4C,IAAI,MAE5BC,kBAAmB,iBAAO,KACxBR,EAAWx4C,WAAWi5C,QACtBT,EAAWx4C,WAAWmiB,WAExB+2B,QAAQ,SAyBE,gBAAC,uBAAoB,OAGvB,gBAAC,uBAAoB,SA7ChB,IAACV,M,gFC3HtB,uHA+De,IA9C6C,EAAGxmD,MAAK00C,uBAClE,MAAM,OAAEx6D,EAAM,cAAEy3D,GAAkB,cAC5BgD,EAAcD,EAAsBA,EAAH,IAAyB,IAC1D,OAAEh8D,GAAW,IAAMwB,EAAQw6D,IAAqBx6D,GAChD,EAAEje,GAAM,2BAEd,OACE,gCACE,gBAAC,IAAI,KACFA,EACC,yJAGJ,2BACA,gBAAC,IAAW,CAACkkB,aAAW,GACtB,gBAAC,IAAS,CAAC6xD,QAAQ,UACjB,gBAAC,IAAI,KACH,gBAAC,IAAQ,CAACjwC,KAAM,GACd,gBAAC,IAAI,aACO,SACVzlC,MAAOL,EAAE,mCACTgR,QAAS,IAAM0kE,EAAiBgD,EAAH,SAAwB,IAAsBvnE,QAC3EkwE,WAAY5kE,IAAW,IAAsBtL,UAGjD,gBAAC,IAAQ,CAAC20B,KAAM,GACd,gBAAC,IAAI,aACO,UACVzlC,MAAOL,EAAE,oCACTgR,QAAS,IAAM0kE,EAAiBgD,EAAH,SAAwB,IAAsBwS,SAC3E7J,WAAY5kE,IAAW,IAAsByuE,cAMvD,gBAAC,IAAW,CAACnnE,UAAWtH,IAAW,IAAsByuE,UAAYxS,GAClEj8D,IAAW,IAAsBtL,QAAU,gBAAC,IAAa,CAAC4yB,IAAKA,IAC/DtnB,IAAW,IAAsByuE,SAChC,gBAAC,IAAc,CAACnnD,IAAKA,EAAK00C,iBAAkBA,Q,kCCxDtD,0BAyBe,IAhBqC,EAAG10C,U,QACrD,MAAM,EAAE/jC,GAAM,2BACRmrF,EAAiC,QAAvB,EAAS,QAAT,EAAApnD,aAAG,EAAHA,EAAKh8B,YAAI,eAAG,mBAAW,QAAI,GAC3C,OACE,gBAAC,IAAI,KACH,gBAAC,QAAK,CAAC/H,EAAGA,EAAGgB,GAAG,oB,MACV,IACJ,qBAAG4I,OAAO,SAAS3I,KAAMkqF,EAASlS,IAAI,uBACnCkS,GACE,I,kIClBb,+DAqDe,IAzC+C,EAAG1S,uBAC/D,MAAM,EAAEz4E,GAAM,4BACR,OAAEie,GAAW,eACb,YAAE0e,GAAgB,IAAM1e,EAAQw6D,IAAqBx6D,EAE3D,IAAImtE,EACJ,OAAQzuD,GACN,KAAK,IAAYxrB,OACfi6E,EACE,gBAAC,IAAI,KACH,gBAAC,IAAQ,KAAEprF,EAAE,qCACb,gBAAC,IAAQ,KAAEA,EAAE,oCACb,gBAAC,IAAQ,KAAEA,EAAE,kCACb,gBAAC,IAAQ,KAAEA,EAAE,6BAGjB,MACF,KAAK,IAAYoR,OACfg6E,EACE,gBAAC,IAAI,KACH,gBAAC,IAAQ,KAAEprF,EAAE,0CACb,gBAAC,IAAQ,KAAEA,EAAE,kCAGjB,MACF,KAAK,IAAYsR,UACf85E,EACE,gBAAC,IAAI,KACH,gBAAC,IAAQ,KAAEprF,EAAE,sCACb,gBAAC,IAAQ,KAAEA,EAAE,2CACb,gBAAC,IAAQ,KAAEA,EAAE,2CACb,gBAAC,IAAQ,KAAEA,EAAE,oDAGjB,MACF,QACEorF,EAAa,KAEjB,OAAOA,I,kCClDT,sCAkBe,IAbgB,KAC7B,MAAM,EAAEprF,GAAM,2BAEd,OACE,gBAAC,IAAW,CACVK,MAAOL,EAAE,qBACT8jB,SAAU9jB,EAAE,+DAEZ,gBAAC,IAAkB,CAACvB,KAAK,SAASghD,YAAY,uBAAuBt7B,SAAS,c,kCCbpF,8CA8Be,IAlBmC,EAAGyf,QAAOp7B,gBAC1D,MAAM,EAAExI,GAAM,4BACR,mBAAE+gE,EAAkB,QAAEtwD,EAAO,OAAEkoD,GAAW/0B,EAEhD,OACE,gCACE,gBAAC,IAAc,CAACynD,YAAatqB,IAC7B,gBAAC,IAAa,CACZtiE,KAAK,eACL0V,MAAOnU,EAAE,6BACT6Q,SAAU7Q,EAAE,qDACZ8Q,WAAYL,IAEd,gBAAC,IAAoB,CAACmoD,eAAgBD,EAAQnwD,UAAWA,O,kCCzB/D,6FA2De,IA3CmD,EAChEowD,iBACApwD,gBAEA,MAAM,EAAExI,GAAM,2BACd,OACE,gBAAC,IAAc,CACb8gF,aAAc9gF,EAAE,4CAChB+gF,cAAe/gF,EAAE,6CAEjB,gBAAC,IAAW,KACT44D,EACCpwD,IAAc,IAAUwJ,eACtB,gBAAC,IAAsB,MAEvB,gCACE,gBAAC,IAAW,MACZ,gBAAC,IAAW,MACZ,gBAAC,IAAkB,CACjBvT,KAAK,eACL0V,MAAOnU,EAAE,qBACT6Q,SAAU7Q,EACR,4EAEFy/C,YAAY,uBACZt7B,SAAS,kBAKf,gBAAC,IAAK,CACJ/iB,QAAQ,OACRq8E,UAAQ,EACRp9E,MAAOL,EACL,0F,kCClDd,qFAwHe,IAtG0B,K,MACvC,MAAM,EAAEA,GAAM,4BACR,cACJ01E,EACAz3D,QAAQ,KACNxf,EACA8kC,SAAW9kC,KAAM2B,GAAW,WAC5BujC,IAEA,cACEphC,EAA6B,UACjC,KAAM,CACJrC,KAAM,aAAkB,KACxBo7B,QAAQ,EACRl7B,YACAghC,UAAU,IAEZ,CAAChhC,KAEI2H,EAAMujF,EAAqBC,GAAwB,YACxDhpF,GAEIk5D,EAAyB,UAAc,IACpC6vB,IAAwBC,EAC3BxjF,EAAKoT,IAAKktB,IACR,MAAMmjD,EAAO,YAA8BnjD,EAAI5pC,GAC/C,MAAO,CACLsC,MAAOyqF,EAAO,GAAGnjD,EAAGloC,SAAS1B,SAAS+sF,KAAUnjD,EAAGloC,SAAS1B,KAC5D2R,UAAU,KAGd,GACH,CAACk7E,EAAqBC,EAAsBxjF,EAAMtJ,IAErD,YAAgB,KACd,GAAI6sF,IAAwBC,IAAwBxjF,aAAI,EAAJA,EAAMM,QAAQ,CAChE,MAAMojF,EAAe1jF,EAClBE,OAAQyjF,IAAa,QAAC,OAAmB,QAAnB,EAAc,QAAd,EAAAA,EAAUttF,YAAI,eAAE+b,WAAG,eAAE1b,QAASA,IACpD0c,IAAKwwE,GAAaA,EAASxrF,SAAS1B,MACjCmtF,EAAe,IACfjoD,EAAWld,cAAgBkd,EAAWld,cAAgB,MACvDglE,GAEL/V,EAAc,aAAc,OAAF,wBACrB/xC,GAAU,CACbld,cAAe,YAA8BmlE,EAAcH,QAI9D,CAAC1jF,EAAMujF,EAAqBC,EAAsB9sF,EAAMi3E,IAE3D,MAAMmW,EAAkF,QAAnE,cAA8BloD,EAAWld,cAAe1e,EAAMtJ,UAAK,QAAI,GAC5F,OACE,gCACG6sF,GAAuBC,EACtB,gCACE,gBAAC,KAAmB,gBACL,uBACb9sF,KAAK,2BACL0V,MAAOnU,EAAE,6BACTs2E,UAAWt2E,EAAE,6BACb68C,QAAS4e,EACTqwB,gBAAiB9rF,EAAE,yBACnB6Q,SAAU7Q,EAAE,gEACZ+rF,aAAW,IAEZ,YAA2BpoD,EAAWld,gBACrC,gBAAC,IAAK,aACM,yBACVrlB,QAAQ,UACRq8E,UAAQ,EACRp9E,MAAOL,EAAE,iDAET,uBAAKokB,MAAO,CAAE4nE,aAAc,oCACzBhsF,EACC,4FAGH6rF,EAAaxjF,OAAS,GACrB,0BACGwjF,EAAa1wE,IAAKktB,GAEf,sBAAI/lC,IAAK+lC,EAAGloC,SAASuV,KAClB1V,EAAE,uDAAwD,CACzDymB,cAAe4hB,EAAGloC,SAAS1B,KAC3BwtF,eAAgB5jD,EAAGjqC,KAAK+b,IAAI1b,YAW9C,gBAAC,IAAa,S,kCClHtB,mCA4Be,IAvBe,KAC5B,MAAM,EAAEuB,GAAM,2BACd,OACE,gCACE,gBAAC,KAAU,CACTmB,KAAM,IAAeD,KACrBzC,KAAK,iBACL0V,MAAOnU,EAAE,uBACT6Q,SAAU7Q,EACR,0FAGJ,gBAAC,KAAU,CACTmB,KAAM,IAAeD,KACrBzC,KAAK,aACL0V,MAAOnU,EAAE,mBACTy/C,YAAY,IACZ5uC,SAAU7Q,EAAE,iF,kCCtBpB,kCAuCe,IA7BuC,EAAGqrF,kB,MACvD,MAAM,EAAErrF,GAAM,4BAEZie,QACEpe,OAAO,MAAEu4D,KAET,cACE8zB,EAAmCh2E,MAAMvW,KAC7C,IAAIgpC,IAAIyvB,EAAMj9C,IAAK2wB,GAASA,EAAK9jB,cAAc9c,cAC/CiQ,IAAKpa,IAAU,CACfA,QACAqP,UAAU,KAEN+7E,GAA0B,QAAR,EAAA/zB,EAAM,UAAE,eAAEpwC,gBAAiBqjE,EAEnD,OACE,gBAAC,KAAoB,gBACN,oBACb5sF,KAAK,0BACL0V,MAAOnU,EAAE,0BACTs2E,UAAWt2E,EAAE,0BACb8rF,gBAAiBK,EAAgBjhF,WACjC2F,SAAU7Q,EAAE,uCACZ68C,QAASqvC,EACTE,mBAAiB,M,kCClCvB,oCAkEe,IA7D4B,KACzC,MAAM,EAAEpsF,GAAM,2BACRqsF,EAAuB,CAC3Bp8E,EAAGjQ,EAAE,kBACLssF,EAAGtsF,EAAE,kBACLusF,EAAGvsF,EAAE,mBAGP,OACE,gBAAC,IAAW,CACVK,MAAOL,EAAE,sBACT8jB,SAAU9jB,EACR,iGAGF,gBAAC,KAAkB,CACjBvB,KAAK,6BACL0V,MAAOnU,EAAE,uBACT6Q,SAAU7Q,EACR,sHAGJ,gBAAC,KAAkB,CACjBvB,KAAK,6BACL0V,MAAOnU,EAAE,uBACT6Q,SAAU7Q,EACR,sFAGJ,gBAAC,KAAkB,CACjBvB,KAAK,uCACL0V,MAAOnU,EAAE,iCACT6Q,SAAU7Q,EACR,+PAGJ,gBAAC,KAAkB,CACjBvB,KAAK,sCACL0V,MAAOnU,EAAE,gCACT6Q,SAAU7Q,EACR,4PAGJ,gBAAC,KAAkB,CACjBvB,KAAK,4CACL0V,MAAOnU,EAAE,sCACT6Q,SAAU7Q,EAAE,iFAEd,gBAAC,KAAkB,CACjBvB,KAAK,+CACL0V,MAAOnU,EAAE,+BACTygF,SAAS,mDACTC,YAAa2L,EACbx7E,SAAU7Q,EACR,0J,kCC3DV,qDAQO,MAAMwsF,EAA8B,CACzC7pF,EACAk+D,KAEA,MAAO4rB,EAAuBC,GAAY,aACxC,MAkBF,MAAO,CAfoB,UACzB,IACEA,EACID,EACGxkF,OACEuE,GACCA,EAAEgzC,WAAW78C,kBAAoBA,GACjC6J,EAAEgzC,WAAW98C,gBAAgBiF,SAASk5D,IAEzC1lD,IAAK3O,GAAMA,EAAEgzC,WAAWmtC,cACxBC,OACH,GACN,CAACH,EAAuB9pF,EAAiBk+D,EAAgB6rB,IAG/BA,K,kCC/B9B,mHA+Ee,gBACb,IACA,IAFa,CArCyC,EACtDG,QACAl1C,gBACAm1C,uBAEA,MAAM,EAAE9sF,GAAM,4BACR,OAAEie,EAAM,cAAEy3D,GAAkB,cAGlC,YAAgB,KACVmX,EAAM,OAA6BA,EAAM,MAC3CnX,EAAc,oBAAoB,IAEnC,CAACA,EAAemX,IAEnB,MAAME,EAjCwB,MAC9B,MAAMC,EAAmB,aAAgB,CACvCn5D,MAAO,gBAAc9K,SACrBxmB,SAAU,gBAAc0mB,OACxB7oB,UAAW,IACX0zB,KAAM,SAGFm5D,EAAqB,aAAgB,CACzCp5D,MAAO,gBAAc9K,SACrBxmB,SAAU,gBAAc0mB,OACxB7oB,UAAW,cACX0zB,KAAM,WAGR,OAAOk5D,GAAoBC,GAkBKC,GAChC,OAAIL,EAAM,MAA4BE,EAElC,gBAAC,IAAW,KACT9uE,EAAOpe,MAAMsjB,UAAsC,WAA1BlF,EAAO7Z,MAAMwjB,SACrC,gBAAC,IAAgB,CAAC+vB,cAAeA,EAAem1C,iBAAkBA,IAElE,gBAAC,IAAK,CACJrP,UAAQ,EACRr8E,QAAQ,OACRf,MAAOL,EACL,8HAQL,Q,kCC5ET,oEAIO,MAAMmtF,EAAuB,CAClC/sF,EACAgtF,KAEO,CACL7pD,QAAS,CACP9kC,KAAM2B,GAAa,GACnByC,YAAa,GACbg1C,YAAa,IAEf7vC,YAAa,CACXqlF,QAAS,YAAyBD,GAClC3uF,KAAM,YAAyB2uF,GAC/B55E,YAAa45E,GAEf3uF,KAAM,GACNoB,MAAO,CACLsjB,SAAU,GACV07C,YAAa,GACbvgE,IAAK,GACL4uE,OAAQ,GACR9U,MAAO,GACP+U,gBAAgB,EAChBC,mBAAmB,GAErBzpC,WAAY,CACV/d,QAAS,CACPC,QAAS,GACTC,QAAS,GACTG,kBAAmB,GACnBC,iBAAkB,GAClBy3C,yBAA0B,GAC1BC,8BAA+B,GAC/Bx3C,UAAW,CACTC,gBAAiB,GACjBC,oBAAqB,GACrB4hB,2BAA4B,IAC5B61B,uBAAwB,IAE1B53C,uBAAwB,IAE1BM,cAAe,IAEjBmd,MAAO,CACLnzB,SAAS,EACTkoD,QAAQ,EACR0O,WAAY,GACZpgD,kBAAmB,GACnB85C,mBAAoB,KACpBxlD,KAAM,GACNyL,SAAU,GACVF,QAAQ,EACRvb,IAAK,CACHwb,YAAa,KACb6kD,8BAA+B,KAC/BC,cAAe,GACfC,YAAa,GACbC,yBAA0B,GAC1BzpE,IAAK,KAGTkG,UAAW,IAAUuJ,WACrB3N,MAAO,CACL8yD,IAAK,GACLvmC,SAAU,GACV/I,SAAU,UAEZyX,WAAY,CACV63B,IAAK,GACLvmC,SAAU,CACR9wB,OAAO,EACPuc,QAAQ,GAEV6I,SAAU,GAEZzhB,OAAQ,GACRqgC,OAAQ,CACNxc,IAAK,CACHC,QAAS,GACTC,YAAa,IACb+2C,mBAAoB,IACpBv4C,MAAO,GACPyB,UAAW,IACX62C,iBAAkB,KAEpB32C,OAAQ,CACNJ,QAAS,GACTC,YAAa,KACb+2C,mBAAoB,KACpBv4C,MAAO,GACPyB,UAAW,KACX62C,iBAAkB,OAGtBv6B,aAAc,O,kfCjElB,MAGMwpD,EAAe,CACnBC,EACA9uD,EACAsoB,KAEA,MAAMymC,EAAgC,IAAQxtF,EAC5C,yFAEF,OAAIutF,EAAyBC,EAEtB,IAAQxtF,EACb,oHACA,CAAEy+B,eAAcsoB,kBAmUL,IA1T2C,EAAGpP,gBAAem1C,uB,MAC1E,MAAM,EAAE9sF,GAAM,4BACPytF,EAAsBC,GAA2B,YAAe,IAChEC,EAAWC,GAAgB,YAAe,IAC1CC,EAAuBC,GAA4B,YAAe,IAClEC,EAAYC,GAAiB,YAAe,IAC5CC,EAAmBC,GAAwB,WAAe,IAC3DC,EAAqB,SAAkD,IACvEC,EAAsB,aAAQ,MAGlCnwE,QACEygD,QAAQ,oBAAEI,EAAmB,iBAAEH,GAC/Bn7B,KAAK,IAAEzpB,EAAG,KAAE5Y,EAAI,IAAEgZ,EAAG,IAAE8tC,EAAG,eAAExzB,GAAgB,SAC5C9R,EAAQ,MACR9iB,EACAuE,OAAS00D,OAAQrwC,EAAW,SAAEb,GAAU,UACxCpf,GACD,cACDktE,EAAa,gBACbC,GACE,cAEE4X,EAAgC,WAAb3lE,EACnBymE,GAAsB,IAAUvB,GAChCwB,EAA4C,uBAAb1mE,EAE/B2mE,EAAoBv+D,GACxBA,EACG7U,IAAKqzE,IAAM,MAAC,OAAW,QAAX,EAAAA,EAAGruF,gBAAQ,eAAE1B,OACzBE,OACA8hB,KAAK,KAEJguE,EAA2B,cAAkB,IAAY,OAAD,6BAC5D,MAAM9tE,EAAa5G,GAAO,YAAcA,EAAK5Y,EAAMgZ,EAAK8tC,EAAKxzB,GACvDi6D,EAAwB,CAAC,IAAYr9E,OAEzCsP,IACC+tE,EAAsB/mF,SAASxG,IAChCitF,UACOztE,EAAW7D,0BAElB8wE,GAAa,GACblY,EAAc,oBAAoB,GAClCA,EAAc,gBAAiB,IAAa/sD,KAC5C+sD,EAAc,wBAAyB37D,GACvC27D,EAAc,mBAAoB,IAAa/sD,KAC/C+sD,EAAc,uBAAuB,KAErCA,EAAc,gBAAiB,IAAahR,UAC5CgR,EAAc,wBAAyB,IACvCA,EAAc,mBAAoB,IAAahR,UAC/CgR,EAAc,uBAAuB,IAEvCoY,GAAyB,MACxB,CAAC/zE,EAAK5Y,EAAMgZ,EAAK8tC,EAAKxzB,EAAgB25D,EAAqB1Y,IAE9D,YAAgB,KACdyY,EAAmBj6C,QAAU,IAC5B,CAACyqB,IAEJ,YAAgB,KACd+W,EAAc,wBAAyB/yD,EAAS0oB,SAEhD26B,WAAW,KACT2P,EAAgB,oBAAoB,IACnC,IACF,CAAChzD,EAAS0oB,QAASqqC,EAAeC,IAErC,YAAgB,KACVltD,IAAgB,IAAarW,YAC/BsjE,EAAc,oBAAoB,GAClCA,EAAc,uBAAuB,KAEtC,CAACjtD,EAAaitD,IAEjB,YAAgB,KACd,IAAIiZ,GAAS,EAEb,MAAMC,EAAuB,CAAE,CAAC,KAAyB/uF,EAAMsjB,UACzD0rE,EAAsB,CAAE,iCAAe,UACvCC,EAAoB,CAAE,CAAC,KAA8BjvF,EAAMsjB,UAEjE,IAAIynB,EAEFA,EADE2iD,EACcsB,EACPP,EACOQ,EAEAF,EA6DlB,OA3D0C,OAAD,6B,MACvC,IAAIG,EAAmC,KAUvC,GARGZ,EAAmBj6C,QAAQr0C,EAAMsjB,YACS,QAA1C,EAAAgrE,EAAmBj6C,QAAQr0C,EAAMsjB,iBAAS,eAAE9a,UAE7C0mF,QAA0B,aAAQ,gBAAe,CAC/C/tF,GAAI,IACJ4pC,mBAGA+jD,EAAQ,OAERI,IACFZ,EAAmBj6C,QAAQr0C,EAAMsjB,UAAY4rE,GAG/C,MAAMC,EAAiCb,EAAmBj6C,QAAQr0C,EAAMsjB,WAAa,GAI/E8rE,EAAqB,IAHOD,EAAe/mF,OAC9CumF,IAAM,QAAC,OAAmB,QAAnB,EAAW,QAAX,EAAAA,EAAGruF,gBAAQ,eAAEqD,cAAM,eAtIjB,iCAsImCgF,OAI1CwmF,EAAe/mF,OAAQumF,IAAM,QAAC,QAAoB,QAAnB,EAAW,QAAX,EAAAA,EAAGruF,gBAAQ,eAAEqD,cAAM,eA1I3C,kCA6IR+qF,EAAiBN,KAAuBM,EAAiBU,IAC3Df,EAAqBe,GAEvB,MAAMC,EAAmBD,EAAmB,GAExCZ,GACF3Y,EAAc,oBAAqBoX,GACnCpX,EAAc,4BAA6BoX,EAAiB3sF,SAAS1B,MACrEivF,GAAwB,IAExB/qE,EAASiG,kBACTqlE,EAAkBp+D,KAAM2+D,GAAOA,EAAGruF,SAAS1B,OAASkkB,EAASiG,mBAE7D8sD,EACE,oBACAuY,EAAkBtuE,KAAM6uE,GAAOA,EAAGruF,SAAS1B,OAASkkB,EAASiG,mBAE/D8kE,GAAwB,IACfwB,GACTxZ,EAAc,oBAAqBwZ,GACnCxZ,EAAc,4BAA6BwZ,EAAiB/uF,SAAS1B,MACrEivF,GAAwB,KAExBhY,EAAc,oBAAqB,MACnCA,EAAc,4BAA6B,IAC3CgY,GAAwB,OAKvBW,GAAuBR,GAC1BY,IAEK,KACLE,GAAS,IAEV,CACDnmF,EACAs2D,EACAj/D,EAAMsjB,SACNoqE,EACA7X,EACA/yD,EAASiG,iBACTqlE,EACAI,EACAvB,EACA2B,EACAH,EACAT,IAGF,MAAMsB,GAAwB,UAAc,KAC1C,MAAM77E,EAAQ,GACd,IAAK,MAAM87E,KAAOnB,EAAmB,CACnC,MAAM,KAAExvF,GAAS2wF,EAAIjvF,SACrBmT,EAAM7U,GAAQA,EAKhB,OAHIkkB,EAASiG,mBACXtV,EAAMqP,EAASiG,kBAAoBjG,EAASiG,kBAEvCtV,GACN,CAACqP,EAASiG,iBAAkBqlE,IAE/B,GAAIR,EAAsB,CACxB,MAAM4B,GAC2B,QAA/B,EAAA13C,aAAa,EAAbA,EAAgB93C,EAAMsjB,iBAAS,eAAE9iB,QAASL,EAAE,uCACxCirD,EAAejrD,EAAE,IAAuBwI,IAC9C,OACE,gBAAC,IAAK,CACJi1E,UAAQ,EACRr8E,QAAQ,OACRf,MAAOitF,EAAaC,EAAkB8B,EAAmBpkC,KAc/D,OAAOtoC,EAASiO,SACd,gCACGnI,IAAgB,IAAarW,WAC5B,gBAAC,IAAa,CACZ+B,MAAOnU,EAAE,iCACTvB,KAAK,mBACLqS,WAAYu9E,IAGf1rE,EAAS0oB,SAAWsiD,GACnB,gCACE,wBAAM1tF,UAAU,yBAAyBD,EAAE,8BAC3C,gBAAC,KAAe,CACdC,UAAU,yCACVxB,KAAM,gBACN6R,SAAWw3B,IAAgBwnD,OAvBnC5Z,EAAc,mBADc30E,EAwB4B+mC,GAtBxD4tC,EAAc,gBAAiB30E,QAE/BilE,WAAW,KACT2P,EAAgB,iBAAiB,IAChC,GANwB,IAAC50E,GAyBpB87C,QAAS,CACP,CACE97C,MAAO,IAAa4nB,IACpBxU,MACE,gCACGnU,EAAE,sEACF,KACD,gBAAC,IAAO,CACN2wC,SAAS,QACT3T,QACE,yBACGh9B,EACC,mOAKN,gBAAC,IAAkB,QAIzBg5E,eAAgB,gBAAC,IAAU,OAE7B,CACEj4E,MAAO,IAAa2jE,SACpBvwD,MACE,gCACGnU,EAAE,mDACF,KACD,gBAAC,IAAO,CACN2wC,SAAS,QACT3T,QACE,yBACGh9B,EACC,kMAKN,gBAAC,IAAkB,QAIzBg5E,eACE,gCACE,gBAAC,IAAa,CACZv6E,KAAK,4BACL4B,MAAO8uF,GAAsBxsE,EAASiG,kBACtCtV,MAAO67E,GACP/+E,SAAUi+E,EACVtqE,WAAS,IAEX,2BACA,gBAAC,IAAiB,CAChBy1D,WAAY,GACGx5E,EAAb+tF,EAAe,wBAA6B,4BAC1C/tF,EAAE,6CACN+tF,WAAYA,EACZwB,SAAU,IAAMvB,GAAeD,IAE9BA,GAAc,gBAAC,IAAqB,CAACprE,SAAUA,EAASiO,kBASxEjO,EAAS0oB,UAAYsiD,GACpB,gCACE,gBAAC,IAAa,CACZlvF,KAAK,4BACL4B,MAAO8uF,GAAsBxsE,EAASiG,kBACtCtV,MAAO67E,GACP/+E,SAAUi+E,EACVl6E,MAAOnU,EAAE,6BACT+jB,WAAS,IAEX,gBAAC,IAAiB,CAChBy1D,WAAY,GACGx5E,EAAb+tF,EAAe,wBAA6B,4BAC1C/tF,EAAE,6CACN+tF,WAAYA,EACZwB,SAAU,IAAMvB,GAAeD,IAE9BA,GAAc,gBAAC,IAAqB,CAACprE,SAAUA,EAASiO,cAMjE,gBAAC,IAAa,Q,kCC/WlB,+GAiEe,IApDc,KAC3B,MAAM,EAAE5wB,GAAM,4BAEP6iC,EAAoB2sD,GAAyB,YAAe,IAC7D,OAAEvxE,EAAM,cAAEy3D,GAAkB,eAEhClyC,KAAK,IAAEzpB,EAAG,KAAE5Y,IACV8c,GACG8lB,EAAK3O,GAAU,cAsBtB,OApBA,YAAgB,KACVA,GAAY2O,GAAOA,EAAIh8B,KAAK,aAC9BynF,GAAsB,GACtB9Z,EAAc,qCAAqC,GACnDA,EAAc,wBAAyB,IAAsBvkE,SAE7DukE,EAAc,wBAAyB,IAAsBwV,UAE9D,CAACnnD,EAAK3O,EAAQsgD,IAEjB,YAAgB,KACdA,EAAc,wBAAyB37D,GACvC27D,EAAc,OAAQ,YAAwB37D,IAC9C27D,EAAc,6BAA8Bv0E,IAC3C,CAACu0E,EAAe37D,EAAK5Y,IAExB,YAAgB,KACdu0E,EAAc,sBAAuBz3D,EAAOxf,OAC3C,CAACi3E,EAAez3D,EAAOxf,OAEnBslC,EACL,gCACE,gBAAC,IAAc,CACbg9C,cAAe/gF,EAAE,iCACjB8gF,aAAc9gF,EAAE,kCAEhB,gBAAC,IAAS,OAGX6iC,GAAsB1hC,IAAS,IAAYgQ,OAC1C,uBAAKlR,UAAU,yCACb,gBAAC,IAAiB,CAAC8jC,IAAKA,EAAK00C,iBAvCZ,oBA0CnB,gBAAC,IAAc,CAAC10C,IAAKA,EAAK00C,iBA1CP,oBA8CvB,gBAAC,IAAO,Q,kCC7DZ,yEAoDe,IAxCa,KAC1B,MAAM,EAAEz4E,GAAM,4BACPI,GAAa,gCAElB6d,QAAQ,KAAExf,EAAI,UAAE+J,IACd,cACEinF,EAAyB,IAAuBjnF,GAClDxI,EAAE,IAAuBwI,IACzB,GAEJ,OACE,gBAAC,IAAW,KACV,uBAAKvI,UAAU,wCACb,uBAAKA,UAAU,uCACb,gBAAC,QAAK,CAACD,EAAGA,EAAGgB,GAAG,mBAAmBid,OAAQ,CAAEwxE,yBAAwBhxF,S,uEACE,IACpE,CAAEgxF,0B,IAA0B,wBAAMxvF,UAAU,WAAW,CAAExB,S,gDAC7B,wBAAMwB,UAAU,WAAS,W,kBAG1D,0BACE,0BACE,8B,IAAUwvF,E,MACV,gBAAC,IAAa,CAACruF,QAAS,IAAqBsuF,eAAgBjxF,IAE/D,sBAAIwB,UAAU,uCACZ,8BACGD,EAAE,6CACF,MAEH,gBAAC,IAAa,CAACoB,QAAS,IAAqBsuF,e,oDACOtvF,E,IAAY3B,S,yDC3C5E,oDAIO,MAAMkxF,EAAa,KACxB,MAAMpF,EAAa,mBACbqF,EAAU,kBAAO,GAUvB,OARA,oBAAU,KACRrF,EAAWr2C,QAAU,IAAI27C,gBAClB,KACLD,EAAQ17C,SAAU,EAClBq2C,EAAWr2C,QAAQ47C,UAEpB,IAEI,CACL5vF,EACAzB,EACAuC,EACAu7C,EAAgB,KAET,IAAIvzC,QAAQ,CAACyV,EAASxV,KAC3B,aAAO/I,EAAMzB,EAAMuC,EAAIu7C,EAAM,CAAEwzC,OAAQxF,EAAWr2C,QAAQ67C,SACvDpjF,KAAM5E,GAAS6nF,EAAQ17C,SAAWz1B,EAAQ1W,IAC1C8mB,MAAOzsB,GAAUwtF,EAAQ17C,SAAWjrC,EAAO7G,Q,kCCzBpD,8CA2De,IA/C2D,EACxE3D,OACAkE,kBACAk+D,qBAEA,MACE5iD,QACE7Z,OAAS8yD,IAAKtpB,GACd/tC,OAAO,SAAEo3D,GAAU,SACnBgK,GACD,cACDyU,GACE,eAEGiX,EAAcv3D,GAAU,YAA4BzyB,EAAiBk+D,GAc5E,OAZA,YAAgB,KACG,SAAbI,IAAuBrzB,aAAS,EAATA,EAAWvlC,QAAS,IAAM4uD,GACnD01B,EAAapgE,QAAS2qC,GACpBtpB,EAAUrhB,QAASirC,IACbA,EAAS/4D,OAASy4D,EAAI50D,KACxBozE,EAAc,GAAGj3E,KAAQy4D,EAAI50D,MAAOk1D,EAASz2D,WAKpD,CAAC6sC,EAAWqzB,EAAUhK,EAAUye,EAAeiX,EAAcluF,IAE3D22B,EAIH,gCACGu3D,EAAaxxE,IAAK+7C,GACjB,gBAAC,KAAU,CACT50D,IAAK,GAAGK,KAAmBu0D,EAAI50D,MAC/BnB,KAAM,IAAeD,KACrBzC,KAAM,GAAGA,KAAQy4D,EAAI50D,MACrB6R,MAAO+iD,EAAI/iD,MACXtD,SAAUqmD,EAAIrf,YACd4H,YAAayX,EAAI84B,iBAXhB,O,kCCzCX,uEA8Ce,IAjCyC,EAAGntF,cAAavE,UACtE,MAAM,EAAE0B,GAAM,2BACRzB,EAAiB,4BAAkBD,GACnCu5C,EAAc,IAAMv5C,EAAK,2BACzB43C,EAAa,YAAc53C,GAEjC,OACE,mCAAe,uBACb,uBAAK2B,UAAU,2BACb,gBAAC,IAAe,CAAC3B,IAAKA,EAAK2xF,SAAS,UACpC,2BACE,sBAAIhwF,UAAU,oDAAoD4C,GACjEtE,GACC,qBAAG0B,UAAU,iCACV,IAAM1B,EAAgB,CAAC2xF,EAAe7tF,IACrC,wBAAMpC,UAAU,+BAA+BqC,IAAKD,GACjD6tF,OAOZr4C,GAAe,qBAAG53C,UAAU,wCAAwC43C,GACpE3B,GACC,yBACGl2C,EAAE,iC,IAAkC,gBAAC,IAAY,CAACiB,KAAMi1C,EAAYh1C,KAAMg1C,Q,kCCvCrF,iEAIO,MAqBMi6C,EAAmCC,IAC9C,MAAMC,EAAkB,eAEjBC,EAAoBC,GAAyB,WAAeH,GAQnE,OAPA,YAAgB,KACVC,GACFE,EAAuBC,GA3BW,EAACJ,EAAeC,K,MACtD,MAAM,gBAAEhqE,EAAe,oBAAEC,EAAmB,2BAAE4hB,GAC5CmoD,GAAmB,YAAmD,QAAhC,EAAAA,EAAgB,wBAAgB,QAAI,IAgB5E,OAdAD,EAAczsD,WAAW/d,QAAQK,kBAC/BoqE,EAAgB,yCAA2C,GAC7DD,EAAczsD,WAAW/d,QAAQO,uBAC/BkqE,EAAgB,4CAA8C,GAChED,EAAczsD,WAAW/d,QAAQ+3C,yBAC/B0yB,EAAgB,yCAA2C,GAC7DD,EAAczsD,WAAW/d,QAAQg4C,8BAC/ByyB,EAAgB,4CAA8C,GAChED,EAAczsD,WAAW/d,QAAQQ,UAAY,CAC3CC,kBACA03C,uBAAwB13C,EACxBC,sBACA4hB,8BAEKkoD,GAUDK,CAAyBD,EAAgBH,KAG5C,CAACA,IACGC,I,kCClCT,IAAYI,EAAZ,6EAAYA,GACV,cACA,kBACA,0BACA,oBAJF,CAAYA,MAAgB,KAOrB,MAAMC,EAAsB,CAAC,KAAM,OAAQ,aAAc,UAEnDC,EAAkB,CAC7BnmD,EACAkN,KAEA,OAAQlN,GACN,KAAKimD,EAAiBG,KAEtB,KAAKH,EAAiB10D,OAEtB,KAAK00D,EAAiBI,WACpB,OAAOn5C,EAAco5C,OACvB,KAAKL,EAAiBM,QACpB,OAAOr5C,EAAcs5C,KACvB,QACE,U,kCCzBN,kEAKO,MAAMC,EAAyB,KACpC,MAAOC,EAAWC,EAAiBC,GAAkB,YACnD,iBACA,oBACA,mBAIF,OADeD,IAAoBC,GAAkB,YAAaF,EAAUppF,KAAKupF,Y,kCCZnF,wEA2Be,IAlB0B,KACvC,MAAQtwF,GAAIZ,GAAc,uBACpB,EAAEJ,GAAM,2BACd,OACE,gBAAC,IAAqB,KAClBgI,GACA,gBAAC,IAAc,CAACoI,UAAQ,EAAChP,QAAS,IAAuBmwF,OACvD,gBAAC,IAAM,KACL,6BAAQvxF,EAAE,2CAEZ,gBAAC,IAAW,CAACK,MAAOL,EAAE,2CACtB,gBAAC,IAAqB,CAACI,UAAWA,EAAWoxF,eAAgBxpF,Q,kCCpBvE,sLAwMe,IA3JqD,EAClE5H,YACAoxF,qBAEA,MAAM,EAAExxF,GAAM,2BACRyxF,EAAmB,gBAClBp1B,GAAe,eAChBC,EAAwB,eACxBo1B,EAAqB,eACrB1pF,EAAcwpF,GAAkB,GAChCpE,EAAoBplF,IAAgB,IAAuBA,EAAc,GACzE2pF,EAAkC,YAAqBvxF,EAAWgtF,GAClEgD,EAAgB,OAAH,wBACduB,GAAiB,CACpB1wB,SAAU,qBACVz4D,UAAW,IAAUwJ,eACrBhK,YAAa,OAAF,wBACN2pF,EAAkB3pF,aAAW,CAChCq1E,cAAe,YAAyB+P,KAE1C5pD,IAAK,CACHzpB,IAAK,GACL5Y,KAAM,IAAY2hC,QAClB3oB,IAAK,GACL8tC,IAAK,IACLngC,aAAa,EACbtd,OAAQ,GACRsiE,iBAAiB,EACjB8J,UAAW,IAAiBppD,SAE9BkxC,OAAQ,CACNyP,wBAAwB,GAE1B1qC,OAAQ,CACNppB,eAAgB,GAChBu3E,oBAAoB,GAEtBluD,QAAS,CACPtpB,YAAa,GACb+N,iBAAiB,GAEnB/jB,MAAO,OAAF,wBACAutF,EAAkBvtF,OAAK,CAC1B8yD,IAAK,GACLvmC,SAAU,CACRhmB,SAAS,EACT9K,OAAO,EACPuc,QAAQ,GAEVwL,SAAU,WAEZjF,SAAU,CACR0oB,SAAS,GAEXtH,IAAK,CACHmqC,aAAa,EACbj3C,WAAY,OAAF,UACL,QAKH46D,EAAc,YAAgCzB,GAE9CjiD,EAAmB,CACvBuJ,aAAc,CACZx3C,KAAM,mBAAiBA,KACvBo7B,QAAQ,EACRl7B,UAAW,aAEb0xF,SAAU,CACR5xF,KAAM,eAAaA,KACnBo7B,QAAQ,IAGNqrD,EAAgD,YACpDx4C,GAOF,KAHEnhC,OAAOC,KAAK05E,GAAet+E,OAAS,GACpC2E,OAAOiR,OAAO0oE,GAAel3C,MAAO1uC,GAAUA,EAAMq0B,UAAYr0B,EAAMs0B,YAEjD,OAAO,gBAAC,IAAU,MAEzC,MAAQD,OAAQuvB,EAAU58C,KAAMgqF,EAAQ18D,UAAW28D,GAAgBrL,EAAcjvC,aAE3EC,GACHq6C,GAAertC,GAAYotC,GAAU,YAAuBA,GAiD/D,OACE,gBAAC,IAAM,CACL3B,cAAeyB,EACfnhF,SAlDiB,CAACuN,EAAQva,K,MAC5B,MAAMzF,EAAc05C,IAAqD,QAApC,EAAAA,EAAc15B,EAAOpe,MAAMsjB,iBAAS,eAAE7hB,KACrEo3D,EACJiuB,EAAcmL,SAAS18D,QAAU,IAAUuxD,EAAcmL,SAAS/pF,OAElEw7B,SAAW9kC,KAAMwzF,GACjBtvE,UAAY0oB,QAAS6mD,IACnBj0E,EAEEk0E,EAAkB,OAAH,wBAChBl0E,GAAM,CACT7Z,MAAO,OAAF,wBACA6Z,EAAO7Z,OAAK,CACf00D,OAAQo5B,EAA0B,IAAa9/E,UAAY,IAAaF,WAGtEkgF,EAAkB,YACtBpyF,EACAmyF,EACAl0F,EACAy6D,GACA,GACA/rD,KAAK,IAAM,YAAwB3M,EAAGmyF,EAAiBl0F,IAQzD,OANAm0F,EACGzlF,KAAMnE,IACLipF,EAAiBjpF,KAElBqmB,MAAM,QACT6iE,EAAmB,qCACZU,EACJzlF,KAAMq0B,I,QACL,MAAMqxD,GAAoD,QAAzC,EAA+B,QAA/B,cAAwBrxD,GAAK,UAAE,eAAE7gC,gBAAQ,eAAEuV,WAAO0P,EAEnE,YACE6sE,EACA51B,EACAC,EACA,IAAIS,gBAAgB,CAAEs1B,gBAGzBxjE,MAAOnf,IAENyQ,QAAQC,KAAK,sCAAuC1Q,GACpDhM,EAAQ4uF,UAAU,CAAE3V,YAAajtE,EAAIzN,aAOvCswF,QAAS,KAAQC,OACjBlvD,iBAAkB,YAAiBtjC,IAEjCyyF,GACA,gBAAC,IAAyB,iBACpBA,EAAW,CACfX,SAAUnL,EAAcmL,SACxBn6C,cAAeA,Q,sCC7JpB+4C,E,wfAAL,SAAKA,GACH,gBACA,kBACA,sBACA,iBAJF,CAAKA,MAAgB,KA+KN,IAnKX,EACFzyE,SACA48D,SACA0D,eACAD,cACA38E,SACA+4E,eACAD,QACA9iC,gBACAm6C,WACApc,gBACA4c,gBAEA,MAAM,EAAEtyF,GAAM,4BAGZwjC,KAAK,UAAEozC,EAAS,IAAE78D,EAAG,KAAE5Y,EAAI,IAAEgZ,EAAG,IAAE8tC,EAAG,eAAExzB,GACvCrwB,OAAO,SAAEwjB,GAAU,MACnB/nB,GACEoe,EACEuK,EAAoB,aAAQ,MAC3BkqE,EAAqBC,GAA0B,YAAwB,GACxEC,EACJhrE,IAAa,IAA4Bq1D,oBACzCrG,IAAc,IAAiBppD,SAC/BrsB,IAAS,IAAY2hC,SAChBjyB,EAAUgiF,GAAe,WAAuB,IAgFvD,OA9EA,YAAgB,KACd,GAAI94E,EAAK,CACP,MAAM4G,EAAa,YAAc5G,EAAK5Y,EAAMgZ,EAAK8tC,EAAKxzB,GAClD9T,GACFA,EACG3D,oBAEArQ,KAAMqQ,IACL,GAAKA,EAIH,OAAO,YAAa2D,GAHpBkyE,EAAY7yF,EAAE,2DACdsyF,EAAU,CAAEzX,OAAQ,4BAKvBluE,KAAMq0B,I,8BACDA,GACFsxD,EAAU,IACV5c,EAAc,YAAwB,QAAX,EAAA10C,aAAG,EAAHA,EAAK/iB,cAAM,eAAE0vB,aACxC+nC,EAAc,iBAA6B,QAAX,EAAA10C,aAAG,EAAHA,EAAK/iB,cAAM,eAAE4vB,aAC7C6nC,EACE,kBACuD,IAAvD,IAAoBjgB,QAAmB,QAAX,EAAAz0B,aAAG,EAAHA,EAAK/iB,cAAM,eAAEwsB,SACrCimD,EAA4B,QAAX,EAAA1vD,aAAG,EAAHA,EAAK/iB,cAAM,eAAEwsB,SACnB,QAAX,EAAAzJ,aAAG,EAAHA,EAAK/iB,cAAM,eAAEwsB,SAEnBirC,EAAc,iCAAiC,GAC/CA,EACE,YACwE,QAAxE,EAAkE,QAAlE,EAAuD,QAAvD,EAAA/9B,aAAa,EAAbA,EAAgB+4C,EAA4B,QAAX,EAAA1vD,aAAG,EAAHA,EAAK/iB,cAAM,eAAEwsB,iBAAS,eAAEmN,iBAAS,eAAEn5C,YAAI,QAAI,KAE/D,QAAX,EAAAuiC,aAAG,EAAHA,EAAK/iB,cAAM,eAAEyvB,UAAoC,SAAd,QAAX,EAAA1M,aAAG,EAAHA,EAAK/iB,cAAM,eAAEyvB,WACvCmlD,EACE7yF,EACE,kFAGJsyF,EAAU,CAAEzX,OAAQ,yCAEwCz1D,IAA1DuyB,EAAc+4C,EAA4B,QAAX,EAAA1vD,aAAG,EAAHA,EAAK/iB,cAAM,eAAEwsB,YAC9CooD,EACE7yF,EAAE,2DAA4D,CAC5DyqC,QAAoB,QAAX,EAAAzJ,aAAG,EAAHA,EAAK/iB,cAAM,eAAEwsB,WAG1B6nD,EAAU,CAAEzX,OAAQ,mCAGtByX,EAAU,CAAEzX,OAAQ,oBAGvBhsD,MAAOnf,IACN4iF,EAAU,CAAEzX,OAAQnrE,QAI3B,CAACgmE,EAAe37D,EAAK5Y,EAAMgZ,EAAK8tC,EAAKxzB,EAAgBkjB,EAAe26C,EAAWtyF,IAElF,YAAgB,KACd,GAAIH,EAAMsjB,UAAYqF,EAAmB,CACT,KAAY,OAAD,oCACP,YAAqB,CACnDiL,MAAO,gBACPC,YAAa,CACX1yB,GAAI,IACJ4pC,cAAe,CAAEC,YAAa,CAAE,CAAC,KAA8BhrC,aAAK,EAALA,EAAOsjB,eAGrD9a,OAAS,EAC5BsqF,GAAuB,GAEvBA,GAAuB,MAG3BG,KAED,CAACjzF,EAAO2oB,IAGT,gBAAC,IAAQ,CAAC9X,SAAU6tE,EAAY,YAAY,mCAC1C,gBAAC,IAAI,CAACjuB,UAAW,CAAE9iC,QAAS,SAAUulE,GAAI,QACxC,gBAAC,IAAQ,CAACpvE,KAAM,CAAE6J,QAAS,UAAYwlE,UAAW,CAAExlE,QAAS,uBAC3D,gBAAC,IAAQ,CAACvJ,YAAU,GAClB,gBAAC,IAAU,CAAC0zB,cAAeA,IAC1Bi7C,GACC,gCACGj7C,GACC,gBAAC,IAAiC,CAACA,cAAeA,IAEpD,gBAAC,IAAU,CACTpU,QAAStlB,EAAOslB,QAChBywC,oBAAqB8d,EAAS18D,QAAU,IAAU08D,EAAS/pF,QAE5D2qF,GAAuB,gBAAC,IAAe,CAAC/6C,cAAeA,IACxD,gBAAC,IAAe,CAAC15B,OAAQA,KAG5B24D,IAAc,IAAiBppD,SAC9BopD,IAAc,IAAiB10E,SAC/B0lB,IAAa,IAA4Bq1D,oBACvC,gBAAC,IAAK,CACJ77E,QAAQ,UACRq8E,UAAQ,EACRp9E,MAAOL,EAAE,qDAER6Q,EACD,qBAAG5Q,UAAU,0BACX,gBAAC,QAAK,CAACD,EAAGA,EAAGgB,GAAG,cACd,iC,YAAoB,wBAAMf,UAAU,WAAS,kB,gDAIjD,gBAAC,IAAY,CACXgzF,oBAAoB,qBACpBhyF,KAlJlB,mGAmJkBC,KAAMlB,EAAE,+BAOtB,gBAAC,IAAU,CACTs+E,YAAaA,EACb3tE,aAAchP,GAAUA,EAAOg7E,YAC/BjC,aAAcA,EACdwY,YAAalzF,EAAE,qBACfmzF,eAAgB1Y,IAAU,IAAU94E,aAAM,EAANA,EAAQk5E,UAAY,IAAUA,IAAWH,EAC7E0Y,WAAYpzF,EAAE,qBACdqzF,QAAM,O,kCC7Md,kFAqDe,IA5C2B,EAAG17C,oBAC3C,MAAM,EAAE33C,GAAM,4BACR,OAAEie,GAAW,eAEjBulB,KAAK,UAAEozC,GACPxyE,OAAO,SAAEwjB,IACP3J,EACJ,OACE,gBAAC,IAAW,KACT24D,IAAc,IAAiBoG,SAAWrlC,EAAc15B,EAAOpe,MAAMsjB,WACpE,gBAAC,IAAuB,CACtBm+D,qBAAsB3pC,EAAc15B,EAAOpe,MAAMsjB,UACjDo+D,iBAAkBtjE,EAAOpe,MAAMvB,MAGlCs4E,IAAc,IAAiB10E,SAC9B0lB,IAAa,IAA4Bq1D,qBACe,IAAxD,IAAoBxnB,QAAQx3C,EAAOpe,MAAMsjB,gBACAiC,IAAzCuyB,EAAc15B,EAAOpe,MAAMsjB,WACzB,gBAAC,IAAK,CACJ/hB,QAAQ,UACRq8E,UAAQ,EACRp9E,MAAOL,EAAE,qDAAsD,CAC7DH,MAAOoe,EAAOpe,MAAMsjB,YAGtB,yBAAInjB,EAAE,wDAGX42E,IAAc,IAAiB10E,SAC9B0lB,IAAa,IAA4Bq1D,oBACzC,IAAoBxnB,QAAQx3C,EAAOpe,MAAMsjB,WAAa,GACpD,gBAAC,IAAK,CACJ/hB,QAAQ,UACRq8E,UAAQ,EACRp9E,MAAOL,EAAE,uEAAwE,CAC/EH,MAAOoe,EAAOpe,MAAMsjB,gB","file":"dev-console/code-refs/serverlessFunction-chunk-e833d47a8b110ce887a2.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","export { default as ServerlessFunctionPage } from './ServerlessFunctionPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import * as dagre from 'dagre';\n\nexport const NODE_SEPARATION_HORIZONTAL = 25;\nexport const NODE_SEPARATION_VERTICAL = 20;\nexport const DROP_SHADOW_SPACING = 5;\nexport const BUILDER_NODE_ADD_RADIUS = 9;\nexport const BUILDER_NODE_DECORATOR_RADIUS = 9;\nexport const BUILDER_NODE_ADD_PADDING = 4;\n\nexport const NODE_WIDTH = 120;\nexport const NODE_HEIGHT = 30;\nexport const FINALLY_NODE_PADDING = 30;\nexport const FINALLY_NODE_VERTICAL_SPACING = 20;\n\nexport const FINALLY_ADD_LINK_TEXT_HEIGHT = 10;\nexport const FINALLY_ADD_LINK_SIZE = 15;\nexport const WHEN_EXPRESSSION_DIAMOND_SIZE = 10;\nexport const WHEN_EXPRESSION_SPACING = 25;\n\nexport const DEFAULT_NODE_HEIGHT = 32;\nexport const NODE_PADDING = 12;\nexport const DEFAULT_NODE_ICON_WIDTH = 30;\nexport const DEFAULT_BADGE_WIDTH = 40;\nexport const DEFAULT_FINALLLY_GROUP_PADDING = 35;\nexport const TOOLBAR_HEIGHT = 40;\nexport const GRAPH_MIN_WIDTH = 300;\nexport const GRAPH_MAX_HEIGHT_PERCENT = 45;\n\nexport enum NodeType {\n  TASK_NODE = 'task',\n  CUSTOM_TASK_NODE = 'custom-task',\n  SPACER_NODE = 'spacer',\n  LOADING_NODE = 'loading',\n  TASK_LIST_NODE = 'task-list',\n  BUILDER_NODE = 'builder',\n  INVALID_TASK_LIST_NODE = 'invalid-task-list',\n  FINALLY_NODE = 'finally-node',\n  BUILDER_FINALLY_NODE = 'builder-finally-node',\n  FINALLY_GROUP = 'finally-group',\n  EDGE = 'edge',\n}\nexport enum DrawDesign {\n  INTEGRAL_SHAPE = 'integral-shape',\n  STRAIGHT = 'line',\n}\nexport enum PipelineLayout {\n  DAGRE_BUILDER = 'dagre-builder',\n  DAGRE_BUILDER_SPACED = 'dagre-builder-spaced',\n  DAGRE_VIEWER = 'dagre-viewer',\n  DAGRE_VIEWER_SPACED = 'dagre-viewer-spaced',\n}\n\nexport enum AddNodeDirection {\n  /**\n   * Rules today:\n   *  - the `relatedTask` is pointing at ONLY us\n   *  - we inherit all that `relatedTask` is pointing at\n   */\n  BEFORE = 'in-run-after',\n\n  /**\n   * Rules today:\n   *  - the `relatedTask` must be our ONLY runAfter\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  AFTER = 'has-run-after',\n\n  /**\n   * Rules today:\n   *  - we inherit all that `relatedTask` is pointing at\n   *  - we are added to all that is pointing at `relatedTask`\n   */\n  PARALLEL = 'shared-parallel',\n}\n\nconst DAGRE_SHARED_PROPS: dagre.GraphLabel = {\n  nodesep: NODE_SEPARATION_VERTICAL,\n  ranksep: NODE_SEPARATION_HORIZONTAL,\n  edgesep: 50,\n  ranker: 'longest-path',\n  rankdir: 'LR',\n  marginx: 20,\n  marginy: 20,\n};\nexport const DAGRE_VIEWER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n};\nexport const DAGRE_VIEWER_SPACED_PROPS: dagre.GraphLabel = {\n  ...DAGRE_VIEWER_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + WHEN_EXPRESSION_SPACING,\n};\nexport const DAGRE_BUILDER_PROPS: dagre.GraphLabel = {\n  ...DAGRE_SHARED_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + BUILDER_NODE_ADD_RADIUS * 2,\n  nodesep: NODE_SEPARATION_VERTICAL + BUILDER_NODE_ADD_RADIUS,\n  marginx: DAGRE_SHARED_PROPS.marginx + BUILDER_NODE_ADD_RADIUS * 2,\n  marginy: DAGRE_SHARED_PROPS.marginy + BUILDER_NODE_ADD_RADIUS * 2,\n};\n\nexport const DAGRE_BUILDER_SPACED_PROPS: dagre.GraphLabel = {\n  ...DAGRE_BUILDER_PROPS,\n  ranksep: NODE_SEPARATION_HORIZONTAL + WHEN_EXPRESSION_SPACING + BUILDER_NODE_ADD_RADIUS * 2,\n};\n\nexport enum CustomTask {\n  CUSTOM_TASK = 'CustomTask',\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import { IBuild as IBuildV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/Build';\nimport { IBuildRun as IBuildRunV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Alpha1 } from '@kubernetes-models/shipwright/shipwright.io/v1alpha1/ClusterBuildStrategy';\nimport { IBuild as IBuildV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/Build';\nimport { IBuildRun as IBuildRunV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildRun';\nimport { IBuildStrategy as IBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/BuildStrategy';\nimport { IClusterBuildStrategy as IClusterBuildStrategyV1Beta1 } from '@kubernetes-models/shipwright/shipwright.io/v1beta1/ClusterBuildStrategy';\nimport { K8sResourceCondition } from '@console/internal/module/k8s';\n\n// Add missing latestBuild to Build\nexport type Build =\n  | (IBuildV1Alpha1 & { latestBuild?: BuildRun })\n  | (IBuildV1Beta1 & { latestBuild?: BuildRun });\n\nexport type BuildSpec = IBuildV1Alpha1['spec'] & IBuildV1Beta1['spec'];\n\nexport type BuildStatus = IBuildV1Alpha1['status'] & IBuildV1Beta1['status'];\n\nexport type ClusterBuildStrategyKind = IClusterBuildStrategyV1Alpha1 | IClusterBuildStrategyV1Beta1;\n\nexport type BuildStrategyKind = IBuildStrategyV1Alpha1 | IBuildStrategyV1Beta1;\n\n// Make status.conditions compatible with @console/internal/components/conditions props\nexport type BuildRun =\n  | (IBuildRunV1Alpha1 & {\n      status?: { conditions?: K8sResourceCondition[]; latestTaskRunRef?: string };\n    })\n  | (IBuildRunV1Beta1 & {\n      status?: { conditions?: K8sResourceCondition[]; taskRunName?: string };\n    });\n\n// The enum values need to match the dynamic-plugin `Status` `status` prop.\n// A translation (title) is added in the BuildRunStatus component.\nexport enum ComputedBuildRunStatus {\n  PENDING = 'Pending',\n  RUNNING = 'Running',\n  SUCCEEDED = 'Succeeded',\n  FAILED = 'Failed',\n  UNKNOWN = 'Unknown',\n}\n\n/** WARNING: The enum values corresponds to the `metadata.name` of the ClusterBuildStrategy CRs */\nexport enum ClusterBuildStrategy {\n  BUILDAH = 'buildah',\n  S2I = 'source-to-image',\n  UNKNOWN = 'unknown',\n}\n\nexport const ReadableClusterBuildStrategies: Record<ClusterBuildStrategy, string> = {\n  // t('shipwright-plugin~Buildah')\n  [ClusterBuildStrategy.BUILDAH]: `shipwright-plugin~Buildah`,\n  // t('shipwright-plugin~Source-to-Image')\n  [ClusterBuildStrategy.S2I]: `shipwright-plugin~Source-to-Image`,\n  [ClusterBuildStrategy.UNKNOWN]: `shipwright-plugin~Unknown`,\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport {\n  getSpacerNodes,\n  getEdgesFromNodes,\n  WhenStatus,\n  RunStatus,\n  ModelKind,\n  GraphModel,\n  EdgeModel,\n} from '@patternfly/react-topology';\nimport * as dagre from 'dagre';\nimport * as _ from 'lodash';\nimport i18n from '@console/internal/i18n';\nimport {\n  ComputedStatus,\n  PipelineKind,\n  PipelineRunKind,\n  PipelineTask,\n  PipelineTaskWithStatus,\n  TaskRunKind,\n} from '../../../types';\nimport { getRunStatusColor } from '../../../utils/pipeline-augment';\nimport {\n  getPipelineTasks,\n  getFinallyTasksWithStatus,\n  appendPipelineRunStatus,\n} from '../../../utils/pipeline-utils';\nimport { CheckTaskErrorMessage } from '../pipeline-builder/types';\nimport {\n  NODE_HEIGHT,\n  NodeType,\n  NODE_WIDTH,\n  AddNodeDirection,\n  PipelineLayout,\n  DAGRE_BUILDER_PROPS,\n  DAGRE_VIEWER_PROPS,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  WHEN_EXPRESSION_SPACING,\n  DAGRE_VIEWER_SPACED_PROPS,\n  DAGRE_BUILDER_SPACED_PROPS,\n  NODE_PADDING,\n  DEFAULT_NODE_ICON_WIDTH,\n  DEFAULT_FINALLLY_GROUP_PADDING,\n  DEFAULT_NODE_HEIGHT,\n  DEFAULT_BADGE_WIDTH,\n} from './const';\nimport { DAG, Vertex } from './dag';\nimport {\n  PipelineEdgeModel,\n  NodeCreator,\n  NodeCreatorSetup,\n  SpacerNodeModelData,\n  TaskListNodeModelData,\n  TaskNodeModelData,\n  PipelineMixedNodeModel,\n  PipelineTaskNodeModel,\n  BuilderNodeModelData,\n  PipelineRunAfterNodeModelData,\n  BuilderFinallyNodeModel,\n  FinallyNodeModel,\n  PipelineFinallyNodeModel,\n  DiamondStateType,\n  LoadingNodeModel,\n} from './types';\n\nconst createGenericNode: NodeCreatorSetup = (type, width?, height?) => (name, data) => ({\n  id: name,\n  label: data?.label || name,\n  runAfterTasks: data?.runAfterTasks || [],\n  ...(data && { data }),\n  height: height ?? NODE_HEIGHT,\n  width: width ?? NODE_WIDTH,\n  type,\n});\n\n// Node variations\nexport const createTaskNode: NodeCreator<TaskNodeModelData> = createGenericNode(NodeType.TASK_NODE);\n\nexport const createCustomTaskNode: NodeCreator<TaskNodeModelData> = createGenericNode(\n  NodeType.CUSTOM_TASK_NODE,\n);\n\nexport const createSpacerNode: NodeCreator<SpacerNodeModelData> = createGenericNode(\n  NodeType.SPACER_NODE,\n  0,\n);\nexport const createTaskListNode: NodeCreator<TaskListNodeModelData> = createGenericNode(\n  NodeType.TASK_LIST_NODE,\n);\nexport const createInvalidTaskListNode: NodeCreator<TaskListNodeModelData> = createGenericNode(\n  NodeType.INVALID_TASK_LIST_NODE,\n);\nexport const createBuilderNode: NodeCreator<BuilderNodeModelData> = createGenericNode(\n  NodeType.BUILDER_NODE,\n);\n\nexport const createFinallyNode = (height): NodeCreator<FinallyNodeModel> =>\n  createGenericNode(\n    NodeType.FINALLY_NODE,\n    NODE_WIDTH + WHEN_EXPRESSION_SPACING + FINALLY_NODE_PADDING * 2,\n    height,\n  );\n\nexport const createLoadingNode: NodeCreator<LoadingNodeModel> = createGenericNode(\n  NodeType.LOADING_NODE,\n);\n\nexport const createBuilderFinallyNode = (\n  height: number,\n  width: number,\n): NodeCreator<BuilderFinallyNodeModel> =>\n  createGenericNode(NodeType.BUILDER_FINALLY_NODE, width, height);\n\nconst createPipelineTaskNode = (type: NodeType, data: PipelineRunAfterNodeModelData) =>\n  createGenericNode(type, data.width, data.height)(data.id, data);\n\nexport const getNodeCreator = (type: NodeType): NodeCreator<PipelineRunAfterNodeModelData> => {\n  switch (type) {\n    case NodeType.TASK_LIST_NODE:\n      return createTaskListNode;\n    case NodeType.BUILDER_NODE:\n      return createBuilderNode;\n    case NodeType.SPACER_NODE:\n      return createSpacerNode;\n    case NodeType.LOADING_NODE:\n      return createLoadingNode;\n    case NodeType.INVALID_TASK_LIST_NODE:\n      return createInvalidTaskListNode;\n    case NodeType.CUSTOM_TASK_NODE:\n      return createCustomTaskNode;\n    case NodeType.TASK_NODE:\n    default:\n      return createTaskNode;\n  }\n};\n\nexport const handleParallelToParallelNodes = (\n  nodes: PipelineMixedNodeModel[],\n): PipelineMixedNodeModel[] => {\n  type ParallelNodeReference = {\n    node: PipelineTaskNodeModel;\n    runAfter: string[];\n    atIndex: number;\n  };\n  type ParallelNodeMap = {\n    [id: string]: ParallelNodeReference[];\n  };\n\n  // Collect only multiple run-afters\n  const multipleRunBeforeMap: ParallelNodeMap = nodes.reduce((acc, node, idx) => {\n    const {\n      data: {\n        task: { runAfter },\n      },\n    } = node;\n    if (runAfter && runAfter.length > 1) {\n      const id: string = [...runAfter]\n        .sort((a, b) => a.localeCompare(b))\n        .reduce((str, ref) => `${str}|${ref}`);\n\n      if (!Array.isArray(acc[id])) {\n        acc[id] = [];\n      }\n      acc[id].push({\n        node,\n        runAfter,\n        atIndex: idx,\n      });\n    }\n    return acc;\n  }, {} as ParallelNodeMap);\n\n  // Trim out single occurrences\n  const multiParallelToParallelList: ParallelNodeReference[][] = Object.values(\n    multipleRunBeforeMap,\n  ).filter((data: ParallelNodeReference[]) => data.length > 1);\n\n  if (multiParallelToParallelList.length === 0) {\n    // No parallel to parallel\n    return nodes;\n  }\n\n  // Insert a spacer node between the multiple nodes on the sides of a parallel-to-parallel\n  const newNodes: PipelineMixedNodeModel[] = [];\n  const newRunAfterNodeMap: { [nodeId: string]: string[] } = {};\n  multiParallelToParallelList.forEach((p2p: ParallelNodeReference[]) => {\n    // All nodes in each array share their runAfters\n    const { runAfter } = p2p[0];\n\n    const names: string[] = p2p.map((p2pData) => p2pData.node.id);\n    const parallelSpacerName = `parallel-${names.join('-')}`;\n\n    names.forEach((p2pNodeId) => {\n      if (!Array.isArray(newRunAfterNodeMap[p2pNodeId])) {\n        newRunAfterNodeMap[p2pNodeId] = [];\n      }\n      newRunAfterNodeMap[p2pNodeId].push(parallelSpacerName);\n    });\n\n    newNodes.push(\n      createSpacerNode(parallelSpacerName, {\n        task: {\n          name: parallelSpacerName,\n          runAfter,\n        },\n      }),\n    );\n  });\n\n  // Update all impacted nodes to point at the spacer node as the spacer points at their original runAfters\n  nodes.forEach((node) => {\n    const newRunAfters: string[] | undefined = newRunAfterNodeMap[node.id];\n    if (newRunAfters && newRunAfters.length > 0) {\n      const {\n        data: { task },\n        type,\n      } = node;\n\n      const createNode: NodeCreator<PipelineRunAfterNodeModelData> = getNodeCreator(type);\n\n      // Recreate the node with the new runAfter pointing to the spacer node\n      newNodes.push(\n        createNode(node.id, {\n          ...node.data,\n          task: {\n            ...task,\n            runAfter: newRunAfters,\n          },\n        }),\n      );\n    } else {\n      // Unaffected node, just carry it over\n      newNodes.push(node);\n    }\n  });\n\n  return newNodes;\n};\n\nexport const tasksToNodes = (\n  taskList: PipelineTask[],\n  pipeline?: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n): PipelineMixedNodeModel[] => {\n  const nodeList: PipelineTaskNodeModel[] = taskList.map((task) =>\n    createTaskNode(task.name, {\n      task,\n      pipeline,\n      pipelineRun,\n    }),\n  );\n\n  return handleParallelToParallelNodes(nodeList);\n};\n\nexport const tasksToBuilderNodes = (\n  taskList: PipelineTask[],\n  onAddNode: (task: PipelineTask, direction: AddNodeDirection) => void,\n  onNodeSelection: (task: PipelineTask) => void,\n  getError: CheckTaskErrorMessage,\n  selectedIds: string[],\n): PipelineMixedNodeModel[] => {\n  return taskList.map((task, idx) => {\n    return createBuilderNode(task.name, {\n      error: getError(idx),\n      task,\n      selected: selectedIds.includes(task.name),\n      onNodeSelection: () => {\n        onNodeSelection(task);\n      },\n      onAddNode: (direction: AddNodeDirection) => {\n        onAddNode(task, direction);\n      },\n    });\n  });\n};\n\nexport const getBuilderEdgesFromNodes = (nodes: PipelineMixedNodeModel[]): PipelineEdgeModel[] =>\n  _.flatten(\n    nodes.map((node) => {\n      const {\n        data: {\n          task: { name: target, runAfter = [] },\n        },\n      } = node;\n\n      if (runAfter.length === 0) return null;\n\n      return runAfter.map((source) => ({\n        id: `${source}~to~${target}`,\n        type: 'edge',\n        source,\n        target,\n      }));\n    }),\n  ).filter((edgeList) => !!edgeList);\n\nexport const getFinallyTaskHeight = (allTasksLength: number, disableBuilder: boolean): number => {\n  return (\n    allTasksLength * NODE_HEIGHT +\n    (allTasksLength - 1) * FINALLY_NODE_VERTICAL_SPACING +\n    (!disableBuilder ? NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING : 0) +\n    FINALLY_NODE_PADDING * 2\n  );\n};\n\nexport const getFinallyTaskWidth = (allTasksLength: number): number => {\n  const whenExpressionSpacing = allTasksLength > 0 ? WHEN_EXPRESSION_SPACING : 0;\n  return NODE_WIDTH + FINALLY_NODE_PADDING * 2 + whenExpressionSpacing;\n};\n\nexport const getLastRegularTasks = (regularTasks: PipelineMixedNodeModel[]): string[] => {\n  const runAfters = _.uniq(\n    regularTasks.reduce((acc, { data: { task: { runAfter } } }) => {\n      return runAfter ? acc.concat(runAfter) : acc;\n    }, []),\n  );\n  return _.difference(\n    regularTasks.map((n) => n.id),\n    runAfters,\n  );\n};\n\nexport const connectFinallyTasksToNodes = (\n  nodes: PipelineMixedNodeModel[],\n  pipeline?: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n  taskRuns?: TaskRunKind[],\n): PipelineMixedNodeModel[] => {\n  const finallyTasks = pipelineRun\n    ? getFinallyTasksWithStatus(pipeline, pipelineRun, taskRuns)\n    : pipeline.spec?.finally ?? [];\n  if (finallyTasks.length === 0) {\n    return nodes;\n  }\n  const regularRunAfters = getLastRegularTasks(nodes);\n  const name = 'finally-node';\n  const finallyGroupNode: PipelineFinallyNodeModel = createFinallyNode(\n    getFinallyTaskHeight(finallyTasks.length, true),\n  )(name, {\n    isFinallyTask: true,\n    pipeline,\n    pipelineRun,\n    task: {\n      isFinallyTask: true,\n      name,\n      runAfter: regularRunAfters,\n      finallyTasks: finallyTasks.map((ft) => ({\n        ...ft,\n        disableTooltip: false,\n      })),\n    },\n  });\n  return [...nodes, finallyGroupNode];\n};\n\nexport const getTopologyNodesEdges = (\n  pipeline: PipelineKind,\n  pipelineRun?: PipelineRunKind,\n  taskRuns?: TaskRunKind[],\n): { nodes: PipelineMixedNodeModel[]; edges: PipelineEdgeModel[] } => {\n  const taskList: PipelineTask[] = _.flatten(getPipelineTasks(pipeline, pipelineRun, taskRuns));\n  const taskNodes: PipelineMixedNodeModel[] = tasksToNodes(taskList, pipeline, pipelineRun);\n\n  const nodes: PipelineMixedNodeModel[] = connectFinallyTasksToNodes(\n    taskNodes,\n    pipeline,\n    pipelineRun,\n    taskRuns,\n  );\n  const edges: PipelineEdgeModel[] = getEdgesFromNodes(nodes);\n\n  return { nodes, edges };\n};\n\nexport const getTextWidth = (text: string, font: string = '0.8rem RedHatText'): number => {\n  if (!text || text.length === 0) {\n    return 0;\n  }\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (!context) {\n    return text.length;\n  }\n  context.font = font;\n  const { width } = context.measureText(text);\n  return width;\n};\n\nexport const extractDepsFromContextVariables = (contextVariable: string) => {\n  const regex = /(?:(?:\\$\\(tasks.))([a-z0-9_-]+)(?:.results+)(?:[.^\\w]+\\))/g;\n  let matches;\n  const deps = [];\n  // eslint-disable-next-line no-cond-assign\n  while ((matches = regex.exec(contextVariable)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (matches.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n    if (matches) {\n      if (!deps.includes(matches[1])) {\n        deps.push(matches[1]);\n      }\n    }\n  }\n  return deps;\n};\n\nexport const getSpacerNode = (node: PipelineMixedNodeModel): PipelineMixedNodeModel => ({\n  ...node,\n  height: 1,\n  width: 1,\n});\n\nexport const getWhenStatus = (status: RunStatus): WhenStatus => {\n  switch (status) {\n    case RunStatus.Succeeded:\n    case RunStatus.Failed:\n      return WhenStatus.Met;\n    case RunStatus.Skipped:\n    case RunStatus['In Progress']:\n    case RunStatus.Idle:\n      return WhenStatus.Unmet;\n    default:\n      return undefined;\n  }\n};\n\nexport const getTaskWhenStatus = (task: PipelineTaskWithStatus): WhenStatus => {\n  if (!task.when) {\n    return undefined;\n  }\n  return getWhenStatus(task.status?.reason);\n};\n\nexport const getGraphDataModel = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): {\n  graph: GraphModel;\n  nodes: PipelineMixedNodeModel[];\n  edges: EdgeModel[];\n} => {\n  if (!pipeline) {\n    return null;\n  }\n\n  const taskList = _.flatten(getPipelineTasks(pipeline, pipelineRun, taskRuns));\n\n  const dag = new DAG();\n  taskList?.forEach((task: PipelineTask) => {\n    dag.addEdges(task.name, task, '', task.runAfter || []);\n  });\n\n  const nodes = [];\n  const maxWidthForLevel = {};\n  dag.topologicalSort((v: Vertex) => {\n    if (!maxWidthForLevel[v.level]) {\n      maxWidthForLevel[v.level] = getTextWidth(v.name);\n    } else {\n      maxWidthForLevel[v.level] = Math.max(maxWidthForLevel[v.level], getTextWidth(v.name));\n    }\n  });\n  dag.topologicalSort((vertex: Vertex) => {\n    const runAfterTasks = [];\n    const task = vertex.data;\n    const depsFromContextVariables = [];\n    if (task.params) {\n      task.params.forEach((p) => {\n        if (Array.isArray(p.value)) {\n          p.value.forEach((paramValue) => {\n            depsFromContextVariables.push(...extractDepsFromContextVariables(paramValue));\n          });\n        } else {\n          depsFromContextVariables.push(...extractDepsFromContextVariables(p.value));\n        }\n      });\n    }\n    if (task?.when) {\n      task.when.forEach(({ input, values }) => {\n        if (values) {\n          depsFromContextVariables.push(...extractDepsFromContextVariables(input));\n          values.forEach((whenValue) => {\n            depsFromContextVariables.push(...extractDepsFromContextVariables(whenValue));\n          });\n        }\n      });\n    }\n    const dependancies = _.uniq([...vertex.dependancyNames]);\n    if (dependancies) {\n      dependancies.forEach((dep) => {\n        const depObj = dag.vertices.get(dep);\n        if (depObj.level - vertex.level <= 1 || vertex.data.runAfter?.includes(depObj.name)) {\n          runAfterTasks.push(dep);\n        }\n      });\n    }\n    if (depsFromContextVariables.length > 0) {\n      const v = depsFromContextVariables.map((d) => {\n        return dag.vertices.get(d);\n      });\n      const minLevelDep = _.minBy(v, (d) => d.level);\n      const nearestDeps = v.filter((v1) => v1.level === minLevelDep.level);\n      nearestDeps.forEach((nd) => {\n        if (vertex.dependancyNames.includes(nd.name)) {\n          if (nd.level - vertex.level <= 1 || vertex.dependancyNames.length === 0) {\n            runAfterTasks.push(nd.name);\n          }\n        }\n      });\n    }\n    const badgePadding = Object.keys(pipelineRun.spec)?.length > 0 ? DEFAULT_BADGE_WIDTH : 0;\n    const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === task.name);\n    const getNodeType = (taskKind: string) => {\n      if (!taskKind || taskKind === 'Task' || taskKind === 'ClusterTask') {\n        return NodeType.TASK_NODE;\n      }\n      return NodeType.CUSTOM_TASK_NODE;\n    };\n\n    nodes.push(\n      createPipelineTaskNode(getNodeType(task?.taskRef?.kind), {\n        id: vertex.name,\n        label: vertex.name,\n        width:\n          maxWidthForLevel[vertex.level] +\n          NODE_PADDING * 2 +\n          DEFAULT_NODE_ICON_WIDTH +\n          badgePadding,\n        runAfterTasks,\n        status: isTaskSkipped ? RunStatus.Skipped : vertex.data.status?.reason,\n        whenStatus: getTaskWhenStatus(vertex.data),\n        task: vertex.data,\n        pipeline,\n        pipelineRun,\n      }),\n    );\n  });\n\n  const finallyTaskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\n  const maxFinallyNodeName =\n    finallyTaskList.sort((a, b) => b.name.length - a.name.length)[0]?.name || '';\n  const finallyNodes = finallyTaskList.map((fTask) => {\n    const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === fTask.name);\n\n    return createPipelineTaskNode(NodeType.FINALLY_NODE, {\n      id: fTask.name,\n      label: fTask.name,\n      width:\n        getTextWidth(maxFinallyNodeName) + NODE_PADDING * 2 + DEFAULT_FINALLLY_GROUP_PADDING * 2,\n      height: DEFAULT_NODE_HEIGHT,\n      runAfterTasks: [],\n      status: isTaskSkipped ? RunStatus.Skipped : fTask.status?.reason,\n      whenStatus: getTaskWhenStatus(fTask),\n      task: fTask,\n      pipeline,\n      pipelineRun,\n    });\n  });\n\n  const finallyGroup = finallyNodes.length\n    ? [\n        {\n          id: 'finally-group-id',\n          type: NodeType.FINALLY_GROUP,\n          children: finallyNodes.map((n) => n.id),\n          group: true,\n          style: { padding: DEFAULT_FINALLLY_GROUP_PADDING },\n        },\n      ]\n    : [];\n  const spacerNodes: PipelineMixedNodeModel[] = getSpacerNodes(\n    [...nodes, ...finallyNodes],\n    NodeType.SPACER_NODE,\n    [NodeType.FINALLY_NODE],\n  ).map(getSpacerNode);\n\n  const edges: PipelineEdgeModel[] = getEdgesFromNodes(\n    [...nodes, ...spacerNodes, ...finallyNodes],\n    NodeType.SPACER_NODE,\n    NodeType.EDGE,\n    NodeType.EDGE,\n    [NodeType.FINALLY_NODE],\n    NodeType.EDGE,\n  );\n\n  return {\n    graph: {\n      id: `${pipelineRun?.metadata?.name || pipeline.metadata.name}-graph`,\n      type: ModelKind.graph,\n      layout: PipelineLayout.DAGRE_VIEWER,\n      scaleExtent: [0.5, 1],\n    },\n    nodes: [...nodes, ...spacerNodes, ...finallyNodes, ...finallyGroup],\n    edges,\n  };\n};\n\nexport const taskHasWhenExpression = (task: PipelineTask): boolean => task?.when?.length > 0;\n\nexport const nodesHasWhenExpression = (nodes: PipelineMixedNodeModel[]): boolean =>\n  nodes.some((n) => taskHasWhenExpression(n.data.task));\n\nexport const hasWhenExpression = (pipeline: PipelineKind): boolean => {\n  return [...(pipeline?.spec?.tasks || []), ...(pipeline?.spec?.finally || [])].some(\n    taskHasWhenExpression,\n  );\n};\nexport const getLayoutData = (layout: PipelineLayout): dagre.GraphLabel => {\n  switch (layout) {\n    case PipelineLayout.DAGRE_BUILDER:\n      return DAGRE_BUILDER_PROPS;\n    case PipelineLayout.DAGRE_VIEWER:\n      return DAGRE_VIEWER_PROPS;\n    case PipelineLayout.DAGRE_VIEWER_SPACED:\n      return DAGRE_VIEWER_SPACED_PROPS;\n    case PipelineLayout.DAGRE_BUILDER_SPACED:\n      return DAGRE_BUILDER_SPACED_PROPS;\n    default:\n      return null;\n  }\n};\n\nexport const getWhenExpressionDiamondState = (\n  status: ComputedStatus,\n  isPipelineRun: boolean,\n  isFinallyTask: boolean,\n): DiamondStateType => {\n  let diamondColor: string;\n  if (isPipelineRun) {\n    if (status === ComputedStatus.Failed) {\n      diamondColor = successColor.value;\n    } else {\n      diamondColor = getRunStatusColor(status).pftoken.value;\n    }\n  } else if (!isFinallyTask) {\n    diamondColor = 'var(--pf-v5-global--BackgroundColor--200)';\n  } else {\n    diamondColor = 'var(--pf-v5-global--BackgroundColor--light-100)';\n  }\n\n  let tooltipContent: string;\n  switch (status) {\n    case ComputedStatus.Succeeded:\n    case ComputedStatus.Failed:\n      tooltipContent = i18n.t('pipelines-plugin~When expression was met');\n      break;\n    case ComputedStatus.Skipped:\n      tooltipContent = i18n.t('pipelines-plugin~When expression was not met');\n      break;\n    default:\n      tooltipContent = i18n.t('pipelines-plugin~When expression');\n  }\n  return { tooltipContent, diamondColor };\n};\n\nexport const getTooltipContent = (statusReason: ComputedStatus): string => {\n  switch (statusReason) {\n    case ComputedStatus.Succeeded:\n    case ComputedStatus.Failed:\n      return i18n.t('pipelines-plugin~When expression was met');\n    case ComputedStatus.Skipped:\n      return i18n.t('pipelines-plugin~When expression was not met');\n    default:\n      return i18n.t('pipelines-plugin~When expression');\n  }\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\n/**\n * ConsoleSample is an extension to customizing OpenShift web console by adding samples.\n */\nexport type ConsoleSample = K8sResourceCommon & {\n  spec: ConsoleSampleSpec;\n};\n\n/**\n * ConsoleSampleSpec is the desired sample for the web console.\n * Samples will appear with their title, descriptions and a badge in a samples catalog.\n */\nexport type ConsoleSampleSpec = {\n  /**\n   * title is the display name of the sample.\n   *\n   * It is required and must be no more than 50 characters in length.\n   */\n  title: string;\n  /**\n   * abstract is a short introduction to the sample.\n   *\n   * It is required and must be no more than 100 characters in length.\n   *\n   * The abstract is shown on the sample card tile below the title and provider\n   * and is limited to three lines of content.\n   */\n  abstract: string;\n  /**\n   * description is a long form explanation of the sample.\n   *\n   * It is required and can have a maximum length of **4096** characters.\n   *\n   * It is a README.md-like content for additional information, links, pre-conditions, and other instructions.\n   * It will be rendered as Markdown so that it can contain line breaks, links, and other simple formatting.\n   */\n  description: string;\n  /**\n   * icon is an optional base64 encoded image and shown beside the sample title.\n   *\n   * The format must follow the [data: URL format](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)\n   * and can have a maximum size of **10 KB**.\n   *\n   * `data:[<mediatype>][;base64],<base64 encoded image>`\n   *\n   * For example:\n   *\n   * `data:image;base64,` plus the base64 encoded image.\n   *\n   * Vector images can also be used. SVG icons must start with:\n   *\n   * `data:image/svg+xml;base64,` plus the base64 encoded SVG image.\n   *\n   * All sample catalog icons will be shown on a white background (also when the dark theme is used).\n   * The web console ensures that different aspect ratios work correctly.\n   * Currently, the surface of the icon is at most 40x100px.\n   */\n  icon?: string;\n  /**\n   * type is an optional label to group multiple samples.\n   *\n   * It is optional and must be no more than 20 characters in length.\n   *\n   * Recommendation is a singular term like \"Builder Image\", \"Devfile\" or \"Serverless Function\".\n   *\n   * Currently, the type is shown a badge on the sample card tile in the top right corner.\n   */\n  type?: string;\n  /**\n   * provider is an optional label to honor who provides the sample.\n   *\n   * It is optional and must be no more than 50 characters in length.\n   *\n   * A provider can be a company like \"Red Hat\" or an organization like \"CNCF\" or \"Knative\".\n   *\n   * Currently, the provider is only shown on the sample card tile below the title with the prefix \"Provided by \"\n   */\n  provider?: string;\n  /**\n   * tags are optional string values that can be used to find samples in the samples catalog.\n   *\n   * Examples of common tags may be \"Java\", \"Quarkus\", etc.\n   *\n   * They will be displayed on the samples details page.\n   */\n  tags?: string[];\n  /**\n   * source defines where to deploy the sample service from.\n   * The sample may be sourced from an external git repository or container image.\n   */\n  source: ConsoleSampleSource;\n};\n\n/**\n * Union of the sample source types.\n * Unsupported samples types will be ignored in the web console.\n */\nexport type ConsoleSampleSource = ConsoleSampleGitImportSource | ConsoleSampleContainerImportSource;\n\n/** ConsoleSampleGitImportSource allows the user to import code from a git repository. */\nexport type ConsoleSampleGitImportSource = {\n  type: 'GitImport';\n  gitImport: {\n    /** repository contains the reference to the actual Git repository.. */\n    repository: ConsoleSampleGitImportSourceRepository;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleGitImportSourceService;\n  };\n};\n\n/** ConsoleSampleGitImportSourceRepository contains the reference to the actual Git repository. */\nexport type ConsoleSampleGitImportSourceRepository = {\n  /**\n   * url of the Git repository that contains a HTTP service.\n   * The HTTP service must be exposed on the default port (8080) unless\n   * otherwise configured with the port field.\n   *\n   * Only public repositories on GitHub, GitLab and Bitbucket are currently supported:\n   *\n   *   - https://github.com/<org>/<repository>\n   *   - https://gitlab.com/<org>/<repository>\n   *   - https://bitbucket.org/<org>/<repository>\n   *\n   * The url must have a maximum length of 256 characters.\n   */\n  url: string;\n  /**\n   * revision is the git revision at which to clone the git repository\n   * Can be used to clone a specific branch, tag or commit SHA.\n   * Must be at most 256 characters in length.\n   * When omitted the repository's default branch is used.\n   */\n  revision?: string;\n  /**\n   * contextDir is used to specify a directory within the repository to build the\n   * component.\n   * Must start with `/` and have a maximum length of 256 characters.\n   * When omitted, the default value is to build from the root of the repository.\n   */\n  contextDir?: string;\n};\n\n/**\n * ConsoleSampleGitImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleGitImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\n/** ConsoleSampleContainerImportSource allows the user import a container image. */\nexport type ConsoleSampleContainerImportSource = {\n  type: 'ContainerImport';\n  containerImport: {\n    /**\n     * reference to a container image that provides a HTTP service.\n     * The service must be exposed on the default port (8080) unless\n     * otherwise configured with the port field.\n     *\n     * Supported formats:\n     *   - <repository-name>/<image-name>\n     *   - docker.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>\n     *   - quay.io/<repository-name>/<image-name>@sha256:<image hash>\n     *   - quay.io/<repository-name>/<image-name>:<tag>\n     */\n    image: string;\n    /** service contains configuration for the Service resource created for this sample. */\n    service?: ConsoleSampleContainerImportSourceService;\n  };\n};\n\n/**\n * ConsoleSampleContainerImportSourceService allows the samples author define defaults\n * for the Service created for this sample\n */\nexport type ConsoleSampleContainerImportSourceService = {\n  /**\n   * targetPort is the port that the service listens on for HTTP requests.\n   * This port will be used for Service created for this sample.\n   * Port must be in the range 1 to 65535.\n   * Default port is 8080.\n   */\n  targetPort?: number;\n};\n\nexport function isGitImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleGitImportSource {\n  return source?.type === 'GitImport' && !!source.gitImport?.repository?.url;\n}\n\nexport function isContainerImportSource(\n  source: ConsoleSampleSource,\n): source is ConsoleSampleContainerImportSource {\n  return source?.type === 'ContainerImport' && !!source.containerImport?.image;\n}\n","import { createContext } from 'react';\nimport * as _ from 'lodash';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport {\n  K8sResourceKind,\n  ContainerSpec,\n  referenceFor,\n  modelFor,\n} from '@console/internal/module/k8s';\nimport { getResourcesType } from '../edit-application/edit-application-utils';\nimport { getProbesData } from './create-health-checks-probe-utils';\nimport { HealthChecksProbeType } from './health-checks-types';\n\nexport const updateHealthChecksProbe = (\n  values,\n  resource: K8sResourceKind,\n  container: ContainerSpec,\n): K8sResourceKind => {\n  const {\n    healthChecks: { readinessProbe, livenessProbe, startupProbe },\n    containerName,\n    healthChecks,\n  } = values;\n  const updatedResource = _.cloneDeep(resource);\n  const containerIndex = _.findIndex(updatedResource.spec.template.spec.containers, [\n    'name',\n    containerName,\n  ]);\n  updatedResource.spec.template.spec.containers[containerIndex] = {\n    ...container,\n    ...getProbesData(healthChecks, getResourcesType(resource)),\n  };\n\n  if (!readinessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.ReadinessProbe}`,\n    );\n  }\n\n  if (!livenessProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.LivenessProbe}`,\n    );\n  }\n\n  if (!startupProbe.enabled) {\n    updatedResource.spec.template.spec.containers[containerIndex] = _.omit(\n      updatedResource.spec.template.spec.containers[containerIndex],\n      `${HealthChecksProbeType.StartupProbe}`,\n    );\n  }\n\n  return updatedResource;\n};\n\ntype HealthCheckContextType = {\n  viewOnly: boolean;\n};\n\nexport const HealthCheckContext = createContext<HealthCheckContextType>({ viewOnly: false });\n\nexport const useViewOnlyAccess = (resource: K8sResourceKind): boolean => {\n  const model = modelFor(referenceFor(resource));\n  const hasEditAccess = useAccessReview({\n    group: model.apiGroup,\n    resource: model.plural,\n    name: resource.metadata.name,\n    namespace: resource.metadata.namespace,\n    verb: 'update',\n  });\n  return !hasEditAccess;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { getGroupVersionKindForModel } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { k8sGetResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleSampleModel } from '../models/samples';\nimport {\n  ConsoleSample,\n  ConsoleSampleGitImportSourceRepository,\n  isContainerImportSource,\n  isGitImportSource,\n} from '../types/samples';\n\nconst LOCALIZATION_NAME_LABEL = 'console.openshift.io/name';\nconst LOCALIZATION_LANGUAGE_LABEL = 'console.openshift.io/lang';\nconst LOCALIZATION_COUNTRY_LABEL = 'console.openshift.io/country';\n\nexport const createSampleLink = (sample: ConsoleSample, activeNamespace: string): string | null => {\n  if (isGitImportSource(sample.spec.source)) {\n    const { gitImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('formType', 'sample');\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('git.repository', gitImport.repository.url);\n    if (gitImport.repository.revision) {\n      searchParams.set('git.revision', gitImport.repository.revision);\n    }\n    if (gitImport.repository.contextDir) {\n      searchParams.set('git.contextDir', gitImport.repository.contextDir);\n    }\n    return `/import/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  if (isContainerImportSource(sample.spec.source)) {\n    const { containerImport } = sample.spec.source;\n    const searchParams = new URLSearchParams();\n    searchParams.set('sample', sample.metadata.name);\n    searchParams.set('image', containerImport.image);\n    return `/deploy-image/ns/${activeNamespace}?${searchParams}`;\n  }\n\n  // Unsupported source type, will be dropped.\n  return null;\n};\n\nexport const getGitImportSample = (): {\n  sampleName: string;\n  repository: ConsoleSampleGitImportSourceRepository;\n} => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    repository: {\n      url: searchParams.get('git.repository'),\n      revision: searchParams.get('git.revision'),\n      contextDir: searchParams.get('git.contextDir'),\n    },\n  };\n};\n\nexport const getContainerImportSample = () => {\n  const searchParams = new URLSearchParams(window.location.search);\n  return {\n    sampleName: searchParams.get('sample'),\n    image: searchParams.get('image'),\n  };\n};\n\nexport const hasSampleQueryParameter = () => {\n  return !!new URLSearchParams(window.location.search).get('sample');\n};\n\nexport const groupConsoleSamplesByName = (samples: ConsoleSample[]) => {\n  return samples.reduce<Record<string, ConsoleSample[]>>((grouped, consoleSample) => {\n    const name =\n      consoleSample.metadata.labels?.[LOCALIZATION_NAME_LABEL] || consoleSample.metadata.name;\n    if (!grouped[name]) grouped[name] = [];\n    grouped[name].push(consoleSample);\n    return grouped;\n  }, {});\n};\n\n/**\n * Returns the samples with the best localization match, for the given\n * preferred language and preferred country. It prefers a match in this order:\n *\n * 1. Sample language and country are equal to the preferred language and country.\n *    This includes sample without language (fallbacks to en) and no country.\n *\n * 2. Sample language is equal to the preferred language.\n *    1. And the sample has no country defined.  (eg, select en sample is used for en-CA and en-GB)\n *    2. Any country is defined.                 (eg, select en-CA sample is used for en-GB)\n *\n * 3. Fallback to an english sample\n *    (Sample language is en OR sample language is not defined):\n *    1. Same country  (use en-CA sample if preference is fr-CA)\n *    2. No country\n *    3. Any country   (use en-CA sample if preference is en-US)\n */\nexport const getBestMatch = (samples: ConsoleSample[], language: string): ConsoleSample | null => {\n  if (!samples || !samples.length) {\n    return null;\n  }\n  const preferredLanguage = (language || 'en').split('-')[0].toLowerCase();\n  const preferredCountry = ((language || '').split('-')[1] || '').toUpperCase();\n\n  let sameLanguageWithoutCountry: ConsoleSample = null;\n  let sameLanguageWithAnyCountry: ConsoleSample = null;\n  let fallbackLanguageSameCountry: ConsoleSample = null;\n  let fallbackLanguageNoCountry: ConsoleSample = null;\n  let fallbackLanguageAnyCountry: ConsoleSample = null;\n\n  for (const sample of samples) {\n    const sampleLanguage = (\n      sample.metadata?.labels?.[LOCALIZATION_LANGUAGE_LABEL] || 'en'\n    ).toLowerCase();\n    const sampleCountry = (\n      sample.metadata?.labels?.[LOCALIZATION_COUNTRY_LABEL] || ''\n    ).toUpperCase();\n\n    if (sampleLanguage === preferredLanguage && sampleCountry === preferredCountry) {\n      return sample;\n    }\n    if (sampleLanguage === preferredLanguage) {\n      if (!sampleCountry && !sameLanguageWithoutCountry) {\n        sameLanguageWithoutCountry = sample;\n      } else if (sampleCountry && !sameLanguageWithAnyCountry) {\n        sameLanguageWithAnyCountry = sample;\n      }\n    }\n    if (sampleLanguage === 'en') {\n      if (sampleCountry === preferredCountry && !fallbackLanguageSameCountry) {\n        fallbackLanguageSameCountry = sample;\n      } else if (!sampleCountry && !fallbackLanguageNoCountry) {\n        fallbackLanguageNoCountry = sample;\n      } else if (!fallbackLanguageAnyCountry) {\n        fallbackLanguageAnyCountry = sample;\n      }\n    }\n  }\n  return (\n    sameLanguageWithoutCountry ||\n    sameLanguageWithAnyCountry ||\n    fallbackLanguageSameCountry ||\n    fallbackLanguageNoCountry ||\n    fallbackLanguageAnyCountry\n  );\n};\n\nexport const useSamples = () => {\n  return useK8sWatchResource<ConsoleSample[]>({\n    isList: true,\n    groupVersionKind: getGroupVersionKindForModel(ConsoleSampleModel),\n  });\n};\n\nexport const getSample = (name: string): Promise<ConsoleSample> =>\n  k8sGetResource({ model: ConsoleSampleModel, name });\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import * as React from 'react';\nimport { useSize } from '@patternfly/react-topology';\nimport cx from 'classnames';\nimport { get } from 'lodash';\nimport { modelFor, kindToAbbr } from '@console/internal/module/k8s';\nimport './SvgResourceIcon.scss';\n\ninterface ResourceIconProps {\n  x: number;\n  y: number;\n  kind: string;\n  leftJustified?: boolean;\n}\n\nfunction getKindStringAndAbbreviation(kind: string) {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n}\n\nconst ForwardSvgResourceIcon: React.FC<ResourceIconProps> = (\n  { kind, x, y, leftJustified },\n  iconRef,\n) => {\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(kind);\n  const [textSize, textRef] = useSize([]);\n\n  let rect = null;\n  let paddingX = 0;\n  let paddingY = 0;\n  let width = 0;\n  let height = 0;\n\n  if (textSize) {\n    ({ height, width } = textSize);\n    paddingX = height / 2;\n    paddingY = height / 14;\n    height += paddingY * 2;\n    rect = (\n      <rect\n        fill={kindColor}\n        ref={iconRef}\n        x={x - (leftJustified ? 0 : paddingX + width / 2)}\n        width={textSize.width + paddingX * 2}\n        y={y - (leftJustified ? 0 : paddingY + textSize.height / 2)}\n        height={height}\n        rx={height / 2}\n        ry={height / 2}\n      />\n    );\n  }\n\n  return (\n    <g\n      className={cx('odc-resource-icon', {\n        [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n      })}\n      data-test={`icon ${kindStr.toLowerCase()}`}\n    >\n      {rect}\n      <title>{kindStr}</title>\n      <text\n        ref={textRef}\n        x={x + (leftJustified ? paddingX + width / 2 : 0)}\n        y={y + (leftJustified ? (paddingY + height) / 2 : 0)}\n        textAnchor=\"middle\"\n        dy=\"0.35em\"\n      >\n        {kindAbbr}\n      </text>\n    </g>\n  );\n};\n\nconst SvgResourceIcon = React.forwardRef(ForwardSvgResourceIcon);\nexport { SvgResourceIcon as default, getKindStringAndAbbreviation };\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { hasIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentConfigModel, DeploymentModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  referenceFor,\n  referenceForModel,\n  ImagePullPolicy,\n} from '@console/internal/module/k8s';\nimport {\n  KNATIVE_AUTOSCALEWINDOW_ANNOTATION,\n  KNATIVE_CONCURRENCYTARGET_ANNOTATION,\n  KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION,\n  KNATIVE_MAXSCALE_ANNOTATION,\n  KNATIVE_MINSCALE_ANNOTATION,\n  PRIVATE_KNATIVE_SERVING_LABEL,\n  ServiceModel,\n} from '@console/knative-plugin';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { isDockerPipeline } from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { getLimitsDataFromResource } from '@console/shared/src';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { UNASSIGNED_KEY } from '@console/topology/src/const';\nimport { RegistryType } from '../../utils/imagestream-utils';\nimport { getHealthChecksData } from '../health-checks/create-health-checks-probe-utils';\nimport { deployValidationSchema } from '../import/deployImage-validation-utils';\nimport {\n  Resources,\n  DeploymentData,\n  GitReadableTypes,\n  ServerlessData,\n  BuildOptions,\n  BuildData,\n} from '../import/import-types';\nimport {\n  detectGitType,\n  validationSchema as importValidationSchema,\n} from '../import/import-validation-utils';\nimport { getAutoscaleWindow } from '../import/serverless/serverless-utils';\nimport { validationSchema as jarValidationSchema } from '../import/upload-jar-validation-utils';\nimport { AppResources } from './edit-application-types';\n\nexport enum ApplicationFlowType {\n  Git = 'Import from Git',\n  Dockerfile = 'Import from Dockerfile',\n  Container = 'Deploy Image',\n  JarUpload = 'Upload JAR file',\n}\n\nexport const getFlowTypePageTitle = (flowType: ApplicationFlowType): string => {\n  switch (flowType) {\n    case ApplicationFlowType.Git:\n      // t('devconsole~Import from Git')\n      return 'devconsole~Import from Git';\n    case ApplicationFlowType.Dockerfile:\n      // t('devconsole~Import from Dockerfile')\n      return 'devconsole~Import from Dockerfile';\n    case ApplicationFlowType.Container:\n      // t('devconsole~Deploy Image')\n      return 'devconsole~Deploy Image';\n    case ApplicationFlowType.JarUpload:\n      // t('devconsole~Upload JAR file')\n      return 'devconsole~Upload JAR file';\n    default:\n      return flowType;\n  }\n};\n\nexport enum BuildSourceType {\n  Git = 'Git',\n  Binary = 'Binary',\n}\n\nconst isFromJarUpload = (type: string): boolean => type === BuildSourceType.Binary;\n\nconst getBuildSourceType = (buildConfig: K8sResourceKind): string =>\n  buildConfig?.spec?.source?.type;\n\nexport const getResourcesType = (resource: K8sResourceKind): Resources => {\n  switch (resource.kind) {\n    case DeploymentConfigModel.kind:\n      return Resources.OpenShift;\n    case DeploymentModel.kind:\n      return Resources.Kubernetes;\n    case referenceFor(resource) === referenceForModel(ServiceModel) ? ServiceModel.kind : '':\n      return Resources.KnativeService;\n    default:\n      return null;\n  }\n};\n\nexport const getFlowType = (buildStrategy: string, buildType?: string): ApplicationFlowType => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary\n        ? ApplicationFlowType.JarUpload\n        : ApplicationFlowType.Git;\n    case BuildStrategyType.Docker:\n      return ApplicationFlowType.Dockerfile;\n    default:\n      return ApplicationFlowType.Container;\n  }\n};\n\nexport const getValidationSchema = (\n  buildStrategy: string,\n  buildType?: string,\n): ((t: TFunction) => any) => {\n  switch (buildStrategy) {\n    case BuildStrategyType.Source:\n      return buildType === BuildSourceType.Binary ? jarValidationSchema : importValidationSchema;\n    case BuildStrategyType.Docker:\n      return importValidationSchema;\n    default:\n      return deployValidationSchema;\n  }\n};\n\nexport const checkIfTriggerExists = (\n  triggers: { [key: string]: any }[],\n  type: string,\n  resourceKind?: string,\n) => {\n  return !!_.find(triggers, (trigger) => {\n    if (resourceKind === DeploymentConfigModel.kind && type === 'ImageChange') {\n      return trigger.type === type && trigger.imageChangeParams?.automatic;\n    }\n    return trigger.type === type;\n  });\n};\n\nexport const getGitDataFromBuildConfig = (buildConfig: K8sResourceKind) => {\n  const url = buildConfig?.spec?.source?.git?.uri ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(buildConfig, 'spec.source.git.ref', ''),\n    dir: _.get(buildConfig, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(buildConfig, 'spec.source.sourceSecret.name', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nconst getGitDataFromPipeline = (pipeline: PipelineKind) => {\n  const params = pipeline?.spec?.params;\n  const url = (params?.find((param) => param?.name === 'GIT_REPO')?.default ?? '') as string;\n  const ref = params?.find((param) => param?.name === 'GIT_REVISION')?.default ?? '';\n  const dir = params?.find((param) => param?.name === 'PATH_CONTEXT')?.default ?? '/';\n  return {\n    url,\n    ref,\n    dir,\n    type: detectGitType(url),\n    showGitType: false,\n    secret: '',\n    isUrlValidating: false,\n  };\n};\n\nconst getGitDataFromShipwrightBuild = (shipwrightBuild: K8sResourceKind) => {\n  const url = shipwrightBuild?.spec?.source?.git?.url ?? '';\n  const gitData = {\n    url,\n    type: detectGitType(url),\n    ref: _.get(shipwrightBuild, 'spec.source.git.revision', ''),\n    dir: _.get(shipwrightBuild, 'spec.source.contextDir', ''),\n    showGitType: false,\n    secret: _.get(shipwrightBuild, 'spec.source.git.cloneSecret', ''),\n    isUrlValidating: false,\n  };\n  return gitData;\n};\n\nexport const getKsvcRouteData = (resource: K8sResourceKind) => {\n  const { metadata, spec } = resource;\n  const containers = spec?.template?.spec?.containers ?? [];\n  const port = containers?.[0]?.ports?.[0]?.containerPort ?? '';\n  const routeData = {\n    create: metadata?.labels?.[PRIVATE_KNATIVE_SERVING_LABEL] !== 'cluster-local',\n    unknownTargetPort: _.toString(port),\n    targetPort: _.toString(port),\n    defaultUnknownPort: 8080,\n  };\n  return routeData;\n};\n\nexport const getDefaultLabels = () => {\n  return [\n    'app',\n    'app.kubernetes.io/instance',\n    'app.openshift.io/runtime',\n    'app.kubernetes.io/part-of',\n    'app.openshift.io/runtime-version',\n    'app.openshift.io/runtime-namespace',\n    'networking.knative.dev/visibility',\n  ];\n};\n\nexport const getRouteLabels = (\n  route: K8sResourceKind,\n  resource: K8sResourceKind,\n): Record<string, string> => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const allRouteLabels = _.get(route, 'metadata.labels', {});\n  const filteredRouteLabels = _.omit(allRouteLabels, [\n    ...getDefaultLabels(),\n    ...Object.keys(allLabels),\n  ]);\n  return filteredRouteLabels;\n};\n\nexport const getRouteData = (route: K8sResourceKind, resource: K8sResourceKind) => {\n  let routeData = {\n    disable: !_.isEmpty(route),\n    create: !_.isEmpty(route),\n    targetPort: _.get(route, 'spec.port.targetPort', ''),\n    unknownTargetPort: _.toString(route?.spec?.port?.targetPort?.split('-')?.[0]) || '',\n    defaultUnknownPort: 8080,\n    path: _.get(route, 'spec.path', ''),\n    hostname: _.get(route, 'spec.host', ''),\n    secure: _.has(route, 'spec.tls.termination'),\n    tls: {\n      termination: _.get(route, 'spec.tls.termination', null),\n      insecureEdgeTerminationPolicy: _.get(route, 'spec.tls.insecureEdgeTerminationPolicy', null),\n      caCertificate: _.get(route, 'spec.tls.caCertificate', ''),\n      certificate: _.get(route, 'spec.tls.certificate', ''),\n      destinationCACertificate: _.get(route, 'spec.tls.destinationCACertificate', ''),\n      key: _.get(route, 'spec.tls.key', ''),\n    },\n    labels: getRouteLabels(route, resource),\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    routeData = {\n      ...routeData,\n      ...getKsvcRouteData(resource),\n    };\n  }\n  return routeData;\n};\n\nconst getBuildOption = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (buildConfig) {\n    return BuildOptions.BUILDS;\n  }\n  if (shipwrightBuild) {\n    return BuildOptions.SHIPWRIGHT_BUILD;\n  }\n  if (pipeline) {\n    return BuildOptions.PIPELINES;\n  }\n  return BuildOptions.DISABLED;\n};\n\nexport const getBuildData = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n  gitType: string,\n) => {\n  const buildOption = getBuildOption(buildConfig, shipwrightBuild, pipeline);\n  let buildStrategyType: BuildStrategyType | string;\n  let shipwrightClusterBuildStrategyType: ClusterBuildStrategy;\n  let buildStrategyData;\n\n  if (buildOption === BuildOptions.BUILDS) {\n    buildStrategyType = _.get(buildConfig, 'spec.strategy.type', '');\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    shipwrightClusterBuildStrategyType = _.get(shipwrightBuild, 'spec.strategy.name', '');\n    switch (shipwrightClusterBuildStrategyType) {\n      case ClusterBuildStrategy.BUILDAH:\n        buildStrategyType = BuildStrategyType.Docker;\n        break;\n      case ClusterBuildStrategy.S2I:\n        buildStrategyType = BuildStrategyType.Source;\n        break;\n      default:\n        buildStrategyType = '';\n    }\n  }\n\n  if (buildOption === BuildOptions.BUILDS) {\n    switch (buildStrategyType) {\n      case BuildStrategyType.Source:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.sourceStrategy');\n        break;\n      case BuildStrategyType.Docker:\n        buildStrategyData = _.get(buildConfig, 'spec.strategy.dockerStrategy');\n        break;\n      default:\n        buildStrategyData = { env: [] };\n    }\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    buildStrategyData = _.get(shipwrightBuild, 'spec');\n  }\n\n  const triggers = _.get(buildConfig, 'spec.triggers');\n\n  const buildData: BuildData = {\n    env: buildStrategyData?.env || [],\n    triggers: {\n      webhook: checkIfTriggerExists(triggers, GitReadableTypes[gitType]),\n      image: checkIfTriggerExists(triggers, 'ImageChange'),\n      config: checkIfTriggerExists(triggers, 'ConfigChange'),\n    },\n    strategy:\n      buildStrategyType ||\n      (isDockerPipeline(pipeline) ? BuildStrategyType.Docker : BuildStrategyType.Source),\n    source: { type: getBuildSourceType(buildConfig) },\n    option: buildOption,\n    clusterBuildStrategy: shipwrightClusterBuildStrategyType,\n  };\n  return buildData;\n};\n\nexport const getServerlessData = (resource: K8sResourceKind): ServerlessData => {\n  let serverlessData: ServerlessData = {\n    scaling: {\n      minpods: '',\n      maxpods: '',\n      concurrencytarget: '',\n      concurrencylimit: '',\n      autoscale: {\n        autoscalewindow: '',\n        autoscalewindowUnit: 's',\n        defaultAutoscalewindowUnit: 's',\n      },\n      concurrencyutilization: '',\n    },\n    domainMapping: [],\n  };\n  if (getResourcesType(resource) === Resources.KnativeService) {\n    const {\n      spec: {\n        template: { metadata, spec },\n      },\n    } = resource;\n    const annotations = metadata?.annotations;\n    const autoscalewindowAnnotation = annotations?.[KNATIVE_AUTOSCALEWINDOW_ANNOTATION] || '';\n    const { autoscalewindow, autoscalewindowUnit, defaultAutoscalewindowUnit } = getAutoscaleWindow(\n      autoscalewindowAnnotation,\n    );\n    serverlessData = {\n      scaling: {\n        minpods: annotations?.[KNATIVE_MINSCALE_ANNOTATION] || '',\n        maxpods: annotations?.[KNATIVE_MAXSCALE_ANNOTATION] || '',\n        concurrencytarget: annotations?.[KNATIVE_CONCURRENCYTARGET_ANNOTATION] || '',\n        concurrencylimit: spec?.containerConcurrency || '',\n        autoscale: {\n          autoscalewindow,\n          autoscalewindowUnit,\n          defaultAutoscalewindowUnit,\n        },\n        concurrencyutilization: annotations?.[KNATIVE_CONCURRENCYUTILIZATION_ANNOTATION] || '',\n      },\n      domainMapping: [],\n    };\n  }\n  return serverlessData;\n};\n\nexport const getDeploymentData = (resource: K8sResourceKind) => {\n  const deploymentData: DeploymentData = {\n    env: [],\n    replicas: 1,\n    triggers: { image: true, config: true },\n  };\n  const container = resource.spec?.template?.spec?.containers?.find((c) =>\n    [resource.metadata.name, resource.metadata.labels?.['app.kubernetes.io/name']].includes(c.name),\n  );\n  const env = container?.env ?? [];\n  switch (getResourcesType(resource)) {\n    case Resources.KnativeService:\n      return {\n        ...deploymentData,\n        env,\n        triggers: {\n          image: container?.imagePullPolicy === ImagePullPolicy.Always,\n        },\n      };\n    case Resources.OpenShift: {\n      const triggers = resource.spec?.triggers;\n      return {\n        env,\n        triggers: {\n          image: checkIfTriggerExists(triggers, 'ImageChange', resource.kind),\n          config: checkIfTriggerExists(triggers, 'ConfigChange'),\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    case Resources.Kubernetes: {\n      const imageTrigger = JSON.parse(\n        resource.metadata?.annotations?.['image.openshift.io/triggers'] ?? '[]',\n      )?.[0];\n      return {\n        env,\n        triggers: {\n          image: imageTrigger?.paused === 'false',\n        },\n        replicas: resource.spec?.replicas ?? 1,\n      };\n    }\n    default:\n      return deploymentData;\n  }\n};\n\nexport const getUserLabels = (resource: K8sResourceKind) => {\n  const allLabels = _.get(resource, 'metadata.labels', {});\n  const userLabels = _.omit(allLabels, getDefaultLabels());\n  return userLabels;\n};\n\nexport const getCommonInitialValues = (\n  editAppResource: K8sResourceKind,\n  route: K8sResourceKind,\n  pipelineData: PipelineKind,\n  name: string,\n  namespace: string,\n) => {\n  const appGroupName = _.get(editAppResource, 'metadata.labels[\"app.kubernetes.io/part-of\"]');\n  const commonInitialValues = {\n    formType: 'edit',\n    name,\n    application: {\n      name: appGroupName || '',\n      selectedKey: appGroupName || UNASSIGNED_KEY,\n    },\n    project: {\n      name: namespace,\n    },\n    route: getRouteData(route, editAppResource),\n    resources: getResourcesType(editAppResource),\n    serverless: getServerlessData(editAppResource),\n    pipeline: {\n      enabled: !_.isEmpty(pipelineData),\n      type: PipelineType.PIPELINE,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n    deployment: getDeploymentData(editAppResource),\n    labels: getUserLabels(editAppResource),\n    limits: getLimitsDataFromResource(editAppResource),\n    healthChecks: getHealthChecksData(editAppResource),\n    import: {\n      showEditImportStrategy: true,\n      selectedStrategy: {\n        name: '',\n        type: ImportStrategy.S2I,\n        priority: 0,\n        detectedFiles: [],\n      },\n    },\n  };\n  return commonInitialValues;\n};\n\nexport const getIconInitialValues = (editAppResource: K8sResourceKind) => {\n  const runtimeLabel = editAppResource?.metadata?.labels?.['app.openshift.io/runtime'];\n  const runtimeIcon = runtimeLabel && hasIcon(runtimeLabel) ? runtimeLabel : null;\n  return {\n    runtimeIcon,\n  };\n};\n\nexport const getGitAndDockerfileInitialValues = (\n  buildConfig: K8sResourceKind,\n  shipwrightBuild: K8sResourceKind,\n  pipeline: PipelineKind,\n) => {\n  if (_.isEmpty(buildConfig) && _.isEmpty(shipwrightBuild) && _.isEmpty(pipeline)) {\n    return {};\n  }\n\n  const currentImage = _.split(buildConfig?.spec?.strategy?.sourceStrategy?.from?.name ?? '', ':');\n  const git = !_.isEmpty(buildConfig)\n    ? getGitDataFromBuildConfig(buildConfig)\n    : !_.isEmpty(shipwrightBuild)\n    ? getGitDataFromShipwrightBuild(shipwrightBuild)\n    : getGitDataFromPipeline(pipeline);\n  const initialValues = {\n    git,\n    docker: {\n      dockerfilePath:\n        buildConfig?.spec?.strategy?.dockerStrategy?.dockerfilePath ||\n        pipeline?.spec?.params?.find((param) => param?.name === 'DOCKERFILE')?.default ||\n        'Dockerfile',\n    },\n    image: {\n      selected: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_LABEL] || currentImage[0] || '',\n      recommended: '',\n      tag: pipeline?.metadata?.labels?.[PIPELINE_RUNTIME_VERSION_LABEL] || currentImage[1] || '',\n      tagObj: {},\n      ports: [],\n      isRecommending: false,\n      couldNotRecommend: false,\n    },\n    build: getBuildData(buildConfig, shipwrightBuild, pipeline, git.type),\n  };\n  return initialValues;\n};\n\nexport const deployImageInitialValues = {\n  searchTerm: '',\n  registry: 'external',\n  allowInsecureRegistry: false,\n  imageStream: {\n    image: '',\n    tag: '',\n    namespace: '',\n  },\n  isi: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  image: {\n    name: '',\n    image: {},\n    tag: '',\n    status: { metadata: {}, status: '' },\n    ports: [],\n  },\n  build: {\n    env: [],\n    triggers: {},\n    strategy: '',\n  },\n  isSearchingForImage: false,\n};\n\nexport const getExternalImageInitialValues = (appResources: AppResources) => {\n  const imageStreamList = appResources?.imageStream?.data;\n  if (_.isEmpty(imageStreamList)) {\n    return {};\n  }\n  const imageStream = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const imageStreamData = imageStream?.[0]?.spec?.tags?.[0];\n  const name = imageStreamData?.from?.name;\n  const isAllowInsecureRegistry = imageStreamData?.importPolicy?.insecure || false;\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: 'external',\n    allowInsecureRegistry: isAllowInsecureRegistry,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getInternalImageInitialValues = (editAppResource: K8sResourceKind) => {\n  const imageStreamNamespace = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-namespace\"]',\n    '',\n  );\n  const imageStreamName = _.get(editAppResource, 'metadata.labels[\"app.openshift.io/runtime\"]', '');\n  const imageStreamTag = _.get(\n    editAppResource,\n    'metadata.labels[\"app.openshift.io/runtime-version\"]',\n    '',\n  );\n  return {\n    ...deployImageInitialValues,\n    registry: RegistryType.Internal,\n    imageStream: {\n      image: imageStreamName,\n      tag: imageStreamTag,\n      namespace: imageStreamNamespace,\n    },\n  };\n};\n\nexport const getExternalImageValues = (appResource: K8sResourceKind) => {\n  const name = _.get(appResource, 'spec.template.spec.containers[0].image', null);\n  if (_.isEmpty(appResource) || !name) {\n    return deployImageInitialValues;\n  }\n  return {\n    ...deployImageInitialValues,\n    searchTerm: name,\n    registry: RegistryType.External,\n    imageStream: {\n      ...deployImageInitialValues.imageStream,\n    },\n  };\n};\n\nexport const getFileUploadValues = (resource: K8sResourceKind, buildConfig: K8sResourceKind) => {\n  const resourceName = resource.metadata.name;\n  const fileName = buildConfig.metadata?.annotations?.jarFileName ?? '';\n  const javaArgs: string =\n    resource.spec?.template?.spec?.containers\n      ?.find((container) => container.name === resourceName)\n      ?.env?.find((args) => args.name === 'JAVA_ARGS')?.value ?? '';\n  return {\n    fileUpload: {\n      name: fileName,\n      value: '',\n      javaArgs,\n    },\n    ...getIconInitialValues(resource),\n  };\n};\n\nexport const getInitialValues = (\n  appResources: AppResources,\n  appName: string,\n  namespace: string,\n) => {\n  const editAppResourceData = appResources.editAppResource?.data;\n  const routeData = appResources.route?.data;\n  const buildConfigData = appResources.buildConfig?.data;\n  const shipwrightBuildData = appResources.shipwrightBuild?.data;\n  const pipelineData = appResources.pipeline?.data;\n\n  const commonValues = getCommonInitialValues(\n    editAppResourceData,\n    routeData,\n    pipelineData,\n    appName,\n    namespace,\n  );\n  const gitDockerValues = getGitAndDockerfileInitialValues(\n    buildConfigData,\n    shipwrightBuildData,\n    pipelineData,\n  );\n  let fileUploadValues = {};\n  let iconValues = {};\n  let externalImageValues = {};\n  let internalImageValues = {};\n  if (_.isEmpty(gitDockerValues)) {\n    iconValues = getIconInitialValues(editAppResourceData);\n    externalImageValues = getExternalImageInitialValues(appResources);\n    internalImageValues = _.isEmpty(externalImageValues)\n      ? getInternalImageInitialValues(editAppResourceData)\n      : {};\n    if (\n      _.isEmpty(externalImageValues) &&\n      !_.get(internalImageValues, 'imageStream.tag') &&\n      !_.get(internalImageValues, 'imageStream.image')\n    ) {\n      if (editAppResourceData?.kind === ServiceModel.kind) {\n        internalImageValues = {};\n        externalImageValues = getExternalImageValues(editAppResourceData);\n      }\n    }\n  } else if (isFromJarUpload(getBuildSourceType(buildConfigData))) {\n    fileUploadValues = getFileUploadValues(editAppResourceData, buildConfigData);\n  }\n\n  return {\n    ...commonValues,\n    ...iconValues,\n    ...fileUploadValues,\n    ...gitDockerValues,\n    ...externalImageValues,\n    ...internalImageValues,\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as React from 'react';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport {\n  SecretFormWrapper,\n  SecretTypeAbstraction,\n} from '@console/internal/components/secrets/create-secret';\n\nexport interface CreateSecretModalProps {\n  save?: (name: string) => void;\n  namespace: string;\n  secretType: SecretTypeAbstraction;\n}\n\ntype Props = CreateSecretModalProps & ModalComponentProps;\n\nconst CreateSecretModal: React.FC<Props> = ({ close, namespace, save, secretType }) => {\n  const handleSave = (name: string) => {\n    close();\n    save(name);\n  };\n\n  return (\n    <SecretFormWrapper\n      onCancel={close}\n      onSave={handleSave}\n      fixed={{ metadata: { namespace } }}\n      secretTypeAbstraction={secretType}\n      isCreate\n      modal\n    />\n  );\n};\n\nexport const secretModalLauncher = createModalLauncher<Props>(CreateSecretModal);\n\nexport default CreateSecretModal;\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { createSvgIdUrl, useHover } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  Firehose,\n  resourcePathFromModel,\n  truncateMiddle,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { SvgDropShadowFilter } from '@console/topology/src/components/svg';\nimport { PipelineRunModel, TaskModel, ClusterTaskModel } from '../../../../models';\nimport {\n  ComputedStatus,\n  TektonTaskSpec,\n  PipelineTaskRef,\n  TaskKind,\n  WhenExpression,\n} from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../../const';\nimport { WHEN_EXPRESSSION_DIAMOND_SIZE } from '../../pipeline-topology/const';\nimport WhenExpressionDecorator from '../../pipeline-topology/WhenExpressionDecorator';\nimport { createStepStatus, StepStatus, TaskStatus } from './pipeline-step-utils';\nimport { PipelineVisualizationStepList } from './PipelineVisualizationStepList';\nimport { StatusIcon } from './StatusIcon';\n\nimport './PipelineVisualizationTask.scss';\n\ntype PipelineVisualizationTask = {\n  name?: string;\n  taskSpec?: TektonTaskSpec;\n  taskRef?: PipelineTaskRef;\n  runAfter?: string[];\n  when?: WhenExpression[];\n  status?: TaskStatus;\n};\ninterface TaskProps {\n  pipelineRunName?: string;\n  name: string;\n  loaded?: boolean;\n  task?: {\n    data: TaskKind;\n  };\n  status: TaskStatus;\n  namespace: string;\n  isPipelineRun: boolean;\n  disableVisualizationTooltip?: boolean;\n  selected?: boolean;\n  width: number;\n  height: number;\n  isFinallyTask?: boolean;\n  pipelineTask: PipelineVisualizationTask;\n}\n\ninterface PipelineVisualizationTaskProp {\n  pipelineRunName?: string;\n  namespace: string;\n  task: PipelineVisualizationTask;\n  taskRun?: string;\n  pipelineRunStatus?: string;\n  disableTooltip?: boolean;\n  selected?: boolean;\n  isSkipped?: boolean;\n  width: number;\n  height: number;\n  isFinallyTask?: boolean;\n}\n\nconst FILTER_ID = 'SvgTaskDropShadowFilterId';\n\nexport const PipelineVisualizationTask: React.FC<PipelineVisualizationTaskProp> = ({\n  pipelineRunName,\n  task,\n  namespace,\n  pipelineRunStatus,\n  disableTooltip,\n  selected,\n  isSkipped,\n  width,\n  height,\n  isFinallyTask,\n}) => {\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const taskStatus = task.status || {\n    duration: '',\n    reason: ComputedStatus.Idle,\n  };\n  if (\n    pipelineRunStatus === ComputedStatus.Failed ||\n    pipelineRunStatus === ComputedStatus.Cancelled\n  ) {\n    if (\n      task.status?.reason === ComputedStatus.Idle ||\n      task.status?.reason === ComputedStatus.Pending\n    ) {\n      taskStatus.reason = ComputedStatus.Cancelled;\n    }\n  }\n  if (isSkipped) {\n    taskStatus.reason = ComputedStatus.Skipped;\n  }\n\n  const taskComponent = (\n    <TaskComponent\n      pipelineRunName={pipelineRunName}\n      name={task.name || ''}\n      task={task.taskSpec && { data: { spec: task.taskSpec } }}\n      namespace={namespace}\n      status={taskStatus}\n      isPipelineRun={!!pipelineRunStatus}\n      disableVisualizationTooltip={disableTooltip}\n      selected={selected}\n      width={width}\n      height={height}\n      isFinallyTask={isFinallyTask}\n      pipelineTask={task}\n    />\n  );\n\n  if (disableTooltip || task.taskSpec) {\n    return taskComponent;\n  }\n\n  let resources;\n  if (!IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER && task.taskRef.kind === ClusterTaskModel.kind) {\n    resources = [\n      {\n        kind: referenceForModel(ClusterTaskModel),\n        name: task.taskRef.name,\n        prop: 'task',\n      },\n    ];\n  } else {\n    resources = [\n      {\n        kind: referenceForModel(TaskModel),\n        name: task.taskRef.name,\n        namespace,\n        prop: 'task',\n      },\n    ];\n  }\n  return <Firehose resources={resources}>{taskComponent}</Firehose>;\n};\nconst TaskComponent: React.FC<TaskProps> = ({\n  pipelineRunName,\n  namespace,\n  task,\n  status,\n  name,\n  isPipelineRun,\n  disableVisualizationTooltip,\n  selected,\n  width,\n  height,\n  isFinallyTask,\n  pipelineTask,\n}) => {\n  const stepList = task?.data?.spec?.steps || [];\n  const stepStatusList: StepStatus[] = stepList.map((step) => createStepStatus(step, status));\n  const showStatusState: boolean = isPipelineRun && !!status && !!status.reason;\n  const visualName = name || _.get(task, ['metadata', 'name'], '');\n  const nameRef = React.useRef();\n  const pillRef = React.useRef();\n  const path = pipelineRunName\n    ? `${resourcePathFromModel(PipelineRunModel, pipelineRunName, namespace)}/logs/${name}`\n    : undefined;\n  const enableLogLink =\n    status?.reason !== ComputedStatus.Idle &&\n    status?.reason !== ComputedStatus.Pending &&\n    status?.reason !== ComputedStatus.Cancelled &&\n    !!path;\n  const hasWhenExpression = pipelineTask?.when?.length > 0;\n  const hasRunAfter = pipelineTask?.runAfter?.length > 0;\n  const taskStatusColor = status\n    ? getRunStatusColor(status.reason).pftoken.value\n    : getRunStatusColor(ComputedStatus.Cancelled).pftoken.value;\n\n  const [hover, hoverRef] = useHover();\n  const truncatedVisualName = React.useMemo(\n    () => truncateMiddle(visualName, { length: showStatusState ? 11 : 14, truncateEnd: true }),\n    [visualName, showStatusState],\n  );\n\n  const renderVisualName = (\n    <text\n      ref={nameRef}\n      x={showStatusState ? 30 : width / 2}\n      y={height / 2 + 1}\n      className={cx('odc-pipeline-vis-task-text', {\n        'is-text-center': !isPipelineRun,\n        'is-linked': enableLogLink,\n      })}\n    >\n      {truncatedVisualName}\n    </text>\n  );\n\n  let taskPill = (\n    <g ref={hoverRef}>\n      <SvgDropShadowFilter dy={1} id={FILTER_ID} />\n      <rect\n        filter={hover ? createSvgIdUrl(FILTER_ID) : ''}\n        width={width}\n        height={height}\n        rx={15}\n        className={cx('odc-pipeline-vis-task', {\n          'is-selected': selected,\n          'is-linked': enableLogLink,\n        })}\n      />\n      {visualName !== truncatedVisualName && disableVisualizationTooltip ? (\n        <Tooltip triggerRef={nameRef} content={visualName}>\n          {renderVisualName}\n        </Tooltip>\n      ) : (\n        renderVisualName\n      )}\n\n      {showStatusState && (\n        <>\n          <svg\n            width={30}\n            height={30}\n            viewBox=\"-5 -4 20 20\"\n            style={{\n              color: taskStatusColor,\n            }}\n          >\n            <g\n              className={cx({\n                'fa-spin odc-pipeline-vis-task--icon-spin':\n                  status.reason === ComputedStatus.Running,\n                'odc-pipeline-vis-task--icon-stop': status.reason !== ComputedStatus.Running,\n              })}\n            >\n              <StatusIcon status={status.reason} disableSpin />\n            </g>\n          </svg>\n          <SvgTaskStatus steps={stepStatusList} x={30} y={23} width={width / 2 + 15} />\n        </>\n      )}\n    </g>\n  );\n\n  if (!disableVisualizationTooltip) {\n    taskPill = (\n      <>\n        <Tooltip\n          triggerRef={pillRef}\n          position=\"bottom\"\n          enableFlip={false}\n          content={\n            <PipelineVisualizationStepList\n              isSpecOverview={!isPipelineRun}\n              taskName={visualName}\n              steps={stepStatusList}\n              isFinallyTask={isFinallyTask}\n            />\n          }\n        >\n          <g ref={pillRef}>{taskPill}</g>\n        </Tooltip>\n      </>\n    );\n  }\n\n  const taskNode = (\n    <>\n      {hasWhenExpression && (\n        <WhenExpressionDecorator\n          width={WHEN_EXPRESSSION_DIAMOND_SIZE}\n          height={WHEN_EXPRESSSION_DIAMOND_SIZE}\n          appendLine={!hasRunAfter && !isFinallyTask}\n          isPipelineRun={isPipelineRun}\n          status={status.reason}\n          enableTooltip\n          leftOffset={disableVisualizationTooltip && !isFinallyTask ? 3 : 2}\n          isFinallyTask={isFinallyTask}\n        />\n      )}\n      {taskPill}\n    </>\n  );\n  return enableLogLink ? (\n    <Link to={path}>\n      <g data-test={`task ${visualName}`}>{taskNode}</g>\n    </Link>\n  ) : (\n    taskNode\n  );\n};\n\ninterface SvgTaskStatusProps {\n  steps: StepStatus[];\n  x: number;\n  y: number;\n  width: number;\n}\n\nconst SvgTaskStatus: React.FC<SvgTaskStatusProps> = ({ steps, x, y, width }) => {\n  if (steps.length === 0) {\n    return null;\n  }\n  const stepWidth = width / steps.length;\n  const gap = 2;\n  return (\n    <g>\n      {steps.map((step, index) => {\n        return (\n          <rect\n            key={step.name}\n            x={x + stepWidth * index}\n            y={y}\n            width={stepWidth - gap}\n            height={2}\n            fill={getRunStatusColor(step.status).pftoken.value}\n          />\n        );\n      })}\n    </g>\n  );\n};\n","import { Point } from '@patternfly/react-topology';\nimport { DrawDesign, NODE_SEPARATION_HORIZONTAL } from './const';\n\ntype SingleDraw = (p: Point) => string;\ntype DoubleDraw = (p1: Point, p2: Point) => string;\ntype TripleDraw = (p1: Point, p2: Point, p3: Point) => string;\ntype DetermineDirection = (p1: Point, p2: Point) => boolean;\n\nconst join = (...segments: string[]) => segments.filter((seg) => !!seg).join(' ');\n\nconst leftRight: DetermineDirection = (p1, p2) => p1.x < p2.x;\nconst topDown: DetermineDirection = (p1, p2) => p1.y < p2.y;\nconst bottomUp: DetermineDirection = (p1, p2) => p1.y > p2.y;\n\nconst point: SingleDraw = (p) => `${p.x},${p.y}`;\nconst moveTo: SingleDraw = (p) => `M ${point(p)}`;\nconst lineTo: SingleDraw = (p) => `L ${point(p)}`;\nconst quadTo: DoubleDraw = (corner, end) => `Q ${point(corner)} ${point(end)}`;\n\n// TODO: Try to simplify\n// x should not be greater than (NODE_SEPARATION_HORIZONTAL / 2)\nconst CURVE_SIZE = { x: 8, y: 10 };\nconst curve: TripleDraw = (fromPoint, cornerPoint, toPoint) => {\n  const topToBottom = topDown(fromPoint, toPoint);\n  if (topToBottom) {\n    const rightAndDown = leftRight(fromPoint, cornerPoint) && topDown(cornerPoint, toPoint);\n    const downAndRight = topDown(fromPoint, cornerPoint) && leftRight(cornerPoint, toPoint);\n    if (rightAndDown) {\n      return join(\n        lineTo(cornerPoint.clone().translate(-CURVE_SIZE.x, 0)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(0, CURVE_SIZE.y)),\n      );\n    }\n    if (downAndRight) {\n      return join(\n        lineTo(cornerPoint.clone().translate(0, -CURVE_SIZE.y)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(CURVE_SIZE.x, 0)),\n      );\n    }\n  } else {\n    const rightAndUp = leftRight(fromPoint, cornerPoint) && bottomUp(cornerPoint, toPoint);\n    const upAndRight = bottomUp(fromPoint, cornerPoint) && leftRight(cornerPoint, toPoint);\n    if (rightAndUp) {\n      return join(\n        lineTo(cornerPoint.clone().translate(-CURVE_SIZE.x, 0)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(0, -CURVE_SIZE.y)),\n      );\n    }\n    if (upAndRight) {\n      return join(\n        lineTo(cornerPoint.clone().translate(0, CURVE_SIZE.y)),\n        quadTo(cornerPoint, cornerPoint.clone().translate(CURVE_SIZE.x, 0)),\n      );\n    }\n  }\n\n  return '';\n};\n\nexport const straightPath: DoubleDraw = (start, finish) => join(moveTo(start), lineTo(finish));\n\nexport const integralShapePath: DoubleDraw = (start, finish) => {\n  // Integral shape: ∫\n  let firstCurve: string = null;\n  let secondCurve: string = null;\n\n  if (start.y !== finish.y) {\n    const cornerX = Math.floor(start.x + NODE_SEPARATION_HORIZONTAL / 2);\n    const firstCorner = new Point(cornerX, start.y);\n    const secondCorner = new Point(cornerX, finish.y);\n\n    firstCurve = curve(start, firstCorner, secondCorner);\n    secondCurve = curve(firstCorner, secondCorner, finish);\n  }\n\n  return join(moveTo(start), firstCurve, secondCurve, lineTo(finish));\n};\n\nexport const path = (start: Point, finish: Point, drawDesign?: DrawDesign) => {\n  switch (drawDesign) {\n    case DrawDesign.INTEGRAL_SHAPE:\n      return integralShapePath(start, finish);\n    case DrawDesign.STRAIGHT:\n    default:\n      return straightPath(start, finish);\n  }\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ExclamationIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-icon';\nimport { global_danger_color_100 as redColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './ErrorNodeDecorator.scss';\n\ntype ErrorNodeDecoratorProps = {\n  errorStr: string;\n  x: number;\n  y: number;\n};\n\nconst ErrorNodeDecorator: React.FC<ErrorNodeDecoratorProps> = ({ errorStr, x, y }) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={errorStr}>\n      <g ref={iconRef} className=\"odc-error-node-decorator\" transform={`translate(${x}, ${y})`}>\n        <circle cx={0} cy={0} r={BUILDER_NODE_DECORATOR_RADIUS} fill={redColor.value} />\n        <g transform=\"translate(-5, -6)\">\n          <ExclamationIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default ErrorNodeDecorator;\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  buildValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const fileNameRegex = /\\.(jar)$/i;\n\nexport const fileUploadValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(fileNameRegex, {\n        message: t('devconsole~Must be a JAR file.'),\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.'))\n      .required(t('devconsole~Required')),\n    javaArgs: yup.string(),\n  });\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    fileUpload: fileUploadValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n\nexport const getAppName = (name: string) => {\n  if (!fileNameRegex.test(name)) {\n    return undefined;\n  }\n  return _.kebabCase(name.split('.').shift());\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, TextAreaField } from '@console/shared';\nimport ApplicationSelector from '@console/topology/src/components/dropdowns/ApplicationSelector';\nimport { ProjectData } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface AppSectionProps {\n  project: ProjectData;\n  noProjectsAvailable?: boolean;\n  extraMargin?: boolean;\n  subPath?: string;\n  fullWidth?: boolean;\n}\n\nconst AppSection: React.FC<AppSectionProps> = ({\n  project,\n  noProjectsAvailable,\n  extraMargin,\n  subPath,\n  fullWidth,\n}) => {\n  const [initialApplication] = useField(\n    subPath ? `${subPath}.application.initial` : 'application.initial',\n  );\n  const [formType] = useField('formType');\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~General')} extraMargin={extraMargin} fullWidth={fullWidth}>\n      {noProjectsAvailable && (\n        <>\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-name\"\n            name={subPath ? `${subPath}.project.name` : 'project.name'}\n            label={t('devconsole~Project name')}\n            helpText={t('devconsole~A unique name for the Project.')}\n            required\n          />\n          <InputField\n            type={TextInputTypes.text}\n            data-test-id=\"application-form-project-display-name\"\n            name={subPath ? `${subPath}.project.displayName` : 'project.displayName'}\n            label={t('devconsole~Project display name')}\n          />\n          <TextAreaField\n            data-test-id=\"application-form-project-description\"\n            name={subPath ? `${subPath}.project.description` : 'project.description'}\n            label={t('devconsole~Project description')}\n          />\n        </>\n      )}\n      {!initialApplication.value && (\n        <ApplicationSelector\n          namespace={project.name}\n          noProjectsAvailable={noProjectsAvailable}\n          subPath={subPath}\n        />\n      )}\n      <InputField\n        type={TextInputTypes.text}\n        data-test-id=\"application-form-app-name\"\n        name={subPath ? `${subPath}.name` : 'name'}\n        label={t('devconsole~Name')}\n        helpText={t(\n          'devconsole~A unique name given to the component that will be used to name associated resources.',\n        )}\n        isDisabled={formType.value && formType.value === 'edit'}\n        required={!(formType.value && formType.value === 'edit')}\n      />\n    </FormSection>\n  );\n};\n\nexport default AppSection;\n","import { K8sModel } from '@console/internal/module/k8s';\n\nexport const ConsoleSampleModel: K8sModel = {\n  kind: 'ConsoleSample',\n  label: 'ConsoleSample',\n  labelPlural: 'ConsoleSamples',\n  apiGroup: 'console.openshift.io',\n  apiVersion: 'v1',\n  abbr: 'CS',\n  namespaced: false,\n  crd: true,\n  plural: 'consolesamples',\n  propagationPolicy: 'Background',\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\nimport { nameValidationSchema } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  isiValidationSchema,\n  resourcesValidationSchema,\n} from './validation-schema';\n\nexport const deployValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    name: nameValidationSchema(t),\n    isi: isiValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n  });\n","import {\n  ComponentFactory,\n  DagreLayout,\n  GraphComponent,\n  LayoutFactory,\n  ModelKind,\n  Graph,\n  TaskEdge,\n  PipelineDagreLayout,\n  withPanZoom,\n  SpacerNode,\n  DefaultTaskGroup,\n} from '@patternfly/react-topology';\nimport BuilderFinallyNode from './BuilderFinallyNode';\nimport BuilderNode from './BuilderNode';\nimport { NodeType, PipelineLayout } from './const';\nimport CustomTaskNode from './CustomTaskNode';\nimport FinallyNode from './FinallyNode';\nimport InvalidTaskListNode from './InvalidTaskListNode';\nimport LoadingNode from './LoadingNode';\nimport PipelineTaskNode from './PipelineTaskNode';\nimport BuilderTaskEdge from './TaskEdge';\nimport TaskListNode from './TaskListNode';\nimport TaskNode from './TaskNode';\nimport { getLayoutData } from './utils';\n\nexport const builderComponentsFactory: ComponentFactory = (kind: ModelKind, type: string) => {\n  switch (kind) {\n    case ModelKind.graph:\n      return GraphComponent;\n    case ModelKind.edge:\n      return BuilderTaskEdge;\n    case ModelKind.node:\n      switch (type) {\n        case NodeType.TASK_NODE:\n          return TaskNode;\n        case NodeType.SPACER_NODE:\n          return SpacerNode;\n        case NodeType.TASK_LIST_NODE:\n          return TaskListNode;\n        case NodeType.INVALID_TASK_LIST_NODE:\n          return InvalidTaskListNode;\n        case NodeType.BUILDER_NODE:\n          return BuilderNode;\n        case NodeType.FINALLY_NODE:\n          return FinallyNode;\n        case NodeType.BUILDER_FINALLY_NODE:\n          return BuilderFinallyNode;\n        case NodeType.LOADING_NODE:\n          return LoadingNode;\n        default:\n          return undefined;\n      }\n    default:\n      return undefined;\n  }\n};\n\nexport const dagreViewerComponentFactory: ComponentFactory = (kind: ModelKind, type: string) => {\n  switch (kind) {\n    case ModelKind.graph:\n      return withPanZoom()(GraphComponent);\n    case ModelKind.edge:\n      return TaskEdge;\n    case ModelKind.node:\n      switch (type) {\n        case NodeType.TASK_NODE:\n        case NodeType.FINALLY_NODE:\n          return PipelineTaskNode;\n        case NodeType.CUSTOM_TASK_NODE:\n          return CustomTaskNode;\n        case NodeType.FINALLY_GROUP:\n          return DefaultTaskGroup;\n        case NodeType.SPACER_NODE:\n          return SpacerNode;\n        default:\n          return undefined;\n      }\n    default:\n      return undefined;\n  }\n};\n\nexport const layoutFactory: LayoutFactory = (type: string, graph: Graph) => {\n  switch (type) {\n    case PipelineLayout.DAGRE_BUILDER:\n    case PipelineLayout.DAGRE_BUILDER_SPACED:\n      return new DagreLayout(graph, {\n        // Hack to get around undesirable defaults\n        // TODO: fix this, it's not ideal but it works for now\n        linkDistance: 0,\n        nodeDistance: 0,\n        groupDistance: 0,\n        collideDistance: 0,\n        simulationSpeed: 0,\n        chargeStrength: 0,\n        allowDrag: false,\n        layoutOnDrag: false,\n        ...getLayoutData(type),\n      });\n    case PipelineLayout.DAGRE_VIEWER:\n      return new PipelineDagreLayout(graph, { nodesep: 25 });\n    default:\n      return undefined;\n  }\n};\n","import * as React from 'react';\nimport { AngleDoubleRightIcon } from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { CheckCircleIcon } from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { HourglassHalfIcon } from '@patternfly/react-icons/dist/esm/icons/hourglass-half-icon';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport * as cx from 'classnames';\nimport { YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk/src/app/components/status/icons';\nimport { ComputedStatus } from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\n\ninterface StatusIconProps {\n  status: string;\n  height?: number;\n  width?: number;\n  disableSpin?: boolean;\n}\n\nexport const StatusIcon: React.FC<StatusIconProps> = ({ status, disableSpin, ...props }) => {\n  switch (status) {\n    case ComputedStatus['In Progress']:\n    case ComputedStatus.Running:\n      return <SyncAltIcon {...props} className={cx({ 'fa-spin': !disableSpin })} />;\n\n    case ComputedStatus.Succeeded:\n      return <CheckCircleIcon {...props} />;\n\n    case ComputedStatus.Failed:\n      return <ExclamationCircleIcon {...props} />;\n\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return <HourglassHalfIcon {...props} />;\n\n    case ComputedStatus.Cancelled:\n      return <YellowExclamationTriangleIcon {...props} />;\n\n    case ComputedStatus.Skipped:\n      return <AngleDoubleRightIcon {...props} />;\n\n    default:\n      return <CircleIcon {...props} />;\n  }\n};\n\nexport const ColoredStatusIcon: React.FC<StatusIconProps> = ({ status, ...others }) => {\n  return (\n    <div\n      style={{\n        color: status\n          ? getRunStatusColor(status).pftoken.value\n          : getRunStatusColor(ComputedStatus.Cancelled).pftoken.value,\n      }}\n    >\n      <StatusIcon status={status} {...others} />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  TextInputTypes,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  InputField,\n  RedExclamationCircleIcon,\n  getFieldId,\n  useFormikValidationFix,\n} from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../../const';\nimport { sanitizeApplicationValue } from '../../utils/application-utils';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface ApplicationSelectorProps {\n  namespace?: string;\n  noProjectsAvailable?: boolean;\n  subPath?: string;\n}\n\nconst ApplicationSelector: React.FC<ApplicationSelectorProps> = ({\n  namespace,\n  noProjectsAvailable,\n  subPath,\n}) => {\n  const { t } = useTranslation();\n  const [applicationsAvailable, setApplicationsAvailable] = React.useState(true);\n  const availableApplications = React.useRef<string[]>([]);\n  const projectsAvailable = !noProjectsAvailable;\n\n  const [selectedKey, { touched, error }] = useField(\n    subPath ? `${subPath}.application.selectedKey` : 'application.selectedKey',\n  );\n  const [nameField] = useField(subPath ? `${subPath}.application.name` : 'application.name');\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [applicationExists, setApplicationExists] = React.useState<boolean>(false);\n  const applicationNameInputRef = React.useRef<HTMLInputElement>();\n  const fieldId = getFieldId('application-name', 'dropdown');\n  const isValid = !(touched && error);\n  const errorMessage = !isValid ? error : '';\n\n  useFormikValidationFix(selectedKey.value);\n\n  const onDropdownChange = (key: string, application: string) => {\n    setFieldValue(selectedKey.name, key);\n    setFieldTouched(selectedKey.name, true);\n    setFieldValue(nameField.name, sanitizeApplicationValue(application, key));\n    setFieldTouched(nameField.name, true);\n    setApplicationExists(false);\n  };\n\n  const handleOnLoad = (applicationList: { [key: string]: string }) => {\n    const noApplicationsAvailable = _.isEmpty(applicationList);\n    setApplicationsAvailable(!noApplicationsAvailable);\n    availableApplications.current = _.keys(applicationList);\n    if (noApplicationsAvailable) {\n      setFieldValue(selectedKey.name, '');\n      setFieldValue(\n        nameField.name,\n        (selectedKey.value !== UNASSIGNED_KEY && nameField.value) ?? '',\n      );\n    }\n  };\n\n  const actionItems = [\n    {\n      actionTitle: t('topology~Create application'),\n      actionKey: CREATE_APPLICATION_KEY,\n    },\n    {\n      actionTitle: t('topology~No application group'),\n      actionKey: UNASSIGNED_KEY,\n    },\n  ];\n\n  const handleAppChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setApplicationExists(availableApplications.current.includes(event.target.value.trim()));\n  };\n\n  const handleAppBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const trimmedApplicationName = event.target.value.trim();\n    setFieldValue(nameField.name, trimmedApplicationName);\n  };\n\n  const label = t('topology~Application');\n  const inputHelpText = applicationExists\n    ? t('topology~Warning: the application grouping already exists.')\n    : t('topology~A unique name given to the application grouping to label your resources.');\n\n  React.useEffect(() => {\n    if (selectedKey.value === CREATE_APPLICATION_KEY) {\n      applicationNameInputRef.current?.focus();\n    }\n  }, [selectedKey.value]);\n\n  return (\n    <>\n      {projectsAvailable && applicationsAvailable && (\n        <FormGroup fieldId={fieldId} label={label}>\n          <ApplicationDropdown\n            id={fieldId}\n            ariaLabel={label}\n            dropDownClassName=\"dropdown--full-width\"\n            menuClassName=\"dropdown-menu--text-wrap\"\n            namespace={namespace}\n            actionItems={actionItems}\n            autoSelect\n            selectedKey={selectedKey.value}\n            onChange={onDropdownChange}\n            onLoad={handleOnLoad}\n          />\n\n          <FormHelperText>\n            <HelperText>\n              {!isValid ? (\n                <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n                  {errorMessage}\n                </HelperTextItem>\n              ) : (\n                <HelperTextItem>\n                  {t('topology~Select an Application to group this component.')}\n                </HelperTextItem>\n              )}\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n      {(!applicationsAvailable || selectedKey.value === CREATE_APPLICATION_KEY) && (\n        <InputField\n          type={TextInputTypes.text}\n          required={selectedKey.value === CREATE_APPLICATION_KEY}\n          name={nameField.name}\n          ref={applicationNameInputRef}\n          label={t('topology~Application name')}\n          data-test-id=\"application-form-app-input\"\n          helpText={inputHelpText}\n          validated={applicationExists ? ValidatedOptions.warning : ValidatedOptions.default}\n          onChange={handleAppChange}\n          onBlur={handleAppBlur}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ApplicationSelector;\n","export { default as SvgBoxedText } from './SvgBoxedText';\nexport { default as SvgCircledIcon } from './SvgCircledIcon';\nexport { default as SvgDropShadowFilter } from './SvgDropShadowFilter';\nexport { default as SvgResourceIcon, getKindStringAndAbbreviation } from './SvgResourceIcon';\n","import { ComputedStatus } from '../../../../types';\nimport { calculateDuration } from '../../../../utils/pipeline-utils';\n\nenum TerminatedReasons {\n  Completed = 'Completed',\n}\n\nexport type TaskStatusStep = {\n  name: string;\n  running?: { startedAt: string };\n  terminated?: {\n    finishedAt: string;\n    reason: TerminatedReasons;\n    startedAt: string;\n  };\n  waiting?: {};\n};\n\nexport type TaskStatus = {\n  reason: ComputedStatus;\n  duration?: string;\n  steps?: TaskStatusStep[];\n};\n\nconst getMatchingStep = (step, status: TaskStatus): TaskStatusStep => {\n  const statusSteps: TaskStatusStep[] = status.steps || [];\n  return statusSteps.find((statusStep) => {\n    // In rare occasions the status step name is prefixed with `step-`\n    // This is likely a bug but this workaround will be temporary as it's investigated separately\n    return statusStep.name === step.name || statusStep.name === `step-${step.name}`;\n  });\n};\n\nconst getMatchingStepDuration = (matchingStep?: TaskStatusStep) => {\n  if (!matchingStep) return '';\n\n  if (matchingStep.terminated) {\n    return calculateDuration(matchingStep.terminated.startedAt, matchingStep.terminated.finishedAt);\n  }\n\n  if (matchingStep.running) {\n    return calculateDuration(matchingStep.running.startedAt);\n  }\n\n  return '';\n};\n\nexport type StepStatus = {\n  duration: string | null;\n  name: string;\n  status: ComputedStatus;\n};\n\nexport const createStepStatus = (step: { name: string }, status: TaskStatus): StepStatus => {\n  let stepRunStatus: ComputedStatus = ComputedStatus.PipelineNotStarted;\n  let duration: string = null;\n\n  if (!status || !status.reason) {\n    stepRunStatus = ComputedStatus.Cancelled;\n  } else if (status.reason === ComputedStatus['In Progress']) {\n    // In progress, try to get granular statuses\n    const matchingStep: TaskStatusStep = getMatchingStep(step, status);\n\n    if (!matchingStep) {\n      stepRunStatus = ComputedStatus.Pending;\n    } else if (matchingStep.terminated) {\n      stepRunStatus =\n        matchingStep.terminated.reason === TerminatedReasons.Completed\n          ? ComputedStatus.Succeeded\n          : ComputedStatus.Failed;\n      duration = getMatchingStepDuration(matchingStep);\n    } else if (matchingStep.running) {\n      stepRunStatus = ComputedStatus['In Progress'];\n      duration = getMatchingStepDuration(matchingStep);\n    } else if (matchingStep.waiting) {\n      stepRunStatus = ComputedStatus.Pending;\n    }\n  } else {\n    // Not in progress, just use the run status reason\n    stepRunStatus = status.reason;\n\n    duration = getMatchingStepDuration(getMatchingStep(step, status)) || status.duration;\n  }\n\n  return {\n    duration,\n    name: step.name,\n    status: stepRunStatus,\n  };\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { ComputedStatus } from '../../../../types';\nimport { getRunStatusColor } from '../../../../utils/pipeline-augment';\nimport { StepStatus } from './pipeline-step-utils';\nimport { StatusIcon } from './StatusIcon';\n\nimport './PipelineVisualizationStepList.scss';\n\nexport interface PipelineVisualizationStepListProps {\n  isSpecOverview: boolean;\n  taskName: string;\n  steps: StepStatus[];\n  isFinallyTask?: boolean;\n  hideHeader?: boolean;\n}\n\nconst TooltipColoredStatusIcon = ({ status }) => {\n  const size = 18;\n  const sharedProps = {\n    height: size,\n    width: size,\n  };\n\n  const icon = <StatusIcon status={status} {...sharedProps} />;\n\n  if (status === ComputedStatus.Succeeded || status === ComputedStatus.Failed) {\n    // Succeeded and Failed icons have transparent centers shapes - in tooltips, this becomes an undesired black\n    // This will simply wrap the icon and place a white backdrop\n    return (\n      <div style={{ color: getRunStatusColor(status).pftoken.value }}>\n        <svg {...sharedProps}>\n          <circle\n            className=\"odc-pipeline-visualization-step-list__icon-backdrop\"\n            cx={size / 2}\n            cy={size / 2}\n            r={size / 2 - 1}\n          />\n          {icon}\n        </svg>\n      </div>\n    );\n  }\n\n  return icon;\n};\n\nexport const PipelineVisualizationStepList: React.FC<PipelineVisualizationStepListProps> = ({\n  isSpecOverview,\n  taskName,\n  steps,\n  isFinallyTask,\n  hideHeader,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-pipeline-visualization-step-list\">\n      {!hideHeader && (\n        <div className=\"odc-pipeline-visualization-step-list__task-name\">{taskName}</div>\n      )}\n      {isFinallyTask && (\n        <div className=\"odc-pipeline-visualization-step-list__task-type\">\n          {t('pipelines-plugin~Finally task')}\n        </div>\n      )}\n      {steps.map(({ duration, name, status }) => {\n        return (\n          <div\n            className={classNames('odc-pipeline-visualization-step-list__step', {\n              'odc-pipeline-visualization-step-list__step--task-run': !isSpecOverview,\n            })}\n            key={name}\n          >\n            {!isSpecOverview ? (\n              <div className=\"odc-pipeline-visualization-step-list__icon\">\n                <TooltipColoredStatusIcon status={status} />\n              </div>\n            ) : (\n              <span className=\"odc-pipeline-visualization-step-list__bullet\">&bull;</span>\n            )}\n            <div className=\"odc-pipeline-visualization-step-list__name\">{name}</div>\n            {!isSpecOverview && (\n              <div className=\"odc-pipeline-visualization-step-list__duration\">{duration}</div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport i18next from 'i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\nimport InstallingNodeDecorator from './InstallingNodeDecorator';\n\nimport './LoadingTask.scss';\n\ntype LoadingTaskProps = {\n  width: number;\n  height: number;\n  name: string;\n};\n\nconst LoadingTask: React.FC<LoadingTaskProps> = ({ width, height, name }) => {\n  const textRef = React.useRef();\n  const truncatedName = React.useMemo(\n    () => truncateMiddle(name, { length: 10, truncateEnd: true }),\n    [name],\n  );\n  return (\n    <g>\n      <rect width={width} height={height} rx={15} className={'opp-pipeline-vis-loading-node'} />\n      <g>\n        <InstallingNodeDecorator\n          x={0}\n          y={BUILDER_NODE_ADD_RADIUS / 4}\n          content={i18next.t('pipelines-plugin~Installing')}\n        />\n      </g>\n      <Tooltip triggerRef={textRef} content={name}>\n        <text\n          ref={textRef}\n          className=\"opp-pipeline-vis-loading-node__name\"\n          x={width / 2}\n          y={height / 2 + 1}\n        >\n          {truncatedName}\n        </text>\n      </Tooltip>\n    </g>\n  );\n};\n\nexport default LoadingTask;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { PlusIcon } from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\n\nimport './PlusNodeDecorator.scss';\n\ntype PlusNodeProps = {\n  x: number;\n  y: number;\n  tooltip: string;\n  tooltipPosition?: TooltipPosition;\n  onClick?: () => void;\n};\n\nconst PlusNodeDecorator: React.FC<PlusNodeProps> = ({\n  x,\n  y,\n  onClick,\n  tooltip,\n  tooltipPosition,\n}) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={tooltip} position={tooltipPosition}>\n      <g\n        className=\"odc-plus-node-decorator\"\n        onClick={onClick}\n        transform={`translate(${x}, ${y})`}\n        ref={iconRef}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={BUILDER_NODE_ADD_RADIUS}\n          className=\"odc-plus-node-decorator__circle\"\n        />\n        <g transform=\"translate(-6, -6)\">\n          <PlusIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default PlusNodeDecorator;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { useHover } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { truncateMiddle } from '@console/internal/components/utils';\nimport { BUILDER_NODE_ADD_RADIUS } from './const';\nimport RemoveNodeDecorator from './RemoveNodeDecorator';\n\nconst TaskList: React.FC<any> = ({\n  width,\n  height,\n  unselectedText,\n  onRemoveTask,\n  onNewTask,\n  onTaskSearch,\n}) => {\n  const { t } = useTranslation();\n  const triggerRef = React.useRef(null);\n  const textRef = React.useRef();\n  const [hover, hoverRef] = useHover();\n\n  const unselectedTaskText = unselectedText || t('pipelines-plugin~Add task');\n\n  const truncatedTaskText = React.useMemo(\n    () =>\n      truncateMiddle(unselectedTaskText, {\n        length: 10,\n        truncateEnd: true,\n      }),\n    [unselectedTaskText],\n  );\n  const renderText = (\n    <text\n      x={width / 2}\n      y={height / 2 + 1}\n      className=\"odc-task-list-node__render-text\"\n      ref={textRef}\n    >\n      {truncatedTaskText}\n    </text>\n  );\n\n  return (\n    <>\n      <g\n        data-test=\"task-list\"\n        ref={hoverRef}\n        className=\"odc-task-list-node__trigger\"\n        onClick={(e) => {\n          e.stopPropagation();\n          onTaskSearch(onNewTask);\n        }}\n      >\n        <rect\n          ref={triggerRef}\n          className={cx('odc-task-list-node__trigger-background')}\n          width={width}\n          height={height}\n        />\n        <g>\n          <rect\n            className={\n              hover\n                ? 'odc-task-list-node__trigger-underline--hover'\n                : 'odc-task-list-node__trigger-underline'\n            }\n            y={height}\n            width={width}\n            height={hover ? 2 : 1}\n          />\n\n          {onRemoveTask && hover && (\n            <g>\n              <RemoveNodeDecorator\n                removeCallback={onRemoveTask}\n                x={120}\n                y={BUILDER_NODE_ADD_RADIUS / 4}\n                content={t('pipelines-plugin~Delete task')}\n              />\n            </g>\n          )}\n          {unselectedTaskText !== truncatedTaskText ? (\n            <Tooltip content={unselectedTaskText} triggerRef={textRef}>\n              {renderText}\n            </Tooltip>\n          ) : (\n            renderText\n          )}\n        </g>\n      </g>\n    </>\n  );\n};\nexport default TaskList;\n","import * as React from 'react';\nimport { observer, Node, NodeModel } from '@patternfly/react-topology';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport { TaskNodeModelData } from './types';\n\ntype TaskNodeProps = {\n  element: Node<NodeModel, TaskNodeModelData>;\n  disableTooltip?: boolean;\n};\n\nconst TaskNode: React.FC<TaskNodeProps> = ({ element, disableTooltip }) => {\n  const { height, width } = element.getBounds();\n  const { pipeline, pipelineRun, task, selected } = element.getData();\n  const isTaskSkipped = pipelineRun?.status?.skippedTasks?.some((t) => t.name === task.name);\n\n  return (\n    <PipelineVisualizationTask\n      pipelineRunName={pipelineRun?.metadata?.name}\n      task={task}\n      pipelineRunStatus={pipelineRun && pipelineRunFilterReducer(pipelineRun)}\n      namespace={pipeline?.metadata?.namespace}\n      disableTooltip={disableTooltip}\n      selected={selected}\n      width={width}\n      height={height}\n      isSkipped={isTaskSkipped}\n    />\n  );\n};\n\nexport default observer(TaskNode);\n","import * as React from 'react';\nimport { observer, Node, NodeModel } from '@patternfly/react-topology';\nimport TaskList from './TaskList';\nimport { TaskListNodeModelData } from './types';\n\nimport './TaskListNode.scss';\n\ntype TaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n  unselectedText?: string;\n};\n\nconst TaskListNode: React.FC<TaskListNodeProps> = ({ element, unselectedText }) => {\n  const { height = 30, width = 120 } = {};\n  const { onNewTask = () => {}, onTaskSearch = () => {}, onRemoveTask = () => {} } =\n    element.getData() || {};\n\n  return (\n    <TaskList\n      width={width}\n      height={height}\n      unselectedText={unselectedText}\n      onRemoveTask={onRemoveTask}\n      onNewTask={onNewTask}\n      onTaskSearch={onTaskSearch}\n    />\n  );\n};\n\nexport default observer(TaskListNode);\n","import * as React from 'react';\nimport {\n  Text,\n  TextInputTypes,\n  FormGroup,\n  ClipboardCopy,\n  InputGroup,\n  ExpandableSection,\n  TextVariants,\n  Button,\n  Tooltip,\n  InputGroupItem,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { generateSecret } from '@console/dev-console/src/components/import/import-submit-utils';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { GitProvider } from '@console/git-service/src';\nimport { ExternalLink, FirehoseResource } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { ConfigMapKind } from '@console/internal/module/k8s/types';\nimport {\n  RadioGroupField,\n  InputField,\n  ResourceDropdownField,\n  useActiveNamespace,\n} from '@console/shared/src';\nimport { AccessTokenDocLinks, WebhookDocLinks } from '../consts';\nimport PermissionsSection from './PermissionsSection';\n\ntype WebhoookSectionProps = {\n  pac: ConfigMapKind;\n  formContextField?: string;\n};\n\nconst WebhookSection: React.FC<WebhoookSectionProps> = ({ pac, formContextField }) => {\n  const [namespace] = useActiveNamespace();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { gitProvider, webhook } = _.get(values, formContextField) || values;\n  const [controllerUrl, setControllerUrl] = React.useState('');\n  const [webhookSecret, setWebhookSecret] = React.useState('');\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    const ctlUrl = pac?.data?.['controller-url'];\n    if (ctlUrl) {\n      setControllerUrl(ctlUrl);\n      setFieldValue(`${fieldPrefix}webhook.url`, ctlUrl);\n    }\n  }, [fieldPrefix, pac, setFieldValue]);\n  const autocompleteFilter = (text: string, item: any): boolean => fuzzy(text, item?.props?.name);\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      kind: SecretModel.kind,\n      prop: SecretModel.id,\n      namespace,\n    },\n  ];\n\n  const generateWebhookSecret = () => {\n    setWebhookSecret(generateSecret());\n  };\n\n  const getPermssionSectionHeading = (git: GitProvider) => {\n    switch (git) {\n      case GitProvider.GITHUB:\n        return t('pipelines-plugin~See GitHub events');\n      case GitProvider.GITLAB:\n        return t('pipelines-plugin~See Gitlab events');\n      case GitProvider.BITBUCKET:\n        return t('pipelines-plugin~See BitBucket events');\n      default:\n        return t('pipelines-plugin~See Git events');\n    }\n  };\n\n  const HelpText = (): React.ReactElement => {\n    let helpText: React.ReactNode;\n    switch (gitProvider) {\n      case GitProvider.GITHUB:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your GitHub Personal token. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.GITHUB]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a <b>classic</b> token with <b>repo</b> & <b>admin:repo_hook</b> scopes and\n            give your token an expiration, i.e 30d.\n          </Trans>\n        );\n        break;\n\n      case GitProvider.GITLAB:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Gitlab Personal access token. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.GITLAB]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a token with <b>api</b> scope. Select the role as <b>Maintainer/Owner</b>.\n            Give your token an expiration i.e 30d.\n          </Trans>\n        );\n        break;\n\n      case GitProvider.BITBUCKET:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Bitbucket App password. Use this{' '}\n            <a\n              href={AccessTokenDocLinks[GitProvider.BITBUCKET]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              link\n            </a>{' '}\n            to create a token with <b>Read and Write </b>scopes in{' '}\n            <b>Account, Workspace membership, Projects, Issues, Pull requests and Webhooks</b>.\n          </Trans>\n        );\n        break;\n\n      default:\n        helpText = (\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Use your Git Personal token. Create a token with repo, public_repo & admin:repo_hook\n            scopes and give your token an expiration, i.e 30d.\n          </Trans>\n        );\n    }\n\n    return <div data-test={`${values.gitProvider}-helptext`}>{helpText}</div>;\n  };\n\n  return (\n    <FormSection fullWidth={!fieldPrefix} extraMargin>\n      {gitProvider && gitProvider === GitProvider.BITBUCKET ? (\n        <InputField\n          label={t('pipelines-plugin~Bitbucket username')}\n          name={`${fieldPrefix}webhook.user`}\n          type={TextInputTypes.text}\n          required\n        />\n      ) : null}\n      <RadioGroupField\n        name={`${fieldPrefix}webhook.method`}\n        label={t('pipelines-plugin~Secret')}\n        labelIcon={\n          <Tooltip\n            position=\"right\"\n            content={\n              <p>\n                {t(\n                  'pipelines-plugin~The secret is required to set the Build status and to attach the webhook to the Git repository.',\n                )}\n              </p>\n            }\n          >\n            <HelpIcon />\n          </Tooltip>\n        }\n        required\n        options={[\n          {\n            value: 'token',\n            label: t('pipelines-plugin~Git access token'),\n            activeChildren: (\n              <InputField\n                name={`${fieldPrefix}webhook.token`}\n                type={TextInputTypes.text}\n                helpText={<HelpText />}\n                required\n              />\n            ),\n          },\n          {\n            value: 'secret',\n            label: t('pipelines-plugin~Git access token secret'),\n\n            activeChildren: (\n              <ResourceDropdownField\n                helpText={t(\n                  'pipelines-plugin~Secret with the Git access token for pulling pipeline and tasks from your Git repository.',\n                )}\n                name={`${fieldPrefix}webhook.secretRef`}\n                resources={resources}\n                dataSelector={['metadata', 'name']}\n                placeholder={t('pipelines-plugin~Select a secret')}\n                autocompleteFilter={autocompleteFilter}\n                fullWidth\n                showBadge\n                onChange={(k, v, res) => {\n                  if (res && res.data) {\n                    setFieldValue(`${fieldPrefix}webhook.secretObj`, res);\n                    const secret = res?.data['webhook.secret'];\n                    if (secret) {\n                      setWebhookSecret(Base64.decode(secret));\n                    }\n                  }\n                }}\n              />\n            ),\n          },\n        ]}\n      />\n      {webhook?.url && (\n        <FormGroup fieldId=\"test\" label={t('pipelines-plugin~Webhook URL')}>\n          <ClipboardCopy\n            isReadOnly\n            name={`${fieldPrefix}webhook.url`}\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n            style={{ flex: '1' }}\n          >\n            {controllerUrl}\n          </ClipboardCopy>\n\n          <FormHelperText>\n            <HelperText>\n              <HelperTextItem>\n                {t(\n                  'pipelines-plugin~We have detected a URL that can be used to configure the webhook. It will be created and attached to the Git repository.',\n                )}\n              </HelperTextItem>\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n\n      {gitProvider && gitProvider !== GitProvider.BITBUCKET ? (\n        <FormGroup\n          fieldId={'webhook-secret-clipboard'}\n          label={t('pipelines-plugin~Webhook secret')}\n        >\n          <InputGroup style={{ display: 'flex' }}>\n            <InputGroupItem>\n              <ClipboardCopy\n                name={`${fieldPrefix}webhook.secret`}\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                style={{ flex: '1' }}\n                onChange={(_event, v) => {\n                  setFieldValue(`${fieldPrefix}webhook.secret`, v);\n                }}\n              >\n                {webhookSecret}\n              </ClipboardCopy>\n            </InputGroupItem>\n            <InputGroupItem>\n              <Button data-test=\"generate-secret\" variant=\"control\" onClick={generateWebhookSecret}>\n                {t('pipelines-plugin~Generate')}\n              </Button>\n            </InputGroupItem>\n          </InputGroup>\n        </FormGroup>\n      ) : null}\n\n      {gitProvider && gitProvider !== GitProvider.UNSURE ? (\n        <>\n          <ExpandableSection toggleText={getPermssionSectionHeading(gitProvider)}>\n            <FormGroup\n              label={t('pipelines-plugin~Events triggering the webhook: ')}\n              fieldId=\"repo-permissions\"\n            >\n              <Text component={TextVariants.small}>\n                <PermissionsSection formContextField={formContextField} />\n              </Text>\n            </FormGroup>\n          </ExpandableSection>\n\n          <ExternalLink\n            text={t('pipelines-plugin~Read more about setting up webhook')}\n            href={WebhookDocLinks[gitProvider]}\n          />\n        </>\n      ) : null}\n    </FormSection>\n  );\n};\n\nexport default WebhookSection;\n","import * as React from 'react';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { ConfigMapKind, k8sList } from '@console/internal/module/k8s';\nimport { RepositoryModel } from '@console/pipelines-plugin/src/models';\nimport { PAC_INFO } from '../../pac/const';\nimport { PIPELINE_NAMESPACE } from '../../pipelines/const';\n\nexport const usePacInfo = () =>\n  useK8sGet<ConfigMapKind>(ConfigMapModel, PAC_INFO, PIPELINE_NAMESPACE);\n\nexport const useRepositoryPresent = (repoURL: string) => {\n  const [repoAlreadyExists, setRepoAlreadyExists] = React.useState(false);\n\n  React.useEffect(() => {\n    k8sList(RepositoryModel)\n      .then((repos) => {\n        setRepoAlreadyExists(repos.some((r) => r.spec.url === repoURL));\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.warn('Error while fetching Pipeline-as-code repositories:', err);\n        setRepoAlreadyExists(false);\n      });\n  }, [repoURL]);\n\n  return repoAlreadyExists;\n};\n","import * as React from 'react';\nimport { FormikValues } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { ProgressiveList, ProgressiveListItem } from '@console/shared/src';\nimport { AppResources } from '../../edit-application/edit-application-types';\nimport HealthChecks from '../../health-checks/HealthChecks';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport DeploymentConfigSection from './DeploymentConfigSection';\nimport LabelSection from './LabelSection';\nimport ResourceLimitSection from './ResourceLimitSection';\nimport RouteSection from './RouteSection';\nimport ScalingSection from './ScalingSection';\nimport ServerlessScalingSection from './ServerlessScalingSection';\n\ntype AdvancedSectionProps = {\n  values: FormikValues;\n  appResources?: AppResources;\n};\n\nconst Footer = ({ children }) => {\n  const { t } = useTranslation();\n  return (\n    <Trans\n      t={t}\n      ns=\"devconsole\"\n      defaults=\"Click on the names to access advanced options for <0></0>.\"\n      components={[children]}\n    />\n  );\n};\n\nconst List: React.FC<AdvancedSectionProps> = ({ appResources, values }) => {\n  const { t } = useTranslation();\n\n  const [visibleItems, setVisibleItems] = React.useState([]);\n  const handleVisibleItemChange = (item: string) => {\n    setVisibleItems([...visibleItems, item]);\n  };\n\n  return (\n    <ProgressiveList\n      visibleItems={visibleItems}\n      onVisibleItemChange={handleVisibleItemChange}\n      Footer={Footer}\n    >\n      <ProgressiveListItem name={t('devconsole~Health checks')}>\n        <HealthChecks title={t('devconsole~Health checks')} resourceType={values.resources} />\n      </ProgressiveListItem>\n      {values?.formType === 'edit' ? (\n        <ProgressiveListItem name={t('devconsole~Deployment')}>\n          <DeploymentConfigSection\n            namespace={values.project.name}\n            resource={appResources?.editAppResource?.data}\n          />\n        </ProgressiveListItem>\n      ) : null}\n\n      <ProgressiveListItem name={t('devconsole~Scaling')}>\n        {values.resources === Resources.KnativeService ? (\n          <ServerlessScalingSection />\n        ) : (\n          <ScalingSection name=\"deployment.replicas\" />\n        )}\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Resource limits')}>\n        <ResourceLimitSection />\n      </ProgressiveListItem>\n      <ProgressiveListItem name={t('devconsole~Labels')}>\n        <LabelSection />\n      </ProgressiveListItem>\n    </ProgressiveList>\n  );\n};\n\nconst AdvancedSection: React.FC<AdvancedSectionProps> = ({ values, appResources }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection title={t('devconsole~Advanced options')}>\n      <RouteSection route={values.route} resources={values.resources} />\n      <div>\n        <List appResources={appResources} values={values} />\n      </div>\n    </FormSection>\n  );\n};\n\nexport default AdvancedSection;\n","import * as React from 'react';\nimport { Alert, TextInputTypes, ValidatedOptions } from '@patternfly/react-core';\nimport { useFormikContext, FormikErrors, FormikTouched } from 'formik';\nimport { isEmpty } from 'lodash';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useAccessReview } from '@console/dynamic-plugin-sdk/src';\nimport { RepoStatus, ImportStrategy, getGitService, GitProvider } from '@console/git-service';\nimport { DetectedBuildType } from '@console/git-service/src/utils/build-tool-type-detector';\nimport { detectImportStrategies } from '@console/git-service/src/utils/import-strategy-detector';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport {\n  FLAG_KNATIVE_SERVING_SERVICE,\n  ServerlessBuildStrategyType,\n  ServiceModel as ksvcModel,\n} from '@console/knative-plugin';\nimport { InputField, useFormikValidationFix, useDebounceCallback, useFlag } from '@console/shared';\nimport { UNASSIGNED_KEY, CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isGitImportSource } from '../../../types/samples';\nimport {\n  getSampleRepo,\n  getSampleRef,\n  getSampleContextDir,\n  NormalizedBuilderImages,\n} from '../../../utils/imagestream-utils';\nimport { getSample, getGitImportSample } from '../../../utils/samples';\nimport { GitData, DetectedStrategyFormData } from '../import-types';\nimport { detectGitRepoName, detectGitType } from '../import-validation-utils';\nimport FormSection from '../section/FormSection';\nimport AdvancedGitOptions from './AdvancedGitOptions';\nimport GitTypeSelector from './GitTypeSelector';\nimport SampleRepo from './SampleRepo';\n\nexport type GitSectionFormData = {\n  formType: string;\n  name: string;\n  application: {\n    selected: string;\n    selectedKey: string;\n    name: string;\n    isInContext: any;\n  };\n  image: {\n    selected: any;\n    selectedKey: string;\n    tagObj: string;\n    recommended: string;\n    couldNotRecommend: boolean;\n  };\n  git: GitData;\n  devfile?: {\n    devfilePath: string;\n    devfileSourceUrl: string;\n    devfileContent?: string;\n  };\n  docker?: {\n    dockerfilePath: string;\n  };\n  build: {\n    strategy: BuildStrategyType;\n  };\n  project: {\n    name: string;\n  };\n  import?: {\n    recommendedStrategy?: DetectedStrategyFormData;\n  };\n};\n\nexport interface GitSectionProps {\n  title?: React.ReactNode;\n  formContextField?: string;\n  builderImages?: NormalizedBuilderImages;\n  defaultSample?: { url: string; ref?: string; dir?: string };\n  showSample?: boolean;\n  formType?: string;\n  importType?: string;\n  imageStreamName?: string;\n  autoFocus?: boolean;\n}\n\nconst GitSection: React.FC<GitSectionProps> = ({\n  title,\n  formContextField,\n  builderImages,\n  defaultSample,\n  showSample = !!defaultSample,\n  formType,\n  importType,\n  imageStreamName,\n  autoFocus = true,\n}) => {\n  const { t } = useTranslation();\n  const inputRef = React.useRef<HTMLInputElement>();\n\n  const {\n    dirty,\n    isSubmitting,\n    values: formikValues,\n    touched: formikTouched,\n    errors: formikErrors,\n    status,\n    setFieldValue: formikSetFieldValue,\n    setFieldTouched: formikSetFieldTouched,\n  } = useFormikContext<GitSectionFormData>();\n\n  const isKnativeServingAvailable = useFlag(FLAG_KNATIVE_SERVING_SERVICE);\n  const [canCreateKnativeService, canCreateKnativeServiceLoading] = useAccessReview({\n    group: ksvcModel.apiGroup,\n    resource: ksvcModel.plural,\n    namespace: getActiveNamespace(),\n    verb: 'create',\n  });\n\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const setFieldValue = React.useCallback(\n    (key: string, value: string | boolean | object, shouldValidate?: boolean) => {\n      formikSetFieldValue(`${fieldPrefix}${key}` as any, value, shouldValidate);\n    },\n    [fieldPrefix, formikSetFieldValue],\n  );\n  const setFieldTouched = React.useCallback(\n    (key: string, touched: boolean, shouldValidate?: boolean) => {\n      formikSetFieldTouched(`${fieldPrefix}${key}` as any, touched, shouldValidate);\n    },\n    [fieldPrefix, formikSetFieldTouched],\n  );\n\n  const values: GitSectionFormData = formContextField\n    ? _.get(formikValues, formContextField)\n    : formikValues;\n  const touched: FormikTouched<GitSectionFormData> = formContextField\n    ? _.get(formikTouched, formContextField, {})\n    : formikTouched;\n  const errors: FormikErrors<GitSectionFormData> = formContextField\n    ? _.get(formikErrors, formContextField, {})\n    : formikErrors;\n  const formReloadCount: number = _.get(formikValues, 'formReloadCount');\n\n  const { url: defaultSampleURL, dir: defaultSampleDir, ref: defaultSampleRef } =\n    defaultSample || {};\n  const defaultSampleTagObj = React.useMemo(\n    () =>\n      defaultSampleURL\n        ? {\n            annotations: {\n              sampleRepo: defaultSampleURL,\n              sampleContextDir: defaultSampleDir ?? './',\n              sampleRef: defaultSampleRef ?? '',\n            },\n          }\n        : null,\n    [defaultSampleURL, defaultSampleDir, defaultSampleRef],\n  );\n  const imageStreamTag = isEmpty(values.image.tagObj) ? defaultSampleTagObj : values.image.tagObj;\n  const imageStreamTagSampleRepo = showSample && getSampleRepo(imageStreamTag);\n  const {\n    name: nameTouched,\n    application: { name: applicationNameTouched } = {},\n    image: { selected: imageSelectorTouched } = {},\n    git: { dir: gitDirTouched, type: gitTypeTouched } = {},\n  } = touched;\n  const { git: { url: gitUrlError } = {} } = errors;\n\n  const [validated, setValidated] = React.useState<ValidatedOptions>(ValidatedOptions.default);\n  const [repoStatus, setRepoStatus] = React.useState<RepoStatus>();\n\n  const handleBuilderImageRecommendation = React.useCallback(\n    async (detectedBuildTypes: DetectedBuildType[]) => {\n      setFieldValue('image.isRecommending', false);\n      if (gitUrlError) {\n        setFieldValue('image.recommended', '');\n        setFieldValue('image.couldNotRecommend', true);\n        return;\n      }\n      const recommendedBuildType =\n        builderImages &&\n        detectedBuildTypes?.find(\n          ({ type: recommended }) => recommended && builderImages.hasOwnProperty(recommended),\n        );\n      if (recommendedBuildType && recommendedBuildType.type) {\n        setFieldValue('image.couldNotRecommend', false);\n        setFieldValue('image.recommended', recommendedBuildType.type);\n      } else {\n        setFieldValue('image.couldNotRecommend', true);\n        setFieldValue('image.recommended', '');\n      }\n    },\n    [builderImages, gitUrlError, setFieldValue],\n  );\n\n  const handleDevfileStrategyDetection = React.useCallback(\n    async (devfilePath: string, gitType: GitProvider) => {\n      if (gitUrlError) {\n        setFieldValue('devfile.devfileContent', null);\n        setFieldValue('devfile.devfileHasError', true);\n        return;\n      }\n      if (importType !== 'devfile' && !values.devfile?.devfileSourceUrl) {\n        setFieldValue('devfile.devfilePath', devfilePath);\n        setFieldValue('docker.dockerfilePath', 'Dockerfile');\n        const gitService = getGitService(\n          values.git.url,\n          gitType,\n          values.git.ref,\n          values.git.dir,\n          values.git.secretResource,\n          devfilePath,\n        );\n        const devfileContents = gitService && (await gitService.getDevfileContent());\n        if (!devfileContents) {\n          setFieldValue('devfile.devfileContent', null);\n          setFieldValue('devfile.devfileHasError', true);\n        } else {\n          setFieldValue('devfile.devfileContent', devfileContents);\n          setFieldValue('devfile.devfileHasError', false);\n        }\n      }\n    },\n    [\n      gitUrlError,\n      importType,\n      setFieldValue,\n      values.devfile,\n      values.git.dir,\n      values.git.ref,\n      values.git.secretResource,\n      values.git.url,\n    ],\n  );\n\n  const handleGitUrlChange = React.useCallback(\n    async (url: string, ref: string, dir: string) => {\n      if (isKnativeServingAvailable && canCreateKnativeServiceLoading) return;\n      if (isSubmitting || status?.submitError) return;\n      setValidated(ValidatedOptions.default);\n      setFieldValue('git.validated', ValidatedOptions.default);\n      setFieldValue('git.isUrlValidating', true);\n      if (gitUrlError) {\n        // Reset git type field when url is not valid or empty so that when new url valid is added, we run git type detection again.\n        // Don't do anything else if URL is not valid.\n        setFieldValue('git.showGitType', false);\n        setFieldTouched('git.type', false);\n        setFieldValue('git.isUrlValidating', false);\n        return;\n      }\n      const detectedGitType = detectGitType(url);\n      const isUnsureDetectedGitType = detectedGitType === GitProvider.UNSURE;\n      const gitRepoName = formType !== 'sample' && detectGitRepoName(url);\n\n      // Updated detectedType only\n      if (detectedGitType !== values.git.detectedType) {\n        setFieldValue('git.detectedType', detectedGitType);\n      }\n      if (isUnsureDetectedGitType && !values.git.showGitType) {\n        setFieldValue('git.showGitType', true);\n      }\n\n      if (!isUnsureDetectedGitType && values.git.showGitType) {\n        setFieldValue('git.showGitType', false);\n      }\n\n      const gitType =\n        isUnsureDetectedGitType && values.git.showGitType ? values.git.type : detectedGitType;\n\n      if (gitType !== values.git.type) {\n        setFieldTouched('git.type', false, false);\n        setFieldValue('git.type', gitType);\n      }\n\n      const gitService = getGitService(\n        url,\n        gitType,\n        ref,\n        dir,\n        values.git.secretResource,\n        values.devfile?.devfilePath,\n        values.docker?.dockerfilePath,\n      );\n\n      const importStrategyData = await detectImportStrategies(\n        url,\n        gitService,\n        isKnativeServingAvailable && canCreateKnativeService,\n      );\n\n      const {\n        loaded,\n        loadError,\n        repositoryStatus,\n        strategies: importStrategies,\n      } = importStrategyData;\n\n      setRepoStatus(repositoryStatus);\n\n      if (repositoryStatus !== RepoStatus.Reachable) {\n        setValidated(ValidatedOptions.warning);\n        setFieldValue('git.validated', ValidatedOptions.warning);\n        setFieldValue('git.isUrlValidating', false);\n        setFieldValue('import', {\n          loaded: false,\n          loadError: null,\n          strategies: [],\n          selectedStrategy: {\n            name: 'Builder Image',\n            type: ImportStrategy.S2I,\n            priority: 0,\n            detectedFiles: [],\n          },\n          recommendedStrategy: null,\n          showEditImportStrategy: true,\n        });\n        setFieldValue('build.strategy', BuildStrategyType.Source);\n        return;\n      }\n\n      gitRepoName && !nameTouched && !values.name && setFieldValue('name', gitRepoName);\n      gitRepoName &&\n        values.formType !== 'edit' &&\n        !values.application.name &&\n        values.application.selectedKey !== UNASSIGNED_KEY &&\n        setFieldValue('application.name', `${gitRepoName}-app`);\n\n      if (importType === 'devfile' || imageStreamName || values.formType === 'edit') {\n        setValidated(ValidatedOptions.success);\n        setFieldValue('git.validated', ValidatedOptions.success);\n        setFieldValue('git.isUrlValidating', false);\n        importType === 'devfile' && setFieldValue('build.strategy', BuildStrategyType.Devfile);\n        importType === 'devfile' &&\n          !values.devfile?.devfileContent &&\n          setFieldValue('import.recommendedStrategy', importStrategies[0]);\n        values.formType === 'edit' &&\n          values.build.strategy === BuildStrategyType.Source &&\n          handleBuilderImageRecommendation(\n            importStrategies?.find((s) => s.type === ImportStrategy.S2I)?.detectedCustomData,\n          );\n        return;\n      }\n\n      setFieldValue('import.loaded', loaded);\n      setFieldValue('import.loadError', loadError);\n      setFieldValue('import.strategies', importStrategies);\n      if (importStrategies.length > 0) {\n        setFieldValue('import.showEditImportStrategy', false);\n        setFieldValue('import.selectedStrategy', importStrategies[0]);\n        setFieldValue('import.recommendedStrategy', importStrategies[0]);\n      } else {\n        setFieldValue('import.selectedStrategy', {\n          name: 'Devfile',\n          type: ImportStrategy.DEVFILE,\n          priority: 2,\n          detectedFiles: [],\n        });\n        setFieldValue('import.recommendedStrategy', null);\n        setFieldValue('import.showEditImportStrategy', true);\n      }\n      setFieldValue('import.strategyChanged', false);\n\n      if (importStrategies.length > 0) {\n        switch (importStrategies[0].type) {\n          case ImportStrategy.S2I: {\n            setFieldValue('build.strategy', BuildStrategyType.Source);\n            if (builderImages) {\n              setFieldValue('image.isRecommending', true);\n              handleBuilderImageRecommendation(importStrategies[0].detectedCustomData);\n            }\n            break;\n          }\n          case ImportStrategy.DEVFILE: {\n            setFieldValue('build.strategy', BuildStrategyType.Devfile);\n            handleDevfileStrategyDetection(importStrategies[0].detectedFiles[0], gitType);\n            break;\n          }\n          case ImportStrategy.DOCKERFILE: {\n            setFieldValue('build.strategy', BuildStrategyType.Docker);\n            setFieldValue('docker.dockerfilePath', importStrategies[0].detectedFiles[0]);\n            setFieldValue('docker.dockerfileHasError', false);\n            break;\n          }\n          case ImportStrategy.SERVERLESS_FUNCTION: {\n            setFieldValue('build.strategy', ServerlessBuildStrategyType.ServerlessFunction);\n            break;\n          }\n          default:\n        }\n      }\n\n      setValidated(ValidatedOptions.success);\n      setFieldValue('git.validated', ValidatedOptions.success);\n      setFieldValue('git.isUrlValidating', false);\n    },\n    [\n      isSubmitting,\n      status,\n      setFieldValue,\n      gitUrlError,\n      formType,\n      values.git.detectedType,\n      values.git.showGitType,\n      values.git.type,\n      values.git.secretResource,\n      values.devfile,\n      values.docker,\n      values.name,\n      values.formType,\n      values.application.name,\n      values.application.selectedKey,\n      values.build.strategy,\n      isKnativeServingAvailable,\n      canCreateKnativeService,\n      canCreateKnativeServiceLoading,\n      nameTouched,\n      importType,\n      imageStreamName,\n      setFieldTouched,\n      handleBuilderImageRecommendation,\n      builderImages,\n      handleDevfileStrategyDetection,\n    ],\n  );\n\n  const debouncedHandleGitUrlChange = useDebounceCallback(handleGitUrlChange);\n\n  const fillImageStreamTagSample = React.useCallback(() => {\n    if (isKnativeServingAvailable && canCreateKnativeServiceLoading) return;\n    const url = imageStreamTagSampleRepo;\n    const ref = getSampleRef(imageStreamTag);\n    const dir = getSampleContextDir(imageStreamTag);\n    setFieldValue('git.url', imageStreamTagSampleRepo, false);\n    setFieldValue('git.ref', ref, false);\n    setFieldValue('git.dir', dir, false);\n    setFieldTouched('git.url', true, true);\n    debouncedHandleGitUrlChange(url, ref, dir);\n  }, [\n    debouncedHandleGitUrlChange,\n    imageStreamTagSampleRepo,\n    setFieldTouched,\n    setFieldValue,\n    imageStreamTag,\n    isKnativeServingAvailable,\n    canCreateKnativeServiceLoading,\n  ]);\n\n  React.useEffect(() => {\n    (!dirty || gitDirTouched || gitTypeTouched || formReloadCount || values.git.secretResource) &&\n      values.git.url &&\n      debouncedHandleGitUrlChange(values.git.url, values.git.ref, values.git.dir);\n  }, [\n    dirty,\n    isSubmitting,\n    gitDirTouched,\n    formReloadCount,\n    debouncedHandleGitUrlChange,\n    values.git.url,\n    values.git.ref,\n    values.git.dir,\n    values.git.type,\n    values.git.secretResource,\n    gitTypeTouched,\n  ]);\n\n  const helpText = React.useMemo(() => {\n    if (values.git.isUrlValidating) {\n      return `${t('devconsole~Validating')}...`;\n    }\n    if (validated === ValidatedOptions.success) {\n      return t('devconsole~Validated');\n    }\n    if (validated === ValidatedOptions.warning) {\n      switch (repoStatus) {\n        case RepoStatus.RateLimitExceeded: {\n          return t('devconsole~Rate limit exceeded');\n        }\n        case RepoStatus.GitTypeNotDetected: {\n          return t(\n            'devconsole~URL is valid but a git type could not be identified. Please select a git type from the options below',\n          );\n        }\n        case RepoStatus.PrivateRepo: {\n          return t(\n            'devconsole~If this is a private repository, enter a source Secret in advanced Git options',\n          );\n        }\n        case RepoStatus.ResourceNotFound: {\n          return t('devconsole~Requested repository does not exist');\n        }\n        case RepoStatus.InvalidGitTypeSelected: {\n          return t(\n            'devconsole~The selected git type might not be valid or the repository is private. Please try selecting another git type or enter a source Secret in advanced Git options',\n          );\n        }\n        /* Special case for Gitea as it throws 404 for all kinds of negatives */\n        case RepoStatus.GiteaRepoUnreachable: {\n          return t(\n            'devconsole~The Gitea repository is unreachable. The repository might be private or does not exist',\n          );\n        }\n        default: {\n          return t('devconsole~URL is valid but cannot be reached');\n        }\n      }\n    }\n    return t('devconsole~Repository URL to build and deploy your code from');\n  }, [t, values.git.isUrlValidating, validated, repoStatus]);\n\n  const resetFields = React.useCallback(() => {\n    if (!imageSelectorTouched) {\n      setFieldValue('image.selected', '');\n      setFieldValue('image.tag', '');\n    }\n    values.image.recommended && setFieldValue('image.recommended', '');\n    values.image.couldNotRecommend && setFieldValue('image.couldNotRecommend', false);\n    if (values.formType === 'edit') {\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n        values.application.selectedKey === CREATE_APPLICATION_KEY &&\n        !applicationNameTouched &&\n        setFieldValue('application.name', '');\n      return;\n    }\n    !nameTouched && setFieldValue('name', '');\n    !values.application.isInContext &&\n      values.application.selectedKey !== UNASSIGNED_KEY &&\n      !applicationNameTouched &&\n      setFieldValue('application.name', '');\n  }, [\n    setFieldValue,\n    values.formType,\n    values.image.recommended,\n    values.image.couldNotRecommend,\n    values.application.selectedKey,\n    values.application.isInContext,\n    applicationNameTouched,\n    imageSelectorTouched,\n    nameTouched,\n  ]);\n\n  useFormikValidationFix(values.git.url);\n\n  /**\n   * Automatically focus the git repository field and prefill it with different\n   * sample types.\n   *\n   * 1. ConsoleSample\n   * 2. ImageStream samples\n   */\n  React.useEffect(() => {\n    // Skip handling until Knative Service status is unknown!\n    if (canCreateKnativeServiceLoading) return;\n\n    if (autoFocus) {\n      inputRef.current?.focus();\n    }\n\n    const { sampleName, repository: sampleRepository } = getGitImportSample();\n    if (sampleRepository?.url) {\n      const name = detectGitRepoName(sampleRepository.url);\n      setFieldValue('name', name, false);\n      setFieldValue('application.name', `${name}-app`, false);\n      setFieldValue('git.url', sampleRepository.url, false);\n      if (sampleRepository.revision) {\n        setFieldValue('git.ref', sampleRepository.revision, false);\n      }\n      if (sampleRepository.contextDir) {\n        setFieldValue('git.dir', sampleRepository.contextDir, false);\n      }\n      setFieldTouched('git.url', true, true);\n      debouncedHandleGitUrlChange(\n        sampleRepository.url,\n        sampleRepository.revision,\n        sampleRepository.contextDir,\n      );\n    }\n    if (sampleName) {\n      getSample(sampleName)\n        .then((sample) => {\n          if (isGitImportSource(sample.spec.source)) {\n            const { gitImport } = sample.spec.source;\n            if (!sampleRepository?.url) {\n              const name = detectGitRepoName(sampleRepository.url);\n              setFieldValue('name', name, false);\n              setFieldValue('application.name', `${name}-app`, false);\n              setFieldValue('git.url', gitImport.repository.url, false);\n              if (sampleRepository.revision) {\n                setFieldValue('git.ref', sampleRepository.revision, false);\n              }\n              if (sampleRepository.contextDir) {\n                setFieldValue('git.dir', sampleRepository.contextDir, false);\n              }\n              setFieldTouched('git.url', true, true);\n              debouncedHandleGitUrlChange(\n                gitImport.repository.url,\n                gitImport.repository.revision,\n                gitImport.repository.contextDir,\n              );\n            }\n            if (gitImport?.service?.targetPort && gitImport?.service?.targetPort !== 8080) {\n              setFieldValue(\n                'route.unknownTargetPort',\n                gitImport.service.targetPort.toString(),\n                false,\n              );\n            }\n            // handleSearch(containerImport.image);\n          } else {\n            // eslint-disable-next-line no-console\n            console.error(\n              `Unsupported ConsoleSample \"${sampleName}\" source type ${sample.spec?.source?.type}`,\n            );\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(`Error while loading ConsoleSample \"${sampleName}\":`, error);\n        });\n    } else if (formType === 'sample' && imageStreamTagSampleRepo) {\n      fillImageStreamTagSample();\n    }\n\n    // Disable deps to load the samples only once when the component is loaded.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [canCreateKnativeServiceLoading]);\n\n  return (\n    <FormSection title={title ?? t('devconsole~Git')}>\n      <InputField\n        ref={inputRef}\n        type={TextInputTypes.text}\n        name={`${fieldPrefix}git.url`}\n        label={t('devconsole~Git Repo URL')}\n        helpText={helpText}\n        helpTextInvalid={helpText}\n        validated={validated}\n        onBlur={(e: React.FocusEvent<HTMLInputElement>) => {\n          const trimmedURL = e.target.value.trim();\n          if (e.target.value !== trimmedURL) {\n            setFieldValue('git.url', trimmedURL);\n            debouncedHandleGitUrlChange(trimmedURL, values.git.ref, values.git.dir);\n          }\n        }}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          resetFields();\n          debouncedHandleGitUrlChange(e.target.value.trim(), values.git.ref, values.git.dir);\n        }}\n        data-test-id=\"git-form-input-url\"\n        required\n        isDisabled={formType === 'sample' && imageStreamTagSampleRepo}\n      />\n      {formType !== 'sample' && imageStreamTagSampleRepo && (\n        <SampleRepo onClick={fillImageStreamTagSample} />\n      )}\n      {values.git.showGitType && (\n        <>\n          <GitTypeSelector fieldPrefix={fieldPrefix} />\n          {values.git.type === GitProvider.UNSURE && (\n            <Alert isInline variant=\"info\" title={t('devconsole~Defaulting Git type to other')}>\n              {t('devconsole~We failed to detect the Git type.')}\n            </Alert>\n          )}\n        </>\n      )}\n      {formType !== 'sample' && <AdvancedGitOptions formContextField={formContextField} />}\n    </FormSection>\n  );\n};\n\nexport default GitSection;\n","import { Dispatch, SetStateAction } from 'react';\nimport { useUserSettings } from '@console/shared';\n\nexport const PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY =\n  'devconsole.import.secureRoutingOptions';\n\ntype RoutingOptions = {\n  secure: boolean;\n  tlsTermination?: string;\n  insecureTraffic?: string;\n};\n\nexport const usePreferredRoutingOptions = (): [\n  RoutingOptions,\n  Dispatch<SetStateAction<RoutingOptions>>,\n  boolean,\n] => {\n  const [\n    preferredRoutingOptions,\n    setPreferredRoutingOptions,\n    preferredRoutingOptionsLoaded,\n  ] = useUserSettings<RoutingOptions>(PREFERRED_SECURE_ROUTING_OPTIONS_USER_SETTING_KEY, {\n    secure: true,\n    tlsTermination: 'edge',\n    insecureTraffic: 'Redirect',\n  });\n  return [preferredRoutingOptions, setPreferredRoutingOptions, preferredRoutingOptionsLoaded];\n};\n","import * as React from 'react';\nimport { Resources } from '../import/import-types';\nimport FormSection from '../import/section/FormSection';\nimport { HealthChecksProbeType } from './health-checks-types';\nimport HealthCheckProbe from './HealthCheckProbe';\n\ninterface HealthChecksProps {\n  title?: string;\n  resourceType: Resources;\n}\n\nconst HealthChecks: React.FC<HealthChecksProps> = ({ title, resourceType }) => (\n  <FormSection title={title}>\n    <HealthCheckProbe probeType={HealthChecksProbeType.ReadinessProbe} />\n\n    <HealthCheckProbe probeType={HealthChecksProbeType.LivenessProbe} />\n\n    {resourceType !== Resources.KnativeService && (\n      <HealthCheckProbe probeType={HealthChecksProbeType.StartupProbe} />\n    )}\n  </FormSection>\n);\n\nexport default HealthChecks;\n","import * as React from 'react';\nimport { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { GreenCheckCircleIcon } from '@console/shared';\nimport { getHealthChecksProbeConfig, healthChecksDefaultValues } from './health-checks-probe-utils';\nimport { HealthCheckProbeData } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport ProbeForm from './ProbeForm';\nimport './HealthCheckProbe.scss';\n\ninterface HealthCheckProbeProps {\n  probeType: string;\n}\n\nconst HealthCheckProbe: React.FC<HealthCheckProbeProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const [temporaryProbeData, setTemporaryProbeData] = React.useState<HealthCheckProbeData>();\n  const showProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n    setTemporaryProbeData(healthChecks?.[probeType].data);\n  };\n\n  const handleDeleteProbe = () => {\n    setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    if (healthChecks?.[probeType]?.modified) {\n      setFieldValue(`healthChecks.${probeType}.modified`, false);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.modified`, true);\n    }\n  };\n\n  const handleReset = () => {\n    if (!healthChecks?.[probeType]?.enabled) {\n      setFieldValue(`healthChecks.${probeType}`, healthChecksDefaultValues);\n    } else {\n      setFieldValue(`healthChecks.${probeType}.showForm`, false);\n      setFieldValue(`healthChecks.${probeType}.data`, temporaryProbeData);\n    }\n    setFieldValue(`healthChecks.${probeType}.modified`, false);\n  };\n\n  const handleSubmit = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, false);\n    setFieldValue(`healthChecks.${probeType}.enabled`, true);\n    setFieldValue(`healthChecks.${probeType}.modified`, true);\n  };\n\n  const handleAddProbe = () => {\n    setFieldValue(`healthChecks.${probeType}.showForm`, true);\n  };\n\n  const renderProbe = () => {\n    if (healthChecks?.[probeType]?.showForm) {\n      return <ProbeForm onSubmit={handleSubmit} onClose={handleReset} probeType={probeType} />;\n    }\n    if (healthChecks?.[probeType]?.enabled) {\n      return (\n        <>\n          <Button\n            className=\"odc-heath-check-probe__successButton\"\n            variant={ButtonVariant.plain}\n            isInline\n            onClick={showProbe}\n          >\n            <span className=\"odc-heath-check-probe__successText\">\n              <GreenCheckCircleIcon />{' '}\n              {t('devconsole~{{healthCheckProbeAdded}} added', {\n                healthCheckProbeAdded: getHealthChecksProbeConfig(probeType, t).formTitle,\n              })}\n            </span>\n          </Button>\n          {!viewOnly && (\n            <Tooltip content={t('devconsole~Remove')} position=\"right\">\n              <Button\n                className=\"pf-m-plain--align-left\"\n                variant={ButtonVariant.plain}\n                onClick={handleDeleteProbe}\n              >\n                <MinusCircleIcon />\n              </Button>\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n    return viewOnly ? (\n      t('devconsole~No {{noHealthCheckProbe}}', {\n        noHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n      })\n    ) : (\n      <Button\n        className=\"pf-m-link--align-left\"\n        variant={ButtonVariant.link}\n        onClick={handleAddProbe}\n        icon={<PlusCircleIcon />}\n      >\n        {t('devconsole~Add {{addHealthCheckProbe}}', {\n          addHealthCheckProbe: getHealthChecksProbeConfig(probeType, t).formTitle,\n        })}\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"co-section-heading-tertiary odc-heath-check-probe__formTitle\">\n        {getHealthChecksProbeConfig(probeType, t).formTitle}\n        {healthChecks?.[probeType]?.enabled && (\n          <Button\n            className=\"pf-m-link--align-left\"\n            variant={ButtonVariant.link}\n            onClick={showProbe}\n          >\n            &nbsp;&nbsp;\n            {`${viewOnly ? t('devconsole~View') : t('devconsole~Edit')} ${t('devconsole~Probe')}`}\n          </Button>\n        )}\n      </div>\n      <div className=\"pf-v5-c-form__helper-text\">\n        {getHealthChecksProbeConfig(probeType, t).formSubtitle}\n      </div>\n      <div className=\"co-toolbar__group co-toolbar__group--left\">{renderProbe()}</div>\n    </>\n  );\n};\n\nexport default HealthCheckProbe;\n","import * as React from 'react';\nimport { TextInputTypes, InputGroupText } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { InputGroupField, InputField, DropdownField, ActionGroupWithIcons } from '@console/shared';\nimport FormSection from '../import/section/FormSection';\nimport { RequestType } from './health-checks-types';\nimport { HealthCheckContext } from './health-checks-utils';\nimport {\n  HTTPRequestTypeForm,\n  TCPRequestTypeForm,\n  CommandRequestTypeForm,\n} from './RequestTypeForms';\nimport './ProbeForm.scss';\n\nconst getRequestTypeForm = (value: string, probeType: string) => {\n  switch (value) {\n    case RequestType.HTTPGET:\n      return <HTTPRequestTypeForm probeType={probeType} />;\n    case RequestType.ContainerCommand:\n      return <CommandRequestTypeForm probeType={probeType} />;\n    case RequestType.TCPSocket:\n      return <TCPRequestTypeForm probeType={probeType} />;\n    default:\n      return null;\n  }\n};\n\ninterface ProbeFormProps {\n  onSubmit: () => void;\n  onClose: () => void;\n  probeType: string;\n}\n\nconst ProbeForm: React.FC<ProbeFormProps> = ({ onSubmit, onClose, probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n    errors,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const RequestTypeOptions = {\n    httpGet: t('devconsole~HTTP GET'),\n    command: t('devconsole~Container command'),\n    tcpSocket: t('devconsole~TCP socket'),\n  };\n  return (\n    <div className=\"odc-heath-check-probe-form\">\n      <FormSection>\n        <DropdownField\n          name={`healthChecks.${probeType}.data.requestType`}\n          label={t('devconsole~Type')}\n          items={RequestTypeOptions}\n          title={RequestType.HTTPGET}\n          disabled={viewOnly}\n          fullWidth\n        />\n        {getRequestTypeForm(healthChecks?.[probeType]?.data?.requestType, probeType)}\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.failureThreshold`}\n          label={t('devconsole~Failure threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many times the probe will try starting or restarting before giving up.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.successThreshold`}\n          label={t('devconsole~Success threshold')}\n          style={{ maxWidth: '100%' }}\n          helpText={t(\n            'devconsole~How many consecutive successes for the probe to be considered successful after having failed.',\n          )}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.initialDelaySeconds`}\n          label={t('devconsole~Initial delay')}\n          helpText={t(\n            'devconsole~How long to wait after the Container starts before checking its health.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.periodSeconds`}\n          label={t('devconsole~Period')}\n          helpText={t('devconsole~How often to perform the probe.')}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n        <InputGroupField\n          type={TextInputTypes.text}\n          name={`healthChecks.${probeType}.data.timeoutSeconds`}\n          label={t('devconsole~Timeout')}\n          helpText={t(\n            'devconsole~How long to wait for the probe to finish, if the time is exceeded, the probe is considered failed.',\n          )}\n          afterInput={<InputGroupText>{t('devconsole~seconds')}</InputGroupText>}\n          style={{ maxWidth: '100%' }}\n          isDisabled={viewOnly}\n        />\n      </FormSection>\n      <ActionGroupWithIcons\n        onSubmit={!viewOnly ? onSubmit : undefined}\n        onClose={onClose}\n        isDisabled={!_.isEmpty(errors?.healthChecks?.[probeType])}\n      />\n    </div>\n  );\n};\n\nexport default ProbeForm;\n","import * as React from 'react';\nimport { TextInputTypes, FormGroup } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { NameValueEditor } from '@console/internal/components/utils/name-value-editor';\nimport { InputField, CheckboxField, getFieldId, TextColumnField } from '@console/shared';\nimport { Resources } from '../import/import-types';\nimport { HealthCheckContext } from './health-checks-utils';\n\ninterface RequestTypeFormProps {\n  probeType?: string;\n}\n\nexport const renderPortField = (\n  fieldName: string,\n  resourceType: Resources,\n  viewOnly: boolean,\n  t: TFunction,\n) => {\n  if (resourceType === Resources.KnativeService) {\n    return (\n      <InputField\n        type={TextInputTypes.text}\n        name=\"knative-port\"\n        label={t('devconsole~Port')}\n        placeholder=\"0\"\n        isDisabled\n      />\n    );\n  }\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={fieldName}\n      label={t('devconsole~Port')}\n      isDisabled={viewOnly}\n      required\n    />\n  );\n};\n\nexport const HTTPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks, resources },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const httpHeaders = healthChecks?.[probeType]?.data?.httpGet?.httpHeaders;\n  const initialNameValuePairs = !_.isEmpty(httpHeaders)\n    ? httpHeaders.map((val) => _.values(val))\n    : [['', '']];\n  const [nameValue, setNameValue] = React.useState(initialNameValuePairs);\n  const portFieldName = `healthChecks.${probeType}.data.httpGet.port`;\n\n  const handleNameValuePairs = React.useCallback(\n    ({ nameValuePairs }) => {\n      const updatedNameValuePairs = _.compact(\n        nameValuePairs.map(([name, value]) => {\n          if (_.isObject(value)) {\n            return { name, valueFrom: value };\n          }\n          if (value.length) {\n            return { name, value };\n          }\n          return null;\n        }),\n      );\n      setNameValue(nameValuePairs);\n      setFieldValue(`healthChecks.${probeType}.data.httpGet.httpHeaders`, updatedNameValuePairs);\n    },\n    [setFieldValue, probeType],\n  );\n  return (\n    <>\n      <CheckboxField\n        name={`healthChecks.${probeType}.data.httpGet.scheme`}\n        label={t('devconsole~Use HTTPS')}\n        value=\"HTTPS\"\n        isDisabled={viewOnly}\n      />\n      <FormGroup\n        fieldId={getFieldId(`healthChecks.${probeType}.data.httpGet.httpHeaders`, 'name-value')}\n        name={`healthChecks.${probeType}.data.httpGet.httpHeaders`}\n        label={t('devconsole~HTTP Headers')}\n      >\n        <NameValueEditor\n          nameValuePairs={nameValue}\n          valueString={t('devconsole~Value')}\n          nameString={t('devconsole~Header name')}\n          addString={t('devconsole~Add header')}\n          readOnly={viewOnly}\n          allowSorting={false}\n          updateParentData={handleNameValuePairs}\n        />\n      </FormGroup>\n      <InputField\n        type={TextInputTypes.text}\n        name={`healthChecks.${probeType}.data.httpGet.path`}\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        isDisabled={viewOnly}\n      />\n      {renderPortField(portFieldName, resources, viewOnly, t)}\n    </>\n  );\n};\n\nexport const TCPRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { resources },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const portFieldName = `healthChecks.${probeType}.data.tcpSocket.port`;\n  return renderPortField(portFieldName, resources, viewOnly, t);\n};\n\nexport const CommandRequestTypeForm: React.FC<RequestTypeFormProps> = ({ probeType }) => {\n  const { t } = useTranslation();\n  const {\n    values: { healthChecks },\n  } = useFormikContext<FormikValues>();\n  const { viewOnly } = React.useContext(HealthCheckContext);\n  const commands = healthChecks?.[probeType]?.data?.exec?.command || [''];\n  return (\n    <TextColumnField\n      name={`healthChecks.${probeType}.data.exec.command`}\n      label={t('devconsole~Command')}\n      addLabel={t('devconsole~Add command')}\n      placeholder={t('devconsole~argument')}\n      helpText={t('devconsole~The command to run inside the Container.')}\n      required\n      disableDeleteRow={commands.length === 1}\n      isReadOnly={viewOnly}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { ContainerModel } from '@console/internal/models';\nimport { ResourceLimitField } from '@console/shared';\nimport { MemoryUnits, CPUUnits } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport type ResourceLimitSectionProps = {\n  hideTitle?: boolean;\n};\n\nconst ResourceLimitSection: React.FC<ResourceLimitSectionProps> = ({ hideTitle }) => {\n  const { t } = useTranslation();\n  const {\n    values: { container },\n  } = useFormikContext<FormikValues>();\n  return (\n    <FormSection\n      title={!hideTitle && t('devconsole~Resource limit')}\n      subTitle={t(\n        'devconsole~Resource limits control how much CPU and memory a container will consume on a node.',\n      )}\n      fullWidth\n    >\n      {container && (\n        <span>\n          {t('devconsole~Container')} &nbsp;\n          <ResourceIcon kind={ContainerModel.kind} /> {container}\n        </span>\n      )}\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~CPU')}</div>\n      <ResourceLimitField\n        name=\"limits.cpu.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.cpu.requestUnit\"\n        unitOptions={CPUUnits}\n        helpText={t('devconsole~The minimum amount of CPU the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.cpu.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.cpu.limitUnit\"\n        unitOptions={CPUUnits}\n        helpText={t(\n          'devconsole~The maximum amount of CPU the Container is allowed to use when running.',\n        )}\n      />\n\n      <div className=\"co-section-heading-tertiary\">{t('devconsole~Memory')}</div>\n      <ResourceLimitField\n        name=\"limits.memory.request\"\n        label={t('devconsole~Request')}\n        unitName=\"limits.memory.requestUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t('devconsole~The minimum amount of Memory the Container is guaranteed.')}\n      />\n\n      <ResourceLimitField\n        name=\"limits.memory.limit\"\n        label={t('devconsole~Limit')}\n        unitName=\"limits.memory.limitUnit\"\n        unitOptions={MemoryUnits}\n        helpText={t(\n          'devconsole~The maximum amount of Memory the Container is allowed to use when running.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ResourceLimitSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ScalingSection: React.FC<{ name: string }> = ({ name }) => {\n  const { t } = useTranslation();\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t('devconsole~Replicas are scaled manually based on CPU usage.')}\n      dataTest=\"scaling\"\n    >\n      <NumberSpinnerField\n        name={name}\n        label={t('devconsole~Replicas')}\n        helpText={t('devconsole~The number of instances of your Image.')}\n        setOutputAsIntegerFlag\n      />\n    </FormSection>\n  );\n};\n\nexport default ScalingSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { InputField, useDebounceCallback } from '@console/shared';\nimport FormSection from '../section/FormSection';\nimport SourceSecretSelector from './SourceSecretSelector';\n\nconst AdvancedGitOptions: React.FC<{\n  formContextField?: string;\n}> = ({ formContextField }) => {\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n\n  const { t } = useTranslation();\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n\n  const handleGitRefChange = useDebounceCallback((e: React.SyntheticEvent) =>\n    setFieldValue(`${fieldPrefix}git.ref`, (e.target as HTMLInputElement).value),\n  );\n\n  const handleGitDirChange = useDebounceCallback((e: React.SyntheticEvent) => {\n    setFieldValue(`${fieldPrefix}git.dir`, (e.target as HTMLInputElement).value);\n    setFieldTouched(`${fieldPrefix}git.dir`);\n  });\n\n  return (\n    <ExpandCollapse\n      textExpanded={t('devconsole~Hide advanced Git options')}\n      textCollapsed={t('devconsole~Show advanced Git options')}\n      dataTest=\"advanced-git-options\"\n    >\n      <FormSection>\n        <InputField\n          type={TextInputTypes.text}\n          name={`${fieldPrefix}git.ref`}\n          label={t('devconsole~Git reference')}\n          helpText={t('devconsole~Optional branch, tag, or commit.')}\n          onChange={handleGitRefChange}\n        />\n        <InputField\n          type={TextInputTypes.text}\n          name={`${fieldPrefix}git.dir`}\n          label={t('devconsole~Context dir')}\n          helpText={t(\n            'devconsole~Optional subdirectory for the source code, used as a context directory for build.',\n          )}\n          onChange={handleGitDirChange}\n        />\n        <SourceSecretSelector formContextField={formContextField} />\n      </FormSection>\n    </ExpandCollapse>\n  );\n};\n\nexport default AdvancedGitOptions;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { SecretTypeAbstraction } from '@console/internal/components/secrets/create-secret';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { SecretModel } from '@console/internal/models';\nimport { getFieldId } from '@console/shared';\nimport SourceSecretDropdown from '../../dropdown/SourceSecretDropdown';\nimport { secretModalLauncher } from '../CreateSecretModal';\n\nconst CREATE_SOURCE_SECRET = 'create-source-secret';\nconst CLEAR_SOURCE_SECRET = 'clear-source-secret';\n\nconst SourceSecretSelector: React.FC<{\n  formContextField?: string;\n}> = ({ formContextField }) => {\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const namespace: string = _.get(values, `${fieldPrefix}project.name`);\n  const secret: string = _.get(values, `${fieldPrefix}git.secret`);\n  const [data, loaded, loadError] = useK8sWatchResource(\n    namespace && secret\n      ? {\n          kind: SecretModel.kind,\n          namespace,\n          name: secret,\n          optional: true,\n          isList: false,\n        }\n      : null,\n  );\n\n  const handleSave = (name: string) => {\n    setFieldValue(`${fieldPrefix}git.secret`, name);\n  };\n\n  const handleDropdownChange = (key: string) => {\n    if (key === CREATE_SOURCE_SECRET) {\n      setFieldValue(`${fieldPrefix}git.secret`, secret);\n      secretModalLauncher({\n        namespace,\n        save: handleSave,\n        secretType: SecretTypeAbstraction.source,\n      });\n    } else if (key === CLEAR_SOURCE_SECRET) {\n      setFieldValue(`${fieldPrefix}git.secret`, '');\n      setFieldValue(`${fieldPrefix}git.secretResource`, {});\n    } else {\n      setFieldValue(`${fieldPrefix}git.secret`, key);\n    }\n  };\n\n  React.useEffect(() => {\n    loaded &&\n      !loadError &&\n      secret &&\n      data &&\n      setFieldValue(`${fieldPrefix}git.secretResource`, data);\n  }, [loaded, loadError, secret, data, setFieldValue, fieldPrefix]);\n\n  return (\n    <>\n      <FormGroup\n        fieldId={getFieldId('source-secret', 'dropdown')}\n        label={t('devconsole~Source Secret')}\n      >\n        <SourceSecretDropdown\n          dropDownClassName=\"dropdown--full-width\"\n          menuClassName=\"dropdown-menu--text-wrap\"\n          namespace={namespace}\n          actionItems={[\n            {\n              actionTitle: t('devconsole~Create new Secret'),\n              actionKey: CREATE_SOURCE_SECRET,\n            },\n            {\n              actionTitle: t('devconsole~No Secret'),\n              actionKey: CLEAR_SOURCE_SECRET,\n            },\n          ]}\n          selectedKey={secret}\n          title={secret}\n          onChange={handleDropdownChange}\n        />\n\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem>\n              {t('devconsole~Secret with credentials for pulling your source code.')}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default SourceSecretSelector;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Firehose } from '@console/internal/components/utils/firehose';\nimport { SecretModel } from '@console/internal/models';\nimport { ResourceDropdown } from '@console/shared';\n\ninterface SourceSecretDropdownProps {\n  dropDownClassName?: string;\n  menuClassName?: string;\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  onChange?: (key: string) => void;\n  title?: React.ReactNode;\n}\n\nconst SourceSecretDropdown: React.FC<SourceSecretDropdownProps> = (props) => {\n  const { t } = useTranslation();\n  const filterData = (item) => {\n    return item.type === 'kubernetes.io/basic-auth' || item.type === 'kubernetes.io/ssh-auth';\n  };\n  const resources = [\n    {\n      isList: true,\n      namespace: props.namespace,\n      kind: SecretModel.kind,\n      prop: 'secrets',\n    },\n  ];\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('devconsole~Select Secret name')}\n        resourceFilter={filterData}\n        dataSelector={['metadata', 'name']}\n      />\n    </Firehose>\n  );\n};\n\nexport default SourceSecretDropdown;\n","import * as React from 'react';\nimport { Tile, Flex, FlexItem, FormGroup } from '@patternfly/react-core';\nimport {\n  GithubIcon,\n  GitlabIcon,\n  BitbucketIcon,\n  GitAltIcon,\n} from '@patternfly/react-icons/dist/esm/icons';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport GiteaIcon from '../GiteaIcon';\nimport { GitReadableTypes } from '../import-types';\n\nimport './GitTypeSelector.scss';\n\ntype GitTypeSelectorProps = {\n  fieldPrefix: string;\n};\n\nconst GitTypeSelector: React.FC<GitTypeSelectorProps> = ({ fieldPrefix }) => {\n  const { values, setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const { t } = useTranslation();\n\n  const handleGitTypeChange = (gitType: GitProvider) => {\n    setFieldValue(`${fieldPrefix}git.type`, gitType, false);\n    setFieldTouched(`${fieldPrefix}git.type`, true, false);\n  };\n  const typeValue = _.get(values, `${fieldPrefix}git.type`);\n\n  return (\n    <>\n      <FormGroup label={t('devconsole~Git type')} isRequired id=\"git-type\">\n        <Flex spaceItems={{ default: 'spaceItemsSm' }}>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.GITHUB]}\n              icon={<GithubIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.GITHUB)}\n              isSelected={typeValue === GitProvider.GITHUB}\n              id=\"git-type-github\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.GITLAB]}\n              icon={<GitlabIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.GITLAB)}\n              isSelected={typeValue === GitProvider.GITLAB}\n              id=\"git-type-gitlab\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.BITBUCKET]}\n              icon={<BitbucketIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.BITBUCKET)}\n              isSelected={typeValue === GitProvider.BITBUCKET}\n              id=\"git-type-bitbucket\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.GITEA]}\n              icon={<GiteaIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.GITEA)}\n              isSelected={typeValue === GitProvider.GITEA}\n              id=\"git-type-gitea\"\n            />\n          </FlexItem>\n          <FlexItem>\n            <Tile\n              className=\"odc-git-type-selector\"\n              title={GitReadableTypes[GitProvider.UNSURE]}\n              icon={<GitAltIcon />}\n              onClick={() => handleGitTypeChange(GitProvider.UNSURE)}\n              isSelected={typeValue === GitProvider.UNSURE}\n              id=\"git-type-other\"\n            />\n          </FlexItem>\n        </Flex>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default GitTypeSelector;\n","import * as React from 'react';\nimport { FormHelperText, Button, ButtonVariant } from '@patternfly/react-core';\nimport { LevelUpAltIcon } from '@patternfly/react-icons/dist/esm/icons/level-up-alt-icon';\nimport { useTranslation } from 'react-i18next';\n\nexport interface SampleRepoProps {\n  onClick: () => void;\n}\n\nconst SampleRepo = (props) => {\n  const { t } = useTranslation();\n  return (\n    <FormHelperText>\n      <Button {...props} type=\"button\" variant={ButtonVariant.link} isInline>\n        {t('devconsole~Try sample')} <LevelUpAltIcon />\n      </Button>\n    </FormHelperText>\n  );\n};\n\nexport default SampleRepo;\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { ResourceName } from '@console/internal/components/utils';\nimport { ImageStreamTagModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { DropdownField } from '@console/shared';\nimport {\n  BuilderImage,\n  getTagDataWithDisplayName,\n  getPorts,\n} from '../../../utils/imagestream-utils';\nimport { useSafeK8s } from '../../../utils/safe-k8s-hook';\nimport BuilderImageEnvironments from './BuilderImageEnvironments';\nimport ImageStreamInfo from './ImageStreamInfo';\n\nexport interface BuilderImageTagSelectorProps {\n  selectedBuilderImage: BuilderImage;\n  selectedImageTag: string;\n  showImageInfo?: boolean;\n}\n\nconst BuilderImageTagSelector: React.FC<BuilderImageTagSelectorProps> = ({\n  selectedBuilderImage,\n  selectedImageTag,\n  showImageInfo = true,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      import: { showEditImportStrategy, selectedStrategy },\n    },\n    setFieldValue,\n    setFieldError,\n  } = useFormikContext<FormikValues>();\n  const {\n    name: imageName,\n    tags: imageTags,\n    displayName: imageDisplayName,\n    imageStreamNamespace,\n  } = selectedBuilderImage;\n\n  const tagItems = {};\n  _.each(\n    imageTags,\n    ({ name }) => (tagItems[name] = <ResourceName kind=\"ImageStreamTag\" name={name} />),\n  );\n\n  const [imageTag, displayName] = getTagDataWithDisplayName(\n    imageTags,\n    selectedImageTag,\n    imageDisplayName,\n  );\n\n  const isServerlessFunctionStrategySelected =\n    selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION;\n\n  const k8sGet = useSafeK8s();\n\n  React.useEffect(() => {\n    setFieldValue('image.tagObj', imageTag);\n    k8sGet(ImageStreamTagModel, `${imageName}:${selectedImageTag}`, imageStreamNamespace)\n      .then((imageStreamTag: K8sResourceKind) => {\n        const ports = getPorts(imageStreamTag);\n        setFieldValue('image.ports', ports);\n      })\n      .catch((err) => setFieldError('image.ports', err.message));\n    // Find a way to use useSafeK8s hooks without adding it to the deps array.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedImageTag, setFieldValue, setFieldError, imageName, imageStreamNamespace, imageTag]);\n\n  return (\n    <>\n      <div\n        style={\n          !showEditImportStrategy && !isServerlessFunctionStrategySelected\n            ? { display: 'none' }\n            : {}\n        }\n      >\n        <DropdownField\n          name=\"image.tag\"\n          label={t('devconsole~Builder Image version')}\n          items={tagItems}\n          title={tagItems[selectedImageTag]}\n          fullWidth\n          required\n        />\n      </div>\n      {imageTag && showImageInfo && <ImageStreamInfo displayName={displayName} tag={imageTag} />}\n      {!isServerlessFunctionStrategySelected && (\n        <BuilderImageEnvironments\n          name=\"image.imageEnv\"\n          imageStreamName={imageName}\n          imageStreamTag={selectedImageTag}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BuilderImageTagSelector;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineKind, PipelineRunKind, TaskRunKind } from '../../../../types';\nimport { dagreViewerComponentFactory } from '../../pipeline-topology/factories';\nimport PipelineTopologyGraph from '../../pipeline-topology/PipelineTopologyGraph';\nimport { getGraphDataModel } from '../../pipeline-topology/utils';\n\nimport './PipelineVisualization.scss';\n\ninterface PipelineTopologyVisualizationProps {\n  pipeline: PipelineKind;\n  pipelineRun?: PipelineRunKind;\n  taskRuns?: TaskRunKind[];\n}\n\nconst PipelineVisualization: React.FC<PipelineTopologyVisualizationProps> = ({\n  pipeline,\n  pipelineRun,\n  taskRuns,\n}) => {\n  const { t } = useTranslation();\n  let content: React.ReactElement;\n  const model = getGraphDataModel(pipeline, pipelineRun, taskRuns);\n\n  if (!model || (model.nodes.length === 0 && model.edges.length === 0)) {\n    // Nothing to render\n    content = (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={t('pipelines-plugin~This Pipeline has no tasks to visualize.')}\n      />\n    );\n  } else {\n    content = (\n      <PipelineTopologyGraph\n        data-test=\"pipeline-visualization\"\n        componentFactory={dagreViewerComponentFactory}\n        model={model}\n        showControlBar\n      />\n    );\n  }\n\n  return <div className=\"odc-pipeline-visualization\">{content}</div>;\n};\n\nexport default PipelineVisualization;\n","import * as React from 'react';\nimport { ComponentFactory, Model } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport PipelineVisualizationSurface from './PipelineVisualizationSurface';\n\nimport './PipelineTopologyGraph.scss';\n\ntype PipelineTopologyGraphProps = {\n  builder?: boolean;\n  model: Model;\n  componentFactory: ComponentFactory;\n  showControlBar?: boolean;\n};\n\nconst PipelineTopologyGraph: React.FC<PipelineTopologyGraphProps> = ({\n  builder,\n  model,\n  componentFactory,\n  ...props\n}) => {\n  return (\n    <div\n      className={cx('odc-pipeline-topology-graph', { builder })}\n      data-test={props['data-test'] || 'pipeline-topology-graph'}\n    >\n      <PipelineVisualizationSurface\n        model={model}\n        componentFactory={componentFactory}\n        noScrollbar={builder}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PipelineTopologyGraph);\n","import * as React from 'react';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ImportStrategy } from '@console/git-service/src';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { CheckboxField, EnvironmentField } from '@console/shared';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\n\nexport interface DeploymentConfigSectionProps {\n  namespace: string;\n  resource?: K8sResourceKind;\n  showHeader?: boolean;\n}\n\nconst DeploymentConfigSection: React.FC<DeploymentConfigSectionProps> = ({\n  namespace,\n  resource,\n  showHeader,\n}) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      resources,\n      deployment: { env },\n      import: { selectedStrategy, knativeFuncLoaded: funcLoaded },\n    },\n  } = useFormikContext<FormikValues>();\n  const deploymentConfigObj = resource || {\n    kind: 'DeploymentConfig',\n    metadata: {\n      namespace,\n    },\n  };\n\n  return (\n    <FormSection title={showHeader && t('devconsole~Deployment')} fullWidth>\n      <CheckboxField\n        name=\"deployment.triggers.image\"\n        label={t('devconsole~Auto deploy when new Image is available')}\n      />\n      {resources === Resources.OpenShift && (\n        <CheckboxField\n          name=\"deployment.triggers.config\"\n          label={t('devconsole~Auto deploy when deployment configuration changes')}\n        />\n      )}\n      {(\n        selectedStrategy.type === ImportStrategy.SERVERLESS_FUNCTION ? funcLoaded ?? false : true\n      ) ? (\n        <EnvironmentField\n          name=\"deployment.env\"\n          label={t('devconsole~Environment variables (runtime only)')}\n          envs={env}\n          obj={deploymentConfigObj}\n        />\n      ) : (\n        <LoadingBox />\n      )}\n    </FormSection>\n  );\n};\n\nexport default DeploymentConfigSection;\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, DroppableFileInputField, CheckboxField } from '@console/shared';\nimport { usePreferredRoutingOptions } from '../../user-preferences/usePreferredRoutingOptions';\nimport {\n  TerminationType,\n  PassthroughInsecureTrafficType,\n  InsecureTrafficType,\n} from '../import-types';\n\nconst SecureRoute: React.FC = () => {\n  const { t } = useTranslation();\n  const [preferredRoutingOptions, , preferredRoutingOptionsLoaded] = usePreferredRoutingOptions();\n  const { secure: secureRoute, tlsTermination, insecureTraffic } =\n    preferredRoutingOptionsLoaded && preferredRoutingOptions;\n  const {\n    values: {\n      formType,\n      route: { secure, tls },\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const terminationOptions = {\n    [TerminationType.EDGE]: t('devconsole~Edge'),\n    [TerminationType.PASSTHROUGH]: t('devconsole~Passthrough'),\n    [TerminationType.REENCRYPT]: t('devconsole~Re-encrypt'),\n  };\n  const insecureTrafficOptions =\n    tls.termination === TerminationType.PASSTHROUGH\n      ? {\n          [PassthroughInsecureTrafficType.None]: t('devconsole~None'),\n          [PassthroughInsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        }\n      : {\n          [InsecureTrafficType.None]: t('devconsole~None'),\n          [InsecureTrafficType.Allow]: t('devconsole~Allow'),\n          [InsecureTrafficType.Redirect]: t('devconsole~Redirect'),\n        };\n\n  React.useEffect(() => {\n    if (formType !== 'edit' && preferredRoutingOptionsLoaded) {\n      setFieldValue('route.secure', secureRoute, false);\n      setFieldValue('route.tls.termination', tlsTermination, false);\n      setFieldValue('route.tls.insecureEdgeTerminationPolicy', insecureTraffic, true);\n    }\n  }, [\n    formType,\n    insecureTraffic,\n    preferredRoutingOptionsLoaded,\n    secureRoute,\n    setFieldValue,\n    tlsTermination,\n  ]);\n  return (\n    <>\n      <CheckboxField\n        name=\"route.secure\"\n        label={t('devconsole~Secure Route')}\n        formLabel={t('devconsole~Security')}\n        helpText={t(\n          'devconsole~Routes can be secured using several TLS termination types for serving certificates.',\n        )}\n      />\n      {secure && (\n        <>\n          <DropdownField\n            name=\"route.tls.termination\"\n            label={t('devconsole~TLS termination')}\n            items={terminationOptions}\n            title={t('devconsole~Select termination type')}\n            fullWidth\n          />\n          <DropdownField\n            name=\"route.tls.insecureEdgeTerminationPolicy\"\n            label={t('devconsole~Insecure traffic')}\n            items={insecureTrafficOptions}\n            title={t('devconsole~Select insecure traffic type')}\n            helpText={t('devconsole~Policy for traffic on insecure schemes like HTTP.')}\n            fullWidth\n          />\n          {tls.termination && tls.termination !== 'passthrough' && (\n            <>\n              <h3>{t('devconsole~Certificates')}</h3>\n              <FormHelperText>\n                {t(\n                  \"devconsole~TLS certificates for edge and re-encrypt termination. If not specified, the router's default certificate is used.\",\n                )}\n              </FormHelperText>\n              <DroppableFileInputField\n                name=\"route.tls.certificate\"\n                label={t('devconsole~Certificate')}\n                helpText={t(\n                  'devconsole~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.key\"\n                label={t('devconsole~Private Key')}\n                helpText={t(\n                  'devconsole~The PEM format key. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              <DroppableFileInputField\n                name=\"route.tls.caCertificate\"\n                label={t('devconsole~CA certificate')}\n                helpText={t(\n                  'devconsole~The PEM format CA certificate chain. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                )}\n              />\n              {tls.termination === 'reencrypt' && (\n                <DroppableFileInputField\n                  name=\"route.tls.destinationCaCertificate\"\n                  label={t('devconsole~Destination CA Certificate')}\n                  helpText={t(\n                    'devconsole~The PEM format CA certificate chain to validate the endpoint certificate for re-encrypt termination. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n                  )}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SecureRoute;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { QUERY_PROPERTIES } from '../const';\n\ntype StateProps = {\n  application: string;\n};\ntype DispatchProps = {\n  onSetApp: (application: string) => void;\n};\ntype OwnProps = {\n  children: (desiredApplication?: string) => React.ReactNode;\n};\n\ntype QueryFocusApplicationProps = StateProps & DispatchProps & OwnProps;\n\nconst QueryFocusApplication: React.FC<QueryFocusApplicationProps> = ({\n  children,\n  application,\n  onSetApp,\n}) => {\n  const originalApp = React.useRef(application);\n  const desiredApplication = new URLSearchParams(window.location.search).get(\n    QUERY_PROPERTIES.APPLICATION,\n  );\n\n  React.useEffect(() => {\n    const originalApplication = originalApp.current;\n    const sanitizedApp = sanitizeApplicationValue(desiredApplication);\n    if (sanitizedApp && sanitizedApp !== originalApplication) {\n      onSetApp(sanitizedApp);\n    }\n\n    return () => {\n      if (application !== originalApplication) {\n        onSetApp(originalApplication);\n      }\n    };\n  }, [desiredApplication, onSetApp, originalApp, application]);\n\n  return <>{children(desiredApplication)}</>;\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n  (state: RootState): StateProps => ({\n    application: getActiveApplication(state),\n  }),\n  {\n    onSetApp: setActiveApplication,\n  },\n)(QueryFocusApplication);\n","import * as React from 'react';\nimport { observer, Node, NodeModel, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport {\n  BUILDER_NODE_ADD_RADIUS,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  FINALLY_ADD_LINK_TEXT_HEIGHT,\n  BUILDER_NODE_DECORATOR_RADIUS,\n  FINALLY_ADD_LINK_SIZE,\n  WHEN_EXPRESSION_SPACING,\n} from './const';\nimport { integralShapePath, straightPath } from './draw-utils';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport LoadingTask from './LoadingTask';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskList from './TaskList';\nimport { BuilderFinallyNodeModel } from './types';\n\nimport './BuilderFinallyNode.scss';\n\ntype BuilderFinallyNodeProps = {\n  element: Node<NodeModel, BuilderFinallyNodeModel>;\n};\n\nconst BuilderFinallyNode: React.FC<BuilderFinallyNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const { width, height } = element.getBounds();\n  const { task, namespace } = element.getData();\n\n  const {\n    addNewFinallyListNode,\n    finallyTasks = [],\n    finallyListTasks = [],\n    finallyLoadingTasks = [],\n    finallyInvalidListTasks = [],\n    onTaskSearch = () => {},\n  } = task;\n  const allTasksLength =\n    finallyTasks.length +\n    finallyListTasks.length +\n    finallyLoadingTasks.length +\n    finallyInvalidListTasks.length;\n  const nodeCenter = NODE_HEIGHT + NODE_HEIGHT / 2;\n  const leftPadding = FINALLY_NODE_PADDING + WHEN_EXPRESSION_SPACING;\n  const verticalHeight = NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING;\n  const finallyTaskLinkX =\n    FINALLY_NODE_PADDING +\n    FINALLY_NODE_PADDING / 2 +\n    (allTasksLength === 0 ? 0 : WHEN_EXPRESSION_SPACING);\n\n  const IntegralShape = ({ taskIndex }: { taskIndex: number }) => (\n    <path\n      className=\"opp-builder-finally-node__task-connectors\"\n      d={\n        nodeCenter + taskIndex * verticalHeight === height / 2\n          ? straightPath(new Point(leftPadding, height / 2), new Point(0, height / 2))\n          : integralShapePath(\n              new Point(0, height / 2),\n              new Point(leftPadding, nodeCenter + taskIndex * verticalHeight),\n            )\n      }\n    />\n  );\n\n  return (\n    <g data-test=\"builder-finally-node\">\n      <rect className=\"opp-builder-finally-node\" width={width} height={height} rx=\"20\" ry=\"20\" />\n\n      {finallyTasks.map((ft, i) => (\n        <g key={ft.name}>\n          <IntegralShape taskIndex={i} />\n          <g\n            data-test={`finally-task-node ${ft.name}`}\n            transform={`translate(${leftPadding}, ${\n              NODE_HEIGHT * i + FINALLY_NODE_VERTICAL_SPACING * i + FINALLY_NODE_PADDING\n            })`}\n            onClick={ft.onTaskSelection}\n          >\n            <PipelineVisualizationTask\n              task={ft}\n              namespace={namespace}\n              disableTooltip\n              selected={ft.selected}\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              isFinallyTask\n            />\n            {ft.error && (\n              <ErrorNodeDecorator\n                x={BUILDER_NODE_ADD_RADIUS / 2}\n                y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n                errorStr={ft.error}\n              />\n            )}\n          </g>\n        </g>\n      ))}\n      {finallyLoadingTasks.map((fld, i) => (\n        <g key={fld.name} data-test={`finally-loading-task-list-node ${fld.name}`}>\n          <IntegralShape taskIndex={i + finallyTasks.length} />\n          <g\n            transform={`translate(${leftPadding},\n          ${\n            NODE_HEIGHT * (i + finallyTasks.length) +\n            FINALLY_NODE_VERTICAL_SPACING * (i + finallyTasks.length) +\n            FINALLY_NODE_PADDING\n          })`}\n          >\n            <LoadingTask width={NODE_WIDTH} height={NODE_HEIGHT} name={fld.name} key={fld.name} />\n          </g>\n        </g>\n      ))}\n      {finallyInvalidListTasks.map((ivl, i) => (\n        <g key={ivl.name} data-test={`finally-invalid-task-list-node ${ivl.name}`}>\n          <IntegralShape taskIndex={i + finallyTasks.length + finallyLoadingTasks.length} />\n          <g\n            transform={`translate(${leftPadding},\n              ${\n                NODE_HEIGHT * (i + finallyTasks.length + finallyLoadingTasks.length) +\n                FINALLY_NODE_VERTICAL_SPACING *\n                  (i + finallyTasks.length + finallyLoadingTasks.length) +\n                FINALLY_NODE_PADDING\n              })`}\n          >\n            <TaskList\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              onRemoveTask={ivl.onRemoveTask}\n              onNewTask={ivl.convertList}\n              onTaskSearch={onTaskSearch}\n              unselectedText={ivl.name}\n            />\n            <ErrorNodeDecorator\n              x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n              y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n              errorStr={t('pipelines-plugin~Task does not exist')}\n            />\n          </g>\n        </g>\n      ))}\n\n      {finallyListTasks.map((flt, i) => (\n        <g key={flt.name} data-test={`finally-task-list-node ${flt.name}`}>\n          <IntegralShape\n            taskIndex={\n              i + finallyTasks.length + finallyLoadingTasks.length + finallyInvalidListTasks.length\n            }\n          />\n          <g\n            transform={`translate(${leftPadding},\n              ${\n                NODE_HEIGHT *\n                  (i +\n                    finallyTasks.length +\n                    finallyLoadingTasks.length +\n                    finallyInvalidListTasks.length) +\n                FINALLY_NODE_VERTICAL_SPACING *\n                  (i +\n                    finallyTasks.length +\n                    finallyLoadingTasks.length +\n                    finallyInvalidListTasks.length) +\n                FINALLY_NODE_PADDING\n              })`}\n          >\n            <TaskList\n              width={NODE_WIDTH}\n              height={NODE_HEIGHT}\n              onRemoveTask={flt.onRemoveTask}\n              onNewTask={flt.convertList}\n              onTaskSearch={onTaskSearch}\n            />\n          </g>\n        </g>\n      ))}\n      {\n        <g\n          transform={`translate(${finallyTaskLinkX}, ${\n            allTasksLength * NODE_HEIGHT +\n            (allTasksLength - 1) * FINALLY_NODE_VERTICAL_SPACING +\n            NODE_HEIGHT +\n            FINALLY_ADD_LINK_TEXT_HEIGHT +\n            FINALLY_NODE_PADDING\n          })`}\n          style={{ cursor: 'pointer' }}\n          onClick={addNewFinallyListNode}\n        >\n          <g>\n            <PlusNodeDecorator\n              x={0}\n              y={FINALLY_ADD_LINK_TEXT_HEIGHT - FINALLY_ADD_LINK_SIZE}\n              tooltip={t('pipelines-plugin~Add finally task')}\n            />\n            <text\n              x={FINALLY_ADD_LINK_SIZE}\n              data-test=\"add-finally-node\"\n              className=\"opp-builder-finally-node__text\"\n            >\n              {t('pipelines-plugin~Add finally task')}\n            </text>\n          </g>\n        </g>\n      }\n    </g>\n  );\n};\n\nexport default observer(BuilderFinallyNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ComputedStatus } from '../../../types';\nimport { NODE_HEIGHT } from './const';\nimport { getWhenExpressionDiamondState } from './utils';\n\nimport './WhenExpressionDecorator.scss';\n\ntype WhenExpressionDecoratorProps = {\n  width: number;\n  height: number;\n  leftOffset?: number;\n  stroke?: string;\n  status: ComputedStatus;\n  appendLine?: boolean;\n  enableTooltip?: boolean;\n  isFinallyTask: boolean;\n  isPipelineRun: boolean;\n};\n\nconst WhenExpressionDecorator: React.FC<WhenExpressionDecoratorProps> = ({\n  width,\n  height,\n  enableTooltip,\n  appendLine = false,\n  status,\n  leftOffset = 2,\n  isFinallyTask,\n  isPipelineRun,\n}) => {\n  const nodeRef = React.useRef();\n  const rotation = 45; // 45deg\n  const { tooltipContent, diamondColor } = getWhenExpressionDiamondState(\n    status,\n    isPipelineRun,\n    isFinallyTask,\n  );\n  const diamondHeight =\n    Math.round(width * Math.sin(rotation)) + Math.round(height * Math.cos(rotation));\n  const diamondNode = (\n    <g\n      transform={`translate(-${width * leftOffset}, ${NODE_HEIGHT / 2 - diamondHeight / 2})`}\n      ref={nodeRef}\n    >\n      <rect\n        data-test=\"diamond-decorator\"\n        className=\"opp-when-expression-decorator-diamond\"\n        width={width}\n        height={height}\n        fill={diamondColor}\n        stroke={isPipelineRun ? diamondColor : 'var(--pf-v5-global--BorderColor--light-100)'}\n      />\n      {appendLine && (\n        <line\n          x1={diamondHeight / 2}\n          y1={diamondHeight / 2}\n          x2={width * leftOffset}\n          y2={diamondHeight / 2}\n          stroke=\"var(--pf-v5-global--BorderColor--light-100)\"\n        />\n      )}\n    </g>\n  );\n\n  return enableTooltip ? (\n    <Tooltip\n      triggerRef={nodeRef}\n      position=\"bottom\"\n      enableFlip={false}\n      content={<div data-test=\"when-expression-tooltip\">{tooltipContent}</div>}\n    >\n      {diamondNode}\n    </Tooltip>\n  ) : (\n    diamondNode\n  );\n};\n\nexport default WhenExpressionDecorator;\n","export interface Vertex {\n  name: string;\n  level: number;\n  dependancy: {};\n  dependancyNames: string[];\n  hasOutgoing: boolean;\n  data: any;\n}\n\ntype Vertices = Map<string, Vertex>;\n\nexport class DAG {\n  names: string[];\n\n  vertices: Vertices;\n\n  constructor() {\n    this.names = [];\n    this.vertices = new Map();\n  }\n\n  private visit(\n    vertex: Vertex,\n    fn: (v: Vertex, path: string[]) => void,\n    visited?: any,\n    path?: string[],\n  ) {\n    const { name } = vertex;\n    const vertices = vertex.dependancy;\n    const names = vertex.dependancyNames;\n    const len = names.length;\n\n    if (!visited) {\n      // eslint-disable-next-line no-param-reassign\n      visited = new Map();\n    }\n    if (!path) {\n      // eslint-disable-next-line no-param-reassign\n      path = [];\n    }\n    if (visited.has(name)) {\n      return;\n    }\n    path.push(name);\n    visited.set(name, true);\n    for (let i = 0; i < len; i++) {\n      this.visit(vertices[names[i]], fn, visited, path);\n    }\n    fn(vertex, path);\n    path.pop();\n  }\n\n  private map(name: string, data: any) {\n    const vertex = this.addVertex(name);\n    vertex.data = data;\n  }\n\n  addVertex(name: string) {\n    if (!name) {\n      return null;\n    }\n    if (this.vertices.has(name)) {\n      return this.vertices.get(name);\n    }\n\n    const vertex: Vertex = {\n      name,\n      level: 0,\n      dependancy: {},\n      dependancyNames: [],\n      hasOutgoing: false,\n      data: {},\n    };\n    this.vertices.set(name, vertex);\n    this.names.push(name);\n    return vertex;\n  }\n\n  addEdge(source: string, target: string): void {\n    if (!source || !target || source === target) {\n      return;\n    }\n    const fromNode = this.addVertex(source);\n    const toNode = this.addVertex(target);\n\n    if (toNode.dependancy[source]) {\n      return;\n    }\n\n    const checkCycle = (vertex: Vertex, path: string[]) => {\n      if (vertex.name === target) {\n        throw new Error(`cycle detected: ${path.reverse().join(' --> ')} --> ${target}`);\n      } else {\n        vertex.level = path.length;\n      }\n    };\n    this.visit(fromNode, checkCycle);\n    fromNode.hasOutgoing = true;\n    toNode.dependancy[source] = fromNode;\n    toNode.dependancyNames.push(source);\n  }\n\n  addEdges(name: string, data: any, before: string | string[], after: string | string[]): void {\n    this.map(name, data);\n\n    if (before) {\n      if (typeof before === 'string') {\n        this.addEdge(name, before);\n      } else {\n        before.forEach((b) => this.addEdge(name, b));\n      }\n    }\n    if (after) {\n      if (typeof after === 'string') {\n        this.addEdge(after, name);\n      } else {\n        after.forEach((a) => this.addEdge(a, name));\n      }\n    }\n  }\n\n  topologicalSort(fn: any): void {\n    const visited = new Map();\n    const { vertices } = this;\n    const { names } = this;\n    const len = names.length;\n\n    for (let i = 0; i < len; i++) {\n      const vertex: Vertex = vertices.get(names[i]);\n      if (!vertex.hasOutgoing) {\n        this.visit(vertex, fn, visited);\n      }\n    }\n  }\n\n  printGraph() {\n    const orderedNodes = [];\n    this.topologicalSort((v, t) => {\n      v.data.stage = this.names.length - t.length;\n      orderedNodes.push(v.name);\n    });\n    // eslint-disable-next-line no-console\n    console.log(orderedNodes.join(' --> '));\n    return orderedNodes.join(' --> ');\n  }\n}\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { InProgressIcon } from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './InstallingNodeDecorator.scss';\n\ntype InstallingNodeDecoratorProps = {\n  content: string;\n  x: number;\n  y: number;\n};\nconst InstallingNodeDecorator: React.FC<InstallingNodeDecoratorProps> = ({ content, x, y }) => {\n  const iconRef = React.useRef();\n  return (\n    <Tooltip triggerRef={iconRef} content={content}>\n      <g\n        ref={iconRef}\n        className=\"opp-installing-node-decorator\"\n        transform={`translate(${x}, ${y})`}\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={BUILDER_NODE_DECORATOR_RADIUS}\n          className=\"opp-installing-node-decorator__circle\"\n        />\n        <g transform=\"translate(-5, -7)\">\n          <InProgressIcon className=\"fa-spin\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default InstallingNodeDecorator;\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport { TrashIcon } from '@patternfly/react-icons/dist/esm/icons/trash-icon';\nimport { global_palette_black_500 as greyColor } from '@patternfly/react-tokens';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\n\nimport './RemoveNodeDecorator.scss';\n\ntype RemoveNodeDecoratorProps = {\n  content: string;\n  x: number;\n  y: number;\n  removeCallback?: () => void;\n};\n\nconst RemoveNodeDecorator: React.FC<RemoveNodeDecoratorProps> = ({\n  content,\n  x,\n  y,\n  removeCallback = () => {},\n}) => {\n  const trashRef = React.useRef();\n  return (\n    <Tooltip triggerRef={trashRef} content={content}>\n      <g\n        ref={trashRef}\n        className=\"opp-remove-node-decorator\"\n        transform={`translate(${x}, ${y})`}\n        onClick={(e) => {\n          e.stopPropagation();\n          removeCallback();\n        }}\n        data-id=\"delete-task\"\n      >\n        <circle cx={0} cy={0} r={BUILDER_NODE_DECORATOR_RADIUS} fill={greyColor.value} />\n        <g transform=\"translate(-6, -6)\">\n          <TrashIcon color=\"white\" />\n        </g>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default RemoveNodeDecorator;\n","import * as React from 'react';\nimport { TooltipPosition } from '@patternfly/react-core';\nimport { Node, NodeModel, observer, useHover } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AddNodeDirection,\n  BUILDER_NODE_ADD_RADIUS,\n  BUILDER_NODE_DECORATOR_RADIUS,\n  BUILDER_NODE_ADD_PADDING,\n} from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport PlusNodeDecorator from './PlusNodeDecorator';\nimport TaskNode from './TaskNode';\nimport { BuilderNodeModelData } from './types';\n\ntype BuilderNodeProps = {\n  element: Node<NodeModel, BuilderNodeModelData>;\n};\n\nconst BuilderNode: React.FC<BuilderNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const [showAdd, hoverRef] = useHover();\n  const { width, height } = element.getBounds();\n  const data = element.getData();\n  const { error, onAddNode, onNodeSelection } = data;\n\n  return (\n    <g className=\"odc-builder-node\" data-test={`builder-node ${data.task.name}`} ref={hoverRef}>\n      <rect\n        x={-BUILDER_NODE_ADD_RADIUS * 2}\n        y={0}\n        width={width + BUILDER_NODE_ADD_RADIUS * 4}\n        height={height + BUILDER_NODE_ADD_RADIUS * 2}\n        fill=\"transparent\"\n      />\n      <g onClick={() => onNodeSelection(data)}>\n        <TaskNode element={element} disableTooltip />\n        {error && (\n          <ErrorNodeDecorator\n            x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n            y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n            errorStr={error}\n          />\n        )}\n      </g>\n      <g style={{ display: showAdd ? 'block' : 'none' }}>\n        <PlusNodeDecorator\n          data-test=\"add-after\"\n          x={width + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip={t('pipelines-plugin~Add a sequential task after this task')}\n          onClick={() => onAddNode(AddNodeDirection.AFTER)}\n        />\n        <PlusNodeDecorator\n          data-test=\"add-before\"\n          x={-BUILDER_NODE_ADD_RADIUS - BUILDER_NODE_ADD_PADDING}\n          y={height / 2}\n          tooltip={t('pipelines-plugin~Add a sequential task before this task')}\n          onClick={() => onAddNode(AddNodeDirection.BEFORE)}\n        />\n        <PlusNodeDecorator\n          data-test=\"add-parallel\"\n          x={width / 2}\n          y={height + BUILDER_NODE_ADD_RADIUS + BUILDER_NODE_ADD_PADDING}\n          tooltip={t('pipelines-plugin~Add a parallel task')}\n          tooltipPosition={TooltipPosition.bottom}\n          onClick={() => onAddNode(AddNodeDirection.PARALLEL)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default observer(BuilderNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\nimport { global_palette_black_500 as customTaskColor } from '@patternfly/react-tokens/dist/js/global_palette_black_500';\nimport { observer, Node, NodeModel, useHover, createSvgIdUrl } from '@patternfly/react-topology';\nimport * as cx from 'classnames';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  K8sResourceKind,\n  WatchK8sResults,\n  getGroupVersionKindForModel,\n} from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { useK8sWatchResources } from '@console/dynamic-plugin-sdk/src/utils/k8s/hooks';\nimport { resourcePathFromModel, truncateMiddle } from '@console/internal/components/utils';\nimport { CustomRunModelV1Beta1 } from '@console/pipelines-plugin/src/models';\nimport { SvgDropShadowFilter } from '@console/topology/src/components/svg';\nimport { TaskKind, CustomRunKind } from '../../../types';\nimport { TaskNodeModelData } from './types';\n\nimport './CustomTaskNode.scss';\n\ntype CustomTaskNodeProps = {\n  element: Node<NodeModel, TaskNodeModelData>;\n  disableTooltip?: boolean;\n};\n\ntype WatchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind;\n};\n\ninterface CustomTaskProps {\n  pipelineRunName?: string;\n  name: string;\n  loaded?: boolean;\n  task?: {\n    data: TaskKind;\n  };\n  namespace: string;\n  disableVisualizationTooltip?: boolean;\n  width: number;\n  height: number;\n  customTask?: K8sResourceKind;\n}\n\nconst FILTER_ID = 'SvgTaskDropShadowFilterId';\n\nconst CustomTaskComponent: React.FC<CustomTaskProps> = ({\n  pipelineRunName,\n  namespace,\n  task,\n  name,\n  disableVisualizationTooltip,\n  width,\n  height,\n  customTask,\n}) => {\n  const { t } = useTranslation();\n  const showStatusState: boolean = !!pipelineRunName;\n  const visualName = name || _.get(task, ['metadata', 'name'], '');\n  const nameRef = React.useRef();\n  const pillRef = React.useRef();\n\n  const path = `${resourcePathFromModel(\n    CustomRunModelV1Beta1,\n    customTask?.metadata?.name,\n    namespace,\n  )}`;\n  const enableLogLink = !!path;\n  const [hover, hoverRef] = useHover();\n  const truncatedVisualName = React.useMemo(\n    () => truncateMiddle(visualName, { length: showStatusState ? 11 : 14, truncateEnd: true }),\n    [visualName, showStatusState],\n  );\n\n  const renderVisualName = (\n    <text\n      ref={nameRef}\n      x={showStatusState ? 30 : width / 2}\n      y={height / 2 + 1}\n      className={cx('odc-pipeline-vis-task-text', {\n        'is-text-center': !pipelineRunName,\n        'is-linked': enableLogLink,\n      })}\n    >\n      {truncatedVisualName}\n    </text>\n  );\n\n  let taskPill = (\n    <g ref={hoverRef}>\n      <SvgDropShadowFilter dy={1} id={FILTER_ID} />\n      <rect\n        filter={hover ? createSvgIdUrl(FILTER_ID) : ''}\n        width={width}\n        height={height}\n        rx={5}\n        className={cx('odc-pipeline-vis-task', {\n          'is-selected': !!pipelineRunName && hover,\n          'is-linked': !!pipelineRunName && enableLogLink,\n        })}\n        style={{\n          stroke: customTaskColor.value,\n        }}\n      />\n      {visualName !== truncatedVisualName && disableVisualizationTooltip ? (\n        <Tooltip triggerRef={nameRef} content={visualName}>\n          {renderVisualName}\n        </Tooltip>\n      ) : (\n        renderVisualName\n      )}\n\n      {showStatusState && (\n        <>\n          <svg\n            width={30}\n            height={30}\n            viewBox=\"-10 -7 30 30\"\n            style={{\n              color: customTaskColor.value,\n            }}\n          >\n            {<QuestionCircleIcon />}\n          </svg>\n        </>\n      )}\n    </g>\n  );\n\n  if (!disableVisualizationTooltip) {\n    taskPill = (\n      <Tooltip\n        triggerRef={pillRef}\n        position=\"bottom\"\n        enableFlip={false}\n        content={t('pipelines-plugin~Custom Task')}\n      >\n        <g ref={pillRef}>{taskPill}</g>\n      </Tooltip>\n    );\n  }\n  return (\n    <g className={cx('odc-pipeline-topology__task-node', { 'is-link': enableLogLink })}>\n      {enableLogLink ? <Link to={path}>{taskPill}</Link> : taskPill}\n    </g>\n  );\n};\n\nconst CustomTaskNode: React.FC<CustomTaskNodeProps> = ({ element, disableTooltip }) => {\n  const { height, width } = element.getBounds();\n\n  const { pipeline, pipelineRun, task } = element.getData();\n\n  const customTaskName = `${pipelineRun?.metadata?.name}-${task?.name}`;\n\n  const watchedResources = {\n    customRun: {\n      groupVersionKind: getGroupVersionKindForModel(CustomRunModelV1Beta1),\n      name: customTaskName,\n      namespace: pipeline?.metadata?.namespace,\n      prop: 'task',\n    },\n  };\n\n  const resourcesData: WatchK8sResults<WatchResource> = useK8sWatchResources<WatchResource>(\n    watchedResources,\n  );\n\n  const taskComponent: JSX.Element = (\n    <CustomTaskComponent\n      pipelineRunName={pipelineRun?.metadata?.name}\n      name={task.name || ''}\n      task={task.taskSpec && { data: { spec: task.taskSpec } }}\n      namespace={pipeline?.metadata?.namespace}\n      disableVisualizationTooltip={disableTooltip}\n      width={width}\n      height={height}\n      customTask={resourcesData.customRun?.data as CustomRunKind}\n    />\n  );\n  return taskComponent;\n};\n\nexport default React.memo(observer(CustomTaskNode));\n","import * as React from 'react';\nimport { observer, Node, NodeModel, Point } from '@patternfly/react-topology';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { PipelineVisualizationTask } from '../detail-page-tabs/pipeline-details/PipelineVisualizationTask';\nimport {\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  FINALLY_NODE_PADDING,\n  FINALLY_NODE_VERTICAL_SPACING,\n  WHEN_EXPRESSION_SPACING,\n} from './const';\nimport { integralShapePath, straightPath } from './draw-utils';\nimport { FinallyNodeModel } from './types';\n\nimport './FinallyNode.scss';\n\ntype FinallyNodeProps = {\n  element: Node<NodeModel, FinallyNodeModel>;\n};\n\nconst FinallyNode: React.FC<FinallyNodeProps> = ({ element }) => {\n  const { task, pipeline, pipelineRun } = element.getData();\n  const { width, height } = element.getBounds();\n  const nodeCenter = NODE_HEIGHT + NODE_HEIGHT / 2;\n  const leftPadding = FINALLY_NODE_PADDING + WHEN_EXPRESSION_SPACING;\n  const verticalHeight = NODE_HEIGHT + FINALLY_NODE_VERTICAL_SPACING;\n\n  const { finallyTasks = [] } = task;\n  return (\n    <g transform=\"translate(0.5, 0.5)\" data-test=\"finally-node\">\n      <rect\n        className=\"opp-finally-node\"\n        strokeWidth={1}\n        width={width}\n        height={height}\n        rx=\"20\"\n        ry=\"20\"\n      />\n\n      {finallyTasks.map((ft, i) => {\n        return (\n          <g key={ft.name} data-test={`finally-task-node ${ft.name}`}>\n            <path\n              className=\"opp-finally-node__connector\"\n              d={\n                nodeCenter + i * verticalHeight === height / 2\n                  ? straightPath(new Point(leftPadding, height / 2), new Point(0, height / 2))\n                  : integralShapePath(\n                      new Point(0, height / 2),\n                      new Point(leftPadding, nodeCenter + i * verticalHeight),\n                    )\n              }\n            />\n            <g\n              transform={`translate(${leftPadding}, ${\n                NODE_HEIGHT * i + FINALLY_NODE_VERTICAL_SPACING * i + FINALLY_NODE_PADDING\n              })`}\n            >\n              <PipelineVisualizationTask\n                pipelineRunName={pipelineRun?.metadata?.name}\n                task={ft}\n                pipelineRunStatus={pipelineRun && pipelineRunFilterReducer(pipelineRun)}\n                namespace={pipeline?.metadata?.namespace}\n                selected={ft.selected}\n                width={NODE_WIDTH}\n                height={NODE_HEIGHT}\n                isFinallyTask\n                isSkipped={pipelineRun?.status?.skippedTasks?.some((t) => t.name === ft.name)}\n              />\n            </g>\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nexport default observer(FinallyNode);\n","import * as React from 'react';\nimport { Node, NodeModel, observer } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { BUILDER_NODE_DECORATOR_RADIUS } from './const';\nimport ErrorNodeDecorator from './ErrorNodeDecorator';\nimport TaskListNode from './TaskListNode';\nimport { TaskListNodeModelData } from './types';\n\ntype InvalidTaskListNodeProps = {\n  element: Node<NodeModel, TaskListNodeModelData>;\n};\n\nconst InvalidTaskListNode: React.FC<InvalidTaskListNodeProps> = ({ element }) => {\n  const { t } = useTranslation();\n  const {\n    task: { name },\n  } = element.getData();\n\n  return (\n    <g>\n      <TaskListNode element={element} unselectedText={name} />\n      <ErrorNodeDecorator\n        x={BUILDER_NODE_DECORATOR_RADIUS / 2}\n        y={BUILDER_NODE_DECORATOR_RADIUS / 4}\n        errorStr={t('pipelines-plugin~Task does not exist')}\n      />\n    </g>\n  );\n};\n\nexport default observer(InvalidTaskListNode);\n","import * as React from 'react';\nimport { observer, Node } from '@patternfly/react-topology';\nimport LoadingTask from './LoadingTask';\n\nconst LoadingNode: React.FC<{ element: Node }> = ({ element }) => {\n  const { height, width } = element.getBounds();\n  const {\n    task: { name },\n  } = element.getData();\n\n  return <LoadingTask {...{ width, height, name }} />;\n};\n\nexport default observer(LoadingNode);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  DEFAULT_LAYER,\n  DEFAULT_WHEN_OFFSET,\n  Layer,\n  Node,\n  ScaleDetailsLevel,\n  TaskNode,\n  TOP_LAYER,\n  useDetailsLevel,\n  useHover,\n  WhenDecorator,\n  WithContextMenuProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { ClusterTaskModel, PipelineRunModel, TaskModel } from '../../../models';\nimport { ComputedStatus, TaskKind } from '../../../types';\nimport { pipelineRunFilterReducer } from '../../../utils/pipeline-filter-reducer';\nimport { FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER } from '../const';\nimport {\n  createStepStatus,\n  StepStatus,\n} from '../detail-page-tabs/pipeline-details/pipeline-step-utils';\nimport { PipelineVisualizationStepList } from '../detail-page-tabs/pipeline-details/PipelineVisualizationStepList';\nimport { NodeType } from './const';\nimport { getTooltipContent } from './utils';\n\nimport './PipelineTaskNode.scss';\n\ntype PipelineTaskNodeProps = {\n  element: Node;\n} & WithContextMenuProps &\n  WithSelectionProps;\n\nconst PipelineTaskNode: React.FunctionComponent<PipelineTaskNodeProps> = ({\n  element,\n  onContextMenu,\n  contextMenuOpen,\n  ...rest\n}) => {\n  const data = element.getData();\n  const [hover, hoverRef] = useHover();\n  const taskRef = React.useRef();\n  const detailsLevel = useDetailsLevel();\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER = useFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n  const isFinallyTask = element.getType() === NodeType.FINALLY_NODE;\n  let resources;\n  if (\n    !IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER &&\n    data.task?.taskRef?.kind === ClusterTaskModel.kind\n  ) {\n    resources = {\n      kind: referenceForModel(ClusterTaskModel),\n      name: data.task.taskRef.name,\n      prop: 'task',\n    };\n  } else if (data.task?.taskRef) {\n    resources = {\n      kind: referenceForModel(TaskModel),\n      name: data.task.taskRef.name,\n      namespace: data.pipeline.metadata.namespace,\n      prop: 'task',\n    };\n  }\n  const [task] = useK8sWatchResource<TaskKind>(resources);\n\n  const computedTask = task && Object.keys(task).length ? task : data.task;\n  const stepList =\n    computedTask?.status?.steps || computedTask?.spec?.steps || computedTask?.taskSpec?.steps || [];\n\n  const pipelineRunStatus = data.pipelineRun && pipelineRunFilterReducer(data.pipelineRun);\n  const isSkipped = !!(\n    computedTask &&\n    data.pipelineRun?.status?.skippedTasks?.some(\n      (skippedTask) => skippedTask.name === data.task.name,\n      (skippedTask) => skippedTask.name === computedTask.name,\n    )\n  );\n\n  const taskStatus = data.task?.status || {\n    duration: '',\n    reason: ComputedStatus.Idle,\n  };\n  if (\n    pipelineRunStatus === ComputedStatus.Failed ||\n    pipelineRunStatus === ComputedStatus.Cancelled\n  ) {\n    if (\n      data.task?.status?.reason === ComputedStatus.Idle ||\n      data.task?.status?.reason === ComputedStatus.Pending\n    ) {\n      taskStatus.reason = ComputedStatus.Cancelled;\n    }\n  }\n  if (isSkipped) {\n    taskStatus.reason = ComputedStatus.Skipped;\n  }\n\n  const stepStatusList: StepStatus[] = stepList.map((step) => createStepStatus(step, taskStatus));\n  const { pipelineRun } = data;\n  const succeededStepsCount = stepStatusList.filter(\n    ({ status }) => status === ComputedStatus.Succeeded,\n  ).length;\n\n  const badge =\n    stepStatusList.length > 0 && data.status\n      ? `${succeededStepsCount}/${stepStatusList.length}`\n      : null;\n\n  const passedData = React.useMemo(() => {\n    const newData = { ...data };\n    Object.keys(newData).forEach((key) => {\n      if (newData[key] === undefined) {\n        delete newData[key];\n      }\n    });\n    return newData;\n  }, [data]);\n\n  const hasTaskIcon = !!(data.taskIconClass || data.taskIcon);\n  const tooltipContent = getTooltipContent(data.task?.status?.reason);\n  const whenDecorator = data.whenStatus ? (\n    <WhenDecorator\n      element={element}\n      status={data.whenStatus}\n      leftOffset={\n        hasTaskIcon\n          ? DEFAULT_WHEN_OFFSET + (element.getBounds().height - 4) * 0.75\n          : DEFAULT_WHEN_OFFSET\n      }\n      toolTip={tooltipContent}\n    />\n  ) : null;\n\n  const { name: plrName, namespace } = pipelineRun?.metadata;\n  const path = plrName\n    ? `${resourcePathFromModel(\n        PipelineRunModel,\n        plrName,\n        namespace,\n      )}/logs?taskName=${element.getLabel()}`\n    : undefined;\n\n  const enableLogLink =\n    data.status !== ComputedStatus.Idle &&\n    data.status !== ComputedStatus.Pending &&\n    data.status !== ComputedStatus.Cancelled &&\n    data.status !== ComputedStatus.Skipped &&\n    !!path;\n\n  const taskNode = (\n    <TaskNode\n      className=\"odc-pipeline-topology__task-node\"\n      element={element}\n      onContextMenu={data.showContextMenu ? onContextMenu : undefined}\n      contextMenuOpen={contextMenuOpen}\n      scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n      hideDetailsAtMedium\n      {...passedData}\n      {...rest}\n      badge={badge}\n      truncateLength={element.getData()?.label?.length}\n    >\n      {whenDecorator}\n    </TaskNode>\n  );\n\n  const classes = classNames('odc-pipeline-topology__task-node', { 'is-link': enableLogLink });\n  return (\n    <Layer\n      id={\n        detailsLevel !== ScaleDetailsLevel.high && (hover || contextMenuOpen)\n          ? TOP_LAYER\n          : DEFAULT_LAYER\n      }\n    >\n      <g data-test={`task ${element.getLabel()}`} className={classes} ref={hoverRef}>\n        <Tooltip\n          enableFlip\n          triggerRef={taskRef}\n          content={\n            <PipelineVisualizationStepList\n              isSpecOverview={!data.status}\n              taskName={element.getLabel()}\n              steps={stepStatusList}\n              isFinallyTask={isFinallyTask}\n            />\n          }\n        >\n          <g ref={taskRef}>{enableLogLink ? <Link to={path}>{taskNode}</Link> : taskNode}</g>\n        </Tooltip>\n      </g>\n    </Layer>\n  );\n};\n\nexport default React.memo(observer(PipelineTaskNode));\n","import * as React from 'react';\nimport { Edge, Point } from '@patternfly/react-topology';\nimport { integralShapePath } from './draw-utils';\n\nconst TaskEdge: React.FC<{ element: Edge }> = ({ element }) => {\n  const startPoint: Point = element.getStartPoint();\n  const endPoint: Point = element.getEndPoint();\n  const sourceNode = element.getSource();\n  const targetNode = element.getTarget();\n\n  return (\n    <path\n      d={integralShapePath(\n        startPoint.clone().translate(sourceNode.getBounds().width / 2 - 1, 0),\n        endPoint.clone().translate(-targetNode.getBounds().width / 2, 0),\n      )}\n      stroke=\"var(--pf-v5-global--BorderColor--light-100)\"\n      fill=\"none\"\n      transform=\"translate(0.5,0.5)\"\n    />\n  );\n};\n\nexport default TaskEdge;\n","import * as React from 'react';\nimport {\n  GRAPH_LAYOUT_END_EVENT,\n  Model,\n  Node,\n  Visualization,\n  VisualizationSurface,\n  VisualizationProvider,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  TopologyControlBar,\n  TopologyView,\n  Controller,\n  GRAPH_POSITION_CHANGE_EVENT,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport Measure from 'react-measure';\nimport {\n  DROP_SHADOW_SPACING,\n  NODE_HEIGHT,\n  TOOLBAR_HEIGHT,\n  GRAPH_MIN_WIDTH,\n  PipelineLayout,\n  GRAPH_MAX_HEIGHT_PERCENT,\n} from './const';\nimport { layoutFactory } from './factories';\nimport { getLayoutData } from './utils';\n\ntype PipelineVisualizationSurfaceProps = {\n  model: Model;\n  componentFactory: ComponentFactory;\n  showControlBar?: boolean;\n  noScrollbar?: boolean;\n};\n\nconst PipelineVisualizationSurface: React.FC<PipelineVisualizationSurfaceProps> = ({\n  model,\n  componentFactory,\n  showControlBar = false,\n  noScrollbar = false,\n}) => {\n  const [vis, setVis] = React.useState<Controller>(null);\n  const [maxSize, setMaxSize] = React.useState(null);\n  const [width, setWidth] = React.useState(null);\n  const storedGraphModel = React.useRef(null);\n\n  const layout: PipelineLayout = model.graph.layout as PipelineLayout;\n\n  const onLayoutUpdate = React.useCallback(\n    (nodes: Node[]) => {\n      const nodeBounds = nodes.map((node) => node.getBounds());\n      const maxWidth = Math.floor(\n        nodeBounds.map((bounds) => bounds.width).reduce((w1, w2) => Math.max(w1, w2), 0),\n      );\n      const maxHeight = Math.floor(\n        nodeBounds.map((bounds) => bounds.height).reduce((h1, h2) => Math.max(h1, h2), 0),\n      );\n      const maxObject = nodeBounds.find((nb) => nb.height === maxHeight);\n\n      const maxX = Math.floor(\n        nodeBounds.map((bounds) => bounds.x).reduce((x1, x2) => Math.max(x1, x2), 0),\n      );\n      const maxY = Math.floor(\n        nodeBounds.map((bounds) => bounds.y).reduce((y1, y2) => Math.max(y1, y2), 0),\n      );\n\n      let horizontalMargin = 0;\n      let verticalMargin = 0;\n      if (layout) {\n        horizontalMargin = getLayoutData(layout).marginx || 0;\n        verticalMargin = getLayoutData(layout).marginy || 0;\n      }\n      const finallyTaskHeight = maxObject.y + maxHeight + DROP_SHADOW_SPACING + verticalMargin * 2;\n      const regularTaskHeight = maxY + NODE_HEIGHT + DROP_SHADOW_SPACING + verticalMargin * 2;\n\n      setMaxSize({\n        height: Math.max(finallyTaskHeight, regularTaskHeight) + TOOLBAR_HEIGHT,\n        width: Math.max(\n          maxX + maxWidth + DROP_SHADOW_SPACING + horizontalMargin * 2,\n          GRAPH_MIN_WIDTH,\n        ),\n      });\n    },\n    [setMaxSize, layout],\n  );\n\n  React.useEffect(() => {\n    if (vis === null) {\n      const visualization = new Visualization();\n      visualization.registerLayoutFactory(layoutFactory);\n      visualization.registerComponentFactory(componentFactory);\n      visualization.fromModel(model);\n      visualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, () => {\n        storedGraphModel.current = visualization.getGraph().toModel();\n      });\n      visualization.addEventListener(GRAPH_LAYOUT_END_EVENT, () => {\n        onLayoutUpdate(visualization.getGraph().getNodes());\n      });\n      setVis(visualization);\n    } else {\n      const graph = storedGraphModel.current;\n      if (graph) {\n        model.graph = graph;\n      }\n      vis.fromModel(model);\n      vis.getGraph().layout();\n    }\n  }, [vis, model, onLayoutUpdate, componentFactory]);\n\n  React.useEffect(() => {\n    if (model && vis) {\n      const graph = storedGraphModel.current;\n      if (graph) {\n        model.graph = graph;\n      }\n      vis.fromModel(model);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, vis]);\n\n  if (!vis) return null;\n\n  const controlBar = (controller) => (\n    <TopologyControlBar\n      controlButtons={createTopologyControlButtons({\n        ...defaultControlButtonsOptions,\n        zoomInCallback: action(() => {\n          controller.getGraph().scaleBy(4 / 3);\n        }),\n        zoomOutCallback: action(() => {\n          controller.getGraph().scaleBy(0.75);\n        }),\n        fitToScreenCallback: action(() => {\n          controller.getGraph().fit(80);\n        }),\n        resetViewCallback: action(() => {\n          controller.getGraph().reset();\n          controller.getGraph().layout();\n        }),\n        legend: false,\n      })}\n    />\n  );\n\n  return (\n    <Measure\n      bounds\n      onResize={(contentRect) => {\n        setWidth(contentRect.bounds?.width);\n      }}\n    >\n      {({ measureRef }) => (\n        <div ref={measureRef}>\n          <div\n            style={{\n              height: noScrollbar\n                ? maxSize?.height\n                : Math.min((GRAPH_MAX_HEIGHT_PERCENT / 100) * window.innerHeight, maxSize?.height),\n              width: noScrollbar ? maxSize?.width : Math.min(maxSize?.width, width),\n            }}\n          >\n            <VisualizationProvider controller={vis}>\n              {showControlBar ? (\n                <TopologyView controlBar={controlBar(vis)}>\n                  <VisualizationSurface />\n                </TopologyView>\n              ) : (\n                <VisualizationSurface />\n              )}\n            </VisualizationProvider>\n          </div>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nexport default PipelineVisualizationSurface;\n","import * as React from 'react';\nimport { FormGroup, Flex, FlexItem, Tile, Text } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { ConfigMapKind } from 'public/module/k8s/types';\nimport { PacConfigurationTypes } from '../consts';\nimport { RepositoryFormValues } from '../types';\nimport GithubSection from './GithubSection';\nimport WebhookSection from './WebhookSection';\n\ntype ConfigTypeSectionProps = {\n  pac: ConfigMapKind;\n  formContextField?: string;\n};\n\nconst ConfigTypeSection: React.FC<ConfigTypeSectionProps> = ({ pac, formContextField }) => {\n  const { values, setFieldValue } = useFormikContext<FormikValues & RepositoryFormValues>();\n  const fieldPrefix = formContextField ? `${formContextField}.` : '';\n  const { method } = _.get(values, formContextField) || values;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Text>\n        {t(\n          'pipelines-plugin~A GitHub App is already set up for this cluster. To use it, install the GitHub app on your personal account or GitHub organization.',\n        )}\n      </Text>\n      <br />\n      <FormSection extraMargin>\n        <FormGroup fieldId=\"method\">\n          <Flex>\n            <FlexItem span={3}>\n              <Tile\n                data-test=\"github\"\n                title={t('pipelines-plugin~Use GitHub App')}\n                onClick={() => setFieldValue(`${fieldPrefix}method`, PacConfigurationTypes.GITHUB)}\n                isSelected={method === PacConfigurationTypes.GITHUB}\n              />\n            </FlexItem>\n            <FlexItem span={3}>\n              <Tile\n                data-test=\"webhook\"\n                title={t('pipelines-plugin~Setup a webhook')}\n                onClick={() => setFieldValue(`${fieldPrefix}method`, PacConfigurationTypes.WEBHOOK)}\n                isSelected={method === PacConfigurationTypes.WEBHOOK}\n              />\n            </FlexItem>\n          </Flex>\n        </FormGroup>\n      </FormSection>\n      <FormSection fullWidth={method === PacConfigurationTypes.WEBHOOK || !fieldPrefix}>\n        {method === PacConfigurationTypes.GITHUB && <GithubSection pac={pac} />}\n        {method === PacConfigurationTypes.WEBHOOK && (\n          <WebhookSection pac={pac} formContextField={formContextField} />\n        )}\n      </FormSection>\n    </>\n  );\n};\n\nexport default ConfigTypeSection;\n","import * as React from 'react';\nimport { Text } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { ConfigMapKind } from '@console/internal/module/k8s/types';\n\ntype GithubSectionProps = {\n  pac: ConfigMapKind;\n};\n\nconst GithubSection: React.FC<GithubSectionProps> = ({ pac }) => {\n  const { t } = useTranslation();\n  const appLink = pac?.data?.['app-link'] ?? '';\n  return (\n    <Text>\n      <Trans t={t} ns=\"pipelines-plugin\">\n        Use{' '}\n        <a target=\"_blank\" href={appLink} rel=\"noopener noreferrer\">\n          {appLink}\n        </a>{' '}\n        link to install the GitHub Application to your repositories in your organisation/account.\n      </Trans>\n    </Text>\n  );\n};\n\nexport default GithubSection;\n","import * as React from 'react';\nimport { List, ListItem } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service';\nimport { RepositoryFormValues } from '../types';\n\ntype PermissionsSectionProps = {\n  formContextField?: string;\n};\n\nconst PermissionsSection: React.FC<PermissionsSectionProps> = ({ formContextField }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<RepositoryFormValues>();\n  const { gitProvider } = _.get(values, formContextField) || values;\n\n  let permission;\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Commit comments')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Issue comments')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull request')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pushes')}</ListItem>\n        </List>\n      );\n      break;\n    case GitProvider.GITLAB:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Merge request Events')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Push Events')}</ListItem>\n        </List>\n      );\n      break;\n    case GitProvider.BITBUCKET:\n      permission = (\n        <List>\n          <ListItem>{t('pipelines-plugin~Repository: Push')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Created')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Updated')}</ListItem>\n          <ListItem>{t('pipelines-plugin~Pull Request: Comment Created')}</ListItem>\n        </List>\n      );\n      break;\n    default:\n      permission = null;\n  }\n  return permission;\n};\n\nexport default PermissionsSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport FormSection from '../section/FormSection';\n\nconst LabelSection: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <FormSection\n      title={t('devconsole~Labels')}\n      subTitle={t('devconsole~Each label is applied to each created resource.')}\n    >\n      <SelectorInputField name=\"labels\" placeholder=\"app.io/type=frontend\" dataTest=\"labels\" />\n    </FormSection>\n  );\n};\n\nexport default LabelSection;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CheckboxField } from '@console/shared';\nimport { Resources, RouteData } from '../import-types';\nimport AdvancedRouteOptions from '../route/AdvancedRouteOptions';\nimport PortInputField from '../route/PortInputField';\n\ninterface RouteSectionProps {\n  route: RouteData;\n  resources: Resources;\n}\n\nconst RouteSection: React.FC<RouteSectionProps> = ({ route, resources }) => {\n  const { t } = useTranslation();\n  const { defaultUnknownPort, disable, create } = route;\n\n  return (\n    <>\n      <PortInputField defaultPort={defaultUnknownPort} />\n      <CheckboxField\n        name=\"route.create\"\n        label={t('devconsole~Create a route')}\n        helpText={t('devconsole~Exposes your component at a public URL')}\n        isDisabled={disable}\n      />\n      <AdvancedRouteOptions canCreateRoute={create} resources={resources} />\n    </>\n  );\n};\n\nexport default RouteSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport SelectorInputField from '@console/shared/src/components/formik-fields/SelectorInputField';\nimport { Resources } from '../import-types';\nimport FormSection from '../section/FormSection';\nimport ServerlessRouteSection from '../serverless/ServerlessRouteSection';\nimport CreateRoute from './CreateRoute';\nimport SecureRoute from './SecureRoute';\n\ntype AdvancedRouteOptionsProps = {\n  canCreateRoute: boolean;\n  resources: Resources;\n};\n\nconst AdvancedRouteOptions: React.FC<AdvancedRouteOptionsProps> = ({\n  canCreateRoute,\n  resources,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ExpandCollapse\n      textExpanded={t('devconsole~Hide advanced Routing options')}\n      textCollapsed={t('devconsole~Show advanced Routing options')}\n    >\n      <FormSection>\n        {canCreateRoute ? (\n          resources === Resources.KnativeService ? (\n            <ServerlessRouteSection />\n          ) : (\n            <>\n              <CreateRoute />\n              <SecureRoute />\n              <SelectorInputField\n                name=\"route.labels\"\n                label={t('devconsole~Labels')}\n                helpText={t(\n                  'devconsole~Additional labels which are only added to the Route resource.',\n                )}\n                placeholder=\"app.io/type=frontend\"\n                dataTest=\"route-labels\"\n              />\n            </>\n          )\n        ) : (\n          <Alert\n            variant=\"info\"\n            isInline\n            title={t(\n              'devconsole~Select the checkbox \"Create a route\" to edit advanced routing options',\n            )}\n          />\n        )}\n      </FormSection>\n    </ExpandCollapse>\n  );\n};\n\nexport default AdvancedRouteOptions;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { DomainMappingModel } from '@console/knative-plugin/src';\nimport { MultiTypeaheadField } from '@console/shared';\nimport { GitImportFormData, DeployImageFormData, UploadJarFormData } from '../import-types';\nimport {\n  getAllOtherDomainMappingInUse,\n  getOtherKsvcFromDomainMapping,\n  hasOtherKsvcDomainMappings,\n  removeDuplicateDomainMappings,\n} from './serverless-utils';\n\nconst ServerlessRouteSection: React.FC = () => {\n  const { t } = useTranslation();\n  const {\n    setFieldValue,\n    values: {\n      name,\n      project: { name: namespace },\n      serverless,\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(DomainMappingModel),\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace],\n  );\n  const [data, domainMappingLoaded, domainMappingLoadErr] = useK8sWatchResource<K8sResourceKind[]>(\n    resource,\n  );\n  const domainMappingResources = React.useMemo(() => {\n    return domainMappingLoaded && !domainMappingLoadErr\n      ? data.map((dm) => {\n          const ksvc = getOtherKsvcFromDomainMapping(dm, name);\n          return {\n            value: ksvc ? `${dm.metadata.name} (${ksvc})` : dm.metadata.name,\n            disabled: false,\n          };\n        })\n      : [];\n  }, [domainMappingLoaded, domainMappingLoadErr, data, name]);\n\n  React.useEffect(() => {\n    if (domainMappingLoaded && !domainMappingLoadErr && data?.length) {\n      const mappedDomain = data\n        .filter((domainRes) => domainRes.spec?.ref?.name === name)\n        .map((filterDm) => filterDm.metadata.name);\n      const newDomainMap = [\n        ...(serverless.domainMapping ? serverless.domainMapping : []),\n        ...mappedDomain,\n      ];\n      setFieldValue('serverless', {\n        ...serverless,\n        domainMapping: removeDuplicateDomainMappings(newDomainMap, mappedDomain),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, domainMappingLoaded, domainMappingLoadErr, name, setFieldValue]);\n\n  const domainsInUse = getAllOtherDomainMappingInUse(serverless.domainMapping, data, name) ?? [];\n  return (\n    <>\n      {domainMappingLoaded || domainMappingLoadErr ? (\n        <>\n          <MultiTypeaheadField\n            data-test-id=\"domain-mapping-field\"\n            name=\"serverless.domainMapping\"\n            label={t('devconsole~Domain mapping')}\n            ariaLabel={t('devconsole~Domain mapping')}\n            options={domainMappingResources}\n            placeholderText={t('devconsole~Add domain')}\n            helpText={t('devconsole~Enter custom domain to map to the Knative service')}\n            isCreatable\n          />\n          {hasOtherKsvcDomainMappings(serverless.domainMapping) && (\n            <Alert\n              data-test=\"domain-mapping-warning\"\n              variant=\"warning\"\n              isInline\n              title={t('devconsole~Domain mapping(s) will be updated')}\n            >\n              <div style={{ marginBottom: 'var(--pf-v5-global--spacer--sm)' }}>\n                {t(\n                  'devconsole~Warning: The following domain(s) will be removed from the associated service',\n                )}\n              </div>\n              {domainsInUse.length > 0 && (\n                <ul>\n                  {domainsInUse.map((dm) => {\n                    return (\n                      <li key={dm.metadata.uid}>\n                        {t(`devconsole~{{domainMapping}} from {{knativeService}}`, {\n                          domainMapping: dm.metadata.name,\n                          knativeService: dm.spec.ref.name,\n                        })}\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </Alert>\n          )}\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </>\n  );\n};\n\nexport default ServerlessRouteSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\nconst CreateRoute: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.hostname\"\n        label={t('devconsole~Hostname')}\n        helpText={t(\n          'devconsole~Public hostname for the route. If not specified, a hostname is generated.',\n        )}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name=\"route.path\"\n        label={t('devconsole~Path')}\n        placeholder=\"/\"\n        helpText={t('devconsole~Path that the router watches to route traffic to the service.')}\n      />\n    </>\n  );\n};\n\nexport default CreateRoute;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SingleTypeaheadField, SelectInputOption } from '@console/shared';\nimport { DeployImageFormData, GitImportFormData, UploadJarFormData } from '../import-types';\n\ninterface PortInputFieldProps {\n  defaultPort: number;\n}\n\nconst PortInputField: React.FC<PortInputFieldProps> = ({ defaultPort }) => {\n  const { t } = useTranslation();\n  const {\n    values: {\n      image: { ports },\n    },\n  } = useFormikContext<DeployImageFormData | GitImportFormData | UploadJarFormData>();\n  const portOptions: SelectInputOption[] = Array.from(\n    new Set(ports.map((port) => port.containerPort.toString())),\n  ).map((value) => ({\n    value,\n    disabled: false,\n  }));\n  const placeholderPort = ports[0]?.containerPort || defaultPort;\n\n  return (\n    <SingleTypeaheadField\n      data-test-id=\"target-port-field\"\n      name=\"route.unknownTargetPort\"\n      label={t('devconsole~Target port')}\n      ariaLabel={t('devconsole~Target port')}\n      placeholderText={placeholderPort.toString()}\n      helpText={t('devconsole~Target port for traffic.')}\n      options={portOptions}\n      toggleOnSelection\n    />\n  );\n};\n\nexport default PortInputField;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NumberSpinnerField, ResourceLimitField } from '@console/shared';\nimport FormSection from '../section/FormSection';\n\nconst ServerlessScalingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const AutoscaleWindowUnits = {\n    s: t('devconsole~Sec'),\n    m: t('devconsole~Min'),\n    h: t('devconsole~Hrs'),\n  };\n\n  return (\n    <FormSection\n      title={t('devconsole~Scaling')}\n      subTitle={t(\n        'devconsole~Set the autoscaler parameters around pods and concurrency limits in this section.',\n      )}\n    >\n      <NumberSpinnerField\n        name=\"serverless.scaling.minpods\"\n        label={t('devconsole~Min Pods')}\n        helpText={t(\n          'devconsole~The lower limit for the number of Pods that can be set by autoscaler. If not specified defaults to 0.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.maxpods\"\n        label={t('devconsole~Max Pods')}\n        helpText={t(\n          'devconsole~The upper limit for the number of Pods that can be set by autoscaler.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencytarget\"\n        label={t('devconsole~Concurrency target')}\n        helpText={t(\n          'devconsole~Defines how many concurrent requests are wanted per instance of the application at a given time (soft limit) and is the recommended configuration for autoscaling. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencylimit\"\n        label={t('devconsole~Concurrency limit')}\n        helpText={t(\n          'devconsole~Limits the amount of concurrent requests allowed into one instance of the application at a given time (hard limit), and is configured in the revision template. If not specified, will be defaulted to the value set in the Cluster config.',\n        )}\n      />\n      <NumberSpinnerField\n        name=\"serverless.scaling.concurrencyutilization\"\n        label={t('devconsole~Concurrency utilization')}\n        helpText={t('devconsole~Percentage of concurrent requests utilization before scaling up.')}\n      />\n      <ResourceLimitField\n        name=\"serverless.scaling.autoscale.autoscalewindow\"\n        label={t('devconsole~Autoscale window')}\n        unitName=\"serverless.scaling.autoscale.autoscalewindowUnit\"\n        unitOptions={AutoscaleWindowUnits}\n        helpText={t(\n          'devconsole~Duration to look back for making auto-scaling decisions. The service is scaled to zero if no request was received in during that time.',\n        )}\n      />\n    </FormSection>\n  );\n};\n\nexport default ServerlessScalingSection;\n","import * as React from 'react';\nimport {\n  ImageEnvironment,\n  ImportEnvironment,\n  isImportEnvironment,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk';\n\nexport const useBuilderImageEnvironments = (\n  imageStreamName: string,\n  imageStreamTag: string,\n): [ImageEnvironment[], boolean] => {\n  const [environmentExtensions, resolved] = useResolvedExtensions<ImportEnvironment>(\n    isImportEnvironment,\n  );\n\n  const filteredExtensions = React.useMemo(\n    () =>\n      resolved\n        ? environmentExtensions\n            .filter(\n              (e) =>\n                e.properties.imageStreamName === imageStreamName &&\n                e.properties.imageStreamTags.includes(imageStreamTag),\n            )\n            .map((e) => e.properties.environments)\n            .flat()\n        : [],\n    [environmentExtensions, imageStreamName, imageStreamTag, resolved],\n  );\n\n  return [filteredExtensions, resolved];\n};\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { FLAG_OPENSHIFT_BUILDCONFIG } from '@console/dev-console/src/const';\nimport { NormalizedBuilderImages } from '@console/dev-console/src/utils/imagestream-utils';\nimport { getActiveNamespace } from '@console/internal/actions/ui';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { connectToFlags } from '@console/internal/reducers/connectToFlags';\nimport { FlagsObject } from '@console/internal/reducers/features';\nimport { FLAG_OPENSHIFT_PIPELINE, CLUSTER_PIPELINE_NS } from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport PipelineTemplate from './PipelineTemplate';\n\nimport './PipelineSection.scss';\n\ntype PipelineSectionProps = {\n  flags: FlagsObject;\n  builderImages: NormalizedBuilderImages;\n  existingPipeline?: PipelineKind;\n};\n\nconst usePipelineAccessReview = (): boolean => {\n  const canListPipelines = useAccessReview({\n    group: PipelineModel.apiGroup,\n    resource: PipelineModel.plural,\n    namespace: CLUSTER_PIPELINE_NS,\n    verb: 'list',\n  });\n\n  const canCreatePipelines = useAccessReview({\n    group: PipelineModel.apiGroup,\n    resource: PipelineModel.plural,\n    namespace: getActiveNamespace(),\n    verb: 'create',\n  });\n\n  return canListPipelines && canCreatePipelines;\n};\n\nconst PipelineSection: React.FC<PipelineSectionProps> = ({\n  flags,\n  builderImages,\n  existingPipeline,\n}) => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n\n  /* Set pipeline.enabled to true if the user has access to create pipelines and the Builds are not installed */\n  React.useEffect(() => {\n    if (flags[FLAG_OPENSHIFT_PIPELINE] && !flags[FLAG_OPENSHIFT_BUILDCONFIG]) {\n      setFieldValue('pipeline.enabled', true);\n    }\n  }, [setFieldValue, flags]);\n\n  const hasCreatePipelineAccess = usePipelineAccessReview();\n  if (flags[FLAG_OPENSHIFT_PIPELINE] && hasCreatePipelineAccess) {\n    return (\n      <FormSection>\n        {values.image.selected || values.build.strategy === 'Docker' ? (\n          <PipelineTemplate builderImages={builderImages} existingPipeline={existingPipeline} />\n        ) : (\n          <Alert\n            isInline\n            variant=\"info\"\n            title={t(\n              'pipelines-plugin~Select a Builder Image and resource to see if there is a pipeline template available for this runtime.',\n            )}\n          />\n        )}\n      </FormSection>\n    );\n  }\n\n  return null;\n};\n\nexport default connectToFlags<PipelineSectionProps>(\n  FLAG_OPENSHIFT_PIPELINE,\n  FLAG_OPENSHIFT_BUILDCONFIG,\n)(PipelineSection);\n","import { sanitizeApplicationValue } from '@console/topology/src/utils';\nimport { healthChecksProbeInitialData } from '../health-checks/health-checks-probe-utils';\nimport { BaseFormData, Resources } from './import-types';\n\nexport const getBaseInitialValues = (\n  namespace: string,\n  activeApplication: string,\n): BaseFormData => {\n  return {\n    project: {\n      name: namespace || '',\n      displayName: '',\n      description: '',\n    },\n    application: {\n      initial: sanitizeApplicationValue(activeApplication),\n      name: sanitizeApplicationValue(activeApplication),\n      selectedKey: activeApplication,\n    },\n    name: '',\n    image: {\n      selected: '',\n      recommended: '',\n      tag: '',\n      tagObj: {},\n      ports: [],\n      isRecommending: false,\n      couldNotRecommend: false,\n    },\n    serverless: {\n      scaling: {\n        minpods: '',\n        maxpods: '',\n        concurrencytarget: '',\n        concurrencylimit: '',\n        defaultConcurrencytarget: '',\n        defaultConcurrencyutilization: '',\n        autoscale: {\n          autoscalewindow: '',\n          autoscalewindowUnit: '',\n          defaultAutoscalewindowUnit: 's',\n          defaultAutoscalewindow: '',\n        },\n        concurrencyutilization: '',\n      },\n      domainMapping: [],\n    },\n    route: {\n      disable: false,\n      create: true,\n      targetPort: '',\n      unknownTargetPort: '',\n      defaultUnknownPort: 8080,\n      path: '',\n      hostname: '',\n      secure: false,\n      tls: {\n        termination: null,\n        insecureEdgeTerminationPolicy: null,\n        caCertificate: '',\n        certificate: '',\n        destinationCACertificate: '',\n        key: '',\n      },\n    },\n    resources: Resources.Kubernetes,\n    build: {\n      env: [],\n      triggers: {},\n      strategy: 'Source',\n    },\n    deployment: {\n      env: [],\n      triggers: {\n        image: true,\n        config: true,\n      },\n      replicas: 1,\n    },\n    labels: {},\n    limits: {\n      cpu: {\n        request: '',\n        requestUnit: 'm',\n        defaultRequestUnit: 'm',\n        limit: '',\n        limitUnit: 'm',\n        defaultLimitUnit: 'm',\n      },\n      memory: {\n        request: '',\n        requestUnit: 'Mi',\n        defaultRequestUnit: 'Mi',\n        limit: '',\n        limitUnit: 'Mi',\n        defaultLimitUnit: 'Mi',\n      },\n    },\n    healthChecks: healthChecksProbeInitialData,\n  };\n};\n","import * as React from 'react';\nimport { Alert, ExpandableSection, Tooltip } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  BuildOptions,\n  ReadableResourcesNames,\n} from '@console/dev-console/src/components/import/import-types';\nimport { NormalizedBuilderImages } from '@console/dev-console/src/utils/imagestream-utils';\nimport { GitProvider, getGitService } from '@console/git-service/src';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { k8sList } from '@console/internal/module/k8s';\nimport {\n  FLAG_OPENSHIFT_PIPELINE_AS_CODE,\n  FUNC_PIPELINE_RUNTIME_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport {\n  BlueInfoCircleIcon,\n  CheckboxField,\n  DropdownField,\n  RadioGroupField,\n  useFlag,\n} from '@console/shared';\nimport { CLUSTER_PIPELINE_NS, PIPELINE_RUNTIME_LABEL } from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport PipelineVisualization from '../../pipelines/detail-page-tabs/pipeline-details/PipelineVisualization';\nimport { PipelineType } from '../import-types';\nimport PacSection from './PacSection';\nimport './PacSection.scss';\n\nconst labelType = 'pipeline.openshift.io/type';\nconst labelDocker = 'pipeline.openshift.io/strategy';\n\nconst getAlertText = (\n  isDockerStrategy: boolean,\n  builderImage: string,\n  resourceType: string,\n): string => {\n  const MISSING_DOCKERFILE_LABEL_TEXT = i18next.t(\n    'pipelines-plugin~The pipeline template for Dockerfiles is not available at this time.',\n  );\n  if (isDockerStrategy) return MISSING_DOCKERFILE_LABEL_TEXT;\n\n  return i18next.t(\n    'pipelines-plugin~There are no pipeline templates available for {{builderImage}} and {{resourceType}} combination.',\n    { builderImage, resourceType },\n  );\n};\n\ntype PipelineTemplateProps = {\n  builderImages: NormalizedBuilderImages;\n  existingPipeline?: PipelineKind;\n};\n\nconst PipelineTemplate: React.FC<PipelineTemplateProps> = ({ builderImages, existingPipeline }) => {\n  const { t } = useTranslation();\n  const [noTemplateForRuntime, setNoTemplateForRuntime] = React.useState(false);\n  const [isPacRepo, setIsPacRepo] = React.useState(false);\n  const [isPipelineTypeChanged, setIsPipelineTypeChanged] = React.useState(false);\n  const [isExpanded, setIsExpanded] = React.useState(false);\n  const [pipelineTemplates, setPipelineTemplates] = React.useState([]);\n  const pipelineStorageRef = React.useRef<{ [image: string]: PipelineKind[] }>({});\n  const isRepositoryEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE_AS_CODE);\n\n  const {\n    values: {\n      import: { recommendedStrategy, selectedStrategy },\n      git: { url, type, ref, dir, secretResource },\n      pipeline,\n      image,\n      build: { option: buildOption, strategy },\n      resources,\n    },\n    setFieldValue,\n    setFieldTouched,\n  } = useFormikContext<FormikValues>();\n\n  const isDockerStrategy = strategy === 'Docker';\n  const isPipelineAttached = !_.isEmpty(existingPipeline);\n  const isServerlessFunctionStrategy = strategy === 'ServerlessFunction';\n\n  const getPipelineNames = (pipelines: PipelineKind[]): string =>\n    pipelines\n      .map((pl) => pl.metadata?.name)\n      .sort()\n      .join(',');\n\n  const handlePipelineTypeChange = React.useCallback(async () => {\n    const gitService = url && getGitService(url, type, ref, dir, secretResource);\n    const disallowedPacGitTypes = [GitProvider.GITEA];\n    const isPacRepository =\n      gitService &&\n      !disallowedPacGitTypes.includes(type) &&\n      isRepositoryEnabled &&\n      (await gitService.isTektonFolderPresent());\n    if (isPacRepository) {\n      setIsPacRepo(true);\n      setFieldValue('pipeline.enabled', true);\n      setFieldValue('pipeline.type', PipelineType.PAC);\n      setFieldValue('pac.repository.gitUrl', url);\n      setFieldValue('pac.pipelineType', PipelineType.PAC);\n      setFieldValue('pac.pipelineEnabled', true);\n    } else {\n      setFieldValue('pipeline.type', PipelineType.PIPELINE);\n      setFieldValue('pac.repository.gitUrl', '');\n      setFieldValue('pac.pipelineType', PipelineType.PIPELINE);\n      setFieldValue('pac.pipelineEnabled', false);\n    }\n    setIsPipelineTypeChanged(true);\n  }, [url, type, ref, dir, secretResource, isRepositoryEnabled, setFieldValue]);\n\n  React.useEffect(() => {\n    pipelineStorageRef.current = {};\n  }, [selectedStrategy]);\n\n  React.useEffect(() => {\n    setFieldValue('pac.pipelineEnabled', !!pipeline.enabled);\n    // Added setTimeout to re-validate yup validation after onchange event\n    setTimeout(() => {\n      setFieldTouched('pipeline.enabled', true);\n    }, 0);\n  }, [pipeline.enabled, setFieldValue, setFieldTouched]);\n\n  React.useEffect(() => {\n    if (buildOption === BuildOptions.PIPELINES) {\n      setFieldValue('pipeline.enabled', true);\n      setFieldValue('pac.pipelineEnabled', true);\n    }\n  }, [buildOption, setFieldValue]);\n\n  React.useEffect(() => {\n    let ignore = false;\n\n    const builderPipelineLabel = { [PIPELINE_RUNTIME_LABEL]: image.selected };\n    const dockerPipelineLabel = { [labelDocker]: 'docker' };\n    const funcPipelineLabel = { [FUNC_PIPELINE_RUNTIME_LABEL]: image.selected };\n\n    let labelSelector;\n    if (isDockerStrategy) {\n      labelSelector = dockerPipelineLabel;\n    } else if (isServerlessFunctionStrategy) {\n      labelSelector = funcPipelineLabel;\n    } else {\n      labelSelector = builderPipelineLabel;\n    }\n    const fetchPipelineTemplate = async () => {\n      let fetchedPipelines: PipelineKind[] = null;\n      if (\n        !pipelineStorageRef.current[image.selected] ||\n        !pipelineStorageRef.current[image.selected]?.length\n      ) {\n        fetchedPipelines = (await k8sList(PipelineModel, {\n          ns: CLUSTER_PIPELINE_NS,\n          labelSelector,\n        })) as PipelineKind[];\n      }\n      if (ignore) return;\n\n      if (fetchedPipelines) {\n        pipelineStorageRef.current[image.selected] = fetchedPipelines;\n      }\n\n      const imagePipelines: PipelineKind[] = pipelineStorageRef.current[image.selected] || [];\n      const resourceSpecificPipelines = imagePipelines.filter(\n        (pl) => pl.metadata?.labels?.[labelType] === resources,\n      );\n      const candidatePipelines = [\n        ...resourceSpecificPipelines,\n        ...imagePipelines.filter((pl) => !pl.metadata?.labels?.[labelType]),\n      ];\n\n      if (getPipelineNames(pipelineTemplates) !== getPipelineNames(candidatePipelines)) {\n        setPipelineTemplates(candidatePipelines);\n      }\n      const pipelineTemplate = candidatePipelines[0];\n\n      if (isPipelineAttached) {\n        setFieldValue('pipeline.template', existingPipeline);\n        setFieldValue('pipeline.templateSelected', existingPipeline.metadata.name);\n        setNoTemplateForRuntime(false);\n      } else if (\n        pipeline.templateSelected &&\n        pipelineTemplates.some((pl) => pl.metadata.name === pipeline.templateSelected)\n      ) {\n        setFieldValue(\n          'pipeline.template',\n          pipelineTemplates.find((pl) => pl.metadata.name === pipeline.templateSelected),\n        );\n        setNoTemplateForRuntime(false);\n      } else if (pipelineTemplate) {\n        setFieldValue('pipeline.template', pipelineTemplate);\n        setFieldValue('pipeline.templateSelected', pipelineTemplate.metadata.name);\n        setNoTemplateForRuntime(false);\n      } else {\n        setFieldValue('pipeline.template', null);\n        setFieldValue('pipeline.templateSelected', '');\n        setNoTemplateForRuntime(true);\n      }\n    };\n\n    fetchPipelineTemplate();\n    if (!isPipelineAttached && !isPipelineTypeChanged) {\n      handlePipelineTypeChange();\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [\n    resources,\n    recommendedStrategy,\n    image.selected,\n    isDockerStrategy,\n    setFieldValue,\n    pipeline.templateSelected,\n    pipelineTemplates,\n    isPipelineAttached,\n    existingPipeline,\n    handlePipelineTypeChange,\n    isServerlessFunctionStrategy,\n    isPipelineTypeChanged,\n  ]);\n\n  const pipelineTemplateItems = React.useMemo(() => {\n    const items = {};\n    for (const img of pipelineTemplates) {\n      const { name } = img.metadata;\n      items[name] = name;\n    }\n    if (pipeline.templateSelected) {\n      items[pipeline.templateSelected] = pipeline.templateSelected;\n    }\n    return items;\n  }, [pipeline.templateSelected, pipelineTemplates]);\n\n  if (noTemplateForRuntime) {\n    const builderImageTitle =\n      builderImages?.[image.selected]?.title || t('pipelines-plugin~this Builder Image');\n    const resourceName = t(ReadableResourcesNames[resources]);\n    return (\n      <Alert\n        isInline\n        variant=\"info\"\n        title={getAlertText(isDockerStrategy, builderImageTitle, resourceName)}\n      />\n    );\n  }\n\n  const onChangePipelineType = (value: PipelineType) => {\n    setFieldValue('pac.pipelineType', value);\n    setFieldValue('pipeline.type', value);\n    // Added setTimeout to re-validate yup validation after onchange event\n    setTimeout(() => {\n      setFieldTouched('pipeline.type', true);\n    }, 0);\n  };\n\n  return pipeline.template ? (\n    <>\n      {buildOption !== BuildOptions.PIPELINES && (\n        <CheckboxField\n          label={t('pipelines-plugin~Add pipeline')}\n          name=\"pipeline.enabled\"\n          isDisabled={isPipelineAttached}\n        />\n      )}\n      {pipeline.enabled && isPacRepo && (\n        <>\n          <span className=\"pf-c-form__label-text\">{t('pipelines-plugin~Pipeline')}</span>\n          <RadioGroupField\n            className=\"odc-pipeline-section-pac__radio-intent\"\n            name={'pipeline.type'}\n            onChange={(val: string) => onChangePipelineType(val as PipelineType)}\n            options={[\n              {\n                value: PipelineType.PAC,\n                label: (\n                  <>\n                    {t('pipelines-plugin~Build, deploy and configure a Pipeline Repository')}\n                    {'  '}\n                    <Tooltip\n                      position=\"right\"\n                      content={\n                        <p>\n                          {t(\n                            'pipelines-plugin~Automatically configure a new Pipeline Repository for your Git repository. This will automatically trigger new PipelineRuns on new commits or Pull Requests based on your configuration in your source code.',\n                          )}\n                        </p>\n                      }\n                    >\n                      <BlueInfoCircleIcon />\n                    </Tooltip>\n                  </>\n                ),\n                activeChildren: <PacSection />,\n              },\n              {\n                value: PipelineType.PIPELINE,\n                label: (\n                  <>\n                    {t('pipelines-plugin~Use Pipeline from this cluster')}\n                    {'  '}\n                    <Tooltip\n                      position=\"right\"\n                      content={\n                        <p>\n                          {t(\n                            'pipelines-plugin~Use an installed Pipeline from your cluster to build and deploy your component. Pipelines are from \"openshift\" namespace that support the relevant runtime are shown below.',\n                          )}\n                        </p>\n                      }\n                    >\n                      <BlueInfoCircleIcon />\n                    </Tooltip>\n                  </>\n                ),\n                activeChildren: (\n                  <>\n                    <DropdownField\n                      name=\"pipeline.templateSelected\"\n                      title={pipelineTemplateItems[pipeline.templateSelected]}\n                      items={pipelineTemplateItems}\n                      disabled={isPipelineAttached}\n                      fullWidth\n                    />\n                    <br />\n                    <ExpandableSection\n                      toggleText={`${\n                        isExpanded ? t('pipelines-plugin~Hide') : t('pipelines-plugin~Show')\n                      } ${t('pipelines-plugin~pipeline visualization')}`}\n                      isExpanded={isExpanded}\n                      onToggle={() => setIsExpanded(!isExpanded)}\n                    >\n                      {isExpanded && <PipelineVisualization pipeline={pipeline.template} />}\n                    </ExpandableSection>\n                  </>\n                ),\n              },\n            ]}\n          />\n        </>\n      )}\n      {pipeline.enabled && !isPacRepo && (\n        <>\n          <DropdownField\n            name=\"pipeline.templateSelected\"\n            title={pipelineTemplateItems[pipeline.templateSelected]}\n            items={pipelineTemplateItems}\n            disabled={isPipelineAttached}\n            label={t('pipelines-plugin~Pipeline')}\n            fullWidth\n          />\n          <ExpandableSection\n            toggleText={`${\n              isExpanded ? t('pipelines-plugin~Hide') : t('pipelines-plugin~Show')\n            } ${t('pipelines-plugin~pipeline visualization')}`}\n            isExpanded={isExpanded}\n            onToggle={() => setIsExpanded(!isExpanded)}\n          >\n            {isExpanded && <PipelineVisualization pipeline={pipeline.template} />}\n          </ExpandableSection>\n        </>\n      )}\n    </>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PipelineTemplate;\n","import * as React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport { ExpandCollapse, Loading } from '@console/internal/components/utils';\nimport { usePacInfo } from '@console/pipelines-plugin/src/components/repository/hooks/pac-hook';\nimport { recommendRepositoryName } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport ConfigTypeSection from '@console/pipelines-plugin/src/components/repository/sections/ConfigTypeSection';\nimport WebhookSection from '@console/pipelines-plugin/src/components/repository/sections/WebhookSection';\nimport { PacConfigurationTypes } from '../../repository/consts';\nimport InfoPanel from './PacInfoPanel';\nimport './PacSection.scss';\n\nconst PacSection: React.FC = () => {\n  const { t } = useTranslation();\n  const formContextField = 'pac.repository';\n  const [githubAppAvailable, setGithubAppAvailable] = React.useState(false);\n  const { values, setFieldValue } = useFormikContext<FormikValues>();\n  const {\n    git: { url, type },\n  } = values;\n  const [pac, loaded] = usePacInfo();\n\n  React.useEffect(() => {\n    if (loaded && !!pac && pac.data['app-link']) {\n      setGithubAppAvailable(true);\n      setFieldValue('pac.repository.githubAppAvailable', true);\n      setFieldValue('pac.repository.method', PacConfigurationTypes.GITHUB);\n    } else {\n      setFieldValue('pac.repository.method', PacConfigurationTypes.WEBHOOK);\n    }\n  }, [pac, loaded, setFieldValue]);\n\n  React.useEffect(() => {\n    setFieldValue('pac.repository.gitUrl', url);\n    setFieldValue('name', recommendRepositoryName(url));\n    setFieldValue('pac.repository.gitProvider', type);\n  }, [setFieldValue, url, type]);\n\n  React.useEffect(() => {\n    setFieldValue('pac.repository.name', values.name);\n  }, [setFieldValue, values.name]);\n\n  return pac ? (\n    <>\n      <ExpandCollapse\n        textCollapsed={t('pipelines-plugin~View details')}\n        textExpanded={t('pipelines-plugin~Hide details')}\n      >\n        <InfoPanel />\n      </ExpandCollapse>\n\n      {githubAppAvailable && type === GitProvider.GITHUB ? (\n        <div className=\"odc-pipeline-section-pac__config-type\">\n          <ConfigTypeSection pac={pac} formContextField={formContextField} />\n        </div>\n      ) : (\n        <WebhookSection pac={pac} formContextField={formContextField} />\n      )}\n    </>\n  ) : (\n    <Loading />\n  );\n};\n\nexport default PacSection;\n","import * as React from 'react';\nimport { ClipboardCopy, ClipboardCopyVariant } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  ReadableResourcesNames,\n  Resources,\n} from '@console/dev-console/src/components/import/import-types';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { useActiveNamespace } from '@console/shared/src/hooks/useActiveNamespace';\nimport './PacSection.scss';\n\nconst InfoPanel: React.FC = () => {\n  const { t } = useTranslation();\n  const [namespace] = useActiveNamespace();\n  const {\n    values: { name, resources },\n  } = useFormikContext<FormikValues>();\n  const translatedResourceName = ReadableResourcesNames[resources as Resources]\n    ? t(ReadableResourcesNames[resources as Resources])\n    : '';\n\n  return (\n    <FormSection>\n      <div className=\"odc-pipeline-section-pac__info-panel\">\n        <div className=\"odc-pipeline-section-pac__info-text\">\n          <Trans t={t} ns=\"pipelines-plugin\" values={{ translatedResourceName, name }}>\n            Once your Pipeline Repository is configured, in order to update your{' '}\n            {{ translatedResourceName }} <code className=\"co-code\">{{ name }}</code> automatically,\n            update the following in your <code className=\"co-code\">.tekton</code> PipelineRun:\n          </Trans>\n        </div>\n        <ul>\n          <li>\n            <strong> {translatedResourceName}: </strong>\n            <ClipboardCopy variant={ClipboardCopyVariant.inlineCompact}>{name}</ClipboardCopy>\n          </li>\n          <li className=\"odc-pipeline-section-pac__clipboard\">\n            <strong>\n              {t('pipelines-plugin~Internal image registry:')}\n              {'  '}\n            </strong>\n            <ClipboardCopy variant={ClipboardCopyVariant.inlineCompact}>\n              image-registry.openshift-image-registry.svc:5000/{namespace}/{name}\n            </ClipboardCopy>\n          </li>\n        </ul>\n      </div>\n    </FormSection>\n  );\n};\n\nexport default InfoPanel;\n","import { useEffect, useRef } from 'react';\nimport { k8sGet, Options } from '@console/internal/module/k8s';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s/types';\n\nexport const useSafeK8s = () => {\n  const controller = useRef<AbortController>();\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    controller.current = new AbortController();\n    return () => {\n      mounted.current = false;\n      controller.current.abort();\n    };\n  }, []);\n\n  return (\n    kind: K8sKind,\n    name: string,\n    ns: string,\n    opts: Options = {},\n  ): Promise<K8sResourceKind> => {\n    return new Promise((resolve, reject) => {\n      k8sGet(kind, name, ns, opts, { signal: controller.current.signal as AbortSignal })\n        .then((data) => mounted.current && resolve(data))\n        .catch((error) => mounted.current && reject(error));\n    });\n  };\n};\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues } from 'formik';\nimport { InputField } from '@console/shared';\nimport { useBuilderImageEnvironments } from './builderImageHooks';\n\ninterface BuilderImageEnvironmentsProps {\n  name: string;\n  imageStreamName: string;\n  imageStreamTag: string;\n}\n\nconst BuilderImageEnvironments: React.FC<BuilderImageEnvironmentsProps> = ({\n  name,\n  imageStreamName,\n  imageStreamTag,\n}) => {\n  const {\n    values: {\n      build: { env: buildEnvs },\n      image: { imageEnv },\n      formType,\n    },\n    setFieldValue,\n  } = useFormikContext<FormikValues>();\n\n  const [environments, loaded] = useBuilderImageEnvironments(imageStreamName, imageStreamTag);\n\n  React.useEffect(() => {\n    if (formType === 'edit' && buildEnvs?.length > 0 && !imageEnv) {\n      environments.forEach((env) =>\n        buildEnvs.forEach((buildEnv) => {\n          if (buildEnv.name === env.key) {\n            setFieldValue(`${name}.${env.key}`, buildEnv.value);\n          }\n        }),\n      );\n    }\n  }, [buildEnvs, formType, imageEnv, setFieldValue, environments, name]);\n\n  if (!loaded) {\n    return null;\n  }\n  return (\n    <>\n      {environments.map((env) => (\n        <InputField\n          key={`${imageStreamName}-${env.key}`}\n          type={TextInputTypes.text}\n          name={`${name}.${env.key}`}\n          label={env.label}\n          helpText={env.description}\n          placeholder={env.defaultValue}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default BuilderImageEnvironments;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ImageStreamIcon } from '@console/internal/components/catalog/catalog-item-icon';\nimport { getAnnotationTags } from '@console/internal/components/image-stream';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { getSampleRepo } from '../../../utils/imagestream-utils';\n\nexport type ImageStreamInfoProps = {\n  displayName: string;\n  tag: object;\n};\n\nconst ImageStreamInfo: React.FC<ImageStreamInfoProps> = ({ displayName, tag }) => {\n  const { t } = useTranslation();\n  const annotationTags = getAnnotationTags(tag);\n  const description = _.get(tag, 'annotations.description');\n  const sampleRepo = getSampleRepo(tag);\n\n  return (\n    <div data-test=\"imageStream-details\">\n      <div className=\"co-catalog-item-details\">\n        <ImageStreamIcon tag={tag} iconSize=\"large\" />\n        <div>\n          <h2 className=\"co-section-heading co-catalog-item-details__name\">{displayName}</h2>\n          {annotationTags && (\n            <p className=\"co-catalog-item-details__tags\">\n              {_.map(annotationTags, (annotationTag, i) => (\n                <span className=\"co-catalog-item-details__tag\" key={i}>\n                  {annotationTag}\n                </span>\n              ))}\n            </p>\n          )}\n        </div>\n      </div>\n      {description && <p className=\"co-catalog-item-details__description\">{description}</p>}\n      {sampleRepo && (\n        <p>\n          {t('devconsole~Sample repository:')} <ExternalLink href={sampleRepo} text={sampleRepo} />\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ImageStreamInfo;\n","import * as React from 'react';\nimport { getAutoscaleWindow } from './serverless-utils';\nimport { useGetAutoscalerConfig } from './useGetAutoscalerConfig';\n\nexport const setKnScalingDefaultValue = (initialValues, knScalingConfig) => {\n  const { autoscalewindow, autoscalewindowUnit, defaultAutoscalewindowUnit } =\n    knScalingConfig && getAutoscaleWindow(knScalingConfig['stable-window'] ?? '');\n  // TODO: we should not mutate initial values at all.\n  initialValues.serverless.scaling.concurrencytarget =\n    knScalingConfig['container-concurrency-target-default'] || '';\n  initialValues.serverless.scaling.concurrencyutilization =\n    knScalingConfig['container-concurrency-target-percentage'] || '';\n  initialValues.serverless.scaling.defaultConcurrencytarget =\n    knScalingConfig['container-concurrency-target-default'] || '';\n  initialValues.serverless.scaling.defaultConcurrencyutilization =\n    knScalingConfig['container-concurrency-target-percentage'] || '';\n  initialValues.serverless.scaling.autoscale = {\n    autoscalewindow,\n    defaultAutoscalewindow: autoscalewindow,\n    autoscalewindowUnit,\n    defaultAutoscalewindowUnit,\n  };\n  return initialValues;\n};\n\nexport const useUpdateKnScalingDefaultValues = (initialValues) => {\n  const knScalingConfig = useGetAutoscalerConfig();\n  // TODO: We should not expect that overridding the formik initialValues in a hook works fine.\n  const [initialValuesState, setInitialValuesState] = React.useState(initialValues);\n  React.useEffect(() => {\n    if (knScalingConfig) {\n      setInitialValuesState((previousValues) =>\n        setKnScalingDefaultValue(previousValues, knScalingConfig),\n      );\n    }\n  }, [knScalingConfig]);\n  return initialValuesState;\n};\n","import { BuilderImage, NormalizedBuilderImages } from './imagestream-utils';\n\nexport enum SupportedRuntime {\n  Node = 'node',\n  NodeJS = 'nodejs',\n  TypeScript = 'typescript',\n  Quarkus = 'quarkus',\n}\n\nexport const notSupportedRuntime = ['go', 'rust', 'springboot', 'python'];\n\nexport const getRuntimeImage = (\n  runtime: SupportedRuntime,\n  builderImages: NormalizedBuilderImages,\n): BuilderImage => {\n  switch (runtime) {\n    case SupportedRuntime.Node:\n      return builderImages.nodejs;\n    case SupportedRuntime.NodeJS:\n      return builderImages.nodejs;\n    case SupportedRuntime.TypeScript:\n      return builderImages.nodejs;\n    case SupportedRuntime.Quarkus:\n      return builderImages.java;\n    default:\n      return undefined;\n  }\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { ConfigMapKind } from '@console/internal/module/k8s';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\n\nexport const useGetAutoscalerConfig = () => {\n  const [configmap, configmapLoaded, configmapError] = useK8sGet<ConfigMapKind>(\n    ConfigMapModel,\n    'config-autoscaler',\n    'knative-serving',\n  );\n  // eslint-disable-next-line no-underscore-dangle\n  const config = configmapLoaded && !configmapError && safeYAMLToJS(configmap.data._example);\n  return config;\n};\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { PageHeading } from '@console/internal/components/utils';\nimport NamespacedPage, { NamespacedPageVariants } from '../../NamespacedPage';\nimport QueryFocusApplication from '../../QueryFocusApplication';\nimport AddServerlessFunction from './AddServerlessFunction';\n\nconst ServerlessFunctionPage: React.FC = () => {\n  const { ns: namespace } = useParams();\n  const { t } = useTranslation();\n  return (\n    <QueryFocusApplication>\n      {(application) => (\n        <NamespacedPage disabled variant={NamespacedPageVariants.light}>\n          <Helmet>\n            <title>{t('devconsole~Create Serverless function')}</title>\n          </Helmet>\n          <PageHeading title={t('devconsole~Create Serverless function')} />\n          <AddServerlessFunction namespace={namespace} forApplication={application} />\n        </NamespacedPage>\n      )}\n    </QueryFocusApplication>\n  );\n};\n\nexport default ServerlessFunctionPage;\n","import * as React from 'react';\nimport { ValidatedOptions } from '@patternfly/react-core';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useActivePerspective,\n  WatchK8sResults,\n  WatchK8sResultsObject,\n} from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { LoadingBox, history } from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ImageStreamModel, ProjectModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { defaultRepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/consts';\nimport {\n  ALL_APPLICATIONS_KEY,\n  usePerspectives,\n  usePostFormSubmitAction,\n  useTelemetry,\n} from '@console/shared/src';\nimport { sanitizeApplicationValue } from '@console/topology/src/utils/application-utils';\nimport { normalizeBuilderImages, NormalizedBuilderImages } from '../../../utils/imagestream-utils';\nimport { getBaseInitialValues } from '../form-initial-values';\nimport {\n  createOrUpdateResources,\n  handleRedirect,\n  filterDeployedResources,\n} from '../import-submit-utils';\nimport { BaseFormData, BuildOptions, Resources } from '../import-types';\nimport { validationSchema } from '../import-validation-utils';\nimport { useUpdateKnScalingDefaultValues } from '../serverless/useUpdateKnScalingDefaultValues';\nimport AddServerlessFunctionForm from './AddServerlessFunctionForm';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype WatchResource = {\n  [key: string]: K8sResourceKind[] | K8sResourceKind;\n};\n\ntype AddServerlessFunctionProps = {\n  namespace: string;\n  forApplication: string;\n};\n\nconst AddServerlessFunction: React.FC<AddServerlessFunctionProps> = ({\n  namespace,\n  forApplication,\n}) => {\n  const { t } = useTranslation();\n  const postFormCallback = usePostFormSubmitAction();\n  const [perspective] = useActivePerspective();\n  const perspectiveExtensions = usePerspectives();\n  const fireTelemetryEvent = useTelemetry();\n  const application = forApplication || '';\n  const activeApplication = application !== ALL_APPLICATIONS_KEY ? application : '';\n  const initialBaseValues: BaseFormData = getBaseInitialValues(namespace, activeApplication);\n  const initialValues = {\n    ...initialBaseValues,\n    formType: 'serverlessFunction',\n    resources: Resources.KnativeService,\n    application: {\n      ...initialBaseValues.application,\n      isInContext: !!sanitizeApplicationValue(activeApplication),\n    },\n    git: {\n      url: '',\n      type: GitProvider.INVALID,\n      ref: '',\n      dir: '/',\n      showGitType: false,\n      secret: '',\n      isUrlValidating: false,\n      validated: ValidatedOptions.default,\n    },\n    import: {\n      showEditImportStrategy: true,\n    },\n    docker: {\n      dockerfilePath: '',\n      dockerfileHasError: true,\n    },\n    devfile: {\n      devfilePath: '',\n      devfileHasError: false,\n    },\n    build: {\n      ...initialBaseValues.build,\n      env: [],\n      triggers: {\n        webhook: true,\n        image: true,\n        config: true,\n      },\n      strategy: 'Source',\n    },\n    pipeline: {\n      enabled: false,\n    },\n    pac: {\n      pacHasError: false,\n      repository: {\n        ...defaultRepositoryFormValues,\n      },\n    },\n  };\n\n  const initialVals = useUpdateKnScalingDefaultValues(initialValues);\n\n  const watchedResources = {\n    imageStreams: {\n      kind: ImageStreamModel.kind,\n      isList: true,\n      namespace: 'openshift',\n    },\n    projects: {\n      kind: ProjectModel.kind,\n      isList: true,\n    },\n  };\n  const resourcesData: WatchK8sResults<WatchResource> = useK8sWatchResources<WatchResource>(\n    watchedResources,\n  );\n\n  const isResourceLoaded =\n    Object.keys(resourcesData).length > 0 &&\n    Object.values(resourcesData).every((value) => value.loaded || !!value.loadError);\n\n  if (!isResourceLoaded) return <LoadingBox />;\n\n  const { loaded: isLoaded, data: isData, loadError: isLoadError } = resourcesData.imageStreams;\n\n  const builderImages: NormalizedBuilderImages =\n    !isLoadError && isLoaded && isData && normalizeBuilderImages(isData);\n\n  const handleSubmit = (values, actions) => {\n    const imageStream = builderImages && builderImages[values.image.selected]?.obj;\n    const createNewProject =\n      resourcesData.projects.loaded && _.isEmpty(resourcesData.projects.data);\n    const {\n      project: { name: projectName },\n      pipeline: { enabled: isPipelineOptionChecked },\n    } = values;\n\n    const updatedFormData = {\n      ...values,\n      build: {\n        ...values.build,\n        option: isPipelineOptionChecked ? BuildOptions.PIPELINES : BuildOptions.BUILDS,\n      },\n    };\n    const resourceActions = createOrUpdateResources(\n      t,\n      updatedFormData,\n      imageStream,\n      createNewProject,\n      true,\n    ).then(() => createOrUpdateResources(t, updatedFormData, imageStream));\n\n    resourceActions\n      .then((resources) => {\n        postFormCallback(resources);\n      })\n      .catch(() => {});\n    fireTelemetryEvent('Serverless Function being created');\n    return resourceActions\n      .then((res) => {\n        const selectId = filterDeployedResources(res)[0]?.metadata?.uid || undefined;\n\n        handleRedirect(\n          projectName,\n          perspective,\n          perspectiveExtensions,\n          new URLSearchParams({ selectId }),\n        );\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.warn('Error while submitting import form:', err);\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n  return (\n    <Formik\n      initialValues={initialVals}\n      onSubmit={handleSubmit}\n      onReset={history.goBack}\n      validationSchema={validationSchema(t)}\n    >\n      {(formikProps) => (\n        <AddServerlessFunctionForm\n          {...formikProps}\n          projects={resourcesData.projects as WatchK8sResultsObject<K8sResourceKind[]>}\n          builderImages={builderImages}\n        />\n      )}\n    </Formik>\n  );\n};\n\nexport default AddServerlessFunction;\n","import * as React from 'react';\nimport { Alert, Flex, FlexItem, ValidatedOptions } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { k8sListResourceItems } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { evaluateFunc } from '@console/git-service/src/utils/serverless-strategy-detector';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServerlessBuildStrategyType } from '@console/knative-plugin/src/types';\nimport PipelineSection from '@console/pipelines-plugin/src/components/import/pipeline/PipelineSection';\nimport {\n  CLUSTER_PIPELINE_NS,\n  FLAG_OPENSHIFT_PIPELINE,\n  FUNC_PIPELINE_RUNTIME_LABEL,\n} from '@console/pipelines-plugin/src/const';\nimport { PipelineModel } from '@console/pipelines-plugin/src/models';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport { useFlag } from '@console/shared/src';\nimport { FlexForm, FormBody, FormFooter } from '@console/shared/src/components/form-utils';\nimport { NormalizedBuilderImages } from '../../../utils/imagestream-utils';\nimport { notSupportedRuntime } from '../../../utils/serverless-functions';\nimport AdvancedSection from '../advanced/AdvancedSection';\nimport AppSection from '../app/AppSection';\nimport GitSection from '../git/GitSection';\nimport ServerlessFunctionStrategySection from './ServerlessFunctionStrategySection';\n\nimport './AddServerlessFunctionForm.scss';\n\ntype AddServerlessFunctionFormProps = {\n  builderImages?: NormalizedBuilderImages;\n  projects: WatchK8sResultsObject<K8sResourceKind[]>;\n};\n\nenum SupportedRuntime {\n  node = 'nodejs',\n  nodejs = 'nodejs',\n  typescript = 'nodejs',\n  quarkus = 'java',\n}\n\nexport const SERVERLESS_FUNCTION_DOCS_URL =\n  'https://docs.openshift.com/serverless/latest/functions/serverless-functions-getting-started.html';\n\nconst AddServerlessFunctionForm: React.FC<\n  FormikProps<FormikValues> & AddServerlessFunctionFormProps\n> = ({\n  values,\n  errors,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n  dirty,\n  builderImages,\n  projects,\n  setFieldValue,\n  setStatus,\n}) => {\n  const { t } = useTranslation();\n\n  const {\n    git: { validated, url, type, ref, dir, secretResource },\n    build: { strategy },\n    image,\n  } = values;\n  const isPipelineEnabled = useFlag(FLAG_OPENSHIFT_PIPELINE);\n  const [showPipelineSection, setShowPipelineSection] = React.useState<boolean>(false);\n  const showFullForm =\n    strategy === ServerlessBuildStrategyType.ServerlessFunction &&\n    validated !== ValidatedOptions.default &&\n    type !== GitProvider.INVALID;\n  const [helpText, setHelpText] = React.useState<string>('');\n\n  React.useEffect(() => {\n    if (url) {\n      const gitService = getGitService(url, type, ref, dir, secretResource);\n      if (gitService) {\n        gitService\n          .isFuncYamlPresent()\n          // eslint-disable-next-line consistent-return\n          .then((isFuncYamlPresent) => {\n            if (!isFuncYamlPresent) {\n              setHelpText(t('devconsole~Unable to find func.yaml in the repository.'));\n              setStatus({ errors: 'func.yaml not present' });\n            } else {\n              return evaluateFunc(gitService);\n            }\n          })\n          .then((res) => {\n            if (res) {\n              setStatus({});\n              setFieldValue('build.env', res?.values?.builderEnvs);\n              setFieldValue('deployment.env', res?.values?.runtimeEnvs);\n              setFieldValue(\n                'image.selected',\n                notSupportedRuntime.indexOf(res?.values?.runtime) === -1\n                  ? SupportedRuntime[res?.values?.runtime]\n                  : res?.values?.runtime,\n              );\n              setFieldValue('import.showEditImportStrategy', true);\n              setFieldValue(\n                'image.tag',\n                builderImages?.[SupportedRuntime[res?.values?.runtime]]?.recentTag?.name ?? '',\n              );\n              if (res?.values?.builder && res?.values?.builder !== 's2i') {\n                setHelpText(\n                  t(\n                    'devconsole~Unsupported builder strategy detected. s2i is currently supported.',\n                  ),\n                );\n                setStatus({ errors: 'Builder strategy not supported' });\n              }\n              if (builderImages[SupportedRuntime[res?.values?.runtime]] === undefined) {\n                setHelpText(\n                  t('devconsole~Support for {{runtime}} is not yet available.', {\n                    runtime: res?.values?.runtime,\n                  }),\n                );\n                setStatus({ errors: 'Builder Image is not present' });\n              }\n            } else {\n              setStatus({ errors: 'Not evaluated' });\n            }\n          })\n          .catch((err) => {\n            setStatus({ errors: err });\n          });\n      }\n    }\n  }, [setFieldValue, url, type, ref, dir, secretResource, builderImages, setStatus, t]);\n\n  React.useEffect(() => {\n    if (image.selected && isPipelineEnabled) {\n      const fetchPipelineTemplate = async () => {\n        const fetchedPipelines = (await k8sListResourceItems({\n          model: PipelineModel,\n          queryParams: {\n            ns: CLUSTER_PIPELINE_NS,\n            labelSelector: { matchLabels: { [FUNC_PIPELINE_RUNTIME_LABEL]: image?.selected } },\n          },\n        })) as PipelineKind[];\n        if (fetchedPipelines.length > 0) {\n          setShowPipelineSection(true);\n        } else {\n          setShowPipelineSection(false);\n        }\n      };\n      fetchPipelineTemplate();\n    }\n  }, [image, isPipelineEnabled]);\n\n  return (\n    <FlexForm onSubmit={handleSubmit} data-test=\"create-serverless-function-form\">\n      <Flex direction={{ default: 'column', sm: 'row' }}>\n        <FlexItem flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfFlexStart' }}>\n          <FormBody flexLayout>\n            <GitSection builderImages={builderImages} />\n            {showFullForm && (\n              <>\n                {builderImages && (\n                  <ServerlessFunctionStrategySection builderImages={builderImages} />\n                )}\n                <AppSection\n                  project={values.project}\n                  noProjectsAvailable={projects.loaded && _.isEmpty(projects.data)}\n                />\n                {showPipelineSection && <PipelineSection builderImages={builderImages} />}\n                <AdvancedSection values={values} />\n              </>\n            )}\n            {validated !== ValidatedOptions.default &&\n              validated !== ValidatedOptions.warning &&\n              strategy !== ServerlessBuildStrategyType.ServerlessFunction && (\n                <Alert\n                  variant=\"warning\"\n                  isInline\n                  title={t('devconsole~Serverless function cannot be created')}\n                >\n                  {helpText}\n                  <p className=\"odc-func-form-helpText\">\n                    <Trans t={t} ns=\"devconsole\">\n                      <b>Tip:</b> Use the <code className=\"co-code\">kn func create</code> command to\n                      create the serverless function.\n                    </Trans>\n                  </p>\n                  <ExternalLink\n                    additionalClassName=\"odc-func-form-link\"\n                    href={SERVERLESS_FUNCTION_DOCS_URL}\n                    text={t('devconsole~Learn more')}\n                  />\n                </Alert>\n              )}\n          </FormBody>\n        </FlexItem>\n      </Flex>\n      <FormFooter\n        handleReset={handleReset}\n        errorMessage={status && status.submitError}\n        isSubmitting={isSubmitting}\n        submitLabel={t('devconsole~Create')}\n        disableSubmit={!dirty || !_.isEmpty(status?.errors) || !_.isEmpty(errors) || isSubmitting}\n        resetLabel={t('devconsole~Cancel')}\n        sticky\n      />\n    </FlexForm>\n  );\n};\n\nexport default AddServerlessFunctionForm;\n","import * as React from 'react';\nimport { Alert, ValidatedOptions } from '@patternfly/react-core';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { ServerlessBuildStrategyType } from '@console/knative-plugin/src';\nimport { notSupportedRuntime } from '../../../utils/serverless-functions';\nimport BuilderImageTagSelector from '../builder/BuilderImageTagSelector';\nimport FormSection from '../section/FormSection';\n\nconst ServerlessFunctionStrategySection = ({ builderImages }) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const {\n    git: { validated },\n    build: { strategy },\n  } = values;\n  return (\n    <FormSection>\n      {validated === ValidatedOptions.success && builderImages[values.image.selected] && (\n        <BuilderImageTagSelector\n          selectedBuilderImage={builderImages[values.image.selected]}\n          selectedImageTag={values.image.tag}\n        />\n      )}\n      {validated !== ValidatedOptions.warning &&\n        strategy === ServerlessBuildStrategyType.ServerlessFunction &&\n        notSupportedRuntime.indexOf(values.image.selected) === -1 &&\n        builderImages[values.image.selected] === undefined && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            title={t('devconsole~Builder Image {{image}} is not present.', {\n              image: values.image.selected,\n            })}\n          >\n            <p>{t('devconsole~Builder image is not present on cluster')}</p>\n          </Alert>\n        )}\n      {validated !== ValidatedOptions.warning &&\n        strategy === ServerlessBuildStrategyType.ServerlessFunction &&\n        notSupportedRuntime.indexOf(values.image.selected) > -1 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            title={t('devconsole~Support for Builder image {{image}} is not yet available.', {\n              image: values.image.selected,\n            })}\n          />\n        )}\n    </FormSection>\n  );\n};\n\nexport default ServerlessFunctionStrategySection;\n"],"sourceRoot":""}