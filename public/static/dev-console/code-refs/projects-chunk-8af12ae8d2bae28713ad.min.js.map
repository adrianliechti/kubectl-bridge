{"version":3,"sources":["webpack:///./public/components/resource-quota.jsx","webpack:///./public/components/namespace.jsx","webpack:///./packages/console-shared/src/components/dashboard/inventory-card/utils.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./public/components/image-stream.tsx","webpack:///./packages/dev-console/src/components/projects/index.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard-context.tsx","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/data-transforms/ModelContext.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./public/components/dashboard/with-dashboard-resources.tsx","webpack:///./packages/dev-console/src/utils/imagestream-utils.ts","webpack:///./packages/console-app/src/components/resource-quota/utils.ts","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/dev-console/src/components/NamespacedPage.tsx","webpack:///./packages/topology/src/components/dropdowns/ApplicationDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/topology/src/data-transforms/DataModelProvider.tsx","webpack:///./packages/dev-console/src/utils/resource-label-utils.ts","webpack:///./packages/topology/src/data-transforms/DataModelExtension.tsx","webpack:///./packages/topology/src/data-transforms/TopologyDataRetriever.tsx","webpack:///./packages/topology/src/data-transforms/updateTopologyDataModel.ts","webpack:///./packages/topology/src/data-transforms/data-transformer.ts","webpack:///./packages/topology/src/data-transforms/useMonitoringAlerts.tsx","webpack:///./public/components/graphs/prometheus-rules-hook.ts","webpack:///./packages/topology/src/extensions/index.ts","webpack:///./packages/dev-console/src/components/health-checks/create-health-checks-probe-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-types.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/topology/src/components/dropdowns/NamespaceBarApplicationSelector.tsx","webpack:///./packages/shipwright-plugin/src/models.ts","webpack:///./packages/shipwright-plugin/src/const.ts","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utils.ts","webpack:///./packages/console-shared/src/components/dashboard/utilization-card/TopConsumerPopover.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/health-item.tsx","webpack:///./packages/console-shared/src/promql/project-dashboard.ts","webpack:///./packages/console-shared/src/promql/cluster-dashboard.ts","webpack:///./packages/console-app/src/components/resource-quota/ResourceQuotaCharts.tsx","webpack:///./packages/console-app/src/components/resource-quota/AppliedClusterResourceQuotaCharts.tsx","webpack:///./public/components/graphs/donut.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/QuotaSummary.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./public/components/image-stream-timeline.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/context.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-utils.ts","webpack:///./packages/console-shared/src/components/dashboard/status-card/OperatorStatusBody.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/status-card.tsx","webpack:///./packages/dev-console/src/components/projects/CreateProjectListPage.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-card.tsx","webpack:///./public/components/graphs/gauge.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./public/components/dashboard/project-dashboard/project-dashboard.tsx","webpack:///./packages/dev-console/src/components/import/import-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils.ts","webpack:///./packages/dev-console/src/components/projects/ProjectListPage.tsx","webpack:///./public/components/overview/index.tsx","webpack:///./public/components/dashboard/project-dashboard/details-card.tsx","webpack:///./public/components/dashboard/project-dashboard/status-card.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-card.tsx","webpack:///./public/components/dashboard/dashboards-page/cluster-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/utilization-popovers.tsx","webpack:///./public/components/dashboard/project-dashboard/inventory-card.tsx","webpack:///./public/components/dashboard/project-dashboard/activity-card.tsx","webpack:///./public/components/dashboard/project-dashboard/launcher-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/launcher-card/LauncherItem.tsx","webpack:///./public/components/dashboard/project-dashboard/resource-quota-card.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem.tsx","webpack:///./packages/console-app/src/components/resource-quota/ClusterResourceQuotaCharts.tsx","webpack:///./packages/console-shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem.tsx","webpack:///./packages/knative-plugin/src/utils/create-knative-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/dev-console/src/utils/shared-submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/dev-console/src/components/project-access/project-access-form-utils.ts","webpack:///./packages/dev-console/src/components/project-access/project-access-form-utils-types.ts","webpack:///./packages/dev-console/src/components/project-access/ProjectAccessPage.tsx","webpack:///./packages/dev-console/src/components/project-access/hooks.ts","webpack:///./packages/dev-console/src/components/project-access/ProjectAccess.tsx","webpack:///./packages/dev-console/src/components/project-access/project-access-form-submit-utils.ts","webpack:///./packages/dev-console/src/components/project-access/project-access-form-validation-utils.ts","webpack:///./packages/dev-console/src/components/project-access/ProjectAccessForm.tsx","webpack:///./packages/dev-console/src/components/projects/details/ProjectDetailsPage.tsx"],"names":["common","factory","resourceQuotaMenuActions","getExtensionsActionsForKind","clusterResourceQuotaMenuActions","appliedClusterResourceQuotaMenuActions","namespace","ModifyLabels","ModifyAnnotations","kind","obj","labelKey","href","metadata","name","accessReview","group","apiGroup","resource","plural","verb","Delete","isClusterQuota","quota","clusterQuotaReference","appliedClusterQuotaReference","quotaActions","customData","getQuotaResourceTypes","specHard","sort","getACRQResourceUsage","resourceType","used","status","namespaces","filter","ns","cluster","total","totalUsed","max","hard","spec","percentNamespace","percentOtherNamespaces","percent","otherNamespaces","unused","getResourceUsage","isCluster","statusPath","specPath","usedPath","tableColumnClasses","columnClass","acrqTableColumnClasses","UsageIcon","usageIcon","className","ResourceUsageRow","QuotaScopesInline","scopes","join","QuotaScopesList","t","quotaScopes","Terminating","description","NotTerminating","BestEffort","NotBestEffort","map","scope","scopeObj","key","hasComputeResources","resourceTypes","length","Details","rq","params","reference","isACRQ","text","charts","appliedClusterResourceQuota","clusterResourceQuota","resourceQuota","canListCRQ","label","path","labels","selector","matchLabels","annotations","style","display","marginBottom","type","ResourceQuotaTableRow","actions","resourcesAtQuota","Object","keys","reduce","acc","dataTest","columnID","count","timestamp","creationTimestamp","AppliedClusterResourceQuotaTableRow","ResourceQuotasList","props","Header","title","sortField","transforms","id","Row","virtualize","AppliedClusterResourceQuotasList","quotaType","flatten","resources","data","ResourceQuotasPage","OPENSHIFT","flags","mock","showTitle","namespaced","rowFilters","push","optional","filterGroupName","reducer","items","labelPluralKey","createNS","model","canCreate","createAccessReview","createButtonText","createProps","to","ListComponent","AppliedClusterResourceQuotasPage","ResourceQuotasDetailsPage","menuActions","pages","details","editYaml","AppliedClusterResourceQuotasDetailsPage","getDisplayName","getFilters","requester","ME","USER","SYSTEM","hideIfEmpty","deleteModal","labelKind","weight","tooltip","callback","undefined","phase","content","nsMenuActions","Edit","fetchNamespaceMetrics","promises","query","url","then","result","value","Number","metric","Promise","all","catch","console","error","namespaceColumnInfo","freeze","classes","displayName","memory","cpu","created","NamespacesTableHeader","sortFunc","additional","NamespacesColumnManagementID","getNamespacesSelectedColumns","Set","column","NamespacesTableRow","tableColumns","metrics","UI","getIn","bytes","cores","columns","NamespacesNotFoundMessage","Icon","NamespacesEmptyMessage","NamespacesList","dispatch","updateMetrics","setInterval","clearInterval","selectedColumns","activeColumns","columnManagementID","EmptyMsg","NoDataEmptyMsg","NamespacesPage","createNamespaceModal","createHandler","columnLayout","projectMenuActions","projectColumnManagementID","projectTableHeader","showMetrics","showActions","ProjectLink","project","setLastNamespace","URL","window","location","URLSearchParams","search","basePath","pathname","has","delete","newUrl","toString","hash","namespacedPath","onClick","e","sessionStorage","setItem","projectHeaderWithoutActions","ProjectTableRow","ProjectLinkComponent","actionsEnabled","isColumnManagementEnabled","getProjectSelectedColumns","ProjectsTable","headerWithMetrics","headerNoMetrics","ProjectNotFoundMessage","canCreateNs","CAN_CREATE_NS","canCreateProject","CAN_CREATE_PROJECT","ProjectEmptyMessage","icon","ProjectList","tableProps","canGetNS","CAN_GET_NS","screen","width","ProjectsPage","createProjectModal","filterLabel","skipAccessReview","textFilter","PullSecret","isLoading","setIsLoading","setData","setError","canViewSecrets","serviceAccount","imagePullSecrets","err","modal","pullSecret","variant","isInline","secret","linkTo","NamespaceLineCharts","humanize","byteDataType","BinaryBytes","TopPodsBarChart","ResourceUsage","NamespaceSummary","serviceMeshEnabled","canListSecrets","showLabelEditor","NamespaceDetails","perspective","consoleLinks","isList","links","hideHeading","link","uid","RolesPage","createPath","NamespacesDetailsPage","roles","ProjectsDetailsPage","nameKey","component","workloads","POD_PHASE_GROUP_MAPPING","NOT_MAPPED","ERROR","PROGRESS","WARN","PVC_STATUS_GROUP_MAPPING","PV_STATUS_GROUP_MAPPING","NODE_STATUS_GROUP_MAPPING","VS_STATUS_GROUP_MAPPING","getStatusGroups","mapping","mapper","filterType","groups","UNKNOWN","statusIDs","forEach","find","includes","getPodStatusGroups","getNodeStatusGroups","getPVCStatusGroups","pvc","getPVStatusGroups","pv","getVSStatusGroups","getAnnotationTags","specTag","split","getBuilderTags","imageStream","statusTags","getStatusTags","tags","tag","annotationTags","isBuilderTag","getBuilderTagsSortedByVersion","a","b","v1","v2","localeCompare","getMostRecentBuilderTag","isBuilder","ImageStreamTagsRow","statusTag","imageStreamStatus","latest","from","referencesTag","image","dockerRepositoryCheck","ExampleDockerCommandPopover","publicImageRepository","pushCommand","pullCommand","headerContent","minWidth","bodyContent","ImageStreamsDetails","imageRepository","imageCount","specTagByName","importErrors","importErrorCondition","conditions","condition","message","warning","alerts","i","ImageStreamHistory","imageStreamStatusTags","imageStreamTags","imageStreamName","imageStreamNamespace","history","ImageStreamsDetailsPage","ImageStreamsTableRow","ImageStreamsList","ImageStreamsTableHeader","buildPhase","build","ImageStreamsPage","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","dockerconfigjson","opaque","toTypeAbstraction","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","buildType","DroppableFileInput","loader","c","API_PROXY_URL","convertHeaders","headers","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","onCancel","navigate","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","inProgress","setInProgress","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","when","is","deploymentValidationSchema","replicas","transform","cv","min","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","request","requestUnit","limitUnit","ensure","imageValidationSchema","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","abbr","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","associateServiceAccountToSecret","isImageSecret","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","ownerReferences","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","match","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loaded","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","height","visible","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","ProjectDashboardContext","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","ExtensibleModel","extensions","extensionsLoaded","watchedResources","updateWatchedResources","extensionKeys","resList","resKey","updateExtension","extension","updateExtensionsLoaded","workloadKeys","getExtensionModels","topologyModel","getters","dataModelGetters","depicters","workloadResources","getter","reconcileModel","dataModelReconcilers","reconciler","isEmptyModel","prev","every","dataModelGetter","dataModelDepicter","dataModelReconciler","onExtensionsLoaded","workloadKey","k1","k2","prioritizedKeys","ModelContext","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","mapDispatchToProps","watchURL","stopWatchURL","watchPrometheusQuery","stopWatchPrometheusQuery","mapStateToProps","dashboards","PROMETHEUS","notificationAlerts","observe","withDashboardResources","WrappedComponent","urls","queries","watchingAlerts","watchPrometheus","queryKey","q","watchAlerts","stopWatchAlerts","watchK8sResource","k8sResources","stopWatchK8sResource","getExternalProps","nextProps","nextState","urlResultChanged","urlKey","queryResultChanged","alertsResultChanged","k8sResourcesChanged","nextExternalProps","externalProps","urlResults","prometheusResults","imageStreamLabels","getSampleRepo","sampleRepo","getSampleRef","sampleRef","getSampleContextDir","sampleContextDir","getPorts","imageStreamImage","portSpec","parts","parseInt","protocol","toUpperCase","portsFromSpec","dockerImageMetadata","Config","ExposedPorts","ContainerConfig","makePortName","toLowerCase","prettifyName","first","prep","letter","normalizeBuilderImages","imageStreams","builderImages","recentTag","iconClass","iconUrl","getTagDataWithDisplayName","imageTags","selectedTag","defaultName","imageTag","getSuggestedName","imageName","RegistryType","BuilderImagesNamespace","imageRegistryType","External","Internal","getImageStreamTags","getSortedTags","getProjectResource","getImageStreamResource","genericCountResources","getUsedPercentage","usedNum","hardNum","getLabelAndUsage","resourceName","useCount","useK8sGet","opts","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","options","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","NamespacedPageVariants","onNamespaceChange","hideProjects","hideApplications","toolbar","modelFactories","dynamicModelFactories","namespacedDynamicFactories","watchedBaseResources","modelFactory","factoryResources","properties","placeholder","dataSelector","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","getNamespacedDynamicModelFactories","entries","flattenedResource","resourceKey","extensionReference","internalModel","pluginID","internalReference","flattenResource","Provider","dataModelFactory","getAppLabels","applicationName","runtimeIcon","app","getCommonAnnotations","getRouteAnnotations","getGitAnnotations","gitURL","gitRef","getTriggerAnnotation","imageNamespace","imageTrigger","fieldPath","paused","getPodLabels","mergeData","originalResource","newResource","mergedData","isDevfileResource","isFromDevfile","allAnnotations","containers","volumeMounts","hasOwnProperty","sourceSecret","volumes","getTemplateLabels","dataModelContext","extensionContext","getExtension","current","getDataModel","isResourceDepicted","getDataModelReconciler","trafficData","setResources","resourcesList","debouncedUpdateResources","updatedResources","updateTopologyDataModel","loadErrorKey","getLoadError","isLoaded","extensionsModel","fullModel","getTrafficConnectors","filteredWorkload","nodeType","sourceTrafficNode","wrkld","targetTrafficNode","sourceResourceNode","targetResourceNode","traffic","baseDataModelGetter","baseModel","baseDataModel","typedDataModel","getBaseTopologyDataModel","updateAppGroupChildren","createVisualConnectors","createTrafficConnectors","useMonitoringAlerts","alertsResponse","alertsError","alertsLoading","alertData","alert","activeAt","rule","evaluationTime","lastEvaluation","ruleAlert","usePrometheusRulesPoll","delay","endpoint","RULES","constructProbeData","ContainerCommand","HTTPGET","scheme","TCPSocket","convertResourceDataToFormData","getHealthChecksData","containerIndex","ReadinessProbe","LivenessProbe","StartupProbe","getProbesData","HealthChecksProbeType","RequestType","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","revision","dir","insecure","cadata","allApplicationsTitle","noApplicationsTitle","dropdownTitle","setTitle","buttonClassName","titlePrefix","allSelectorItem","allSelectorKey","allSelectorTitle","noneSelectorItem","noneSelectorKey","noneSelectorTitle","newApplication","userSettingsPrefix","storageKey","ClusterBuildStrategyModelV1Alpha1","BuildStrategyModelV1Alpha1","BuildModelV1Alpha1","BuildRunModelV1Alpha1","ClusterBuildStrategyModel","BuildStrategyModel","BuildModel","BuildRunModel","API_GROUP","API_VERSION_LATEST","BUILDRUN_TO_BUILD_REFERENCE_LABEL","BUILDRUN_TO_RESOURCE_MAP_LABEL","BUILD_OUTPUT_IMAGESTREAM_URL","BUILD_OUTPUT_QUAY_URL","uniqueResource","ConsumerPopover","consumers","top","isOpen","setOpen","onShow","onHide","PopoverBody","enableFlip","maxWidth","getLimitIcon","LimitsBody","limitState","requestedState","available","requested","OK","currentConsumer","setCurrentConsumer","activePerspective","canAccessMonitoring","SERVER_FLAGS","prometheusBaseURL","fieldSelector","k8sResource","getResourceToWatch","consumerData","consumerLoaded","consumersLoadError","top5Data","bodyData","consumer","monitoringParams","set","dropdownItems","curr","onDropdownChange","monitoringURL","String","ListItem","OperatorRow","operatorStatus","isResolved","Component","LoadingComponent","ResolvedComponent","operators","OperatorsPopup","operatorExtensions","dynamicOperatorSubsystems","sections","o","operatorResources","getOperatorsWithStatuses","viewAllLink","operatorRowLoader","reverse","hasGutter","OperatorHealthItem","healthStatuses","health","NOT_AVAILABLE","LOADING","operatorStatuses","importantStatuses","operatorsHealth","detailMessage","popupTitle","URLHealthItem","subsystem","modelExists","additionalResource","healthResult","healthResultError","k8sResult","healthState","healthHandler","popupBodyContent","popupComponent","hide","PrometheusHealthItem","infrastructure","queryResults","popupClassname","popupKeepOnOutsideClick","responses","ResourceHealthItem","resourcesWithNamespace","imageManifestVuln","resourcesResult","ProjectQueries","CPU_USAGE","CPU_REQUESTS","MEMORY_USAGE","MEMORY_REQUESTS","POD_COUNT","FILESYSTEM_USAGE","NETWORK_IN_UTILIZATION","NETWORK_OUT_UTILIZATION","top25Queries","PODS_BY_CPU","PODS_BY_MEMORY","PODS_BY_FILESYSTEM","PODS_BY_NETWORK_IN","PODS_BY_NETWORK_OUT","getMultilineQueries","NETWORK_UTILIZATION","desc","getUtilizationQueries","getTopConsumerQueries","OverviewQuery","PODS_BY_STORAGE","NODES_BY_CPU","NODES_BY_MEMORY","NODES_BY_STORAGE","NODES_BY_PODS","NODES_BY_NETWORK_IN","NODES_BY_NETWORK_OUT","PROJECTS_BY_CPU","PROJECTS_BY_MEMORY","PROJECTS_BY_STORAGE","PROJECTS_BY_PODS","PROJECTS_BY_NETWORK_IN","PROJECTS_BY_NETWORK_OUT","overviewQueries","MEMORY_TOTAL","MEMORY_UTILIZATION","CPU_UTILIZATION","CPU_TOTAL","STORAGE_UTILIZATION","STORAGE_TOTAL","POD_UTILIZATION","getTop25ConsumerQueries","utilization","thresholds","nsQuotas","clusterHard","clusterUsed","nsUsed","clusterUsage","nsUsage","DonutChart","ariaChartLinkLabel","ariaChartTitle","ariaDescription","usedLabel","secondaryTitle","usedLabelText","secondaryTitleText","labelText","namespaceData","datum","ariaTitle","ariaDesc","subTitle","colorScale","getDefinedObj","objData","createPipelineResource","secretResp","pipelineResource","fieldName","secretKey","createSecretResource","getImageStreamTagName","ImageStreamTimelineItem","linkToTag","referenceAndSHA","dockerImageReference","simple","isTagVersionLatest","comparedTag","comparedTagPosition","orderedTagArray","orderedTag","ImageStreamTimeline","tagsArray","timeline","ClusterDashboardContext","infrastructureLoaded","infrastructureError","getHealthChecksProbeConfig","probe","formTitle","formSubtitle","healthChecksDefaultValues","httpHeaders","healthChecksProbeInitialData","OperatorsSection","sortedOperatorStatuses","operatorsHealthy","RowLoading","firstColumn","operatorStatusLength","secondColumn","cvResource","DashboardAlerts","hasCVResource","CLUSTER_VERSION","cvLoaded","showClusterUpdate","StatusCard","k8sModels","k8s","subsystemExtensions","dynamicSubsystemExtensions","subsystems","filterSubsystems","popup","operatorSubsystemIndex","findIndex","healthItems","disallowedControlPlaneTopology","controlPlaneTopology","operatorSubsystems","isClickable","isSelectable","hasNoOffset","CreateAProjectButton","openProjectModal","onCreate","setActiveNamespace","createNamespaceOrProjectModal","networkPopovers","PrometheusUtilizationItem","utilizationQuery","totalQuery","TopConsumerPopover","humanizeValue","limitQuery","requestQuery","setLimitReqState","utilizationError","totalError","limitError","requestError","PrometheusMultilineUtilizationItem","TopConsumerPopovers","stats","hasError","responseError","UtilizationCardNodeFilter","machineConfigPools","onNodeSelect","selectedNodes","setIsOpen","selectOptions","order","indexA","indexOf","indexB","mcp","mcpName","hasCheckbox","isSelected","role","onSelect","onOpenChange","open","toggle","toggleRef","isRead","UtilizationCard","machineConfigPoolsLoaded","setSelectedNodes","dynamicItemExtensions","dynamicMultilineItemExtensions","utilizationQueries","multilineQueries","selectionUpdated","getUtilizationQuery","getTotalQuery","getRequestQuery","getLimitQuery","DEFAULT_THRESHOLDS","GaugeChart","invert","loading","remainderLabel","themeColor","green","ready","Gauge","QUERY","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","submitStartPipeline","processWorkspaces","pipelineRunResource","mainCards","Card","leftCards","rightCards","getNamespaceDashboardConsoleLinks","ProjectDashboard","namespaceLinks","context","hasNamespaceLinks","rc","createProject","projectData","createOrUpdateImageStream","formData","imageStreamData","appResources","generatedImageStreamName","userLabels","NAME_LABEL","imageStreamList","imgstr","imageStreamFilterData","originalImageStream","defaultLabels","defaultAnnotations","imgStreamName","newImageStream","createWebhookSecret","createOrUpdateBuildConfig","originalBuildConfig","imageEnv","env","buildStrategy","buildStrategyData","desiredContextDir","imageEnvKeys","customEnvs","buildEnv","dockerStrategy","sourceStrategy","webhookTriggerData","excludedGitTypesForTriggers","buildConfigName","newBuildConfig","uri","imageChange","createOrUpdateDeployment","originalDeployment","ports","podLabels","templateLabels","newDeployment","createOrUpdateResources","createNewProject","create","canCreateRoute","webhookTrigger","option","originalRepository","Devfile","devfileProjectType","devfileResourceObjects","imageStreamResponse","buildConfigResponse","buildResource","webhookSecretResponse","deploymentResponse","deployResource","serviceModelResponse","service","routeResponse","devfileResources","createDevfileResources","pacRepository","pipelineResources","pipelineData","managedPipeline","triggerResources","detectedType","pipelineServiceAccount","managePipelineResources","originalShipwrightBuild","clusterBuildStrategy","imageStreamRepository","dockerImageRepository","shipwrightParamsObj","Docker","Source","shipwrightBuildName","newShipwrightBuild","cloneSecret","paramValues","shipwrightBuild","createOrUpdateShipwrightBuild","imageStreamURL","originalAnnotations","editAppResource","triggerAnnotations","knDeploymentResource","domainMappingResources","originalDeploymentConfig","newDeploymentConfig","imageChangeParams","automatic","containerNames","deploymentConfig","createOrUpdateDeploymentConfig","originalService","originalRoute","filterDeployedResources","handleRedirect","perspectiveExtensions","searchParamOverrides","perspectiveData","redirectURL","importRedirectURL","searchParams","urlObj","fromEntries","addSearchParamsToRelativeURL","isRouteAdvOptionsUsed","routeData","ksvcRouteData","tlsKey","isScalingAdvOptions","scalingData","ksvcData","ksvcScalingData","scKey","defaultConcurrencytarget","defaultConcurrencyutilization","autoscaleData","asKey","defaultAutoscalewindow","isResourceLimitAdvOptions","resLimits","isLimitUsed","resLimitObj","limitKey","defaultLimitUnit","defaultRequestUnit","getTelemetryImport","devfileJson","selStrategy","import","selectedStrategy","useRecommended","recommended","recommendedStrategy","recommendedBuilderImage","devFileLanguage","projectType","devFileProjectType","targetPortChanged","useRunCommand","NPM_RUN","useAdvancedOptionsGit","useAdvancedOptionsBuild","useAdvancedOptionsDeployment","useAdvancedOptionsRoute","useAdvancedOptionsHealthChecks","useAdvancedOptionsScaling","useAdvancedOptionsResourceLimits","useAdvancedOptionsLabels","getPipelineParams","gitDir","isDockerPipeline","createPipelineForImportFlow","createPipelineRunForImportFlow","isServerlessFunctionPipeline","pipelineInitialValues","VolumeClaimTemplate","secretOpen","updatePipelineForImportFlow","updatedPipeline","pipelineRuntimeOrVersionChanged","resourceVersion","badge","listComponent","listPageProps","OverviewListPageLoader","m","OverviewListPage","DetailsCard","labelsSubset","firstThreelabels","detailsLink","projectName","ClusterUtilizationContext","useConsumers","nsQuery","podQuery","nodeQuery","consumerQueries","CPUPopover","MemoryPopover","StoragePopover","PodPopover","NetworkInPopover","NetworkOutPopover","ProjectUtilizationContext","FilesystemPopover","ProjectInventoryItem","additionalResources","additionalDynamicResources","createFirehoseResource","resourceLoaded","resourceLoadError","additionalResourcesData","additionalResourcesLoaded","additionalResourcesLoadError","dynamicResources","dynamicResourcesError","dynamicResourcesLoaded","InventoryCard","itemExtensions","inventoryExtensions","RecentEvent","viewEvents","eventsResource","getEventsResource","moreLink","OngoingActivity","resourceActivityExtensions","dynamicResourceActivityExtensions","resourceActivities","allResourceActivities","isActivity","getTimestamp","resourcesLoaded","size","ActivityCard","LauncherCard","nl","consoleLink","additionalClassName","dataTestID","ResourceQuotaCard","quotas","rqLoaded","rqLoadError","groupVersionKind","clusterQuotas","acrqLoaded","acrqLoadError","noText","cq","isExpanded","setExpanded","isFilled","onToggle","_event","toggleContent","inline","truncate","getKnativeServiceDepResource","imageStreamUrl","imageStreamTag","originalKnativeService","defaultUnknownPort","imagePolicy","formType","fileUpload","contTargetPort","imgPullPolicy","Always","IfNotPresent","cpuRequest","cpuRequestUnit","cpuLimit","cpuLimitUnit","memoryRequest","memoryRequestUnit","memoryLimit","memoryLimitUnit","defaultLabel","jArgsIndex","javaArgs","newKnativeDeployResource","jarFileName","containerConcurrency","imagePullPolicy","securityContext","allowPrivilegeEscalation","capabilities","drop","runAsNonRoot","seccompProfile","knativeServiceUpdated","formDomainMappingStruct","knativeSvcResource","curDomainMapping","svcName","getDomainMappingResources","selectedDomainMapping","allDomainMappingList","dmDeleteList","ksvcName","selDomainMappingNames","dmRes","dmSvc","dmDel","action","dmCreateUpdateList","curDomain","domainMappingResourceData","Update","Create","getDomainMappingRequests","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","setTimeout","servicePort","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","isDeployImageFormData","createService","imagePorts","isi","isiPorts","existingRouteTargetPort","targetPort","newService","createRoute","routeLabels","newRoute","wildcardPolicy","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","eventListenerName","referenceName","eventlistener","getAllNotStartedPipelines","getItem","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setPipelineNotStarted","defaultAccessRoles","admin","edit","view","getAvailableAccessRoles","projectAccessClusterRoles","getUserRoleBindings","roleBindings","clusterRoleNames","roleBinding","roleRef","subjects","roleBindingName","subject","getFormDataFromRoleBinding","ignoreRoleBindingName","Verb","showFullForm","fullFormView","useProjectAccessRoles","availableClusterRoles","watchedClusterRoles","clusterRoles","clusterRole","userRoleBindings","rbacURL","usingRBAC","initialValues","projectAccess","projectAccessForm","newRoles","removeRoles","updateRoles","updateRolesWithMultipleSubjects","removeRoleSubjectFlag","o1","o2","roleBindingRequests","Patch","Remove","resetForm","success","setStatus","submitError","onReset","formikProps","goBack","light","getRolesWithNameChange","createRoles","deleteRoles","getRolesWithSubjectChange","getRolesToUpdate","getNewRoles","initialRoles","getRemovedRoles","getUpdatedSubjects","sub","sendRoleBindingRequest","finalArray","sendK8sRequest","getRolesWithMultipleSubjects","newRole","removeRole","roleWithMultipleSubjects","newSubs","updateRole","SubjectNamespaceDropdown","arr","showDropdown","Group","ServiceAccount","User","fullWidth","handleSubmit","handleReset","isSubmitting","errors","dirty","isStaleInfo","setIsStaleInfo","disableSubmit","addLabel","emptyValues","successMessage","showAlert","submitLabel","resetLabel","infoTitle","infoMessage","handleCancel","handleNamespaceChange","newNamespace","PageContentsWithStartGuide","noProjectsAvailable","canListRoleBindings","canCreateRoleBindings","breadcrumbsFor"],"mappings":"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","file":"dev-console/code-refs/projects-chunk-8af12ae8d2bae28713ad.min.js","sourcesContent":["import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { OutlinedCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-circle-icon';\nimport { ResourcesAlmostEmptyIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-empty-icon';\nimport { ResourcesAlmostFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-almost-full-icon';\nimport { ResourcesFullIcon } from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport { UnknownIcon } from '@patternfly/react-icons/dist/esm/icons/unknown-icon';\n\nimport { useTranslation } from 'react-i18next';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport ClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/ClusterResourceQuotaCharts';\n\nimport { FLAGS, YellowExclamationTriangleIcon } from '@console/shared';\nimport { DetailsPage, MultiListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  SectionHeading,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  convertToBaseValue,\n  FieldLevelHelp,\n  useAccessReview,\n  LabelList,\n  Selector,\n  Timestamp,\n  DetailsItem,\n} from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { flagPending } from '../reducers/features';\nimport { LoadingBox } from './utils/status-box';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport {\n  AppliedClusterResourceQuotaModel,\n  ResourceQuotaModel,\n  ClusterResourceQuotaModel,\n} from '../models';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\n\nconst { common } = Kebab.factory;\n\nconst resourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ResourceQuotaModel),\n  ...common,\n];\nconst clusterResourceQuotaMenuActions = [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  ...common,\n];\nconst appliedClusterResourceQuotaMenuActions = (namespace) => [\n  ...Kebab.getExtensionsActionsForKind(ClusterResourceQuotaModel),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (kind, obj) => {\n    return {\n      // t('public~Edit AppliedClusterResourceQuota')\n      labelKey: 'public~Edit AppliedClusterResourceQuota',\n      href: `/k8s/ns/${namespace}/${referenceForModel(AppliedClusterResourceQuotaModel)}/${\n        obj.metadata.name\n      }/yaml`,\n      accessReview: {\n        group: kind.apiGroup,\n        resource: kind.plural,\n        name: obj.metadata.name,\n        namespace,\n        verb: 'update',\n      },\n    };\n  },\n  Kebab.factory.Delete,\n];\n\nconst isClusterQuota = (quota) => !quota.metadata.namespace;\n\nconst clusterQuotaReference = referenceForModel(ClusterResourceQuotaModel);\nconst appliedClusterQuotaReference = referenceForModel(AppliedClusterResourceQuotaModel);\n\nconst quotaActions = (quota, customData = undefined) => {\n  if (quota.metadata.namespace) {\n    return resourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'ClusterResourceQuota') {\n    return clusterResourceQuotaMenuActions;\n  }\n\n  if (quota.kind === 'AppliedClusterResourceQuota') {\n    return appliedClusterResourceQuotaMenuActions(customData.namespace);\n  }\n};\n\nexport const getQuotaResourceTypes = (quota) => {\n  const specHard = isClusterQuota(quota)\n    ? _.get(quota, 'spec.quota.hard')\n    : _.get(quota, 'spec.hard');\n  return _.keys(specHard).sort();\n};\n\nexport const getACRQResourceUsage = (quota, resourceType, namespace) => {\n  let used;\n  if (namespace) {\n    const allNamespaceData = quota.status?.namespaces;\n    const currentNamespaceData = allNamespaceData.filter((ns) => ns.namespace === namespace);\n    used = {\n      namespace: currentNamespaceData[0]?.status?.used[resourceType],\n      cluster: quota.status?.total?.used[resourceType],\n    };\n  } else {\n    used = { namespace: 0, cluster: quota.status?.total?.used[resourceType] };\n  }\n  const totalUsed = quota.status?.total?.used[resourceType];\n  const max = quota.status?.total?.hard[resourceType] || quota.spec?.quota?.hard[resourceType];\n  const percentNamespace =\n    !max || !used.namespace\n      ? 0\n      : (convertToBaseValue(used.namespace) / convertToBaseValue(max)) * 100;\n  const percentCluster =\n    !max || !used.cluster ? 0 : (convertToBaseValue(used.cluster) / convertToBaseValue(max)) * 100;\n  const percentOtherNamespaces = percentCluster - percentNamespace;\n\n  return {\n    used,\n    totalUsed,\n    max,\n    percent: {\n      namespace: percentNamespace,\n      otherNamespaces: percentOtherNamespaces,\n      unused: 100 - (percentNamespace + percentOtherNamespaces),\n    },\n  };\n};\n\nexport const getResourceUsage = (quota, resourceType) => {\n  const isCluster = isClusterQuota(quota);\n  const statusPath = isCluster ? ['status', 'total', 'hard'] : ['status', 'hard'];\n  const specPath = isCluster ? ['spec', 'quota', 'hard'] : ['spec', 'hard'];\n  const usedPath = isCluster ? ['status', 'total', 'used'] : ['status', 'used'];\n  const max =\n    _.get(quota, [...statusPath, resourceType]) || _.get(quota, [...specPath, resourceType]);\n  const used = _.get(quota, [...usedPath, resourceType]);\n  const percent = !max || !used ? 0 : (convertToBaseValue(used) / convertToBaseValue(max)) * 100;\n\n  return {\n    used,\n    max,\n    percent,\n  };\n};\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst acrqTableColumnClasses = [\n  '',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nexport const UsageIcon = ({ percent }) => {\n  let usageIcon = <UnknownIcon />;\n  if (percent === 0) {\n    usageIcon = <OutlinedCircleIcon className=\"co-resource-quota-empty\" />;\n  } else if (percent > 0 && percent < 50) {\n    usageIcon = <ResourcesAlmostEmptyIcon className=\"co-resource-quota-almost-empty\" />;\n  } else if (percent >= 50 && percent < 100) {\n    usageIcon = <ResourcesAlmostFullIcon className=\"co-resource-quota-almost-full\" />;\n  } else if (percent === 100) {\n    usageIcon = <ResourcesFullIcon className=\"co-resource-quota-full\" />;\n  } else if (percent > 100) {\n    usageIcon = <YellowExclamationTriangleIcon className=\"co-resource-quota-exceeded\" />;\n  }\n  return usageIcon;\n};\n\nexport const ResourceUsageRow = ({ quota, resourceType, namespace = undefined }) => {\n  const reference = referenceFor(quota);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  if (isACRQ) {\n    const { used, totalUsed, max, percent } = getACRQResourceUsage(quota, resourceType, namespace);\n    return (\n      <div className=\"row co-m-row\">\n        <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n        <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n          <UsageIcon percent={percent.namespace} />\n        </div>\n        <div className=\"col-sm-2 col-xs-2\">{used.namespace}</div>\n        <div className=\"col-sm-2 col-xs-2\">{totalUsed}</div>\n        <div className=\"col-sm-2 col-xs-2\">{max}</div>\n      </div>\n    );\n  }\n\n  const { used, max, percent } = getResourceUsage(quota, resourceType);\n  return (\n    <div className=\"row co-m-row\">\n      <div className=\"col-sm-4 col-xs-6 co-break-word\">{resourceType}</div>\n      <div className=\"col-sm-2 hidden-xs co-resource-quota-icon\">\n        <UsageIcon percent={percent} />\n      </div>\n      <div className=\"col-sm-3 col-xs-3\">{used}</div>\n      <div className=\"col-sm-3 col-xs-3\">{max}</div>\n    </div>\n  );\n};\n\nexport const QuotaScopesInline = ({ scopes }) => {\n  return <span>({scopes.join(', ')})</span>;\n};\n\nexport const QuotaScopesList = ({ scopes }) => {\n  const { t } = useTranslation();\n  const quotaScopes = {\n    Terminating: {\n      description: t(\n        'public~Affects pods that have an active deadline. These pods usually include builds, deployers, and jobs.',\n      ),\n    },\n    NotTerminating: {\n      description: t(\n        'public~Affects pods that do not have an active deadline. These pods usually include your applications.',\n      ),\n    },\n    BestEffort: {\n      description: t(\n        'public~Affects pods that do not have resource limits set. These pods have a best effort quality of service.',\n      ),\n    },\n    NotBestEffort: {\n      description: t(\n        'public~Affects pods that have at least one resource limit set. These pods do not have a best effort quality of service.',\n      ),\n    },\n  };\n  return scopes.map((scope) => {\n    const scopeObj = _.get(quotaScopes, scope);\n    return scopeObj ? (\n      <dd key={scope}>\n        <div className=\"co-resource-quota-scope__label\">{scope}</div>\n        <div className=\"co-resource-quota-scope__description\">{scopeObj.description}</div>\n      </dd>\n    ) : (\n      <dd key={scope} className=\"co-resource-quota-scope__label\">\n        {scope}\n      </dd>\n    );\n  });\n};\n\nexport const hasComputeResources = (resourceTypes) => {\n  const chartResourceTypes = [\n    'requests.cpu',\n    'cpu',\n    'limits.cpu',\n    'requests.memory',\n    'memory',\n    'limits.memory',\n  ];\n  return _.intersection(resourceTypes, chartResourceTypes).length > 0;\n};\n\nconst Details = ({ obj: rq }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const resourceTypes = getQuotaResourceTypes(rq);\n  const scopes = rq.spec?.scopes ?? rq.spec?.quota?.scopes;\n  const reference = referenceFor(rq);\n  const isACRQ = reference === appliedClusterQuotaReference;\n  const namespace = params?.ns;\n  let text;\n  let charts;\n  switch (reference) {\n    case appliedClusterQuotaReference:\n      text = t('public~AppliedClusterResourceQuota details');\n      charts = (\n        <AppliedClusterResourceQuotaCharts appliedClusterResourceQuota={rq} namespace={namespace} />\n      );\n      break;\n    case clusterQuotaReference:\n      text = t('public~ClusterResourceQuota details');\n      charts = <ClusterResourceQuotaCharts clusterResourceQuota={rq} />;\n      break;\n    default:\n      text = t('public~ResourceQuota details');\n      charts = <ResourceQuotaCharts resourceQuota={rq} />;\n  }\n  const canListCRQ = useAccessReview({\n    group: ClusterResourceQuotaModel.apiGroup,\n    resource: ClusterResourceQuotaModel.plural,\n    verb: 'list',\n  });\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} />\n        {charts}\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={rq}>\n              {canListCRQ && (\n                <DetailsItem\n                  label={t('public~ClusterResourceQuota')}\n                  obj={rq}\n                  path=\"rq.metadata.name\"\n                >\n                  <ResourceLink kind={clusterQuotaReference} name={rq.metadata.name} />\n                </DetailsItem>\n              )}\n              <DetailsItem\n                label={t('public~Label selector')}\n                obj={rq}\n                path=\"spec.selector.labels.matchLabels\"\n              >\n                <LabelList\n                  kind={appliedClusterQuotaReference}\n                  labels={rq.spec?.selector?.labels?.matchLabels}\n                />\n              </DetailsItem>\n              <DetailsItem\n                label={t('public~Project annotations')}\n                obj={rq}\n                path=\"spec.selector.annotations\"\n              >\n                <Selector selector={rq.spec?.selector?.annotations} namespace={namespace} />\n              </DetailsItem>\n            </ResourceSummary>\n          </div>\n          {scopes && (\n            <div className=\"col-sm-6\">\n              <dl className=\"co-m-pane__details\">\n                <dt>{t('public~Scopes')}</dt>\n                <QuotaScopesList scopes={scopes} />\n              </dl>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={text} style={{ display: 'block', marginBottom: '20px' }}>\n          <FieldLevelHelp>\n            <p>\n              {t(\n                'public~Requests are the amount of resources you expect to use. These are used when establishing if the cluster can fulfill your Request.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~Limits are a maximum amount of a resource you can consume. Applications consuming more than the Limit may be terminated.',\n              )}\n            </p>\n            <p>\n              {t(\n                'public~A cluster administrator can establish limits on both the amount you can request and your limits with a ResourceQuota.',\n              )}\n            </p>\n          </FieldLevelHelp>\n        </SectionHeading>\n        <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n          <div className=\"row co-m-table-grid__head\">\n            <div className=\"col-sm-4 col-xs-6\">{t('public~Resource type')}</div>\n            <div className=\"col-sm-2 hidden-xs\">{t('public~Capacity')}</div>\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Used')}\n            </div>\n            {isACRQ && <div className=\"col-sm-2 col-xs-2\">{t('public~Total used')}</div>}\n            <div\n              className={classNames(\n                { 'col-sm-2 col-xs-2': isACRQ },\n                { 'col-sm-3 col-xs-3': !isACRQ },\n              )}\n            >\n              {t('public~Max')}\n            </div>\n          </div>\n          <div className=\"co-m-table-grid__body\">\n            {resourceTypes.map((type) => (\n              <ResourceUsageRow key={type} quota={rq} resourceType={type} namespace={namespace} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  let resourcesAtQuota;\n  if (rq.kind === ResourceQuotaModel.kind) {\n    resourcesAtQuota = Object.keys(rq?.status?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.hard[resource], rq?.status?.used?.[resource]) >= 100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  } else {\n    resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n      (acc, resource) =>\n        getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n        100\n          ? acc + 1\n          : acc,\n      0,\n    );\n  }\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceFor(rq)}\n          name={rq.metadata.name}\n          namespace={\n            referenceFor(rq) === appliedClusterQuotaReference\n              ? customData.namespace\n              : rq.metadata.namespace\n          }\n          className=\"co-resource-item__resource-name\"\n          dataTest=\"resource-quota-link\"\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        {rq.metadata.namespace ? (\n          <ResourceLink kind=\"Namespace\" name={rq.metadata.namespace} />\n        ) : (\n          t('public~None')\n        )}\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[2], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[3], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[4], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={referenceFor(rq)}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst AppliedClusterResourceQuotaTableRow = ({ obj: rq, customData }) => {\n  const { t } = useTranslation();\n  const actions = quotaActions(rq, customData);\n  const resourcesAtQuota = Object.keys(rq?.status?.total?.hard || {}).reduce(\n    (acc, resource) =>\n      getUsedPercentage(rq?.status?.total?.hard[resource], rq?.status?.total?.used?.[resource]) >=\n      100\n        ? acc + 1\n        : acc,\n    0,\n  );\n  return (\n    <>\n      <TableData className={acrqTableColumnClasses[0]}>\n        <ResourceLink\n          kind={appliedClusterQuotaReference}\n          name={rq.metadata.name}\n          namespace={customData.namespace}\n          className=\"co-resource-item__resource-name\"\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[1], 'co-break-word')}>\n        <LabelList\n          kind={appliedClusterQuotaReference}\n          labels={rq.spec?.selector?.labels?.matchLabels}\n        />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[2], 'co-break-word')}>\n        <Selector selector={rq.spec?.selector?.annotations} namespace={customData.namespace} />\n      </TableData>\n      <TableData className={classNames(acrqTableColumnClasses[3], 'co-break-word')}>\n        {resourcesAtQuota > 0 ? (\n          <>\n            <YellowExclamationTriangleIcon />{' '}\n            {t('public~{{count}} resource reached quota', { count: resourcesAtQuota })}\n          </>\n        ) : (\n          t('public~none are at quota')\n        )}\n      </TableData>\n      <TableData className={acrqTableColumnClasses[4]}>\n        <Timestamp timestamp={rq.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={acrqTableColumnClasses[5]}>\n        <ResourceKebab\n          customData={customData}\n          actions={actions}\n          kind={appliedClusterQuotaReference}\n          resource={rq}\n        />\n      </TableData>\n    </>\n  );\n};\n\nexport const ResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const ResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: tableColumnClasses[4] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[6] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ResourceQuotas')}\n      Header={ResourceQuotaTableHeader}\n      Row={ResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasList = (props) => {\n  const { t } = useTranslation();\n  const AppliedClusterResourceQuotaTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[0] },\n      },\n      {\n        title: t('public~Label selector'),\n        sortField: 'spec.selector.labels.matchLabels',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[1] },\n      },\n      {\n        title: t('public~Project annotations'),\n        sortField: 'spec.selector.annotations',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[2] },\n      },\n      {\n        title: t('public~Status'),\n        props: { className: acrqTableColumnClasses[3] },\n        transforms: [sortable],\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: acrqTableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: acrqTableColumnClasses[5] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~AppliedClusterResourceQuotas')}\n      Header={AppliedClusterResourceQuotaTableHeader}\n      Row={AppliedClusterResourceQuotaTableRow}\n      virtualize\n      customData={{ namespace: props.namespace }}\n    />\n  );\n};\n\nexport const quotaType = (quota) => {\n  if (!quota) {\n    return undefined;\n  }\n  return quota.metadata.namespace ? 'namespace' : 'cluster';\n};\n\n// Split each resource quota into one row per subject\nexport const flatten = (resources) => _.flatMap(resources, (resource) => _.compact(resource.data));\n\nexport const ResourceQuotasPage = connectToFlags(FLAGS.OPENSHIFT)(\n  ({ namespace, flags, mock, showTitle }) => {\n    const { t } = useTranslation();\n    const resources = [{ kind: 'ResourceQuota', namespaced: true }];\n    let rowFilters = null;\n\n    if (flagPending(flags[FLAGS.OPENSHIFT])) {\n      return <LoadingBox />;\n    }\n    if (flags[FLAGS.OPENSHIFT]) {\n      if (!namespace) {\n        resources.push({\n          kind: referenceForModel(ClusterResourceQuotaModel),\n          namespaced: false,\n          optional: true,\n        });\n      } else {\n        resources.push({\n          kind: referenceForModel(AppliedClusterResourceQuotaModel),\n          namespaced: true,\n          namespace,\n          optional: true,\n        });\n      }\n\n      rowFilters = [\n        {\n          filterGroupName: t('public~Role'),\n          type: 'role-kind',\n          reducer: quotaType,\n          items: [\n            {\n              id: 'cluster',\n              title: t('public~Cluster-wide {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n            {\n              id: 'namespace',\n              title: t('public~Namespace {{resource}}', {\n                resource: t(ResourceQuotaModel.labelPluralKey),\n              }),\n            },\n          ],\n        },\n      ];\n    }\n    const createNS = namespace || 'default';\n    const accessReview = {\n      model: ResourceQuotaModel,\n      namespace: createNS,\n    };\n    return (\n      <MultiListPage\n        canCreate={true}\n        createAccessReview={accessReview}\n        createButtonText={t('public~Create ResourceQuota')}\n        createProps={{ to: `/k8s/ns/${createNS}/resourcequotas/~new` }}\n        ListComponent={ResourceQuotasList}\n        resources={resources}\n        label={t(ResourceQuotaModel.labelPluralKey)}\n        namespace={namespace}\n        flatten={flatten}\n        title={t(ResourceQuotaModel.labelPluralKey)}\n        rowFilters={rowFilters}\n        mock={mock}\n        showTitle={showTitle}\n      />\n    );\n  },\n);\n\nexport const AppliedClusterResourceQuotasPage = ({ namespace, mock, showTitle }) => {\n  const { t } = useTranslation();\n  const resources = [\n    {\n      kind: referenceForModel(AppliedClusterResourceQuotaModel),\n      namespaced: true,\n      namespace,\n      optional: true,\n    },\n  ];\n\n  return (\n    <MultiListPage\n      ListComponent={AppliedClusterResourceQuotasList}\n      resources={resources}\n      label={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      namespace={namespace}\n      flatten={flatten}\n      title={t(AppliedClusterResourceQuotaModel.labelPluralKey)}\n      mock={mock}\n      showTitle={showTitle}\n    />\n  );\n};\n\nexport const ResourceQuotasDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={resourceQuotaMenuActions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n\nexport const AppliedClusterResourceQuotasDetailsPage = (props) => {\n  const params = useParams();\n  const actions = appliedClusterResourceQuotaMenuActions(params?.ns);\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={actions}\n      pages={[navFactory.details(Details), navFactory.editYaml()]}\n    />\n  );\n};\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Alert, Button, Tooltip } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\n// FIXME upgrading redux types is causing many errors at this time\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { PencilAltIcon } from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Status,\n  getRequester,\n  getDescription,\n  FLAGS,\n  GreenCheckCircleIcon,\n  getName,\n  COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n  COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n  useUserSettingsCompatibility,\n  isModifiedEvent,\n  REQUESTER_FILTER,\n  useFlag,\n  usePrometheusGate,\n} from '@console/shared';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport * as k8sActions from '@console/dynamic-plugin-sdk/src/app/k8s/actions/k8s';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport {\n  ConsoleLinkModel,\n  NamespaceModel,\n  ProjectModel,\n  SecretModel,\n  ServiceAccountModel,\n} from '../models';\nimport { coFetchJSON } from '../co-fetch';\nimport { k8sGet, referenceForModel } from '../module/k8s';\nimport * as UIActions from '../actions/ui';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  DetailsItem,\n  ExternalLink,\n  Kebab,\n  LabelList,\n  LoadingInline,\n  ConsoleEmptyState,\n  ResourceIcon,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Timestamp,\n  formatBytesAsMiB,\n  formatCores,\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  navFactory,\n  useAccessReview,\n} from './utils';\nimport { deleteNamespaceModal, configureNamespacePullSecretModal } from './modals';\nimport { RoleBindingsPage } from './RBAC';\nimport { Bar, Area, PROMETHEUS_BASE_PATH } from './graphs';\nimport { flagPending } from '../reducers/features';\nimport { OpenShiftGettingStarted } from './start-guide';\nimport { OverviewListPage } from './overview';\nimport {\n  getNamespaceDashboardConsoleLinks,\n  ProjectDashboard,\n} from './dashboard/project-dashboard/project-dashboard';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\n\nimport {\n  isCurrentUser,\n  isOtherUser,\n  isSystemNamespace,\n} from '@console/shared/src/components/namespace';\nimport { useCreateNamespaceModal } from '@console/shared/src/hooks/useCreateNamespaceModal';\nimport { useCreateProjectModal } from '@console/shared/src/hooks/useCreateProjectModal';\n\nconst getDisplayName = (obj) =>\n  _.get(obj, ['metadata', 'annotations', 'openshift.io/display-name']);\n\n// KKD CHECK TO SEE THAT ITEMS CHANGE WHEN LANGUAGE CHANGES\nconst getFilters = () => [\n  {\n    filterGroupName: i18next.t('public~Requester'),\n    type: 'requester',\n    reducer: (namespace) => {\n      const name = namespace.metadata?.name;\n      const requester = namespace.metadata?.annotations?.['openshift.io/requester'];\n      if (isCurrentUser(requester)) {\n        return REQUESTER_FILTER.ME;\n      }\n      if (isOtherUser(requester, name)) {\n        return REQUESTER_FILTER.USER;\n      }\n      if (isSystemNamespace({ title: name })) {\n        return REQUESTER_FILTER.SYSTEM;\n      }\n    },\n    items: [\n      { id: REQUESTER_FILTER.ME, title: i18next.t('public~Me') },\n      { id: REQUESTER_FILTER.USER, title: i18next.t('public~User') },\n      { id: REQUESTER_FILTER.SYSTEM, title: i18next.t('public~System'), hideIfEmpty: true },\n    ],\n  },\n];\n\nexport const deleteModal = (kind, ns) => {\n  const { labelKey, labelKind, weight, accessReview } = Kebab.factory.Delete(kind, ns);\n  let callback = undefined;\n  let tooltip;\n  let label;\n\n  if (ns.metadata.name === 'default') {\n    tooltip = `${kind.label} default cannot be deleted`;\n  } else if (ns.status?.phase === 'Terminating') {\n    tooltip = `${kind.label} is already terminating`;\n  } else {\n    callback = () => deleteNamespaceModal({ kind, resource: ns });\n  }\n  if (tooltip) {\n    label = (\n      <div className=\"dropdown__disabled\">\n        <Tooltip content={tooltip}>\n          <span>{i18next.t(labelKey, labelKind)}</span>\n        </Tooltip>\n      </div>\n    );\n  }\n  return { label, labelKey, labelKind, weight, callback, accessReview };\n};\n\nconst nsMenuActions = [\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  Kebab.factory.Edit,\n  deleteModal,\n];\n\nconst fetchNamespaceMetrics = () => {\n  const metrics = [\n    {\n      key: 'memory',\n      query: 'sum by(namespace) (container_memory_working_set_bytes{container=\"\",pod!=\"\"})',\n    },\n    {\n      key: 'cpu',\n      query: 'namespace:container_cpu_usage:sum',\n    },\n  ];\n  const promises = metrics.map(({ key, query }) => {\n    const url = `${PROMETHEUS_BASE_PATH}/api/v1/query?&query=${query}`;\n    return coFetchJSON(url).then(({ data: { result } }) => {\n      return result.reduce((acc, data) => {\n        const value = Number(data.value[1]);\n        return _.set(acc, [key, data.metric.namespace], value);\n      }, {});\n    });\n  });\n  return (\n    Promise.all(promises)\n      .then((data) => _.assign({}, ...data))\n      // eslint-disable-next-line no-console\n      .catch(console.error)\n  );\n};\n\nconst namespaceColumnInfo = Object.freeze({\n  name: {\n    classes: '',\n    id: 'name',\n  },\n  displayName: {\n    classes: 'co-break-word',\n    id: 'displayName',\n  },\n  status: {\n    classes: '',\n    id: 'status',\n  },\n  requester: {\n    classes: '',\n    id: 'requester',\n  },\n  memory: {\n    classes: '',\n    id: 'memory',\n  },\n  cpu: {\n    classes: '',\n    id: 'cpu',\n  },\n  created: {\n    classes: '',\n    id: 'created',\n  },\n  description: {\n    classes: '',\n    id: 'description',\n  },\n  labels: {\n    classes: '',\n    id: 'labels',\n  },\n});\n\nconst NamespacesTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    {\n      title: i18next.t('public~Memory'),\n      id: namespaceColumnInfo.memory.id,\n      sortFunc: 'namespaceMemory',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.memory.classes },\n    },\n    {\n      title: i18next.t('public~CPU'),\n      id: namespaceColumnInfo.cpu.id,\n      sortFunc: 'namespaceCPU',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.cpu.classes },\n    },\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    { title: '', props: { className: Kebab.columnClass } },\n  ];\n};\nNamespacesTableHeader.displayName = 'NamespacesTableHeader';\n\nconst NamespacesColumnManagementID = referenceForModel(NamespaceModel);\n\nconst getNamespacesSelectedColumns = () => {\n  return new Set(\n    NamespacesTableHeader().reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst NamespacesTableRow = ({ obj: ns, customData: { tableColumns } }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(ns);\n  const requester = getRequester(ns);\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(ns);\n  const labels = ns.metadata.labels;\n  const columns = tableColumns?.length > 0 ? new Set(tableColumns) : getNamespacesSelectedColumns();\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        <ResourceLink kind=\"Namespace\" name={ns.metadata.name} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(ns) || <span className=\"text-muted\">{t('public~No display name')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.status.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={ns.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.memory.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.memory.id}\n      >\n        {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.cpu.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.cpu.id}\n      >\n        {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={ns.metadata.creationTimestamp} />\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.description.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.description.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.labels.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.labels.id}\n      >\n        <LabelList kind=\"Namespace\" labels={labels} />\n      </TableData>\n      <TableData className={Kebab.columnClass}>\n        <ResourceKebab actions={nsMenuActions} kind=\"Namespace\" resource={ns} />\n      </TableData>\n    </>\n  );\n};\n\nconst NamespacesNotFoundMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No Namespaces found')} Icon={SearchIcon}>\n      {t('public~No results were found for the requested Namespaces.')}\n    </ConsoleEmptyState>\n  );\n};\n\nconst NamespacesEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Namespaces')} Icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const NamespacesList = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    const updateMetrics = () =>\n      fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n    updateMetrics();\n    const id = setInterval(updateMetrics, 30 * 1000);\n    return () => clearInterval(id);\n  }, [dispatch]);\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : null;\n\n  const customData = React.useMemo(\n    () => ({\n      tableColumns: tableColumns?.[NamespacesColumnManagementID],\n    }),\n    [tableColumns],\n  );\n\n  return (\n    <Table\n      {...props}\n      activeColumns={selectedColumns}\n      columnManagementID={NamespacesColumnManagementID}\n      aria-label={t('public~Namespaces')}\n      Header={NamespacesTableHeader}\n      Row={NamespacesTableRow}\n      customData={customData}\n      virtualize\n      EmptyMsg={NamespacesEmptyMessage}\n      NoDataEmptyMsg={NamespacesNotFoundMessage}\n    />\n  );\n};\n\nexport const NamespacesPage = (props) => {\n  const { t } = useTranslation();\n  const createNamespaceModal = useCreateNamespaceModal();\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const selectedColumns =\n    tableColumns?.[NamespacesColumnManagementID]?.length > 0\n      ? new Set(tableColumns[NamespacesColumnManagementID])\n      : getNamespacesSelectedColumns();\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={NamespacesList}\n      canCreate={true}\n      createHandler={() => createNamespaceModal()}\n      columnLayout={{\n        columns: NamespacesTableHeader(null, t).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: NamespacesColumnManagementID,\n        selectedColumns,\n        type: t('public~Namespaces'),\n      }}\n    />\n  );\n};\n\nexport const projectMenuActions = [Kebab.factory.Edit, deleteModal];\n\nconst projectColumnManagementID = referenceForModel(ProjectModel);\n\nconst projectTableHeader = ({ showMetrics, showActions }) => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      id: namespaceColumnInfo.name.id,\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.name.classes },\n    },\n    {\n      title: i18next.t('public~Display name'),\n      id: namespaceColumnInfo.displayName.id,\n      sortField: 'metadata.annotations[\"openshift.io/display-name\"]',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.displayName.classes },\n    },\n    {\n      title: i18next.t('public~Status'),\n      id: namespaceColumnInfo.status.id,\n      sortField: 'status.phase',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.status.classes },\n    },\n    {\n      title: i18next.t('public~Requester'),\n      id: namespaceColumnInfo.requester.id,\n      sortField: \"metadata.annotations.['openshift.io/requester']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.requester.classes },\n    },\n    ...(showMetrics\n      ? [\n          {\n            title: i18next.t('public~Memory'),\n            id: namespaceColumnInfo.memory.id,\n            sortFunc: 'namespaceMemory',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.memory.classes },\n          },\n          {\n            title: i18next.t('public~CPU'),\n            id: namespaceColumnInfo.cpu.id,\n            sortFunc: 'namespaceCPU',\n            transforms: [sortable],\n            props: { className: namespaceColumnInfo.cpu.classes },\n          },\n        ]\n      : []),\n    {\n      title: i18next.t('public~Created'),\n      id: namespaceColumnInfo.created.id,\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.created.classes },\n    },\n    {\n      title: i18next.t('public~Description'),\n      id: namespaceColumnInfo.description.id,\n      sortField: \"metadata.annotations.['openshift.io/description']\",\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.description.classes },\n      additional: true,\n    },\n    {\n      title: i18next.t('public~Labels'),\n      id: namespaceColumnInfo.labels.id,\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: namespaceColumnInfo.labels.classes },\n      additional: true,\n    },\n    ...(showActions ? [{ title: '', props: { className: Kebab.columnClass } }] : []),\n  ];\n};\n\nconst getProjectSelectedColumns = ({ showMetrics, showActions }) => {\n  return new Set(\n    projectTableHeader({ showMetrics, showActions }).reduce((acc, column) => {\n      if (column.id && !column.additional) {\n        acc.push(column.id);\n      }\n      return acc;\n    }, []),\n  );\n};\n\nconst ProjectLink = ({ project }) => {\n  const dispatch = useDispatch();\n  const [, setLastNamespace] = useUserSettingsCompatibility(\n    LAST_NAMESPACE_NAME_USER_SETTINGS_KEY,\n    LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY,\n  );\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.search);\n  const basePath = url.pathname;\n  if (params.has('project-name')) {\n    // clear project-name query param from the url\n    params.delete('project-name');\n  }\n  const newUrl = {\n    search: `?${params.toString()}`,\n    hash: url.hash,\n  };\n  const namespacedPath = UIActions.formatNamespaceRoute(project.metadata.name, basePath, newUrl);\n\n  const handleClick = (e) => {\n    // Don't set last namespace if its modified click (Ctrl+Click).\n    if (isModifiedEvent(e)) {\n      return;\n    }\n    setLastNamespace(project.metadata.name);\n    // update last namespace in session storage (persisted only for current browser tab). Used to remember/restore if\n    // \"All Projects\" was selected when returning to the list view (typically from details view) via breadcrumb or\n    // sidebar navigation\n    sessionStorage.setItem(LAST_NAMESPACE_NAME_LOCAL_STORAGE_KEY, project.metadata.name);\n    // clear project-name filter when active namespace is changed\n    dispatch(k8sActions.filterList(referenceForModel(ProjectModel), 'project-name', ''));\n  };\n\n  return (\n    <span className=\"co-resource-item co-resource-item--truncate\">\n      <ResourceIcon kind=\"Project\" />\n      <Link to={namespacedPath} className=\"co-resource-item__resource-name\" onClick={handleClick}>\n        {project.metadata.name}\n      </Link>\n    </span>\n  );\n};\nconst projectHeaderWithoutActions = () =>\n  projectTableHeader({ showMetrics: false, showActions: false });\n\nconst ProjectTableRow = ({ obj: project, customData = {} }) => {\n  const { t } = useTranslation();\n  const metrics = useSelector(({ UI }) => UI.getIn(['metrics', 'namespace']));\n  const name = getName(project);\n  const requester = getRequester(project);\n  const {\n    ProjectLinkComponent,\n    actionsEnabled = true,\n    showMetrics,\n    showActions,\n    isColumnManagementEnabled = true,\n    tableColumns,\n  } = customData;\n  const bytes = metrics?.memory?.[name];\n  const cores = metrics?.cpu?.[name];\n  const description = getDescription(project);\n  const labels = project.metadata.labels;\n  const columns = isColumnManagementEnabled\n    ? tableColumns?.length > 0\n      ? new Set(tableColumns)\n      : getProjectSelectedColumns({ showMetrics, showActions })\n    : null;\n  return (\n    <>\n      <TableData className={namespaceColumnInfo.name.classes}>\n        {customData && ProjectLinkComponent ? (\n          <ProjectLinkComponent project={project} />\n        ) : (\n          <span className=\"co-resource-item\">\n            <ResourceLink kind=\"Project\" name={project.metadata.name} />\n          </span>\n        )}\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.displayName.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.displayName.id}\n      >\n        <span className=\"co-break-word co-line-clamp\">\n          {getDisplayName(project) || (\n            <span className=\"text-muted\">{t('public~No display name')}</span>\n          )}\n        </span>\n      </TableData>\n      <TableData\n        className={namespaceColumnInfo.status.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.status.id}\n      >\n        <Status status={project.status?.phase} />\n      </TableData>\n      <TableData\n        className={classNames(namespaceColumnInfo.requester.classes, 'co-break-word')}\n        columns={columns}\n        columnID={namespaceColumnInfo.requester.id}\n      >\n        {requester || <span className=\"text-muted\">{t('public~No requester')}</span>}\n      </TableData>\n      {showMetrics && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.memory.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.memory.id}\n          >\n            {bytes ? `${formatBytesAsMiB(bytes)} MiB` : '-'}\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.cpu.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.cpu.id}\n          >\n            {cores ? t('public~{{cores}} cores', { cores: formatCores(cores) }) : '-'}\n          </TableData>\n        </>\n      )}\n      <TableData\n        className={namespaceColumnInfo.created.classes}\n        columns={columns}\n        columnID={namespaceColumnInfo.created.id}\n      >\n        <Timestamp timestamp={project.metadata.creationTimestamp} />\n      </TableData>\n      {isColumnManagementEnabled && (\n        <>\n          <TableData\n            className={namespaceColumnInfo.description.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.description.id}\n          >\n            <span className=\"co-break-word co-line-clamp\">\n              {description || <span className=\"text-muted\">{t('public~No description')}</span>}\n            </span>\n          </TableData>\n          <TableData\n            className={namespaceColumnInfo.labels.classes}\n            columns={columns}\n            columnID={namespaceColumnInfo.labels.id}\n          >\n            <LabelList labels={labels} kind=\"Project\" />\n          </TableData>\n        </>\n      )}\n      {actionsEnabled && (\n        <TableData className={Kebab.columnClass}>\n          <ResourceKebab actions={projectMenuActions} kind=\"Project\" resource={project} />\n        </TableData>\n      )}\n    </>\n  );\n};\nProjectTableRow.displayName = 'ProjectTableRow';\n\nexport const ProjectsTable = (props) => {\n  const { t } = useTranslation();\n  const customData = React.useMemo(\n    () => ({\n      ProjectLinkComponent: ProjectLink,\n      actionsEnabled: false,\n      isColumnManagementEnabled: false,\n    }),\n    [],\n  );\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Projects')}\n      Header={projectHeaderWithoutActions}\n      Row={ProjectTableRow}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nconst headerWithMetrics = () => projectTableHeader({ showMetrics: true, showActions: true });\nconst headerNoMetrics = () => projectTableHeader({ showMetrics: false, showActions: true });\n\nconst ProjectNotFoundMessage = () => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const canCreate = canCreateNs || canCreateProject;\n  return (\n    <ConsoleEmptyState title={t('public~Welcome to OpenShift')}>\n      <OpenShiftGettingStarted canCreate={canCreate} />\n    </ConsoleEmptyState>\n  );\n};\n\nconst ProjectEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('public~No matching Projects')} icon={SearchIcon}>\n      {t('public~No results match the filter criteria.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const ProjectList = ({ data, ...tableProps }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const customData = React.useMemo(\n    () => ({\n      showMetrics,\n      tableColumns: tableColumns?.[projectColumnManagementID],\n    }),\n    [showMetrics, tableColumns],\n  );\n\n  // TODO Utilize usePoll hook\n  React.useEffect(() => {\n    if (showMetrics) {\n      const updateMetrics = () =>\n        fetchNamespaceMetrics().then((result) => dispatch(UIActions.setNamespaceMetrics(result)));\n      updateMetrics();\n      const id = setInterval(updateMetrics, 30 * 1000);\n      return () => clearInterval(id);\n    }\n  }, [dispatch, showMetrics]);\n  const selectedColumns =\n    tableColumns?.[projectColumnManagementID]?.length > 0\n      ? new Set(tableColumns[projectColumnManagementID])\n      : null;\n\n  // Don't render the table until we know whether we can get metrics. It's\n  // not possible to change the table headers once the component is mounted.\n  if (flagPending(canGetNS)) {\n    return null;\n  }\n\n  return (\n    <Table\n      {...tableProps}\n      activeColumns={selectedColumns}\n      columnManagementID={projectColumnManagementID}\n      aria-label={t('public~Projects')}\n      data={data}\n      Header={showMetrics ? headerWithMetrics : headerNoMetrics}\n      Row={ProjectTableRow}\n      NoDataEmptyMsg={ProjectNotFoundMessage}\n      EmptyMsg={ProjectEmptyMessage}\n      customData={customData}\n      virtualize\n    />\n  );\n};\n\nexport const ProjectsPage = (props) => {\n  const { t } = useTranslation();\n  const createProjectModal = useCreateProjectModal();\n  // Skip self-subject access review for projects since they use a special project request API.\n  // `FLAGS.CAN_CREATE_PROJECT` determines if the user can create projects.\n  const canGetNS = useFlag(FLAGS.CAN_GET_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  const [tableColumns] = useUserSettingsCompatibility(\n    COLUMN_MANAGEMENT_CONFIGMAP_KEY,\n    COLUMN_MANAGEMENT_LOCAL_STORAGE_KEY,\n    undefined,\n    true,\n  );\n  const isPrometheusAvailable = usePrometheusGate();\n  const showMetrics = isPrometheusAvailable && canGetNS && window.screen.width >= 1200;\n  const showActions = showMetrics;\n  return (\n    <ListPage\n      {...props}\n      rowFilters={getFilters()}\n      ListComponent={ProjectList}\n      canCreate={canCreateProject}\n      createHandler={() => createProjectModal()}\n      filterLabel={t('public~by name or display name')}\n      skipAccessReview\n      textFilter=\"project-name\"\n      kind=\"Project\"\n      columnLayout={{\n        columns: projectTableHeader({ showMetrics, showActions }).map((column) =>\n          _.pick(column, ['title', 'additional', 'id']),\n        ),\n        id: projectColumnManagementID,\n        selectedColumns:\n          tableColumns?.[projectColumnManagementID]?.length > 0\n            ? new Set(tableColumns[projectColumnManagementID])\n            : null,\n        type: t('public~Project'),\n      }}\n    />\n  );\n};\n\n/** @type {React.SFC<{namespace: K8sResourceKind}>} */\nexport const PullSecret = (props) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n  const { t } = useTranslation();\n  const { namespace, canViewSecrets } = props;\n\n  React.useEffect(() => {\n    k8sGet(ServiceAccountModel, 'default', namespace.metadata.name, {})\n      .then((serviceAccount) => {\n        setIsLoading(false);\n        setData(serviceAccount.imagePullSecrets ?? []);\n        setError(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setData([]);\n        setError(true);\n        // eslint-disable-next-line no-console\n        console.error('Error getting default ServiceAccount', err);\n      });\n  }, [namespace.metadata.name]);\n\n  const modal = () => configureNamespacePullSecretModal({ namespace, pullSecret: undefined });\n\n  const secrets = () => {\n    if (error) {\n      return <Alert variant=\"danger\" isInline title={t('Error loading default pull Secrets')} />;\n    }\n    return data.length > 0 ? (\n      data.map((secret) => (\n        <div key={secret.name}>\n          <ResourceLink\n            kind=\"Secret\"\n            name={secret.name}\n            namespace={namespace.metadata.name}\n            linkTo={canViewSecrets}\n          />\n        </div>\n      ))\n    ) : (\n      <Button variant=\"link\" type=\"button\" isInline onClick={modal}>\n        {t('public~Not configured')}\n        <PencilAltIcon className=\"co-icon-space-l pf-v5-c-button-icon--plain\" />\n      </Button>\n    );\n  };\n\n  return (\n    <>\n      <dt>{t('public~Default pull Secret', { count: data.length })}</dt>\n      <dd>{isLoading ? <LoadingInline /> : secrets()}</dd>\n    </>\n  );\n};\n\nexport const NamespaceLineCharts = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~CPU usage')}\n          humanize={humanizeCpuCores}\n          namespace={ns.metadata.name}\n          query={`namespace:container_cpu_usage:sum{namespace='${ns.metadata.name}'}`}\n        />\n      </div>\n      <div className=\"col-md-6 col-sm-12\">\n        <Area\n          title={t('public~Memory usage')}\n          humanize={humanizeBinaryBytes}\n          byteDataType={ByteDataTypes.BinaryBytes}\n          namespace={ns.metadata.name}\n          query={`sum by(namespace) (container_memory_working_set_bytes{namespace=\"${ns.metadata.name}\",container=\"\",pod!=\"\"})`}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TopPodsBarChart = ({ ns }) => {\n  const { t } = useTranslation();\n  return (\n    <Bar\n      title={t('public~Memory usage by pod (top 10)')}\n      namespace={ns.metadata.name}\n      query={`sort_desc(topk(10, sum by (pod)(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace=\"${ns.metadata.name}\"})))`}\n      humanize={humanizeBinaryBytes}\n      metric=\"pod\"\n    />\n  );\n};\n\nconst ResourceUsage = ({ ns }) => {\n  const { t } = useTranslation();\n  const isPrometheusAvailable = usePrometheusGate();\n  return isPrometheusAvailable ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('public~Resource usage')} />\n      <NamespaceLineCharts ns={ns} />\n      <TopPodsBarChart ns={ns} />\n    </div>\n  ) : null;\n};\n\nexport const NamespaceSummary = ({ ns }) => {\n  const { t } = useTranslation();\n  const displayName = getDisplayName(ns);\n  const description = getDescription(ns);\n  const requester = getRequester(ns);\n  const serviceMeshEnabled = ns.metadata?.labels?.['maistra.io/member-of'];\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    verb: 'patch',\n    namespace: ns.metadata.name,\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-12\">\n        {/* Labels aren't editable on kind Project, only Namespace. */}\n        <ResourceSummary resource={ns} showLabelEditor={ns.kind === 'Namespace'}>\n          <dt>{t('public~Display name')}</dt>\n          <dd\n            className={classNames({\n              'text-muted': !displayName,\n            })}\n          >\n            {displayName || t('public~No display name')}\n          </dd>\n          <dt>{t('public~Description')}</dt>\n          <dd>\n            <p\n              className={classNames({\n                'text-muted': !description,\n                'co-pre-wrap': description,\n                'co-namespace-summary__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </p>\n          </dd>\n          {requester && <dt>Requester</dt>}\n          {requester && <dd>{requester}</dd>}\n        </ResourceSummary>\n      </div>\n      <div className=\"col-sm-6 col-xs-12\">\n        <dl className=\"co-m-pane__details\">\n          <DetailsItem label={t('public~Status')} obj={ns} path=\"status.phase\">\n            <Status status={ns.status?.phase} />\n          </DetailsItem>\n          <PullSecret namespace={ns} canViewSecrets={canListSecrets} />\n          <dt>{t('public~NetworkPolicies')}</dt>\n          <dd>\n            <Link to={`/k8s/ns/${ns.metadata.name}/networkpolicies`}>\n              {t('public~NetworkPolicies')}\n            </Link>\n          </dd>\n          {serviceMeshEnabled && (\n            <>\n              <dt>{t('public~Service mesh')}</dt>\n              <dd>\n                <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n              </dd>\n            </>\n          )}\n        </dl>\n      </div>\n    </div>\n  );\n};\n\nexport const NamespaceDetails = ({ obj: ns, customData }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const links = getNamespaceDashboardConsoleLinks(ns, consoleLinks);\n  return (\n    <div>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project details')}</title>\n        </Helmet>\n      )}\n      <div className=\"co-m-pane__body\">\n        {!customData?.hideHeading && (\n          <SectionHeading text={t('public~{{kind}} details', { kind: ns.kind })} />\n        )}\n        <NamespaceSummary ns={ns} />\n      </div>\n      {ns.kind === 'Namespace' && <ResourceUsage ns={ns} />}\n      {!_.isEmpty(links) && (\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Launcher')} />\n          <ul className=\"pf-v5-c-list pf-m-plain\">\n            {_.map(_.sortBy(links, 'spec.text'), (link) => {\n              return (\n                <li key={link.metadata.uid}>\n                  <ExternalLink href={link.spec.href} text={link.spec.text} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RolesPage = ({ obj: { metadata } }) => {\n  return (\n    <RoleBindingsPage\n      createPath={`/k8s/ns/${metadata.name}/rolebindings/~new`}\n      namespace={metadata.name}\n      showTitle={false}\n    />\n  );\n};\n\nexport const NamespacesDetailsPage = (props) => (\n  <DetailsPage\n    {...props}\n    menuActions={nsMenuActions}\n    pages={[\n      navFactory.details(NamespaceDetails),\n      navFactory.editYaml(),\n      navFactory.roles(RolesPage),\n    ]}\n  />\n);\n\nexport const ProjectsDetailsPage = (props) => {\n  return (\n    <DetailsPage\n      {...props}\n      menuActions={projectMenuActions}\n      pages={[\n        {\n          href: '',\n          // t('public~Overview')\n          nameKey: 'public~Overview',\n          component: ProjectDashboard,\n        },\n        {\n          href: 'details',\n          // t('public~Details')\n          nameKey: 'public~Details',\n          component: NamespaceDetails,\n        },\n        navFactory.editYaml(),\n        navFactory.workloads(OverviewListPage),\n        navFactory.roles(RolesPage),\n      ]}\n    />\n  );\n};\n","import { nodeStatus } from '@console/app/src/status/node';\nimport { volumeSnapshotStatus } from '@console/app/src/status/snapshot';\nimport { podPhaseFilterReducer } from '@console/internal/module/k8s';\nimport { StatusGroupMapper } from './InventoryItem';\nimport { InventoryStatusGroup } from './status-group';\n\nconst POD_PHASE_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Running', 'Succeeded'],\n  [InventoryStatusGroup.ERROR]: ['CrashLoopBackOff', 'Failed'],\n  [InventoryStatusGroup.PROGRESS]: ['Terminating', 'Pending'],\n  [InventoryStatusGroup.WARN]: ['Unknown'],\n};\n\nconst PVC_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Bound'],\n  [InventoryStatusGroup.ERROR]: ['Lost'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n};\n\nconst PV_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Available', 'Bound'],\n  [InventoryStatusGroup.PROGRESS]: ['Released'],\n  [InventoryStatusGroup.ERROR]: ['Failed'],\n};\n\nconst NODE_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Not Ready'],\n};\n\nconst VS_STATUS_GROUP_MAPPING = {\n  [InventoryStatusGroup.NOT_MAPPED]: ['Ready'],\n  [InventoryStatusGroup.PROGRESS]: ['Pending'],\n  [InventoryStatusGroup.ERROR]: ['Error'],\n};\n\nexport const getStatusGroups = (resources, mapping, mapper, filterType) => {\n  const groups = {\n    [InventoryStatusGroup.UNKNOWN]: {\n      statusIDs: [],\n      count: 0,\n    },\n  };\n  Object.keys(mapping).forEach((key) => {\n    groups[key] = {\n      statusIDs: [...mapping[key]],\n      count: 0,\n      filterType,\n    };\n  });\n\n  resources.forEach((resource) => {\n    const status = mapper(resource);\n    const group =\n      Object.keys(mapping).find((key) => mapping[key].includes(status)) ||\n      InventoryStatusGroup.UNKNOWN;\n    groups[group].count++;\n  });\n\n  return groups;\n};\n\nexport const getPodStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, POD_PHASE_GROUP_MAPPING, podPhaseFilterReducer, 'pod-status');\nexport const getNodeStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, NODE_STATUS_GROUP_MAPPING, nodeStatus, 'node-status');\nexport const getPVCStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PVC_STATUS_GROUP_MAPPING, (pvc) => pvc.status.phase, 'pvc-status');\nexport const getPVStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, PV_STATUS_GROUP_MAPPING, (pv) => pv.status.phase, 'pv-status');\nexport const getVSStatusGroups: StatusGroupMapper = (resources) =>\n  getStatusGroups(resources, VS_STATUS_GROUP_MAPPING, volumeSnapshotStatus, 'snapshot-status');\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as _ from 'lodash-es';\nimport * as semver from 'semver';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { AlertVariant, Button, Popover } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport { K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { ImageStreamModel } from '../models';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport { DOC_URL_PODMAN } from './utils';\nimport { CopyToClipboard } from './utils/copy-to-clipboard';\nimport { ExpandableAlert } from './utils/alerts';\nimport { ExternalLink } from './utils/link';\nimport { Kebab, ResourceKebab } from './utils/kebab';\nimport { SectionHeading } from './utils/headings';\nimport { LabelList } from './utils/label-list';\nimport { navFactory } from './utils/horizontal-nav';\nimport { ResourceLink } from './utils/resource-link';\nimport { ResourceSummary } from './utils/details-page';\nimport { Timestamp } from './utils/timestamp';\nimport { ImageStreamTimeline, getImageStreamTagName } from './image-stream-timeline';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst ImageStreamsReference: K8sResourceKindReference = 'ImageStream';\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getAnnotationTags = (specTag: any) =>\n  _.get(specTag, 'annotations.tags', '').split(/\\s*,\\s*/);\n\nconst isBuilderTag = (specTag: any) => {\n  // A spec tag has annotations tags, which is a comma-delimited string (e.g., 'builder,httpd').\n  const annotationTags = getAnnotationTags(specTag);\n  return _.includes(annotationTags, 'builder') && !_.includes(annotationTags, 'hidden');\n};\n\nconst getStatusTags = (imageStream: K8sResourceKind): any => {\n  const statusTags = _.get(imageStream, 'status.tags');\n  return _.keyBy(statusTags, 'tag');\n};\n\nexport const getBuilderTags = (imageStream: K8sResourceKind): any[] => {\n  const statusTags = getStatusTags(imageStream);\n  return _.filter(imageStream.spec.tags, (tag) => isBuilderTag(tag) && statusTags[tag.name]);\n};\n\n// Sort tags in reverse order by semver, falling back to a string comparison if not a valid version.\nexport const getBuilderTagsSortedByVersion = (imageStream: K8sResourceKind): any[] => {\n  return getBuilderTags(imageStream).sort(({ name: a }, { name: b }) => {\n    const v1 = semver.coerce(a);\n    const v2 = semver.coerce(b);\n    if (!v1 && !v2) {\n      return a.localeCompare(b);\n    }\n    if (!v1) {\n      return 1;\n    }\n    if (!v2) {\n      return -1;\n    }\n    return semver.rcompare(v1, v2);\n  });\n};\n\nexport const getMostRecentBuilderTag = (imageStream: K8sResourceKind) => {\n  const tags = getBuilderTagsSortedByVersion(imageStream);\n  return _.head(tags);\n};\n\n// An image stream is a builder image if\n// - It has a spec tag annotated with `builder` and not `hidden`\n// - It has a corresponding status tag\nexport const isBuilder = (imageStream: K8sResourceKind) => !_.isEmpty(getBuilderTags(imageStream));\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(ImageStreamModel), ...common];\n\nconst ImageStreamTagsRow: React.SFC<ImageStreamTagsRowProps> = ({\n  imageStream,\n  specTag,\n  statusTag,\n}) => {\n  const imageStreamStatus = _.get(imageStream, 'status');\n  const latest = _.get(statusTag, ['items', 0]);\n  const from = _.get(specTag, 'from');\n  const referencesTag = _.get(specTag, 'from.kind') === 'ImageStreamTag';\n  const image = _.get(latest, 'image');\n  const created = _.get(latest, 'created');\n  const dockerRepositoryCheck = _.has(imageStream, [\n    'metadata',\n    'annotations',\n    'openshift.io/image.dockerRepositoryCheck',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-2 col-sm-4 col-xs-4 co-break-word\">\n        <ResourceLink\n          kind={ImageStreamTagsReference}\n          name={getImageStreamTagName(imageStream.metadata.name, statusTag.tag)}\n          namespace={imageStream.metadata.namespace}\n          title={statusTag.tag}\n          linkTo={!!image}\n        />\n      </div>\n      <span className=\"col-md-3 col-sm-4 col-xs-8 co-break-all\">\n        {from && referencesTag && (\n          <ResourceLink\n            kind={ImageStreamTagsReference}\n            name={from.name}\n            namespace={imageStream.metadata.namespace}\n            title={from.name}\n          />\n        )}\n        {from && !referencesTag && <>{from.name}</>}\n        {!from && <span className=\"text-muted\">{t('public~pushed image')}</span>}\n      </span>\n      <span className=\"col-md-4 col-sm-4 hidden-xs co-break-all\">\n        {!imageStreamStatus && dockerRepositoryCheck && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~Unable to resolve')}\n          </>\n        )}\n        {!imageStreamStatus && !dockerRepositoryCheck && !from && <>{t('public~Not synced yet')}</>}\n        {/* We have no idea why in this case  */}\n        {!imageStreamStatus && !dockerRepositoryCheck && from && <>{t('public~Unresolved')}</>}\n        {imageStreamStatus && image && <>{image}</>}\n        {imageStreamStatus && !image && (\n          <>\n            <YellowExclamationTriangleIcon />\n            &nbsp;{t('public~There is no image associated with this tag')}\n          </>\n        )}\n      </span>\n      <div className=\"col-md-3 hidden-sm hidden-xs\">\n        {created && <Timestamp timestamp={created} />}\n        {!created && '-'}\n      </div>\n    </div>\n  );\n};\n\nexport const ExampleDockerCommandPopover: React.FC<ImageStreamManipulationHelpProps> = ({\n  imageStream,\n  tag,\n}) => {\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const { t } = useTranslation();\n  if (!publicImageRepository) {\n    return null;\n  }\n  const loginCommand = 'oc registry login';\n  const pushCommand = `docker push ${publicImageRepository}:${tag || '<tag>'}`;\n  const pullCommand = `docker pull ${publicImageRepository}:${tag || '<tag>'}`;\n\n  return (\n    <Popover\n      headerContent={<>{t('public~Image registry commands')}</>}\n      className=\"co-example-docker-command__popover\"\n      minWidth=\"600px\"\n      bodyContent={\n        <div>\n          <p>\n            {t(\n              'public~Create a new ImageStreamTag by pushing an image to this ImageStream with the desired tag.',\n            )}\n          </p>\n          <br />\n          <p>{t('public~Authenticate to the internal registry')}</p>\n          <CopyToClipboard value={loginCommand} />\n          <br />\n          <p>{t('public~Push an image to this ImageStream')}</p>\n          <CopyToClipboard value={pushCommand} />\n          <br />\n          <p>{t('public~Pull an image from this ImageStream')}</p>\n          <CopyToClipboard value={pullCommand} />\n          <br />\n          <p>\n            <Trans t={t} ns=\"public\">\n              Red Hat Enterprise Linux users may use the equivalent <strong>podman</strong>{' '}\n              commands.{' '}\n            </Trans>\n            <ExternalLink href={DOC_URL_PODMAN} text={t('public~Learn more.')} />\n          </p>\n        </div>\n      }\n    >\n      <Button className=\"hidden-sm hidden-xs\" type=\"button\" variant=\"link\">\n        <QuestionCircleIcon className=\"co-icon-space-r\" />\n        {t('public~Do you need to work with this ImageStream outside of the web console?')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport const ImageStreamsDetails: React.SFC<ImageStreamsDetailsProps> = ({ obj: imageStream }) => {\n  const { t } = useTranslation();\n\n  const getImportErrors = (): string[] => {\n    return _.transform(imageStream.status.tags, (acc, tag: any) => {\n      const importErrorCondition = _.find(\n        tag.conditions,\n        (condition) => condition.type === 'ImportSuccess' && condition.status === 'False',\n      );\n      importErrorCondition &&\n        acc.push(\n          t('public~Unable to sync image for tag {{tag}}. {{message}}', {\n            tag: `${imageStream.metadata.name}:${tag.tag}`,\n            message: importErrorCondition.message,\n          }),\n        );\n    });\n  };\n\n  const imageRepository = _.get(imageStream, 'status.dockerImageRepository');\n  const publicImageRepository = _.get(imageStream, 'status.publicDockerImageRepository');\n  const imageCount = _.get(imageStream, 'status.tags.length');\n  const specTagByName = _.keyBy(imageStream.spec.tags, 'name');\n  const importErrors = getImportErrors();\n\n  return (\n    <div>\n      <div className=\"co-m-pane__body\">\n        {!_.isEmpty(importErrors) && (\n          <ExpandableAlert\n            variant={AlertVariant.warning}\n            alerts={_.map(importErrors, (error, i) => (\n              <React.Fragment key={i}>{error}</React.Fragment>\n            ))}\n          />\n        )}\n        <SectionHeading text={t('public~ImageStream details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={imageStream}>\n              {imageRepository && <dt>{t('public~Image repository')}</dt>}\n              {imageRepository && <dd>{imageRepository}</dd>}\n              {publicImageRepository && <dt>{t('public~Public image repository')}</dt>}\n              {publicImageRepository && <dd>{publicImageRepository}</dd>}\n              <dt>{t('public~Image count')}</dt>\n              <dd>{imageCount ? imageCount : 0}</dd>\n            </ResourceSummary>\n            <ExampleDockerCommandPopover imageStream={imageStream} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Tags')} />\n        {_.isEmpty(imageStream.status.tags) ? (\n          <span className=\"text-muted\">{t('public~No tags')}</span>\n        ) : (\n          <div className=\"row\">\n            <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n              <div className=\"row co-m-table-grid__head\">\n                <div className=\"col-md-2 col-sm-4 col-xs-4\">{t('public~Name')}</div>\n                <div className=\"col-md-3 col-sm-4 col-xs-8\">{t('public~From')}</div>\n                <div className=\"col-md-4 col-sm-4 hidden-xs\">{t('public~Identifier')}</div>\n                <div className=\"col-md-3 hidden-sm hidden-xs\">{t('public~Last updated')}</div>\n              </div>\n              <div className=\"co-m-table-grid__body\">\n                {_.map(imageStream.status.tags, (statusTag) => (\n                  <ImageStreamTagsRow\n                    key={statusTag.tag}\n                    imageStream={imageStream}\n                    specTag={specTagByName[statusTag.tag]}\n                    statusTag={statusTag}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ImageStreamHistory: React.FC<ImageStreamHistoryProps> = ({ obj: imageStream }) => {\n  const imageStreamStatusTags = _.get(imageStream, 'status.tags');\n  return (\n    <ImageStreamTimeline\n      imageStreamTags={imageStreamStatusTags}\n      imageStreamName={imageStream.metadata.name}\n      imageStreamNamespace={imageStream.metadata.namespace}\n    />\n  );\n};\nImageStreamHistory.displayName = 'ImageStreamHistory';\n\nconst pages = [\n  navFactory.details(ImageStreamsDetails),\n  navFactory.editYaml(),\n  navFactory.history(ImageStreamHistory),\n];\nexport const ImageStreamsDetailsPage: React.SFC = (props) => (\n  <DetailsPage {...props} kind={ImageStreamsReference} menuActions={menuActions} pages={pages} />\n);\nImageStreamsDetailsPage.displayName = 'ImageStreamsDetailsPage';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  Kebab.columnClass,\n];\n\nconst ImageStreamsTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj }) => {\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={ImageStreamsReference}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={ImageStreamsReference} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <ResourceKebab actions={menuActions} kind={ImageStreamsReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageStreamsList: React.SFC = (props) => {\n  const { t } = useTranslation();\n  const ImageStreamsTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n        id: 'namespace',\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Created'),\n        sortField: 'metadata.creationTimestamp',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[4] },\n      },\n    ];\n  };\n  ImageStreamsTableHeader.displayName = 'ImageStreamsTableHeader';\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ImageStreams')}\n      Header={ImageStreamsTableHeader}\n      Row={ImageStreamsTableRow}\n      virtualize\n    />\n  );\n};\n\nImageStreamsList.displayName = 'ImageStreamsList';\n\nexport const buildPhase = (build) => build.status.phase;\n\nexport const ImageStreamsPage: React.SFC<ImageStreamsPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {...props}\n      title={t('public~ImageStreams')}\n      kind={ImageStreamsReference}\n      ListComponent={ImageStreamsList}\n      canCreate={true}\n    />\n  );\n};\n\nImageStreamsPage.displayName = 'ImageStreamsListPage';\n\ntype ImageStreamTagsRowProps = {\n  imageStream: K8sResourceKind;\n  specTag: any;\n  statusTag: any;\n};\n\ntype ImageStreamHistoryProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamManipulationHelpProps = {\n  imageStream: K8sResourceKind;\n  tag?: string;\n};\n\nexport type ImageStreamsDetailsProps = {\n  obj: K8sResourceKind;\n};\n\nexport type ImageStreamsPageProps = {\n  filterLabel: string;\n};\n","export { default as ProjectDetailsPage } from './details/ProjectDetailsPage';\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../module/k8s';\n\nexport const ProjectDashboardContext = React.createContext<ProjectDashboardContext>({});\n\n// eslint-disable-next-line no-redeclare\ntype ProjectDashboardContext = {\n  obj?: K8sResourceKind;\n  namespaceLinks?: K8sResourceKind[];\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","import { createContext } from 'react';\nimport { Model } from '@patternfly/react-topology';\nimport { observable, computed, makeObservable } from 'mobx';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDataModelReconciler,\n  TopologyDataResources,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  getBaseWatchedResources,\n  getWorkloadResources,\n} from './transform-utils';\n\nexport type ModelExtensionContext = {\n  priority: number;\n  resources?: (namespace: string) => WatchK8sResources<any>;\n  workloadKeys?: string[];\n  dataModelGetter?: TopologyDataModelGetter;\n  dataModelDepicter?: TopologyDataModelDepicted;\n  dataModelReconciler?: TopologyDataModelReconciler;\n};\n\nexport class ExtensibleModel {\n  private extensions: { [id: string]: ModelExtensionContext } = {};\n\n  public namespace: string = undefined;\n\n  public model: Model = { nodes: [], edges: [] };\n\n  public loaded: boolean = false;\n\n  public loadError: string = undefined;\n\n  public extensionsLoaded: boolean = false;\n\n  public watchedResources: WatchK8sResources<any> = {};\n\n  public constructor(namespace?: string) {\n    this.namespace = namespace;\n\n    makeObservable(this, {\n      namespace: observable,\n      model: observable.ref,\n      loaded: observable,\n      loadError: observable,\n      extensionsLoaded: observable,\n      watchedResources: observable.ref,\n      isEmptyModel: computed,\n    });\n  }\n\n  public onExtensionsLoaded: (extensibleModel: ExtensibleModel) => void;\n\n  private updateExtensionsLoaded(): void {\n    const extensionKeys = Object.keys(this.extensions);\n    const prev = this.extensionsLoaded;\n    this.extensionsLoaded =\n      extensionKeys.length > 1 &&\n      extensionKeys.every(\n        (key) =>\n          !!this.extensions[key].dataModelGetter &&\n          !!this.extensions[key].dataModelDepicter &&\n          !!this.extensions[key].dataModelReconciler,\n      );\n    if (!prev && this.extensionsLoaded && this.onExtensionsLoaded) {\n      this.onExtensionsLoaded(this);\n    }\n  }\n\n  public getExtensions(): { [id: string]: ModelExtensionContext } {\n    return this.extensions;\n  }\n\n  public getExtension(id: string): ModelExtensionContext {\n    return this.extensions[id];\n  }\n\n  public get workloadKeys(): string[] {\n    const workloadKeys = [...WORKLOAD_TYPES];\n    Object.keys(this.extensions).forEach((key) => {\n      if (this.extensions[key].workloadKeys) {\n        this.extensions[key].workloadKeys.forEach((workloadKey) => {\n          if (!workloadKeys.includes(workloadKey)) {\n            workloadKeys.push(workloadKey);\n          }\n        });\n      }\n    });\n    return workloadKeys;\n  }\n\n  public updateWatchedResources = (): void => {\n    const extensionKeys = Object.keys(this.extensions);\n    this.watchedResources = extensionKeys.reduce((acc, key) => {\n      if (this.extensions[key].resources) {\n        const resList = this.extensions[key].resources(this.namespace);\n        Object.keys(resList).forEach((resKey) => {\n          if (!acc[resKey]) {\n            acc[resKey] = resList[resKey];\n          }\n        });\n      }\n      return acc;\n    }, getBaseWatchedResources(this.namespace));\n  };\n\n  public updateExtension = (id: string, extension: ModelExtensionContext): void => {\n    this.extensions[id] = { ...(this.extensions[id] || {}), ...extension };\n    this.updateExtensionsLoaded();\n    this.updateWatchedResources();\n  };\n\n  public getWorkloadResources = (resources: TopologyDataResources): K8sResourceKind[] => {\n    const resList = this.watchedResources;\n    const kindsMap = Object.keys(resList).reduce((acc, key) => {\n      acc[key] = resList[key].kind;\n      return acc;\n    }, {});\n    return getWorkloadResources(resources, kindsMap, this.workloadKeys);\n  };\n\n  public get prioritizedKeys(): string[] {\n    return Object.keys(this.extensions).sort(\n      (k1, k2) => this.extensions[k1].priority - this.extensions[k2].priority,\n    );\n  }\n\n  public get dataModelGetters(): TopologyDataModelGetter[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelGetter) {\n        acc.push(this.extensions[key].dataModelGetter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelDepicters(): TopologyDataModelDepicted[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelDepicter) {\n        acc.push(this.extensions[key].dataModelDepicter);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get dataModelReconcilers(): TopologyDataModelReconciler[] {\n    return this.prioritizedKeys.reduce((acc, key) => {\n      if (this.extensions[key].dataModelReconciler) {\n        acc.push(this.extensions[key].dataModelReconciler);\n      }\n      return acc;\n    }, []);\n  }\n\n  public get isEmptyModel(): boolean {\n    return (this.model?.nodes?.length ?? 0) === 0;\n  }\n\n  public getExtensionModels = async (resources: TopologyDataResources): Promise<Model> => {\n    const topologyModel: Model = {\n      nodes: [],\n      edges: [],\n    };\n    const getters = this.dataModelGetters;\n\n    if (!getters?.length) {\n      return Promise.resolve(topologyModel);\n    }\n\n    const depicters = this.dataModelDepicters;\n    const workloadResources = this.getWorkloadResources(resources);\n    const promises = getters.map((getter) => {\n      try {\n        return getter(this.namespace, resources, workloadResources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to add some resources to topology', e);\n        return null;\n      }\n    });\n\n    await Promise.all(promises).then((models) => {\n      models.forEach((model) => {\n        if (model) {\n          try {\n            addToTopologyDataModel(model, topologyModel, depicters);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error('Unable to add some resources to topology', e);\n          }\n        }\n      });\n    });\n\n    return Promise.resolve(topologyModel);\n  };\n\n  public reconcileModel = (model: Model, resources: TopologyDataResources): void => {\n    this.dataModelReconcilers.forEach((reconciler) => {\n      try {\n        reconciler(model, resources);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('Unable to reconcile some resources in topology', e);\n      }\n    });\n  };\n}\n\nexport const ModelContext = createContext<ExtensibleModel>(null);\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as _ from 'lodash-es';\n\nimport { RESULTS_TYPE } from '../../reducers/dashboards';\nimport { NotificationAlerts } from '../../reducers/observe';\nimport {\n  StopWatchPrometheusAction,\n  stopWatchPrometheusQuery,\n  stopWatchURL,\n  StopWatchURLAction,\n  watchPrometheusQuery,\n  WatchPrometheusQueryAction,\n  watchURL,\n  WatchURLAction,\n  getQueryKey,\n} from '../../actions/dashboards';\nimport { RootState } from '../../redux';\nimport { Firehose, FirehoseResource, FirehoseResult } from '../utils';\nimport { K8sResourceKind, AppliedClusterResourceQuotaKind } from '../../module/k8s';\nimport { PrometheusResponse } from '../graphs';\nimport { Fetch, RequestMap } from '@console/dynamic-plugin-sdk/src/api/internal-types';\n\nconst mapDispatchToProps: DispatchToProps = (dispatch) => ({\n  watchURL: (url, fetch) => dispatch(watchURL(url, fetch)),\n  stopWatchURL: (url) => dispatch(stopWatchURL(url)),\n  watchPrometheusQuery: (query, namespace, timespan) =>\n    dispatch(watchPrometheusQuery(query, namespace, timespan)),\n  stopWatchPrometheusQuery: (query, timespan) =>\n    dispatch(stopWatchPrometheusQuery(query, timespan)),\n});\n\nconst mapStateToProps = (state: RootState) => ({\n  [RESULTS_TYPE.URL]: state.dashboards.get(RESULTS_TYPE.URL),\n  [RESULTS_TYPE.PROMETHEUS]: state.dashboards.get(RESULTS_TYPE.PROMETHEUS) as RequestMap<\n    PrometheusResponse\n  >,\n  notificationAlerts: state.observe.get('notificationAlerts'),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport const withDashboardResources = <P extends DashboardItemProps>(\n  WrappedComponent: React.ComponentType<P>,\n) =>\n  connect<StateProps, DispatchProps, Diff<P, DashboardItemProps>>(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(\n    class WithDashboardResources extends React.Component<\n      WithDashboardResourcesProps,\n      WithDashboardResourcesState\n    > {\n      private urls: Array<string> = [];\n      private queries: Array<string> = [];\n      private watchingAlerts: boolean = false;\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          k8sResources: [],\n        };\n      }\n\n      shouldComponentUpdate(\n        nextProps: WithDashboardResourcesProps,\n        nextState: WithDashboardResourcesState,\n      ) {\n        const urlResultChanged = this.urls.some(\n          (urlKey) =>\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'data']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'data']) ||\n            this.props[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']) !==\n              nextProps[RESULTS_TYPE.URL].getIn([urlKey, 'loadError']),\n        );\n        const queryResultChanged = this.queries.some(\n          (query) =>\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'data']) ||\n            this.props[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']) !==\n              nextProps[RESULTS_TYPE.PROMETHEUS].getIn([query, 'loadError']),\n        );\n        const alertsResultChanged =\n          this.props?.notificationAlerts?.data !== nextProps?.notificationAlerts?.data ||\n          this.props?.notificationAlerts?.loadError !== nextProps?.notificationAlerts?.loadError;\n        const k8sResourcesChanged = this.state.k8sResources !== nextState.k8sResources;\n\n        const nextExternalProps = this.getExternalProps(nextProps);\n        const externalProps = this.getExternalProps(this.props);\n\n        return (\n          urlResultChanged ||\n          queryResultChanged ||\n          k8sResourcesChanged ||\n          (this.watchingAlerts && alertsResultChanged) ||\n          Object.keys(nextExternalProps).length !== Object.keys(externalProps).length ||\n          Object.keys(nextExternalProps).some(\n            (key) => nextExternalProps[key] !== externalProps[key],\n          )\n        );\n      }\n\n      watchURL: WatchURL = (url, fetch) => {\n        this.urls.push(url);\n        this.props.watchURL(url, fetch);\n      };\n\n      watchPrometheus: WatchPrometheus = (query, namespace, timespan) => {\n        this.queries.push(getQueryKey(query, timespan));\n        this.props.watchPrometheusQuery(query, namespace, timespan);\n      };\n\n      stopWatchPrometheusQuery: StopWatchPrometheus = (query, timespan) => {\n        const queryKey = getQueryKey(query, timespan);\n        this.queries = this.queries.filter((q) => q !== queryKey);\n        this.props.stopWatchPrometheusQuery(query, timespan);\n      };\n\n      watchAlerts: WatchAlerts = () => {\n        this.watchingAlerts = true;\n      };\n\n      stopWatchAlerts: StopWatchAlerts = () => {\n        this.watchingAlerts = false;\n      };\n\n      watchK8sResource: WatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: [...state.k8sResources, { ...resource, optional: true }],\n        }));\n      };\n\n      stopWatchK8sResource: StopWatchK8sResource = (resource) => {\n        this.setState((state: WithDashboardResourcesState) => ({\n          k8sResources: state.k8sResources.filter((r) => r.prop !== resource.prop),\n        }));\n      };\n\n      getExternalProps = (props) => {\n        return _.omit(\n          props,\n          'watchURL',\n          'stopWatchURL',\n          'watchPrometheusQuery',\n          'stopWatchPrometheusQuery',\n          'watchAlerts',\n          'stopWatchAlerts',\n          RESULTS_TYPE.URL,\n          RESULTS_TYPE.PROMETHEUS,\n          'notificationAlerts',\n        );\n      };\n\n      render() {\n        return (\n          <Firehose resources={this.state.k8sResources}>\n            <WrappedComponent\n              watchURL={this.watchURL}\n              stopWatchURL={this.props.stopWatchURL}\n              watchPrometheus={this.watchPrometheus}\n              stopWatchPrometheusQuery={this.stopWatchPrometheusQuery}\n              watchAlerts={this.watchAlerts}\n              stopWatchAlerts={this.stopWatchAlerts}\n              urlResults={this.props[RESULTS_TYPE.URL]}\n              prometheusResults={this.props[RESULTS_TYPE.PROMETHEUS]}\n              notificationAlerts={this.props.notificationAlerts}\n              watchK8sResource={this.watchK8sResource}\n              stopWatchK8sResource={this.stopWatchK8sResource}\n              {...this.getExternalProps(this.props)}\n            />\n          </Firehose>\n        );\n      }\n    },\n  );\n\ntype DispatchToProps = (\n  dispatch: any,\n) => {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheusQuery: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n};\n\ntype WatchURL = (url: string, fetch?: Fetch) => void;\ntype StopWatchURL = (url: string) => void;\ntype WatchPrometheus = (query: string, namespace?: string, timespan?: number) => void;\ntype StopWatchPrometheus = (query: string, timespan?: number) => void;\ntype WatchAlerts = () => void;\ntype StopWatchAlerts = () => void;\n\ntype WithDashboardResourcesState = {\n  k8sResources: FirehoseResource[];\n};\n\ntype WithDashboardResourcesProps = {\n  watchURL: WatchURLAction;\n  watchPrometheusQuery: WatchPrometheusQueryAction;\n  stopWatchURL: StopWatchURLAction;\n  stopWatchPrometheusQuery: StopWatchPrometheusAction;\n  [RESULTS_TYPE.PROMETHEUS]: RequestMap<PrometheusResponse>;\n  [RESULTS_TYPE.URL]: RequestMap<any>;\n  notificationAlerts: any;\n};\n\nexport type WatchK8sResource = (resource: FirehoseResource) => void;\nexport type StopWatchK8sResource = (resource: FirehoseResource) => void;\n\nexport type DashboardItemProps = {\n  watchURL: WatchURL;\n  stopWatchURL: StopWatchURL;\n  watchPrometheus: WatchPrometheus;\n  stopWatchPrometheusQuery: StopWatchPrometheus;\n  watchAlerts: WatchAlerts;\n  stopWatchAlerts: StopWatchAlerts;\n  urlResults: RequestMap<any>;\n  prometheusResults: RequestMap<PrometheusResponse>;\n  notificationAlerts: NotificationAlerts;\n  watchK8sResource: WatchK8sResource;\n  stopWatchK8sResource: StopWatchK8sResource;\n  resources?: {\n    [key: string]:\n      | FirehoseResult\n      | FirehoseResult<K8sResourceKind>\n      | FirehoseResult<AppliedClusterResourceQuotaKind>;\n  };\n};\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as semver from 'semver';\nimport {\n  getImageStreamIcon,\n  getImageForIconClass,\n} from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  isBuilder,\n  getMostRecentBuilderTag,\n  getBuilderTagsSortedByVersion,\n} from '@console/internal/components/image-stream';\nimport { FirehoseResource } from '@console/internal/components/utils';\nimport { ProjectModel, ImageStreamModel } from '@console/internal/models';\nimport { ContainerPort, K8sResourceKind, K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport interface ImageTag {\n  name: string;\n  annotations: {\n    [key: string]: string;\n  };\n  generation: number;\n  [key: string]: any;\n}\nexport interface BuilderImage {\n  obj: K8sResourceKind;\n  name: string;\n  displayName: string;\n  description: string;\n  title: string;\n  iconUrl: string;\n  tags: ImageTag[];\n  recentTag: ImageTag;\n  imageStreamNamespace: string;\n}\n\nexport interface NormalizedBuilderImages {\n  [builderImageName: string]: BuilderImage;\n}\n\nexport const imageStreamLabels = ['app.kubernetes.io/name', 'app.openshift.io/runtime'];\n\nexport const getSampleRepo = (tag) => tag?.annotations?.sampleRepo ?? '';\nexport const getSampleRef = (tag) => tag?.annotations?.sampleRef ?? '';\nexport const getSampleContextDir = (tag) => tag?.annotations?.sampleContextDir ?? '';\n\n// Transform image ports to k8s structure.\n// `{ '3306/tcp': {} }` -> `{ containerPort: 3306, protocol: 'TCP' }`\nconst portsFromSpec = (portSpec: object): ContainerPort[] => {\n  return _.reduce(\n    portSpec,\n    (result: ContainerPort[], value, key) => {\n      const parts = key.split('/');\n      if (parts.length === 1) {\n        parts.push('tcp');\n      }\n\n      const containerPort = parseInt(parts[0], 10);\n      if (_.isFinite(containerPort)) {\n        result.push({\n          containerPort,\n          protocol: parts[1].toUpperCase(),\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unrecognized image port format', key);\n      }\n\n      return result;\n    },\n    [],\n  );\n};\n\nexport const getPorts = (imageStreamImage): ContainerPort[] => {\n  const portSpec =\n    imageStreamImage?.image?.dockerImageMetadata?.Config?.ExposedPorts ||\n    imageStreamImage?.image?.dockerImageMetadata?.ContainerConfig?.ExposedPorts;\n  return portsFromSpec(portSpec);\n};\n\n// Use the same naming convention as the CLI.\nexport const makePortName = (port: ContainerPort): string =>\n  `${port.containerPort}-${port.protocol}`.toLowerCase();\n\nexport const prettifyName = (name: string) => {\n  return name.replace(/(-|^)([^-]?)/g, (first, prep, letter) => {\n    return (prep && ' ') + letter.toUpperCase();\n  });\n};\n\nexport const normalizeBuilderImages = (\n  imageStreams: K8sResourceCommon | K8sResourceCommon[],\n): NormalizedBuilderImages => {\n  const data = Array.isArray(imageStreams) ? imageStreams : [imageStreams];\n  const builderImageStreams = data.filter((imageStream) => isBuilder(imageStream));\n\n  return builderImageStreams.reduce((builderImages: NormalizedBuilderImages, imageStream) => {\n    const tags = getBuilderTagsSortedByVersion(imageStream);\n    const recentTag = getMostRecentBuilderTag(imageStream);\n    const { name } = imageStream.metadata;\n    const displayName = imageStream?.metadata?.annotations?.['openshift.io/display-name'];\n    const description = recentTag?.annotations?.description;\n    const imageStreamNamespace = imageStream.metadata.namespace;\n    const title = displayName && displayName.length < 14 ? displayName : prettifyName(name);\n    const iconClass = getImageStreamIcon(recentTag);\n    const iconUrl = getImageForIconClass(iconClass);\n\n    builderImages[name] = {\n      obj: imageStream,\n      name,\n      displayName,\n      description,\n      title,\n      iconUrl,\n      tags,\n      recentTag,\n      imageStreamNamespace,\n    };\n    return builderImages;\n  }, {});\n};\n\nexport const getTagDataWithDisplayName = (\n  imageTags: ImageTag[],\n  selectedTag: string,\n  defaultName: string,\n): [ImageTag, string] => {\n  const imageTag = _.find(imageTags, { name: selectedTag });\n  const displayName = imageTag?.annotations?.['openshift.io/display-name'] ?? defaultName;\n\n  return [imageTag, displayName];\n};\n\nexport const getSuggestedName = (name: string): string | undefined => {\n  if (!name) {\n    return undefined;\n  }\n  const imageName: string = _.last(name.split('/'));\n  return _.first(imageName.split(/[^a-z0-9-]/));\n};\n\nexport enum RegistryType {\n  External = 'external',\n  Internal = 'internal',\n}\nexport enum BuilderImagesNamespace {\n  Openshift = 'openshift',\n}\nexport const imageRegistryType = (t: TFunction) => {\n  return {\n    External: {\n      value: RegistryType.External,\n      label: t('devconsole~Image name from external registry'),\n    },\n    Internal: {\n      value: RegistryType.Internal,\n      label: t('devconsole~Image stream tag from internal registry'),\n    },\n  };\n};\n\nexport const getSortedTags = (imageStream: K8sResourceKind) => {\n  return _.isArray(imageStream.status.tags) && imageStream.status.tags.length\n    ? imageStream.status.tags.sort(({ tag: a }, { tag: b }) => {\n        const v1 = semver.coerce(a);\n        const v2 = semver.coerce(b);\n        if (!v1 && !v2) {\n          return a.localeCompare(b);\n        }\n        if (!v1) {\n          return 1;\n        }\n        if (!v2) {\n          return -1;\n        }\n        return semver.rcompare(v1, v2);\n      })\n    : [];\n};\nexport const getImageStreamTags = (imageStream: K8sResourceKind) => {\n  const sortedTags = imageStream && !_.isEmpty(imageStream) ? getSortedTags(imageStream) : [];\n  return sortedTags.reduce((tags, { tag }) => {\n    tags[tag] = tag;\n    return tags;\n  }, {});\n};\n\nexport const getProjectResource = (): FirehoseResource[] => {\n  return [\n    {\n      isList: true,\n      kind: ProjectModel.kind,\n      prop: ProjectModel.id,\n    },\n  ];\n};\n\nexport const getImageStreamResource = (namespace: string): FirehoseResource[] => {\n  const resource = [];\n  if (namespace) {\n    resource.push({\n      isList: true,\n      kind: ImageStreamModel.kind,\n      prop: ImageStreamModel.id,\n      namespace,\n    });\n  }\n  return resource;\n};\n","import { convertToBaseValue, humanizePercentage } from '@console/internal/components/utils';\n\nconst genericCountResources = [\n  'configmaps',\n  'persistentvolumeclaims',\n  'pods',\n  'replicationcontrollers',\n  'resourcequotas',\n  'services',\n  'services.loadbalancers',\n  'services.nodeports',\n  'secrets',\n  'openshift.io/imagestreams',\n];\n\nexport const getUsedPercentage = (hard: string, used: string) => {\n  let usedNum = convertToBaseValue(used);\n  let hardNum = convertToBaseValue(hard);\n\n  if (!usedNum || !hardNum) {\n    // try to get the value without unit\n    usedNum = parseInt(usedNum, 10);\n    hardNum = parseInt(hardNum, 10);\n  }\n\n  return !usedNum || !hardNum ? 0 : (usedNum / hardNum) * 100;\n};\n\nexport const getLabelAndUsage = ({\n  resourceName,\n  used,\n  hard,\n}: {\n  resourceName: string;\n  used: string;\n  hard: string;\n}) => {\n  const useCount =\n    resourceName.startsWith('count/') || genericCountResources.includes(resourceName);\n\n  const percent = getUsedPercentage(hard, used);\n\n  return {\n    label: useCount ? `${used || 0} of ${hard}` : humanizePercentage(percent).string,\n    percent,\n  };\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport * as cx from 'classnames';\nimport { NamespaceBar } from '@console/internal/components/namespace-bar';\nimport NamespaceBarApplicationSelector from '@console/topology/src/components/dropdowns/NamespaceBarApplicationSelector';\n\nimport './NamespacedPage.scss';\n\nexport enum NamespacedPageVariants {\n  light = 'light',\n  default = 'default',\n}\n\nexport interface NamespacedPageProps {\n  disabled?: boolean;\n  hideProjects?: boolean;\n  hideApplications?: boolean;\n  onNamespaceChange?: (newNamespace: string) => void;\n  variant?: NamespacedPageVariants;\n  toolbar?: React.ReactNode;\n}\n\nconst NamespacedPage: React.FC<NamespacedPageProps> = ({\n  children,\n  disabled,\n  onNamespaceChange,\n  hideProjects = false,\n  hideApplications = false,\n  variant = NamespacedPageVariants.default,\n  toolbar,\n}) => (\n  <div className=\"odc-namespaced-page\">\n    <NamespaceBar\n      isDisabled={disabled}\n      onNamespaceChange={onNamespaceChange}\n      hideProjects={hideProjects}\n    >\n      {!hideApplications && <NamespaceBarApplicationSelector disabled={disabled} />}\n      {toolbar && <div className=\"odc-namespaced-page__toolbar\">{toolbar}</div>}\n    </NamespaceBar>\n    <div\n      className={cx('odc-namespaced-page__content', {\n        [`is-${variant}`]: variant !== NamespacedPageVariants.default,\n      })}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default NamespacedPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useExtensions } from '@console/plugin-sdk/src';\nimport { ResourceDropdown } from '@console/shared';\nimport { getNamespacedDynamicModelFactories } from '../../data-transforms/DataModelProvider';\nimport { getBaseWatchedResources } from '../../data-transforms/transform-utils';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../../extensions';\n\ninterface ApplicationDropdownProps {\n  id?: string;\n  ariaLabel?: string;\n  className?: string;\n  dropDownClassName?: string;\n  menuClassName?: string;\n  buttonClassName?: string;\n  title?: React.ReactNode;\n  titlePrefix?: string;\n  allApplicationsKey?: string;\n  userSettingsPrefix?: string;\n  storageKey?: string;\n  disabled?: boolean;\n  allSelectorItem?: {\n    allSelectorKey?: string;\n    allSelectorTitle?: string;\n  };\n  noneSelectorItem?: {\n    noneSelectorKey?: string;\n    noneSelectorTitle?: string;\n  };\n  namespace?: string;\n  actionItems?: {\n    actionTitle: string;\n    actionKey: string;\n  }[];\n  selectedKey: string;\n  autoSelect?: boolean;\n  onChange?: (key: string, name?: string) => void;\n  onLoad?: (items: { [key: string]: string }) => void;\n}\n\nconst ApplicationDropdown: React.FC<ApplicationDropdownProps> = ({ namespace, ...props }) => {\n  const { t } = useTranslation();\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  const resources = React.useMemo(() => {\n    let watchedBaseResources = getBaseWatchedResources(namespace);\n    [...modelFactories, ...namespacedDynamicFactories].forEach((modelFactory) => {\n      const factoryResources = modelFactory.properties.resources?.(namespace);\n      if (factoryResources) {\n        watchedBaseResources = {\n          ...factoryResources,\n          ...watchedBaseResources,\n        };\n      }\n    });\n    return Object.keys(watchedBaseResources).map((key) => ({\n      ...watchedBaseResources[key],\n      prop: key,\n    }));\n  }, [namespacedDynamicFactories, modelFactories, namespace]);\n\n  return (\n    <Firehose resources={resources}>\n      <ResourceDropdown\n        {...props}\n        placeholder={t('topology~Select an application')}\n        dataSelector={['metadata', 'labels', 'app.kubernetes.io/part-of']}\n      />\n    </Firehose>\n  );\n};\n\nexport default ApplicationDropdown;\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as React from 'react';\nimport {\n  ExtensionK8sGroupKindModel,\n  isTopologyDataModelFactory as isDynamicTopologyDataModelFactory,\n  TopologyDataModelFactory as DynamicTopologyDataModelFactory,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport {\n  modelForGroupKind,\n  referenceForExtensionModel,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { LoadedExtension, useExtensions } from '@console/plugin-sdk/src';\nimport { isTopologyDataModelFactory, TopologyDataModelFactory } from '../extensions/topology';\nimport DataModelExtension from './DataModelExtension';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport TopologyDataRetriever from './TopologyDataRetriever';\n\ninterface DataModelProviderProps {\n  namespace: string;\n  children?: React.ReactNode;\n}\n\nconst flattenResource = (\n  namespace: string,\n  extension: LoadedExtension<DynamicTopologyDataModelFactory>,\n  resourceKey: string,\n  model?: ExtensionK8sGroupKindModel,\n  opts = {} as Partial<WatchK8sResource>,\n) => {\n  if (!model) {\n    return { namespace, ...opts };\n  }\n\n  if (model.version) {\n    const extensionReference = referenceForExtensionModel(model); // requires model.version\n    return { namespace, kind: extensionReference, ...opts };\n  }\n\n  // If can't find reference for an extention model, fall back to internal reference\n  const internalModel = modelForGroupKind(model.group, model.kind); // Return null for CRDs\n  if (!internalModel) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Plugin \"${extension.pluginID}\": Could not find model (CRD) for group \"${model.group}\" and kind \"${model.kind}\" to determinate version. Please add a required flag to the extension to suppress this warning. The resource \"${resourceKey}\" will not be loaded and ignored in the topology view for now:`,\n      extension,\n      resourceKey,\n      model,\n      opts,\n    );\n    return null;\n  }\n  const internalReference = referenceForModel(internalModel);\n  return { namespace, kind: internalReference, ...opts };\n};\n\nexport const getNamespacedDynamicModelFactories = (\n  extensions: LoadedExtension<DynamicTopologyDataModelFactory>[],\n) =>\n  extensions.map((extension) => {\n    return {\n      ...extension,\n      properties: {\n        ...extension.properties,\n        resources: (namespace: string) =>\n          Object.entries(extension.properties.resources || {}).reduce((acc, [key, resource]) => {\n            const flattenedResource = flattenResource(\n              namespace,\n              extension,\n              key,\n              resource?.model,\n              resource?.opts,\n            );\n            if (flattenedResource) {\n              acc[key] = flattenedResource;\n            }\n            return acc;\n          }, {}),\n      },\n    };\n  });\n\nconst DataModelProvider: React.FC<DataModelProviderProps> = ({ namespace, children }) => {\n  const [model, setModel] = React.useState<ExtensibleModel>(new ExtensibleModel(namespace));\n\n  React.useEffect(() => {\n    setModel(new ExtensibleModel(namespace));\n  }, [namespace]);\n\n  const modelFactories = useExtensions<TopologyDataModelFactory>(isTopologyDataModelFactory);\n  const dynamicModelFactories = useExtensions<DynamicTopologyDataModelFactory>(\n    isDynamicTopologyDataModelFactory,\n  );\n\n  const namespacedDynamicFactories = React.useMemo(\n    () => getNamespacedDynamicModelFactories(dynamicModelFactories),\n    [dynamicModelFactories],\n  );\n\n  return (\n    <ModelContext.Provider value={model}>\n      {namespace && (\n        <>\n          {[...namespacedDynamicFactories, ...modelFactories].map((factory) => (\n            <DataModelExtension key={factory.properties.id} dataModelFactory={factory.properties} />\n          ))}\n        </>\n      )}\n      {namespace && <TopologyDataRetriever />}\n      {children}\n    </ModelContext.Provider>\n  );\n};\n\nexport default DataModelProvider;\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { TRIGGERS_ANNOTATION } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION } from '@console/topology/src/const';\nimport { ResourcesKinds, Resources } from '../components/import/import-types';\n\nexport const getAppLabels = ({\n  name,\n  applicationName,\n  imageStreamName,\n  runtimeIcon,\n  selectedTag,\n  namespace,\n}: {\n  name: string;\n  applicationName?: string;\n  imageStreamName?: string;\n  runtimeIcon?: string;\n  selectedTag?: string;\n  namespace?: string;\n}) => {\n  const labels = {\n    app: name,\n    'app.kubernetes.io/instance': name,\n    'app.kubernetes.io/component': name,\n    'app.kubernetes.io/name': name,\n    ...(imageStreamName && {\n      'app.openshift.io/runtime': imageStreamName,\n    }),\n  };\n\n  if (runtimeIcon) {\n    labels['app.openshift.io/runtime'] = runtimeIcon;\n  }\n  if (applicationName && applicationName.trim().length > 0) {\n    labels['app.kubernetes.io/part-of'] = applicationName;\n  }\n  if (selectedTag) {\n    labels['app.openshift.io/runtime-version'] = selectedTag;\n  }\n  if (namespace) {\n    labels['app.openshift.io/runtime-namespace'] = namespace;\n  }\n\n  return labels;\n};\n\nexport const getCommonAnnotations = () => {\n  return {\n    'openshift.io/generated-by': 'OpenShiftWebConsole',\n  };\n};\n\nexport const getRouteAnnotations = () => {\n  return {\n    [ROUTE_DISABLED_ANNOTATION]: 'false',\n  };\n};\n\nexport const getGitAnnotations = (gitURL: string, gitRef?: string) => {\n  return {\n    'app.openshift.io/vcs-uri': gitURL,\n    'app.openshift.io/vcs-ref': gitRef || '',\n  };\n};\n\nexport const getTriggerAnnotation = (\n  containerName: string,\n  imageName: string,\n  imageNamespace: string,\n  imageTrigger: boolean,\n  imageTag: string = 'latest',\n) => ({\n  [TRIGGERS_ANNOTATION]: JSON.stringify([\n    {\n      from: { kind: 'ImageStreamTag', name: `${imageName}:${imageTag}`, namespace: imageNamespace },\n      fieldPath: `spec.template.spec.containers[?(@.name==\"${containerName}\")].image`,\n      paused: `${!imageTrigger}`,\n    },\n  ]),\n});\n\nexport const getUserAnnotations = (allAnnotations: { [key: string]: string }) => {\n  const defaultAnnotations = [\n    'app.openshift.io/vcs-uri',\n    'app.openshift.io/vcs-ref',\n    'openshift.io/generated-by',\n    'image.openshift.io/triggers',\n    'alpha.image.policy.openshift.io/resolve-names',\n    'jarFileName',\n    'kubectl.kubernetes.io/last-applied-configuration',\n  ];\n  return _.omit(allAnnotations, defaultAnnotations);\n};\n\nexport const getPodLabels = (resource: Resources, name: string) => {\n  const resourceKind = ResourcesKinds[resource];\n  if (resourceKind) {\n    return {\n      app: name,\n      [resourceKind.toLowerCase()]: name,\n    };\n  }\n  return {\n    app: name,\n  };\n};\n\nexport const mergeData = (originalResource: K8sResourceKind, newResource: K8sResourceKind) => {\n  if (_.isEmpty(originalResource)) return newResource;\n\n  const mergedData = _.merge({}, originalResource || {}, newResource);\n  const isDevfileResource = originalResource?.metadata?.annotations?.isFromDevfile;\n  mergedData.metadata.labels = {\n    ...newResource.metadata.labels,\n    ...(isDevfileResource ? originalResource?.metadata?.labels : {}),\n  };\n  if (mergedData.metadata.annotations) {\n    mergedData.metadata.annotations = {\n      ...(isDevfileResource\n        ? originalResource?.metadata?.annotations\n        : getUserAnnotations(originalResource?.metadata?.annotations)),\n      ...newResource.metadata.annotations,\n    };\n  }\n  if (mergedData.spec?.template?.metadata?.labels) {\n    mergedData.spec.template.metadata.labels = newResource.spec?.template?.metadata?.labels;\n  }\n  if (!_.isEmpty(originalResource.spec?.template?.spec?.containers)) {\n    mergedData.spec.template.spec.containers = originalResource.spec.template.spec.containers;\n    const index = _.findIndex(originalResource.spec.template.spec.containers, {\n      name: originalResource.metadata.name,\n    });\n    if (index >= 0) {\n      mergedData.spec.template.spec.containers[index] = {\n        ...originalResource.spec.template.spec.containers[index],\n        ...newResource.spec.template.spec.containers[0],\n        // Keep the volumeMounts as is since we do not give an option to edit these currently\n        volumeMounts: originalResource.spec.template.spec.containers[index].volumeMounts,\n      };\n    } else {\n      mergedData.spec.template.spec.containers.push(newResource.spec.template.spec.containers[0]);\n    }\n  }\n  if (mergedData?.spec?.hasOwnProperty('strategy')) {\n    mergedData.spec.strategy = newResource.spec?.strategy ?? originalResource.spec?.strategy;\n  }\n  if (mergedData.spec?.triggers) {\n    mergedData.spec.triggers = newResource.spec.triggers;\n  }\n  if (!newResource.spec?.source?.sourceSecret) {\n    delete mergedData?.spec?.source?.sourceSecret;\n  }\n\n  if (mergedData.spec?.template?.spec?.hasOwnProperty('volumes')) {\n    mergedData.spec.template.spec.volumes = originalResource.spec?.template?.spec?.volumes;\n  }\n\n  return mergedData;\n};\n\nexport const getTemplateLabels = (deployment: K8sResourceKind) => {\n  return _.reduce(\n    deployment?.spec?.template?.metadata?.labels,\n    (acc, value, key) => {\n      if (!deployment.metadata?.labels?.hasOwnProperty(key)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {},\n  );\n};\n","import * as React from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { TopologyDataModelFactory } from '../extensions/topology';\nimport { ModelContext, ExtensibleModel, ModelExtensionContext } from './ModelContext';\n\ninterface DataModelExtensionProps {\n  dataModelFactory: TopologyDataModelFactory['properties'];\n}\n\nconst DataModelExtension: React.FC<DataModelExtensionProps> = ({ dataModelFactory }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { id, priority, resources } = dataModelFactory;\n  const workloadKeys = useDeepCompareMemoize(dataModelFactory.workloadKeys);\n  const extensionContext = React.useRef<ModelExtensionContext>({\n    priority,\n    workloadKeys,\n    resources,\n  });\n\n  React.useEffect(() => {\n    const storedContext = dataModelContext.getExtension(id);\n    if (!storedContext) {\n      extensionContext.current = {\n        priority,\n        workloadKeys,\n        resources,\n      };\n      dataModelContext.updateExtension(id, extensionContext.current);\n\n      const { getDataModel, isResourceDepicted, getDataModelReconciler } = dataModelFactory;\n      if (getDataModel) {\n        getDataModel()\n          .then((getter) => {\n            extensionContext.current.dataModelGetter = getter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelGetter = () => Promise.resolve({});\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelGetter = () => Promise.resolve({});\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (isResourceDepicted) {\n        isResourceDepicted()\n          .then((depicter) => {\n            extensionContext.current.dataModelDepicter = depicter;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelDepicter = () => false;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelDepicter = () => false;\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n\n      if (getDataModelReconciler) {\n        getDataModelReconciler()\n          .then((reconciler) => {\n            extensionContext.current.dataModelReconciler = reconciler;\n            dataModelContext.updateExtension(id, extensionContext.current);\n          })\n          .catch(() => {\n            extensionContext.current.dataModelReconciler = () => {};\n            dataModelContext.updateExtension(id, extensionContext.current);\n          });\n      } else {\n        extensionContext.current.dataModelReconciler = () => {};\n        dataModelContext.updateExtension(id, extensionContext.current);\n      }\n    }\n  }, [dataModelContext, dataModelFactory, id, priority, resources, workloadKeys]);\n\n  return null;\n};\n\nexport default DataModelExtension;\n","import * as React from 'react';\nimport { observer } from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useDebounceCallback } from '@console/shared';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { ModelContext, ExtensibleModel } from './ModelContext';\nimport { updateTopologyDataModel } from './updateTopologyDataModel';\nimport { useMonitoringAlerts } from './useMonitoringAlerts';\n\ntype TopologyDataRetrieverProps = {\n  trafficData?: TrafficData;\n};\n\nconst TopologyDataRetriever: React.FC<TopologyDataRetrieverProps> = ({ trafficData }) => {\n  const dataModelContext = React.useContext<ExtensibleModel>(ModelContext);\n  const { namespace, extensionsLoaded, watchedResources } = dataModelContext;\n  const [resources, setResources] = React.useState<WatchK8sResults<TopologyResourcesObject>>();\n  const monitoringAlerts = useMonitoringAlerts(namespace);\n  const resourcesList = React.useMemo<WatchK8sResources<any>>(\n    () => (namespace && extensionsLoaded ? watchedResources : {}),\n    [extensionsLoaded, watchedResources, namespace],\n  );\n\n  const debouncedUpdateResources = useDebounceCallback(setResources, 250);\n\n  const updatedResources = useK8sWatchResources<TopologyResourcesObject>(resourcesList);\n  React.useEffect(() => debouncedUpdateResources(updatedResources), [\n    debouncedUpdateResources,\n    updatedResources,\n  ]);\n\n  // Wipe the current model on a namespace change\n  React.useEffect(() => {\n    dataModelContext.model = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [namespace]);\n\n  React.useEffect(() => {\n    if (!_.isEmpty(resources)) {\n      updateTopologyDataModel(dataModelContext, resources, trafficData, monitoringAlerts)\n        .then((res) => {\n          dataModelContext.loadError = res.loadError;\n          if (res.loaded) {\n            dataModelContext.loaded = true;\n            dataModelContext.model = res.model;\n          }\n        })\n        .catch(() => {});\n    }\n  }, [resources, trafficData, dataModelContext, monitoringAlerts]);\n\n  return null;\n};\n\nexport default observer(TopologyDataRetriever);\n","import { Model } from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { TopologyResourcesObject, TrafficData } from '../topology-types';\nimport { baseDataModelGetter } from './data-transformer';\nimport { ExtensibleModel } from './ModelContext';\n\nexport const updateTopologyDataModel = (\n  dataModelContext: ExtensibleModel,\n  resources: WatchK8sResults<TopologyResourcesObject>,\n  trafficData: TrafficData,\n  monitoringAlerts: Alerts,\n): Promise<{ loaded: boolean; loadError: string; model: Model }> => {\n  const { extensionsLoaded, watchedResources } = dataModelContext;\n  if (!extensionsLoaded || !resources) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  const getLoadError = (key) => {\n    if (resources[key].loadError && !watchedResources[key].optional) {\n      return resources[key].loadError;\n    }\n    return '';\n  };\n\n  const isLoaded = (key) => {\n    return resources[key].loaded || (resources[key].loadError && watchedResources[key].optional);\n  };\n\n  const loadErrorKey = Object.keys(resources).find((key) => getLoadError(key));\n  if (loadErrorKey) {\n    return Promise.resolve({\n      loaded: false,\n      loadError: resources[loadErrorKey].loadError,\n      model: null,\n    });\n  }\n\n  if (!Object.keys(resources).every((key) => isLoaded(key))) {\n    return Promise.resolve({ loaded: false, loadError: '', model: null });\n  }\n\n  // Get Workload objects from extensions\n  const workloadResources = dataModelContext.getWorkloadResources(resources);\n\n  // Get model from each extension\n  const depicters = dataModelContext.dataModelDepicters;\n  return dataModelContext.getExtensionModels(resources).then((extensionsModel) => {\n    const fullModel = baseDataModelGetter(\n      extensionsModel,\n      dataModelContext.namespace,\n      resources,\n      workloadResources,\n      depicters,\n      trafficData,\n      monitoringAlerts,\n    );\n    dataModelContext.reconcileModel(fullModel, resources);\n    return Promise.resolve({ loaded: true, loadError: '', model: fullModel });\n  });\n};\n","import { EdgeModel, Model } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createOverviewItemForType } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP, TYPE_TRAFFIC_CONNECTOR, TYPE_WORKLOAD } from '../const';\nimport {\n  TopologyDataResources,\n  TrafficData,\n  KialiNode,\n  TopologyDataModelDepicted,\n} from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\nimport {\n  addToTopologyDataModel,\n  createTopologyNodeData,\n  getTopologyEdgeItems,\n  getTopologyGroupItems,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n} from './transform-utils';\n\nexport const getFilteredTrafficWorkload = (nodes: KialiNode[]): KialiNode[] =>\n  nodes.filter(({ data }) => data.nodeType === TYPE_WORKLOAD);\n\nexport const getTrafficConnectors = (\n  trafficData: TrafficData,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const filteredWorkload = getFilteredTrafficWorkload(trafficData.nodes);\n  return trafficData.edges.reduce((acc, { data }) => {\n    const { data: sourceTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.source,\n    );\n    const { data: targetTrafficNode } = filteredWorkload.find(\n      (wrkld) => wrkld.data.id === data.target,\n    );\n    const sourceResourceNode = resources.find((res) => {\n      return res.metadata.name === sourceTrafficNode[sourceTrafficNode.nodeType];\n    });\n    const targetResourceNode = resources.find(\n      (res) => res.metadata.name === targetTrafficNode[targetTrafficNode.nodeType],\n    );\n    return sourceResourceNode && targetResourceNode\n      ? [\n          ...acc,\n          {\n            id: `${sourceResourceNode.metadata.uid}_${targetResourceNode.metadata.uid}`,\n            type: TYPE_TRAFFIC_CONNECTOR,\n            source: sourceResourceNode.metadata.uid,\n            target: targetResourceNode.metadata.uid,\n            data: data.traffic,\n          },\n        ]\n      : acc;\n  }, []);\n};\n\nconst getBaseTopologyDataModel = (\n  resources: { [x: string]: Alerts } | TopologyDataResources,\n): Model => {\n  const baseDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources?.[key]?.data?.length) {\n      const typedDataModel: Model = {\n        nodes: [],\n        edges: [],\n      };\n\n      resources[key].data.forEach((resource) => {\n        const item = createOverviewItemForType(key, resource, resources);\n        if (item) {\n          const data = createTopologyNodeData(\n            resource,\n            item,\n            TYPE_WORKLOAD,\n            getImageForIconClass(`icon-openshift`),\n            undefined,\n            resources,\n          );\n          typedDataModel.nodes.push(\n            getTopologyNodeItem(resource, TYPE_WORKLOAD, data, WorkloadModelProps),\n          );\n          mergeGroup(getTopologyGroupItems(resource), typedDataModel.nodes);\n        }\n      });\n      addToTopologyDataModel(typedDataModel, baseDataModel);\n    }\n  });\n\n  return baseDataModel;\n};\n\nconst updateAppGroupChildren = (model: Model) => {\n  model.nodes.forEach((n) => {\n    if (n.type === TYPE_APPLICATION_GROUP) {\n      // Filter out any children removed by depicters\n      n.children = n.children.filter((id) => model.nodes.find((child) => child.id === id));\n      n.data.groupResources = n.children?.map((id) => model.nodes.find((c) => id === c.id)) ?? [];\n    }\n  });\n\n  // Remove any empty groups\n  model.nodes = model.nodes.filter(\n    (n) => n.type !== TYPE_APPLICATION_GROUP || n.children.length > 0,\n  );\n};\n\nconst createVisualConnectors = (model: Model, workloadResources: K8sResourceKind[]) => {\n  // Create all visual connectors\n  workloadResources.forEach((dc) => {\n    model.edges.push(...getTopologyEdgeItems(dc, workloadResources));\n  });\n};\n\nconst createTrafficConnectors = (\n  model: Model,\n  workloadResources: K8sResourceKind[],\n  trafficData?: TrafficData,\n) => {\n  // Create traffic connectors\n  if (trafficData) {\n    model.edges.push(...getTrafficConnectors(trafficData, workloadResources));\n  }\n};\n\nexport const baseDataModelGetter = (\n  model: Model,\n  namespace: string,\n  resources: TopologyDataResources,\n  workloadResources: K8sResourceKind[],\n  dataModelDepicters?: TopologyDataModelDepicted[],\n  trafficData?: TrafficData,\n  monitoringAlerts?: Alerts,\n): Model => {\n  const res = { ...resources, monitoringAlerts };\n  const baseModel = getBaseTopologyDataModel(res);\n  addToTopologyDataModel(baseModel, model, dataModelDepicters);\n\n  updateAppGroupChildren(model);\n  createVisualConnectors(model, workloadResources);\n  createTrafficConnectors(model, workloadResources, trafficData);\n\n  return model;\n};\n","import * as React from 'react';\nimport { Alert } from '@console/dynamic-plugin-sdk';\nimport { usePrometheusRulesPoll } from '@console/internal/components/graphs/prometheus-rules-hook';\nimport { getAlertsAndRules } from '@console/internal/components/monitoring/utils';\nimport { useDeepCompareMemoize } from '@console/shared';\n\nexport const useMonitoringAlerts = (\n  namespace: string,\n): {\n  data: Alert[];\n  loaded: boolean;\n  loadError: string;\n} => {\n  const [alertsResponse, alertsError, alertsLoading] = usePrometheusRulesPoll({ namespace });\n  const response = React.useMemo(() => {\n    let alertData;\n    if (!alertsLoading && !alertsError) {\n      alertData = getAlertsAndRules(alertsResponse?.data).alerts;\n\n      // Don't update due to time changes\n      alertData.forEach((alert) => {\n        delete alert.activeAt;\n        if (alert.rule) {\n          delete alert.rule.evaluationTime;\n          delete alert.rule.lastEvaluation;\n          alert.rule.alerts &&\n            alert.rule.alerts.forEach((ruleAlert) => {\n              delete ruleAlert.activeAt;\n            });\n        }\n      });\n    }\n    return { data: alertData, loaded: !alertsLoading, loadError: alertsError };\n  }, [alertsError, alertsLoading, alertsResponse]);\n\n  return useDeepCompareMemoize(response);\n};\n","import { useURLPoll } from '../utils/url-poll-hook';\nimport { getPrometheusURL, PrometheusEndpoint } from './helpers';\nimport { PrometheusRulesResponse } from '@console/dynamic-plugin-sdk';\n\nexport const usePrometheusRulesPoll = ({ delay, namespace }: PrometheusPollProps) => {\n  const url = getPrometheusURL({\n    endpoint: PrometheusEndpoint.RULES,\n    namespace,\n  });\n\n  return useURLPoll<PrometheusRulesResponse>(url, delay, namespace);\n};\n\ntype PrometheusPollProps = {\n  delay?: number;\n  namespace?: string;\n};\n","export * from './topology';\n","import * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { Resources, HealthChecksFormData } from '../import/import-types';\nimport { healthChecksDefaultValues } from './health-checks-probe-utils';\nimport {\n  HealthCheckProbeData,\n  RequestType,\n  HealthChecksProbeType,\n  HealthCheckFormProbeData,\n} from './health-checks-types';\n\nexport const constructProbeData = (\n  data: HealthCheckFormProbeData,\n  resourceType?: Resources,\n): HealthCheckProbeData => {\n  const probeData = {\n    ...(data.failureThreshold && { failureThreshold: _.toInteger(data.failureThreshold) }),\n    ...(data.successThreshold && { successThreshold: _.toInteger(data.successThreshold) }),\n    ...(data.requestType === RequestType.ContainerCommand && {\n      exec: data.exec,\n    }),\n    ...(data.requestType === RequestType.HTTPGET && {\n      httpGet: {\n        ...data[data.requestType],\n        scheme: data[data.requestType]?.scheme ? data[data.requestType].scheme[0] : 'HTTP',\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.httpGet.port),\n      },\n    }),\n    ...(data.requestType === RequestType.TCPSocket && {\n      tcpSocket: {\n        port: resourceType === Resources.KnativeService ? 0 : _.toInteger(data.tcpSocket.port),\n      },\n    }),\n    ...(data.initialDelaySeconds && {\n      initialDelaySeconds: _.toInteger(data.initialDelaySeconds),\n    }),\n    ...(data.periodSeconds && { periodSeconds: _.toInteger(data.periodSeconds) }),\n    ...(data.timeoutSeconds && { timeoutSeconds: _.toInteger(data.timeoutSeconds) }),\n  };\n  return probeData;\n};\n\nexport const getRequestType = (data: HealthCheckProbeData) => {\n  if (_.has(data, RequestType.HTTPGET)) return RequestType.HTTPGET;\n  if (_.has(data, RequestType.TCPSocket)) return RequestType.TCPSocket;\n  if (_.has(data, 'exec.command')) return RequestType.ContainerCommand;\n  return '';\n};\n\nexport const convertResourceDataToFormData = (\n  resourceData: HealthCheckProbeData,\n): HealthCheckFormProbeData => {\n  return {\n    ...resourceData,\n    requestType: getRequestType(resourceData),\n    failureThreshold: resourceData.failureThreshold?.toString() || '',\n    successThreshold: resourceData.successThreshold?.toString() || '',\n    initialDelaySeconds: resourceData.initialDelaySeconds?.toString() || '',\n    periodSeconds: resourceData.periodSeconds?.toString() || '',\n    timeoutSeconds: resourceData.timeoutSeconds?.toString() || '',\n    ...(resourceData.httpGet && {\n      httpGet: {\n        ...resourceData.httpGet,\n        port: resourceData.httpGet.port?.toString() || '',\n        scheme: resourceData.httpGet.scheme === 'HTTP' ? undefined : ['HTTPS'],\n      },\n    }),\n    ...(resourceData.tcpSocket && {\n      tcpSocket: { port: resourceData.tcpSocket.port?.toString() || '' },\n    }),\n  };\n};\n\nexport const getHealthChecksData = (\n  resource: K8sResourceKind,\n  containerIndex: number = 0,\n): HealthChecksFormData => {\n  const containers = resource?.spec?.template?.spec?.containers ?? [];\n  const readinessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.ReadinessProbe] ?? {};\n  const livenessProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.LivenessProbe] ?? {};\n  const startupProbe: HealthCheckProbeData =\n    containers?.[containerIndex]?.[HealthChecksProbeType.StartupProbe] ?? {};\n\n  const healthChecks = {\n    readinessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(readinessProbe),\n      data: !_.isEmpty(readinessProbe)\n        ? {\n            ...convertResourceDataToFormData(readinessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    livenessProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(livenessProbe),\n      data: !_.isEmpty(livenessProbe)\n        ? {\n            ...convertResourceDataToFormData(livenessProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n    startupProbe: {\n      showForm: false,\n      modified: false,\n      enabled: !_.isEmpty(startupProbe),\n      data: !_.isEmpty(startupProbe)\n        ? {\n            ...convertResourceDataToFormData(startupProbe),\n          }\n        : healthChecksDefaultValues.data,\n    },\n  };\n  return healthChecks;\n};\n\nexport const getProbesData = (healthChecks: HealthChecksFormData, resourceType?: Resources) => {\n  const { readinessProbe, livenessProbe, startupProbe } = healthChecks;\n  return {\n    ...(readinessProbe.enabled\n      ? { readinessProbe: constructProbeData(readinessProbe.data, resourceType) }\n      : {}),\n    ...(livenessProbe.enabled\n      ? { livenessProbe: constructProbeData(livenessProbe.data, resourceType) }\n      : {}),\n    ...(resourceType !== Resources.KnativeService && startupProbe?.enabled\n      ? { startupProbe: constructProbeData(startupProbe.data) }\n      : {}),\n  };\n};\n","import { NameValuePair } from '@console/shared';\n\nexport enum HealthChecksProbeType {\n  ReadinessProbe = 'readinessProbe',\n  LivenessProbe = 'livenessProbe',\n  StartupProbe = 'startupProbe',\n}\n\nexport enum RequestType {\n  HTTPGET = 'httpGet',\n  ContainerCommand = 'command',\n  TCPSocket = 'tcpSocket',\n}\nexport interface HealthCheckProbeData {\n  failureThreshold: number;\n  initialDelaySeconds: number;\n  periodSeconds: number;\n  timeoutSeconds: number;\n  successThreshold: number;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string;\n    path: string;\n    port: number;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: number;\n  };\n}\n\nexport interface HealthCheckFormProbeData {\n  failureThreshold: string;\n  initialDelaySeconds: string;\n  periodSeconds: string;\n  timeoutSeconds: string;\n  successThreshold: string;\n  requestType?: string;\n  exec?: { command?: string[] };\n  httpGet?: {\n    scheme: string[];\n    path: string;\n    port: string;\n    httpHeaders: NameValuePair[];\n  };\n  tcpSocket?: {\n    port: string;\n  };\n}\nexport interface HealthCheckFormProbe {\n  showForm?: boolean;\n  enabled?: boolean;\n  modified?: boolean;\n  data: HealthCheckFormProbeData;\n}\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect, Dispatch } from 'react-redux';\nimport { setActiveApplication } from '@console/internal/actions/ui';\nimport { getActiveNamespace, getActiveApplication } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport {\n  ALL_NAMESPACES_KEY,\n  ALL_APPLICATIONS_KEY,\n  UNASSIGNED_APPLICATIONS_KEY,\n  APPLICATION_USERSETTINGS_PREFIX,\n  APPLICATION_LOCAL_STORAGE_KEY,\n} from '@console/shared';\nimport ApplicationDropdown from './ApplicationDropdown';\n\ninterface NamespaceBarApplicationSelectorProps {\n  disabled?: boolean;\n}\n\ninterface StateProps {\n  namespace: string;\n  application: string;\n}\n\ninterface DispatchProps {\n  onChange: (name: string) => void;\n}\n\ntype Props = NamespaceBarApplicationSelectorProps & StateProps & DispatchProps;\n\nconst NamespaceBarApplicationSelector: React.FC<Props> = ({\n  namespace,\n  application,\n  onChange,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  const allApplicationsTitle = t('topology~All applications');\n  const noApplicationsTitle = t('topology~No application group');\n  const dropdownTitle: string =\n    application === ALL_APPLICATIONS_KEY\n      ? allApplicationsTitle\n      : application === UNASSIGNED_APPLICATIONS_KEY\n      ? noApplicationsTitle\n      : application;\n  const [title, setTitle] = React.useState<string>(dropdownTitle);\n  React.useEffect(() => {\n    if (!disabled) {\n      setTitle(dropdownTitle);\n    }\n  }, [disabled, dropdownTitle]);\n  if (namespace === ALL_NAMESPACES_KEY) return null;\n\n  const onApplicationChange = (newApplication: string, key: string) => {\n    key === ALL_APPLICATIONS_KEY ? onChange(key) : onChange(newApplication);\n  };\n\n  return (\n    <ApplicationDropdown\n      className=\"co-namespace-selector\"\n      buttonClassName=\"pf-m-plain\"\n      namespace={namespace}\n      title={title && <span className=\"btn-link__title\">{title}</span>}\n      titlePrefix={t('topology~Application')}\n      allSelectorItem={{\n        allSelectorKey: ALL_APPLICATIONS_KEY,\n        allSelectorTitle: allApplicationsTitle,\n      }}\n      noneSelectorItem={{\n        noneSelectorKey: UNASSIGNED_APPLICATIONS_KEY,\n        noneSelectorTitle: noApplicationsTitle,\n      }}\n      selectedKey={application || ALL_APPLICATIONS_KEY}\n      onChange={onApplicationChange}\n      userSettingsPrefix={APPLICATION_USERSETTINGS_PREFIX}\n      storageKey={APPLICATION_LOCAL_STORAGE_KEY}\n      disabled={disabled}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n  application: getActiveApplication(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  onChange: (app: string) => {\n    dispatch(setActiveApplication(app));\n  },\n});\n\nexport default connect<StateProps, DispatchProps, NamespaceBarApplicationSelectorProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NamespaceBarApplicationSelector);\n","import { K8sModel } from '@console/dynamic-plugin-sdk/src/api/common-types';\nimport { API_GROUP, API_VERSION_LATEST } from './const';\n\nexport const ClusterBuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModelV1Alpha1: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModelV1Alpha1: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModelV1Alpha1: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: 'v1alpha1',\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n\nexport const ClusterBuildStrategyModel: K8sModel = {\n  id: 'clusterbuildstrategy',\n  plural: 'clusterbuildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'ClusterBuildStrategy',\n  namespaced: false,\n  crd: true,\n\n  label: 'ClusterBuildStrategy',\n  // t('shipwright-plugin~ClusterBuildStrategy')\n  labelKey: 'shipwright-plugin~ClusterBuildStrategy',\n  labelPlural: 'ClusterBuildStrategies',\n  // t('shipwright-plugin~ClusterBuildStrategies')\n  labelPluralKey: 'shipwright-plugin~ClusterBuildStrategies',\n  abbr: 'CBS',\n};\n\nexport const BuildStrategyModel: K8sModel = {\n  id: 'buildstrategy',\n  plural: 'buildstrategies',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildStrategy',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildStrategy',\n  // t('shipwright-plugin~BuildStrategy')\n  labelKey: 'shipwright-plugin~BuildStrategy',\n  labelPlural: 'BuildStrategies',\n  // t('shipwright-plugin~BuildStrategies')\n  labelPluralKey: 'shipwright-plugin~BuildStrategies',\n  abbr: 'BS',\n};\n\nexport const BuildModel: K8sModel = {\n  id: 'build',\n  plural: 'builds',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'Build',\n  namespaced: true,\n  crd: true,\n\n  label: 'Build',\n  // t('shipwright-plugin~Build')\n  labelKey: 'shipwright-plugin~Build',\n  labelPlural: 'Builds',\n  // t('shipwright-plugin~Builds')\n  labelPluralKey: 'shipwright-plugin~Builds',\n  abbr: 'B',\n};\n\nexport const BuildRunModel: K8sModel = {\n  id: 'buildrun',\n  plural: 'buildruns',\n  apiGroup: API_GROUP,\n  apiVersion: API_VERSION_LATEST,\n  kind: 'BuildRun',\n  namespaced: true,\n  crd: true,\n\n  label: 'BuildRun',\n  // t('shipwright-plugin~BuildRun')\n  labelKey: 'shipwright-plugin~BuildRun',\n  labelPlural: 'BuildRuns',\n  // t('shipwright-plugin~BuildRuns')\n  labelPluralKey: 'shipwright-plugin~BuildRuns',\n  abbr: 'BR',\n};\n","export const API_GROUP = 'shipwright.io';\nexport const API_VERSION_LATEST = 'v1beta1';\n\nexport const BUILDRUN_TO_BUILD_REFERENCE_LABEL = 'build.shipwright.io/name';\nexport const BUILDRUN_TO_RESOURCE_MAP_LABEL = 'app.kubernetes.io/instance';\n\nexport const BUILD_OUTPUT_IMAGESTREAM_URL = 'image-registry.openshift-image-registry.svc:5000';\nexport const BUILD_OUTPUT_QUAY_URL = 'quay.io';\n","import { FirehoseResource } from '../../../utils';\n\nexport const uniqueResource = (\n  resource: FirehoseResource,\n  prefix: string | number,\n): FirehoseResource => ({\n  ...resource,\n  prop: `${prefix}-${resource.prop}`,\n});\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { Button, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useActivePerspective, LIMIT_STATE, Humanize } from '@console/dynamic-plugin-sdk';\nimport { getPrometheusQueryResponse } from '@console/internal/actions/dashboards';\nimport {\n  withDashboardResources,\n  DashboardItemProps,\n} from '@console/internal/components/dashboard/with-dashboard-resources';\nimport { DataPoint } from '@console/internal/components/graphs';\nimport { getInstantVectorStats } from '@console/internal/components/graphs/utils';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { Dropdown } from '@console/internal/components/utils/dropdown';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, referenceForModel, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getName, getNamespace, useFlag } from '../../..';\nimport { FLAGS } from '../../../constants';\nimport { RedExclamationCircleIcon, YellowExclamationTriangleIcon } from '../../status';\nimport Status from '../status-card/StatusPopup';\n\nimport './top-consumer-popover.scss';\n\nconst ConsumerPopover: React.FC<ConsumerPopoverProps> = React.memo(\n  ({\n    current,\n    title,\n    humanize,\n    consumers,\n    namespace,\n    position = PopoverPosition.top,\n    description,\n    children,\n  }) => {\n    const { t } = useTranslation();\n    const [isOpen, setOpen] = React.useState(false);\n    const onShow = React.useCallback(() => setOpen(true), []);\n    const onHide = React.useCallback(() => setOpen(false), []);\n    if (!current) {\n      return null;\n    }\n    return (\n      <Popover\n        position={position}\n        headerContent={t('console-shared~{{title}} breakdown', { title })}\n        bodyContent={\n          <PopoverBody\n            humanize={humanize}\n            consumers={consumers}\n            namespace={namespace}\n            isOpen={isOpen}\n            description={description}\n          >\n            {children}\n          </PopoverBody>\n        }\n        enableFlip\n        onShow={onShow}\n        onHide={onHide}\n        maxWidth=\"21rem\"\n      >\n        <Button variant=\"link\" isInline>\n          {current}\n        </Button>\n      </Popover>\n    );\n  },\n);\n\nexport default ConsumerPopover;\n\nconst getLimitIcon = (state: LIMIT_STATE): React.ReactNode => {\n  switch (state) {\n    case LIMIT_STATE.ERROR:\n      return <RedExclamationCircleIcon />;\n    case LIMIT_STATE.WARN:\n      return <YellowExclamationTriangleIcon />;\n    default:\n      return null;\n  }\n};\n\nconst getResourceToWatch = (model: K8sKind, namespace: string, fieldSelector: string) => ({\n  isList: true,\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  fieldSelector,\n  namespace,\n});\n\nexport const LimitsBody: React.FC<LimitsBodyProps> = ({\n  limitState,\n  requestedState,\n  total,\n  limit,\n  current,\n  available,\n  requested,\n}) => {\n  const { t } = useTranslation();\n  return (\n    ((!!limitState && limitState !== LIMIT_STATE.OK) ||\n      (!!requestedState && requestedState !== LIMIT_STATE.OK)) && (\n      <ul className=\"co-utilization-card-popover__consumer-list\">\n        <Status value={total}>{t('console-shared~Total capacity')}</Status>\n        <Status value={limit} icon={getLimitIcon(limitState)}>\n          {t('console-shared~Total limit')}\n        </Status>\n        <Status value={current}>{t('console-shared~Current utilization')}</Status>\n        <Status value={available}>{t('console-shared~Current available capacity')}</Status>\n        <Status value={requested} icon={getLimitIcon(requestedState)}>\n          {t('console-shared~Total requested')}\n        </Status>\n      </ul>\n    )\n  );\n};\n\nexport const PopoverBody = withDashboardResources<DashboardItemProps & PopoverBodyProps>(\n  React.memo(\n    ({\n      humanize,\n      consumers,\n      namespace,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      prometheusResults,\n      isOpen,\n      description,\n      children,\n    }) => {\n      const { t } = useTranslation();\n      const [currentConsumer, setCurrentConsumer] = React.useState(consumers[0]);\n      const activePerspective = useActivePerspective()[0];\n      const canAccessMonitoring =\n        useFlag(FLAGS.CAN_GET_NS) && !!window.SERVER_FLAGS.prometheusBaseURL;\n      const { query, model, metric, fieldSelector } = currentConsumer;\n      const k8sResource = React.useMemo(\n        () => (isOpen ? getResourceToWatch(model, namespace, fieldSelector) : null),\n        [fieldSelector, isOpen, model, namespace],\n      );\n      const [consumerData, consumerLoaded, consumersLoadError] = useK8sWatchResource<\n        K8sResourceCommon[]\n      >(k8sResource);\n      React.useEffect(() => {\n        if (!isOpen) {\n          return () => {};\n        }\n        watchPrometheus(query, namespace);\n        return () => {\n          stopWatchPrometheusQuery(query);\n        };\n      }, [query, stopWatchPrometheusQuery, watchPrometheus, namespace, isOpen]);\n\n      const top5Data = [];\n\n      const [data, error] = getPrometheusQueryResponse(prometheusResults, query);\n      const bodyData = getInstantVectorStats(data, metric);\n\n      if (k8sResource && consumerLoaded && !consumersLoadError) {\n        for (const d of bodyData) {\n          const consumerExists = consumerData.some(\n            (consumer) =>\n              getName(consumer) === d.metric[metric] &&\n              (model.namespaced ? getNamespace(consumer) === d.metric.namespace : true),\n          );\n          if (consumerExists) {\n            top5Data.push({ ...d, y: humanize(d.y).string });\n          }\n          if (top5Data.length === 5) {\n            break;\n          }\n        }\n      }\n\n      const monitoringParams = React.useMemo(() => {\n        const params = new URLSearchParams();\n        params.set('query0', currentConsumer.query);\n        return params;\n      }, [currentConsumer.query]);\n\n      const dropdownItems = React.useMemo(\n        () =>\n          consumers.reduce((items, curr) => {\n            items[referenceForModel(curr.model)] = t('console-shared~By {{label}}', {\n              label: curr.model.labelKey ? t(curr.model.labelKey) : curr.model.label,\n            });\n            return items;\n          }, {}),\n        [consumers, t],\n      );\n\n      const onDropdownChange = React.useCallback(\n        (key) => setCurrentConsumer(consumers.find((c) => referenceForModel(c.model) === key)),\n        [consumers],\n      );\n\n      const monitoringURL =\n        canAccessMonitoring && activePerspective === 'admin'\n          ? `/monitoring/query-browser?${monitoringParams.toString()}`\n          : `/dev-monitoring/ns/${namespace}/metrics?${monitoringParams.toString()}`;\n\n      let body: React.ReactNode;\n      if (error || consumersLoadError) {\n        body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n      } else if (!consumerLoaded || !data) {\n        body = (\n          <ul className=\"co-utilization-card-popover__consumer-list\">\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n            <li className=\"skeleton-consumer\" />\n          </ul>\n        );\n      } else {\n        body = (\n          <>\n            <ul\n              className=\"co-utilization-card-popover__consumer-list\"\n              aria-label={t('console-shared~Top consumer by {{label}}', { label: model.label })}\n            >\n              {top5Data &&\n                top5Data.map((item) => {\n                  const title = String(item.x);\n                  return (\n                    <ListItem key={title} value={item.y}>\n                      <Link\n                        className=\"co-utilization-card-popover__consumer-name\"\n                        to={resourcePathFromModel(model, title, item.metric.namespace)}\n                      >\n                        {title}\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n            </ul>\n            <Link to={monitoringURL}>{t('console-shared~View more')}</Link>\n          </>\n        );\n      }\n\n      return (\n        <div className=\"co-utilization-card-popover__body\">\n          {description && (\n            <div className=\"co-utilization-card-popover__description\">{description}</div>\n          )}\n          {children}\n          <div className=\"co-utilization-card-popover__title\">\n            {consumers.length === 1\n              ? t('console-shared~Top {{label}} consumers', {\n                  label: currentConsumer.model.label.toLowerCase(),\n                })\n              : t('console-shared~Top consumers')}\n          </div>\n          {consumers.length > 1 && (\n            <Dropdown\n              className=\"co-utilization-card-popover__dropdown\"\n              id=\"consumer-select\"\n              name=\"selectConsumerType\"\n              aria-label={t('console-shared~Select consumer type')}\n              items={dropdownItems}\n              onChange={onDropdownChange}\n              selectedKey={referenceForModel(model)}\n            />\n          )}\n          {body}\n        </div>\n      );\n    },\n  ),\n);\n\nconst ListItem: React.FC<ListItemProps> = ({ children, value }) => (\n  <li className=\"co-utilization-card-popover__consumer-item\">\n    {children}\n    <div className=\"co-utilization-card-popover__consumer-value\">{value}</div>\n  </li>\n);\n\ntype ListItemProps = {\n  value: React.ReactText;\n};\n\ntype LimitsBodyProps = {\n  limitState?: LIMIT_STATE;\n  requestedState?: LIMIT_STATE;\n  limit?: string;\n  requested?: string;\n  available?: string;\n  total?: string;\n  current: string;\n};\n\ntype PopoverProps = {\n  humanize: Humanize;\n  consumers: { model: K8sKind; query: string; metric: string; fieldSelector?: string }[];\n  namespace?: string;\n  description?: string;\n};\n\ntype PopoverBodyProps = PopoverProps & {\n  topConsumers?: DataPoint[][];\n  error?: boolean;\n  isOpen: boolean;\n};\n\nexport type ConsumerPopoverProps = PopoverProps & {\n  position?: PopoverPosition;\n  title: string;\n  current: string;\n};\n","import * as React from 'react';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@patternfly/react-core';\nimport {\n  DashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem,\n  SubsystemHealth,\n  OperatorRowProps,\n  LazyLoader,\n} from '@console/plugin-sdk';\nimport {\n  ResolvedExtension,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthResourceSubsystem as DynamicDashboardsOverviewHealthResourceSubsystem,\n  WatchK8sResources,\n  WatchK8sResults,\n  ResourcesObject,\n} from '@console/dynamic-plugin-sdk';\nimport HealthItem from '@console/shared/src/components/dashboard/status-card/HealthItem';\nimport { OperatorsSection } from '@console/shared/src/components/dashboard/status-card/OperatorStatusBody';\nimport {\n  getOperatorsHealthState,\n  getMostImportantStatuses,\n} from '@console/shared/src/components/dashboard/status-card/state-utils';\nimport { HealthState } from '@console/shared/src/components/dashboard/status-card/states';\nimport { K8sKind } from '../../../../module/k8s';\nimport { FirehoseResourcesResult, AsyncComponent, resourcePath } from '../../../utils';\nimport { useK8sWatchResources } from '../../../utils/k8s-watch-hook';\nimport { withDashboardResources, DashboardItemProps } from '../../with-dashboard-resources';\nimport { uniqueResource } from './utils';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { ClusterDashboardContext } from './context';\n\nconst OperatorRow: React.FC<\n  OperatorRowProps & {\n    LoadingComponent: () => JSX.Element;\n    Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n    key: string;\n    isResolved: boolean;\n  }\n> = ({ operatorStatus, isResolved, key, Component, LoadingComponent }) => {\n  const ResolvedComponent = Component as React.ComponentType<OperatorRowProps>;\n  return isResolved ? (\n    <ResolvedComponent key={key} operatorStatus={operatorStatus} />\n  ) : (\n    <AsyncComponent\n      key={operatorStatus.operators[0].metadata.uid}\n      operatorStatus={operatorStatus}\n      loader={Component}\n      LoadingComponent={LoadingComponent}\n    />\n  );\n};\n\nexport const OperatorsPopup: React.FC<OperatorsPopupProps> = ({\n  resources,\n  operatorExtensions,\n  dynamicOperatorSubsystems,\n}) => {\n  const { t } = useTranslation();\n  const sections = [\n    ...operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved={false}\n          />\n        </StackItem>\n      );\n    }),\n    ...dynamicOperatorSubsystems.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop];\n        return acc;\n      }, {});\n      return (\n        <StackItem key={o.title}>\n          <OperatorsSection\n            resources={operatorResources}\n            getOperatorsWithStatuses={o.getOperatorsWithStatuses}\n            title={o.title}\n            linkTo={o.viewAllLink || resourcePath(o.resources[0].kind)}\n            Row={OperatorRow}\n            Component={o.operatorRowLoader}\n            isResolved\n          />\n        </StackItem>\n      );\n    }),\n  ].reverse();\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        {t(\n          'public~Operators create, configure, and manage applications by extending the Kubernetes API.',\n        )}\n      </StackItem>\n      {sections}\n    </Stack>\n  );\n};\n\nexport const OperatorHealthItem = withDashboardResources<OperatorHealthItemProps>(\n  ({\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    operatorExtensions,\n    dynamicOperatorSubsystems,\n  }) => {\n    const { t } = useTranslation();\n    React.useEffect(() => {\n      operatorExtensions.forEach((o, index) =>\n        o.resources.forEach((r) => watchK8sResource(uniqueResource(r, index))),\n      );\n      return () => {\n        operatorExtensions.forEach((o, index) =>\n          o.resources.forEach((r) => stopWatchK8sResource(uniqueResource(r, index))),\n        );\n      };\n    }, [watchK8sResource, stopWatchK8sResource, operatorExtensions]);\n\n    const healthStatuses = operatorExtensions.map((o, index) => {\n      const operatorResources = o.resources.reduce((acc, r) => {\n        acc[r.prop] = resources[uniqueResource(r, index).prop] || {};\n        return acc;\n      }, {});\n      if (\n        Object.keys(operatorResources).some((resource) => operatorResources[resource].loadError)\n      ) {\n        return { health: HealthState.NOT_AVAILABLE };\n      }\n      if (Object.keys(operatorResources).some((resource) => !operatorResources[resource].loaded)) {\n        return { health: HealthState.LOADING };\n      }\n      const operatorStatuses = o.getOperatorsWithStatuses(operatorResources);\n      if (!operatorStatuses.length) {\n        return { health: HealthState.OK };\n      }\n      const importantStatuses = getMostImportantStatuses(operatorStatuses);\n      return {\n        health: importantStatuses[0].status.health,\n        count: importantStatuses.length,\n      };\n    });\n\n    const operatorsHealth = getOperatorsHealthState(healthStatuses, t);\n\n    return (\n      <HealthItem\n        title={t('public~Operators')}\n        state={operatorsHealth.health}\n        details={operatorsHealth.detailMessage}\n        popupTitle={t('public~Operator status')}\n      >\n        <OperatorsPopup\n          resources={resources}\n          operatorExtensions={operatorExtensions}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      </HealthItem>\n    );\n  },\n);\n\nexport const URLHealthItem = withDashboardResources<URLHealthItemProps>(\n  ({\n    watchURL,\n    stopWatchURL,\n    urlResults,\n    resources,\n    watchK8sResource,\n    stopWatchK8sResource,\n    subsystem,\n    models,\n  }) => {\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      watchURL(\n        subsystem.url,\n        (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          ? (subsystem as DashboardsOverviewHealthURLSubsystem<any>['properties']).fetch\n          : undefined,\n      );\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        stopWatchURL(subsystem.url);\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [watchURL, stopWatchURL, watchK8sResource, stopWatchK8sResource, subsystem, modelExists]);\n\n    const healthResult = urlResults.getIn([subsystem.url, 'data']);\n    const healthResultError = urlResults.getIn([subsystem.url, 'loadError']);\n\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(healthResult, healthResultError, k8sResult);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  healthResult={healthResult}\n                  healthResultError={healthResultError}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const PrometheusHealthItem = withDashboardResources<PrometheusHealthItemProps>(\n  ({\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    subsystem,\n    models,\n  }) => {\n    const { t } = useTranslation();\n    const { infrastructure } = React.useContext(ClusterDashboardContext);\n\n    const modelExists =\n      subsystem.additionalResource && !!models.get(subsystem.additionalResource.kind);\n    React.useEffect(() => {\n      subsystem.queries.forEach((q) => watchPrometheus(q));\n      if (modelExists) {\n        watchK8sResource(subsystem.additionalResource);\n      }\n      return () => {\n        subsystem.queries.forEach((q) => stopWatchPrometheusQuery(q));\n        if (modelExists) {\n          stopWatchK8sResource(subsystem.additionalResource);\n        }\n      };\n    }, [\n      watchK8sResource,\n      stopWatchK8sResource,\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      subsystem,\n      modelExists,\n    ]);\n\n    const queryResults = React.useMemo(\n      () =>\n        subsystem.queries.map((q) => {\n          const [response, error] = getPrometheusQueryResponse(prometheusResults, q);\n          return {\n            response,\n            error,\n          };\n        }),\n      [prometheusResults, subsystem.queries],\n    );\n    const k8sResult = subsystem.additionalResource\n      ? resources[subsystem.additionalResource.prop]\n      : null;\n    const healthState = subsystem.healthHandler(queryResults, t, k8sResult, infrastructure);\n\n    return (\n      <HealthItem\n        title={subsystem.title}\n        state={healthState.state}\n        details={healthState.message}\n        popupTitle={subsystem.popupTitle}\n        popupClassname={subsystem.popupClassname}\n        popupKeepOnOutsideClick={subsystem.popupKeepOnOutsideClick}\n        popupBodyContent={\n          subsystem.popupComponent\n            ? (hide) => (\n                <AsyncComponent\n                  loader={subsystem.popupComponent}\n                  responses={queryResults}\n                  k8sResult={k8sResult}\n                  hide={hide}\n                />\n              )\n            : undefined\n        }\n      />\n    );\n  },\n);\n\nexport const ResourceHealthItem: React.FC<ResourceHealthItemProps> = ({ subsystem, namespace }) => {\n  const { t } = useTranslation();\n\n  const { title, resources, healthHandler, popupComponent, popupTitle } = subsystem;\n\n  const resourcesWithNamespace: WatchK8sResources<ResourcesObject> = React.useMemo(() => {\n    return {\n      ...resources,\n      ...(resources.imageManifestVuln && {\n        imageManifestVuln: { ...resources.imageManifestVuln, namespace },\n      }),\n    };\n  }, [resources, namespace]);\n\n  const resourcesResult: WatchK8sResults<ResourcesObject> = useK8sWatchResources(\n    resourcesWithNamespace,\n  );\n  const healthState: SubsystemHealth = healthHandler(resourcesResult, t);\n\n  return (\n    <HealthItem\n      title={title}\n      state={healthState.state}\n      details={healthState.message}\n      popupTitle={popupTitle}\n    >\n      {popupComponent && resourcesResult && (\n        <AsyncComponent loader={popupComponent} {...resourcesResult} namespace={namespace} />\n      )}\n    </HealthItem>\n  );\n};\n\ntype OperatorHealthItemProps = DashboardItemProps & {\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n\ntype URLHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthURLSubsystem<any>['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem<any>>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype PrometheusHealthItemProps = DashboardItemProps & {\n  subsystem:\n    | DashboardsOverviewHealthPrometheusSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>['properties'];\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype ResourceHealthItemProps = {\n  subsystem:\n    | DashboardsOverviewHealthResourceSubsystem['properties']\n    | ResolvedExtension<DynamicDashboardsOverviewHealthResourceSubsystem>['properties'];\n  namespace?: string;\n};\n\ntype OperatorsPopupProps = {\n  resources: FirehoseResourcesResult;\n  operatorExtensions: DashboardsOverviewHealthOperator['properties'][];\n  dynamicOperatorSubsystems: ResolvedExtension<\n    DynamicDashboardsOverviewHealthOperator\n  >['properties'][];\n};\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum ProjectQueries {\n  CPU_USAGE = 'CPU_USAGE',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  MEMORY_USAGE = 'MEMORY_USAGE',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  POD_COUNT = 'POD_COUNT',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_FILESYSTEM = 'PODS_BY_FILESYSTEM',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  FILESYSTEM_USAGE = 'FILESYSTEM_USAGE',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n}\n\nconst queries = {\n  [ProjectQueries.CPU_USAGE]: _.template(\n    `namespace:container_cpu_usage:sum{namespace='<%= project %>'}`,\n  ),\n  [ProjectQueries.CPU_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"cpu\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_USAGE]: _.template(\n    `sum(container_memory_working_set_bytes{namespace='<%= project %>',container=\"\",pod!=\"\"}) BY (namespace)`,\n  ),\n  [ProjectQueries.MEMORY_REQUESTS]: _.template(\n    `sum(kube_pod_resource_request{resource=\"memory\", namespace=\"<%= project %>\"}) by (namespace)`,\n  ),\n  [ProjectQueries.POD_COUNT]: _.template(\n    `count(kube_running_pod_ready{namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.FILESYSTEM_USAGE]: _.template(\n    `sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_IN_UTILIZATION]: _.template(\n    `sum(rate(container_network_receive_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n  [ProjectQueries.NETWORK_OUT_UTILIZATION]: _.template(\n    `sum(rate(container_network_transmit_bytes_total{container=\"POD\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (namespace)`,\n  ),\n};\n\nconst top25Queries = {\n  [ProjectQueries.PODS_BY_CPU]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_MEMORY]: _.template(\n    `topk(25, sort_desc(sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\",namespace='<%= project %>'}[5m])) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: _.template(\n    `topk(25, sort_desc(sum(pod:container_fs_usage_bytes:sum{container=\"\",pod!=\"\",namespace='<%= project %>'}) BY (pod, namespace)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: _.template(\n    `topk(25, sort_desc(sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\", namespace = '<%= project %>'}[5m])) BY (namespace, pod)))`,\n  ),\n};\n\nexport const getMultilineQueries = (\n  project: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [ProjectQueries.NETWORK_UTILIZATION]: [\n    {\n      query: queries[ProjectQueries.NETWORK_IN_UTILIZATION]({ project }),\n      desc: 'in',\n    },\n    {\n      query: queries[ProjectQueries.NETWORK_OUT_UTILIZATION]({ project }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getUtilizationQueries = (project: string) => ({\n  [ProjectQueries.CPU_USAGE]: queries[ProjectQueries.CPU_USAGE]({ project }),\n  [ProjectQueries.CPU_REQUESTS]: queries[ProjectQueries.CPU_REQUESTS]({ project }),\n  [ProjectQueries.MEMORY_USAGE]: queries[ProjectQueries.MEMORY_USAGE]({ project }),\n  [ProjectQueries.MEMORY_REQUESTS]: queries[ProjectQueries.MEMORY_REQUESTS]({ project }),\n  [ProjectQueries.POD_COUNT]: queries[ProjectQueries.POD_COUNT]({ project }),\n  [ProjectQueries.FILESYSTEM_USAGE]: queries[ProjectQueries.FILESYSTEM_USAGE]({\n    project,\n  }),\n});\n\nexport const getTopConsumerQueries = (project: string) => ({\n  [ProjectQueries.PODS_BY_CPU]: top25Queries[ProjectQueries.PODS_BY_CPU]({ project }),\n  [ProjectQueries.PODS_BY_MEMORY]: top25Queries[ProjectQueries.PODS_BY_MEMORY]({ project }),\n  [ProjectQueries.PODS_BY_FILESYSTEM]: top25Queries[ProjectQueries.PODS_BY_FILESYSTEM]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_IN]: top25Queries[ProjectQueries.PODS_BY_NETWORK_IN]({ project }),\n  [ProjectQueries.PODS_BY_NETWORK_OUT]: top25Queries[ProjectQueries.PODS_BY_NETWORK_OUT]({\n    project,\n  }),\n});\n","import * as _ from 'lodash';\nimport { QueryWithDescription } from '../components/dashboard/utilization-card/UtilizationItem';\n\nexport enum OverviewQuery {\n  MEMORY_TOTAL = 'MEMORY_TOTAL',\n  MEMORY_UTILIZATION = 'MEMORY_UTILIZATION',\n  MEMORY_REQUESTS = 'MEMORY_REQUESTS',\n  NETWORK_UTILIZATION = 'NETWORK_UTILIZATION',\n  NETWORK_IN_UTILIZATION = 'NETWORK_IN_UTILIZATION',\n  NETWORK_OUT_UTILIZATION = 'NETWORK_OUT_UTILIZATION',\n  CPU_UTILIZATION = 'CPU_UTILIZATION',\n  CPU_TOTAL = 'CPU_TOTAL',\n  CPU_REQUESTS = 'CPU_REQUESTS',\n  STORAGE_UTILIZATION = 'STORAGE_UTILIZATION',\n  STORAGE_TOTAL = 'STORAGE_TOTAL',\n  PODS_BY_CPU = 'PODS_BY_CPU',\n  PODS_BY_MEMORY = 'PODS_BY_MEMORY',\n  PODS_BY_STORAGE = 'PODS_BY_STORAGE',\n  PODS_BY_NETWORK_IN = 'PODS_BY_NETWORK_IN',\n  PODS_BY_NETWORK_OUT = 'PODS_BY_NETWORK_OUT',\n  NODES_BY_CPU = 'NODES_BY_CPU',\n  NODES_BY_MEMORY = 'NODES_BY_MEMORY',\n  NODES_BY_STORAGE = 'NODES_BY_STORAGE',\n  NODES_BY_NETWORK_IN = 'NODES_BY_NETWORK_IN',\n  NODES_BY_NETWORK_OUT = 'NODES_BY_NETWORK_OUT',\n  NODES_BY_PODS = 'NODES_BY_PODS',\n  PROJECTS_BY_CPU = 'PROJECTS_BY_CPU',\n  PROJECTS_BY_MEMORY = 'PROJECTS_BY_MEMORY',\n  PROJECTS_BY_STORAGE = 'PROJECTS_BY_STORAGE',\n  PROJECTS_BY_NETWORK_IN = 'PROJECTS_BY_NETWORK_IN',\n  PROJECTS_BY_NETWORK_OUT = 'PROJECTS_BY_NETWORK_OUT',\n  PROJECTS_BY_PODS = 'PROJECTS_BY_PODS',\n  POD_UTILIZATION = 'POD_UTILIZATION',\n}\n\nconst top25Queries = {\n  [OverviewQuery.PODS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (pod, namespace)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n          *\n          on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n        )\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        avg_over_time(instance:node_cpu:rate:sum[5m])\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        (\n          sum by (instance) (max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"}))\n          -\n          sum by (instance) (max by (device, instance) (node_filesystem_avail_bytes{device=~\"/.*\"}))\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(avg_over_time(kubelet_running_pods[5m])) BY (node)\n        *\n        on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_receive_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum(instance:node_network_transmit_bytes_excluding_lo:rate1m) BY (instance)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      ))\n    `,\n  ),\n\n  [OverviewQuery.PROJECTS_BY_CPU]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_cpu_usage:sum{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(container_memory_working_set_bytes{container=\"\",pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(avg_over_time(pod:container_fs_usage_bytes:sum{container=\"\", pod!=\"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_PODS]: _.template(\n    `\n      topk(25, sort_desc(\n        count by (namespace) (\n            topk without(uid) (1, kube_running_pod_ready)\n            *\n            ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n          *\n          on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})))\n        ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_receive_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: _.template(\n    `\n      topk(25, sort_desc(\n        sum by (namespace) (\n          (\n            sum(rate(container_network_transmit_bytes_total{ container=\"POD\", pod!= \"\"}[5m])) BY (namespace, pod)\n            *\n            on(pod,namespace) group_left(node) (node_namespace_pod:kube_pod_info:)\n          )\n          *\n          on(node) group_left(role) (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n        )\n      ))\n    `,\n  ),\n};\n\nconst overviewQueries = {\n  [OverviewQuery.MEMORY_TOTAL]: _.template(\n    `\n      sum(\n        node_memory_MemTotal_bytes\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_UTILIZATION]: _.template(\n    `\n      sum(\n        (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.MEMORY_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"memory\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          instance:node_network_transmit_bytes_excluding_lo:rate1m\n          +\n          instance:node_network_receive_bytes_excluding_lo:rate1m\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_UTILIZATION]: _.template(\n    `\n      sum(\n        1 - sum without (mode) (rate(node_cpu_seconds_total{mode=~\"idle|iowait|steal\"}[2m]))\n        *\n        on(instance) group_left() (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\",\"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_TOTAL]: _.template(\n    `\n      sum(\n        kube_node_status_capacity{resource=\"cpu\",unit=\"core\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.CPU_REQUESTS]: _.template(\n    `\n      sum(\n        kube_pod_resource_request{resource=\"cpu\"}\n        *\n        on(node) group_left(role) (\n          max by (node) (kube_node_role{role=~\"<%= nodeType %>\"})\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_UTILIZATION]: _.template(\n    `\n      sum(\n        (\n          max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n          -\n          max by (device, instance) (node_filesystem_free_bytes{device=~\"/.*\"})\n        )\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.STORAGE_TOTAL]: _.template(\n    `\n      sum(\n        max by (device, instance) (node_filesystem_size_bytes{device=~\"/.*\"})\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.POD_UTILIZATION]: _.template(\n    `\n      count(\n        (\n          topk without(uid) (1, kube_running_pod_ready)\n          *\n          ignoring(node,uid) group_right node_namespace_pod:kube_pod_info:\n        )\n        *\n        on(node) group_left() (max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}))\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_IN_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_receive_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n  [OverviewQuery.NETWORK_OUT_UTILIZATION]: _.template(\n    `\n      sum(\n        instance:node_network_transmit_bytes_excluding_lo:rate1m\n        *\n        on(instance) group_left(role) (\n          label_replace(max by (node) (kube_node_role{role=~\"<%= nodeType %>\"}), \"instance\", \"$1\", \"node\", \"(.*)\")\n        )\n      )\n    `,\n  ),\n};\n\nexport const getMultilineQueries = (\n  nodeType: string,\n): { [key: string]: QueryWithDescription[] } => ({\n  [OverviewQuery.NETWORK_UTILIZATION]: [\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_IN_UTILIZATION]({ nodeType }),\n      desc: 'in',\n    },\n    {\n      query: overviewQueries[OverviewQuery.NETWORK_OUT_UTILIZATION]({ nodeType }),\n      desc: 'out',\n    },\n  ],\n});\n\nexport const getTop25ConsumerQueries = (nodeType: string) => ({\n  [OverviewQuery.PODS_BY_CPU]: top25Queries[OverviewQuery.PODS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PODS_BY_MEMORY]: top25Queries[OverviewQuery.PODS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PODS_BY_STORAGE]: top25Queries[OverviewQuery.PODS_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PODS_BY_NETWORK_IN]({ nodeType }),\n  [OverviewQuery.PODS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PODS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_CPU]: top25Queries[OverviewQuery.NODES_BY_CPU]({ nodeType }),\n  [OverviewQuery.NODES_BY_MEMORY]: top25Queries[OverviewQuery.NODES_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.NODES_BY_STORAGE]: top25Queries[OverviewQuery.NODES_BY_STORAGE]({ nodeType }),\n  [OverviewQuery.NODES_BY_PODS]: top25Queries[OverviewQuery.NODES_BY_PODS]({ nodeType }),\n  [OverviewQuery.NODES_BY_NETWORK_IN]: top25Queries[OverviewQuery.NODES_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.NODES_BY_NETWORK_OUT]: top25Queries[OverviewQuery.NODES_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_CPU]: top25Queries[OverviewQuery.PROJECTS_BY_CPU]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_MEMORY]: top25Queries[OverviewQuery.PROJECTS_BY_MEMORY]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_STORAGE]: top25Queries[OverviewQuery.PROJECTS_BY_STORAGE]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_PODS]: top25Queries[OverviewQuery.PROJECTS_BY_PODS]({ nodeType }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_IN]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_IN]({\n    nodeType,\n  }),\n  [OverviewQuery.PROJECTS_BY_NETWORK_OUT]: top25Queries[OverviewQuery.PROJECTS_BY_NETWORK_OUT]({\n    nodeType,\n  }),\n});\n\nexport const getUtilizationQueries = (nodeType: string) => ({\n  [OverviewQuery.CPU_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.CPU_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.CPU_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.CPU_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.MEMORY_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.MEMORY_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.MEMORY_TOTAL]({ nodeType }),\n    requests: overviewQueries[OverviewQuery.MEMORY_REQUESTS]({ nodeType }),\n  },\n  [OverviewQuery.STORAGE_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.STORAGE_UTILIZATION]({ nodeType }),\n    total: overviewQueries[OverviewQuery.STORAGE_TOTAL]({ nodeType }),\n  },\n  [OverviewQuery.POD_UTILIZATION]: {\n    utilization: overviewQueries[OverviewQuery.POD_UTILIZATION]({ nodeType }),\n  },\n});\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { GaugeChart } from '@console/internal/components/graphs/gauge';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ResourceQuotaChartsProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n\nconst ResourceQuotaCharts = ({ resourceQuota }: ResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(resourceQuota.status?.hard ?? {}).map((resourceName) => {\n    const hard = resourceQuota.status.hard[resourceName];\n    const used = resourceQuota.status.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({ resourceName, used, hard });\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <GaugeChart\n          data={{\n            x: `${percent}%`,\n            y: percent,\n          }}\n          thresholds={[{ value: 90 }, { value: 101 }]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ResourceQuotaCharts;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getUsedPercentage, getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype AppliedClusterResourceQuotaChartsProps = {\n  appliedClusterResourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n\nconst AppliedClusterResourceQuotaCharts = ({\n  appliedClusterResourceQuota,\n  namespace,\n}: AppliedClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const nsQuotas = appliedClusterResourceQuota.status?.namespaces?.find(\n    (ns) => ns.namespace === namespace,\n  );\n\n  const charts = Object.keys(nsQuotas?.status?.hard ?? {}).map((resourceName) => {\n    const clusterHard = appliedClusterResourceQuota.status.total?.hard?.[resourceName];\n    const clusterUsed = appliedClusterResourceQuota.status.total?.used?.[resourceName];\n    const nsUsed = nsQuotas.status.used?.[resourceName];\n    const clusterUsage = getUsedPercentage(clusterHard, clusterUsed);\n    const unused = 100 - clusterUsage;\n\n    const { label, percent: nsUsage } = getLabelAndUsage({\n      resourceName,\n      used: nsUsed,\n      hard: clusterHard,\n    });\n\n    const percentOtherNamespaces = clusterUsage - nsUsage;\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Namespace',\n              y: nsUsage,\n            },\n            {\n              x: 'Other namespaces',\n              y: percentOtherNamespaces,\n            },\n            {\n              x: 'Unused',\n              y: unused,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default AppliedClusterResourceQuotaCharts;\n","/* eslint-disable camelcase */\nimport * as React from 'react';\nimport { ChartDonut } from '@patternfly/react-charts';\nimport {\n  chart_color_black_100,\n  chart_color_green_300,\n  chart_color_green_500,\n  chart_color_gold_400,\n  chart_color_gold_500,\n} from '@patternfly/react-tokens';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { useRefWidth } from '../utils';\nimport { DataPoint } from '.';\n\nexport const DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  query = '',\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  ariaDescription,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || t('No data');\n\n  const labels = ({ datum: { x, y } }) => t('public~{{x}}: {{y}}%', { x, y });\n\n  const namespaceData = data.filter((datum) => datum.x === 'Namespace');\n\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonut\n          ariaTitle={ariaChartTitle || title}\n          ariaDesc={ariaDescription}\n          data={data}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          labels={labels}\n          width={width}\n          subTitle={secondaryTitleText}\n          colorScale={\n            namespaceData[0]?.y === 100\n              ? [\n                  chart_color_gold_400.value,\n                  chart_color_gold_500.value,\n                  chart_color_black_100.value,\n                ]\n              : [\n                  chart_color_green_300.value,\n                  chart_color_green_500.value,\n                  chart_color_black_100.value,\n                ]\n          }\n          title={labelText}\n        />\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\ntype DonutChartProps = {\n  data: DataPoint[];\n  label: string;\n  query?: string;\n  secondaryTitle?: string;\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  ariaDescription?: string;\n  usedLabel?: string;\n  className?: string;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getUsedPercentage } from '@console/app/src/components/resource-quota/utils';\nimport { YellowExclamationTriangleIcon } from '../../status';\n\nimport './quota-summary.scss';\n\ntype QuotaSummaryProps = {\n  hard: { [key: string]: string };\n  used: { [key: string]: string };\n};\n\nconst QuotaSummary = ({ hard, used }: QuotaSummaryProps): JSX.Element => {\n  const { t } = useTranslation();\n  const resourcesAtQuota = Object.keys(hard || {}).reduce(\n    (acc, resource) => (getUsedPercentage(hard[resource], used?.[resource]) >= 100 ? acc + 1 : acc),\n    0,\n  );\n\n  return (\n    <div className=\"co-resource-quota__summary\">\n      {t('console-shared~{{count}} resource', { count: Object.keys(hard || {}).length })}\n      {', '}\n      {resourcesAtQuota > 0 ? (\n        <>\n          <YellowExclamationTriangleIcon />{' '}\n          {t('console-shared~{{count}} resource reached quota', { count: resourcesAtQuota })}\n        </>\n      ) : (\n        t('console-shared~none are at quota')\n      )}\n    </div>\n  );\n};\n\nexport default QuotaSummary;\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { CircleIcon } from '@patternfly/react-icons/dist/esm/icons/circle-icon';\nimport { SquareIcon } from '@patternfly/react-icons/dist/esm/icons/square-icon';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sResourceKindReference } from '../module/k8s';\nimport { ResourceLink } from './utils/resource-link';\nimport { Timestamp } from './utils/timestamp';\nimport { EmptyBox } from './utils/status-box';\n\nconst ImageStreamTagsReference: K8sResourceKindReference = 'ImageStreamTag';\n\nexport const getImageStreamTagName = (imageStreamName: string, tag: string): string =>\n  `${imageStreamName}:${tag}`;\n\nconst ImageStreamTimelineItem: React.FC<ImageStreamTimelineItemProps> = ({\n  tag,\n  imageStreamName,\n  imageStreamNamespace,\n  linkToTag,\n}) => {\n  const referenceAndSHA = _.split(tag.dockerImageReference, '@');\n  return (\n    <>\n      <li>\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__circle-icon\">\n            <CircleIcon />\n          </span>\n          <div className=\"co-images-stream-tag-timeline__timestamp\">\n            <Timestamp timestamp={tag.created} simple={true} />\n          </div>\n        </div>\n\n        <div className=\"co-images-stream-tag-timeline__item-row\">\n          <span className=\"co-images-stream-tag-timeline__line\" />\n          <div className=\"co-images-stream-tag-timeline__info\">\n            <ResourceLink\n              kind={ImageStreamTagsReference}\n              name={getImageStreamTagName(imageStreamName, tag.tag)}\n              namespace={imageStreamNamespace}\n              title={tag.tag}\n              linkTo={linkToTag}\n            />\n            <div className=\"co-break-all\">from {referenceAndSHA[0]}</div>\n            <div className=\"co-break-all\">{referenceAndSHA[1]}</div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n};\n\n// check is the compared tag version, is the latest version in a sorted array of all tag versions\nconst isTagVersionLatest = (\n  comparedTag: string,\n  comparedTagPosition: number,\n  orderedTagArray: TagMeta[],\n) => {\n  return (\n    comparedTagPosition ===\n    _.findIndex(orderedTagArray, (orderedTag: TagMeta) => orderedTag.tag === comparedTag)\n  );\n};\n\nexport const ImageStreamTimeline: React.FC<ImageStreamTimelineProps> = ({\n  imageStreamTags,\n  imageStreamName,\n  imageStreamNamespace,\n}) => {\n  const { t } = useTranslation();\n  if (!_.some(imageStreamTags, 'items')) {\n    return <EmptyBox label={t('public~Images')} />;\n  }\n  const tagsArray: TagMeta[] = _.flatten(\n    _.map(imageStreamTags, ({ tag, items }) => {\n      return _.map(items, ({ created, dockerImageReference }) => ({\n        tag,\n        created,\n        dockerImageReference,\n      }));\n    }),\n  );\n  const orderedTagArray = _.orderBy(tagsArray, ['created'], ['desc']);\n  const timeline = _.map(orderedTagArray, (tag: TagMeta, i: number) => {\n    return (\n      <ImageStreamTimelineItem\n        key={tag.dockerImageReference}\n        tag={tag}\n        imageStreamName={imageStreamName}\n        imageStreamNamespace={imageStreamNamespace}\n        linkToTag={isTagVersionLatest(tag.tag, i, orderedTagArray)}\n      />\n    );\n  });\n\n  return (\n    <>\n      <ul className=\"co-images-stream-tag-timeline\">\n        {timeline}\n        <div>\n          <span className=\"co-images-stream-tag-timeline__square-icon\">\n            <SquareIcon />\n          </span>\n        </div>\n      </ul>\n    </>\n  );\n};\n\ntype ImageStreamTimelineItemProps = {\n  tag: TagMeta;\n  imageStreamName: string;\n  imageStreamNamespace: string;\n  linkToTag: boolean;\n};\n\ntype TagMeta = {\n  created: string;\n  tag: string;\n  dockerImageReference: string;\n};\n\ntype ImageStreamTimelineProps = {\n  imageStreamTags: any[];\n  imageStreamName: string;\n  imageStreamNamespace: string;\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '../../../../module/k8s';\n\nexport const ClusterDashboardContext = React.createContext<ClusterDashboardContext>({\n  infrastructureLoaded: true,\n  infrastructureError: null,\n});\n\n// eslint-disable-next-line no-redeclare\ntype ClusterDashboardContext = {\n  infrastructure?: K8sResourceKind;\n  infrastructureLoaded: boolean;\n  infrastructureError: any;\n};\n","import { TFunction } from 'i18next';\nimport { HealthChecksProbeType, RequestType, HealthCheckFormProbe } from './health-checks-types';\n\nexport const getHealthChecksProbeConfig = (probe: string, t: TFunction) => {\n  switch (probe) {\n    case HealthChecksProbeType.ReadinessProbe: {\n      return {\n        formTitle: t('devconsole~Readiness probe'),\n        formSubtitle: t(\n          \"devconsole~A readiness probe checks if the Container is ready to handle requests. A failed readiness probe means that a Container should not receive any traffic from a proxy, even if it's running.\",\n        ),\n      };\n    }\n    case HealthChecksProbeType.LivenessProbe: {\n      return {\n        formTitle: t('devconsole~Liveness probe'),\n        formSubtitle: t(\n          'devconsole~A liveness probe checks if the Container is still running. If the liveness probe fails the Container is killed.',\n        ),\n      };\n    }\n    case HealthChecksProbeType.StartupProbe: {\n      return {\n        formTitle: t('devconsole~Startup probe'),\n        formSubtitle: t(\n          'devconsole~A startup probe checks if the application within the Container is started. If the startup probe fails the Container is killed.',\n        ),\n      };\n    }\n    default:\n      return undefined;\n  }\n};\n\nexport const healthChecksDefaultValues: HealthCheckFormProbe = {\n  showForm: false,\n  enabled: false,\n  modified: false,\n  data: {\n    failureThreshold: '3',\n    requestType: RequestType.HTTPGET,\n    httpGet: {\n      scheme: undefined,\n      path: '/',\n      port: '8080',\n      httpHeaders: [],\n    },\n    tcpSocket: {\n      port: '8080',\n    },\n    exec: { command: [''] },\n    initialDelaySeconds: '0',\n    periodSeconds: '10',\n    timeoutSeconds: '1',\n    successThreshold: '1',\n  },\n};\n\nexport const healthChecksProbeInitialData = {\n  readinessProbe: healthChecksDefaultValues,\n  livenessProbe: healthChecksDefaultValues,\n  startupProbe: healthChecksDefaultValues,\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { GetOperatorsWithStatuses, LazyLoader, OperatorRowProps } from '@console/plugin-sdk';\nimport { getMostImportantStatuses } from './state-utils';\nimport { HealthState } from './states';\nimport StatusItem, { StatusPopupSection } from './StatusPopup';\n\nimport './operator-body.scss';\n\nexport const OperatorsSection: React.FC<OperatorsSectionProps> = ({\n  resources,\n  getOperatorsWithStatuses,\n  title,\n  linkTo,\n  Row,\n  Component,\n  isResolved,\n}) => {\n  const { t } = useTranslation();\n  const error = _.values(resources).some((r) => r.loadError);\n  const operatorStatuses = getOperatorsWithStatuses(resources);\n  const sortedOperatorStatuses = getMostImportantStatuses(operatorStatuses).sort((a, b) =>\n    a.operators[0].metadata.name.localeCompare(b.operators[0].metadata.name),\n  );\n  const operatorsHealthy = sortedOperatorStatuses.every((o) => o.status.health === HealthState.OK);\n  const RowLoading = React.useCallback(() => <div className=\"co-status__operator-skeleton\" />, []);\n  if (!operatorStatuses.length) {\n    return null;\n  }\n\n  return (\n    <StatusPopupSection\n      firstColumn={\n        <>\n          <span>{title}</span>\n          <span className=\"text-secondary co-status__operator-detail\">\n            {' '}\n            {t('console-shared~({{operatorStatusLength}} installed)', {\n              operatorStatusLength: operatorStatuses.length,\n            })}\n          </span>\n        </>\n      }\n      secondColumn={t('console-shared~Status')}\n    >\n      {error ? (\n        <div className=\"text-secondary\">{t('console-shared~Not available')}</div>\n      ) : (\n        !operatorsHealthy &&\n        sortedOperatorStatuses.map((operatorStatus) => (\n          <Row\n            key={operatorStatus.operators[0].metadata.uid}\n            Component={Component}\n            operatorStatus={operatorStatus}\n            LoadingComponent={RowLoading}\n            isResolved={isResolved}\n          />\n        ))\n      )}\n      <StatusItem\n        value={t('console-shared~All {{status}}', {\n          status: operatorStatuses[0].status.title.toLowerCase(),\n        })}\n        icon={operatorStatuses[0].status.icon}\n      >\n        <Link to={linkTo}>{t('console-shared~View all')}</Link>\n      </StatusItem>\n    </StatusPopupSection>\n  );\n};\n\ntype OperatorsSectionProps = {\n  resources: FirehoseResourcesResult;\n  getOperatorsWithStatuses: GetOperatorsWithStatuses;\n  title: string;\n  linkTo: string;\n  Row: React.ComponentType<\n    OperatorRowProps & {\n      LoadingComponent: () => JSX.Element;\n      Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n      key: string;\n      isResolved: boolean;\n    }\n  >;\n  isResolved: boolean;\n  Component: React.ComponentType<OperatorRowProps> | LazyLoader<OperatorRowProps>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { connect } from 'react-redux';\nimport { Map as ImmutableMap } from 'immutable';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useExtensions,\n  DashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthOperator,\n} from '@console/plugin-sdk';\nimport {\n  DashboardsOverviewHealthSubsystem as DynamicDashboardsOverviewHealthSubsystem,\n  DashboardsOverviewHealthPrometheusSubsystem as DynamicDashboardsOverviewHealthPrometheusSubsystem,\n  DashboardsOverviewHealthURLSubsystem as DynamicDashboardsOverviewHealthURLSubsystem,\n  DashboardsOverviewHealthOperator as DynamicDashboardsOverviewHealthOperator,\n  isDashboardsOverviewHealthSubsystem as isDynamicDashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthURLSubsystem as isDynamicDashboardsOverviewHealthURLSubsystem,\n  isDashboardsOverviewHealthPrometheusSubsystem as isDynamicDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthURLSubsystem,\n  isResolvedDashboardsOverviewHealthPrometheusSubsystem,\n  isResolvedDashboardsOverviewHealthResourceSubsystem,\n  isResolvedDashboardsOverviewHealthOperator,\n  ResolvedExtension,\n  useResolvedExtensions,\n  WatchK8sResource,\n} from '@console/dynamic-plugin-sdk';\nimport { Gallery, GalleryItem, Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport { BlueArrowCircleUpIcon, FLAGS, useCanClusterUpgrade } from '@console/shared';\n\nimport AlertsBody from '@console/shared/src/components/dashboard/status-card/AlertsBody';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport AlertItem, {\n  StatusItem,\n} from '@console/shared/src/components/dashboard/status-card/AlertItem';\nimport { alertURL } from '../../../monitoring/utils';\nimport {\n  ClusterVersionKind,\n  referenceForModel,\n  hasAvailableUpdates,\n  K8sKind,\n  ObjectMetadata,\n} from '../../../../module/k8s';\nimport { ClusterVersionModel } from '../../../../models';\nimport { RootState } from '../../../../redux';\nimport {\n  OperatorHealthItem,\n  PrometheusHealthItem,\n  URLHealthItem,\n  ResourceHealthItem,\n} from './health-item';\nimport { useK8sWatchResource } from '../../../utils/k8s-watch-hook';\nimport { useFlag } from '@console/shared/src/hooks/flag';\nimport { useNotificationAlerts } from '@console/shared/src/hooks/useNotificationAlerts';\n\nconst filterSubsystems = (\n  subsystems: (\n    | DashboardsOverviewHealthSubsystem\n    | ResolvedExtension<DynamicDashboardsOverviewHealthSubsystem>\n  )[],\n  k8sModels: ImmutableMap<string, K8sKind>,\n) =>\n  subsystems.filter((s) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(s) ||\n      isDashboardsOverviewHealthPrometheusSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthURLSubsystem(s) ||\n      isDynamicDashboardsOverviewHealthPrometheusSubsystem(s)\n    ) {\n      const subsystem = s as\n        | DashboardsOverviewHealthPrometheusSubsystem\n        | DashboardsOverviewHealthURLSubsystem\n        | ResolvedExtension<DynamicDashboardsOverviewHealthPrometheusSubsystem>\n        | ResolvedExtension<DynamicDashboardsOverviewHealthURLSubsystem>;\n      return subsystem.properties.additionalResource &&\n        !subsystem.properties.additionalResource.optional\n        ? !!k8sModels.get(subsystem.properties.additionalResource.kind)\n        : true;\n    }\n    return true;\n  });\n\nconst cvResource: WatchK8sResource = {\n  kind: referenceForModel(ClusterVersionModel),\n  namespaced: false,\n  name: 'version',\n  isList: false,\n};\n\nexport const DashboardAlerts: React.FC<DashboardAlertsProps> = ({ labelSelector }) => {\n  const { t } = useTranslation();\n  const hasCVResource = useFlag(FLAGS.CLUSTER_VERSION);\n  const [alerts, , loadError] = useNotificationAlerts(labelSelector);\n  const [cv, cvLoaded] = useK8sWatchResource<ClusterVersionKind>(\n    hasCVResource ? cvResource : ({} as WatchK8sResource),\n  );\n  const canUpgrade = useCanClusterUpgrade();\n\n  const showClusterUpdate =\n    canUpgrade && hasCVResource && cvLoaded && hasAvailableUpdates(cv) && !labelSelector;\n  return (\n    <AlertsBody error={!_.isEmpty(loadError)}>\n      {showClusterUpdate && (\n        <StatusItem\n          key=\"clusterUpdate\"\n          Icon={BlueArrowCircleUpIcon}\n          message={t('public~A cluster version update is available')}\n        >\n          <Link to=\"/settings/cluster?showVersions\">{t('public~Update cluster')}</Link>\n        </StatusItem>\n      )}\n      {alerts.map((alert) => (\n        <AlertItem key={alertURL(alert, alert.rule.id)} alert={alert} />\n      ))}\n    </AlertsBody>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  k8sModels: state.k8s.getIn(['RESOURCES', 'models']),\n});\nexport const StatusCard = connect<StatusCardProps>(mapStateToProps)(({ k8sModels }) => {\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const [dynamicSubsystemExtensions] = useResolvedExtensions<\n    DynamicDashboardsOverviewHealthSubsystem\n  >(isDynamicDashboardsOverviewHealthSubsystem);\n\n  const subsystems = React.useMemo(() => {\n    const filteredSubsystems = filterSubsystems(\n      [...subsystemExtensions, ...dynamicSubsystemExtensions],\n      k8sModels,\n    );\n    return filteredSubsystems.map((e) => {\n      if (\n        isResolvedDashboardsOverviewHealthURLSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthPrometheusSubsystem(e) ||\n        isResolvedDashboardsOverviewHealthResourceSubsystem(e)\n      ) {\n        const popup = e.properties.popupComponent\n          ? { popupComponent: () => Promise.resolve(e.properties.popupComponent) }\n          : {};\n        return {\n          ...e,\n          properties: {\n            ...e.properties,\n            ...popup,\n          },\n        };\n      }\n      return e;\n    });\n  }, [subsystemExtensions, dynamicSubsystemExtensions, k8sModels]);\n\n  const operatorSubsystemIndex = React.useMemo(\n    () =>\n      subsystems.findIndex(\n        (e) =>\n          isDashboardsOverviewHealthOperator(e) || isResolvedDashboardsOverviewHealthOperator(e),\n      ),\n    [subsystems],\n  );\n  const { t } = useTranslation();\n  const healthItems: { title: string; Component: React.ReactNode }[] = [];\n  subsystems.forEach((subsystem) => {\n    if (\n      isDashboardsOverviewHealthURLSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthURLSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <URLHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthPrometheusSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthPrometheusSubsystem(subsystem)\n    ) {\n      const { disallowedControlPlaneTopology } = subsystem.properties;\n      if (\n        disallowedControlPlaneTopology?.length &&\n        disallowedControlPlaneTopology.includes(window.SERVER_FLAGS.controlPlaneTopology)\n      ) {\n        return;\n      }\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <PrometheusHealthItem subsystem={subsystem.properties} models={k8sModels} />,\n      });\n    } else if (\n      isDashboardsOverviewHealthResourceSubsystem(subsystem) ||\n      isResolvedDashboardsOverviewHealthResourceSubsystem(subsystem)\n    ) {\n      healthItems.push({\n        title: subsystem.properties.title,\n        Component: <ResourceHealthItem subsystem={subsystem.properties} />,\n      });\n    }\n  });\n\n  if (operatorSubsystemIndex !== -1) {\n    const operatorSubsystems: DashboardsOverviewHealthOperator['properties'][] = [];\n    const dynamicOperatorSubsystems: ResolvedExtension<\n      DynamicDashboardsOverviewHealthOperator\n    >['properties'][] = [];\n    subsystems.forEach((e) => {\n      if (isResolvedDashboardsOverviewHealthOperator(e)) {\n        dynamicOperatorSubsystems.push(e.properties);\n      } else if (isDashboardsOverviewHealthOperator(e)) {\n        operatorSubsystems.push(e.properties);\n      }\n    });\n    healthItems.splice(operatorSubsystemIndex, 0, {\n      title: 'Operators',\n      Component: (\n        <OperatorHealthItem\n          operatorExtensions={operatorSubsystems}\n          dynamicOperatorSubsystems={dynamicOperatorSubsystems}\n        />\n      ),\n    });\n  }\n\n  return (\n    <Card\n      data-test-id=\"status-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to=\"/monitoring/alerts\" data-test=\"status-card-view-alerts\">\n                {t('public~View alerts')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      <HealthBody>\n        <Gallery className=\"co-overview-status__health\" hasGutter>\n          {healthItems.map((item) => {\n            return (\n              <GalleryItem key={item.title} data-test={item.title}>\n                {item.Component}\n              </GalleryItem>\n            );\n          })}\n        </Gallery>\n      </HealthBody>\n      <DashboardAlerts />\n    </Card>\n  );\n});\n\ntype StatusCardProps = {\n  k8sModels: ImmutableMap<string, K8sKind>;\n};\n\ntype DashboardAlertsProps = {\n  labelSelector?: ObjectMetadata['labels'];\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { FLAGS, useActiveNamespace, useFlag } from '@console/shared';\nimport { useCreateNamespaceOrProjectModal } from '@console/shared/src/hooks/useCreateNamespaceOrProjectModal';\nimport ProjectListPage, { ProjectListPageProps } from './ProjectListPage';\n\ntype LazySubTitleRender = (openProjectModal: () => void) => React.ReactNode;\nexport interface CreateProjectListPageProps extends ProjectListPageProps {\n  title: string;\n  children: LazySubTitleRender;\n  onCreate?: (project: K8sResourceKind) => void;\n}\n\ntype CreateAProjectButtonProps = {\n  openProjectModal: () => void;\n};\n\nexport const CreateAProjectButton: React.FC<CreateAProjectButtonProps> = ({ openProjectModal }) => {\n  const { t } = useTranslation();\n  const canCreateNs = useFlag(FLAGS.CAN_CREATE_NS);\n  const canCreateProject = useFlag(FLAGS.CAN_CREATE_PROJECT);\n  if (canCreateProject) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Project\n        </Button>\n      </Trans>\n    );\n  }\n  if (canCreateNs) {\n    return (\n      <Trans t={t} ns=\"devconsole\">\n        {' or '}\n        <Button isInline variant=\"link\" onClick={openProjectModal}>\n          create a Namespace\n        </Button>\n      </Trans>\n    );\n  }\n  return null;\n};\n\nconst CreateProjectListPage: React.FC<CreateProjectListPageProps> = ({\n  onCreate,\n  title,\n  children,\n  ...props\n}) => {\n  const [, setActiveNamespace] = useActiveNamespace();\n  const createNamespaceOrProjectModal = useCreateNamespaceOrProjectModal();\n  const openProjectModal = React.useCallback(() => {\n    const handleSubmit = (project: K8sResourceKind) => {\n      setActiveNamespace(project.metadata?.name);\n      onCreate && onCreate(project);\n    };\n    createNamespaceOrProjectModal({ onSubmit: handleSubmit });\n  }, [onCreate, setActiveNamespace, createNamespaceOrProjectModal]);\n  return (\n    <ProjectListPage {...props} title={title}>\n      {children(openProjectModal)}\n    </ProjectListPage>\n  );\n};\n\nexport default CreateProjectListPage;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardTitle,\n  MenuToggle,\n  MenuToggleElement,\n  Select,\n  SelectList,\n  SelectOption,\n  Split,\n  SplitItem,\n} from '@patternfly/react-core';\nimport {\n  ClusterOverviewUtilizationItem,\n  isClusterOverviewUtilizationItem,\n  ClusterOverviewMultilineUtilizationItem,\n  isClusterOverviewMultilineUtilizationItem,\n  useResolvedExtensions,\n  Humanize,\n  TopConsumerPopoverProps,\n} from '@console/dynamic-plugin-sdk';\nimport UtilizationItem, {\n  MultilineUtilizationItem,\n  QueryWithDescription,\n  LimitRequested,\n  trimSecondsXMutator,\n} from '@console/shared/src/components/dashboard/utilization-card/UtilizationItem';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\n\nimport { DashboardItemProps, withDashboardResources } from '../../with-dashboard-resources';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils/units';\nimport { getRangeVectorStats, getInstantVectorStats } from '../../../graphs/utils';\nimport {\n  getMultilineQueries,\n  getUtilizationQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport { MachineConfigPoolModel } from '../../../../models';\nimport { getPrometheusQueryResponse } from '../../../../actions/dashboards';\nimport { DataPoint, PrometheusResponse } from '../../../graphs';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { MachineConfigPoolKind, referenceForModel } from '@console/internal/module/k8s';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport { useUtilizationDuration } from '@console/shared/src/hooks/useUtilizationDuration';\nimport {\n  ClusterUtilizationContext,\n  CPUPopover,\n  MemoryPopover,\n  StoragePopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  PodPopover,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const PrometheusUtilizationItem = withDashboardResources<PrometheusUtilizationItemProps>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    utilizationQuery,\n    totalQuery,\n    title,\n    TopConsumerPopover,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n    limitQuery,\n    requestQuery,\n    setLimitReqState,\n  }) => {\n    let utilization: PrometheusResponse, utilizationError: any;\n    let total: PrometheusResponse, totalError: any;\n    let max: DataPoint<number>[];\n    let limit: PrometheusResponse, limitError: any;\n    let request: PrometheusResponse, requestError: any;\n    let isLoading = false;\n    const { duration } = useUtilizationDuration();\n\n    React.useEffect(() => {\n      if (!isDisabled) {\n        watchPrometheus(utilizationQuery, namespace, duration);\n        totalQuery && watchPrometheus(totalQuery, namespace);\n        limitQuery && watchPrometheus(limitQuery, namespace, duration);\n        requestQuery && watchPrometheus(requestQuery, namespace, duration);\n        return () => {\n          stopWatchPrometheusQuery(utilizationQuery, duration);\n          totalQuery && stopWatchPrometheusQuery(totalQuery);\n          limitQuery && stopWatchPrometheusQuery(limitQuery, duration);\n          requestQuery && stopWatchPrometheusQuery(requestQuery, duration);\n        };\n      }\n    }, [\n      watchPrometheus,\n      stopWatchPrometheusQuery,\n      duration,\n      utilizationQuery,\n      totalQuery,\n      namespace,\n      isDisabled,\n      limitQuery,\n      requestQuery,\n    ]);\n\n    if (!isDisabled) {\n      [utilization, utilizationError] = getPrometheusQueryResponse(\n        prometheusResults,\n        utilizationQuery,\n        duration,\n      );\n      [total, totalError] = getPrometheusQueryResponse(prometheusResults, totalQuery);\n      [limit, limitError] = getPrometheusQueryResponse(prometheusResults, limitQuery, duration);\n      [request, requestError] = getPrometheusQueryResponse(\n        prometheusResults,\n        requestQuery,\n        duration,\n      );\n\n      max = getInstantVectorStats(total);\n      isLoading = !utilization || (totalQuery && !total) || (limitQuery && !limit);\n    }\n\n    return (\n      <UtilizationItem\n        title={title}\n        utilization={utilization}\n        limit={limit}\n        requested={request}\n        error={utilizationError || totalError || limitError || requestError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        query={[utilizationQuery, limitQuery, requestQuery]}\n        max={max && max.length ? max[0].y : null}\n        TopConsumerPopover={TopConsumerPopover}\n        setLimitReqState={setLimitReqState}\n      />\n    );\n  },\n);\n\nexport const PrometheusMultilineUtilizationItem = withDashboardResources<\n  PrometheusMultilineUtilizationItemProps\n>(\n  ({\n    watchPrometheus,\n    stopWatchPrometheusQuery,\n    prometheusResults,\n    queries,\n    title,\n    TopConsumerPopovers,\n    humanizeValue,\n    byteDataType,\n    namespace,\n    isDisabled = false,\n  }) => {\n    const { duration } = useUtilizationDuration();\n    React.useEffect(() => {\n      if (!isDisabled) {\n        queries.forEach((q) => watchPrometheus(q.query, namespace, duration));\n        return () => {\n          queries.forEach((q) => stopWatchPrometheusQuery(q.query, duration));\n        };\n      }\n    }, [watchPrometheus, stopWatchPrometheusQuery, duration, queries, namespace, isDisabled]);\n\n    const stats = [];\n    let hasError = false;\n    let isLoading = false;\n    if (!isDisabled) {\n      queries.forEach((query) => {\n        const [response, responseError] = getPrometheusQueryResponse(\n          prometheusResults,\n          query.query,\n          duration,\n        );\n        if (responseError) {\n          hasError = true;\n          return false;\n        }\n        if (!response) {\n          isLoading = true;\n          return false;\n        }\n        stats.push(getRangeVectorStats(response, query.desc, null, trimSecondsXMutator)?.[0] || []);\n      });\n    }\n\n    return (\n      <MultilineUtilizationItem\n        title={title}\n        data={stats}\n        error={hasError}\n        isLoading={isLoading}\n        humanizeValue={humanizeValue}\n        byteDataType={byteDataType}\n        queries={queries}\n        TopConsumerPopovers={TopConsumerPopovers}\n      />\n    );\n  },\n);\n\nconst UtilizationCardNodeFilter: React.FC<UtilizationCardNodeFilterProps> = ({\n  machineConfigPools,\n  onNodeSelect,\n  selectedNodes,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n  const sortedMCPs = machineConfigPools.sort((a, b) => {\n    const order = ['worker', 'master'];\n    const indexA = order.indexOf(a.metadata.name);\n    const indexB = order.indexOf(b.metadata.name);\n    if (indexA === -1 && indexB === -1) {\n      return a.metadata.name.localeCompare(b.metadata.name);\n    }\n    if (indexA === -1) {\n      return 1;\n    }\n    if (indexB === -1) {\n      return -1;\n    }\n    return indexA - indexB;\n  });\n\n  const selectOptions = sortedMCPs.map((mcp) => {\n    const mcpName = mcp.metadata.name === 'master' ? 'control plane' : mcp.metadata.name;\n    return (\n      <SelectOption\n        hasCheckbox\n        key={mcp.metadata.name}\n        value={mcpName}\n        isSelected={selectedNodes.includes(mcp.metadata.name)}\n      >\n        {mcpName}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={(open) => setIsOpen(open)} variant=\"plainText\">\n      {t('public~Filter by Node type')}\n      {selectedNodes.length > 0 && (\n        <Badge className=\"pf-v5-u-ml-sm\" isRead>\n          {selectedNodes.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      aria-label={t('public~Filter by Node type')}\n      onSelect={onNodeSelect}\n      isOpen={isOpen}\n      selected={selectedNodes}\n      onOpenChange={(open) => setIsOpen(open)}\n      toggle={toggle}\n    >\n      <SelectList>{selectOptions}</SelectList>\n    </Select>\n  );\n};\n\nexport const UtilizationCard = () => {\n  const { t } = useTranslation();\n  const [machineConfigPools, machineConfigPoolsLoaded] = useK8sWatchResource<\n    MachineConfigPoolKind[]\n  >({\n    isList: true,\n    kind: referenceForModel(MachineConfigPoolModel),\n  });\n  // TODO: add `useUserSettings` to get default selected\n  const [selectedNodes, setSelectedNodes] = React.useState<string[]>([]);\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ClusterOverviewUtilizationItem>(\n    isClusterOverviewUtilizationItem,\n  );\n  const [dynamicMultilineItemExtensions] = useResolvedExtensions<\n    ClusterOverviewMultilineUtilizationItem\n  >(isClusterOverviewMultilineUtilizationItem);\n\n  // TODO: add `useUserSettingsCompatibility` to store selectedNodes\n  const onNodeSelect = (event: React.MouseEvent, selection: string) => {\n    const selectionUpdated = selection === 'control plane' ? 'master' : selection;\n    if (selectedNodes.includes(selectionUpdated)) {\n      setSelectedNodes(selectedNodes.filter((item) => item !== selectionUpdated));\n    } else {\n      setSelectedNodes([...selectedNodes, selectionUpdated]);\n    }\n  };\n  // if no filter is applied, show all nodes using regex\n  const nodeType = _.isEmpty(selectedNodes) ? '.+' : selectedNodes.join('|');\n  const [utilizationQueries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(nodeType), getMultilineQueries(nodeType)],\n    [nodeType],\n  );\n  return (\n    machineConfigPoolsLoaded && (\n      <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n        <CardHeader\n          actions={{\n            actions: (\n              <>\n                <Split>\n                  <SplitItem>\n                    <UtilizationCardNodeFilter\n                      machineConfigPools={machineConfigPools}\n                      onNodeSelect={onNodeSelect}\n                      selectedNodes={selectedNodes}\n                    />\n                  </SplitItem>\n                  <SplitItem>\n                    <UtilizationDurationDropdown />\n                  </SplitItem>\n                </Split>\n              </>\n            ),\n            hasNoOffset: false,\n            className: undefined,\n          }}\n        >\n          <CardTitle data-test=\"utilization-card__title\">\n            {t('public~Cluster utilization')}\n          </CardTitle>\n        </CardHeader>\n        <UtilizationBody>\n          <ClusterUtilizationContext.Provider value={nodeType}>\n            <PrometheusUtilizationItem\n              title={t('public~CPU')}\n              utilizationQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.CPU_UTILIZATION].requests}\n              TopConsumerPopover={CPUPopover}\n              humanizeValue={humanizeCpuCores}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Memory')}\n              utilizationQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].total}\n              requestQuery={utilizationQueries[OverviewQuery.MEMORY_UTILIZATION].requests}\n              TopConsumerPopover={MemoryPopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Filesystem')}\n              utilizationQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].utilization}\n              totalQuery={utilizationQueries[OverviewQuery.STORAGE_UTILIZATION].total}\n              TopConsumerPopover={StoragePopover}\n              humanizeValue={humanizeBinaryBytes}\n              byteDataType={ByteDataTypes.BinaryBytes}\n            />\n            <PrometheusMultilineUtilizationItem\n              title={t('public~Network transfer')}\n              queries={multilineQueries[OverviewQuery.NETWORK_UTILIZATION]}\n              humanizeValue={humanizeDecimalBytesPerSec}\n              TopConsumerPopovers={networkPopovers}\n            />\n            <PrometheusUtilizationItem\n              title={t('public~Pod count')}\n              utilizationQuery={utilizationQueries[OverviewQuery.POD_UTILIZATION].utilization}\n              TopConsumerPopover={PodPopover}\n              humanizeValue={humanizeNumber}\n            />\n            {dynamicItemExtensions.map(({ uid, properties }) => (\n              <PrometheusUtilizationItem\n                key={uid}\n                title={properties.title}\n                utilizationQuery={properties.getUtilizationQuery(selectedNodes)}\n                totalQuery={properties.getTotalQuery?.(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopover={properties.TopConsumerPopover}\n                requestQuery={properties.getRequestQuery?.(selectedNodes)}\n                limitQuery={properties.getLimitQuery?.(selectedNodes)}\n              />\n            ))}\n            {dynamicMultilineItemExtensions.map(({ uid, properties }) => (\n              <PrometheusMultilineUtilizationItem\n                key={uid}\n                title={properties.title}\n                queries={properties.getUtilizationQueries(selectedNodes)}\n                humanizeValue={properties.humanize}\n                TopConsumerPopovers={properties.TopConsumerPopovers}\n              />\n            ))}\n          </ClusterUtilizationContext.Provider>\n        </UtilizationBody>\n      </Card>\n    )\n  );\n};\n\ntype PrometheusCommonProps = {\n  title: string;\n  humanizeValue: Humanize;\n  byteDataType?: ByteDataTypes;\n  namespace?: string;\n  isDisabled?: boolean;\n};\n\ntype PrometheusUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    utilizationQuery: string;\n    totalQuery?: string;\n    limitQuery?: string;\n    requestQuery?: string;\n    TopConsumerPopover?: React.ComponentType<TopConsumerPopoverProps>;\n    setLimitReqState?: (state: LimitRequested) => void;\n  };\n\ntype PrometheusMultilineUtilizationItemProps = DashboardItemProps &\n  PrometheusCommonProps & {\n    queries: QueryWithDescription[];\n    TopConsumerPopovers?: React.ComponentType<TopConsumerPopoverProps>[];\n  };\n\ntype UtilizationCardNodeFilterProps = {\n  machineConfigPools: MachineConfigPoolKind[];\n  onNodeSelect: (event: React.MouseEvent, selection: string) => void;\n  selectedNodes: string[];\n};\n","import * as React from 'react';\nimport {\n  ChartDonutThreshold,\n  ChartDonutUtilization,\n  ChartThemeColor,\n} from '@patternfly/react-charts';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport { PrometheusGraph, PrometheusGraphLink } from './prometheus-graph';\nimport { usePrometheusPoll } from './prometheus-poll-hook';\nimport { PrometheusEndpoint } from './helpers';\nimport { useRefWidth, humanizePercentage, Humanize } from '../utils';\nimport { getInstantVectorStats } from './utils';\nimport { DataPoint } from '.';\n\nconst DEFAULT_THRESHOLDS = [{ value: 67 }, { value: 92 }];\n\nexport const GaugeChart: React.FC<GaugeChartProps> = ({\n  data,\n  error,\n  humanize = humanizePercentage,\n  invert = false,\n  loading,\n  query = '',\n  remainderLabel,\n  themeColor = ChartThemeColor.green,\n  thresholds = DEFAULT_THRESHOLDS,\n  title,\n  ariaChartLinkLabel,\n  ariaChartTitle,\n  usedLabel,\n  // Don't sort, Uses previously declared props\n  label,\n  secondaryTitle,\n  className,\n}) => {\n  const { t } = useTranslation();\n  const [ref, width] = useRefWidth();\n  const ready = !error && !loading;\n\n  const status = loading ? t('Loading') : error;\n  const usedLabelText = usedLabel || t('public~used');\n  const secondaryTitleText = secondaryTitle || usedLabelText;\n  const labelText = label || (data ? humanize(data.y).string : undefined) || t('No data');\n\n  const labels = ({ datum: { x, y } }) =>\n    x ? `${x} ${usedLabelText}` : `${y} ${remainderLabel || t('available')}`;\n  return (\n    <PrometheusGraph\n      className={classNames('graph-wrapper--title-center graph-wrapper--gauge', className)}\n      ref={ref}\n      title={title}\n    >\n      <PrometheusGraphLink query={query} ariaChartLinkLabel={ariaChartLinkLabel}>\n        <ChartDonutThreshold\n          ariaTitle={ariaChartTitle || title}\n          data={thresholds}\n          height={width} // Changes the scale of the graph, not actual width and height\n          padding={0}\n          width={width}\n          y=\"value\"\n        >\n          <ChartDonutUtilization\n            labels={labels}\n            data={ready ? data : { y: 0 }}\n            invert={invert}\n            padding={0}\n            subTitle={ready ? secondaryTitleText : ''}\n            themeColor={themeColor}\n            thresholds={thresholds}\n            title={status || labelText}\n          />\n        </ChartDonutThreshold>\n      </PrometheusGraphLink>\n    </PrometheusGraph>\n  );\n};\n\nexport const Gauge: React.FC<GaugeProps> = ({\n  humanize = humanizePercentage,\n  invert,\n  namespace,\n  percent = 0,\n  query,\n  remainderLabel,\n  secondaryTitle,\n  thresholds,\n  title,\n  usedLabel,\n}) => {\n  const { t } = useTranslation();\n\n  const [response, error, loading] = usePrometheusPoll({\n    endpoint: PrometheusEndpoint.QUERY,\n    namespace,\n    query,\n  });\n\n  const [data] = response\n    ? getInstantVectorStats(response, null, humanize).map(({ label, y }) => ({ x: label, y }))\n    : [{ x: humanize(percent).string, y: percent }];\n  return (\n    <GaugeChart\n      data={data}\n      error={!!error && t('No data')}\n      invert={invert}\n      label={data.x}\n      loading={loading}\n      query={query}\n      remainderLabel={remainderLabel}\n      secondaryTitle={secondaryTitle}\n      thresholds={thresholds}\n      title={title}\n      usedLabel={usedLabel}\n    />\n  );\n};\n\ntype GaugeChartProps = {\n  data: DataPoint;\n  error?: string;\n  humanize?: Humanize;\n  invert?: boolean;\n  isLoaded?: boolean;\n  label?: string;\n  loading?: boolean;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  themeColor?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  ariaChartLinkLabel?: string;\n  ariaChartTitle?: string;\n  usedLabel?: string;\n  className?: string;\n};\n\ntype GaugeProps = {\n  humanize?: Humanize;\n  invert?: boolean;\n  namespace?: string;\n  percent?: number;\n  query?: string;\n  remainderLabel?: string;\n  secondaryTitle?: string;\n  thresholds?: {\n    value: number;\n    color?: string;\n  }[];\n  title?: string;\n  usedLabel?: string;\n};\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport Dashboard from '@console/shared/src/components/dashboard/Dashboard';\nimport DashboardGrid from '@console/shared/src/components/dashboard/DashboardGrid';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, LabelSelector, referenceForModel, Selector } from '../../../module/k8s';\nimport { DetailsCard } from './details-card';\nimport { StatusCard } from './status-card';\nimport { UtilizationCard } from './utilization-card';\nimport { InventoryCard } from './inventory-card';\nimport { ActivityCard } from './activity-card';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { LauncherCard } from './launcher-card';\nimport { ResourceQuotaCard } from './resource-quota-card';\n\nconst mainCards = [{ Card: StatusCard }, { Card: UtilizationCard }, { Card: ResourceQuotaCard }];\nconst leftCards = [{ Card: DetailsCard }, { Card: InventoryCard }];\nconst rightCards = [{ Card: ActivityCard }];\n\nexport const getNamespaceDashboardConsoleLinks = (\n  ns: K8sResourceKind,\n  consoleLinks: K8sResourceKind[],\n): K8sResourceKind[] => {\n  return _.filter(consoleLinks, (link: K8sResourceKind): boolean => {\n    if (link.spec.location !== 'NamespaceDashboard') {\n      return false;\n    }\n\n    const namespaces: string[] = _.get(link, 'spec.namespaceDashboard.namespaces');\n    const selector: Selector = _.get(link, 'spec.namespaceDashboard.namespaceSelector');\n\n    // If neither namespaces or selector was provided, show the link for all namespaces.\n    if (_.isEmpty(namespaces) && _.isEmpty(selector)) {\n      return true;\n    }\n\n    // Show the link if either namespaces or the selector matches this namespace.\n    if (_.includes(namespaces, ns.metadata.name)) {\n      return true;\n    }\n\n    return !_.isEmpty(selector) && new LabelSelector(selector).matches(ns);\n  });\n};\n\nexport const ProjectDashboard: React.FC<ProjectDashboardProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const [perspective] = useActivePerspective();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const namespaceLinks = getNamespaceDashboardConsoleLinks(obj, consoleLinks);\n  const context = {\n    obj,\n    namespaceLinks,\n  };\n\n  const hasNamespaceLinks = !!namespaceLinks.length;\n\n  const rc = React.useMemo(\n    () => (hasNamespaceLinks ? [{ Card: LauncherCard }, ...rightCards] : rightCards),\n    [hasNamespaceLinks],\n  );\n\n  return (\n    <>\n      {perspective === 'dev' && (\n        <Helmet>\n          <title>{t('public~Project overview')}</title>\n        </Helmet>\n      )}\n      <ProjectDashboardContext.Provider value={context}>\n        <Dashboard>\n          <DashboardGrid mainCards={mainCards} leftCards={leftCards} rightCards={rc} />\n        </Dashboard>\n      </ProjectDashboardContext.Provider>\n    </>\n  );\n};\n\ntype ProjectDashboardProps = {\n  obj: K8sResourceKind;\n};\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { Perspective } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { history } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  ProjectRequestModel,\n  SecretModel,\n  ServiceModel,\n  ServiceAccountModel,\n  RouteModel,\n} from '@console/internal/models';\nimport {\n  k8sCreate,\n  k8sGet,\n  K8sResourceKind,\n  k8sUpdate,\n  K8sVerb,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnServiceModel } from '@console/knative-plugin';\nimport {\n  getDomainMappingRequests,\n  getKnativeServiceDepResource,\n} from '@console/knative-plugin/src/utils/create-knative-utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport {\n  createPipelineForImportFlow,\n  createPipelineRunForImportFlow,\n  updatePipelineForImportFlow,\n} from '@console/pipelines-plugin/src/components/import/pipeline/pipeline-template-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '@console/pipelines-plugin/src/components/pipelines/const';\nimport { createTrigger } from '@console/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils';\nimport { setPipelineNotStarted } from '@console/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils';\nimport { createRepositoryResources } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { PipelineKind } from '@console/pipelines-plugin/src/types';\nimport {\n  updateServiceAccount,\n  getSecretAnnotations,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { LimitsData } from '@console/shared/src/types';\nimport { getRandomChars, getResourceLimitsData } from '@console/shared/src/utils';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BUILD_OUTPUT_IMAGESTREAM_URL } from '@console/shipwright-plugin/src/const';\nimport { BuildModel as ShipwrightBuildModel } from '@console/shipwright-plugin/src/models';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { RUNTIME_LABEL } from '../../const';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  getTriggerAnnotation,\n  mergeData,\n  getTemplateLabels,\n  getRouteAnnotations,\n} from '../../utils/resource-label-utils';\nimport { createService, createRoute, dryRunOpt } from '../../utils/shared-submit-utils';\nimport { AppResources } from '../edit-application/edit-application-types';\nimport { getProbesData } from '../health-checks/create-health-checks-probe-utils';\nimport {\n  GitImportFormData,\n  ProjectData,\n  GitReadableTypes,\n  Resources,\n  DevfileSuggestedResources,\n  UploadJarFormData,\n  RouteData,\n  ServerlessData,\n  DeploymentData,\n  BuildOptions,\n} from './import-types';\n\nexport const generateSecret = () => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const createProject = (projectData: ProjectData): Promise<K8sResourceKind> => {\n  const project = {\n    metadata: {\n      name: projectData.name,\n    },\n    displayName: projectData.displayName,\n    description: projectData.description,\n  };\n\n  return k8sCreate(ProjectRequestModel, project);\n};\n\nexport const createOrUpdateImageStream = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStreamData: K8sResourceKind,\n  dryRun: boolean,\n  appResources: AppResources,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    labels: userLabels,\n    image: { tag: selectedTag },\n    labels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const repository = (formData as GitImportFormData).git?.url;\n  const ref = (formData as GitImportFormData).git?.ref;\n  const imageStreamList = appResources?.imageStream?.data?.filter(\n    (imgstr) => imgstr.metadata?.labels?.[NAME_LABEL] === (labels[NAME_LABEL] || name),\n  );\n  const imageStreamFilterData = _.orderBy(imageStreamList, ['metadata.resourceVersion'], ['desc']);\n  const originalImageStream = (imageStreamFilterData.length && imageStreamFilterData[0]) || {};\n  const imageStreamName = imageStreamData && imageStreamData.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...(repository && getGitAnnotations(repository, ref)),\n    ...getCommonAnnotations(),\n  };\n  const imgStreamName =\n    verb === 'update' && !_.isEmpty(originalImageStream)\n      ? originalImageStream.metadata.labels[NAME_LABEL]\n      : name;\n  const newImageStream = {\n    apiVersion: 'image.openshift.io/v1',\n    kind: 'ImageStream',\n    metadata: {\n      name: generatedImageStreamName || imgStreamName,\n      namespace,\n      labels: {\n        ...defaultLabels,\n        ...userLabels,\n        [NAME_LABEL]: imgStreamName,\n      },\n      annotations: defaultAnnotations,\n    },\n  };\n  const imageStream = mergeData(originalImageStream, newImageStream);\n  if (verb === 'update') {\n    imageStream.metadata.name = originalImageStream.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ImageStreamModel, imageStream)\n    : k8sCreate(ImageStreamModel, newImageStream, dryRun ? dryRunOpt : {});\n};\n\nexport const createWebhookSecret = (\n  formData: GitImportFormData | UploadJarFormData,\n  imageStream: K8sResourceKind,\n  secretType: string,\n  dryRun: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    image: { tag: selectedTag },\n    labels: userLabels,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n\n  const webhookSecret = {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: `${name}-${secretType}-webhook-secret`,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n    },\n    stringData: { WebHookSecretKey: generateSecret() },\n    type: SecretType.opaque,\n  };\n\n  return k8sCreate(SecretModel, webhookSecret, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateShipwrightBuild = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalShipwrightBuild?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n) => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, strategy: buildStrategy, clusterBuildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamRepository = imageStream && imageStream.status?.dockerImageRepository;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  let shipwrightParamsObj = [];\n  // eslint-disable-next-line default-case\n  switch (buildStrategy) {\n    case BuildStrategyType.Docker:\n      shipwrightParamsObj = [\n        {\n          name: 'dockerfile',\n          value: dockerfilePath,\n        },\n      ];\n      break;\n    case BuildStrategyType.Source:\n      shipwrightParamsObj = [\n        {\n          name: 'builder-image',\n          value: `${imageStreamRepository}:${selectedTag}`,\n        },\n      ];\n      break;\n  }\n\n  const shipwrightBuildName =\n    verb === 'update' && !_.isEmpty(originalShipwrightBuild)\n      ? originalShipwrightBuild.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newShipwrightBuild = {\n    apiVersion: 'shipwright.io/v1beta1',\n    kind: 'Build',\n    metadata: {\n      name: generatedImageStreamName || shipwrightBuildName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: shipwrightBuildName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      source: {\n        type: 'Git',\n        git: {\n          url: repository,\n          revision: ref,\n          ...(secretName ? { cloneSecret: secretName } : {}),\n        },\n        contextDir,\n      },\n      env: [...customEnvs, ...buildEnvs],\n      strategy: {\n        name: clusterBuildStrategy,\n        kind: 'ClusterBuildStrategy',\n      },\n      paramValues: shipwrightParamsObj,\n      output: {\n        image: `${BUILD_OUTPUT_IMAGESTREAM_URL}/${namespace}/${\n          generatedImageStreamName || shipwrightBuildName\n        }:latest`,\n      },\n    },\n  };\n\n  const shipwrightBuild = mergeData(originalShipwrightBuild, newShipwrightBuild);\n  if (verb === 'update') {\n    shipwrightBuild.metadata.name = originalShipwrightBuild.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(ShipwrightBuildModel, shipwrightBuild)\n    : k8sCreate(ShipwrightBuildModel, newShipwrightBuild, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateBuildConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalBuildConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    git: { url: repository, type: gitType, ref = 'master', dir: contextDir, secret: secretName },\n    docker: { dockerfilePath },\n    image: { tag: selectedTag, imageEnv },\n    build: { env, triggers, strategy: buildStrategy },\n    labels: userLabels,\n  } = formData;\n  const NAME_LABEL = 'app.kubernetes.io/name';\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const imageStreamNamespace = imageStream && imageStream.metadata.namespace;\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = { ...getGitAnnotations(repository, ref), ...getCommonAnnotations() };\n  let buildStrategyData;\n\n  let desiredContextDir = contextDir;\n  const imageEnvKeys = imageEnv ? Object.keys(imageEnv) : [];\n  const customEnvs = imageEnvKeys\n    .filter((k) => !!imageEnv[k])\n    .map((k) => ({ name: k, value: imageEnv[k] }));\n  const buildEnvs = env.filter((buildEnv) => !imageEnvKeys.includes(buildEnv.name));\n\n  switch (buildStrategy) {\n    case 'Devfile':\n      buildStrategyData = originalBuildConfig?.spec?.strategy || {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      desiredContextDir = originalBuildConfig?.spec?.source?.contextDir || contextDir;\n      break;\n    case 'Docker':\n      buildStrategyData = {\n        dockerStrategy: { env, dockerfilePath },\n      };\n      break;\n    default:\n      buildStrategyData = {\n        sourceStrategy: {\n          env: [...customEnvs, ...buildEnvs],\n          from: {\n            kind: 'ImageStreamTag',\n            name: `${imageStreamName}:${selectedTag}`,\n            namespace: imageStreamNamespace,\n          },\n        },\n      };\n      break;\n  }\n\n  const webhookTriggerData = {\n    type: GitReadableTypes[gitType],\n    [gitType]: {\n      secretReference: { name: `${name}-${gitType}-webhook-secret` },\n    },\n  };\n\n  const excludedGitTypesForTriggers = [GitProvider.UNSURE, GitProvider.GITEA];\n\n  const buildConfigName =\n    verb === 'update' && !_.isEmpty(originalBuildConfig)\n      ? originalBuildConfig.metadata.labels[NAME_LABEL]\n      : name;\n\n  const newBuildConfig = {\n    apiVersion: 'build.openshift.io/v1',\n    kind: 'BuildConfig',\n    metadata: {\n      name: generatedImageStreamName || buildConfigName,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, [NAME_LABEL]: buildConfigName },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      output: {\n        to: {\n          kind: 'ImageStreamTag',\n          name: `${generatedImageStreamName || buildConfigName}:latest`,\n        },\n      },\n      source: {\n        contextDir: desiredContextDir,\n        git: {\n          uri: repository,\n          ref,\n        },\n        ...(secretName ? { sourceSecret: { name: secretName } } : {}),\n      },\n      strategy: {\n        type: buildStrategy,\n        ...buildStrategyData,\n      },\n      triggers: [\n        {\n          type: 'Generic',\n          generic: {\n            secretReference: { name: `${name}-generic-webhook-secret` },\n          },\n        },\n        ...(triggers.webhook && !excludedGitTypesForTriggers.includes(gitType)\n          ? [webhookTriggerData]\n          : []),\n        ...(triggers.image ? [{ type: 'ImageChange', imageChange: {} }] : []),\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n\n  const buildConfig = mergeData(originalBuildConfig, newBuildConfig);\n  if (verb === 'update') {\n    buildConfig.metadata.name = originalBuildConfig.metadata.name;\n  }\n  return verb === 'update'\n    ? k8sUpdate(BuildConfigModel, buildConfig)\n    : k8sCreate(BuildConfigModel, newBuildConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeployment = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeployment?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: {\n      env,\n      replicas,\n      triggers: { image: imageChange },\n    },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const runtimeIcon = imageStream && imageStream.metadata.labels?.[RUNTIME_LABEL];\n  const defaultLabels = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag,\n    runtimeIcon,\n  });\n  const imageName = name;\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n    'alpha.image.policy.openshift.io/resolve-names': '*',\n    ...getTriggerAnnotation(name, imageName, namespace, imageChange),\n  };\n  const podLabels = getPodLabels(Resources.Kubernetes, name);\n  const templateLabels = getTemplateLabels(originalDeployment);\n\n  const newDeployment = {\n    apiVersion: 'apps/v1',\n    kind: 'Deployment',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: {\n        matchLabels: {\n          app: name,\n        },\n      },\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n    },\n  };\n  const deployment = mergeData(originalDeployment, newDeployment);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentModel, deployment)\n    : k8sCreate(DeploymentModel, deployment, dryRun ? dryRunOpt : {});\n};\n\nexport const createOrUpdateDeploymentConfig = (\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  dryRun: boolean,\n  originalDeploymentConfig?: K8sResourceKind,\n  verb: K8sVerb = 'create',\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    project: { name: namespace },\n    application: { name: applicationName },\n    image: { ports, tag: selectedTag },\n    deployment: { env, replicas, triggers },\n    labels: userLabels,\n    limits: { cpu, memory },\n    git: { url: repository, ref },\n    healthChecks,\n  } = formData;\n\n  const imageStreamName = imageStream && imageStream.metadata.name;\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = {\n    ...getCommonAnnotations(),\n    ...getGitAnnotations(repository, ref),\n    ...getRouteAnnotations(),\n  };\n  const podLabels = getPodLabels(Resources.OpenShift, name);\n  const templateLabels = getTemplateLabels(originalDeploymentConfig);\n\n  const newDeploymentConfig = {\n    apiVersion: 'apps.openshift.io/v1',\n    kind: 'DeploymentConfig',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      selector: podLabels,\n      replicas,\n      template: {\n        metadata: {\n          labels: { ...templateLabels, ...userLabels, ...podLabels },\n        },\n        spec: {\n          containers: [\n            {\n              name,\n              image: `${name}:latest`,\n              ports,\n              env,\n              resources: getResourceLimitsData({ cpu, memory }),\n              ...getProbesData(healthChecks),\n            },\n          ],\n        },\n      },\n      triggers: [\n        {\n          type: 'ImageChange',\n          imageChangeParams: {\n            automatic: triggers.image,\n            containerNames: [name],\n            from: {\n              kind: 'ImageStreamTag',\n              name: `${name}:latest`,\n            },\n          },\n        },\n        ...(triggers.config ? [{ type: 'ConfigChange' }] : []),\n      ],\n    },\n  };\n  const deploymentConfig = mergeData(originalDeploymentConfig, newDeploymentConfig);\n\n  return verb === 'update'\n    ? k8sUpdate(DeploymentConfigModel, deploymentConfig)\n    : k8sCreate(DeploymentConfigModel, deploymentConfig, dryRun ? dryRunOpt : {});\n};\n\nexport const managePipelineResources = async (\n  formData: GitImportFormData,\n  pipelineData: PipelineKind,\n): Promise<K8sResourceKind[]> => {\n  const pipelineResources = [];\n  if (!formData) return Promise.resolve([]);\n  const { name, git, pipeline, project, docker, image, build, labels } = formData;\n  let managedPipeline: PipelineKind;\n  const pipelineName = pipelineData?.metadata?.name;\n\n  if (!_.isEmpty(pipelineData) && pipelineName === name) {\n    managedPipeline = await updatePipelineForImportFlow(\n      pipelineData,\n      pipeline.template,\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n  } else if (pipeline.template) {\n    managedPipeline = await createPipelineForImportFlow(\n      name,\n      project.name,\n      git.url,\n      git.ref,\n      git.dir,\n      pipeline,\n      docker.dockerfilePath,\n      image.tag,\n      build.env,\n      labels,\n    );\n    pipelineResources.push(managedPipeline);\n    try {\n      const triggerResources = await createTrigger(managedPipeline, git.detectedType);\n      pipelineResources.push(...triggerResources);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('Error occured while creating triggers', error);\n    }\n  }\n\n  if (git.secret) {\n    const secret = await k8sGet(SecretModel, git.secret, project.name);\n    const gitUrl = GitUrlParse(git.url);\n    secret.metadata.annotations = getSecretAnnotations(\n      {\n        key: 'git',\n        value:\n          gitUrl.protocol === 'ssh' ? gitUrl.resource : `${gitUrl.protocol}://${gitUrl.resource}`,\n      },\n      secret.metadata.annotations,\n    );\n    await k8sUpdate(SecretModel, secret, project.name);\n\n    const pipelineServiceAccount = await k8sGet(\n      ServiceAccountModel,\n      PIPELINE_SERVICE_ACCOUNT,\n      project.name,\n    );\n    if (_.find(pipelineServiceAccount.secrets, (s) => s.name === git.secret) === undefined) {\n      await updateServiceAccount(git.secret, pipelineServiceAccount, false);\n    }\n  }\n\n  if (_.has(managedPipeline?.metadata?.labels, 'app.kubernetes.io/instance')) {\n    try {\n      const pipelineRun = await createPipelineRunForImportFlow(managedPipeline);\n      pipelineResources.push(pipelineRun);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('Failed to create PipelineRun for import flow', error);\n      setPipelineNotStarted(managedPipeline.metadata.name, managedPipeline.metadata.namespace);\n    }\n  }\n  return Promise.all(pipelineResources);\n};\n\nexport const createDevfileResources = async (\n  formData: GitImportFormData,\n  dryRun: boolean,\n  appResources: AppResources,\n  generatedImageStreamName: string = '',\n): Promise<K8sResourceKind[]> => {\n  const verb: K8sVerb = 'create';\n\n  const {\n    name,\n    project: { name: namespace },\n    devfile: { devfileSuggestedResources, devfileProjectType },\n  } = formData;\n\n  const devfileResourceObjects: DevfileSuggestedResources = Object.keys(\n    devfileSuggestedResources,\n  ).reduce((acc: DevfileSuggestedResources, resourceType: string) => {\n    const resource: K8sResourceKind = devfileSuggestedResources[resourceType];\n    if (!resource) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [resourceType]: {\n        ...resource,\n        metadata: {\n          ...resource.metadata,\n          annotations: {\n            ...resource.metadata?.annotations,\n            isFromDevfile: 'true',\n          },\n          name,\n          namespace,\n          labels: {\n            ...resource.metadata?.labels,\n            ...(devfileProjectType ? { [RUNTIME_LABEL]: devfileProjectType } : {}),\n          },\n        },\n      },\n    };\n  }, {} as DevfileSuggestedResources);\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    appResources,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const buildConfigResponse = await createOrUpdateBuildConfig(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.buildResource,\n    verb,\n    generatedImageStreamName,\n  );\n\n  const webhookSecretResponse = await createWebhookSecret(\n    formData,\n    devfileResourceObjects.imageStream,\n    'generic',\n    dryRun,\n  );\n\n  const deploymentResponse = await createOrUpdateDeployment(\n    formData,\n    devfileResourceObjects.imageStream,\n    dryRun,\n    devfileResourceObjects.deployResource,\n    verb,\n  );\n\n  const serviceModelResponse =\n    devfileResourceObjects.service &&\n    (await k8sCreate(\n      ServiceModel,\n      createService(formData, devfileResourceObjects.imageStream, devfileResourceObjects.service),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const routeResponse =\n    devfileResourceObjects.route &&\n    (await k8sCreate(\n      RouteModel,\n      createRoute(formData, devfileResourceObjects.imageStream, devfileResourceObjects.route),\n      dryRun ? dryRunOpt : {},\n    ));\n\n  const devfileResources = [\n    imageStreamResponse,\n    buildConfigResponse,\n    webhookSecretResponse,\n    deploymentResponse,\n  ];\n\n  serviceModelResponse && devfileResources.push(serviceModelResponse);\n  routeResponse && devfileResources.push(routeResponse);\n\n  return devfileResources;\n};\n\nexport const createOrUpdateResources = async (\n  t: TFunction,\n  formData: GitImportFormData,\n  imageStream: K8sResourceKind,\n  createNewProject?: boolean,\n  dryRun: boolean = false,\n  verb: K8sVerb = 'create',\n  appResources?: AppResources,\n): Promise<K8sResourceKind[]> => {\n  const {\n    name,\n    project: { name: namespace },\n    route: { create: canCreateRoute, disable },\n    image: { ports },\n    build: {\n      strategy: buildStrategy,\n      triggers: { webhook: webhookTrigger },\n      option: buildOption,\n    },\n    deployment: {\n      triggers: { image: imageChange },\n    },\n    git: { url: repository, type: gitType, ref },\n    pipeline,\n    resources,\n  } = formData;\n  const imageStreamName = _.get(imageStream, 'metadata.name');\n  const originalRepository =\n    appResources?.buildConfig?.data?.spec?.source?.git?.uri ??\n    appResources?.pipeline?.data?.spec?.params?.find((param) => param?.name === 'GIT_REPO')\n      ?.default;\n  createNewProject && (await createProject(formData.project));\n\n  const responses: K8sResourceKind[] = [];\n  let generatedImageStreamName: string = '';\n  if (\n    resources === Resources.KnativeService &&\n    originalRepository &&\n    originalRepository !== repository\n  ) {\n    generatedImageStreamName = `${name}-${getRandomChars()}`;\n  }\n\n  if (buildStrategy === BuildStrategyType.Devfile) {\n    if (verb !== 'create') {\n      throw new Error(t('devconsole~Cannot update Devfile resources'));\n    }\n    return createDevfileResources(formData, dryRun, appResources, generatedImageStreamName);\n  }\n\n  if (pipeline.type === PipelineType.PAC && formData?.pipeline?.enabled) {\n    const pacRepository = formData?.pac?.repository;\n    const labels = formData?.labels;\n    const repo = await createRepositoryResources(pacRepository, namespace, labels, dryRun);\n    responses.push(repo);\n  }\n\n  const imageStreamResponse = await createOrUpdateImageStream(\n    formData,\n    imageStream,\n    dryRun,\n    appResources,\n    generatedImageStreamName ? 'create' : verb,\n    generatedImageStreamName,\n  );\n  responses.push(imageStreamResponse);\n\n  if (pipeline.enabled && pipeline.type !== PipelineType.PAC) {\n    if (!dryRun) {\n      const pipelineResources = await managePipelineResources(\n        formData,\n        appResources?.pipeline?.data,\n      );\n      responses.push(...pipelineResources);\n    }\n  } else if (buildOption === BuildOptions.BUILDS) {\n    responses.push(\n      await createOrUpdateBuildConfig(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.buildConfig?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  } else if (buildOption === BuildOptions.SHIPWRIGHT_BUILD) {\n    responses.push(\n      await createOrUpdateShipwrightBuild(\n        formData,\n        imageStream,\n        dryRun,\n        appResources?.shipwrightBuild?.data,\n        generatedImageStreamName ? 'create' : verb,\n        generatedImageStreamName,\n      ),\n    );\n  }\n\n  if (verb === 'create') {\n    responses.push(await createWebhookSecret(formData, imageStream, 'generic', dryRun));\n    if (webhookTrigger) {\n      responses.push(await createWebhookSecret(formData, imageStream, gitType, dryRun));\n    }\n  }\n\n  if (formData.resources === Resources.KnativeService) {\n    const imageStreamURL = imageStreamResponse.status.dockerImageRepository;\n\n    const originalAnnotations = appResources?.editAppResource?.data?.metadata?.annotations || {};\n    const triggerAnnotations = getTriggerAnnotation(\n      name,\n      generatedImageStreamName || name,\n      namespace,\n      imageChange,\n    );\n    const annotations =\n      Object.keys(originalAnnotations).length > 0\n        ? {\n            ...originalAnnotations,\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          }\n        : {\n            ...originalAnnotations,\n            ...getCommonAnnotations(),\n            ...getRouteAnnotations(),\n            ...getGitAnnotations(repository, ref),\n            ...triggerAnnotations,\n          };\n    const knDeploymentResource = getKnativeServiceDepResource(\n      formData,\n      imageStreamURL,\n      imageStreamName,\n      undefined,\n      undefined,\n      annotations,\n      _.get(appResources, 'editAppResource.data'),\n      generatedImageStreamName,\n    );\n    const domainMappingResources = await getDomainMappingRequests(\n      formData,\n      knDeploymentResource,\n      dryRun,\n    );\n    const knativeResources = await Promise.all([\n      verb === 'update'\n        ? k8sUpdate(KnServiceModel, knDeploymentResource, null, null, dryRun ? dryRunOpt : {})\n        : k8sCreate(KnServiceModel, knDeploymentResource, dryRun ? dryRunOpt : {}),\n      ...domainMappingResources,\n    ]);\n    return [...knativeResources, ...responses];\n  }\n\n  if (formData.resources === Resources.Kubernetes) {\n    responses.push(\n      await createOrUpdateDeployment(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  } else if (formData.resources === Resources.OpenShift) {\n    responses.push(\n      await createOrUpdateDeploymentConfig(\n        formData,\n        imageStream,\n        dryRun,\n        _.get(appResources, 'editAppResource.data'),\n        verb,\n      ),\n    );\n  }\n\n  if (\n    !_.isEmpty(ports) ||\n    buildStrategy === BuildStrategyType.Docker ||\n    buildStrategy === BuildStrategyType.Source\n  ) {\n    const originalService = _.get(appResources, 'service.data');\n    const service = createService(formData, imageStream, originalService);\n\n    if (verb === 'create') {\n      responses.push(await k8sCreate(ServiceModel, service, dryRun ? dryRunOpt : {}));\n    } else if (verb === 'update' && !_.isEmpty(originalService)) {\n      responses.push(await k8sUpdate(ServiceModel, service));\n    }\n\n    const originalRoute = _.get(appResources, 'route.data');\n    const route = createRoute(formData, imageStream, originalRoute);\n    if (verb === 'update' && disable) {\n      responses.push(await k8sUpdate(RouteModel, route, namespace, name));\n    } else if (canCreateRoute) {\n      responses.push(await k8sCreate(RouteModel, route, dryRun ? dryRunOpt : {}));\n    }\n  }\n\n  return responses;\n};\n\nexport const filterDeployedResources = (resources: K8sResourceKind[]) =>\n  resources.filter(\n    (resource) =>\n      resource.kind === DeploymentModel.kind ||\n      resource.kind === DeploymentConfigModel.kind ||\n      (resource.kind === KnServiceModel.kind &&\n        resource.apiVersion === `${KnServiceModel.apiGroup}/${KnServiceModel.apiVersion}`),\n  );\n\nexport const addSearchParamsToRelativeURL = (\n  url: string,\n  searchParams?: URLSearchParams,\n): string => {\n  const urlObj = new URL(url, 'thismessage:/'); // ITEF RFC 2557 section 5 (e)\n\n  urlObj.search = new URLSearchParams({\n    ...Object.fromEntries(urlObj.searchParams),\n    ...(searchParams ? Object.fromEntries(searchParams) : {}),\n  }).toString();\n\n  return urlObj.toString().replace(urlObj.protocol, '');\n};\n\nexport const handleRedirect = async (\n  project: string,\n  perspective: string,\n  perspectiveExtensions: Perspective[],\n  searchParamOverrides?: URLSearchParams,\n) => {\n  const perspectiveData = perspectiveExtensions.find((item) => item.properties.id === perspective);\n  const redirectURL = (await perspectiveData.properties.importRedirectURL())(project);\n\n  if (searchParamOverrides) {\n    history.push(addSearchParamsToRelativeURL(redirectURL, searchParamOverrides));\n  } else {\n    history.push(redirectURL);\n  }\n};\n\nexport const isRouteAdvOptionsUsed = (\n  type: string,\n  routeData: RouteData,\n  ksvcRouteData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && routeData) {\n    if (!!routeData.hostname || !!routeData.path || !routeData.secure) return true;\n    if (routeData?.tls) {\n      for (const tlsKey in routeData.tls) {\n        if (routeData.tls.hasOwnProperty(tlsKey)) {\n          if (\n            ['caCertificate', 'certificate', 'destinationCACertificate', 'key'].includes(tlsKey) &&\n            !!routeData.tls[tlsKey]\n          )\n            return true;\n          if (tlsKey === 'insecureEdgeTerminationPolicy' && routeData.tls[tlsKey] !== 'None')\n            return true;\n          if (tlsKey === 'termination' && routeData.tls[tlsKey] !== 'reencrypt') return true;\n        }\n      }\n    }\n    return false;\n  }\n  if (ksvcRouteData.domainMapping?.length > 0) return true;\n  return false;\n};\n\nexport const isScalingAdvOptions = (\n  type: string,\n  scalingData: DeploymentData,\n  ksvcData: ServerlessData,\n): boolean => {\n  if (type !== Resources.KnativeService && scalingData?.replicas > 1) {\n    return true;\n  }\n  const ksvcScalingData = ksvcData?.scaling;\n  if (ksvcScalingData) {\n    for (const scKey in ksvcScalingData) {\n      if (ksvcScalingData.hasOwnProperty(scKey)) {\n        if (['concurrencylimit', 'maxpods', 'minpods'].includes(scKey) && !!ksvcScalingData[scKey])\n          return true;\n        if (\n          scKey === 'concurrencytarget' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencytarget\n        )\n          return true;\n        if (\n          scKey === 'concurrencyutilization' &&\n          ksvcScalingData[scKey] !== ksvcScalingData.defaultConcurrencyutilization\n        )\n          return true;\n        if (scKey === 'autoscale' && ksvcScalingData[scKey]) {\n          const autoscaleData = ksvcScalingData[scKey];\n          for (const asKey in autoscaleData) {\n            if (autoscaleData.hasOwnProperty(asKey)) {\n              if (\n                asKey === 'autoscalewindow' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindow\n              )\n                return true;\n              if (\n                asKey === 'autoscalewindowUnit' &&\n                autoscaleData[asKey] !== autoscaleData.defaultAutoscalewindowUnit\n              )\n                return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const isResourceLimitAdvOptions = (resLimits: LimitsData): boolean => {\n  const isLimitUsed = (resLimitObj) => {\n    for (const limitKey in resLimitObj) {\n      if (resLimitObj.hasOwnProperty(limitKey)) {\n        if (['limit', 'request'].includes(limitKey) && !!resLimitObj[limitKey]) return true;\n        if (limitKey === 'limitUnit' && resLimitObj[limitKey] !== resLimitObj.defaultLimitUnit)\n          return true;\n        if (limitKey === 'requestUnit' && resLimitObj[limitKey] !== resLimitObj.defaultRequestUnit)\n          return true;\n      }\n    }\n    return false;\n  };\n\n  if (isLimitUsed(resLimits.cpu) || isLimitUsed(resLimits.memory)) return true;\n  return false;\n};\n\nexport const getTelemetryImport = (values: GitImportFormData) => {\n  if (!values) return {};\n  // get devfile data if exists\n  let devfileJson;\n  if (values.devfile?.devfileContent) {\n    devfileJson = safeYAMLToJS(values.devfile.devfileContent);\n  }\n  const applicationType =\n    (!values.application?.selectedKey && values.application?.name) ||\n    values.application?.selectedKey === values.application?.name\n      ? 'default'\n      : values.application?.selectedKey === CREATE_APPLICATION_KEY && !!values.application?.name\n      ? 'custom'\n      : 'none';\n  const resourceType =\n    values.resources === Resources.Kubernetes\n      ? 'Deployment'\n      : values.resources === Resources.OpenShift\n      ? 'DeploymentConfig'\n      : values.resources === Resources.KnativeService && 'Knative Service';\n  const selStrategy = values.import?.selectedStrategy?.name;\n  const telemetryImportData = {\n    useRecommended: values.image?.recommended === values.image?.selected,\n    recommendedStrategy: values.import?.recommendedStrategy?.name,\n    recommendedBuilderImage: values.image?.recommended,\n    strategy: selStrategy,\n    builderImage: values.image?.selected,\n\n    devFileLanguage: devfileJson?.metadata?.projectType || '',\n    devFileProjectType: devfileJson?.metadata?.language || '',\n\n    application: applicationType,\n\n    resource: resourceType,\n\n    targetPortChanged: !!values.route?.unknownTargetPort,\n\n    // currently run command is being used only for Node app\n    useRunCommand: !!values.image?.imageEnv?.NPM_RUN,\n\n    useAdvancedOptionsGit: values.git.dir !== '/' || !!values.git.ref || !!values.git.secret,\n\n    useAdvancedOptionsBuild:\n      values.build?.env.length > 0 || _.some(values.build?.triggers, (key) => !key),\n    useAdvancedOptionsDeployment:\n      selStrategy !== 'Devfile' &&\n      (values.deployment?.env.length > 0 || !values.deployment?.triggers?.image),\n    useAdvancedOptionsRoute: isRouteAdvOptionsUsed(\n      values.resources,\n      values.route,\n      values.serverless,\n    ),\n    useAdvancedOptionsHealthChecks:\n      values.healthChecks?.livenessProbe?.enabled ||\n      values.healthChecks?.readinessProbe?.enabled ||\n      values.healthChecks?.startupProbe?.enabled,\n    useAdvancedOptionsScaling: isScalingAdvOptions(\n      values.resources,\n      values.deployment,\n      values.serverless,\n    ),\n    useAdvancedOptionsResourceLimits: isResourceLimitAdvOptions(values.limits),\n    useAdvancedOptionsLabels: !_.isEmpty(values.labels),\n  };\n\n  return telemetryImportData;\n};\n","import * as _ from 'lodash';\nimport { k8sCreate, k8sUpdate } from '@console/internal/module/k8s';\nimport {\n  NameValueFromPair,\n  NameValuePair,\n} from '@console/shared/src/components/formik-fields/field-types';\nimport {\n  PIPELINE_RUNTIME_LABEL,\n  PIPELINE_RUNTIME_VERSION_LABEL,\n  PIPELINE_STRATEGY_LABEL,\n} from '../../../const';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind, TektonParam, TektonWorkspace } from '../../../types';\nimport { VolumeTypes } from '../../pipelines/const';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getServerlessFunctionDefaultPersistentVolumeClaim,\n} from '../../pipelines/modals/common/utils';\nimport { submitStartPipeline } from '../../pipelines/modals/start-pipeline/submit-utils';\nimport { StartPipelineFormValues } from '../../pipelines/modals/start-pipeline/types';\nimport { createPipelineResource } from '../../pipelines/pipeline-resource/pipelineResource-utils';\nimport { PipelineData } from '../import-types';\n\nconst getImageUrl = (name: string, namespace: string) => {\n  return `image-registry.openshift-image-registry.svc:5000/${namespace}/${name}`;\n};\n\nexport const createGitResource = (url: string, namespace: string, ref: string = 'master') => {\n  const params = { url, revision: ref };\n  return createPipelineResource(params, 'git', namespace);\n};\n\nexport const createImageResource = (name: string, namespace: string) => {\n  const params = {\n    url: getImageUrl(name, namespace),\n  };\n\n  return createPipelineResource(params, 'image', namespace);\n};\n\nexport const getPipelineParams = (\n  params: TektonParam[],\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: any,\n) => {\n  return (params || []).map((param) => {\n    switch (param.name) {\n      case 'APP_NAME':\n        return { ...param, default: name };\n      case 'GIT_REPO':\n        return { ...param, default: gitUrl };\n      case 'GIT_REVISION':\n        return { ...param, default: gitRef || '' };\n      case 'PATH_CONTEXT':\n        return { ...param, default: gitDir.replace(/^\\//, '') || param.default };\n      case 'IMAGE_NAME':\n        return { ...param, default: getImageUrl(name, namespace) };\n      case 'DOCKERFILE':\n        return { ...param, default: dockerfilePath };\n      case 'VERSION':\n        return { ...param, default: tag || param.default };\n      case 'BUILD_ENVS':\n        return { ...param, default: buildEnv || param.default };\n      default:\n        return param;\n    }\n  });\n};\n\nexport const pipelineRuntimeOrVersionChanged = (\n  template: PipelineKind,\n  pipeline: PipelineKind,\n): boolean =>\n  template.metadata?.labels[PIPELINE_RUNTIME_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_LABEL] ||\n  template.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL] !==\n    pipeline.metadata?.labels[PIPELINE_RUNTIME_VERSION_LABEL];\n\nexport const isDockerPipeline = (template: PipelineKind): boolean =>\n  template?.metadata?.labels?.[PIPELINE_STRATEGY_LABEL] === 'docker';\n\nexport const createPipelineForImportFlow = async (\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  pipeline: PipelineData,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n) => {\n  const template = _.cloneDeep(pipeline.template);\n\n  template.metadata = {\n    name: `${name}`,\n    namespace,\n    labels: {\n      ...template.metadata?.labels,\n      ...labels,\n      'app.kubernetes.io/instance': name,\n      'app.kubernetes.io/name': name,\n      ...(!isDockerPipeline(template) && {\n        [PIPELINE_RUNTIME_VERSION_LABEL]: tag,\n      }),\n    },\n  };\n\n  template.spec.params =\n    template.spec.params &&\n    getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n\n  return k8sCreate(PipelineModel, template, { ns: namespace });\n};\n\nexport const createPipelineRunForImportFlow = async (\n  pipeline: PipelineKind,\n): Promise<PipelineRunKind> => {\n  const isServerlessFunctionPipeline =\n    pipeline?.metadata?.labels?.['function.knative.dev'] === 'true';\n  const pipelineInitialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline),\n    workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n      ...workspace,\n      type: VolumeTypes.VolumeClaimTemplate,\n      data: isServerlessFunctionPipeline\n        ? getServerlessFunctionDefaultPersistentVolumeClaim(pipeline?.metadata?.name)\n        : getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n    })),\n    secretOpen: false,\n  };\n  return submitStartPipeline(pipelineInitialValues, pipeline);\n};\nexport const updatePipelineForImportFlow = async (\n  pipeline: PipelineKind,\n  template: PipelineKind,\n  name: string,\n  namespace: string,\n  gitUrl: string,\n  gitRef: string,\n  gitDir: string,\n  dockerfilePath: string,\n  tag: string,\n  buildEnv: (NameValuePair | NameValueFromPair)[],\n  labels: { [key: string]: string } = {},\n): Promise<PipelineKind> => {\n  let updatedPipeline = _.cloneDeep(pipeline);\n\n  if (!template) {\n    updatedPipeline.metadata.labels = _.omit(\n      { ...updatedPipeline.metadata.labels, ...labels },\n      'app.kubernetes.io/instance',\n    );\n  } else {\n    if (pipelineRuntimeOrVersionChanged(template, pipeline)) {\n      updatedPipeline = _.cloneDeep(template);\n      updatedPipeline.metadata = {\n        resourceVersion: pipeline.metadata.resourceVersion,\n        name: `${name}`,\n        namespace,\n        labels: {\n          ...template.metadata?.labels,\n          ...labels,\n          'app.kubernetes.io/instance': name,\n          'app.kubernetes.io/name': name,\n          ...(!isDockerPipeline(template) && { [PIPELINE_RUNTIME_VERSION_LABEL]: tag }),\n        },\n      };\n    }\n\n    updatedPipeline.spec.params = getPipelineParams(\n      template.spec.params,\n      name,\n      namespace,\n      gitUrl,\n      gitRef,\n      gitDir,\n      dockerfilePath,\n      tag,\n      buildEnv,\n    );\n  }\n  return k8sUpdate(PipelineModel, updatedPipeline, namespace, name);\n};\n","import * as React from 'react';\nimport { Divider } from '@patternfly/react-core';\nimport { ListPage } from '@console/internal/components/factory';\nimport { ProjectsTable } from '@console/internal/components/namespace';\nimport { PageHeading } from '@console/internal/components/utils';\nimport './ProjectListPage.scss';\n\nexport type ProjectListPageProps = {\n  title: string;\n  listComponent?: React.ComponentType<any>;\n  children?: React.ReactNode;\n  badge?: React.ReactNode;\n};\nconst ProjectListPage: React.FC<ProjectListPageProps> = ({\n  badge,\n  title,\n  children,\n  listComponent,\n  ...listPageProps\n}) => (\n  <div className=\"odc-project-list-page\">\n    <PageHeading title={title} badge={badge}>\n      {children}\n    </PageHeading>\n    <Divider className=\"co-divider\" />\n    <ListPage\n      {...listPageProps}\n      showTitle={false}\n      kind=\"Project\"\n      ListComponent={listComponent || ProjectsTable}\n      canCreate={false}\n      filterLabel=\"by name or display name\"\n      textFilter=\"project-name\"\n    />\n  </div>\n);\n\nexport default ProjectListPage;\n","import * as React from 'react';\nimport { AsyncComponent } from '../utils';\n\nexport const OverviewListPageLoader = () =>\n  import('./OverviewListPage' /* webpackChunkName: \"overview-list-page\" */).then(\n    (m) => m.OverviewListPage,\n  );\n\nexport const OverviewListPage: React.FC = (props) => {\n  return <AsyncComponent loader={OverviewListPageLoader} {...props} />;\n};\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle, Button } from '@patternfly/react-core';\nimport DetailsBody from '@console/shared/src/components/dashboard/details-card/DetailsBody';\nimport { OverviewDetailItem } from '@openshift-console/plugin-shared/src';\nimport { getName, getRequester, GreenCheckCircleIcon } from '@console/shared';\nimport { LabelList, resourcePathFromModel } from '../../utils';\nimport { ProjectModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { Link } from 'react-router-dom-v5-compat';\n\nexport const DetailsCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const keys = _.keys(obj.metadata.labels).sort();\n  const labelsSubset = _.take(keys, 3);\n  const firstThreelabels = _.pick(obj.metadata.labels, labelsSubset);\n  const description = obj.metadata.annotations?.['openshift.io/description'];\n  const detailsLink = `${resourcePathFromModel(ProjectModel, obj.metadata.name)}/details`;\n  const serviceMeshEnabled = obj.metadata?.labels?.['maistra.io/member-of'];\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"details-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={detailsLink} data-test=\"details-card-view-all\">\n                {t('public~View all')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Details')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <DetailsBody>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Name')}>\n            {getName(obj)}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Requester')}>\n            {getRequester(obj) || <span className=\"text-muted\">{t('public~No requester')}</span>}\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Labels')}>\n            <div className=\"co-project-dashboard__details-labels\">\n              <LabelList kind={ProjectModel.kind} labels={firstThreelabels} />\n              {keys.length > 3 && (\n                <Button variant=\"link\">\n                  <Link to={detailsLink}>{t('public~View all')}</Link>\n                </Button>\n              )}\n            </div>\n          </OverviewDetailItem>\n          <OverviewDetailItem isLoading={!obj} title={t('public~Description')}>\n            <span\n              className={cx({\n                'text-muted': !description,\n                'co-project-dashboard-details-card__description': description,\n              })}\n            >\n              {description || t('public~No description')}\n            </span>\n          </OverviewDetailItem>\n          {serviceMeshEnabled && (\n            <OverviewDetailItem isLoading={!obj} title={t('public~Service mesh')}>\n              <GreenCheckCircleIcon /> {t('public~Service mesh enabled')}\n            </OverviewDetailItem>\n          )}\n        </DetailsBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle, Gallery } from '@patternfly/react-core';\nimport HealthBody from '@console/shared/src/components/dashboard/status-card/HealthBody';\nimport { Status } from '@console/shared';\nimport { LoadingInline } from '@console/internal/components/utils/status-box';\nimport {\n  DashboardsOverviewHealthResourceSubsystem,\n  DashboardsOverviewHealthSubsystem,\n  isDashboardsOverviewHealthResourceSubsystem,\n  isDashboardsOverviewHealthSubsystem,\n  useExtensions,\n} from '@console/plugin-sdk';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceHealthItem } from '../dashboards-page/cluster-dashboard/health-item';\n\nimport { DashboardAlerts } from '../dashboards-page/cluster-dashboard/status-card';\n\nexport const StatusCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const filterSubsystems = (subsystems: DashboardsOverviewHealthSubsystem[]) =>\n    subsystems.filter(isDashboardsOverviewHealthResourceSubsystem);\n  const subsystemExtensions = useExtensions<DashboardsOverviewHealthSubsystem>(\n    isDashboardsOverviewHealthSubsystem,\n  );\n  const subsystem: DashboardsOverviewHealthResourceSubsystem = React.useMemo(\n    () =>\n      filterSubsystems(subsystemExtensions).find(\n        (s) => s.properties.title === 'Image Vulnerabilities',\n      ),\n    [subsystemExtensions],\n  );\n  const {\n    metadata: { name: namespace },\n  } = obj;\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"status-card\" className=\"co-overview-card--gradient\">\n      <CardHeader>\n        <CardTitle>{t('public~Status')}</CardTitle>\n      </CardHeader>\n      {obj ? (\n        <>\n          <HealthBody>\n            <Gallery className=\"co-overview-status__health\" hasGutter>\n              <div className=\"co-status-card__health-item\" data-test=\"project-status\">\n                <Status status={obj.status?.phase} className=\"co-icon-and-text--lg\" />\n              </div>\n              {subsystem && (\n                <ResourceHealthItem subsystem={subsystem.properties} namespace={namespace} />\n              )}\n            </Gallery>\n          </HealthBody>\n          <DashboardAlerts labelSelector={{ namespace }} />\n        </>\n      ) : (\n        <LoadingInline />\n      )}\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport UtilizationBody from '@console/shared/src/components/dashboard/utilization-card/UtilizationBody';\nimport { ByteDataTypes } from '@console/shared/src/graph-helper/data-utils';\nimport {\n  isProjectOverviewUtilizationItem,\n  ProjectOverviewUtilizationItem,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport {\n  humanizeBinaryBytes,\n  humanizeCpuCores,\n  humanizeDecimalBytesPerSec,\n  humanizeNumber,\n} from '../../utils';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  getUtilizationQueries,\n  ProjectQueries,\n  getMultilineQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport {\n  PrometheusUtilizationItem,\n  PrometheusMultilineUtilizationItem,\n} from '../dashboards-page/cluster-dashboard/utilization-card';\nimport { UtilizationDurationDropdown } from '@console/shared/src/components/dashboard/utilization-card/UtilizationDurationDropdown';\nimport {\n  CPUPopover,\n  FilesystemPopover,\n  MemoryPopover,\n  NetworkInPopover,\n  NetworkOutPopover,\n  ProjectUtilizationContext,\n} from './utilization-popovers';\n\nconst networkPopovers = [NetworkInPopover, NetworkOutPopover];\n\nexport const UtilizationCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = obj?.metadata?.name;\n  const [queries, multilineQueries] = React.useMemo(\n    () => [getUtilizationQueries(projectName), getMultilineQueries(projectName)],\n    [projectName],\n  );\n\n  const [dynamicItemExtensions] = useResolvedExtensions<ProjectOverviewUtilizationItem>(\n    isProjectOverviewUtilizationItem,\n  );\n\n  return (\n    <Card data-test-id=\"utilization-card\" isClickable isSelectable>\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <UtilizationDurationDropdown />\n            </>\n          ),\n          hasNoOffset: false,\n          className: undefined,\n        }}\n      >\n        <CardTitle>{t('public~Utilization')}</CardTitle>\n      </CardHeader>\n      <UtilizationBody>\n        <ProjectUtilizationContext.Provider value={projectName}>\n          <PrometheusUtilizationItem\n            title={t('public~CPU')}\n            humanizeValue={humanizeCpuCores}\n            utilizationQuery={queries[ProjectQueries.CPU_USAGE]}\n            requestQuery={queries[ProjectQueries.CPU_REQUESTS]}\n            TopConsumerPopover={CPUPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Memory')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.MEMORY_USAGE]}\n            requestQuery={queries[ProjectQueries.MEMORY_REQUESTS]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={MemoryPopover}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Filesystem')}\n            humanizeValue={humanizeBinaryBytes}\n            utilizationQuery={queries[ProjectQueries.FILESYSTEM_USAGE]}\n            byteDataType={ByteDataTypes.BinaryBytes}\n            TopConsumerPopover={FilesystemPopover}\n            namespace={projectName}\n          />\n          <PrometheusMultilineUtilizationItem\n            title={t('public~Network transfer')}\n            humanizeValue={humanizeDecimalBytesPerSec}\n            queries={multilineQueries[ProjectQueries.NETWORK_UTILIZATION]}\n            TopConsumerPopovers={networkPopovers}\n            namespace={projectName}\n          />\n          <PrometheusUtilizationItem\n            title={t('public~Pod count')}\n            humanizeValue={humanizeNumber}\n            utilizationQuery={queries[ProjectQueries.POD_COUNT]}\n            namespace={projectName}\n          />\n          {dynamicItemExtensions.map(({ uid, properties }) => (\n            <PrometheusUtilizationItem\n              key={uid}\n              title={properties.title}\n              humanizeValue={properties.humanize}\n              utilizationQuery={properties.getUtilizationQuery(projectName)}\n              requestQuery={properties.getRequestQuery?.(projectName)}\n              limitQuery={properties.getLimitQuery?.(projectName)}\n              totalQuery={properties.getTotalQuery?.(projectName)}\n              namespace={projectName}\n              TopConsumerPopover={properties.TopConsumerPopover}\n            />\n          ))}\n        </ProjectUtilizationContext.Provider>\n      </UtilizationBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport {\n  getTop25ConsumerQueries,\n  OverviewQuery,\n} from '@console/shared/src/promql/cluster-dashboard';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport { ProjectModel, PodModel, NodeModel } from '../../../../models';\nimport {\n  humanizeCpuCores,\n  humanizeBinaryBytes,\n  humanizeNumber,\n  humanizeDecimalBytesPerSec,\n} from '../../../utils';\n\nexport const ClusterUtilizationContext = React.createContext('.+');\n\nconst useConsumers = (\n  nsQuery: OverviewQuery,\n  podQuery: OverviewQuery,\n  nodeQuery: OverviewQuery,\n) => {\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  return React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[nsQuery],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[podQuery],\n        model: PodModel,\n        metric: 'pod',\n      },\n      {\n        query: consumerQueries[nodeQuery],\n        model: NodeModel,\n        metric: 'instance',\n      },\n    ];\n  }, [nodeQuery, nodeType, nsQuery, podQuery]);\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_CPU,\n    OverviewQuery.PODS_BY_CPU,\n    OverviewQuery.NODES_BY_CPU,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeCpuCores}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_MEMORY,\n    OverviewQuery.PODS_BY_MEMORY,\n    OverviewQuery.NODES_BY_MEMORY,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const StoragePopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_STORAGE,\n    OverviewQuery.PODS_BY_STORAGE,\n    OverviewQuery.NODES_BY_STORAGE,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeBinaryBytes}\n    />\n  );\n};\n\nexport const PodPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const nodeType = React.useContext(ClusterUtilizationContext);\n  const consumers = React.useMemo(() => {\n    const consumerQueries = getTop25ConsumerQueries(nodeType);\n    return [\n      {\n        query: consumerQueries[OverviewQuery.PROJECTS_BY_PODS],\n        model: ProjectModel,\n        metric: 'namespace',\n      },\n      {\n        query: consumerQueries[OverviewQuery.NODES_BY_PODS],\n        model: NodeModel,\n        metric: 'node',\n      },\n    ];\n  }, [nodeType]);\n  return (\n    <ConsumerPopover\n      title={t('public~Pod count')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeNumber}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_IN,\n    OverviewQuery.PODS_BY_NETWORK_IN,\n    OverviewQuery.NODES_BY_NETWORK_IN,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(\n    OverviewQuery.PROJECTS_BY_NETWORK_OUT,\n    OverviewQuery.PODS_BY_NETWORK_OUT,\n    OverviewQuery.NODES_BY_NETWORK_OUT,\n  );\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      consumers={consumers}\n      humanize={humanizeDecimalBytesPerSec}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TopConsumerPopoverProps } from '@console/dynamic-plugin-sdk';\nimport ConsumerPopover from '@console/shared/src/components/dashboard/utilization-card/TopConsumerPopover';\nimport {\n  ProjectQueries,\n  getTopConsumerQueries,\n} from '@console/shared/src/promql/project-dashboard';\nimport { PodModel } from '../../../models';\nimport { humanizeCpuCores, humanizeBinaryBytes, humanizeDecimalBytesPerSec } from '../../utils';\n\nexport const ProjectUtilizationContext = React.createContext('');\n\nconst useConsumers = (query: ProjectQueries) => {\n  const namespace = React.useContext(ProjectUtilizationContext);\n  const consumers = React.useMemo(\n    () => [\n      {\n        query: getTopConsumerQueries(namespace)[query],\n        model: PodModel,\n        metric: 'pod',\n      },\n    ],\n    [query, namespace],\n  );\n  return {\n    consumers,\n    namespace,\n  };\n};\n\nexport const CPUPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_CPU);\n  return (\n    <ConsumerPopover\n      title={t('public~CPU')}\n      current={current}\n      humanize={humanizeCpuCores}\n      {...consumers}\n    />\n  );\n};\n\nexport const MemoryPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_MEMORY);\n  return (\n    <ConsumerPopover\n      title={t('public~Memory')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const FilesystemPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_FILESYSTEM);\n  return (\n    <ConsumerPopover\n      title={t('public~Filesystem')}\n      current={current}\n      humanize={humanizeBinaryBytes}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkInPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_IN);\n  return (\n    <ConsumerPopover\n      title={t('public~Network in')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n\nexport const NetworkOutPopover: React.FC<TopConsumerPopoverProps> = ({ current }) => {\n  const { t } = useTranslation();\n  const consumers = useConsumers(ProjectQueries.PODS_BY_NETWORK_OUT);\n  return (\n    <ConsumerPopover\n      title={t('public~Network out')}\n      current={current}\n      humanize={humanizeDecimalBytesPerSec}\n      {...consumers}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport {\n  PodModel,\n  DeploymentModel,\n  DeploymentConfigModel,\n  PersistentVolumeClaimModel,\n  ServiceModel,\n  StatefulSetModel,\n  RouteModel,\n  ConfigMapModel,\n  SecretModel,\n  VolumeSnapshotModel,\n} from '../../../models';\nimport {\n  ResourceInventoryItem,\n  StatusGroupMapper,\n} from '@console/shared/src/components/dashboard/inventory-card/InventoryItem';\nimport {\n  getPodStatusGroups,\n  getPVCStatusGroups,\n  getVSStatusGroups,\n} from '@console/shared/src/components/dashboard/inventory-card/utils';\nimport { FirehoseResult, FirehoseResource, useAccessReview } from '../../utils';\nimport { K8sKind, referenceForModel } from '../../../module/k8s';\nimport { getName } from '@console/shared';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport {\n  useExtensions,\n  ProjectDashboardInventoryItem,\n  isProjectDashboardInventoryItem,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsProjectOverviewInventoryItem as DynamicProjectDashboardInventoryItem,\n  isDashboardsProjectOverviewInventoryItem as isDynamicProjectDashboardInventoryItem,\n  K8sResourceCommon,\n  WatchK8sResources,\n  ProjectOverviewInventoryItem,\n  isProjectOverviewInventoryItem,\n} from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ErrorBoundary } from '@console/shared/src/components/error';\n\nconst createFirehoseResource = (model: K8sKind, projectName: string): FirehoseResource => ({\n  kind: model.crd ? referenceForModel(model) : model.kind,\n  isList: true,\n  prop: 'resource',\n  namespace: projectName,\n});\n\nconst ProjectInventoryItem = withDashboardResources(\n  ({\n    projectName,\n    watchK8sResource,\n    stopWatchK8sResource,\n    resources,\n    model,\n    mapper,\n    additionalResources,\n    additionalDynamicResources,\n  }: ProjectInventoryItemProps) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const resource = createFirehoseResource(model, projectName);\n        watchK8sResource(resource);\n        if (additionalResources) {\n          additionalResources.forEach((r) => watchK8sResource({ ...r, namespace: projectName }));\n        }\n        return () => {\n          stopWatchK8sResource(resource);\n          if (additionalResources) {\n            additionalResources.forEach(stopWatchK8sResource);\n          }\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName, model, additionalResources]);\n\n    const resourceData = _.get(resources.resource, 'data', []) as FirehoseResult['data'];\n    const resourceLoaded = _.get(resources.resource, 'loaded');\n    const resourceLoadError = _.get(resources.resource, 'loadError');\n\n    const additionalResourcesData = additionalResources\n      ? additionalResources.reduce((acc, r) => {\n          acc[r.prop] = _.get(resources[r.prop], 'data');\n          return acc;\n        }, {})\n      : {};\n    const additionalResourcesLoaded = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .every((r) => _.get(resources[r.prop], 'loaded'))\n      : true;\n    const additionalResourcesLoadError = additionalResources\n      ? additionalResources\n          .filter((r) => !r.optional)\n          .some((r) => !!_.get(resources[r.prop], 'loadError'))\n      : false;\n\n    const dynamicResources = useK8sWatchResources(additionalDynamicResources || {});\n    const dynamicResourcesError = Object.values(dynamicResources).find((r) => r.loadError)\n      ?.loadError;\n    const dynamicResourcesLoaded = Object.keys(dynamicResources).every(\n      (key) => dynamicResources[key].loaded,\n    );\n\n    return (\n      <StackItem>\n        <ResourceInventoryItem\n          kind={model}\n          isLoading={\n            !projectName || !resourceLoaded || !additionalResourcesLoaded || !dynamicResourcesLoaded\n          }\n          namespace={projectName}\n          error={!!resourceLoadError || additionalResourcesLoadError || dynamicResourcesError}\n          resources={resourceData}\n          additionalResources={additionalResourcesData}\n          mapper={mapper}\n          dataTest=\"resource-inventory-item\"\n        />\n      </StackItem>\n    );\n  },\n);\n\nexport const InventoryCard = () => {\n  const itemExtensions = useExtensions<ProjectDashboardInventoryItem>(\n    isProjectDashboardInventoryItem,\n  );\n  const [dynamicItemExtensions] = useResolvedExtensions<DynamicProjectDashboardInventoryItem>(\n    isDynamicProjectDashboardInventoryItem,\n  );\n  const [inventoryExtensions] = useResolvedExtensions<ProjectOverviewInventoryItem>(\n    isProjectOverviewInventoryItem,\n  );\n\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const canListSecrets = useAccessReview({\n    group: SecretModel.apiGroup,\n    resource: SecretModel.plural,\n    namespace: projectName,\n    verb: 'list',\n  });\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"inventory-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Inventory')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Stack hasGutter>\n          <ProjectInventoryItem projectName={projectName} model={DeploymentModel} />\n          <ProjectInventoryItem projectName={projectName} model={DeploymentConfigModel} />\n          <ProjectInventoryItem projectName={projectName} model={StatefulSetModel} />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PodModel}\n            mapper={getPodStatusGroups}\n          />\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={PersistentVolumeClaimModel}\n            mapper={getPVCStatusGroups}\n          />\n          <ProjectInventoryItem projectName={projectName} model={ServiceModel} />\n          <ProjectInventoryItem projectName={projectName} model={RouteModel} />\n          <ProjectInventoryItem projectName={projectName} model={ConfigMapModel} />\n          {canListSecrets && <ProjectInventoryItem projectName={projectName} model={SecretModel} />}\n          <ProjectInventoryItem\n            projectName={projectName}\n            model={VolumeSnapshotModel}\n            mapper={getVSStatusGroups}\n          />\n          {itemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalResources={item.properties.additionalResources}\n            />\n          ))}\n          {dynamicItemExtensions.map((item) => (\n            <ProjectInventoryItem\n              key={item.properties.model.kind}\n              projectName={projectName}\n              model={item.properties.model}\n              mapper={item.properties.mapper}\n              additionalDynamicResources={item.properties.additionalResources}\n            />\n          ))}\n          {inventoryExtensions.map(({ uid, properties: { component: Component } }) => (\n            <ErrorBoundary key={uid}>\n              <StackItem>\n                <Component projectName={projectName} />\n              </StackItem>\n            </ErrorBoundary>\n          ))}\n        </Stack>\n      </CardBody>\n    </Card>\n  );\n};\n\ntype ProjectInventoryItemProps = DashboardItemProps & {\n  projectName: string;\n  model: K8sKind;\n  mapper?: StatusGroupMapper;\n  additionalResources?: FirehoseResource[];\n  additionalDynamicResources?: WatchK8sResources<{\n    [key: string]: K8sResourceCommon[];\n  }>;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardTitle } from '@patternfly/react-core';\nimport ActivityBody, {\n  RecentEventsBody,\n  OngoingActivityBody,\n} from '@console/shared/src/components/dashboard/activity-card/ActivityBody';\nimport { DashboardItemProps, withDashboardResources } from '../with-dashboard-resources';\nimport { FirehoseResource, FirehoseResult } from '../../utils';\nimport { EventModel } from '../../../models';\nimport { EventKind, K8sKind } from '../../../module/k8s';\nimport {\n  useExtensions,\n  DashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity,\n} from '@console/plugin-sdk';\nimport {\n  useResolvedExtensions,\n  DashboardsOverviewResourceActivity as DynamicDashboardsOverviewResourceActivity,\n  isDashboardsOverviewResourceActivity as isDynamicDashboardsOverviewResourceActivity,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { uniqueResource } from '../dashboards-page/cluster-dashboard/utils';\nimport { RootState } from '../../../redux';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { getName } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\n\nconst getEventsResource = (projectName: string): FirehoseResource => ({\n  isList: true,\n  kind: EventModel.kind,\n  prop: 'events',\n  namespace: projectName,\n});\n\nconst RecentEvent = withDashboardResources<RecentEventProps>(\n  ({ watchK8sResource, stopWatchK8sResource, resources, projectName, viewEvents }) => {\n    React.useEffect(() => {\n      if (projectName) {\n        const eventsResource = getEventsResource(projectName);\n        watchK8sResource(eventsResource);\n        return () => {\n          stopWatchK8sResource(eventsResource);\n        };\n      }\n    }, [watchK8sResource, stopWatchK8sResource, projectName]);\n    return (\n      <RecentEventsBody\n        events={resources.events as FirehoseResult<EventKind[]>}\n        moreLink={viewEvents}\n      />\n    );\n  },\n);\n\nconst mapStateToProps = (state: RootState): OngoingActivityReduxProps => ({\n  models: state.k8s.getIn(['RESOURCES', 'models']) as ImmutableMap<string, K8sKind>,\n});\n\nconst OngoingActivity = connect(mapStateToProps)(\n  withDashboardResources(\n    ({\n      watchK8sResource,\n      stopWatchK8sResource,\n      resources,\n      projectName,\n      models,\n    }: DashboardItemProps & OngoingActivityProps) => {\n      const resourceActivityExtensions = useExtensions<DashboardsOverviewResourceActivity>(\n        isDashboardsOverviewResourceActivity,\n      );\n      const [dynamicResourceActivityExtensions] = useResolvedExtensions<\n        DynamicDashboardsOverviewResourceActivity\n      >(isDynamicDashboardsOverviewResourceActivity);\n\n      const resourceActivities = React.useMemo(\n        () =>\n          [...resourceActivityExtensions, ...dynamicResourceActivityExtensions].filter((e) => {\n            const model = models.get(e.properties.k8sResource.kind);\n            return model && model.namespaced;\n          }),\n        [resourceActivityExtensions, dynamicResourceActivityExtensions, models],\n      );\n\n      React.useEffect(() => {\n        if (projectName) {\n          resourceActivities.forEach((a, index) => {\n            watchK8sResource(\n              uniqueResource({ ...a.properties.k8sResource, namespace: projectName }, index),\n            );\n          });\n          return () => {\n            resourceActivities.forEach((a, index) => {\n              stopWatchK8sResource(uniqueResource(a.properties.k8sResource, index));\n            });\n          };\n        }\n      }, [watchK8sResource, stopWatchK8sResource, projectName, resourceActivities]);\n\n      const allResourceActivities = React.useMemo(\n        () =>\n          _.flatten(\n            resourceActivities.map((a, index) => {\n              const k8sResources = _.get(\n                resources,\n                [uniqueResource(a.properties.k8sResource, index).prop, 'data'],\n                [],\n              ) as FirehoseResult['data'];\n              return k8sResources\n                .filter((r) => (a.properties.isActivity ? a.properties.isActivity(r) : true))\n                .map((r) => ({\n                  resource: r,\n                  timestamp: a.properties.getTimestamp ? a.properties.getTimestamp(r) : null,\n                  loader: (a as DashboardsOverviewResourceActivity)?.properties?.loader,\n                  component: (a as ResolvedExtension<DynamicDashboardsOverviewResourceActivity>)\n                    ?.properties?.component,\n                }));\n            }),\n          ),\n        [resourceActivities, resources],\n      );\n\n      const resourcesLoaded = React.useMemo(\n        () =>\n          resourceActivities.every((a, index) =>\n            _.get(resources, [uniqueResource(a.properties.k8sResource, index).prop, 'loaded']),\n          ),\n        [resourceActivities, resources],\n      );\n\n      return (\n        <OngoingActivityBody\n          loaded={projectName && resourcesLoaded && models.size !== 0}\n          resourceActivities={allResourceActivities}\n        />\n      );\n    },\n  ),\n);\n\nexport const ActivityCard: React.FC = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n  const projectName = getName(obj);\n  const viewEvents = `/k8s/ns/${projectName}/events`;\n  const { t } = useTranslation();\n  return (\n    <Card\n      data-test-id=\"activity-card\"\n      className=\"co-overview-card--gradient\"\n      isClickable\n      isSelectable\n    >\n      <CardHeader\n        actions={{\n          actions: (\n            <>\n              <Link to={viewEvents} data-test=\"view-events-link\">\n                {t('public~View events')}\n              </Link>\n            </>\n          ),\n          hasNoOffset: false,\n          className: 'co-overview-card__actions',\n        }}\n      >\n        <CardTitle>{t('public~Activity')}</CardTitle>\n      </CardHeader>\n      <ActivityBody className=\"co-project-dashboard__activity-body\">\n        <OngoingActivity projectName={projectName} />\n        <RecentEvent projectName={projectName} viewEvents={viewEvents} />\n      </ActivityBody>\n    </Card>\n  );\n};\n\ntype RecentEventProps = DashboardItemProps & {\n  projectName: string;\n  viewEvents: string;\n};\n\ntype OngoingActivityReduxProps = {\n  models: ImmutableMap<string, K8sKind>;\n};\n\ntype OngoingActivityProps = OngoingActivityReduxProps & {\n  projectName: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core';\nimport LauncherBody from '@console/shared/src/components/dashboard/launcher-card/LauncherBody';\nimport LauncherItem from '@console/shared/src/components/dashboard/launcher-card/LauncherItem';\nimport { ProjectDashboardContext } from './project-dashboard-context';\n\nexport const LauncherCard: React.FC = () => {\n  const { namespaceLinks } = React.useContext(ProjectDashboardContext);\n  const { t } = useTranslation();\n  return (\n    <Card data-test-id=\"launcher-card\">\n      <CardHeader>\n        <CardTitle>{t('public~Launcher')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <LauncherBody>\n          {_.sortBy(namespaceLinks, 'spec.text').map((nl) => (\n            <LauncherItem key={nl.metadata.uid} consoleLink={nl} />\n          ))}\n        </LauncherBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\n\nimport './launcher-card.scss';\n\nconst LauncherBody: React.FC = ({ children }) => (\n  <div className=\"co-launcher-card__body\">{children}</div>\n);\n\nexport default LauncherBody;\n","import * as React from 'react';\nimport { ExternalLink } from '@console/internal/components/utils/link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\n\nconst LauncherItem: React.FC<LauncherItemProps> = ({ consoleLink }) => (\n  <ExternalLink\n    additionalClassName=\"co-launcher-card__item\"\n    href={consoleLink.spec.href}\n    text={consoleLink.spec.text}\n    dataTestID=\"launcher-item\"\n  />\n);\n\nexport default LauncherItem;\n\ntype LauncherItemProps = {\n  consoleLink: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Card, CardBody, CardHeader, CardTitle, Stack, StackItem } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport ResourceQuotaBody from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaBody';\nimport ResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/ResourceQuotaItem';\nimport AppliedClusterResourceQuotaItem from '@console/shared/src/components/dashboard/resource-quota-card/AppliedClusterResourceQuotaItem';\nimport { AppliedClusterResourceQuotaModel, ResourceQuotaModel } from '../../../models';\nimport { ProjectDashboardContext } from './project-dashboard-context';\nimport { ResourceQuotaKind, AppliedClusterResourceQuotaKind } from '../../../module/k8s';\n\nexport const ResourceQuotaCard = () => {\n  const { obj } = React.useContext(ProjectDashboardContext);\n\n  const [quotas, rqLoaded, rqLoadError] = useK8sWatchResource<ResourceQuotaKind[]>({\n    groupVersionKind: {\n      kind: ResourceQuotaModel.kind,\n      version: ResourceQuotaModel.apiVersion,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const [clusterQuotas, acrqLoaded, acrqLoadError] = useK8sWatchResource<\n    AppliedClusterResourceQuotaKind[]\n  >({\n    groupVersionKind: {\n      kind: AppliedClusterResourceQuotaModel.kind,\n      version: AppliedClusterResourceQuotaModel.apiVersion,\n      group: AppliedClusterResourceQuotaModel.apiGroup,\n    },\n    namespace: obj.metadata.name,\n    isList: true,\n  });\n\n  const { t } = useTranslation();\n\n  return (\n    <Card data-test-id=\"resource-quotas-card\">\n      <CardHeader>\n        <CardTitle>{t('public~ResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody error={!!rqLoadError} isLoading={!rqLoaded}>\n          {quotas.length ? (\n            <Stack hasGutter>\n              {quotas.map((rq) => (\n                <StackItem key={rq.metadata.uid}>\n                  <ResourceQuotaItem resourceQuota={rq} />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n      <CardHeader>\n        <CardTitle>{t('public~AppliedClusterResourceQuotas')}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ResourceQuotaBody\n          error={!!acrqLoadError}\n          isLoading={!acrqLoaded}\n          noText={t('public~No AppliedClusterResourceQuotas')}\n        >\n          {clusterQuotas.length ? (\n            <Stack hasGutter>\n              {clusterQuotas.map((cq) => (\n                <StackItem key={cq.metadata.uid}>\n                  <AppliedClusterResourceQuotaItem\n                    resourceQuota={cq}\n                    namespace={obj.metadata.name}\n                  />\n                </StackItem>\n              ))}\n            </Stack>\n          ) : undefined}\n        </ResourceQuotaBody>\n      </CardBody>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport './resource-quota-card.scss';\n\nconst ResourceQuotaBody: React.FC<ResourceQuotaBodyProps> = ({\n  error,\n  isLoading,\n  noText,\n  children,\n}) => {\n  let body: React.ReactNode;\n  const { t } = useTranslation();\n  if (error) {\n    body = <div className=\"text-secondary\">{t('console-shared~Not available')}</div>;\n  } else if (isLoading) {\n    body = <div className=\"skeleton-quota\" />;\n  } else if (!React.Children.count(children)) {\n    body = <div className=\"text-secondary\">{noText || t('console-shared~No ResourceQuotas')}</div>;\n  }\n\n  return <>{body || children}</>;\n};\n\nexport default ResourceQuotaBody;\n\ntype ResourceQuotaBodyProps = {\n  error: boolean;\n  isLoading: boolean;\n  noText?: string;\n};\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport ResourceQuotaCharts from '@console/app/src/components/resource-quota/ResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { ResourceQuotaModel } from '@console/internal/models';\nimport { ResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst ResourceQuotaItem: React.FC<ResourceQuotaItemProps> = ({ resourceQuota }) => {\n  const resources = Object.keys(resourceQuota.status?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n\n  const scopes = resourceQuota.spec?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: ResourceQuotaModel.kind,\n                  version: ResourceQuotaModel.apiVersion,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={resourceQuota.metadata.namespace}\n                inline\n                truncate\n                dataTest=\"resource-quota-link\"\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary hard={resourceQuota.status?.hard} used={resourceQuota.status?.used} />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <ResourceQuotaCharts resourceQuota={resourceQuota} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ResourceQuotaItem;\n\ntype ResourceQuotaItemProps = {\n  resourceQuota: ResourceQuotaKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DonutChart } from '@console/internal/components/graphs/donut';\nimport { ClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport { getLabelAndUsage } from './utils';\n\nimport './resource-quota.scss';\n\ntype ClusterResourceQuotaChartsProps = {\n  clusterResourceQuota: ClusterResourceQuotaKind;\n};\n\nconst ClusterResourceQuotaCharts = ({\n  clusterResourceQuota,\n}: ClusterResourceQuotaChartsProps): JSX.Element => {\n  const { t } = useTranslation();\n  const charts = Object.keys(clusterResourceQuota.status?.total?.hard ?? {}).map((resourceName) => {\n    const clusterHard = clusterResourceQuota.status.total.hard[resourceName];\n    const clusterUsed = clusterResourceQuota.status.total.used?.[resourceName];\n\n    const { label, percent } = getLabelAndUsage({\n      resourceName,\n      used: clusterUsed,\n      hard: clusterHard,\n    });\n\n    return (\n      <div\n        key={resourceName}\n        className=\"co-resource-quota__chart\"\n        data-test=\"resource-quota-gauge-chart\"\n      >\n        <DonutChart\n          data={[\n            {\n              x: 'Used',\n              y: percent,\n            },\n            {\n              x: 'Unused',\n              y: 100 - percent,\n            },\n          ]}\n          title={resourceName}\n          label={label}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"co-resource-quota-chart-row\">\n      {charts.length ? charts : <>{t('console-app~No quota')}</>}\n    </div>\n  );\n};\n\nexport default ClusterResourceQuotaCharts;\n","import * as React from 'react';\nimport { ExpandableSection, Split, SplitItem } from '@patternfly/react-core';\nimport AppliedClusterResourceQuotaCharts from '@console/app/src/components/resource-quota/AppliedClusterResourceQuotaCharts';\nimport { QuotaScopesInline } from '@console/internal/components/resource-quota';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { AppliedClusterResourceQuotaModel } from '@console/internal/models';\nimport { AppliedClusterResourceQuotaKind } from '@console/internal/module/k8s';\nimport QuotaSummary from './QuotaSummary';\n\nconst AppliedClusterResourceQuotaItem: React.FC<AppliedClusterResourceQuotaItemProps> = ({\n  resourceQuota,\n  namespace,\n}) => {\n  const resources = Object.keys(resourceQuota.status?.total?.hard ?? {});\n  const [isExpanded, setExpanded] = React.useState(resources.length <= 4);\n  const scopes = resourceQuota?.spec?.quota?.scopes;\n  return (\n    <>\n      <Split hasGutter>\n        <SplitItem isFilled>\n          <ExpandableSection\n            onToggle={(_event, isOpen: boolean) => setExpanded(isOpen)}\n            isExpanded={isExpanded}\n            toggleContent={\n              <ResourceLink\n                groupVersionKind={{\n                  kind: AppliedClusterResourceQuotaModel.kind,\n                  version: AppliedClusterResourceQuotaModel.apiVersion,\n                  group: AppliedClusterResourceQuotaModel.apiGroup,\n                }}\n                name={resourceQuota.metadata.name}\n                namespace={namespace}\n                inline\n                truncate\n              />\n            }\n          />\n        </SplitItem>\n        <SplitItem>\n          <QuotaSummary\n            hard={resourceQuota.status?.total?.hard}\n            used={resourceQuota.status?.total?.used}\n          />\n        </SplitItem>\n      </Split>\n      {isExpanded && (\n        <>\n          {scopes && <QuotaScopesInline scopes={scopes} />}\n          <AppliedClusterResourceQuotaCharts\n            appliedClusterResourceQuota={resourceQuota}\n            namespace={namespace}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AppliedClusterResourceQuotaItem;\n\ntype AppliedClusterResourceQuotaItemProps = {\n  resourceQuota: AppliedClusterResourceQuotaKind;\n  namespace: string;\n};\n","import * as _ from 'lodash';\nimport { getProbesData } from '@console/dev-console/src/components/health-checks/create-health-checks-probe-utils';\nimport {\n  DeployImageFormData,\n  GitImportFormData,\n  UploadJarFormData,\n} from '@console/dev-console/src/components/import/import-types';\nimport { getAppLabels, mergeData } from '@console/dev-console/src/utils/resource-label-utils';\nimport { ImportStrategy } from '@console/git-service/src';\nimport {\n  K8sResourceKind,\n  ImagePullPolicy,\n  k8sGet,\n  k8sCreate,\n  k8sUpdate,\n  k8sKill,\n} from '@console/internal/module/k8s';\nimport { NameValuePair } from 'packages/console-shared/src';\nimport { ServiceModel, DomainMappingModel } from '../models';\nimport { DomainMappingResponse, DomainMappingResponseAction } from '../types';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\nexport const getKnativeServiceDepResource = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamUrl: string,\n  imageStreamName?: string,\n  imageStreamTag?: string,\n  imageNamespace?: string,\n  annotations?: { [name: string]: string },\n  originalKnativeService?: K8sResourceKind,\n  generatedImageStreamName?: string,\n): K8sResourceKind => {\n  const {\n    name,\n    application: { name: applicationName },\n    project: { name: namespace },\n    runtimeIcon,\n    serverless: { scaling },\n    limits,\n    route: { unknownTargetPort, create, defaultUnknownPort },\n    labels,\n    image: { tag: imageTag },\n    deployment: {\n      env,\n      triggers: { image: imagePolicy },\n    },\n    healthChecks,\n    resources,\n    formType,\n  } = formData;\n  const { fileUpload } = formData as UploadJarFormData;\n  const selectedStrategy = formData?.import?.selectedStrategy;\n\n  const contTargetPort = parseInt(unknownTargetPort, 10) || defaultUnknownPort;\n  const imgPullPolicy = imagePolicy ? ImagePullPolicy.Always : ImagePullPolicy.IfNotPresent;\n  const {\n    concurrencylimit,\n    concurrencytarget,\n    minpods,\n    maxpods,\n    autoscale: { autoscalewindow, autoscalewindowUnit },\n    concurrencyutilization,\n  } = scaling;\n  const {\n    cpu: {\n      request: cpuRequest,\n      requestUnit: cpuRequestUnit,\n      limit: cpuLimit,\n      limitUnit: cpuLimitUnit,\n    },\n    memory: {\n      request: memoryRequest,\n      requestUnit: memoryRequestUnit,\n      limit: memoryLimit,\n      limitUnit: memoryLimitUnit,\n    },\n  } = limits;\n  const defaultLabel = getAppLabels({\n    name,\n    applicationName,\n    imageStreamName,\n    selectedTag: imageStreamTag || imageTag,\n    namespace: imageNamespace,\n    runtimeIcon,\n  });\n  delete defaultLabel.app;\n  if (fileUpload) {\n    const jArgsIndex = env?.findIndex((e) => e.name === 'JAVA_ARGS');\n    if (jArgsIndex !== -1) {\n      if (fileUpload.javaArgs !== '') {\n        (env[jArgsIndex] as NameValuePair).value = fileUpload.javaArgs;\n      } else {\n        env.splice(jArgsIndex, 1);\n      }\n    } else if (fileUpload.javaArgs !== '') {\n      env.push({ name: 'JAVA_ARGS', value: fileUpload.javaArgs });\n    }\n  }\n  const newKnativeDeployResource: K8sResourceKind = {\n    kind: ServiceModel.kind,\n    apiVersion: `${ServiceModel.apiGroup}/${ServiceModel.apiVersion}`,\n    metadata: {\n      name,\n      namespace,\n      labels: {\n        ...defaultLabel,\n        ...labels,\n        ...(formType === 'serverlessFunction' && { 'function.knative.dev': 'true' }),\n        ...(!create && { 'networking.knative.dev/visibility': `cluster-local` }),\n        ...(((formData as GitImportFormData).pipeline?.enabled || generatedImageStreamName) && {\n          'app.kubernetes.io/name': name,\n        }),\n        ...(selectedStrategy &&\n          selectedStrategy?.type === ImportStrategy.SERVERLESS_FUNCTION && {\n            'function.knative.dev': 'true',\n          }),\n      },\n      annotations: fileUpload ? { ...annotations, jarFileName: fileUpload.name } : annotations,\n    },\n    spec: {\n      template: {\n        metadata: {\n          labels: {\n            ...defaultLabel,\n            ...labels,\n            'app.kubernetes.io/name': generatedImageStreamName\n              ? formData.name\n              : labels['app.kubernetes.io/name'],\n          },\n          annotations: {\n            ...(concurrencytarget && {\n              'autoscaling.knative.dev/target': `${concurrencytarget}`,\n            }),\n            ...(minpods && { 'autoscaling.knative.dev/min-scale': `${minpods}` }),\n            ...(maxpods && { 'autoscaling.knative.dev/max-scale': `${maxpods}` }),\n            ...(autoscalewindow && {\n              'autoscaling.knative.dev/window': `${autoscalewindow}${autoscalewindowUnit}`,\n            }),\n            ...(concurrencyutilization && {\n              'autoscaling.knative.dev/target-utilization-percentage': `${concurrencyutilization}`,\n            }),\n          },\n        },\n        spec: {\n          ...(concurrencylimit && { containerConcurrency: concurrencylimit }),\n          containers: [\n            {\n              name,\n              image: `${imageStreamUrl}`,\n              ...(contTargetPort && {\n                ports: [\n                  {\n                    containerPort: contTargetPort,\n                  },\n                ],\n              }),\n              imagePullPolicy: imgPullPolicy,\n              securityContext: {\n                allowPrivilegeEscalation: false,\n                capabilities: {\n                  drop: ['ALL'],\n                },\n                runAsNonRoot: true,\n                seccompProfile: {\n                  type: 'RuntimeDefault',\n                },\n              },\n              env,\n              resources: {\n                ...((cpuLimit || memoryLimit) && {\n                  limits: {\n                    ...(cpuLimit && { cpu: `${cpuLimit}${cpuLimitUnit}` }),\n                    ...(memoryLimit && { memory: `${memoryLimit}${memoryLimitUnit}` }),\n                  },\n                }),\n                ...((cpuRequest || memoryRequest) && {\n                  requests: {\n                    ...(cpuRequest && { cpu: `${cpuRequest}${cpuRequestUnit}` }),\n                    ...(memoryRequest && { memory: `${memoryRequest}${memoryRequestUnit}` }),\n                  },\n                }),\n              },\n              ...getProbesData(healthChecks, resources),\n            },\n          ],\n        },\n      },\n    },\n  };\n  let knativeServiceUpdated = {};\n  if (!_.isEmpty(originalKnativeService)) {\n    knativeServiceUpdated = _.omit(originalKnativeService, [\n      'status',\n      'spec.template.metadata.name',\n      'spec.template.spec.containers',\n    ]);\n  }\n  const knativeDeployResource = mergeData(knativeServiceUpdated || {}, newKnativeDeployResource);\n\n  return knativeDeployResource;\n};\n\nconst getDomainMappingDeleteList = (\n  ksvcName: string,\n  allDomainMapping: K8sResourceKind[],\n  selDomainMappingNames: string[],\n): DomainMappingResponse[] => {\n  return allDomainMapping\n    .filter((dmRes) => dmRes.spec?.ref?.name === ksvcName)\n    .filter((dmSvc) => !selDomainMappingNames?.includes(dmSvc.metadata.name))\n    .map((dmDel) => ({\n      action: DomainMappingResponseAction.Delete,\n      resource: dmDel,\n    }));\n};\n\nconst formDomainMappingStruct = (\n  name: string,\n  knativeSvcResource: K8sResourceKind,\n  curDomainMapping?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    kind,\n    apiVersion,\n    metadata: { name: svcName, namespace },\n  } = knativeSvcResource;\n  return {\n    ...(curDomainMapping\n      ? { ...curDomainMapping }\n      : {\n          kind: DomainMappingModel.kind,\n          apiVersion: `${DomainMappingModel.apiGroup}/${DomainMappingModel.apiVersion}`,\n          metadata: {\n            name,\n            namespace,\n          },\n        }),\n    spec: {\n      ref: {\n        name: svcName,\n        kind,\n        apiVersion,\n      },\n    },\n  };\n};\n\nexport const getDomainMappingResources = (\n  knativeSvcResource: K8sResourceKind,\n  selectedDomainMapping: string[],\n): Promise<DomainMappingResponse[]> => {\n  const {\n    metadata: { name, namespace },\n  } = knativeSvcResource;\n  const domainMappingResources = [];\n  return k8sGet(DomainMappingModel, null, namespace)\n    .then((res) => {\n      const allDomainMappingList = res.items;\n      if (!selectedDomainMapping?.length && !allDomainMappingList?.length) {\n        return Promise.resolve([]);\n      }\n\n      // form domain mapping to be deleted\n      const dmDeleteList = getDomainMappingDeleteList(\n        name,\n        allDomainMappingList,\n        selectedDomainMapping,\n      );\n      domainMappingResources.push(...dmDeleteList);\n\n      // form domain mapping to be created or updated\n      const dmCreateUpdateList = selectedDomainMapping.map((domainName) => {\n        const curDomainMapping = allDomainMappingList.find(\n          (curDomain) => curDomain.metadata.name === domainName,\n        );\n        let domainMappingResourceData: DomainMappingResponse;\n        if (curDomainMapping) {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Update,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource, curDomainMapping),\n          };\n        } else {\n          domainMappingResourceData = {\n            action: DomainMappingResponseAction.Create,\n            resource: formDomainMappingStruct(domainName, knativeSvcResource),\n          };\n        }\n        return domainMappingResourceData;\n      });\n      domainMappingResources.push(...dmCreateUpdateList);\n\n      return domainMappingResources;\n    })\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log('Failed to get domain mapping resources', err);\n      return domainMappingResources;\n    });\n};\n\nexport const getDomainMappingRequests = async (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  knativeSvcResource: K8sResourceKind,\n  dryRun: boolean,\n): Promise<Promise<K8sResourceKind>[]> => {\n  const {\n    serverless: { domainMapping: selectedDomainMapping = [] },\n  } = formData;\n  const domainMappingResources = await getDomainMappingResources(knativeSvcResource, [\n    ...new Set(selectedDomainMapping.map((dm) => dm.replace(/ *\\([^)]*\\) */g, ''))),\n  ]);\n  const requests: Promise<K8sResourceKind>[] = [];\n  domainMappingResources.length &&\n    domainMappingResources.forEach(({ action, resource: dmRes }) => {\n      switch (action) {\n        case DomainMappingResponseAction.Create:\n          requests.push(k8sCreate(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Update:\n          requests.push(k8sUpdate(DomainMappingModel, dmRes, null, null, dryRun ? dryRunOpt : {}));\n          break;\n        case DomainMappingResponseAction.Delete:\n          requests.push(k8sKill(DomainMappingModel, dmRes, dryRun ? dryRunOpt : {}));\n          break;\n        default:\n          break;\n      }\n    });\n  return requests;\n};\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import * as _ from 'lodash';\nimport { BuildStrategyType } from '@console/internal/components/build';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  GitImportFormData,\n  DeployImageFormData,\n  UploadJarFormData,\n} from '../components/import/import-types';\nimport { makePortName } from './imagestream-utils';\nimport {\n  getAppLabels,\n  getPodLabels,\n  getGitAnnotations,\n  getCommonAnnotations,\n  mergeData,\n} from './resource-label-utils';\n\nexport const dryRunOpt = { queryParams: { dryRun: 'All' } };\n\nconst isDeployImageFormData = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n): formData is DeployImageFormData => {\n  return 'isi' in (formData as DeployImageFormData);\n};\n\nexport const createService = (\n  formData: DeployImageFormData | GitImportFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalService?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    image: { ports: imagePorts, tag: selectedTag },\n    route: { unknownTargetPort, defaultUnknownPort },\n    resources,\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const podLabels = getPodLabels(resources, name);\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    ports = [port];\n  } else if (\n    buildStrategy === BuildStrategyType.Devfile &&\n    !_.isEmpty(originalService?.spec?.ports)\n  ) {\n    ports = [\n      ...originalService.spec.ports.map((port) => ({\n        name: port.name,\n        containerPort: port.port,\n        protocol: 'TCP',\n      })),\n    ];\n  } else if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  } else if (_.isEmpty(ports)) {\n    const port = { containerPort: defaultUnknownPort, protocol: 'TCP' };\n    ports = [port];\n  }\n  if (\n    unknownTargetPort &&\n    !ports.some((port) => unknownTargetPort === port.containerPort.toString())\n  ) {\n    const port = { containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' };\n    const existingRouteTargetPort = originalRoute?.spec?.port?.targetPort;\n    ports = [...ports.filter((p) => p.containerPort !== defaultUnknownPort), port];\n\n    if (existingRouteTargetPort) {\n      ports = [...ports.filter((p) => p.containerPort !== existingRouteTargetPort), port];\n    }\n  }\n\n  const newService: any = {\n    kind: 'Service',\n    apiVersion: 'v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels },\n      annotations: { ...defaultAnnotations },\n    },\n    spec: {\n      selector: podLabels,\n      ports: _.map(ports, (port) => ({\n        port: port.containerPort,\n        targetPort: port.containerPort,\n        protocol: port.protocol,\n        // Use the same naming convention as CLI new-app.\n        name: port.name || makePortName(port),\n      })),\n    },\n  };\n\n  const service = mergeData(originalService, newService);\n\n  return service;\n};\n\nexport const createRoute = (\n  formData: GitImportFormData | DeployImageFormData | UploadJarFormData,\n  imageStreamData?: K8sResourceKind,\n  originalRoute?: K8sResourceKind,\n): K8sResourceKind => {\n  const {\n    project: { name: namespace },\n    application: { name: applicationName },\n    name,\n    labels: userLabels,\n    route: {\n      hostname,\n      unknownTargetPort,\n      defaultUnknownPort,\n      secure,\n      path,\n      tls,\n      labels: routeLabels,\n    },\n    image: { ports: imagePorts, tag: selectedTag },\n  } = formData;\n\n  const imageStreamName = _.get(imageStreamData, 'metadata.name') || _.get(formData, 'image.name');\n  const git = _.get(formData, 'git');\n\n  const defaultLabels = getAppLabels({ name, applicationName, imageStreamName, selectedTag });\n  const defaultAnnotations = git\n    ? { ...getGitAnnotations(git.url, git.ref), ...getCommonAnnotations() }\n    : getCommonAnnotations();\n\n  let ports = imagePorts;\n  if (isDeployImageFormData(formData)) {\n    const {\n      isi: { ports: isiPorts },\n    } = formData;\n    ports = isiPorts;\n  }\n\n  let targetPort: string;\n  const buildStrategy = formData.build?.strategy;\n  if (buildStrategy === BuildStrategyType.Docker && unknownTargetPort) {\n    targetPort = makePortName({\n      containerPort: _.toInteger(unknownTargetPort),\n      protocol: 'TCP',\n    });\n  } else if (buildStrategy === BuildStrategyType.Devfile) {\n    targetPort = originalRoute?.spec?.port?.targetPort;\n  } else if (unknownTargetPort) {\n    targetPort = makePortName({ containerPort: _.toInteger(unknownTargetPort), protocol: 'TCP' });\n  } else {\n    targetPort = makePortName({\n      containerPort: ports[0]?.containerPort || defaultUnknownPort,\n      protocol: 'TCP',\n    });\n  }\n\n  const newRoute: any = {\n    kind: 'Route',\n    apiVersion: 'route.openshift.io/v1',\n    metadata: {\n      name,\n      namespace,\n      labels: { ...defaultLabels, ...userLabels, ...routeLabels },\n      annotations: defaultAnnotations,\n    },\n    spec: {\n      to: {\n        kind: 'Service',\n        name,\n      },\n      tls: secure ? tls : null,\n      host: hostname,\n      path,\n      // The service created by `createService` uses the same port as the container port.\n      port: {\n        // Use the port name, not the number for targetPort. The router looks\n        // at endpoints, not services, when resolving ports, so port numbers\n        // will not resolve correctly if the service port and container port\n        // numbers don't match.\n        targetPort,\n      },\n      wildcardPolicy: 'None',\n    },\n  };\n\n  const route = mergeData(originalRoute, newRoute);\n\n  return route;\n};\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as _ from 'lodash';\nimport { UserRoleBinding, RoleBinding } from './project-access-form-utils-types';\n\nexport const defaultAccessRoles = {\n  admin: 'Admin',\n  edit: 'Edit',\n  view: 'View',\n};\n\nexport type Roles = {\n  [key: string]: string;\n};\n\nexport const getAvailableAccessRoles = (): string[] | undefined => {\n  if (!window.SERVER_FLAGS.projectAccessClusterRoles) return undefined;\n  return JSON.parse(window.SERVER_FLAGS.projectAccessClusterRoles);\n};\n\nexport const getFormDataFromRoleBinding = (\n  user: RoleBinding,\n  namespace: string,\n): UserRoleBinding[] =>\n  user.subjects?.map((obj) => ({\n    roleBindingName: user.metadata.name,\n    subject: { ...obj, namespace: obj.kind !== 'ServiceAccount' ? namespace : obj.namespace },\n    role: user.roleRef.name,\n    subjects: user.subjects,\n  }));\n\nexport const getUserRoleBindings = (\n  roleBindings: RoleBinding[],\n  clusterRoleNames: string[],\n  namespace: string,\n): UserRoleBinding[] =>\n  roleBindings.reduce((acc, roleBinding: RoleBinding) => {\n    if (clusterRoleNames.includes(roleBinding.roleRef.name) && roleBinding.subjects?.length > 0) {\n      acc.push(...getFormDataFromRoleBinding(roleBinding, namespace));\n    }\n    return acc;\n  }, []);\n\nexport const ignoreRoleBindingName = (roleBinding: UserRoleBinding[]) => {\n  const res = roleBinding.map((obj) => ({\n    user: obj.subject?.name,\n    role: obj.role,\n    type: obj.subject?.kind,\n  }));\n  return _.sortBy(res, ['user']);\n};\n","import { K8sResourceCommon } from '@console/internal/module/k8s';\n\nexport enum Verb {\n  Create = 'Create',\n  Remove = 'Remove',\n  Patch = 'Patch',\n}\n\nexport type SubjectType = {\n  apiGroup?: string;\n  kind: string;\n  name: string;\n  namespace?: string;\n};\n\nexport type UserRoleBinding = {\n  roleBindingName?: string;\n  role: string;\n  subject: SubjectType;\n  subjects: SubjectType[];\n};\n\nexport type RoleBinding = K8sResourceCommon & {\n  roleRef: SubjectType;\n  subjects?: SubjectType[];\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { Firehose } from '@console/internal/components/utils';\nimport { useProjectAccessRoles } from './hooks';\nimport ProjectAccess from './ProjectAccess';\n\nconst ProjectAccessPage: React.FC = (props) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const location = useLocation();\n  const namespace = params.ns;\n  const roles = useProjectAccessRoles();\n  const showFullForm = location.pathname.includes('project-access');\n  return (\n    <>\n      <Helmet>\n        <title>{t('devconsole~Project access')}</title>\n      </Helmet>\n      <Firehose\n        resources={[\n          {\n            namespace,\n            kind: 'RoleBinding',\n            prop: 'roleBindings',\n            isList: true,\n            optional: true,\n          },\n        ]}\n      >\n        <ProjectAccess fullFormView={showFullForm} namespace={namespace} roles={roles} {...props} />\n      </Firehose>\n    </>\n  );\n};\n\nexport default ProjectAccessPage;\n","import * as React from 'react';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ClusterRoleModel } from '@console/internal/models';\nimport { K8sResourceCommon, WatchK8sResource } from '@console/internal/module/k8s';\nimport { defaultAccessRoles, getAvailableAccessRoles, Roles } from './project-access-form-utils';\n\nexport type ClusterRoleKind = K8sResourceCommon & {\n  rules: { [key: string]: string[] }[];\n};\n\nexport const useProjectAccessRoles = (): { data: Roles; loaded: boolean } => {\n  const availableClusterRoles = getAvailableAccessRoles();\n\n  const watchedClusterRoles = React.useMemo<Record<string, WatchK8sResource>>(() => {\n    if (!availableClusterRoles || !availableClusterRoles.length) {\n      return {};\n    }\n    return availableClusterRoles.reduce((acc, role) => {\n      acc[role] = {\n        kind: ClusterRoleModel.kind,\n        name: role,\n      };\n      return acc;\n    }, {} as Record<string, WatchK8sResource>);\n  }, [availableClusterRoles]);\n\n  const clusterRoles = useK8sWatchResources<Record<string, ClusterRoleKind>>(watchedClusterRoles);\n\n  if (!availableClusterRoles || availableClusterRoles.length === 0) {\n    return { data: defaultAccessRoles, loaded: true };\n  }\n\n  const mappedRoles = availableClusterRoles.reduce((acc, role) => {\n    const clusterRole = clusterRoles[role];\n    if (clusterRole?.loadError?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `ClusterRole ${role} could not be found and will not be shown in project access options.`,\n      );\n    } else if (clusterRole?.loaded && clusterRole?.data) {\n      const label =\n        clusterRole.data.metadata?.annotations?.['console.openshift.io/display-name'] ||\n        clusterRole.data.metadata?.name ||\n        role;\n      acc[role] = label;\n    } else {\n      acc[role] = role;\n    }\n    return acc;\n  }, {} as Roles);\n\n  const allLoadedOrFailed = Object.values(clusterRoles).every(\n    (clusterRole) => clusterRole.loaded || clusterRole.loadError,\n  );\n\n  return { data: mappedRoles, loaded: allLoadedOrFailed };\n};\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport * as _ from 'lodash';\nimport Helmet from 'react-helmet';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  documentationURLs,\n  ExternalLink,\n  getDocumentationURL,\n  history,\n  isManaged,\n  LoadingBox,\n  PageHeading,\n  StatusBox,\n} from '@console/internal/components/utils';\nimport { RoleBindingModel, RoleModel } from '@console/internal/models';\nimport NamespacedPage, { NamespacedPageVariants } from '../NamespacedPage';\nimport {\n  getNewRoles,\n  getRemovedRoles,\n  sendRoleBindingRequest,\n  getRolesWithMultipleSubjects,\n  getRolesToUpdate,\n} from './project-access-form-submit-utils';\nimport { getUserRoleBindings, Roles } from './project-access-form-utils';\nimport { Verb, UserRoleBinding } from './project-access-form-utils-types';\nimport { validationSchema } from './project-access-form-validation-utils';\nimport ProjectAccessForm from './ProjectAccessForm';\n\nexport interface ProjectAccessProps {\n  namespace: string;\n  roleBindings?: { data: []; loaded: boolean; loadError: {} };\n  roles: { data: Roles; loaded: boolean };\n  fullFormView?: boolean;\n}\n\nconst ProjectAccess: React.FC<ProjectAccessProps> = ({\n  namespace,\n  roleBindings,\n  roles,\n  fullFormView,\n}) => {\n  const { t } = useTranslation();\n  if ((!roleBindings.loaded && _.isEmpty(roleBindings.loadError)) || !roles.loaded) {\n    return <LoadingBox />;\n  }\n\n  const userRoleBindings: UserRoleBinding[] = getUserRoleBindings(\n    roleBindings.data,\n    Object.keys(roles.data),\n    namespace,\n  );\n\n  const rbacURL = getDocumentationURL(documentationURLs.usingRBAC);\n\n  const initialValues = {\n    projectAccess: roleBindings.loaded && userRoleBindings,\n  };\n\n  const handleSubmit = (values, actions) => {\n    let newRoles = getNewRoles(initialValues.projectAccess, values.projectAccess);\n    let removeRoles = getRemovedRoles(initialValues.projectAccess, values.projectAccess);\n    const updateRoles = getRolesToUpdate(newRoles, removeRoles);\n\n    const { updateRolesWithMultipleSubjects, removeRoleSubjectFlag } = getRolesWithMultipleSubjects(\n      newRoles,\n      removeRoles,\n      updateRoles,\n    );\n\n    if (updateRoles.length > 0) {\n      newRoles = newRoles.filter(\n        (o1) => !updateRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n      );\n      removeRoles = removeRoles.filter(\n        (o1) => !updateRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n      );\n    }\n    updateRoles.push(...updateRolesWithMultipleSubjects);\n    const roleBindingRequests = [];\n    if (updateRoles.length > 0) {\n      roleBindingRequests.push(\n        ...sendRoleBindingRequest(Verb.Patch, updateRoles, namespace, removeRoleSubjectFlag),\n      );\n    }\n    if (newRoles.length > 0) {\n      roleBindingRequests.push(\n        ...sendRoleBindingRequest(Verb.Create, newRoles, namespace, removeRoleSubjectFlag),\n      );\n    }\n    if (removeRoles.length > 0) {\n      roleBindingRequests.push(\n        ...sendRoleBindingRequest(Verb.Remove, removeRoles, namespace, removeRoleSubjectFlag),\n      );\n    }\n\n    return Promise.all(roleBindingRequests)\n      .then(() => {\n        actions.resetForm({\n          values: {\n            projectAccess: values.projectAccess,\n          },\n          status: { success: t('devconsole~Successfully updated the project access.') },\n        });\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const handleReset = (values, actions) => {\n    actions.resetForm({ status: { success: null }, values: initialValues });\n  };\n\n  const projectAccessForm = (\n    <>\n      <PageHeading\n        title={fullFormView ? t('devconsole~Project access') : null}\n        data-test=\"project-access-page\"\n      >\n        <Trans t={t} ns=\"devconsole\">\n          {\n            \"Project access allows you to add or remove a user's access to the project. More advanced management of role-based access control appear in \"\n          }\n          <Link to={`/k8s/ns/${namespace}/${RoleModel.plural}`}>Roles</Link> and{' '}\n          <Link to={`/k8s/ns/${namespace}/${RoleBindingModel.plural}`}>Role Bindings</Link>.\n        </Trans>\n        {!isManaged() && (\n          <Trans t={t} ns=\"devconsole\">\n            {' '}\n            For more information, see the{' '}\n            <ExternalLink href={rbacURL}>role-based access control documentation</ExternalLink>.\n          </Trans>\n        )}\n      </PageHeading>\n      {roleBindings.loadError ? (\n        <StatusBox loaded={roleBindings.loaded} loadError={roleBindings.loadError} />\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n          validationSchema={validationSchema}\n        >\n          {(formikProps) => (\n            <ProjectAccessForm\n              {...formikProps}\n              roles={roles.data}\n              roleBindings={initialValues}\n              onCancel={fullFormView ? history.goBack : null}\n            />\n          )}\n        </Formik>\n      )}\n    </>\n  );\n\n  return fullFormView ? (\n    <NamespacedPage hideApplications variant={NamespacedPageVariants.light} disabled>\n      <Helmet>\n        <title>{t('devconsole~Project access')}</title>\n      </Helmet>\n      {projectAccessForm}\n    </NamespacedPage>\n  ) : (\n    projectAccessForm\n  );\n};\n\nexport default ProjectAccess;\n","import * as _ from 'lodash';\nimport {\n  k8sCreateResource,\n  k8sDeleteResource,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { RoleBindingModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { generateSecret } from '../import/import-submit-utils';\nimport { Verb, UserRoleBinding, RoleBinding, SubjectType } from './project-access-form-utils-types';\n\nexport const getRolesWithNameChange = (\n  newRoles: UserRoleBinding[],\n  removeRoles: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const createRoles = _.filter(newRoles, 'roleBindingName');\n  const deleteRoles = _.filter(removeRoles, (o1) =>\n    createRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n  );\n  const rolesWithNameChange = _.filter(createRoles, (o1) =>\n    deleteRoles.find(\n      (o2) =>\n        o1.roleBindingName === o2.roleBindingName &&\n        o1.subject.name !== o2.subject.name &&\n        o1.role === o2.role,\n    ),\n  );\n  return rolesWithNameChange;\n};\n\nexport const getRolesWithSubjectChange = (\n  newRoles: UserRoleBinding[],\n  removeRoles: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const createRoles = _.filter(newRoles, 'roleBindingName');\n  const deleteRoles = _.filter(removeRoles, (o1) =>\n    createRoles.find((o2) => o1.roleBindingName === o2.roleBindingName),\n  );\n  const rolesWithSubjectChange = _.filter(createRoles, (o1) =>\n    deleteRoles.find(\n      (o2) =>\n        o1.roleBindingName === o2.roleBindingName &&\n        (o1.subject.kind !== o2.subject.kind || o1.subject.namespace !== o2.subject.namespace) &&\n        o1.role === o2.role,\n    ),\n  );\n  return rolesWithSubjectChange;\n};\n\nexport const getRolesToUpdate = (newRoles: UserRoleBinding[], removeRoles: UserRoleBinding[]) => {\n  return [\n    ...getRolesWithSubjectChange(newRoles, removeRoles),\n    ...getRolesWithNameChange(newRoles, removeRoles),\n  ];\n};\n\nexport const sendK8sRequest = (\n  verb: string,\n  roleBinding: RoleBinding,\n): Promise<K8sResourceKind> => {\n  switch (verb) {\n    case Verb.Create:\n      return k8sCreateResource({ model: RoleBindingModel, data: roleBinding });\n    case Verb.Remove:\n      return k8sDeleteResource({ model: RoleBindingModel, resource: roleBinding });\n    case Verb.Patch:\n      return k8sPatchResource({\n        model: RoleBindingModel,\n        resource: roleBinding,\n        data: [{ op: 'replace', path: `/subjects`, value: roleBinding.subjects }],\n      });\n    default:\n      return null;\n  }\n};\n\nexport const generateRoleBindingName = (username: string, role: string): string => {\n  return `${username}-${role}-${generateSecret()}`;\n};\n\nexport const getNewRoles = (\n  initialRoles: UserRoleBinding[],\n  formValues: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const newRoles = _.uniqBy(\n    _.filter(\n      formValues,\n      (o1) =>\n        !initialRoles.find(\n          (o2) =>\n            o1.subject.name === o2.subject.name &&\n            o1.subject.kind === o2.subject.kind &&\n            o1.role === o2.role &&\n            o1.subject.namespace === o2.subject.namespace,\n        ),\n    ),\n    (user) => JSON.stringify([user.subject.name, user.subject.kind, user.role]),\n  );\n  return newRoles;\n};\n\nexport const getRemovedRoles = (\n  initialRoles: UserRoleBinding[],\n  formValues: UserRoleBinding[],\n): UserRoleBinding[] => {\n  const removeRoles = _.filter(\n    initialRoles,\n    (o1) =>\n      !formValues.find(\n        (o2: UserRoleBinding) =>\n          o1.subject.name === o2.subject.name &&\n          o1.subject.kind === o2.subject.kind &&\n          o1.role === o2.role &&\n          o1.subject.namespace === o2.subject.namespace &&\n          o1.roleBindingName === o2.roleBindingName,\n      ),\n  );\n  return removeRoles;\n};\n\nexport const getUpdatedSubjects = (subjects: SubjectType[]) => {\n  return subjects.map((sub) => {\n    if (sub.kind === 'ServiceAccount') {\n      delete sub.apiGroup;\n      return sub;\n    }\n\n    delete sub.namespace;\n    return sub;\n  });\n};\n\nexport const sendRoleBindingRequest = (\n  verb: string,\n  roles: UserRoleBinding[],\n  namespace: string,\n  removeRoleSubjectFlag: number,\n) => {\n  const finalArray: Promise<K8sResourceKind>[] = [];\n  _.forEach(roles, (user) => {\n    const roleBindingName =\n      verb === Verb.Create\n        ? generateRoleBindingName(user.subject.name, user.role)\n        : user.roleBindingName;\n    const subjects =\n      verb === Verb.Create || verb === Verb.Remove\n        ? [\n            {\n              ...(user.subject.kind === 'ServiceAccount'\n                ? user.subject.namespace\n                  ? { namespace: user.subject.namespace }\n                  : {}\n                : { apiGroup: 'rbac.authorization.k8s.io' }),\n              kind: user.subject.kind,\n              name: user.subject.name,\n            },\n          ]\n        : removeRoleSubjectFlag === 1 && user.subjects.length > 0\n        ? getUpdatedSubjects(user.subjects)\n        : user.subjects.length > 1\n        ? getUpdatedSubjects(user.subjects)\n        : getUpdatedSubjects([user.subject]);\n    const roleBinding: RoleBinding = {\n      apiVersion: 'rbac.authorization.k8s.io/v1',\n      kind: 'RoleBinding',\n      metadata: {\n        name: roleBindingName,\n        namespace,\n      },\n      roleRef: {\n        apiGroup: 'rbac.authorization.k8s.io',\n        kind: 'ClusterRole',\n        name: user.role,\n      },\n      subjects,\n    };\n    finalArray.push(sendK8sRequest(verb, roleBinding));\n  });\n  return finalArray;\n};\n\nexport const getRolesWithMultipleSubjects = (\n  newRoles: UserRoleBinding[],\n  removeRoles: UserRoleBinding[],\n  updateRoles: UserRoleBinding[],\n) => {\n  let removeRoleSubjectFlag = 0;\n  const updateRolesWithMultipleSubjects: UserRoleBinding[] = [];\n  _.remove(\n    newRoles,\n    (newRole) =>\n      newRole.subjects?.length > 1 &&\n      removeRoles.find(\n        (role) => role.roleBindingName === newRole.roleBindingName && role.role === newRole.role,\n      ),\n  );\n\n  _.remove(removeRoles, (removeRole) => {\n    if (removeRole.subjects.length > 1) {\n      const roleWithMultipleSubjects = updateRolesWithMultipleSubjects.find(\n        (r) => r.roleBindingName === removeRole.roleBindingName,\n      );\n      if (roleWithMultipleSubjects) {\n        const newSubs = roleWithMultipleSubjects.subjects.filter(\n          (sub) => sub.name !== removeRole.subject.name,\n        );\n        roleWithMultipleSubjects.subjects = newSubs;\n      } else {\n        const newSubs = removeRole.subjects.filter((sub) => sub.name !== removeRole.subject.name);\n        updateRolesWithMultipleSubjects.push({ ...removeRole, subjects: newSubs });\n        removeRoleSubjectFlag = 1;\n      }\n      return true;\n    }\n    return false;\n  });\n\n  _.remove(updateRoles, (updateRole) => {\n    if (updateRole.subjects.length > 1) {\n      const roleWithMultipleSubjects = updateRolesWithMultipleSubjects.find(\n        (r) => r.roleBindingName === updateRole.roleBindingName,\n      );\n      roleWithMultipleSubjects.subjects.push(updateRole.subject);\n      return true;\n    }\n    return false;\n  });\n  return { updateRolesWithMultipleSubjects, removeRoleSubjectFlag };\n};\n","import * as yup from 'yup';\nimport i18n from '@console/internal/i18n';\n\nexport const validationSchema = yup.object().shape({\n  projectAccess: yup.array().of(\n    yup.object().shape({\n      subject: yup.object().shape({\n        name: yup.string().required(i18n.t('devconsole~Required')),\n        kind: yup.string().required(i18n.t('devconsole~Required')),\n      }),\n      role: yup.string().required(i18n.t('devconsole~Required')),\n    }),\n  ),\n});\n","import * as React from 'react';\nimport { Form, TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  MultiColumnField,\n  InputField,\n  DropdownField,\n  FormFooter,\n  NSDropdownField,\n} from '@console/shared';\nimport { Roles, ignoreRoleBindingName } from './project-access-form-utils';\nimport { UserRoleBinding } from './project-access-form-utils-types';\nimport './ProjectAccessForm.scss';\n\ntype ProjectAccessFormProps = FormikProps<FormikValues> & {\n  roles: Roles;\n  roleBindings: { projectAccess: UserRoleBinding[] };\n  onCancel?: () => void;\n};\n\ntype SubjectNamespaceDropdownProps = {\n  name?: string;\n  values: FormikValues;\n};\n\nexport const SubjectNamespaceDropdown: React.FC<SubjectNamespaceDropdownProps> = ({\n  name,\n  values,\n}) => {\n  const { t } = useTranslation();\n  const arr = name.split('.');\n  const showDropdown =\n    arr.length > 2 && values?.projectAccess?.[arr?.[1]]?.subject?.kind === 'ServiceAccount';\n  return (\n    <div>\n      <DropdownField\n        name={`${name}.kind`}\n        title={t('devconsole~Select a type')}\n        items={{ Group: 'Group', ServiceAccount: 'ServiceAccount', User: 'User' }}\n        fullWidth\n        className=\"odc-project-access-form__subject-kind-dropdown\"\n      />\n      {showDropdown && <NSDropdownField name={`${name}.namespace`} fullWidth />}\n    </div>\n  );\n};\n\nconst ProjectAccessForm: React.FC<ProjectAccessFormProps> = ({\n  handleSubmit,\n  handleReset,\n  isSubmitting,\n  status,\n  errors,\n  dirty,\n  roles,\n  roleBindings,\n  values,\n  onCancel,\n}) => {\n  const { t } = useTranslation();\n  const [isStaleInfo, setIsStaleInfo] = React.useState<boolean>(false);\n  const disableSubmit = !dirty || !_.isEmpty(errors) || isSubmitting;\n\n  React.useEffect(() => {\n    !_.isEqual(\n      ignoreRoleBindingName(roleBindings.projectAccess),\n      ignoreRoleBindingName(values.projectAccess),\n    )\n      ? setIsStaleInfo(true)\n      : setIsStaleInfo(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [roleBindings]);\n\n  const onReload = () => {\n    handleReset();\n    setIsStaleInfo(false);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"co-m-pane__body odc-project-access-form__body\">\n        <div className=\"co-m-pane__form\">\n          <MultiColumnField\n            name=\"projectAccess\"\n            addLabel={t('devconsole~Add access')}\n            headers={[t('devconsole~Subject'), t('devconsole~Name'), t('devconsole~Role')]}\n            emptyValues={{ name: '', role: '' }}\n          >\n            <SubjectNamespaceDropdown name=\"subject\" values={values} />\n            <InputField\n              name=\"subject.name\"\n              type={TextInputTypes.text}\n              placeholder={t('devconsole~Name')}\n            />\n            <DropdownField\n              dataTest=\"role-dropdown\"\n              name=\"role\"\n              title={t('devconsole~Select a role')}\n              items={roles}\n              fullWidth\n            />\n          </MultiColumnField>\n        </div>\n      </div>\n      <FormFooter\n        handleReset={onReload}\n        isSubmitting={isSubmitting}\n        errorMessage={status?.submitError}\n        successMessage={!dirty && status?.success}\n        disableSubmit={isStaleInfo || disableSubmit}\n        showAlert={isStaleInfo || !disableSubmit}\n        submitLabel={t('devconsole~Save')}\n        resetLabel={t('devconsole~Reload')}\n        infoTitle={isStaleInfo && t('devconsole~This list has been updated.')}\n        infoMessage={isStaleInfo && t('devconsole~Click reload to see the new list.')}\n        handleCancel={onCancel}\n      />\n    </Form>\n  );\n};\n\nexport default ProjectAccessForm;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { ProjectDashboard } from '@console/internal/components/dashboard/project-dashboard/project-dashboard';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport { NamespaceDetails, projectMenuActions } from '@console/internal/components/namespace';\nimport { withStartGuide } from '@console/internal/components/start-guide';\nimport { history, useAccessReview, Page } from '@console/internal/components/utils';\nimport { ProjectModel, RoleBindingModel } from '@console/internal/models';\nimport { ALL_NAMESPACES_KEY } from '@console/shared';\nimport NamespacedPage, { NamespacedPageVariants } from '../../NamespacedPage';\nimport ProjectAccessPage from '../../project-access/ProjectAccessPage';\nimport CreateProjectListPage, { CreateAProjectButton } from '../CreateProjectListPage';\n\nexport const PROJECT_DETAILS_ALL_NS_PAGE_URI = '/project-details/all-namespaces';\n\ninterface MonitoringPageProps {\n  noProjectsAvailable?: boolean;\n}\n\nconst handleNamespaceChange = (newNamespace: string): void => {\n  if (newNamespace === ALL_NAMESPACES_KEY) {\n    history.push(PROJECT_DETAILS_ALL_NS_PAGE_URI);\n  }\n};\n\nexport const PageContents: React.FC<MonitoringPageProps> = ({ noProjectsAvailable, ...props }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const activeNamespace = params.ns;\n\n  const canListRoleBindings = useAccessReview({\n    group: RoleBindingModel.apiGroup,\n    resource: RoleBindingModel.plural,\n    verb: 'list',\n    namespace: activeNamespace,\n  });\n\n  const canCreateRoleBindings = useAccessReview({\n    group: RoleBindingModel.apiGroup,\n    resource: RoleBindingModel.plural,\n    verb: 'create',\n    namespace: activeNamespace,\n  });\n\n  const pages: Page[] = [\n    {\n      href: '',\n      // t('devconsole~Overview')\n      nameKey: 'devconsole~Overview',\n      component: ProjectDashboard,\n    },\n    {\n      href: 'details',\n      // t('devconsole~Details')\n      nameKey: 'devconsole~Details',\n      component: NamespaceDetails,\n    },\n  ];\n  if (canListRoleBindings && canCreateRoleBindings) {\n    pages.push({\n      href: 'access',\n      // t('devconsole~Project access')\n      nameKey: 'devconsole~Project access',\n      component: ProjectAccessPage,\n    });\n  }\n\n  return !noProjectsAvailable && activeNamespace ? (\n    <DetailsPage\n      {...props}\n      breadcrumbsFor={() => []}\n      name={activeNamespace}\n      kind={ProjectModel.kind}\n      kindObj={ProjectModel}\n      menuActions={projectMenuActions}\n      customData={{ activeNamespace, hideHeading: true }}\n      pages={pages}\n    />\n  ) : (\n    <CreateProjectListPage title={t('devconsole~Project Details')}>\n      {(openProjectModal) => (\n        <Trans t={t} ns=\"devconsole\">\n          Select a Project to view its details\n          <CreateAProjectButton openProjectModal={openProjectModal} />.\n        </Trans>\n      )}\n    </CreateProjectListPage>\n  );\n};\n\nconst PageContentsWithStartGuide = withStartGuide(PageContents);\n\nexport const ProjectDetailsPage: React.FC<MonitoringPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Helmet>\n        <title>{t('devconsole~Project Details')}</title>\n      </Helmet>\n      <NamespacedPage\n        hideApplications\n        variant={NamespacedPageVariants.light}\n        onNamespaceChange={handleNamespaceChange}\n      >\n        <PageContentsWithStartGuide {...props} />\n      </NamespacedPage>\n    </>\n  );\n};\n\nexport default ProjectDetailsPage;\n"],"sourceRoot":""}