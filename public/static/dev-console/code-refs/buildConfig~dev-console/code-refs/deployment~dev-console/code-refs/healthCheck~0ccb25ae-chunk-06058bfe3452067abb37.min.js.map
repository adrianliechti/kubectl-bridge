{"version":3,"sources":["webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/git-service/src/types/index.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts"],"names":["toDefaultSecretType","typeAbstraction","source","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","data","type","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","t","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","includes","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","props","loader","then","c","API_PROXY_URL","convertHeaders","headers","Object","keys","reduce","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","Error","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","obj","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","kind","metadata","name","setSecret","inProgress","setInProgress","error","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","title","helptext","cancel","ns","onDataChanged","secretsData","onError","err","onNameChanged","event","target","newSecret","save","preventDefault","encode","namespace","s","onSave","message","renderBody","disabled","className","htmlFor","onChange","id","required","onFormDisable","disable","onSubmit","errorMessage","submitText","helpText","isDisabled","variant","saveButtonText","onClick","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","label","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","uid","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","push","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","owner","url","contextDir","replace","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","get","repo","status","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","r","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","baseUrl","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","Promise","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","all","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","find","resource","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","filter","test","length","t1","t2","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","loaded","loadError","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategy","strategies","SecretLoadingWrapper","fixedKeys","EditSecret","resources","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","some","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","Number","evaluateFunc","resourceContent","funcJSON","builder","build","builderEnvs","buildEnvs","runtime","runtimeEnvs","run","envs","isServerlessFxRepository"],"mappings":"gGAAA,snD,kCCAA,2Q,kCCAA,uSAKO,MAAMA,EAAuBC,IAClC,OAAQA,GACN,KAAK,IAAsBC,OACzB,OAAO,IAAWC,UACpB,KAAK,IAAsBC,MACzB,OAAO,IAAWC,iBACpB,QACE,OAAO,IAAWC,SAIXC,EAAqBC,IAChC,MAAM,KAAEC,EAAI,KAAEC,GAASF,EACvB,OAAQE,GACN,KAAK,IAAWP,UAChB,KAAK,IAAWQ,QACd,OAAO,IAAsBT,OAC/B,KAAK,IAAWG,iBAChB,KAAK,IAAWO,UACd,OAAO,IAAsBR,MAC/B,QACE,OAAIK,aAAI,EAAJA,EAAO,sBAAsC,IAAjB,IAAOA,GAC9B,IAAsBI,QAExB,IAAsBC,UAItBC,EAAiB,KAE5B,MAAMC,EAAK,IACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,GACf,OAAOL,IAAOA,IAAOA,IAAOA,KAGjBM,EAAuBC,IAClC,MAAMC,EAAW,IAAOD,GAAYE,OACpC,OAAI,IAAUD,EAAU,CAAC,UAAW,YAC3B,IAAWE,IACT,IAAUF,EAAU,CAAC,SAAU,YAAa,iBAAkB,UAChE,IAAWG,oBACT,IAAUH,EAAU,CAAC,eACvB,IAAWZ,UACT,IAAUY,EAAU,CAAC,sBACvB,IAAWnB,iBACT,IAAUmB,EAAU,CAAC,WAAY,aACnC,IAAWrB,UACT,IAAUqB,EAAU,CAAC,mBACvB,IAAWb,QAEb,IAAWL,QAGPsB,EAAqBC,IAChC,OAAQA,GACN,KAAK,IAAWjB,UACd,MAAO,aACT,KAAK,IAAWP,iBACd,MAAO,oBACT,QACE,OAAOwB,IAIAC,EAAiB,CAC5BC,EACA9B,KAEA,MAAM,EAAE+B,GAAM,2BACd,OAAQ/B,GACN,KAAK,IAAsBa,QACzB,OAAkBkB,EAAXD,EAAa,iCAAsC,gCAC5D,KAAK,IAAsB3B,MACzB,OAAkB4B,EAAXD,EAAa,kCAAuC,iCAC7D,QACE,OACIC,EADGD,EACD,sCACA,oCADuC,CAAEF,WAAY5B,MAKpDgC,EAAwBhC,IACnC,MAAM,EAAE+B,GAAM,2BACd,OAAQ/B,GACN,KAAK,IAAsBa,QACzB,OAAOkB,EACL,mHAEJ,KAAK,IAAsB9B,OACzB,OAAO8B,EAAE,oEACX,KAAK,IAAsB5B,MACzB,OAAO4B,EAAE,oFACX,KAAK,IAAsBnB,QACzB,OAAOmB,EAAE,kEACX,QACE,OAAO,Q,kCCtGb,+N,wXCWO,MAAeE,EAGpB,YAAYC,GACVC,KAAKD,UAAYA,EA+Fb,mB,yCACJ,IACE,MAAME,QAAiBD,KAAKE,kBACtBC,EAAa,YAAiBF,EAASG,OAC7C,GAAIH,EAASG,MAAMC,SAAS,gBAAiB,CAC3C,MAAMC,QAA2BN,KAAKO,wBACtC,GAAI,YAAeD,GACjB,OAAOH,EAAWd,KAAK,CAACmB,EAAGC,IACL,kBAAhBA,EAAEC,UAAsC,EACxB,kBAAhBF,EAAEE,WAAuC,EACtC,GAIb,OAAOP,EACP,MAAOQ,GACP,MAAO,U,kCC9Hb,sDAIO,MAAMC,EAAsBC,GACjC,gBAAC,IAAc,eACbC,OAAQ,IAAM,0CAAiCC,KAAMC,GAAMA,EAAEJ,qBACzDC,K,8eCHD,MAAMI,EAAgB,kCA2BhBC,EAAkBC,GACtBC,OAAOC,KAAKF,GAASG,OAAO,CAACC,EAAQC,KAC1CD,EAAOC,GAAO,CAACL,EAAQK,IAChBD,GACN,IAMQE,EAA2BC,GAAuD,OAAD,6BAC5F,MAAMC,QAAqC,mBAAiBC,KAAKX,EAAeS,GAChF,IAAKC,EAAcE,WACjB,MAAM,IAAIC,MAAM,sDAElB,GAAIH,EAAcE,WAAa,KAAOF,EAAcE,YAAc,IAChE,MAAM,IAAI,IACR,2BAA2BF,EAAcE,WACzCF,EAAcE,WACd,KACAF,GAGJ,OAAOA,KAGII,EAA4BL,GAChCD,EAAkBC,GAAcX,KAAMiB,GApC1B,CAACC,IACpB,IACEC,KAAKC,MAAMF,GACX,MAAOtB,GACP,OAAO,EAET,OAAO,GA+BEyB,CAAaJ,EAASK,MAAQH,KAAKC,MAAMH,EAASK,MAAQ,mBAASL,EAASK,Q,kCC3DvF,yMAoBO,MAAMC,EAAqDzB,IAChE,MAAM,SAAElB,EAAQ,MAAE4C,EAAK,SAAEC,GAAa3B,GAChC,EAAEjB,GAAM,2BACR6C,EAAW,wBACXC,EAAS,sBAETC,EAAiB,IAAO9B,EAAM+B,IAAK,CAAC,WAAY,SAChDC,EAAoB,YAAoBhC,EAAMiC,uBAC9CC,EAAgB,IAAe,GAAIlC,EAAMmC,MAAOL,EAAgB,CACpEM,WAAY,KACZ5E,KAAM,GACN6E,KAAM,SACNC,SAAU,CACRC,KAAM,IAER9E,KAAMuE,KAGDC,GAAyB,WAAejC,EAAMiC,wBAC9C1E,EAAQiF,GAAa,WAAeN,IACpCO,EAAYC,GAAiB,YAAe,IAC5CC,EAAOC,GAAY,cACnBtE,EAAYuE,GAAiB,WAClC,IAAY,IAAM7C,EAAM+B,IAAK,QAAUe,GAC9BA,EAAQ,SAAOC,OAAOD,GAAS,MAGnCE,EAAkBC,GAAuB,WAAe,KACxDC,EAAaC,GAAkB,YAAe,GAC/CC,EAAQ,YAAetE,EAAUmD,GACjCoB,EAAW,YAAqBpB,GAChCqB,EAAS,IAAM1B,EAAS,WAAWC,EAAO0B,qBAE1CC,EAAiBC,IACrBZ,EAAc,OAAD,UAAMY,aAAW,EAAXA,EAAanF,aAChC2E,EAAoB,OAAD,UAAMQ,aAAW,EAAXA,EAAaT,oBAGlCU,EAAWC,IACff,EAASe,GACTjB,GAAc,IAGVkB,EAAiBC,IACrB,MAAMtB,EAAOsB,EAAMC,OAAOhB,MACpBiB,EAAY,IAAYxG,GAC9BwG,EAAUzB,SAASC,KAAOA,EAC1BC,EAAUuB,IAGNC,EAAQlE,IACZA,EAAEmE,iBACF,MAAM,SAAE3B,GAAa/E,EACrBmF,GAAc,GACd,MAAMlF,EAAO,OAAH,wBACL,IAAYc,EAAawE,GACnB,SAAOoB,OAAOpB,KAEpBE,GAECe,EAAY,IAChB,GACAxG,EACA,CACEC,QAIFsB,EAAW,CAAErB,KAAM,YAAoBa,IAAgB,KAExDQ,EACG,aAAU,cAAaiF,GACvB,aAAU,cAAaA,EAAWzB,EAAS6B,UAAWJ,EAAUzB,SAASC,OAC3ErC,KACCkE,IACC1B,GAAc,GACV1C,EAAMqE,QACRrE,EAAMqE,OAAOD,EAAE9B,SAASC,MAErBvC,EAAM0B,OACTE,EAAS,aAAgBwC,EAAG,aAAaA,MAG5CT,IACCf,EAASe,EAAIW,SACb5B,GAAc,MAKd6B,EAAa,K,MAGjB,OACE,gCACE,4BAAUC,UAAW1F,GACnB,uBAAK2F,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAQ,eAClD3F,EAAE,uBAEL,2BACE,yBACE0F,UAAU,uBACVhH,KAAK,OACLkH,SAAUf,EACVd,MAAuB,QAAhB,EAAAvF,aAAM,EAANA,EAAQ+E,gBAAQ,eAAEC,KAAI,mBACZ,mBACjBqC,GAAG,cAAa,YACN,cACVC,UAAQ,IAEV,qBAAGJ,UAAU,aAAaG,GAAG,oBAC1B7F,EAAE,6CAKX,gBAAC,IAAa,CACZ/B,gBAAiBgD,EAAMiC,sBACvB0C,SAAUnB,EACVE,QAASA,EACToB,cAAgBC,GAAY5B,EAAe4B,GAC3CzG,WAAYA,EACZM,WAAYrB,EAAOE,KACnBqB,SAAUA,MAMlB,OAAO4C,EACL,wBAAM+C,UAAU,sCAAsCO,SAAUhB,GAC9D,gBAAC,IAAU,KAAEZ,GACb,gBAAC,IAAS,KAAEmB,KACZ,gBAAC,IAAiB,CAChBU,aAActC,GAAS,GACvBF,WAAYA,EACZyC,WAAYnG,EAAE,iBACduE,OAAQ3B,GAAY2B,KAIxB,uBAAKmB,UAAU,mBACb,gBAAC,IAAM,KACL,6BAAQrB,IAEV,gBAAC,IAAW,CAACA,MAAOA,EAAO+B,SAAU9B,IACrC,uBAAKoB,UAAU,mBACb,wBAAMA,UAAU,8CAA8CO,SAAUhB,GACrEO,IACD,gBAAC,IAAS,CAACU,aAActC,EAAOF,WAAYA,GAC1C,gBAAC,IAAW,CAACgC,UAAU,gBACrB,gBAAC,IAAM,CACLhH,KAAK,SAAQ,YACH,eACV2H,WAAYlC,EACZmC,QAAQ,UACRT,GAAG,gBAEF5E,EAAMsF,gBAAkBvG,EAAE,kBAE7B,gBAAC,IAAM,CAACtB,KAAK,SAAS4H,QAAQ,YAAYT,GAAG,SAASW,QAAS5D,GAAY2B,GACxEvE,EAAE,yB,kCCpLnB,geAuBYyG,EAvBZ,mBAuBA,SAAYA,GACV,sCACA,0BACA,kDAHF,CAAYA,MAAkB,KAqQvB,MAAMC,EAAmB,CAC9B,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,QAAS,SACtB,CAAC,IAAYC,OAAQ,QACrB,CAAC,IAAYC,WAAY,YACzB,CAAC,IAAYC,QAAS,SAGxB,IAAYC,EAOAC,EAMAC,EAOAC,GApBZ,SAAYH,GACV,YACA,oBACA,kBACA,YAJF,CAAYA,MAAW,KAOvB,SAAYC,GACV,wBACA,0BACA,2BAHF,CAAYA,MAAS,KAMrB,SAAYC,GACV,kBACA,sCACA,wBACA,sBAJF,CAAYA,MAAY,KAOxB,SAAYC,GAEV,sBACA,oBACA,kBACA,kBACA,cACA,2BAPF,CAAYA,MAAa,KAUlB,MAAMC,EAAoD,CAC/D,CAACH,EAAUI,WAAY,wBAAsBC,SAC7C,CAACL,EAAUM,YAAa,kBAAgBD,SAExC,CAACL,EAAUO,gBAAiB,oCAGjBC,EAAqD,CAChE,CAACP,EAAaQ,QAAS,yBAEvB,CAACR,EAAaS,kBAAmB,+CAEjC,CAACT,EAAaU,WAAY,mCAC1B,CAACV,EAAaW,UAAW,uBAGdC,EAA4C,CACvD,CAACb,EAAUI,WAAY,wBAAsB/D,KAC7C,CAAC2D,EAAUM,YAAa,kBAAgBjE,KACxC,CAAC2D,EAAUO,gBAAiB,WAU9B,IAAYO,EAMAC,EAMAC,EAYAC,EAMAC,EAKAC,GAnCZ,SAAYL,GACV,cACA,4BACA,wBAHF,CAAYA,MAAe,KAM3B,SAAYC,GACV,cACA,gBACA,sBAHF,CAAYA,MAAmB,KAM/B,SAAYC,GACV,cACA,sBAFF,CAAYA,MAA8B,KAY1C,SAAYC,GACV,iBAEA,cAHF,CAAYA,MAAQ,KAMpB,SAAYC,GACV,UACA,UAFF,CAAYA,MAAW,KAKvB,SAAYC,GACV,YACA,wBACA,oBACA,0BACA,oBACA,sBACA,4BACA,4BACA,kCACA,0BACA,oBACA,8BACA,4BACA,wBAdF,CAAYA,MAAa,M,4cC5XlB,MAAMC,EAAoE,I,IAAA,gBAC/EpK,GAAe,EACZgD,EAAK,IAFuE,qBAI/E,OAAQhD,GACN,KAAK,IAAsBC,OACzB,OAAO,gBAAC,IAAgB,iBAAK+C,IAC/B,KAAK,IAAsB7C,MACzB,OAAO,gBAAC,IAAc,iBAAK6C,IAC7B,KAAK,IAAsBpC,QACzB,OAAO,gBAAC,IAAiB,iBAAKoC,IAChC,QACE,OAAO,gBAAC,IAAiB,iBAAKA,O,kCCpBpC,wFASA,MAAMqH,UAAwC,YAI5C,YAAYrH,GACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CACX9J,KAAM0B,KAAKa,MAAMpB,WACjBN,WAAYa,KAAKa,MAAM1B,YAAc,GACrCkJ,SAAU,IAAWtK,WAEvBiC,KAAKsI,yBAA2BtI,KAAKsI,yBAAyBC,KAAKvI,MACnEA,KAAKqE,cAAgBrE,KAAKqE,cAAckE,KAAKvI,MAE/C,yBAAyB1B,GACvB0B,KAAKwI,SACH,CACElK,QAEF,IAAM0B,KAAKa,MAAM2E,SAASxF,KAAKoI,QAGnC,cAAc9D,GACZtE,KAAKwI,SACH,CACErJ,WAAY,OAAF,UAAOmF,IAEnB,IAAMtE,KAAKa,MAAM2E,SAASxF,KAAKoI,QAGnC,SACE,MAAM,EAAExI,GAAMI,KAAKa,MACb4H,EAAY,CAChB,CAAC,IAAW1K,WAAY6B,EAAE,+BAC1B,CAAC,IAAWrB,SAAUqB,EAAE,mBAE1B,OACE,gCACGI,KAAKa,MAAMlB,SACV,uBAAK2F,UAAU,cACb,yBAAOA,UAAU,gBAAgBC,QAAQ,eACtC3F,EAAE,+BAEL,uBAAK0F,UAAU,8BACb,gBAAC,IAAQ,CACPoD,MAAOD,EACPE,kBAAkB,uBAClBlD,GAAG,qBACHmD,YAAa5I,KAAKoI,MAAMC,SACxB7C,SAAUxF,KAAKsI,6BAInB,KACHtI,KAAKoI,MAAM9J,OAAS,IAAWP,UAC9B,gBAAC,IAAgB,CAACyH,SAAUxF,KAAKqE,cAAelF,WAAYa,KAAKoI,MAAMjJ,aAEvE,gBAAC,IAAc,CAACqG,SAAUxF,KAAKqE,cAAelF,WAAYa,KAAKoI,MAAMjJ,eAOxE,MAAM0J,EAAmB,4BAAkBX,I,kCCzElD,oDAKA,MAAMY,UAAwC,YAI5C,YAAYjI,GACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CACXW,SAAU/I,KAAKa,MAAM1B,WAAW4J,UAAY,GAC5CC,SAAUhJ,KAAKa,MAAM1B,WAAW6J,UAAY,IAE9ChJ,KAAKiJ,WAAajJ,KAAKiJ,WAAWV,KAAKvI,MAEzC,WAAW0E,GACT1E,KAAKwI,SACH,CACE,CAAC9D,EAAMC,OAAOvB,MAAOsB,EAAMC,OAAOhB,OAEpC,IAAM3D,KAAKa,MAAM2E,SAASxF,KAAKoI,QAInC,SACE,MAAM,EAAExI,GAAMI,KAAKa,MACnB,OACE,gCACE,uBAAKyE,UAAU,cACb,yBAAOA,UAAU,gBAAgBC,QAAQ,YACtC3F,EAAE,oBAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjBnH,KAAK,OACL8E,KAAK,WACLoC,SAAUxF,KAAKiJ,WACftF,MAAO3D,KAAKoI,MAAMW,WAEpB,qBAAGzD,UAAU,aAAaG,GAAG,iBAC1B7F,EAAE,uDAIT,uBAAK0F,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAQ,YAClD3F,EAAE,6BAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAG,WAAU,YACH,kBAAiB,mBACV,gBACjBnH,KAAK,WACL8E,KAAK,WACLoC,SAAUxF,KAAKiJ,WACftF,MAAO3D,KAAKoI,MAAMY,SAClBtD,UAAQ,IAEV,qBAAGJ,UAAU,aAAaG,GAAG,iBAC1B7F,EACC,mHAUT,MAAMsJ,EAAmB,4BAAkBJ,I,kCC9ElD,8DAKO,MAAMK,EAAgD,EAAG3D,WAAUrG,iBACxE,MAAM,EAAES,GAAM,2BAKd,OACE,gBAAC,IAAkB,CACjB4F,SANkB4D,IACpB,MAAMzF,EAAQyF,EAASC,SAAS,MAAQD,EAAcA,EAAH,KACnD5D,EAAS,CAAE,iBAAkB7B,KAK3B2F,cAAenK,EAAW,mBAAqB,GAC/CsG,GAAG,iBACH8D,MAAO3J,EAAE,0BACT4J,mBAAoB5J,EAClB,oFAEF6J,sBAAuB7J,EAAE,uDACzB8J,YAAY,M,kCCrBlB,4GAUO,MAAMC,EAA+C,EAC1DnE,WACAjB,UACAoB,gBACAxG,aACAM,aACAE,eAEA,MAAO0I,EAAUuB,GAAe,WAAe,gBACzC,EAAEhK,GAAM,2BAERiK,EAAiB,UAA8B,K,MACnD,IACE,MAAMrI,EAAM,YAAkB/B,GACxBqK,EAA6B,QAAf,EAAA3K,EAAWqC,UAAI,QAAI,KACvC,OAAOU,KAAKC,MAAM2H,GAClB,MAAOtF,GAEP,OADAD,EAAQ,gCAAgCC,EAAIW,SACrC,KAER,CAAChG,EAAYM,IAEV4E,EAAgB,cACnB0F,IACM,IAAUA,IACbpE,GAAc,GAEhB,MAAMqE,EAAaD,EAAW,KAAa,oBAAsB,aACjEvE,EAAS,CACPrG,WAAY,CACV,CAAC6K,GAAa9H,KAAK+H,UAAUF,IAE/BlG,iBAAkB,MAGtB,CAAC8B,EAAeuE,WAGZzB,EAAY,CAChB0B,YAAavK,EAAE,qCACf,cAAeA,EAAE,qCAGnB,OACE,gCACGD,GACC,uBAAK2F,UAAU,cACb,yBAAOA,UAAU,gBAAgBC,QAAQ,eACtC3F,EAAE,+BAEL,uBAAK0F,UAAU,8BACb,gBAAC,IAAQ,CACPoD,MAAOD,EACPE,kBAAkB,uBAClBlD,GAAG,qBACHmD,YAAaP,EACb7C,SAAUoE,MAKJ,gBAAbvB,EACC,gBAAC,IAAmB,CAAC7C,SAAUnB,EAAelF,WAAY0K,IAE1D,gBAAC,IAAmB,CAClBrE,SAAUnB,EACVlF,WAAY0K,EACZO,UAAWzE,O,kCC7ErB,mMAWA,MAAM0E,UAA2C,YAI/C,YAAYxJ,G,MACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CAEXkC,mBAAoB,IAAUtK,KAAKa,MAAM1B,eAAiBa,KAAKa,MAAM1B,WAAW,KAChFoL,mBAAoBvK,KAAKwK,0BACF,QAArB,EAAAxK,KAAKa,MAAM1B,kBAAU,eAAG,OAAca,KAAKa,MAAM1B,YAEnDsL,cAAc,GAEhBzK,KAAKqE,cAAgBrE,KAAKqE,cAAckE,KAAKvI,MAE/C,sBACE,MAAO,CACL0K,MAAO,CACLC,QAAS,GACT5B,SAAU,GACVC,SAAU,GACV4B,MAAO,GACPC,KAAM,IAERC,IAAK,OAGT,yBAAyBC,GACvB,MAAMC,EAAmB,GACzB,OAAI,IAAUD,GACL,IAASC,EAAkBhL,KAAKiL,wBAEzC,IAAOF,EAAmB,CAACG,EAAGC,KAE5B,MAAMC,EAAc,SAAOxH,OAAO,IAAMsH,EAAG,OAAQ,KAC7CG,EAAa,IAAUD,GAAe,IAAOE,MAAM,GAAI,IAAM,IAAQF,EAAa,KACxFJ,EAAiBO,KAAK,CACpBb,MAAO,CACLC,QAASQ,EACTpC,SAAU,IAAMmC,EAAG,WAAYG,EAAW,IAC1CrC,SAAU,IAAMkC,EAAG,WAAYG,EAAW,IAC1CT,MAAO,IAAMM,EAAG,QAAS,IACzBL,KAAM,IAAMK,EAAG,OAAQ,KAEzBJ,IAAK,IAAMI,EAAG,MAAO,WAGlBF,GAET,yBAAyBA,GACvB,MAAMQ,EAAqB,GAS3B,OARA,IAAOR,EAAmBrH,IACxB6H,EAAmB7H,EAAM+G,MAAMC,SAAW,IAAOhH,EAAM+G,MAAO,CAC5D,WACA,WACA,OACA,YAGGc,EAET,qBAAqBjB,GACnB,MAAMQ,EAAoB/K,KAAKyL,yBAAyBlB,GACxDvK,KAAKa,MAAM2E,SACTxF,KAAKoI,MAAMkC,mBAAqB,CAAE,CAAC,KAAYS,GAAsBA,GAGzE,cAAcW,EAAcC,GAC1B3L,KAAKwI,SACFJ,IACC,MAAMmC,EAAqB,IAAInC,EAAMmC,oBAC/BqB,EAAmB,CACvBd,IAAKP,EAAmBoB,GAAYb,IACpCJ,MAAOgB,EACPb,KAAM,SAAO9F,OAAO,GAAG2G,EAAa3C,YAAY2C,EAAa1C,aAG/D,OADAuB,EAAmBoB,GAAcC,EAC1B,CACLrB,uBAGJ,IAAMvK,KAAK6L,qBAAqB7L,KAAKoI,MAAMmC,qBAG/C,YAAYoB,GACV3L,KAAKwI,SACFJ,IACC,MAAMmC,EAAqB,IAAInC,EAAMmC,oBAErC,OADAA,EAAmBuB,OAAOH,EAAY,GAC/B,CAAEpB,uBAEX,IAAMvK,KAAK6L,qBAAqB7L,KAAKoI,MAAMmC,qBAG/C,WACEvK,KAAKwI,SACH,CACE+B,mBAAoB,IAASvK,KAAKoI,MAAMmC,mBAAoBvK,KAAKiL,wBAEnE,KACEjL,KAAK6L,qBAAqB7L,KAAKoI,MAAMmC,sBAI3C,SACE,MAAM,EAAE3K,GAAMI,KAAKa,MACbkL,EAAoB,IAAM/L,KAAKoI,MAAMmC,mBAAoB,CAACyB,EAAWC,KACzE,MAAM,IAAEnB,EAAG,MAAEJ,GAAUsB,UAAa,IAC9B,QAAErB,EAAO,MAAEC,EAAK,SAAE5B,EAAQ,SAAED,GAAa2B,UAAS,GACxD,OACE,uBAAKpF,UAAU,4BAA4B9D,IAAKsJ,GAC7C,IAAO9K,KAAKoI,MAAMmC,oBAAsB,GACvC,uBAAKjF,UAAU,0CACb,gBAAC,IAAM,CACLc,QAAS,IAAMpG,KAAKkM,YAAYD,GAChC3N,KAAK,SACL4H,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACZ,UAAU,oBAC1B1F,EAAE,+BAIT,gBAAC,IAAyB,CACxB6F,GAAIwG,EACJtB,QAASA,EACTC,MAAOA,EACP5B,SAAUA,EACVD,SAAUA,EACVvD,SAAUxF,KAAKqE,mBAKvB,OACE,gCACG0H,EACD,gBAAC,IAAM,CACLzG,UAAU,+DACVc,QAAS,IAAMpG,KAAKmM,WACpB7N,KAAK,SACL4H,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACZ,UAAU,oBACzB1F,EAAE,6BAON,MAAMwM,EAAsB,4BAAkB/B,I,kCCrKrD,6DAIO,MAAMgC,EAAsE,EACjF5G,KACAkF,UACAC,QACA5B,WACAD,WACAvD,eAEA,MAAM,EAAE5F,GAAM,2BAER0M,EAAc,CAAClJ,EAAcO,KACjC,MAAM4I,EAAkBxD,EAASyD,OAC3BC,EAAkBzD,EAASwD,OAC3B3B,EAAO9B,GAAYC,EAAW,SAAOjE,OAAO,GAAGwH,KAAmBE,KAAqB,GAC7FjH,EAAS,OAAD,QAEJmF,UACA5B,WACAC,WACA4B,QACA,CAACxH,GAAOO,GACJkH,EAAO,CAAEA,QAAS,IAExBpF,IAIEiH,EAAmB/L,GACvB2L,EAAY3L,EAAEgM,cAAcvJ,KAAMzC,EAAEgM,cAAchJ,MAAM6I,QAEpDI,EAAqBjM,GACzB2L,EAAY3L,EAAEgM,cAAcvJ,KAAMzC,EAAEgM,cAAchJ,OAEpD,OACE,uBAAK2B,UAAU,wBAAuB,eAAc,4BAClD,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAYE,EAAH,YACnD7F,EAAE,mCAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAOA,EAAH,WAAe,mBACEA,EAAH,gBAClBnH,KAAK,OACL8E,KAAK,UACLoC,SAAUoH,EACVjJ,MAAOgH,EACPkC,OAAQH,EAAe,YACb,uBACVhH,UAAQ,KAGZ,qBAAGJ,UAAU,aAAaG,GAAOA,EAAH,iBAC3B7F,EAAE,6CAGP,uBAAK0F,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAYE,EAAH,aACnD7F,EAAE,oBAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAOA,EAAH,YACJnH,KAAK,OACL8E,KAAK,WACLoC,SAAUoH,EACVjJ,MAAOoF,EACP8D,OAAQH,EAAe,YACb,wBACVhH,UAAQ,MAId,uBAAKJ,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAYE,EAAH,aACnD7F,EAAE,oBAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAOA,EAAH,YACJnH,KAAK,WACL8E,KAAK,WACLoC,SAAUoH,EACVjJ,MAAOqF,EACP6D,OAAQH,EAAe,YACb,wBACVhH,UAAQ,MAId,uBAAKJ,UAAU,cACb,yBAAOA,UAAU,gBAAgBC,QAAYE,EAAH,UACvC7F,EAAE,iBAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAOA,EAAH,SACJnH,KAAK,OACL8E,KAAK,QACLoC,SAAUoH,EACVjJ,MAAOiH,EACPiC,OAAQH,EAAe,YACb,4B,kCC9GtB,0FAMA,MAAMI,UAA2C,YAI/C,YAAYjM,GACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CACX2E,WAAY,IAAU/M,KAAKa,MAAM1B,YAAc,GAAK+C,KAAK+H,UAAUjK,KAAKa,MAAM1B,YAC9E6N,YAAY,GAEdhN,KAAKiJ,WAAajJ,KAAKiJ,WAAWV,KAAKvI,MACvCA,KAAKiN,aAAejN,KAAKiN,aAAa1E,KAAKvI,MAE7C,WAAW0E,GACT1E,KAAKkN,YAAY,IAAUhL,KAAKC,MAAOuC,EAAMC,OAAOhB,OAAQe,EAAMC,OAAOhB,OAE3E,aAAayF,GACXpJ,KAAKkN,YAAY,IAAUhL,KAAKC,MAAOiH,GAAWA,GAEpD,YAAY+D,EAAYhO,GACtBa,KAAKwI,SACH,CACEuE,WAAY5N,EACZ6N,WAAY,IAAUG,IAExB,KACEnN,KAAKa,MAAM2E,SAAS2H,GACpBnN,KAAKa,MAAMuJ,UAAUpK,KAAKoI,MAAM4E,cAItC,SACE,MAAM,EAAEpN,GAAMI,KAAKa,MACnB,OACE,gCACE,gBAAC,IAAkB,CACjB2E,SAAUxF,KAAKiN,aACf3D,cAAetJ,KAAKoI,MAAM2E,WAC1BtH,GAAG,gBACH8D,MAAO3J,EAAE,6BACT4J,mBAAoB5J,EAAE,2DACtB6J,sBAAuB7J,EACrB,oGAEF8J,YAAY,IAEb1J,KAAKoI,MAAM4E,YACV,uBAAK1H,UAAU,4BACZ1F,EAAE,0DAQR,MAAMwN,EAAsB,4BAAkBN,I,kCC9DrD,8DAMA,MAAMO,UAAyC,YAI7C,YAAYxM,GACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CACXjJ,WAAY,CAAEmO,iBAAkBtN,KAAKa,MAAM1B,WAAWmO,kBAAoB,KAE5EtN,KAAKuN,uBAAyBvN,KAAKuN,uBAAuBhF,KAAKvI,MAC/DA,KAAKwN,sBAAwBxN,KAAKwN,sBAAsBjF,KAAKvI,MAE/D,uBAAuB0E,GACrB1E,KAAKwI,SACH,CACErJ,WAAY,CAAEmO,iBAAkB5I,EAAMC,OAAOhB,QAE/C,IAAM3D,KAAKa,MAAM2E,SAASxF,KAAKoI,QAGnC,wBACEpI,KAAKwI,SACH,CACErJ,WAAY,CAAEmO,iBAAkB,gBAElC,IAAMtN,KAAKa,MAAM2E,SAASxF,KAAKoI,QAGnC,SACE,MAAM,EAAExI,GAAMI,KAAKa,MACnB,OACE,uBAAKyE,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAQ,sBAClD3F,EAAE,8BAEL,uBAAK0F,UAAU,uBACb,yBACEA,UAAU,uBACVG,GAAG,qBAAoB,YACb,aACVnH,KAAK,OACL8E,KAAK,mBACLoC,SAAUxF,KAAKuN,uBACf5J,MAAO3D,KAAKoI,MAAMjJ,WAAWmO,iBAAgB,mBAC5B,sBACjB5H,UAAQ,IAEV,0BACEpH,KAAK,SACL8H,QAASpG,KAAKwN,sBACdlI,UAAU,+BAA8B,YAC9B,2BAET1F,EAAE,qBAGP,qBAAG0F,UAAU,aAAaG,GAAG,uBAC1B7F,EAAE,6EAON,MAAM6N,EAAoB,4BAAkBJ,I,kCCtEnD,yKAYA,MAAMK,UAAyC,YAI7C,YAAY7M,GACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CACXmC,mBAAoBvK,KAAK2N,2BAA2B3N,KAAKa,MAAM1B,aAEjEa,KAAKqE,cAAgBrE,KAAKqE,cAAckE,KAAKvI,MAE/C,wBACE,MAAO,CACL0K,MAAO,CACLlJ,IAAK,GACLmC,MAAO,IAETmH,IAAK,OAGT,2BAA2B8C,GACzB,OAAI,IAAUA,GACL,CAAC5N,KAAK6N,yBAER,IAAMD,EAAqB,CAACjK,EAAOnC,KACxC,MAAMsM,EAAW,WAAc,KAAMnK,GACrC,MAAO,CACLmH,IAAK,MACLJ,MAAO,CACLlJ,MACAmC,MAAOmK,EAAW,SAAO/I,OAAOpB,GAASA,EACzCoK,SAAUD,EACVA,eAKR,2BAA2BE,GACzB,OAAO,IACLA,EACA,CAACC,EAAK9C,K,QACJ,WAAS8C,EAAK,CACZ,CAAC9C,EAAET,MAAMlJ,MACA,QAAP,EAAA2J,EAAET,aAAK,eAAEqD,YAAmB,QAAP,EAAA5C,EAAET,aAAK,eAAEoD,UAAW3C,EAAET,MAAM/G,MAAQ,SAAOoB,OAAOoG,EAAET,MAAM/G,UAErF,IAGJ,cAAc+H,EAAcwC,GAC1B,MAAMC,EAA4B,IAAInO,KAAKoI,MAAMmC,oBAC3CqB,EAAmB,CACvBd,IAAKqD,EAA0BD,GAASpD,IACxCJ,MAAOgB,GAETyC,EAA0BD,GAAWtC,EACrC5L,KAAKwI,SACH,CACE+B,mBAAoB4D,GAEtB,IACEnO,KAAKa,MAAM2E,SAAS,CAClB3B,iBAAkB7D,KAAKoO,2BAA2BpO,KAAKoI,MAAMmC,uBAIrE,YAAY2D,GACV,MAAMC,EAA4B,IAAInO,KAAKoI,MAAMmC,oBACjD4D,EAA0BrC,OAAOoC,EAAS,GAC1ClO,KAAKwI,SACH,CACE+B,mBAAoB4D,GAEtB,IACEnO,KAAKa,MAAM2E,SAAS,CAClB3B,iBAAkB7D,KAAKoO,2BAA2BpO,KAAKoI,MAAMmC,uBAIrE,WACEvK,KAAKwI,SACH,CACE+B,mBAAoB,IAASvK,KAAKoI,MAAMmC,mBAAoBvK,KAAK6N,0BAEnE,IACE7N,KAAKa,MAAM2E,SAAS,CAClB3B,iBAAkB7D,KAAKoO,2BAA2BpO,KAAKoI,MAAMmC,uBAIrE,SACE,MAAM,EAAE3K,GAAMI,KAAKa,MACbkL,EAAoB,IAAM/L,KAAKoI,MAAMmC,mBAAoB,CAACyB,EAAWC,IAEvE,uBAAK3G,UAAU,4BAA4B9D,IAAKwK,EAAUlB,KACvD,IAAO9K,KAAKoI,MAAMmC,oBAAsB,GACvC,uBAAKjF,UAAU,0CACb,gBAAC,IAAM,CACLhH,KAAK,SACL8H,QAAS,IAAMpG,KAAKkM,YAAYD,GAChC/F,QAAQ,OAAM,YACJ,uBAEV,gBAAC,IAAe,CAACZ,UAAU,oBAC1B1F,EAAE,6BAIT,gBAAC,IAAiB,CAAC6F,GAAIwG,EAAOvB,MAAOsB,EAAUtB,MAAOlF,SAAUxF,KAAKqE,kBAI3E,OACE,gCACG0H,EACD,gBAAC,IAAM,CACLzG,UAAU,+DACVc,QAAS,IAAMpG,KAAKmM,WACpB7N,KAAK,SACL4H,QAAQ,OAAM,YACJ,0BAEV,gBAAC,IAAc,CAACZ,UAAU,oBACzB1F,EAAE,2BAON,MAAMyO,EAAoB,4BAAkBX,I,kCC7InD,gGAMO,MAAMY,UAAyC,YAIpD,YAAYzN,GACVsH,MAAMtH,GACNb,KAAKoI,MAAQ,CACX5G,IAAKX,EAAM6J,MAAMlJ,IACjBmC,MAAO9C,EAAM6J,MAAM/G,MACnBmK,SAAUjN,EAAM6J,MAAMoD,UAExB9N,KAAKuO,cAAgBvO,KAAKuO,cAAchG,KAAKvI,MAC7CA,KAAKwO,YAAcxO,KAAKwO,YAAYjG,KAAKvI,MAE3C,cAAcoJ,EAAU0E,GACtB9N,KAAKwI,SACH,CACE7E,MAAOyF,EACP2E,SAAUD,GAEZ,IAAM9N,KAAKa,MAAM2E,SAASxF,KAAKoI,MAAOpI,KAAKa,MAAM4E,KAGrD,YAAYf,GACV1E,KAAKwI,SACH,CACEhH,IAAKkD,EAAMC,OAAOhB,OAEpB,IAAM3D,KAAKa,MAAM2E,SAASxF,KAAKoI,MAAOpI,KAAKa,MAAM4E,KAGrD,SACE,MAAM,EAAE7F,GAAMI,KAAKa,MACnB,OACE,uBAAKyE,UAAU,kCACb,uBAAKA,UAAU,cACb,yBAAOA,UAAU,4BAA4BC,QAAYvF,KAAKa,MAAM4E,GAAd,QACnD7F,EAAE,eAEL,2BACE,yBACE0F,UAAU,uBACVG,GAAOzF,KAAKa,MAAM4E,GAAd,OACJnH,KAAK,OACL8E,KAAK,MACLoC,SAAUxF,KAAKwO,YACf7K,MAAO3D,KAAKoI,MAAM5G,IAAG,YACX,aACVkE,UAAQ,MAId,uBAAKJ,UAAU,cACb,2BACE,gBAAC,IAAkB,CACjBE,SAAUxF,KAAKuO,cACfjF,cAAetJ,KAAKoI,MAAMzE,MAC1B8B,GAAOzF,KAAKa,MAAM4E,GAAd,SACJ8D,MAAO3J,EAAE,gBACT4J,mBAAoB5J,EAClB,0EAEF6O,kBAAmBzO,KAAKoI,MAAM0F,eASrC,MAAMY,EAAoB,4BAAkBJ,I,kCC7EnD,IAAYK,EAkBAC,EASAC,EA3BZ,+GAAYF,GACV,yBACA,+BACA,iBACA,qDACA,qBALF,CAAYA,MAAU,KAkBtB,SAAYC,GACV,kBACA,wBACA,kBACA,gBACA,iBACA,aANF,CAAYA,MAAW,KASvB,SAAYC,GACV,iBACA,+BACA,yBACA,iDAJF,CAAYA,MAAc,M,8bCXnB,MAAMC,UAAsB,IAKjC,YAAY/O,GACVoI,MAAMpI,GAQE,KAAAgP,gBAAkB,KAC1B,OAAQ/O,KAAKD,UAAUN,YACrB,KAAK,IAAWuP,sBAChB,KAAK,IAAWC,WAChB,KAAK,IAAWC,MACd,MAAO,CAAErE,KAAM,SAAOjH,OAAO5D,KAAKD,UAAUoP,cAAcnG,WAC5D,QACE,OAAO,OAIH,KAAAoG,gBAAkB,K,MAC1B,MAAM,KAAEhM,EAAI,MAAEiM,EAAK,OAAEvR,GAAW,EAAYkC,KAAKD,UAAUuP,KACrDC,GAAsC,QAAzB,EAAAvP,KAAKD,UAAUwP,kBAAU,eAAEC,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLC,SAAUrM,EACViM,QACAK,KAAM5R,EACN6R,cAAe3P,KAAKD,UAAU6P,IAC9BL,aACAM,YAAa7P,KAAKD,UAAU8P,YAC5BC,eAAgB9P,KAAKD,UAAU+P,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,IAME,GAAoB,aALD/P,KAAKgQ,OAAOC,MAAMC,IAAI,CACvCb,MAAOrP,KAAKmD,SAASkM,MACrBc,KAAMnQ,KAAKmD,SAASsM,YAGbW,OACP,OAAO,IAAWC,UAEpB,MAAO1P,GACP,OAAQA,EAAEyP,QACR,KAAK,IACH,OAAO,IAAWE,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWC,uBAEpB,QACE,OAAO,IAAWC,aAIxB,OAAO,IAAWA,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMC,QAAa3Q,KAAKgQ,OAAOC,MAAMW,aAAa,CAChDvB,MAAOrP,KAAKmD,SAASkM,MACrBc,KAAMnQ,KAAKmD,SAASsM,WAKtB,MAAO,CAAEoB,SAHIF,EAAKtS,KAAKyS,IAAKC,GACnBA,EAAE3N,OAGX,MAAOzC,GACP,MAAO,CAAEkQ,SAAU,QAIvB,KAAA3Q,gBAAyBwC,GAA8D,EAAD,gCACpF,IACE,MAAMiO,QAAa3Q,KAAKgQ,OAAOC,MAAMe,YAAY,OAAD,sBAC9C3B,MAAOrP,KAAKmD,SAASkM,MACrBc,KAAMnQ,KAAKmD,SAASsM,UAChB/M,IAAUA,aAAM,EAANA,EAAQuO,cAClB,CAAEC,KAAM,GAAGlR,KAAKmD,SAASoM,cAAc7M,EAAOuO,gBAC9C,CAAEC,KAAMlR,KAAKmD,SAASoM,aACtBvP,KAAKmD,SAASwM,cAAgB,CAAEC,IAAK5P,KAAKmD,SAASwM,eAAkB,KAE3E,IAAIvP,EAAQ,GAIZ,OAHoB,MAAhBuQ,EAAKP,QAAkB9E,MAAM6F,QAAQR,EAAKtS,QAC5C+B,EAAQuQ,EAAKtS,KAAKyS,IAAKlR,GAAMA,EAAEwD,OAE1B,CAAEhD,SACT,MAAOO,GACP,MAAO,CAAEP,MAAO,QAIpB,KAAAgR,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAMT,QAAa3Q,KAAKgQ,OAAOC,MAAMoB,cAAc,CACjDhC,MAAOrP,KAAKmD,SAASkM,MACrBc,KAAMnQ,KAAKmD,SAASsM,WAEtB,OAAoB,MAAhBkB,EAAKP,OACA,CAAEkB,UAAWlQ,OAAOC,KAAKsP,EAAKtS,OAEhC,CAAEiT,UAAW,IACpB,MAAO3Q,GACP,MAAO,CAAE2Q,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMxQ,EAAU,CACdyQ,OAAQ,CAAC,+BACTC,cAAe,CAAC,UAAUL,GAC1B,uBAAwB,CAAC,eAErBnP,EAAO,CACXe,KAAM,MACN0O,QAAQ,EACRC,OAAQ,CACNzC,IAAKmC,EACLO,aAAc,OACdC,aAAcP,EAAkB,IAAM,IACtCtT,OAAQuT,GAEVO,OAAQ,CAAC,OAAQ,iBAEbC,EACmB,eAAvBnS,KAAKmD,SAASuM,KACV,yBACA,WAAW1P,KAAKmD,SAASuM,cAS/B,OAAsC,aAPO,mBAAiB9N,KAAK,IAAe,CAChF0N,IAAK,GAAG6C,WAA2BnS,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,iBACxE2C,OAAQ,OACRjR,UACAkB,KAAMH,KAAK+H,UAAU5H,MAGAR,cAGzB,KAAAwQ,cAAuBnB,GAAmC,EAAD,gCACvD,IAOE,OAAuB,aANJlR,KAAKgQ,OAAOC,MAAMe,YAAY,OAAD,QAC9C3B,MAAOrP,KAAKmD,SAASkM,MACrBc,KAAMnQ,KAAKmD,SAASsM,SACpByB,QACIlR,KAAKmD,SAASwM,cAAgB,CAAEC,IAAK5P,KAAKmD,SAASwM,eAAkB,MAE/DS,OACZ,MAAOzP,GACP,OAAO,MAIX,KAAA2R,eAAwBpB,GAAyC,EAAD,gCAC9D,IACE,MAAMP,QAAa3Q,KAAKgQ,OAAOC,MAAMe,YAAY,OAAD,QAC9C3B,MAAOrP,KAAKmD,SAASkM,MACrBc,KAAMnQ,KAAKmD,SAASsM,SACpByB,QACIlR,KAAKmD,SAASwM,cAAgB,CAAEC,IAAK5P,KAAKmD,SAASwM,eAAkB,KAE3E,OAAoB,MAAhBgB,EAAKP,OAEAmC,EAAOC,KAAK7B,EAAKtS,KAAc,QAAG,UAAUW,WAE9C,KACP,MAAO2B,GACP,OAAO,SAIX,KAAA8R,oBAAsB,IACpBzS,KAAKqS,cAAc,GAAGrS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS2M,kBAElE,KAAA4C,sBAAwB,IAAM1S,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,YAEjD,KAAAoD,qBAAuB,IACrB3S,KAAKsS,eAAe,GAAGtS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS2M,kBAEnE,KAAA8C,kBAAoB,IAClB5S,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,eACnBvP,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,aAErB,KAAAsD,mBAAqB,IACnB7S,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,eACpBvP,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,aAEtB,KAAAuD,iBAAmB,IACjB9S,KAAKqS,cAAc,GAAGrS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS0M,eAElE,KAAAkD,kBAAoB,IAClB/S,KAAKsS,eAAe,GAAGtS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS0M,eAEnE,KAAAtP,sBAAwB,IAAMP,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,iBA1MhD,MAAMyD,EAAWhT,KAAK+O,kBACtB/O,KAAKmD,SAAWnD,KAAKoP,kBACrB,MAAM6D,EACmB,eAAvBjT,KAAKmD,SAASuM,KAAwB,KAAO,WAAW1P,KAAKmD,SAASuM,cACxE1P,KAAKgQ,OAAS,IAAI,EAAQ,OAAD,wBAAMgD,GAAQ,CAAEC,iB,2cCNtC,MAAMC,UAAyB,IAOpC,YAAYnT,GACVoI,MAAMpI,GALA,KAAAoT,QAAU,gCAEV,KAAAC,UAAW,EAWT,KAAArE,gBAAkB,KAC1B,OAAQ/O,KAAKD,UAAUN,YACrB,KAAK,IAAWwP,WAAY,CAC1B,MAAM,SAAElG,EAAQ,SAAEC,GAAahJ,KAAKD,UAAUoP,cAE9C,MAAO,CAAE0C,cAAe,SADJ,SAAO9M,OAAO,GAAG,SAAOnB,OAAOmF,MAAa,SAAOnF,OAAOoF,OAGhF,QACE,OAAO,OAIH,KAAAqK,UAAY,CACpB/D,EACAgE,EACAnS,EACAkB,IACG,EAAD,gCACF,MAAMkR,EAAcvT,KAAK+O,kBAEnByE,EAAiB,OAAH,sBAClB5B,OAAQ,oBACL2B,GACApS,GAGL,GAAInB,KAAKoT,SACP,OAAO,YAAsB,OAAD,QAC1B9D,MACA8C,OAAQkB,GAAiB,MACzBnS,QAAS,YAAeqS,IACpBnR,GAAQ,CAAEA,KAAMH,KAAK+H,UAAU5H,MAIvC,MAAML,QAAiByR,MAAMnE,EAAK,OAAF,QAC9B8C,OAAQkB,GAAiB,MACzBnS,QAASqS,GACLnR,GAAQ,CAAEA,KAAMH,KAAK+H,UAAU5H,MAErC,IAAKL,EAAS0R,GACZ,MAAM1R,EAER,MAA6C,eAAzCA,EAASb,QAAQ+O,IAAI,gBAChBlO,EAAS2R,OAEX3R,EAAS4R,UAGlB,KAAAxE,gBAAkB,K,MAChB,MAAM,KAAEhM,EAAI,MAAEiM,EAAK,KAAEK,GAAS,EAAkB1P,KAAKD,UAAUuP,KACzDC,GAAsC,QAAzB,EAAAvP,KAAKD,UAAUwP,kBAAU,eAAEC,QAAQ,MAAO,MAAO,GACpE,MAAO,CACLC,SAAUrM,EACViM,QACAK,OACAC,cAAe3P,KAAKD,UAAU6P,KAAO,OACrCL,aACAM,YAAa7P,KAAKD,UAAU8P,YAC5BC,eAAgB9P,KAAKD,UAAU+P,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMT,EAAMtP,KAAKoT,SACb,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,WACvE,GAAGzP,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,WACzE,IAEE,UADmBzP,KAAKqT,UAAU/D,IACzBuE,OAAS7T,KAAKmD,SAASsM,SAC9B,OAAO,IAAWY,UAEpB,MAAO1P,GACP,OAAQA,EAAEyP,QACR,KAAK,IACH,OAAO,IAAWE,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWuD,iBAEpB,QACE,OAAO,IAAWtD,wBAIxB,OAAO,IAAWC,eAGpB,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,MAAMpB,EAAMtP,KAAKoT,SACb,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,oBACvE,GAAGzP,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,yBACzE,IACE,MAAMpR,QAAa2B,KAAKqT,UAAU/D,GAElC,MAAO,CAAEuB,SADIxS,EAAK0V,OAAOjD,IAAKrQ,GAAMA,EAAE2C,OAEtC,MAAOzC,GACP,MAAO,CAAEkQ,SAAU,QAIvB,KAAAmD,YAAc,CAACZ,EAAmBnC,KAChC,IAAI3B,EAAM,GAUV,OAREA,EADE2B,EACImC,EACF,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,kBAAkBzP,KAAKmD,SAASoM,cAAc0B,iBAA4BjR,KAAKmD,SAASwM,gBAC/J,GAAG3P,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,gBAAgBzP,KAAKmD,SAASwM,iBAAiB3P,KAAKmD,SAASoM,cAAc0B,eAE9ImC,EACF,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,kBAAkBzP,KAAKmD,SAASoM,0BAA0BvP,KAAKmD,SAASwM,gBAC/I,GAAG3P,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,gBAAgBzP,KAAKmD,SAASwM,iBAAiB3P,KAAKmD,SAASoM,wBAEjID,GAGT,KAAApP,gBAAyBwC,GAA8D,EAAD,gC,MACpF,MAAM4M,GAAM5M,aAAM,EAANA,EAAQuO,cAChBjR,KAAKgU,YAAYhU,KAAKoT,SAAU1Q,EAAOuO,cACvCjR,KAAKgU,YAAYhU,KAAKoT,UAC1B,IACE,MAAM/U,QAAa2B,KAAKqT,UAAU/D,GAElC,MAAO,CAAElP,MADKJ,KAAKoT,SAAW/U,EAAK0V,QAAoB,QAAX,EAAA1V,EAAK0V,cAAM,eAAEjD,IAAKmD,GAAMA,EAAE/C,QAAS,IAE/E,MAAOvQ,GACP,MAAO,CAAEP,MAAO,QAIpB,KAAAgR,oBAAsB,IAAuC,EAAD,gCAC1D,MAAM9B,EAAMtP,KAAKoT,SACb,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,WACvE,GAAGzP,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,WACzE,IAEE,MAAO,CAAE6B,UAAW,QADDtR,KAAKqT,UAAU/D,IACR4E,WAC1B,MAAOvT,GACP,MAAO,CAAE2Q,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMvQ,EAAU,CACd,eAAgB,CAAC,oBACjB0Q,cAAe,CAAC,SAASL,IAErBnP,EAAO,CACXiN,IAAKmC,EACLS,OAAQ,CAAC,YAAa,sBAAuB,uBAC7CiC,wBAAyBzC,EACzBI,QAAQ,GAEJxC,EAAMtP,KAAKoT,SACb,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,iBACvE,GAAGzP,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,iBAUzE,OAAsC,aAPO,mBAAiB7N,KAAK,IAAe,CAChF0N,MACA8C,OAAQ,OACRjR,UACAkB,KAAMH,KAAK+H,UAAU5H,MAGAR,cAGzB,KAAAwQ,cAAuBnB,GAAmC,EAAD,gCACvD,MAAMkD,EAAWlD,EAAK1B,QAAQ,MAAO,IAC/BF,EAAMtP,KAAKoT,SACb,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,gBAAgB2E,QAAepU,KAAKmD,SAASwM,gBACpH,GAAG3P,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,gBAAgBzP,KAAKmD,SAASwM,iBAAiByE,IACxH,IAEE,aADMpU,KAAKqT,UAAU/D,IACd,EACP,MAAO3O,GACP,OAAO,MAIX,KAAA2R,eAAwBpB,GAAyC,EAAD,gCAC9D,MAAMkD,EAAWlD,EAAK1B,QAAQ,MAAO,IAC/BF,EAAMtP,KAAKoT,SACb,GAAGpT,KAAKmT,oBAAoBnT,KAAKmD,SAASkM,eAAerP,KAAKmD,SAASsM,gBAAgB2E,QAAepU,KAAKmD,SAASwM,gBACpH,GAAG3P,KAAKmT,wBAAwBnT,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,gBAAgBzP,KAAKmD,SAASwM,iBAAiByE,IACxH,IAEE,aADmBpU,KAAKqT,UAAU/D,GAElC,MAAO3O,GACP,OAAO,SAIX,KAAA8R,oBAAsB,IACpBzS,KAAKqS,cAAc,GAAGrS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS2M,kBAElE,KAAA4C,sBAAwB,IAAM1S,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,YAEjD,KAAAoD,qBAAuB,IACrB3S,KAAKsS,eAAe,GAAGtS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS2M,kBAEnE,KAAA8C,kBAAoB,IAClB5S,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,eACnBvP,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,aAErB,KAAAsD,mBAAqB,IACnB7S,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,eACpBvP,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,aAEtB,KAAAuD,iBAAmB,IACjB9S,KAAKqS,cAAc,GAAGrS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS0M,eAElE,KAAAkD,kBAAoB,IAClB/S,KAAKsS,eAAe,GAAGtS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS0M,eAEnE,KAAAtP,sBAAwB,IAAMP,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,iBApOhDvP,KAAKmD,SAAWnD,KAAKoP,kBACM,kBAAvBpP,KAAKmD,SAASuM,OAChB1P,KAAKmT,QAAU,WAAWnT,KAAKmD,SAASuM,oBACxC1P,KAAKoT,UAAW,M,ybCTf,MAAMiB,UAAsB,IAOjC,YAAYtU,GACVoI,MAAMpI,GAUA,KAAAuU,QAAU,IAAiC,EAAD,gCAChD,GAAItU,KAAKmQ,KACP,OAAOoE,QAAQC,QAAQxU,KAAKmQ,MAE9B,MAAMA,QAAyBnQ,KAAKgQ,OAAOyE,SAASC,KAAK1U,KAAKmD,SAASwR,UACvE,IAAKxE,EACH,MAAM,IAAIrO,MAAM,IAAKlC,EAAE,0CAClB,GAAIuQ,EAAKyE,sBAAwB5U,KAAKmD,SAASwR,SACpD,MAAM,IAAI7S,MACR,IAAKlC,EAAE,6EAA8E,CACnFsR,KAAMf,EAAKyE,oBACXxR,KAAMpD,KAAKmD,SAASwR,YAM1B,OADA3U,KAAKmQ,KAAOA,EACLoE,QAAQC,QAAQxU,KAAKmQ,SAmB9B,KAAApB,gBAAkB,KAChB,OAAQ/O,KAAKD,UAAUN,YACrB,KAAK,IAAWuP,sBAChB,KAAK,IAAWE,MAChB,KAAK,IAAWD,WACd,OAAO,SAAOrL,OAAO5D,KAAKD,UAAUoP,cAAcnG,UACpD,QACE,OAAO,OAIb,KAAA6L,aAAe,IAA0B,EAAD,gCACtC,IAEE,aADmB7U,KAAKsU,WACZ7O,GACZ,MAAO9E,GACP,MAAMA,MAIV,KAAAoP,gBAAkB,IAAiC,EAAD,gCAChD,IAEE,aADM/P,KAAKsU,UACJ,IAAWjE,UAClB,MAAO1P,GACP,OAAQA,EAAEyP,QACR,KAAK,IACH,OAAO,IAAWE,kBAEpB,KAAK,IACH,OAAO,IAAWC,YAEpB,KAAK,IACH,OAAO,IAAWuD,iBAEpB,KAAK,IACH,OAAO,IAAWtD,uBAEpB,QACE,OAAO,IAAWC,iBAM1B,KAAAC,kBAAoB,IAAiC,EAAD,gCAClD,IACE,MAAMoE,QAAkB9U,KAAK6U,eACvBlE,QAAa3Q,KAAKgQ,OAAO+E,SAASC,IAAIF,GAE5C,MAAO,CAAEjE,SADIF,EAAKG,IAAKrQ,GAAMA,EAAE2C,OAE/B,MAAOzC,GACP,MAAO,CAAEkQ,SAAU,QAIvB,KAAA3Q,gBAAyBwC,GAGI,EAAD,gCAC1B,IACE,MAAMoS,QAAkB9U,KAAK6U,eACvBlE,QAAa3Q,KAAKgQ,OAAOiF,aAAaC,KAAKJ,EAAW,OAAF,WACpDpS,aAAM,EAANA,EAAQuO,cACR,CAAEC,KAAMlR,KAAKoU,SAAS1R,EAAOuO,eAC7B,CAAEC,KAAMlR,KAAKmD,SAASoM,cAO5B,MAAO,CAAEnP,MALKuQ,EAAKrP,OAAO,CAAC2M,EAAKkH,MACZ,SAAdA,EAAK7W,OAAoBoE,aAAM,EAANA,EAAQ0S,gBAA+B,SAAdD,EAAK7W,OACzD2P,EAAI1C,KAAK4J,EAAKjE,MACTjD,GACN,KAEH,MAAOtN,GACP,MAAO,CAAEP,MAAO,QAIpB,KAAAgR,oBAAsB,IAAuC,EAAD,gCAC1D,IACE,MAAM0D,QAAkB9U,KAAK6U,eACvBlE,QAAa3Q,KAAKgQ,OAAOyE,SAASnD,UAAUwD,GAClD,MAAO,CAAExD,UAAWlQ,OAAOC,KAAKsP,IAChC,MAAOhQ,GACP,MAAO,CAAE2Q,UAAW,QAIxB,KAAAC,kBAAoB,CAClBC,EACAC,EACAC,EACAC,IACqB,EAAD,gCACpB,MAAMmD,QAAkB9U,KAAK6U,eACvB1T,EAAU,CACd,eAAgB,CAAC,oBACjB,gBAAiB,CAACqQ,IAEdnP,EAAO,CACXiN,IAAKmC,EACL4D,aAAa,EACbC,uBAAuB,EACvBC,wBAAyB7D,EACzBF,MAAOG,GAUT,OAAsC,aAPO,mBAAiB/P,KAAK,IAAe,CAChF0N,IAAK,GAAGtP,KAAKmD,SAASuM,wBAAwBoF,UAC9C1C,OAAQ,OACRjR,UACAkB,KAAMH,KAAK+H,UAAU5H,MAGAR,cAGzB,KAAAwQ,cAAuBnB,GAAmC,EAAD,gC,MACvD,IACE,MAAM4D,QAAkB9U,KAAK6U,eACvBjF,EAAM5P,KAAKmD,SAASwM,gBAAmC,QAAjB,EAAA3P,KAAKmQ,YAAY,eAAEqF,gBAE/D,aADMxV,KAAKgQ,OAAOyF,gBAAgBC,QAAQZ,EAAW5D,EAAMtB,IACpD,EACP,MAAOjP,GACP,OAAO,MAIX,KAAA2R,eAAwBpB,GAAyC,EAAD,gC,MAC9D,IACE,MAAM4D,QAAkB9U,KAAK6U,eACvBjF,EAAM5P,KAAKmD,SAASwM,gBAAmC,QAAjB,EAAA3P,KAAKmQ,YAAY,eAAEqF,gBACzDpB,EAAWlD,EAAK1B,QAAQ,OAAQ,IACtC,aAAaxP,KAAKgQ,OAAOyF,gBAAgBC,QAAQZ,EAAWV,EAAUxE,GACtE,MAAOjP,GACP,OAAO,SAIX,KAAAyT,SAAYe,GACHnV,KAAKmD,SAASoM,WAAa,GAAGvP,KAAKmD,SAASoM,cAAc4F,IAASA,EAG5E,KAAA1C,oBAAsB,IAAMzS,KAAKqS,cAAcrS,KAAKoU,SAAS,GAAGpU,KAAKmD,SAAS2M,iBAE9E,KAAA4C,sBAAwB,IAA8B,EAAD,gCACnD,IACE,MAAMoC,QAAkB9U,KAAK6U,eACvBlE,QAAa3Q,KAAKgQ,OAAOiF,aAAaC,KAAKJ,EAAW,CAC1D5D,KAAMlR,KAAKmD,SAASoM,aAKtB,QAH4BoB,EAAKgF,KAC9BR,GAAuB,SAAdA,EAAK7W,MAAiC,YAAd6W,EAAK/R,MAGzC,MAAOzC,GACP,OAAO,MAIX,KAAAgS,qBAAuB,IACrB3S,KAAKsS,eAAetS,KAAKoU,SAAS,GAAGpU,KAAKmD,SAAS2M,iBAErD,KAAA8C,kBAAoB,IAClB5S,KAAKqS,cAAcrS,KAAKoU,SAAS,eAAiBpU,KAAKqS,cAAcrS,KAAKoU,SAAS,aAErF,KAAAvB,mBAAqB,IACnB7S,KAAKsS,eAAetS,KAAKoU,SAAS,eAClCpU,KAAKsS,eAAetS,KAAKoU,SAAS,aAEpC,KAAAtB,iBAAmB,IAAM9S,KAAKqS,cAAcrS,KAAKoU,SAAS,GAAGpU,KAAKmD,SAAS0M,cAE3E,KAAAkD,kBAAoB,IAAM/S,KAAKsS,eAAetS,KAAKoU,SAAS,GAAGpU,KAAKmD,SAAS0M,cAE7E,KAAAtP,sBAAwB,IAAMP,KAAKsS,eAAetS,KAAKoU,SAAS,iBA3N9DpU,KAAKmD,SAAWnD,KAAKoP,kBACrB,MAAMoC,EAAQxR,KAAK+O,kBACnB/O,KAAKgQ,OAAS,IAAI,SAAO,CACvBN,KAAM1P,KAAKmD,SAASuM,KACpB8B,UAEFxR,KAAKmQ,KAAO,KAuBd,kBACE,MAAM,KAAE/M,EAAI,MAAEiM,EAAK,SAAEuG,EAAUC,UAAWlB,GAAa,EAAY3U,KAAKD,UAAUuP,KAC5EC,GA1CkCtN,OAAhBA,EA0CcjC,KAAKD,UAAUwP,iBA1CV,EAAHtN,EAAKuN,QAAQ,MAAO,MAAO,GAA5C,IAACvN,EA4CxB,MAAO,CACLwN,SAAUrM,EACViM,QACAK,KAJW,WAAWkG,EAKtBjG,cAAe3P,KAAKD,UAAU6P,IAC9B+E,WACApF,aACAM,YAAa7P,KAAKD,UAAU8P,YAC5BC,eAAgB9P,KAAKD,UAAU+P,mB,ybCnD9B,MAAMgG,UAAqB,IAKhC,YAAY/V,GACVoI,MAAMpI,GAHA,KAAAqT,UAAW,EAUT,KAAArE,gBAAkB,KAC1B,GAAI/O,KAAKD,UAAUN,aAAe,IAAWwP,WAAY,CACvD,MAAM,SAAElG,EAAQ,SAAEC,GAAahJ,KAAKD,UAAUoP,cAC9C,IAAK,IAAUpG,GAAW,CAExB,MAAO,CAAEgN,cAAe,SADJ,SAAOhR,OAAO,GAAG,SAAOnB,OAAOmF,MAAa,SAAOnF,OAAOoF,OAGhF,MAAO,CAAE6I,cAAe,SAAS,SAAOjO,OAAOoF,IAEjD,OAAO,MAGC,KAAAqK,UAAY,CACpB/D,EACAgE,EACAnS,EACAkB,IACG,EAAD,gCACF,MAAMkR,EAAcvT,KAAK+O,kBACnByE,EAAiB,OAAH,sBAClB5B,OAAQ,oBACL2B,GACApS,GAEL,GAAInB,KAAKoT,SACP,OAAO,YAAsB,OAAD,QAC1B4C,eAAe,EACf1G,MACA8C,OAAQkB,GAAiB,MACzBnS,QAAS,YAAeqS,IACpBnR,GAAQ,CAAEA,KAAMH,KAAK+H,UAAU5H,MAIvC,MAAML,QAAiByR,MAAMnE,EAAK,OAAF,QAC9B8C,OAAQkB,GAAiB,MACzBnS,QAASqS,GACLnR,GAAQ,CAAEA,KAAMH,KAAK+H,UAAU5H,MAErC,IAAKL,EAAS0R,GACZ,MAAM1R,EAER,MAA6C,eAAzCA,EAASb,QAAQ+O,IAAI,gBAChBlO,EAAS2R,OAEX3R,EAAS4R,UAGlB,KAAAxE,gBAAkB,K,MAChB,MAAM,KAAEhM,EAAI,MAAEiM,EAAK,SAAEuG,EAAUC,UAAWlB,GAAa,EAAY3U,KAAKD,UAAUuP,KAC5EC,GAAsC,QAAzB,EAAAvP,KAAKD,UAAUwP,kBAAU,eAAEC,QAAQ,MAAO,MAAO,GAEpE,MAAO,CACLC,SAAUrM,EACViM,QACAK,KAJW,WAAWkG,EAKtBjG,cAAe3P,KAAKD,UAAU6P,IAC9B+E,WACApF,aACAM,YAAa7P,KAAKD,UAAU8P,YAC5BC,eAAgB9P,KAAKD,UAAU+P,iBAInC,KAAAC,gBAAkB,IAAiC,EAAD,gCAChD,MAAMT,EAAM,GAAGtP,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,WACvF,IACE,MAAMpR,QAAwC2B,KAAKqT,UAAU/D,GAC7D,IAAIjR,aAAI,EAAJA,EAAM+E,QAASpD,KAAKmD,SAASsM,SAC/B,OAAO,IAAWY,UAEpB,MAAO1P,GACP,OAAO,IAAWsV,qBAEpB,OAAO,IAAWA,wBAGpB,KAAAvF,kBAAoB,IAAiC,EAAD,gCAClD,MAAMpB,EAAM,GAAGtP,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,oBACvF,IACE,MAAMpR,QAAsC2B,KAAKqT,UAAU/D,GAE3D,MAAO,CAAEuB,UADIxS,aAAI,EAAJA,EAAMyS,IAAKrQ,GAAMA,EAAE2C,QAAS,IAEzC,MAAOzC,GACP,MAAO,CAAEkQ,SAAU,QAIvB,KAAA3Q,gBAAyBwC,GAA8D,EAAD,gCACpF,MAAM4M,GAAM5M,aAAM,EAANA,EAAQuO,cAChB,GAAGjR,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,qBAAqBzP,KAAKmD,SAASoM,cAAc7M,EAAOuO,eACnI,GAAGjR,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,qBAAqBzP,KAAKmD,SAASoM,aAElH,IACE,MAAMlR,QAAgD2B,KAAKqT,UAAU/D,GAErE,MAAO,CAAElP,OADI/B,aAAI,EAAJA,EAAMyS,IAAKmD,GAAMA,EAAE7Q,QAAS,IAEzC,MAAOzC,GACP,MAAO,CAAEP,MAAO,QAIpB,KAAAgR,oBAAsB,IAAuC,EAAD,gCAC1D,MAAM9B,EAAM,GAAGtP,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,qBACvF,IACE,MAAMpR,QAAwC2B,KAAKqT,UAAU/D,GAE7D,MAAO,CAAEgC,WADIlQ,kBAAM,EAANA,OAAQC,KAAKhD,KAAS,IAEnC,MAAOsC,GACP,MAAO,CAAE2Q,UAAW,QAKxB,KAAAC,kBAAoB,CAAOC,EAAeC,IAAyC,EAAD,gCAChF,MAAMtQ,EAAU,CACd,eAAgB,CAAC,oBACjB0Q,cAAe,CAAC,SAASL,IAErBnP,EAAO,CACXyP,QAAQ,EACRoE,qBAAsB,GACtBC,cAAe,IACfpE,OAAQ,CACNC,aAAc,OACd1C,IAAKmC,GAEPS,OAAQ,CAAC,OAAQ,gBACjB5T,KAAM,SAEFgR,EAAM,GAAGtP,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,iBAUvF,OAAsC,aAPO,mBAAiB7N,KAAK,IAAe,CAChF0N,MACA8C,OAAQ,OACRjR,UACAkB,KAAMH,KAAK+H,UAAU5H,MAGAR,cAGzB,KAAAwQ,cAAuBnB,GAAmC,EAAD,gCACvD,MAAMkD,EAAWlD,EAAK1B,QAAQ,MAAO,IAC/BF,EAAM,GAAGtP,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,qBAAqB2E,SAAgBpU,KAAKmD,SAASwM,gBAC1I,IAEE,aADM3P,KAAKqT,UAAU/D,IACd,EACP,MAAO3O,GACP,OAAO,MAIX,KAAA2R,eAAwBpB,GAAyC,EAAD,gCAC9D,MAAMkD,EAAWlD,EAAK1B,QAAQ,MAAO,IAC/BF,EAAM,GAAGtP,KAAKmD,SAASuM,qBAAqB1P,KAAKmD,SAASkM,SAASrP,KAAKmD,SAASsM,gBAAgB2E,SAAgBpU,KAAKmD,SAASwM,gBACrI,IAEE,aADmB3P,KAAKqT,UAAU/D,GAElC,MAAO3O,GAGP,OADAyV,QAAQC,KAAK,8BAA+B1V,GACrC,SAIX,KAAA8R,oBAAsB,IACpBzS,KAAKqS,cAAc,GAAGrS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS2M,kBAElE,KAAA4C,sBAAwB,IAAM1S,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,YAEjD,KAAAoD,qBAAuB,IACrB3S,KAAKsS,eAAe,GAAGtS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS2M,kBAEnE,KAAA8C,kBAAoB,IAClB5S,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,eACnBvP,KAAKqS,cAAiBrS,KAAKmD,SAASoM,WAAjB,aAErB,KAAAsD,mBAAqB,IACnB7S,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,eACpBvP,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,aAEtB,KAAAuD,iBAAmB,IACjB9S,KAAKqS,cAAc,GAAGrS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS0M,eAElE,KAAAkD,kBAAoB,IAClB/S,KAAKsS,eAAe,GAAGtS,KAAKmD,SAASoM,cAAcvP,KAAKmD,SAAS0M,eAEnE,KAAAtP,sBAAwB,IAAMP,KAAKsS,eAAkBtS,KAAKmD,SAASoM,WAAjB,iBAnMhDvP,KAAKmD,SAAWnD,KAAKoP,kBAChBpP,KAAKmD,SAASuM,KAAKrP,SAAS,eAC/BL,KAAKoT,UAAW,M,wXCpBtB,MAAMkD,EAA0B,CAC9B,CACElT,KAAM,QACN9E,KAAM,OACN4V,SAAU,OACVqC,eAAgB,UAChBC,SAAU,GAEZ,CACEpT,KAAM,SACN9E,KAAM,OACN4V,SAAU,OACVqC,eAAgB,aAChBC,SAAU,GAEZ,CACEpT,KAAM,SACN9E,KAAM,SACN4V,SAAU,KACVqC,eAAgBE,OAAO,CAAC,WAAY,aAAc,cAAcC,KAAK,MACrEF,SAAU,GAEZ,CACEpT,KAAM,OACN9E,KAAM,OACN4V,SAAU,OACVqC,eAAgBE,OAAO,CAAC,UAAW,WAAY,aAAaC,KAAK,MACjEF,SAAU,GAEZ,CACEpT,KAAM,SACN9E,KAAM,SACN4V,SAAU,aACVqC,eAAgBE,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACxFF,SAAU,GAEZ,CACEpT,KAAM,iBACN9E,KAAM,gBACN4V,SAAU,aACVqC,eAAgB,gBAChBC,SAAU,EACVG,gBAAwBC,GAAe,OAAD,6BACpC,MAAMC,QAAoBD,EAAWrW,wBACrC,OAAO,YAAesW,GAAe,CAAC,gBAAkB,OAG5D,CACEzT,KAAM,MACN9E,KAAM,MACN4V,SAAU,MACVqC,eAAgBE,OAAO,CAAC,YAAa,iBAAiBC,KAAK,MAC3DF,SAAU,GAEZ,CACEpT,KAAM,SACN9E,KAAM,SACN4V,SAAU,SACVqC,eAAgBE,OAAO,CAAC,mBAAoB,YAAYC,KAAK,MAC7DF,SAAU,GAEZ,CACEpT,KAAM,OACN9E,KAAM,OACN4V,SAAU,OACVqC,eAAgBE,OAAO,CAAC,WAAY,YAAYC,KAAK,MACrDF,SAAU,GAEZ,CACEpT,KAAM,SACN9E,KAAM,SACN4V,SAAU,KACVqC,eAAgBE,OAAO,CAAC,eAAgB,aAAaC,KAAK,MAC1DF,SAAU,IAYDM,EAA0BF,GAA0D,OAAD,6BAC9F,MAAM,MAAExW,SAAgBwW,EAAW1W,kBAkBnC,aAhByBqU,QAAQS,IAC/BsB,EAAWxF,IAAuClR,GAAM,OAAD,6BACrD,IAAImX,EAAgB3W,EAAM4W,OAAQ/C,GAAMrU,EAAE2W,eAAeU,KAAKhD,IAI9D,OAHI8C,EAAcG,OAAS,GAAKtX,EAAE+W,kBAChCI,QAAsBnX,EAAE+W,gBAAgBC,IAEnC,CACLxT,KAAMxD,EAAEwD,KACR9E,KAAMsB,EAAEtB,KACR4V,SAAUtU,EAAEsU,SACZsC,SAAU5W,EAAE4W,SACZO,uBAMHC,OAAQpX,KAAQA,EAAEmX,cAAcG,QAChC7X,KAAK,CAAC8X,EAAIC,IAAOA,EAAGZ,SAAWW,EAAGX,c,sZCxGvC,MAAMa,EAA2C,CAC/C,CACEjU,KAAM,UACN9E,KAAM,IAAegZ,QACrBf,eAAgB,qBAChBC,SAAU,GAEZ,CACEpT,KAAM,aACN9E,KAAM,IAAeiZ,WACrBhB,eAAgB,gCAChBC,SAAU,GAEZ,CACEpT,KAAM,sBACN9E,KAAM,IAAekZ,oBACrBjB,eAAgB,qBAChBC,SAAU,GAEZ,CACEpT,KAAM,gBACN9E,KAAM,IAAemZ,IACrBlB,eAAgB,IAChBC,SAAU,EACVG,gBAAiB,MAmBRe,EAAyB,CACpCC,EACAf,EACAgB,GAA+B,IACE,OAAD,6BAChC,IACIC,EADAC,EAAyC,GAEzCC,GAAkB,EAClBC,EAAY,KAEhB,MAAMC,EAAmBrB,QACfA,EAAW7G,kBACjB,IAAWmI,mBACf,IACIC,EADApB,EAA0B,GAG9B,GAAIkB,IAAqB,IAAW5H,UAClC,IACE,MAAM,MAAEjQ,SAAgBwW,EAAW1W,gBAAgB,CAAEkV,eAAe,IACpEyC,QAAgC,YAAyBD,EAAqBhB,GAE9EkB,QAA2BvD,QAAQS,IACjCqC,EAAmBvG,IAAsCsH,GAAa,OAAD,6BAKnE,OAJArB,EAAgB3W,EAAM4W,OAAQ/C,GAAMmE,EAAS7B,eAAeU,KAAKhD,IAC7D8C,EAAcG,OAAS,GAAKkB,EAASzB,kBACvCwB,QAA2BC,EAASzB,gBAAgBC,IAE/C,CACLxT,KAAMgV,EAAShV,KACf9E,KAAM8Z,EAAS9Z,KACfkY,SAAU4B,EAAS5B,SACnBO,gBACAoB,2BAINJ,GAAS,EACT,MAAOvT,GACPuT,GAAS,EACTC,EAAYxT,EAAIW,aAGlB4S,GAAS,EAaX,OAVKF,IACHC,EAAqBA,EAAmBd,OACrCoB,GAAaA,EAAS9Z,OAAS,IAAekZ,sBAInDM,EAAqBA,EAClBd,OAAQoB,IAAY,MAAC,QAAEA,EAASrB,cAAcG,WAAuC,QAA3B,EAAAkB,EAASD,0BAAkB,eAAEjB,UACvF7X,KAAK,CAAC8X,EAAIC,IAAOA,EAAGZ,SAAWW,EAAGX,UAE9B,CACLuB,SACAC,YACAC,mBACAI,WAAYP,O,kCCpHhB,0IAWO,MAAMQ,EAAuB,4BAClC,cAAmC,YAAnC,c,oBAIW,KAAAlQ,MAAmC,CAC1CtF,sBAAuB,IAAsBpE,SAE/C,qBACE,IAAK,IAAUsB,KAAKa,MAAM+B,IAAIvE,MAAO,CACnC,MAAMyE,EAAwB,YAAkB9C,KAAKa,MAAM+B,IAAIvE,MAC3D2B,KAAKoI,MAAMtF,wBAA0BA,GACvC9C,KAAKwI,SAAS,CACZ1F,2BAKR,SACE,MAAM,IAAEF,EAAG,UAAE2V,GAAcvY,KAAKa,OAC1B,sBAAEiC,GAA0B9C,KAAKoI,MACvC,IAAKtF,EACH,OAAO,gBAAC,IAAU,MAEpB,MAAME,EAAQuV,aAAS,EAATA,EAAWjX,OAAO,CAAC2M,EAAK9C,KAAK,MAAC,sCAAM8C,GAAG,CAAE,CAAC9C,IAAY,QAAR,EAAAvI,EAAIvE,YAAI,eAAG8M,KAAM,MAAO,IAEpF,OACE,gBAAC,KAAS,iBAAKvI,GACb,gBAAC,IAAiB,iBACZ5C,KAAKa,MAAK,CACdiC,sBAAuBA,EACvBF,IAAKA,EAAIvE,KACT2E,MAAOA,SAQNwV,EAAa,EAAGtV,WAC3B,MAAMR,EAAS,uBACT,EAAE9C,GAAM,2BACd,OACE,gBAAC,IAAQ,CACP6Y,UAAW,CAAC,CAAEvV,OAAME,KAAMV,EAAOU,KAAM4B,UAAWtC,EAAO0B,GAAIsU,QAAQ,EAAOC,KAAM,SAElF,gBAACL,EAAoB,CAACC,UAAW,CAAC,OAAQ,YAAapS,eAAgBvG,EAAE,oB,kCC1D/E,+DAKO,MAAMgZ,EAAe,KAC1B,MAAMlW,EAAS,sBACTI,EAAwBJ,EAAOpE,KACrC,OACE,gBAAC,IAAiB,CAChB0E,MAAO,CAAEG,SAAU,CAAE6B,UAAWtC,EAAO0B,KACvCtB,sBAAuBA,EACvBnD,UAAU,M,gFCWhB,IAAYkZ,EAAZ,2CAAYA,GACV,6BACA,iCACA,6CACA,+CACA,uDACA,iCACA,2CACA,mDARF,CAAYA,MAAU,M,kCCTtB,oEAAO,MAAMC,EAAmB,CAC9B1V,KAAM,QACN9E,KAAM,OACN4V,SAAU,OACV6E,gBAAiBtC,OAAO,CAAC,WAAWC,KAAK,MACzCsC,cAAe,CAAC,YAGLC,EAAoB,CAC/B7V,KAAM,SACN9E,KAAM,OACN4V,SAAU,OACV6E,gBAAiBtC,OAAO,CAAC,cAAcC,KAAK,MAC5CsC,cAAe,CAAC,eAAgB,UAAW,gBAGhCE,EAAoB,CAC/B9V,KAAM,SACN9E,KAAM,SACN4V,SAAU,KACV6E,gBAAiBtC,OAAO,CAAC,WAAY,aAAc,cAAcC,KAAK,MACtEsC,cAAe,CAAC,UAAW,aAAc,eAG9BG,EAAkB,CAC7B/V,KAAM,OACN9E,KAAM,OACN4V,SAAU,OACV6E,gBAAiBtC,OAAO,CAAC,UAAW,WAAY,aAAaC,KAAK,MAClEsC,cAAe,CAAC,UAAW,WAAY,cAG5BI,EAAoB,CAC/BhW,KAAM,SACN9E,KAAM,SACN4V,SAAU,aACV6E,gBAAiBtC,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACzFsC,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDK,EAA0B,CACrCjW,KAAM,iBACN9E,KAAM,gBACN4V,SAAU,aACV6E,gBAAiBtC,OAAO,CAAC,WAAY,eAAgB,cAAe,gBAAgBC,KAAK,MACzFsC,cAAe,CAAC,WAAY,eAAgB,cAAe,iBAGhDM,EAAiB,CAC5BlW,KAAM,MACN9E,KAAM,MACN4V,SAAU,MACV6E,gBAAiBtC,OAAO,CAAC,YAAa,iBAAiBC,KAAK,MAC5DsC,cAAe,CAAC,YAAa,kBAGlBO,EAAoB,CAC/BnW,KAAM,SACN9E,KAAM,SACN4V,SAAU,SACV6E,gBAAiBtC,OAAO,CAAC,mBAAoB,YAAYC,KAAK,MAC9DsC,cAAe,CAAC,mBAAoB,aAGzBQ,EAAkB,CAC7BpW,KAAM,OACN9E,KAAM,OACN4V,SAAU,OACV6E,gBAAiBtC,OAAO,CAAC,WAAY,YAAYC,KAAK,MACtDsC,cAAe,CAAC,WAAY,aAWjB1C,EAAa,CARO,CAC/BlT,KAAM,SACN9E,KAAM,SACN4V,SAAU,KACV6E,gBAAiBtC,OAAO,CAAC,eAAgB,aAAaC,KAAK,MAC3DsC,cAAe,CAAC,eAAgB,eAKhCE,EACAD,EACAH,EACAM,EACAC,EACAG,EACAF,EACAC,EACAJ,GAGWM,EAAqB,CAChC,QACA,UACA,gBACA,MACA,WACA,c,kCCjHF,2F,kCCAA,kFAEO,SAAS3C,EAAiB1W,GAK/B,OAJmB,IAAW0Q,IAAKlR,IACjC,MAAM8Z,EAAetZ,EAAM4W,OAAQ/C,GAAcrU,EAAEmZ,gBAAgB9B,KAAKhD,IACxE,MAAO,CAAEvT,UAAWd,EAAEtB,KAAM4V,SAAUtU,EAAEsU,SAAU9T,MAAOsZ,KAGxD1C,OAAQvW,GAAiBA,EAAEL,MAAM8W,OAAS,GAC1C7X,KAAK,CAACmB,EAAGC,IAAMA,EAAEL,MAAM8W,OAAS1W,EAAEJ,MAAM8W,QAGtC,SAASyC,EAAerZ,GAC7B,IACE,MAAMuW,EAAc3U,KAAKC,MAAM7B,GAC/B,OAAO,IAAmBsZ,KAAMC,GAAQA,KAAOhD,EAAYiD,cAC3D,SACA,OAAO,K,kCCjBX,kGASO,SAASC,EACdpC,EACAqC,EACApK,EACAL,EACAnR,EACAyR,EACAC,GAEA,IAAIrQ,EACA0P,EACJ,OAAQ/Q,aAAM,EAANA,EAAQE,MACd,KAAK,aAAWP,UACd0B,EAAa,IAAcwP,WAC3BE,EAAgB/Q,EAAOC,KACvB,MACF,KAAK,aAAWE,QACdkB,EAAa,IAAcwa,IAC3B9K,EAAgB/Q,EAAO,kBACvB,MACF,QACEqB,EAAa,IAAcya,QAE/B,MAAMC,EAAuB,CAC3B7K,IAAKqI,EACL/H,MACAL,aACA9P,aACA0P,gBACAU,cACAC,kBAGF,OAAQkK,GACN,KAAK,IAAYzT,OACf,OAAO,IAAI,IAAc4T,GAC3B,KAAK,IAAYzT,UACf,OAAO,IAAI,IAAiByT,GAC9B,KAAK,IAAY3T,OACf,OAAO,IAAI,IAAc2T,GAC3B,KAAK,IAAY1T,MACf,OAAO,IAAI,IAAa0T,GAC1B,QACE,OAAO,Q,kCCpDb,mE,kCCAA,gDAEO,MAAMC,EAKX,YAAYC,GACVra,KAAKqa,QAAUA,EACfra,KAAKsa,eAAiBta,KAAKmC,QAG7B,QACE,IAAIoY,EAAgC,GACpC,IACEA,EAAgB,gBAAMva,KAAKqa,SAC3B,UACF,OAAOE,EAGT,mBACE,MAAMC,EAAMxa,KAAKsa,eAAetD,OAAQhW,GAA+B,WAAXA,EAAEoC,MAC9D,GAAIoX,EAAItD,OAAS,EAAG,CAClB,MAAMuD,EAAgBD,EAAI,GAC1B,GAAKC,EAAcC,KAAKxD,OAAoB,EAAG,OAAOyD,OAAOF,EAAcC,KAAK,IAElF,OAAO,Q,maCbJ,MAAME,EAAsBhE,GAA+C,OAAD,6B,UAG/E,WAFgCA,EAAWhE,qBAGzC,MAAO,CACLmB,OAAQ,IAIZ,MAAM8G,QAAwBjE,EAAW/D,qBAEzC,IACE,MAAMiI,EAAY,IAAWD,GAAqC,YAAaA,GAA/BA,EAE1CE,EAAyB,QAAf,EAAAD,aAAQ,EAARA,EAAUE,aAAK,eAAED,QAC3BE,EAA6B,QAAf,EAAAH,aAAQ,EAARA,EAAUE,aAAK,eAAEE,UAC/BC,EAAUL,aAAQ,EAARA,EAAUK,QAE1B,MAAO,CACLpH,OAAQ,CACNgH,UACAI,UACAF,cACAG,YAN6B,QAAb,EAAAN,aAAQ,EAARA,EAAUO,WAAG,eAAEC,OASnC,SACA,MAAO,CACLvH,OAAQ,QAKDwH,EAA2B,CACtC3D,EACAhB,IACqB,OAAD,6B,QAGpB,UAFgCA,EAAWhE,sBAElBgF,EAAqB,CAC5C,MAAMyC,QAAgBzD,EAAW/D,qBAC3BiI,EAAW,YAAaT,GAC9B,KAAoB,QAAf,EAAAS,aAAQ,EAARA,EAAUE,aAAK,eAAED,UAAwC,SAAd,QAAf,EAAAD,aAAQ,EAARA,EAAUE,aAAK,eAAED,SAChD,OAAO,EAGX,OAAO","file":"dev-console/code-refs/buildConfig~dev-console/code-refs/deployment~dev-console/code-refs/healthCheck~0ccb25ae-chunk-06058bfe3452067abb37.min.js","sourcesContent":["export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n"],"sourceRoot":""}