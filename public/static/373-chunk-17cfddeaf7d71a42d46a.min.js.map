{"version":3,"sources":["webpack:///./public/components/terminal.jsx","webpack:///./public/components/pod-exec.jsx"],"names":["Terminal_","Component","props","super","this","state","height","width","innerRef","createRef","outerRef","isFullscreen","onResize","onResize_","onDataReceived","data","terminal","write","Object","assign","options","fitAddon","fullscreenAddon","loadAddon","onData","reset","clear","setOption","focus","document","getElementsByClassName","classList","add","getElementById","remove","fullscreen","toggleFullScreen","enableiOSFix","disableiOSFix","reason","setFullscreen","cursorHidden","refresh","rows","open","current","window","addEventListener","dispose","removeEventListener","node","pageRect","getBoundingClientRect","bodyRect","body","nodeRect","padding","Math","floor","bottom","top","left","setState","fit","cols","_core","_syncTextArea","t","ref","style","className","onClick","variant","Terminal","withRef","propTypes","func","isRequired","number","object","defaultProps","fontFamily","fontSize","cursorBlink","PodExec_","OPENSHIFT","containers","activeContainer","initialContainer","obj","metadata","annotations","spec","name","d","onData_","onChangeContainer","container","onChangeContainer_","namespace","usedClient","flags","command","params","ns","path","queryParams","stdout","stdin","stderr","tty","map","c","encodeURIComponent","join","ws","destroy","onConnectionClosed","subprotocols","getState","concat","previous","host","reconnect","jsonParse","onmessage","raw","includes","decode","slice","onopen","error","onclose","evt","wasClean","i18nError","onerror","console","connect_","split","send","encode","nextProps","prevState","warn","JSON","stringify","Height","Width","message","infoMessage","contents","reconnectAction","status","phase","keys","length","currentKey","onChange","title","actionLinks","isInline","PodExec"],"mappings":"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","file":"373-chunk-17cfddeaf7d71a42d46a.min.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Terminal as XTerminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { withTranslation } from 'react-i18next';\nimport { CompressIcon } from '@patternfly/react-icons/dist/esm/icons/compress-icon';\nimport { Button } from '@patternfly/react-core';\nimport { XtermAddonFullscreen } from '@console/shared';\n\nclass Terminal_ extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { height: 0, width: 0 };\n    this.innerRef = React.createRef();\n    this.outerRef = React.createRef();\n    this.isFullscreen = false;\n    this.onResize = () => this.onResize_();\n    this.onDataReceived = (data) => this.terminal && this.terminal.write(data);\n\n    this.terminal = new XTerminal(Object.assign({}, this.props.options));\n    this.fitAddon = new FitAddon();\n    this.fullscreenAddon = new XtermAddonFullscreen();\n    this.terminal.loadAddon(this.fitAddon);\n    this.terminal.loadAddon(this.fullscreenAddon);\n    this.terminal.onData(this.props.onData);\n  }\n\n  reset() {\n    const terminal = this.terminal;\n    if (!terminal) {\n      return;\n    }\n    terminal.reset();\n    terminal.clear();\n    terminal.setOption('disableStdin', false);\n  }\n\n  focus() {\n    this.terminal && this.terminal.focus();\n  }\n\n  enableiOSFix() {\n    document.getElementsByClassName('pf-v5-c-page__main')[0].classList.add('default-overflow');\n    document.getElementById('content-scrollable').classList.add('default-overflow');\n  }\n\n  disableiOSFix() {\n    document.getElementsByClassName('pf-v5-c-page__main')[0].classList.remove('default-overflow');\n    document.getElementById('content-scrollable').classList.remove('default-overflow');\n  }\n\n  setFullscreen(fullscreen) {\n    this.fullscreenAddon.toggleFullScreen(fullscreen);\n    this.isFullscreen = fullscreen;\n    this.focus();\n    this.onResize();\n    // fix iOS bug where masthead overlays fullscreen terminal\n    // see https://bugs.webkit.org/show_bug.cgi?id=160953\n    fullscreen ? this.enableiOSFix() : this.disableiOSFix();\n  }\n\n  onConnectionClosed(reason) {\n    const terminal = this.terminal;\n    if (!terminal) {\n      return;\n    }\n    this.setFullscreen(false);\n    terminal.write(`\\x1b[31m${reason || 'disconnected'}\\x1b[m\\r\\n`);\n    terminal.cursorHidden = true;\n    terminal.setOption('disableStdin', true);\n    terminal.refresh(0, terminal.rows - 1);\n  }\n\n  componentDidMount() {\n    this.terminal.open(this.innerRef.current);\n    this.focus();\n    this.onResize();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  componentWillUnmount() {\n    this.terminal && this.terminal.dispose();\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onResize_() {\n    const node = this.outerRef.current;\n\n    if (!node) {\n      return;\n    }\n\n    const pageRect = document.getElementsByClassName('pf-v5-c-page')[0].getBoundingClientRect();\n    const bodyRect = document.body.getBoundingClientRect();\n    const nodeRect = node.getBoundingClientRect();\n\n    const { padding } = this.props;\n\n    // This assumes we want to fill everything below and to the right.  In full-screen, fill entire viewport\n    const height = Math.floor(pageRect.bottom - (this.isFullscreen ? 0 : nodeRect.top) - padding);\n    const width = Math.floor(\n      bodyRect.width - (this.isFullscreen ? 0 : nodeRect.left) - (this.isFullscreen ? 10 : padding),\n    );\n\n    if (height === this.state.height && width === this.state.width) {\n      return;\n    }\n\n    // rerender with correct dimensions\n    this.setState({ height, width }, () => {\n      const terminal = this.terminal;\n      if (!terminal) {\n        return;\n      }\n      // tell the terminal to resize itself\n      this.fitAddon.fit();\n      // update the pty\n      this.props.onResize(terminal.rows, terminal.cols);\n      // The internal xterm textarea was not repositioned when the window was resized.\n      // This workaround triggers a textarea position update to fix this.\n      // See https://bugzilla.redhat.com/show_bug.cgi?id=1983220\n      // and https://github.com/xtermjs/xterm.js/issues/3390\n      terminal._core?._syncTextArea?.();\n    });\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div ref={this.outerRef} style={this.state} className={this.props.className}>\n        <div ref={this.innerRef} className=\"co-terminal\">\n          {this.isFullscreen && (\n            <Button\n              className=\"co-terminal-collapse-link\"\n              onClick={() => this.setFullscreen(false)}\n              variant=\"link\"\n            >\n              <CompressIcon className=\"co-icon-space-r\" />\n              {t('public~Collapse')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Terminal = withTranslation('translation', { withRef: true })(Terminal_);\n\nTerminal.propTypes = {\n  onData: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  padding: PropTypes.number,\n  options: PropTypes.object,\n};\n\nTerminal.defaultProps = {\n  padding: 30,\n  options: {\n    fontFamily: 'monospace',\n    fontSize: 16,\n    cursorBlink: false,\n    cols: 80,\n    rows: 25,\n  },\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Base64 } from 'js-base64';\nimport { withTranslation } from 'react-i18next';\nimport { ExpandIcon } from '@patternfly/react-icons/dist/esm/icons/expand-icon';\nimport { Button, Alert, AlertActionLink } from '@patternfly/react-core';\nimport { getImpersonate } from '@console/dynamic-plugin-sdk';\n\nimport store from '../redux';\nimport { ContainerLabel, ContainerSelect, LoadingBox } from './utils';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { FLAGS } from '@console/shared';\nimport { Terminal } from './terminal';\nimport { WSFactory } from '../module/ws-factory';\nimport { resourceURL } from '../module/k8s';\nimport { PodModel } from '../models';\nimport { isWindowsPod } from '../module/k8s/pods';\n\n// pod exec WS protocol is FD prefixed, base64 encoded data (sometimes json stringified)\n\n// Channel 0 is STDIN, 1 is STDOUT, 2 is STDERR (if TTY is not requested), and 3 is a special error channel - 4 is C&C\n// The server only reads from STDIN, writes to the other three.\n// see also: https://github.com/kubernetes/kubernetes/pull/13885\n\nconst NO_SH =\n  'starting container process caused \"exec: \\\\\"sh\\\\\": executable file not found in $PATH\"';\n\nconst PodExec_ = connectToFlags(FLAGS.OPENSHIFT)(\n  class PodExec extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        open: false,\n        containers: {},\n        activeContainer:\n          props.initialContainer ||\n          props.obj.metadata?.annotations?.['kubectl.kubernetes.io/default-container'] ||\n          props.obj?.spec.containers[0].name,\n      };\n      this.terminal = React.createRef();\n      this.onResize = (rows, cols) => this.onResize_(rows, cols);\n      this.onData = (d) => this.onData_(d);\n      this.onChangeContainer = (container) => this.onChangeContainer_(container);\n    }\n    connect_() {\n      const {\n        metadata: { name, namespace },\n      } = this.props.obj;\n      const { activeContainer } = this.state;\n      const usedClient = this.props.flags[FLAGS.OPENSHIFT] ? 'oc' : 'kubectl';\n      const command = isWindowsPod(this.props.obj) ? ['cmd'] : ['sh', '-i', '-c', 'TERM=xterm sh'];\n      const params = {\n        ns: namespace,\n        name,\n        path: 'exec',\n        queryParams: {\n          stdout: 1,\n          stdin: 1,\n          stderr: 1,\n          tty: 1,\n          container: activeContainer,\n          command: command.map((c) => encodeURIComponent(c)).join('&command='),\n        },\n      };\n\n      if (this.ws) {\n        this.ws.destroy();\n        const { current } = this.terminal;\n        current && current.onConnectionClosed(`connecting to ${activeContainer}`);\n      }\n\n      const impersonate = getImpersonate(store.getState()) || {};\n      const subprotocols = (impersonate.subprotocols || []).concat('base64.channel.k8s.io');\n\n      let previous;\n      this.ws = new WSFactory(`${name}-terminal`, {\n        host: 'auto',\n        reconnect: true,\n        path: resourceURL(PodModel, params),\n        jsonParse: false,\n        subprotocols,\n      })\n        .onmessage((raw) => {\n          const { current } = this.terminal;\n          // error channel\n          if (raw[0] === '3') {\n            if (previous.includes(NO_SH)) {\n              current.reset();\n              current.onConnectionClosed(\n                `This container doesn't have a /bin/sh shell. Try specifying your command in a terminal with:\\r\\n\\r\\n ${usedClient} -n ${namespace} exec ${name} -ti <command>`,\n              );\n              this.ws.destroy();\n              previous = '';\n              return;\n            }\n          }\n          const data = Base64.decode(raw.slice(1));\n          current && current.onDataReceived(data);\n          previous = data;\n        })\n        .onopen(() => {\n          const { current } = this.terminal;\n          current && current.reset();\n          previous = '';\n          this.setState({ open: true, error: null });\n        })\n        .onclose((evt) => {\n          if (!evt || evt.wasClean === true) {\n            return;\n          }\n          const error = evt.reason || 'The terminal connection has closed.';\n          const i18nError =\n            evt.reason || this.props.t('public~The terminal connection has closed.');\n          this.setState({ error: i18nError });\n          this.terminal.current && this.terminal.current.onConnectionClosed(error);\n          this.ws.destroy();\n        }) // eslint-disable-next-line no-console\n        .onerror((evt) => console.error(`WS error?! ${evt}`));\n    }\n\n    componentDidMount() {\n      this.connect_();\n    }\n\n    componentWillUnmount() {\n      const exitCode = 'exit\\r';\n      this.ws && exitCode.split('').map((t) => this.ws.send(`0${Base64.encode(t)}`));\n      this.ws && this.ws.destroy();\n      delete this.ws;\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      const containers = _.keyBy(_.get(nextProps.obj, 'spec.containers', []), 'name');\n      if (_.isEqual(containers, prevState.containers)) {\n        return null;\n      }\n      return { containers };\n    }\n\n    onChangeContainer_(container) {\n      const name = this.state.containers?.[container]?.name;\n\n      if (!name) {\n        // eslint-disable-next-line no-console\n        console.warn(`no name, how did that happen? ${container}`);\n        return;\n      }\n      if (name === this.state.activeContainer) {\n        return;\n      }\n      this.setState({ activeContainer: name }, () => {\n        this.connect_();\n        this.terminal.current && this.terminal.current.focus();\n      });\n    }\n\n    onResize_(rows, cols) {\n      const data = Base64.encode(JSON.stringify({ Height: rows, Width: cols }));\n      this.ws && this.ws.send(`4${data}`);\n    }\n\n    setFullscreen(fullscreen) {\n      this.terminal.current.setFullscreen(fullscreen);\n    }\n\n    onData_(data) {\n      this.ws && this.ws.send(`0${Base64.encode(data)}`);\n    }\n\n    render() {\n      const { containers, activeContainer, open, error } = this.state;\n      const { message, infoMessage, t, obj } = this.props;\n\n      let contents = <LoadingBox />;\n      if (error) {\n        contents = <Terminal onResize={() => {}} onData={() => {}} ref={this.terminal} />;\n      } else if (open) {\n        contents = <Terminal onResize={this.onResize} onData={this.onData} ref={this.terminal} />;\n      }\n\n      const reconnectAction =\n        obj.status.phase === 'Running' ? (\n          <AlertActionLink onClick={() => this.connect_()}>{t('public~Reconnect')}</AlertActionLink>\n        ) : null;\n\n      return (\n        <div>\n          {infoMessage}\n          <div className=\"co-toolbar\">\n            <div className=\"co-toolbar__group co-toolbar__group--left\">\n              <div className=\"co-toolbar__item\">{t('public~Connecting to')}</div>\n              <div className=\"co-toolbar__item\">\n                {Object.keys(containers).length > 1 ? (\n                  <ContainerSelect\n                    currentKey={activeContainer}\n                    containers={this.state.containers}\n                    onChange={this.onChangeContainer}\n                  />\n                ) : (\n                  <ContainerLabel name={activeContainer} />\n                )}\n              </div>\n            </div>\n            {!error && (\n              <div className=\"co-toolbar__group co-toolbar__group--right\">\n                <div className=\"co-toolbar__item\">\n                  <Button\n                    variant=\"link\"\n                    className=\"pf-m-link--align-right\"\n                    onClick={() => this.setFullscreen(true)}\n                  >\n                    <ExpandIcon className=\"co-icon-space-r\" />\n                    {t('public~Expand')}\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n          {error && (\n            <Alert variant=\"warning\" title={error} actionLinks={reconnectAction} isInline />\n          )}\n          {message}\n          {contents}\n        </div>\n      );\n    }\n  },\n);\n\nexport const PodExec = withTranslation()(PodExec_);\n"],"sourceRoot":""}