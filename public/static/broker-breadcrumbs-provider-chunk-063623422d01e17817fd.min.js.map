{"version":3,"sources":["webpack:///./packages/knative-plugin/src/providers/useBrokerDetailPageBreadcrumbs.ts","webpack:///./packages/knative-plugin/src/utils/serverless-tab-utils.ts"],"names":["useBrokerDetailPageBreadcrumbs","kindObj","isAdminPerspective","params","location","kind","undefined","getBrokerModel","serverlessTab"],"mappings":"4FAAA,mKAOO,MAAMA,EAAkCC,IAC7C,MAAMC,EAAmD,UAA9B,eAAuB,GAC5CC,EAAS,sBACTC,EAAW,wBACjB,OAAO,aACLH,EACAG,EACAD,EACA,WACA,YAAcF,EAAQI,WACtBC,EACAJ,IAISK,EAAiB,IAAM,K,kCCtBpC,8CASO,MAAMC,EAAiBH,IAC5B,OAAQA,GACN,KAAK,IAAaA,KAClB,IAAK,cACH,MAAO,GACT,KAAK,IAAcA,KACjB,MAAO,YACT,KAAK,IAAWA,KACd,MAAO,SACT,KAAK,IAAoBA,KACvB,MAAO,UACT,KAAK,IAAqBA,KACxB,MAAO,WACT,KAAK,IAA0BA,KAC7B,MAAO,gBACT,IAAK,UACH,MAAO,WACT,QACE,OAAO","file":"broker-breadcrumbs-provider-chunk-063623422d01e17817fd.min.js","sourcesContent":["import { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { EventingBrokerModel } from '../models';\nimport { serverlessTab } from '../utils/serverless-tab-utils';\n\nexport const useBrokerDetailPageBreadcrumbs = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'eventing',\n    serverlessTab(kindObj.kind),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const getBrokerModel = () => EventingBrokerModel;\n","import {\n  RevisionModel,\n  ServiceModel,\n  RouteModel,\n  EventingBrokerModel,\n  EventingTriggerModel,\n  EventingSubscriptionModel,\n} from '../models';\n\nexport const serverlessTab = (kind: string) => {\n  switch (kind) {\n    case ServiceModel.kind:\n    case 'EventSource':\n      return '';\n    case RevisionModel.kind:\n      return 'revisions';\n    case RouteModel.kind:\n      return 'routes';\n    case EventingBrokerModel.kind:\n      return 'brokers';\n    case EventingTriggerModel.kind:\n      return 'triggers';\n    case EventingSubscriptionModel.kind:\n      return 'subscriptions';\n    case 'Channel':\n      return 'channels';\n    default:\n      return null;\n  }\n};\n"],"sourceRoot":""}