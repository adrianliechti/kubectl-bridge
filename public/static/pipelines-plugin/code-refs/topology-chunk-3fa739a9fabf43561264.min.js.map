{"version":3,"sources":["webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/PipelineOverview.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/PipelineOverviewAlert.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/PipelineRunItem.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/PipelineStartButton.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/TriggerLastRunButton.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/TriggersOverview.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/TriggerResourceLinks.tsx","webpack:///./packages/pipelines-plugin/src/topology/build-decorators/PipelineRunDecorator.tsx","webpack:///./packages/pipelines-plugin/src/topology/build-decorators/PipelineBuildDecoratorTooltip.tsx","webpack:///./packages/pipelines-plugin/src/utils/pipeline-plugin-utils.ts","webpack:///./packages/pipelines-plugin/src/topology/index.ts","webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./public/components/storage-class.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/dev-console/src/components/import/section/FormSection.tsx","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/pipelines-plugin/src/const.ts","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/utils.ts","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-operator.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/const.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/pipelineResource-utils.ts","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/components/graph-view/index.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/hooks.ts","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/pipeline-config.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./public/components/storage/shared.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/submit-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/resource-utils.ts","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-overview/pipeline-overview-utils.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/const.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/utils/triggers.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/index.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-actions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/ModalStructure.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/hooks.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-builder/utils.ts","webpack:///./packages/console-app/src/components/access-modes/access-mode.tsx","webpack:///./public/components/utils/storage-class-dropdown.tsx","webpack:///./packages/pipelines-plugin/src/utils/common.ts","webpack:///./packages/pipelines-plugin/src/components/taskruns/useTaskRuns.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/detail-page-tabs/utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogSnippetBlock.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/RemoveTriggerModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/StartPipelineModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/ResourceKebabWithUserLabel.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineParameterSection.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/autoCompleteUtils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineWorkspacesSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/AddTriggerModal.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/pipelineRunLogSnippet.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/triggered-by/ResourceKebab.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/AutoCompletePopover.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/resource-utils.ts","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/autoCompleteValueParsers.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/log-snippet-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/usePipelineFromPipelineRun.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/remove-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/RemoveTriggerForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerTemplateSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/start-pipeline/StartPipelineForm.tsx","webpack:///./packages/pipelines-plugin/src/components/shared/common/auto-complete/useAutoComplete.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceDropdownField.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineResourceParam.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineClusterOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineGitOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineImageOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-resource/PipelineStorageOptions.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineResourceDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PipelineSecretSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/SecretForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/SecretsList.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/MultipleResourceKeySelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/MultipleKeySelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/PVCDropdown.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/common/VolumeClaimTemplateForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/AddTriggerForm.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerBindingSection.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/TriggerBindingSelector.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelines/modals/triggers/const.ts","webpack:///./packages/pipelines-plugin/src/components/charts/HorizontalStackedBars.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/hooks/useTaskStatus.ts","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/status/TaskStatusTooltip.tsx","webpack:///./packages/pipelines-plugin/src/components/pipelineruns/logs/LogSnippetFromPod.tsx","webpack:///./packages/pipelines-plugin/src/topology/pipeline-tab-section.tsx","webpack:///./packages/pipelines-plugin/src/topology/build-decorators/getPipelineRunDecorator.tsx","webpack:///./packages/pipelines-plugin/src/topology/getPipelinesDataModelReconciler.ts"],"names":["item","pipelines","pipeline","pipelineRuns","metadata","name","namespace","t","showAlert","setShowAlert","text","labelPluralKey","length","title","onClose","className","to","pipelineRunsLength","justifyContent","default","inline","kind","map","pr","key","uid","pipelineRun","variant","isInline","actionClose","creationTimestamp","status","taskRuns","path","lastUpdated","completionTime","startTime","logDetails","hasGutter","span","logSnippet","message","impersonate","defaultAccessReview","group","apiGroup","resource","plural","verb","onClick","modalClassName","latestRun","pipelineRunModel","labelKey","callback","accessReview","utilityAccessReview","isDisabled","templateNames","model","links","routeURL","triggerTemplateName","link","additionalClassName","radius","x","y","ref","latestPipelineRun","taskRunsLoaded","PLRTaskRuns","statusIcon","iconOnly","noTooltip","canStartPipeline","ariaLabel","tooltipContent","decoratorContent","triggerRef","content","position","left","taskStatus","pipelineBars","height","values","Object","keys","rStatus","color","pftoken","value","size","breakdownInfo","byCreationTime","right","leftCreationTime","Date","now","getTime","getPipelineRunsForPipeline","props","pipelineRunsData","data","pipelineName","filter","spec","pipelineRef","labels","sort","getPipelinesAndPipelineRunsForResource","pipelinesData","resourceInstanceName","resourcePipeline","find","pl","useTopologyWorkloadActionProvider","element","actions","getType","k8sKind","undefined","useTopologyVisualConnectorActionProvider","getSource","kindObj","inFlight","ModifyCount","AddStorage","common","factory","menuActions","obj","dc","req","apiVersion","latest","force","opts","ns","rollout","catch","err","error","subresource","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","timeout","updatePeriod","interval","triggers","join","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","href","deprecatedDeploymentConfig","DeploymentConfigsDetails","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","StorageClassReference","isDefaultClass","storageClass","StorageClassDetails","StorageClassTableRow","provisioner","reclaimPolicy","StorageClassList","StorageClassPage","filterLabel","createButtonText","StorageClassDetailsPage","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","getRoutesURL","routes","getTopologyResourceObject","topologyObject","resources","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","itemData","Promise","reject","updates","push","groupResources","groupResource","nextResource","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","reduce","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","acc","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","flexStyle","display","flex","flexDirection","margin","subTitle","fullWidth","children","flexLayout","extraMargin","dataTest","style","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","PipelineModel","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","mTask","pipelineTaskName","date","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","getRunStatusColor","FailedToStart","getPipelineFromPipelineRun","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","width","visible","padding","getTopologyEdgeItems","edges","targetNode","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","jobs","cronJobs","statefulSets","services","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","metric","newValues","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","rc","isRollingOut","FLAG_OPENSHIFT_PIPELINE","FLAG_OPENSHIFT_PIPELINE_AS_CODE","FLAG_OPENSHIFT_PIPELINE_CONDITION","CLUSTER_PIPELINE_NS","PIPELINE_RUNTIME_LABEL","PIPELINE_RUNTIME_VERSION_LABEL","PIPELINE_STRATEGY_LABEL","PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY","FUNC_PIPELINE_RUNTIME_LABEL","ARTIFACTHUB_API_BASE_URL","DELETED_RESOURCE_IN_K8S_ANNOTATION","RESOURCE_LOADED_FROM_RESULTS_ANNOTATION","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","editAccess","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","targetGroup","sourceGroup","getParent","titleKey","nodeLabel","getLabel","sourceLabel","targetLabel","close","useK8sGet","setData","setLoaded","setLoadError","getPipelineRunGenerateName","getPipelineRunData","getPipelineName","workspaces","latestRunParams","newPipelineRun","serviceAccountName","migratePipelineRun","getDefaultVolumeClaimTemplate","volumeClaimTemplate","accessModes","storage","getServerlessFunctionDefaultPersistentVolumeClaim","finalizers","storageClassName","volumeMode","supportWorkspaceDefaults","preselectPVC","workspaceSetting","EmptyDirectory","emptyDir","PVC","persistentVolumeClaim","claimName","NoWorkspace","convertPipelineToModalData","alwaysCreateResources","parameters","selection","convertMapToNameValueArray","getPipelineRunFromForm","formValues","pipelineRunData","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","external","rest","decorator","showBackground","rel","stopPropagation","role","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","onSelect","controlled","getDataFromAdapter","resolvedExtensions","properties","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","watchedResources","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","expand","DEFAULT_SUPPORTED_FILTER_IDS","getPipelineOperatorVersion","versions","csv","CSVPhaseSucceeded","Boolean","usePipelineOperatorVersion","setVersion","isGAVersionInstalled","operator","isTriggersGAVersion","usePipelineMetricsLevel","pipelineOperator","hasUpdatePermission","metricsLevel","queryPrefix","TEKTON","useIsTektonV1VersionPresent","setFeatureFlag","activeNamespace","operatorVersion","isTektonV1VersionPresent","major","minor","useIsPipelineOperatorVersion_1_16_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER","useIsPipelineOperatorVersion_1_17_or_newer","IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","getCommonResourceActions","CREATE_PIPELINE_RESOURCE","initialResourceFormValues","location","dir","cluster","insecure","cadata","NodeType","EdgeType","KameletType","dx","dy","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","customData","WorkloadTableHeader","getDefinedObj","objData","createPipelineResource","secretResp","resourceName","pipelineResource","fieldName","secretKey","createSecretResource","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","csvName","innerRadius","icon","hoverRef","onShowCreateConnector","onContextMenu","contextMenuOpen","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","hover","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","filtered","showLabel","kindData","detailsLevel","getDetailsLevel","showDetails","low","badgeClassName","kindStr","toLowerCase","kindColor","prev","truncateLength","scaleNode","high","badge","kindAbbr","badgeColor","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","bgClassName","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","rx","ry","iconClass","TOP_MARGIN","top","textAnchor","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","getTargetEdges","highlightNode","monitor","getOperation","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","collect","dragging","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","accept","canDrop","dropTarget","isOver","edgeDragging","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","dropHint","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","getter","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","resourceTypes","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","getAppliedFilters","useFilterContextValues","appliedFilters","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","getTopologyFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","Provider","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","extensionsLoaded","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","addHealthChecksLink","alertMessage","dismissible","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","workloadData","cheEnabled","editUrl","repoIcon","dispatch","showMonitoringOverview","firingAlerts","severityAlertType","processResources","toCreateResources","createdResources","resourceValues","resourceSubmit","indexLookup","creationIndex","indexOf","submitStartPipeline","processWorkspaces","pipelineRunResource","usePipelinesBreadcrumbsFor","isAdminPerspective","useTasksBreadcrumbsFor","useTriggersBreadcrumbsFor","useDevPipelinesBreadcrumbsFor","navOption","useLatestPipelineRun","pipelineRunLoaded","pipelineRunError","usePipelinePVC","pvcResource","PVCLoaded","PVCError","usePipelineSuccessRatioPoll","delay","queries","endpoint","QUERY_RANGE","query","usePipelineRunTaskRunPoll","usePipelineRunDurationPoll","usePipelineRunPoll","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","onCreate","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","dragRef","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","open","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","sbr","hasError","ERROR","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","dragNodeRef","needsHintRef","needsHint","groupClasses","StatusSeverities","warning","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","animationDuration","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","usePipelineConfig","getPipelineMetricsLevel","UNSUPPORTED_LEVEL","METRICS_PIPELINERUN_DURATION_TYPE","HISTOGRAM","METRICS_TASKRUN_DURATION_TYPE","METRICS_PIPELINERUN_LEVEL","PIPELINE","METRICS_TASKRUN_LEVEL","TASK","LASTVALUE","PIPELINERUN","TASKRUN","routeDecoratorIcon","fillRule","stroke","snapshotPVCStorageClassAnnotation","snapshotPVCAccessModeAnnotation","snapshotPVCVolumeModeAnnotation","initialAccessModes","initialVolumeModes","provisionerAccessModeMapping","freeze","Filesystem","Block","partialMatch","getAccessModeOptions","getVolumeModeRadios","dropdownUnits","Ki","Mi","Gi","Ti","Pi","Ei","getProvisionerModeMapping","getAccessModeForProvisioner","ignoreReadOnly","modeMapping","mode","flat","modes","getVolumeModeForProvisioner","accessMode","exposeRoute","elName","iteration","elResource","serviceGeneratedName","configuration","generatedName","servicePort","ports","submitTrigger","triggerBinding","thisNamespace","triggerTemplateParams","triggerTemplate","pipelineOperatorVersion","eventListener","ttResource","createTrigger","gitDetectedType","defaultTriggerBinding","clusterTriggerBinding","triggerValues","VolumeClaimTemplate","createTriggerTemplate","createEventListener","triggerBindings","bindings","createEventListenerRoute","targetPort","eventListenerName","referenceName","eventlistener","weight","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","fieldId","_","toggle","toggleRef","isFullWidth","onOpenChange","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","getAllNotStartedPipelines","sessionStorage","getNotStartedPipelines","isPipelineNotStarted","removePipelineNotStarted","newList","pName","setItem","setPipelineNotStarted","pipelineData","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","BuildOverviewItem","startTimestamp","spin","BuildOverviewList","canStartBuild","buildsLength","BuildOverview","ServicePortList","service","protocol","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","dndDropRef","badgeTextColor","badgeBorderColor","badgeLocation","labelIconClass","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","dragLabelRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","paddingX","paddingY","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","groups","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend","STATUS_KEY_NAME_ERROR","UpdateOperationType","TaskErrorType","TASK_FIELD_ERROR_TYPE_MAPPING","NAME_ERROR","MISSING_REQUIRED_PARAMS","MISSING_RESOURCES","MISSING_WORKSPACES","MISSING_REQUIRED_WHEN_EXPRESSIONS","getTaskErrorString","errorType","WhenExpressionOperatorType","initialPipelineFormData","listTasks","finallyTasks","finallyListTasks","loadingTasks","getResourceName","getEventListenerTemplateNames","elTrigger","getEventListenerGeneratedName","useAllEventListeners","eventListenerResource","eventListenerLoaded","usePipelineTriggerTemplateNames","eventListenerResources","triggerTemplateResources","resourceMap","memoResources","useEventListenerRoutes","triggerTemplateResults","countExpected","countLoaded","countErrored","matchingTriggerTemplateNames","resourceWatch","plr","ev","eventListenerTemplateNames","generatedRouteName","useEventListenerURL","routeLoaded","ingress","getEventListenerTriggerBindingNames","getTriggerTemplatePipelineName","useTriggerTemplateEventListenerNames","useTriggerBindingEventListenerNames","handlePipelineRunSubmit","startPipeline","triggerPipeline","rerunPipeline","onComplete","sharedProps","rerunPipelineAndStay","deleteResourceObj","tektonResultsFlag","isResourceLoadedFromTR","labelKind","tooltip","getPipelineKebabActions","isTriggerPresent","rerunPipelineAndRedirect","cleanPipeline","addTrigger","removeTrigger","editPipeline","getPipelineRunKebabActions","redirectReRun","rerunPipelineRunAndRedirect","reRunPipelineRun","tooltipKey","stopPipelineRunForTaskRunStatus","PLRTasks","stopPipelineRun","cancelPipelineRunFinallyForTaskRunStatus","cancelPipelineRunFinally","getTaskRunKebabActions","errors","submitBtnText","mergeAnnotationsWithResource","useUserAnnotationForManualStart","usePipelineRunWithUserAnnotation","useMenuActionsWithUserAnnotation","kebabAction","commonPipelineSchema","description","Secret","ConfigMap","configMap","startPipelineSchema","secretOpen","equals","addTriggerSchema","advancedSectionValidationSchema","getBuilderTasksErrorGroup","formikFormErrors","paths","nameErrorString","formData","getErrorsForType","formErrors","displayNameErrors","getTopLevelErrorMessage","taskIndex","errorObj","taskErrors","matchingErrorType","mappingErrorType","propertyPath","findTask","resourceTasks","tasksLoaded","clusterTasks","namespacedTasks","matchingName","taskResource","taskSpec","findTaskFromFormikData","formikData","taskResources","mapReplaceRelatedInOthers","taskName","relatedTaskName","iterationTask","remainingRunAfters","runAfterName","mapRemoveRelatedInOthers","mapStitchReplaceInOthers","removalTask","updatedIterationTask","newRunAfter","mapBeRelated","newTaskName","mapAddRelatedToOthers","safeName","reservedNames","desiredName","newName","convertResourceToLoadingTask","usedNames","isFinallyTask","convertResourceToTask","convertBuilderFormToPipeline","existingPipeline","listIds","listTask","unhandledSpec","trimmedTask","outputs","removeEmptyFormFields","removeListRunAfters","convertPipelineToBuilderForm","getPVCAccessModes","AccessModeSelector","filterByVolumeMode","availableAccessModes","pvcInitialAccessMode","allowedAccessModes","setAllowedAccessModes","setAccessMode","changeAccessMode","setIsOpen","setSelected","onToggleClick","selectOptions","_event","shouldFocusToggleOnSelect","StorageClassDropdownInnerWithTranslation","defaultClass","autocompleteFilter","getTitle","kindLabel","UNSAFE_componentWillReceiveProps","nextProps","desc","unorderedItems","noStorageClass","StorageClass","zone","sc","nextState","describedBy","noSelection","StorageClassDropdownEntry","StorageClassDropdownNoStorageClassOption","itemsAvailableToShow","hideClassName","autocompletePlaceholder","menuClassName","StorageClassDropdownInner","StorageClassDropdown","storageClassProperties","storageClassDescriptionLine","paramIsRequired","useTaskRuns","pipelineRunName","taskRunResource","getTaskRunsOfPipelineRun","sanitizePipelineParams","pipelineWithNoEmptyDefaultParams","parameter","removeEmptyDefaultFromPipelineParams","getPipelineTaskLinks","toResourceLinkData","qualifier","disableLink","taskLinks","finallyTaskLinks","getPipelineResourceLinks","definitionResources","runResources","definitionResource","resourceRef","isResourceRef","convertBackingPipelineToPipelineResourceRefProps","staticMessage","selectedTrigger","userStartedAnnotation","pipelinePVC","pipelinePVCLoaded","otherProps","augmentedMenuActions","autoCompleteValues","setFieldValue","render","input","autoComplete","addLabel","arrayName","additionalProps","onAutoComplete","callbackRef","paramToAutoComplete","workspaceToAutoComplete","taskToStatus","findTasksThatRunAfter","runAfterTasks","runAfterNames","computeAvailableResultACs","thisTask","invalidTasks","insertIntoValue","insertText","startPos","endPos","reduceToSections","formikIndex","resourceType","sections","types","section","sectionData","filterType","volumeTypeOptions","volumeType","resourceNameField","resourceKeysField","addString","initialSizeValue","initialSizeUnit","getVolumeTypeFields","getPLRLogSnippet","failedTaskRun","steps","exitCode","ResourceKebab","terminatingTooltip","contentRefCallback","focusTrapProps","insertAutoComplete","popperProps","menuWidth","scrollContainer","placement","closeOnEsc","closeOnOutsideClick","popperOptions","modifiers","hide","preventOverflow","flip","maxHeight","overflow","itemId","idx","PATHS","getTaskResources","alphaInputResources","betaInputResources","alphaOutputResources","betaOutputResources","getTaskParameters","alphaParameters","betaParameters","useBuilderParams","selectedData","paramACs","workspaceACs","finallyStatusACs","taskResultACs","useAddTriggerParams","taskRunSnippetMessage","usePipelineFromPipelineRun","setPipeline","emptyPipeline","pipelineFromPipelineRun","newPipeline","selectedTriggerTemplate","triggerMatchesTriggerTemplate","matchingEventListeners","singleTriggers","deletableEventListeners","updatableEventListeners","isFilled","placeholder","removeTriggerSchema","PARAM_REFERENCE_CHARS","cursorPosition","focusingOptions","setFocusingOptions","menuOptions","shouldOpen","code","ctrlKey","cursorPos","selectionStart","closeMenu","useOpenMenuKeyWatcher","filterOptions","filteredOptions","setFilteredOptions","filterMappings","optionPartMap","optionAcc","optionPart","newFilterValue","newOptions","useFilterOptions","setFilter","closeCleanup","nodeRef","setNodeRef","setNode","onKeyCallback","applyFilterAtCursor","filterValue","selectionEnd","focusDropdownCallback","contentNode","useNodeListener","newValue","leftCapturePoint","insertValue","substr","cursorEndPoint","setSelectionRange","focusTrapOptions","clickOutsideDeactivates","onDeactivate","fallbackFocus","getBoundingClientRect","creating","autoSelect","prefixName","renderTypeFields","setFieldTouched","touched","availableResources","canAutoSelect","isPlaceholder","secretOpenField","textExpanded","textCollapsed","onReset","resetForm","handleReset","secretTypes","clearServerURL","setValues","renderSecretForm","Secrets","serviceaccounts","serviceAccountSecrets","filterData","sortedFilterData","isValid","setKeys","dataSelector","strText","selectedResource","keyMap","itemKeys","generateKeys","showBadge","fieldKey","direction","lg","grow","initialVolumeMode","initAccessModeHelp","accessModeHelp","setAccessModeHelp","setVolumeMode","requestSizeError","setRequestSizeError","requestSizeValue","setRequestSizeValue","requestSizeUnit","setRequestSizeUnit","storageProvisioner","setStorageProvisioner","setStorageClass","handleVolumeMode","parseInt","updatedStorageClass","displayMessage","defaultRequestSizeUnit","defaultRequestSizeValue","inputID","radio","checked","bindingVars","setBindingVars","paramPrefix","updateTriggerBindingVariables","selectedTriggerBinding","toggleTextExpanded","toggleTextCollapsed","isRead","customResourceKey","TRIGGER_BINDING_EMPTY","barGap","background","flexGrow","useTaskStatus","setLogSnippet","logError","setLogError","urlOpts","tailLines","watchURL","logContent","usePipelinesSideBarTabSection","getPipelineRunDecorator","getPipelinesDataModelReconciler"],"mappings":"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","file":"pipelines-plugin/code-refs/topology-chunk-3fa739a9fabf43561264.min.js","sourcesContent":["import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  SidebarSectionHeading,\n  ResourceLink,\n  resourcePath,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { OverviewItem } from '@console/shared';\nimport { PipelineRunModel, PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../types';\nimport { isPipelineNotStarted, removePipelineNotStarted } from './pipeline-overview-utils';\nimport PipelineOverviewAlert from './PipelineOverviewAlert';\nimport PipelineRunItem from './PipelineRunItem';\nimport PipelineStartButton from './PipelineStartButton';\nimport TriggerLastRunButton from './TriggerLastRunButton';\nimport TriggersOverview from './TriggersOverview';\n\nconst MAX_VISIBLE = 3;\n\ntype PipelinesOverviewProps = {\n  item: OverviewItem & {\n    pipelines?: PipelineKind[];\n    pipelineRuns?: PipelineRunKind[];\n  };\n};\n\nconst PipelinesOverview: React.FC<PipelinesOverviewProps> = ({\n  item: {\n    pipelines: [pipeline],\n    pipelineRuns,\n  },\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const { t } = useTranslation();\n  const [showAlert, setShowAlert] = React.useState(isPipelineNotStarted(name, namespace));\n\n  React.useEffect(() => {\n    setShowAlert(isPipelineNotStarted(name, namespace));\n  }, [name, namespace]);\n\n  return (\n    <div data-test=\"pipeline-overview\">\n      <SidebarSectionHeading text={t(PipelineRunModel.labelPluralKey)}>\n        {showAlert && pipelineRuns.length === 0 && (\n          <PipelineOverviewAlert\n            title={t('pipelines-plugin~Pipeline could not be started automatically')}\n            onClose={() => {\n              setShowAlert(false);\n              removePipelineNotStarted(name, namespace);\n            }}\n          />\n        )}\n        {pipelineRuns.length > MAX_VISIBLE && (\n          <Link\n            className=\"sidebar__section-view-all\"\n            to={`${resourcePath(referenceForModel(PipelineModel), name, namespace)}/Runs`}\n          >\n            {t('pipelines-plugin~View all {{pipelineRunsLength}}', {\n              pipelineRunsLength: pipelineRuns.length,\n            })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item pipeline-overview\">\n          <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n            <FlexItem>\n              <ResourceLink\n                inline\n                kind={referenceForModel(PipelineModel)}\n                name={name}\n                namespace={namespace}\n              />\n            </FlexItem>\n            <FlexItem>\n              {pipelineRuns.length === 0 ? (\n                <PipelineStartButton pipeline={pipeline} namespace={namespace} />\n              ) : (\n                <TriggerLastRunButton pipelineRuns={pipelineRuns} namespace={namespace} />\n              )}\n            </FlexItem>\n          </Flex>\n        </li>\n        {_.take(pipelineRuns, MAX_VISIBLE).map((pr) => (\n          <PipelineRunItem key={pr.metadata.uid} pipelineRun={pr} />\n        ))}\n      </ul>\n      <TriggersOverview pipeline={pipeline} />\n    </div>\n  );\n};\n\nexport default PipelinesOverview;\n","import * as React from 'react';\nimport { Alert, AlertActionCloseButton, AlertProps } from '@patternfly/react-core';\n\nimport './PipelineOverviewAlert.scss';\n\ntype PipelineOverviewAlertProps = {\n  title: string;\n  onClose?: () => void;\n};\n\nconst PipelineOverviewAlert: React.FC<PipelineOverviewAlertProps & AlertProps> = ({\n  title,\n  onClose,\n}) => {\n  return (\n    <Alert\n      className=\"pipeline-overview-alert\"\n      variant=\"custom\"\n      isInline\n      title={title}\n      actionClose={<AlertActionCloseButton onClose={onClose} />}\n    />\n  );\n};\n\nexport default PipelineOverviewAlert;\n","import * as React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { resourcePath } from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { LogSnippet, Status } from '@console/shared';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport LogSnippetBlock from '../../pipelineruns/logs/LogSnippetBlock';\nimport { getPLRLogSnippet } from '../../pipelineruns/logs/pipelineRunLogSnippet';\nimport './PipelineRunItem.scss';\nimport { useTaskRuns } from '../../taskruns/useTaskRuns';\n\ntype PipelineRunItemProps = {\n  pipelineRun: PipelineRunKind;\n};\n\nconst PipelineRunItem: React.FC<PipelineRunItemProps> = ({ pipelineRun }) => {\n  const { t } = useTranslation();\n  const {\n    metadata: { name, namespace, creationTimestamp },\n    status,\n  } = pipelineRun;\n  const [taskRuns] = useTaskRuns(pipelineRun?.metadata?.namespace, pipelineRun?.metadata?.name);\n  const path = resourcePath(referenceForModel(PipelineRunModel), name, namespace);\n  const lastUpdated = status\n    ? status.completionTime || status.startTime || creationTimestamp\n    : creationTimestamp;\n  const logDetails = getPLRLogSnippet(pipelineRun, taskRuns);\n\n  return (\n    <li className=\"odc-pipeline-run-item list-group-item\">\n      <Grid hasGutter>\n        <GridItem span={6}>\n          <div>\n            <Link to={`${path}`}>{name}</Link>\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"odc-pipeline-run-item__time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </GridItem>\n        <GridItem span={3}>\n          <Status status={pipelineRunStatus(pipelineRun) || 'Pending'} />\n        </GridItem>\n        <GridItem span={3} className=\"pf-v5-u-text-align-right\">\n          <Link to={`${path}/logs`}>{t('pipelines-plugin~View logs')}</Link>\n        </GridItem>\n        {logDetails && (\n          <GridItem span={12}>\n            <LogSnippetBlock logDetails={logDetails} namespace={namespace}>\n              {(logSnippet: string) => (\n                <LogSnippet message={logDetails.title} logSnippet={logSnippet} />\n              )}\n            </LogSnippetBlock>\n          </GridItem>\n        )}\n      </Grid>\n    </li>\n  );\n};\n\nexport default PipelineRunItem;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { impersonateStateToProps } from '@console/dynamic-plugin-sdk';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { AccessReviewResourceAttributes } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport { startPipelineModal } from '../modals';\n\ntype StateProps = {\n  impersonate?: {\n    kind: string;\n    name: string;\n    subprotocols: string[];\n  };\n};\n\ntype PipelineStartButtonProps = {\n  pipeline: PipelineKind;\n  namespace: string;\n};\n\nconst PipelineStartButton: React.FC<PipelineStartButtonProps & StateProps> = ({\n  pipeline,\n  namespace,\n  impersonate,\n}) => {\n  const { t } = useTranslation();\n  const openPipelineModal = () =>\n    startPipelineModal({\n      pipeline,\n      modalClassName: 'modal-lg',\n    });\n  const defaultAccessReview: AccessReviewResourceAttributes = {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace,\n    verb: 'create',\n  };\n  const isAllowed = useAccessReview(defaultAccessReview, impersonate);\n\n  return (\n    isAllowed && (\n      <Button variant=\"secondary\" onClick={openPipelineModal}>\n        {t('pipelines-plugin~Start')}\n      </Button>\n    )\n  );\n};\n\nexport default connect(impersonateStateToProps)(PipelineStartButton);\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { impersonateStateToProps } from '@console/dynamic-plugin-sdk';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { AccessReviewResourceAttributes } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport { rerunPipelineAndStay } from '../../../utils/pipeline-actions';\nimport { getLatestRun } from '../../../utils/pipeline-augment';\nimport { returnValidPipelineRunModel } from '../../../utils/pipeline-utils';\nimport { usePipelineRunWithUserAnnotation } from '../../pipelineruns/triggered-by';\n\ntype TriggerLastRunButtonProps = {\n  pipelineRuns: PipelineRunKind[];\n  namespace: string;\n  impersonate?;\n};\n\nconst TriggerLastRunButton: React.FC<TriggerLastRunButtonProps> = ({\n  pipelineRuns,\n  namespace,\n  impersonate,\n}) => {\n  const { t } = useTranslation();\n  const latestRun = usePipelineRunWithUserAnnotation(getLatestRun(pipelineRuns, 'startTimestamp'));\n  const pipelineRunModel = returnValidPipelineRunModel(latestRun);\n  const { labelKey, callback, accessReview: utilityAccessReview } = rerunPipelineAndStay(\n    pipelineRunModel,\n    latestRun,\n  );\n  const defaultAccessReview: AccessReviewResourceAttributes = {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace,\n    verb: 'create',\n  };\n  const accessReview = _.isEmpty(utilityAccessReview) ? defaultAccessReview : utilityAccessReview;\n  const isAllowed = useAccessReview(accessReview, impersonate);\n  return (\n    isAllowed && (\n      <Button\n        variant=\"secondary\"\n        onClick={callback}\n        isDisabled={pipelineRuns.length === 0 && !callback}\n      >\n        {t(labelKey)}\n      </Button>\n    )\n  );\n};\n\nexport default connect(impersonateStateToProps)(TriggerLastRunButton);\n","import * as React from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { SidebarSectionHeading } from '@console/internal/components/utils';\nimport { TriggerTemplateModel } from '../../../models';\nimport { PipelineKind } from '../../../types';\nimport { usePipelineTriggerTemplateNames } from '../utils/triggers';\nimport TriggerResourceLinks from './TriggerResourceLinks';\n\ntype TriggersOverviewProps = {\n  pipeline: PipelineKind;\n};\n\nconst TriggersOverview: React.FC<TriggersOverviewProps> = ({ pipeline }) => {\n  const {\n    metadata: { name, namespace },\n  } = pipeline;\n  const { t } = useTranslation();\n  const templateNames = usePipelineTriggerTemplateNames(name, namespace) || [];\n\n  return templateNames.length > 0 ? (\n    <>\n      <SidebarSectionHeading data-test=\"triggers-heading\" text={t('pipelines-plugin~Triggers')} />\n      <ul className=\"list-group\" data-test=\"triggers-list\">\n        <li className=\"list-group-item pipeline-overview\" data-test=\"triggers-list-item\">\n          <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n            <FlexItem>\n              <TriggerResourceLinks\n                namespace={namespace}\n                model={TriggerTemplateModel}\n                links={templateNames}\n              />\n            </FlexItem>\n          </Flex>\n        </li>\n      </ul>\n    </>\n  ) : null;\n};\n\nexport default TriggersOverview;\n","import * as React from 'react';\nimport { ResourceLink, ExternalLinkWithCopy } from '@console/internal/components/utils';\nimport { K8sKind, referenceForModel } from '@console/internal/module/k8s';\nimport { RouteTemplate } from '../utils/triggers';\n\nimport './TriggerResourceLinks.scss';\n\ntype TriggerResourceLinksProps = {\n  namespace: string;\n  model: K8sKind;\n  links: RouteTemplate[];\n};\nconst TriggerResourceLinks: React.FC<TriggerResourceLinksProps> = ({\n  links = [],\n  namespace,\n  model,\n}) => {\n  if (links.length === 0) {\n    return null;\n  }\n  return (\n    <div>\n      <dl>\n        {links.map(({ routeURL, triggerTemplateName }) => {\n          return (\n            <dd key={triggerTemplateName}>\n              <ResourceLink\n                kind={referenceForModel(model)}\n                name={triggerTemplateName}\n                namespace={namespace}\n                title={triggerTemplateName}\n                inline\n              />\n              {routeURL && (\n                <div className=\"opp-trigger-template-link\">\n                  <ExternalLinkWithCopy\n                    key={routeURL}\n                    link={routeURL}\n                    text={routeURL}\n                    additionalClassName=\"co-external-link--block\"\n                  />\n                </div>\n              )}\n            </dd>\n          );\n        })}\n      </dl>\n    </div>\n  );\n};\n\nexport default TriggerResourceLinks;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { impersonateStateToProps } from '@console/dynamic-plugin-sdk';\nimport { resourcePathFromModel, useAccessReview } from '@console/internal/components/utils';\nimport { AccessReviewResourceAttributes } from '@console/internal/module/k8s';\nimport PipelineBuildDecoratorTooltip from '@console/pipelines-plugin/src/topology/build-decorators/PipelineBuildDecoratorTooltip';\nimport { getLatestPipelineRunStatus } from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { Status } from '@console/shared';\nimport { BuildDecoratorBubble } from '@console/topology/src/components/graph-view';\nimport { startPipelineModal } from '../../components/pipelines/modals';\nimport { getTaskRunsOfPipelineRun, useTaskRuns } from '../../components/taskruns/useTaskRuns';\nimport { PipelineRunModel } from '../../models';\nimport { PipelineKind, PipelineRunKind } from '../../types';\n\ntype PipelineRunDecoratorProps = {\n  pipeline: PipelineKind;\n  pipelineRuns: PipelineRunKind[];\n  radius: number;\n  x: number;\n  y: number;\n};\n\ntype StateProps = {\n  impersonate?: {\n    kind: string;\n    name: string;\n    subprotocols: string[];\n  };\n};\n\nexport const ConnectedPipelineRunDecorator: React.FC<PipelineRunDecoratorProps & StateProps> = ({\n  pipeline,\n  pipelineRuns,\n  radius,\n  x,\n  y,\n  impersonate,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const { latestPipelineRun, status } = getLatestPipelineRunStatus(pipelineRuns);\n  const [taskRuns, taskRunsLoaded] = useTaskRuns(latestPipelineRun?.metadata?.namespace);\n  const PLRTaskRuns = getTaskRunsOfPipelineRun(taskRuns, latestPipelineRun?.metadata?.namespace);\n  const statusIcon = <Status status={status} iconOnly noTooltip />;\n\n  const defaultAccessReview: AccessReviewResourceAttributes = {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  };\n  const canStartPipeline = useAccessReview(defaultAccessReview, impersonate);\n\n  let ariaLabel;\n  let tooltipContent;\n  let decoratorContent;\n  if (latestPipelineRun) {\n    ariaLabel = t(`pipelines-plugin~Pipeline status is {{status}}. View logs.`, { status });\n    tooltipContent = taskRunsLoaded && (\n      <PipelineBuildDecoratorTooltip\n        pipelineRun={latestPipelineRun}\n        status={status}\n        taskRuns={PLRTaskRuns}\n      />\n    );\n    const link = `${resourcePathFromModel(\n      PipelineRunModel,\n      latestPipelineRun.metadata.name,\n      latestPipelineRun.metadata.namespace,\n    )}/logs`;\n    decoratorContent = (\n      <Link to={link}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={ariaLabel}>\n          {statusIcon}\n        </BuildDecoratorBubble>\n      </Link>\n    );\n  } else {\n    ariaLabel = t('pipelines-plugin~Pipeline not started. Start pipeline.');\n    tooltipContent = t('pipelines-plugin~Pipeline not started');\n\n    let onClick = null;\n    if (canStartPipeline) {\n      onClick = () => {\n        startPipelineModal({\n          pipeline,\n          modalClassName: 'modal-lg',\n        });\n      };\n    }\n\n    decoratorContent = (\n      <BuildDecoratorBubble x={x} y={y} radius={radius} onClick={onClick} ariaLabel={ariaLabel}>\n        {statusIcon}\n      </BuildDecoratorBubble>\n    );\n  }\n\n  return (\n    <Tooltip triggerRef={ref} content={tooltipContent} position={TooltipPosition.left}>\n      <g ref={ref}>{decoratorContent}</g>\n    </Tooltip>\n  );\n};\n\nexport default connect(impersonateStateToProps)(ConnectedPipelineRunDecorator);\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport HorizontalStackedBars from '../../components/charts/HorizontalStackedBars';\nimport { useTaskStatus } from '../../components/pipelineruns/hooks/useTaskStatus';\nimport TaskStatusToolTip from '../../components/pipelineruns/status/TaskStatusTooltip';\nimport { ComputedStatus, PipelineRunKind, TaskRunKind } from '../../types';\nimport { getRunStatusColor } from '../../utils/pipeline-augment';\n\nimport './PipelineBuildDecoratorTooltip.scss';\n\nexport interface PipelineBuildDecoratorTooltipProps {\n  pipelineRun: PipelineRunKind;\n  status: string;\n  taskRuns: TaskRunKind[];\n}\n\nconst PipelineBuildDecoratorTooltip: React.FC<PipelineBuildDecoratorTooltipProps> = ({\n  pipelineRun,\n  status,\n  taskRuns,\n}) => {\n  const { t } = useTranslation();\n  const taskStatus = useTaskStatus(pipelineRun, taskRuns);\n  if (!pipelineRun || !status) {\n    return null;\n  }\n\n  const pipelineBars = (\n    <HorizontalStackedBars\n      height=\"1em\"\n      inline\n      values={Object.keys(ComputedStatus).map((rStatus) => ({\n        color: getRunStatusColor(ComputedStatus[rStatus]).pftoken.value,\n        name: rStatus,\n        size: taskStatus[ComputedStatus[rStatus]],\n      }))}\n    />\n  );\n  const breakdownInfo = <TaskStatusToolTip taskStatus={taskStatus} />;\n\n  return (\n    <div className=\"odc-pipeline-build-decorator-tooltip\">\n      <div className=\"odc-pipeline-build-decorator-tooltip__title\">\n        {t('pipelines-plugin~Pipeline {{status}}', { status })}\n      </div>\n      <div className=\"odc-pipeline-build-decorator-tooltip__status-bars-wrapper\">\n        <div className=\"odc-pipeline-build-decorator-tooltip__status-bars-title\">\n          {t('pipelines-plugin~Task status')}\n        </div>\n        <div className=\"odc-pipeline-build-decorator-tooltip__status-bars\">{pipelineBars}</div>\n      </div>\n      <div className=\"odc-pipeline-build-decorator-tooltip__status-breakdown\">{breakdownInfo}</div>\n    </div>\n  );\n};\n\nexport default PipelineBuildDecoratorTooltip;\n","import { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { PipelineRunModel, PipelineModel } from '../models';\nimport { PipelineKind, PipelineRunKind } from '../types';\n\n// label to get the pipelines\nexport const INSTANCE_LABEL = 'app.kubernetes.io/instance';\n\nexport const tknPipelineAndPipelineRunsWatchResources = (namespace: string) => {\n  return {\n    pipelines: {\n      isList: true,\n      kind: referenceForModel(PipelineModel),\n      namespace,\n      optional: true,\n    },\n    pipelineRuns: {\n      isList: true,\n      kind: referenceForModel(PipelineRunModel),\n      namespace,\n      optional: true,\n    },\n  };\n};\n\ntype PipelineItem = {\n  pipelines: PipelineKind[];\n  pipelineRuns: PipelineRunKind[];\n};\n\nconst byCreationTime = (left: K8sResourceKind, right: K8sResourceKind): number => {\n  const leftCreationTime = new Date(left?.metadata?.creationTimestamp || Date.now());\n  const rightCreationTime = new Date(right?.metadata?.creationTimestamp || Date.now());\n  return rightCreationTime.getTime() - leftCreationTime.getTime();\n};\n\nconst getPipelineRunsForPipeline = (pipeline: PipelineKind, props): PipelineRunKind[] => {\n  if (!props || !props.pipelineRuns) return null;\n  const pipelineRunsData = props.pipelineRuns.data;\n  const PIPELINE_RUN_LABEL = 'tekton.dev/pipeline';\n  const pipelineName = pipeline.metadata.name;\n  return pipelineRunsData\n    .filter((pr: PipelineRunKind) => {\n      return (\n        pipelineName === (pr.spec?.pipelineRef?.name || pr?.metadata?.labels?.[PIPELINE_RUN_LABEL])\n      );\n    })\n    .sort(byCreationTime);\n};\n\nexport const getPipelinesAndPipelineRunsForResource = (\n  resource: K8sResourceKind,\n  props,\n): PipelineItem => {\n  const pipelinesData = props?.pipelines?.data;\n  if (!pipelinesData) return null;\n  const resourceInstanceName = resource?.metadata?.labels?.[INSTANCE_LABEL] || null;\n  if (!resourceInstanceName) return null;\n  const resourcePipeline = pipelinesData.find(\n    (pl) => pl?.metadata?.labels?.[INSTANCE_LABEL] === resourceInstanceName,\n  );\n  if (!resourcePipeline) return null;\n  return {\n    pipelines: [resourcePipeline],\n    pipelineRuns: getPipelineRunsForPipeline(resourcePipeline, props),\n  };\n};\n","export * from './pipeline-tab-section';\nexport { getPipelineRunDecorator } from './build-decorators/getPipelineRunDecorator';\nexport { getPipelinesDataModelReconciler } from './getPipelinesDataModelReconciler';\n","export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport * as classNames from 'classnames';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  DetailsItem,\n  Kebab,\n  ResourceKebab,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  detailsPage,\n  navFactory,\n} from './utils';\nimport { StorageClassResourceKind, K8sResourceKind, K8sResourceKindReference } from '../module/k8s';\nimport { StorageClassModel } from '../models';\n\nexport const StorageClassReference: K8sResourceKindReference = 'StorageClass';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(StorageClassModel), ...common];\n\nconst defaultClassAnnotation = 'storageclass.kubernetes.io/is-default-class';\nconst betaDefaultStorageClassAnnotation = 'storageclass.beta.kubernetes.io/is-default-class';\nexport const isDefaultClass = (storageClass: K8sResourceKind) => {\n  const annotations = _.get(storageClass, 'metadata.annotations') || {};\n  return (\n    annotations[defaultClassAnnotation] === 'true' ||\n    annotations[betaDefaultStorageClassAnnotation] === 'true'\n  );\n};\n\nconst tableColumnClasses = [\n  'pf-v5-u-w-42-on-md',\n  'pf-v5-u-w-42-on-md',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-16-on-md',\n  Kebab.columnClass,\n];\n\nconst StorageClassDetails: React.FC<StorageClassDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~StorageClass details')} />\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj}>\n              <DetailsItem label={t('public~Provisioner')} obj={obj} path=\"provisioner\" />\n            </ResourceSummary>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem label={t('public~Reclaim policy')} obj={obj} path=\"reclaimPolicy\" />\n              <dt>{t('public~Default class')}</dt>\n              <dd>{isDefaultClass(obj) ? t('public~True') : t('public~False')}</dd>\n              <DetailsItem\n                label={t('public~Volume binding mode')}\n                obj={obj}\n                path=\"volumeBindingMode\"\n              />\n            </dl>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst StorageClassTableRow: React.FC<RowFunctionArgs<StorageClassResourceKind>> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={classNames(tableColumnClasses[0], 'co-break-word')}>\n        <ResourceLink kind={StorageClassReference} name={obj.metadata.name}>\n          {isDefaultClass(obj) && (\n            <span className=\"small text-muted co-resource-item__help-text\">\n              &ndash; {t('public~Default')}\n            </span>\n          )}\n        </ResourceLink>\n      </TableData>\n      <TableData className={classNames(tableColumnClasses[1], 'co-break-word')}>\n        {obj.provisioner}\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>{obj.reclaimPolicy || '-'}</TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <ResourceKebab actions={menuActions} kind={StorageClassReference} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport const StorageClassList: React.FC = (props) => {\n  const { t } = useTranslation();\n  const StorageClassTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Provisioner'),\n        sortField: 'provisioner',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Reclaim policy'),\n        sortField: 'reclaimPolicy',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[3] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~StorageClasses')}\n      Header={StorageClassTableHeader}\n      Row={StorageClassTableRow}\n      virtualize\n    />\n  );\n};\nStorageClassList.displayName = 'StorageClassList';\n\nexport const StorageClassPage: React.FC<StorageClassPageProps> = (props) => {\n  const createProps = {\n    to: '/k8s/cluster/storageclasses/~new/form',\n  };\n  const { t } = useTranslation();\n  return (\n    <ListPage\n      {..._.omit(props, 'mock')}\n      title={t('public~StorageClasses')}\n      kind={StorageClassReference}\n      ListComponent={StorageClassList}\n      canCreate={true}\n      filterLabel={props.filterLabel}\n      createProps={createProps}\n      createButtonText={t('public~Create StorageClass')}\n    />\n  );\n};\nexport const StorageClassDetailsPage: React.FC = (props) => {\n  const pages = [navFactory.details(detailsPage(StorageClassDetails)), navFactory.editYaml()];\n  return (\n    <DetailsPage {...props} kind={StorageClassReference} menuActions={menuActions} pages={pages} />\n  );\n};\nStorageClassDetailsPage.displayName = 'StorageClassDetailsPage';\n\nexport type StorageClassDetailsProps = {\n  obj: any;\n};\n\nexport type StorageClassPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import * as React from 'react';\nimport { FormHelperText } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport './FormSection.scss';\n\nexport interface FormSectionProps {\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  fullWidth?: boolean;\n  children: React.ReactNode;\n  flexLayout?: boolean;\n  extraMargin?: boolean;\n  dataTest?: string;\n  style?: React.CSSProperties;\n}\n\nconst flexStyle: React.CSSProperties = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  margin: 'var(--pf-v5-global--spacer--md) 0',\n};\n\nconst FormSection: React.FC<FormSectionProps> = ({\n  title,\n  subTitle,\n  fullWidth,\n  children,\n  flexLayout,\n  extraMargin,\n  dataTest,\n  style,\n}) => (\n  <div\n    className={cx('pf-v5-c-form', {\n      'co-m-pane__form': !fullWidth,\n      'odc-form-section--extra-margin': extraMargin,\n    })}\n    style={{ ...(flexLayout ? flexStyle : {}), ...(style || {}) }}\n    data-test={dataTest}\n  >\n    {title && <h2 className=\"odc-form-section__heading\">{title}</h2>}\n    {subTitle && <FormHelperText>{subTitle}</FormHelperText>}\n    {children}\n  </div>\n);\n\nexport default FormSection;\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","export const FLAG_OPENSHIFT_PIPELINE = 'OPENSHIFT_PIPELINE';\nexport const FLAG_OPENSHIFT_PIPELINE_AS_CODE = 'OPENSHIFT_PIPELINE_AS_CODE';\nexport const FLAG_OPENSHIFT_PIPELINE_CONDITION = 'OPENSHIFT_PIPELINE_CONDITION';\nexport const CLUSTER_PIPELINE_NS = 'openshift';\nexport const PIPELINE_RUNTIME_LABEL = 'pipeline.openshift.io/runtime';\nexport const PIPELINE_RUNTIME_VERSION_LABEL = 'pipeline.openshift.io/runtime-version';\nexport const PIPELINE_STRATEGY_LABEL = 'pipeline.openshift.io/strategy';\nexport const PREFERRED_DEV_PIPELINE_PAGE_TAB_USER_SETTING_KEY = 'pipeline.preferredPipelinePageTab';\nexport const FUNC_PIPELINE_RUNTIME_LABEL = 'function.knative.dev/runtime';\nexport const ARTIFACTHUB_API_BASE_URL = 'https://artifacthub.io/api/v1';\nexport const DELETED_RESOURCE_IN_K8S_ANNOTATION = 'resource.deleted.in.k8s';\nexport const RESOURCE_LOADED_FROM_RESULTS_ANNOTATION = 'resource.loaded.from.tektonResults';\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as _ from 'lodash';\nimport { getActiveUserName } from '@console/internal/actions/ui';\nimport { getRandomChars } from '@console/shared';\nimport {\n  DELETED_RESOURCE_IN_K8S_ANNOTATION,\n  RESOURCE_LOADED_FROM_RESULTS_ANNOTATION,\n} from '../../../../const';\nimport { PipelineRunModel } from '../../../../models';\nimport {\n  PipelineKind,\n  TektonResource,\n  PipelineRunKind,\n  PipelineRunEmbeddedResource,\n  PipelineRunEmbeddedResourceParam,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  VolumeClaimTemplateType,\n  TektonWorkspace,\n  PipelineRunParam,\n} from '../../../../types';\nimport { getPipelineRunParams, getPipelineRunWorkspaces } from '../../../../utils/pipeline-utils';\nimport {\n  TektonResourceLabel,\n  VolumeTypes,\n  preferredNameAnnotation,\n  StartedByAnnotation,\n} from '../../const';\nimport { CREATE_PIPELINE_RESOURCE, initialResourceFormValues } from './const';\nimport {\n  CommonPipelineModalFormikValues,\n  PipelineModalFormResource,\n  PipelineModalFormWorkspace,\n  PipelineModalFormWorkspaceStructure,\n} from './types';\n\n/**\n * Migrates a PipelineRun from one version to another to support auto-upgrades with old (and invalid) PipelineRuns.\n *\n * Note: Each check within this method should be driven by the apiVersion number if the API is properly up-versioned\n * for these breaking changes. (should be done moving from 0.10.x forward)\n */\nexport const migratePipelineRun = (pipelineRun: PipelineRunKind): PipelineRunKind => {\n  let newPipelineRun = pipelineRun;\n\n  const serviceAccountPath = 'spec.serviceAccount';\n  if (_.has(newPipelineRun, serviceAccountPath)) {\n    // .spec.serviceAccount was removed for .spec.serviceAccountName in 0.9.x\n    // Note: apiVersion was not updated for this change and thus we cannot gate this change behind a version number\n    const serviceAccountName = _.get(newPipelineRun, serviceAccountPath);\n    newPipelineRun = _.omit(newPipelineRun, [serviceAccountPath]);\n    newPipelineRun = _.merge(newPipelineRun, {\n      spec: {\n        serviceAccountName,\n      },\n    });\n  }\n\n  return newPipelineRun;\n};\n\nexport const getPipelineName = (pipeline?: PipelineKind, latestRun?: PipelineRunKind): string => {\n  if (pipeline) {\n    return pipeline.metadata.name;\n  }\n\n  if (latestRun) {\n    return (\n      latestRun.spec.pipelineRef?.name ??\n      (latestRun.metadata.annotations?.[preferredNameAnnotation] || latestRun.metadata.name)\n    );\n  }\n  return null;\n};\n\nexport const getPipelineRunGenerateName = (pipelineRun: PipelineRunKind): string => {\n  if (pipelineRun.metadata.generateName) {\n    return pipelineRun.metadata.generateName;\n  }\n\n  return `${pipelineRun.metadata.name?.replace(/-[a-z0-9]{5,6}$/, '')}-`;\n};\n\nexport const getPipelineRunData = (\n  pipeline: PipelineKind = null,\n  latestRun?: PipelineRunKind,\n  options?: { generateName: boolean },\n): PipelineRunKind => {\n  if (!pipeline && !latestRun) {\n    // eslint-disable-next-line no-console\n    console.error('Missing parameters, unable to create new PipelineRun');\n    return null;\n  }\n\n  const pipelineName = getPipelineName(pipeline, latestRun);\n\n  const workspaces = latestRun?.spec.workspaces;\n\n  const latestRunParams = latestRun?.spec.params;\n  const pipelineParams = pipeline?.spec.params;\n  const params = latestRunParams || getPipelineRunParams(pipelineParams);\n  // TODO: We should craft a better method to allow us to provide configurable annotations and labels instead of\n  // blinding merging existing content from potential real Pipeline and PipelineRun resources\n  const annotations = _.merge(\n    {},\n    pipeline?.metadata?.annotations,\n    latestRun?.metadata?.annotations,\n    {\n      [StartedByAnnotation.user]: getActiveUserName(),\n    },\n    !latestRun?.spec.pipelineRef &&\n      !latestRun?.metadata.annotations?.[preferredNameAnnotation] && {\n        [preferredNameAnnotation]: pipelineName,\n      },\n  );\n  delete annotations['kubectl.kubernetes.io/last-applied-configuration'];\n  delete annotations['tekton.dev/v1beta1TaskRuns'];\n  delete annotations['results.tekton.dev/log'];\n  delete annotations['results.tekton.dev/record'];\n  delete annotations['results.tekton.dev/result'];\n  delete annotations[DELETED_RESOURCE_IN_K8S_ANNOTATION];\n  delete annotations[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const newPipelineRun = {\n    apiVersion: pipeline ? pipeline.apiVersion : latestRun.apiVersion,\n    kind: PipelineRunModel.kind,\n    metadata: {\n      ...(options?.generateName\n        ? {\n            generateName: `${pipelineName}-`,\n          }\n        : {\n            name:\n              latestRun?.metadata?.name !== undefined\n                ? `${getPipelineRunGenerateName(latestRun)}${getRandomChars()}`\n                : `${pipelineName}-${getRandomChars()}`,\n          }),\n      annotations,\n      namespace: pipeline ? pipeline.metadata.namespace : latestRun.metadata.namespace,\n      labels: _.merge(\n        {},\n        pipeline?.metadata?.labels,\n        latestRun?.metadata?.labels,\n        (latestRun?.spec.pipelineRef || pipeline) && {\n          'tekton.dev/pipeline': pipelineName,\n        },\n      ),\n    },\n    spec: {\n      ...(latestRun?.spec || {}),\n      ...((latestRun?.spec.pipelineRef || pipeline) && {\n        pipelineRef: {\n          name: pipelineName,\n        },\n      }),\n      ...(params && { params }),\n      workspaces,\n      status: null,\n    },\n  };\n  return migratePipelineRun(newPipelineRun);\n};\n\nexport const getDefaultVolumeClaimTemplate = (pipelineName: string): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        labels: { [TektonResourceLabel.pipeline]: pipelineName },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n      },\n    },\n  };\n};\n\nexport const getServerlessFunctionDefaultPersistentVolumeClaim = (\n  pipelineName: string,\n): VolumeClaimTemplateType => {\n  return {\n    volumeClaimTemplate: {\n      metadata: {\n        finalizers: ['kubernetes.io/pvc-protection'],\n        labels: {\n          [TektonResourceLabel.pipeline]: pipelineName,\n          'boson.dev/function': 'true',\n          'function.knative.dev': 'true',\n          'function.knative.dev/name': pipelineName,\n        },\n      },\n      spec: {\n        accessModes: ['ReadWriteOnce'],\n        resources: {\n          requests: {\n            storage: '1Gi',\n          },\n        },\n        storageClassName: 'gp3-csi',\n        volumeMode: 'Filesystem',\n      },\n    },\n  };\n};\n\nconst supportWorkspaceDefaults = (preselectPVC: string) => (\n  workspace: TektonWorkspace,\n): PipelineModalFormWorkspace => {\n  let workspaceSetting: PipelineModalFormWorkspaceStructure = {\n    type: VolumeTypes.EmptyDirectory,\n    data: { emptyDir: {} },\n  };\n\n  if (preselectPVC) {\n    workspaceSetting = {\n      type: VolumeTypes.PVC,\n      data: {\n        persistentVolumeClaim: {\n          claimName: preselectPVC,\n        },\n      },\n    };\n  }\n  if (workspace.optional) {\n    workspaceSetting = {\n      type: VolumeTypes.NoWorkspace,\n      data: {},\n    };\n  }\n\n  return {\n    ...workspace,\n    ...workspaceSetting,\n  };\n};\n\nexport const convertPipelineToModalData = (\n  pipeline: PipelineKind,\n  alwaysCreateResources: boolean = false,\n  preselectPVC: string = '',\n): CommonPipelineModalFormikValues => {\n  const {\n    metadata: { namespace },\n    spec: { params, resources },\n  } = pipeline;\n\n  return {\n    namespace,\n    parameters: (params || []).map((param) => ({\n      ...param,\n      value: param.default, // setup the default if it exists\n    })),\n    resources: (resources || []).map((resource: TektonResource) => ({\n      name: resource.name,\n      selection: alwaysCreateResources ? CREATE_PIPELINE_RESOURCE : '',\n      data: {\n        ...initialResourceFormValues[resource.type],\n        type: resource.type,\n      },\n    })),\n    workspaces: (pipeline.spec.workspaces || []).map(supportWorkspaceDefaults(preselectPVC)),\n  };\n};\n\nexport const convertMapToNameValueArray = (map: {\n  [key: string]: any;\n}): PipelineRunEmbeddedResourceParam[] => {\n  return Object.keys(map).map((name) => {\n    const value = map[name];\n    return { name, value };\n  });\n};\n\nexport const convertResources = (resource: PipelineModalFormResource): PipelineRunResource => {\n  if (resource.selection === CREATE_PIPELINE_RESOURCE) {\n    return {\n      name: resource.name,\n      resourceSpec: {\n        params: convertMapToNameValueArray(resource.data.params),\n        type: resource.data.type,\n      },\n    } as PipelineRunEmbeddedResource;\n  }\n\n  return {\n    name: resource.name,\n    resourceRef: {\n      name: resource.selection,\n    },\n  } as PipelineRunReferenceResource;\n};\n\nexport const getPipelineRunFromForm = (\n  pipeline: PipelineKind,\n  formValues: CommonPipelineModalFormikValues,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n  options?: { generateName: boolean },\n) => {\n  const { parameters, workspaces } = formValues;\n\n  const pipelineRunData: PipelineRunKind = {\n    metadata: {\n      annotations,\n      labels,\n    },\n    spec: {\n      pipelineRef: {\n        name: pipeline.metadata.name,\n      },\n      params: parameters.map(({ name, value }): PipelineRunParam => ({ name, value })),\n      workspaces: getPipelineRunWorkspaces(workspaces),\n    },\n  };\n  return getPipelineRunData(pipeline, pipelineRunData, options);\n};\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as React from 'react';\nimport { compare, gt, gte, parse, SemVer } from 'semver';\nimport { SetFeatureFlag, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport { k8sList } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport {\n  ClusterServiceVersionKind,\n  ClusterServiceVersionModel,\n  ClusterServiceVersionPhase,\n} from '@console/operator-lifecycle-manager';\nimport { useActiveNamespace } from '@console/shared/src';\nimport { TektonConfigModel } from '../../../models';\nimport {\n  PIPELINE_UNSIMPLIFIED_METRICS_VERSION,\n  PIPELINE_GA_VERSION,\n  TRIGGERS_GA_VERSION,\n  PipelineMetricsLevel,\n  PIPELINE_NAMESPACE,\n  FLAG_TEKTON_V1_ENABLED,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n  FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n} from '../const';\nimport { MetricsQueryPrefix } from '../pipeline-metrics/pipeline-metrics-utils';\nimport { getPipelineMetricsLevel, usePipelineConfig } from './pipeline-config';\n\nexport const getPipelineOperatorVersion = async (namespace: string): Promise<SemVer | null> => {\n  const allCSVs: ClusterServiceVersionKind[] = await k8sList(ClusterServiceVersionModel, {\n    ns: namespace,\n  });\n  const matchingCSVs = allCSVs.filter(\n    (csv) =>\n      (csv.metadata?.name?.startsWith('openshift-pipelines-operator') ||\n        csv.metadata?.name?.startsWith('redhat-openshift-pipelines')) &&\n      csv.status?.phase === ClusterServiceVersionPhase.CSVPhaseSucceeded,\n  );\n  const versions = matchingCSVs.map((csv) => parse(csv.spec.version)).filter(Boolean);\n  // Orders from small (oldest) to highest (newest) version\n  versions.sort(compare);\n  if (versions.length > 0) {\n    return versions[versions.length - 1];\n  }\n  return null;\n};\n\nexport const usePipelineOperatorVersion = (namespace: string): SemVer | null => {\n  const [version, setVersion] = React.useState<SemVer | null>(null);\n  React.useEffect(() => {\n    getPipelineOperatorVersion(namespace)\n      .then(setVersion)\n      .catch((error) =>\n        // eslint-disable-next-line no-console\n        console.warn('Error while determinate OpenShift Pipelines Operator version:', error),\n      );\n  }, [namespace]);\n  return version;\n};\n\nexport const isGAVersionInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, PIPELINE_GA_VERSION);\n};\n\nexport const isTriggersGAVersion = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gte(operator.version, TRIGGERS_GA_VERSION);\n};\n\nexport const isSimplifiedMetricsInstalled = (operator: SemVer): boolean => {\n  if (!operator) return false;\n  return gt(operator.version, PIPELINE_UNSIMPLIFIED_METRICS_VERSION);\n};\n\nexport const usePipelineMetricsLevel = (namespace: string) => {\n  const pipelineOperator: SemVer = usePipelineOperatorVersion(namespace);\n  const [config] = usePipelineConfig();\n\n  const [hasUpdatePermission] = useAccessReview({\n    group: TektonConfigModel.apiGroup,\n    resource: TektonConfigModel.plural,\n    namespace: PIPELINE_NAMESPACE,\n    verb: 'update',\n  });\n\n  const simplifiedMetrics = isSimplifiedMetricsInstalled(pipelineOperator);\n  const metricsLevel = simplifiedMetrics\n    ? getPipelineMetricsLevel(config)\n    : PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL;\n\n  const queryPrefix =\n    pipelineOperator && !isGAVersionInstalled(pipelineOperator)\n      ? MetricsQueryPrefix.TEKTON\n      : MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER;\n\n  return {\n    metricsLevel,\n    queryPrefix,\n    hasUpdatePermission,\n  };\n};\n\nexport const useIsTektonV1VersionPresent = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const isTektonV1VersionPresent = operatorVersion?.major === 1 && operatorVersion?.minor >= 11;\n  setFeatureFlag(FLAG_TEKTON_V1_ENABLED, isTektonV1VersionPresent);\n};\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_16_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 16;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_16_OR_NEWER,\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const useIsPipelineOperatorVersion_1_17_or_newer = (setFeatureFlag: SetFeatureFlag) => {\n  const [activeNamespace] = useActiveNamespace();\n  const operatorVersion = usePipelineOperatorVersion(activeNamespace);\n  const IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER =\n    operatorVersion?.major === 1 && operatorVersion?.minor >= 17;\n  setFeatureFlag(\n    FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER,\n    IS_PIPELINE_OPERATOR_VERSION_1_17_OR_NEWER,\n  );\n};\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { PipelineResourceType } from '../../const';\n\nexport const CREATE_PIPELINE_RESOURCE = '#CREATE_PIPELINE_RESOURCE#';\n\nexport const initialResourceFormValues = {\n  [PipelineResourceType.git]: {\n    params: {\n      url: '',\n      revision: '',\n    },\n  },\n  [PipelineResourceType.image]: {\n    params: {\n      url: '',\n    },\n  },\n  [PipelineResourceType.storage]: {\n    params: {\n      type: '',\n      location: '',\n      dir: '',\n    },\n  },\n  [PipelineResourceType.cluster]: {\n    params: {\n      name: '',\n      url: '',\n      username: '',\n      password: '',\n      insecure: '',\n    },\n    secrets: {\n      cadata: '',\n      token: '',\n    },\n  },\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as _ from 'lodash';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared/src/utils/utils';\nimport { PipelineResourceModel } from '../../../models';\nimport { convertMapToNameValueArray } from '../modals/common/utils';\n\nexport interface ParamData {\n  [key: string]: any;\n}\n\nexport const getDefinedObj = (objData: ParamData): ParamData => {\n  return _.omitBy(objData, (v) => _.isUndefined(v) || _.isNull(v) || v === '');\n};\n\nexport const createPipelineResource = (\n  params: ParamData,\n  type: string,\n  namespace: string,\n  secretResp?: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-${getRandomChars(6)}`;\n  const pipelineResource: K8sResourceKind = {\n    apiVersion: 'tekton.dev/v1alpha1',\n    kind: PipelineResourceModel.kind,\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    spec: {\n      type,\n      params: convertMapToNameValueArray(getDefinedObj(params)),\n      ...(secretResp && {\n        secrets: _.map(secretResp.data, (value, name) => {\n          return {\n            fieldName: name,\n            secretKey: name,\n            secretName: secretResp.metadata.name,\n          };\n        }),\n      }),\n    },\n  };\n\n  return k8sCreate(PipelineResourceModel, pipelineResource);\n};\n\nexport const createSecretResource = (\n  secret: ParamData,\n  type: string,\n  namespace: string,\n): Promise<K8sResourceKind> => {\n  const resourceName = `${type}-secret-${getRandomChars(6)}`;\n  const secretResource = {\n    apiVersion: 'v1',\n    kind: 'Secret',\n    metadata: {\n      name: resourceName,\n      namespace,\n    },\n    stringData: getDefinedObj(secret),\n  };\n  return k8sCreate(SecretModel, secretResource);\n};\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","export * from './components';\nexport { default as Topology } from './Topology';\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import { k8sCreate, K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  createPipelineResource,\n  createSecretResource,\n} from '../../pipeline-resource/pipelineResource-utils';\nimport { CREATE_PIPELINE_RESOURCE } from '../common/const';\nimport { PipelineModalFormResource } from '../common/types';\nimport { getPipelineRunFromForm } from '../common/utils';\nimport { StartPipelineFormValues } from './types';\n\nexport const resourceSubmit = async (\n  resourceValues: PipelineModalFormResource,\n  namespace: string,\n): Promise<K8sResourceCommon> => {\n  const {\n    data: { params, secrets, type },\n  } = resourceValues;\n\n  return secrets\n    ? createSecretResource(secrets, type, namespace).then((secretResp) => {\n        return createPipelineResource(params, type, namespace, secretResp);\n      })\n    : createPipelineResource(params, type, namespace);\n};\n\nconst processResources = async (\n  values: StartPipelineFormValues,\n): Promise<StartPipelineFormValues> => {\n  const { namespace, resources } = values;\n\n  const toCreateResources: { [index: string]: PipelineModalFormResource } = resources.reduce(\n    (acc, resource, index) => {\n      return resource.selection === CREATE_PIPELINE_RESOURCE ? { ...acc, [index]: resource } : acc;\n    },\n    {},\n  );\n  const createdResources = await Promise.all(\n    Object.values(toCreateResources).map((resource) => resourceSubmit(resource, namespace)),\n  );\n  if (!createdResources || createdResources.length === 0) return values;\n\n  const indexLookup = Object.keys(toCreateResources);\n  return {\n    ...values,\n    resources: resources.map(\n      (resource, index): PipelineModalFormResource => {\n        if (toCreateResources[index]) {\n          const creationIndex = indexLookup.indexOf(index.toString());\n          return {\n            ...resource,\n            selection: createdResources[creationIndex].metadata.name,\n          };\n        }\n        return resource;\n      },\n    ),\n  };\n};\n\nconst processWorkspaces = (values: StartPipelineFormValues): StartPipelineFormValues => {\n  const { workspaces } = values;\n\n  if (!workspaces || workspaces.length === 0) return values;\n\n  return {\n    ...values,\n    workspaces: workspaces.filter((workspace) => workspace.type !== VolumeTypes.NoWorkspace),\n  };\n};\n\nexport const submitStartPipeline = async (\n  values: StartPipelineFormValues,\n  pipeline: PipelineKind,\n  labels?: { [key: string]: string },\n  annotations?: { [key: string]: string },\n): Promise<PipelineRunKind> => {\n  let formValues = values;\n  formValues = await processResources(formValues);\n  formValues = processWorkspaces(formValues);\n\n  const pipelineRunResource: PipelineRunKind = await k8sCreate(\n    PipelineRunModel,\n    getPipelineRunFromForm(pipeline, formValues, labels, annotations),\n  );\n\n  return Promise.resolve(pipelineRunResource);\n};\n","import { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { WatchK8sResource, useActivePerspective } from '@console/dynamic-plugin-sdk';\nimport { PrometheusResponse } from '@console/internal/components/graphs';\nimport { getPrometheusURL, PrometheusEndpoint } from '@console/internal/components/graphs/helpers';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { useURLPoll } from '@console/internal/components/utils/url-poll-hook';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport {\n  K8sKind,\n  PersistentVolumeClaimKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { useTabbedTableBreadcrumbsFor } from '@console/shared';\nimport { PipelineRunModel } from '../../models';\nimport { PipelineRunKind } from '../../types';\nimport { getLatestRun } from '../../utils/pipeline-augment';\nimport { pipelinesTab } from '../../utils/pipeline-utils';\nimport { DEFAULT_SAMPLES, TektonResourceLabel } from './const';\nimport { metricsQueries, PipelineQuery } from './pipeline-metrics/pipeline-metrics-utils';\n\nexport const usePipelinesBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'pipelines',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useTasksBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'tasks',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useTriggersBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    'triggers',\n    pipelinesTab(kindObj),\n    undefined,\n    isAdminPerspective,\n  );\n};\n\nexport const useDevPipelinesBreadcrumbsFor = (kindObj: K8sKind) => {\n  const isAdminPerspective = useActivePerspective()[0] === 'admin';\n  const navOption = isAdminPerspective ? `pipelines` : 'dev-pipelines';\n  const params = useParams();\n  const location = useLocation();\n  return useTabbedTableBreadcrumbsFor(\n    kindObj,\n    location,\n    params,\n    navOption,\n    pipelinesTab(kindObj),\n    undefined,\n    true,\n  );\n};\n\nexport const useLatestPipelineRun = (pipelineName: string, namespace: string): PipelineRunKind => {\n  const pipelineRunResource: WatchK8sResource = {\n    kind: referenceForModel(PipelineRunModel),\n    namespace,\n    selector: {\n      matchLabels: { [TektonResourceLabel.pipeline]: pipelineName },\n    },\n    optional: true,\n    isList: true,\n  };\n  const [pipelineRun, pipelineRunLoaded, pipelineRunError] = useK8sWatchResource<PipelineRunKind[]>(\n    pipelineRunResource,\n  );\n  const latestRun = getLatestRun(pipelineRun, 'creationTimestamp');\n  return pipelineRunLoaded && !pipelineRunError ? latestRun : null;\n};\n\nexport const usePipelinePVC = (\n  pipelineName: string,\n  namespace: string,\n): [PersistentVolumeClaimKind, boolean] => {\n  const pvcResource: WatchK8sResource = {\n    kind: PersistentVolumeClaimModel.kind,\n    namespace,\n    selector: {\n      matchLabels: { [TektonResourceLabel.pipeline]: pipelineName },\n    },\n    optional: true,\n    isList: true,\n  };\n  const [PVC, PVCLoaded, PVCError] = useK8sWatchResource<PersistentVolumeClaimKind[]>(pvcResource);\n  return [!PVCError && PVC.length > 0 ? PVC[0] : null, PVCLoaded];\n};\n\nexport const usePipelineSuccessRatioPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_SUCCESS_RATIO]({ name, namespace }),\n      samples: 1,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunTaskRunPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]({\n        name,\n        namespace,\n      }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunDurationPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}): any => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.PIPELINE_RUN_DURATION]({\n        name,\n        namespace,\n      }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n\nexport const usePipelineRunPoll = ({\n  delay,\n  namespace,\n  name,\n  timespan,\n  queryPrefix,\n  metricsLevel,\n}) => {\n  const queries = metricsQueries(queryPrefix)[metricsLevel];\n\n  return useURLPoll<PrometheusResponse>(\n    getPrometheusURL({\n      endpoint: PrometheusEndpoint.QUERY_RANGE,\n      query: queries[PipelineQuery.NUMBER_OF_PIPELINE_RUNS]({ name, namespace }),\n      samples: DEFAULT_SAMPLES,\n      endTime: Date.now(),\n      timespan,\n      namespace,\n    }),\n    delay,\n    namespace,\n    timespan,\n  );\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport { TektonConfigModel } from '@console/pipelines-plugin/src/models';\nimport { TektonConfig, MetricsLevel, LevelTypes, DurationTypes } from '../../../types';\nimport { PipelineMetricsLevel, PIPELINE_CONFIG_NAME } from '../const';\n\nexport const usePipelineConfig = () =>\n  useK8sGet<TektonConfig>(TektonConfigModel, PIPELINE_CONFIG_NAME);\n\nexport const getPipelineMetricsLevel = (config: TektonConfig): string => {\n  if (!config) {\n    return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n  }\n  const { pipeline } = config.spec;\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.HISTOGRAM &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASK\n  ) {\n    return PipelineMetricsLevel.PIPELINE_TASK_LEVEL;\n  }\n  if (\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_DURATION_TYPE] === DurationTypes.LASTVALUE &&\n    pipeline[MetricsLevel.METRICS_PIPELINERUN_LEVEL] === LevelTypes.PIPELINERUN &&\n    pipeline[MetricsLevel.METRICS_TASKRUN_LEVEL] === LevelTypes.TASKRUN\n  ) {\n    return PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL;\n  }\n  return PipelineMetricsLevel.UNSUPPORTED_LEVEL;\n};\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\n\nexport const cephRBDProvisionerSuffix = 'rbd.csi.ceph.com';\n\nexport const snapshotPVCStorageClassAnnotation = 'snapshot.storage.kubernetes.io/pvc-storage-class';\nexport const snapshotPVCAccessModeAnnotation = 'snapshot.storage.kubernetes.io/pvc-access-modes';\nexport const snapshotPVCVolumeModeAnnotation = 'snapshot.storage.kubernetes.io/pvc-volume-mode';\n\ntype AccessMode = 'ReadWriteOnce' | 'ReadWriteMany' | 'ReadOnlyMany' | 'ReadWriteOncePod';\ntype VolumeMode = 'Filesystem' | 'Block';\n\nexport const initialAccessModes: AccessMode[] = [\n  'ReadWriteOnce',\n  'ReadWriteMany',\n  'ReadOnlyMany',\n  'ReadWriteOncePod',\n];\nexport const initialVolumeModes: VolumeMode[] = ['Filesystem', 'Block'];\n\ntype PartialMatch = { partialMatch?: boolean };\ntype ModeMapping = {\n  [volumeMode in VolumeMode]?: AccessMode[];\n};\ntype AccessModeMapping = ModeMapping & PartialMatch;\n\ntype ProvisionerAccessModeMapping = {\n  [provisioner: string]: AccessModeMapping;\n};\n\n// See https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes and\n// https://docs.openshift.com/container-platform/4.15/storage/understanding-persistent-storage.html for more details\nexport const provisionerAccessModeMapping: ProvisionerAccessModeMapping = Object.freeze({\n  'kubernetes.io/no-provisioner': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'kubernetes.io/aws-ebs': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/gce-pd': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/glusterfs': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/cinder': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/azure-file': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n  'kubernetes.io/azure-disk': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'kubernetes.io/quobyte': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/rbd': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/vsphere-volume': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'kubernetes.io/portworx-volume': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'kubernetes.io/scaleio': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadOnlyMany'],\n  },\n  'kubernetes.io/storageos': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  // Since 4.6 new provisioners names will be without the 'kubernetes.io/' prefix.\n  'manila.csi.openstack.org': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany'],\n  },\n  'ebs.csi.aws.com': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'block.csi.ibm.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany'],\n  },\n  'csi.ovirt.org': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'cinder.csi.openstack.org': {\n    Filesystem: ['ReadWriteOnce'],\n    Block: ['ReadWriteOnce'],\n  },\n  'pd.csi.storage.gke.io': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteOncePod'],\n  },\n  'cephfs.csi.ceph.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    partialMatch: true,\n  },\n  'rbd.csi.ceph.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    partialMatch: true,\n  },\n  'file.csi.azure.com': {\n    Filesystem: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n    Block: ['ReadWriteOnce', 'ReadWriteMany', 'ReadOnlyMany', 'ReadWriteOncePod'],\n  },\n});\n\nexport const getAccessModeOptions = () => [\n  {\n    value: 'ReadWriteOnce',\n    title: i18next.t('public~Single user (RWO)'),\n  },\n  {\n    value: 'ReadWriteMany',\n    title: i18next.t('public~Shared access (RWX)'),\n  },\n  {\n    value: 'ReadOnlyMany',\n    title: i18next.t('public~Read only (ROX)'),\n  },\n  {\n    value: 'ReadWriteOncePod',\n    title: i18next.t('public~Read write once pod (RWOP)'),\n  },\n];\n\nexport const getVolumeModeRadios = () => [\n  {\n    value: 'Filesystem',\n    title: i18next.t('public~Filesystem'),\n  },\n  {\n    value: 'Block',\n    title: i18next.t('public~Block'),\n  },\n];\n\nexport const dropdownUnits = {\n  i: 'B',\n  Ki: 'KiB',\n  Mi: 'MiB',\n  Gi: 'GiB',\n  Ti: 'TiB',\n  Pi: 'PiB',\n  Ei: 'EiB',\n};\n\nexport const getProvisionerModeMapping = (provisioner: string): ModeMapping =>\n  _.omit(\n    _.find(provisionerAccessModeMapping, (value: AccessModeMapping, key: string) => {\n      if (value?.partialMatch && provisioner?.includes(key)) {\n        return true;\n      }\n      if (key === provisioner) {\n        return true;\n      }\n      return false;\n    }) || {},\n    'partialMatch',\n  );\n\nexport const getAccessModeForProvisioner = (\n  provisioner: string,\n  ignoreReadOnly?: boolean,\n  volumeMode?: string,\n): AccessMode[] => {\n  let accessModes: AccessMode[];\n  const modeMapping: ModeMapping = getProvisionerModeMapping(provisioner);\n\n  if (!_.isEmpty(modeMapping)) {\n    accessModes = volumeMode\n      ? modeMapping[volumeMode]\n      : Object.keys(modeMapping)\n          .map((mode) => modeMapping[mode])\n          .flat();\n  } else {\n    accessModes = initialAccessModes;\n  }\n\n  // remove duplicate in accessModes\n  accessModes = [...new Set(accessModes)];\n\n  // Ignore ReadOnly related access for create-pvc\n  return ignoreReadOnly ? accessModes.filter((modes) => modes !== 'ReadOnlyMany') : accessModes;\n};\n\nexport const getVolumeModeForProvisioner = (\n  provisioner: string,\n  accessMode: string,\n): VolumeMode[] => {\n  const modeMapping: ModeMapping = getProvisionerModeMapping(provisioner);\n\n  if (!_.isEmpty(modeMapping)) {\n    return accessMode\n      ? (Object.keys(modeMapping).filter((volumeMode) =>\n          modeMapping[volumeMode].includes(accessMode),\n        ) as VolumeMode[])\n      : (Object.keys(modeMapping) as VolumeMode[]);\n  }\n  return initialVolumeModes;\n};\n","import { errorModal } from '@console/internal/components/modals';\nimport { RouteModel, ServiceModel } from '@console/internal/models';\nimport { k8sCreate, k8sGet, K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport {\n  ClusterTriggerBindingModel,\n  EventListenerModel,\n  TriggerTemplateModel,\n} from '../../../../models';\nimport { PipelineKind, PipelineRunKind, TektonWorkspace } from '../../../../types';\nimport { VolumeTypes } from '../../const';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { getPipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport {\n  convertPipelineToModalData,\n  getDefaultVolumeClaimTemplate,\n  getPipelineRunFromForm,\n} from '../common/utils';\nimport {\n  createEventListener,\n  createEventListenerRoute,\n  createTriggerTemplate,\n} from './resource-utils';\nimport { AddTriggerFormValues } from './types';\n\nexport const exposeRoute = async (elName: string, ns: string, iteration = 0) => {\n  const elResource: EventListenerKind = await k8sGet(EventListenerModel, elName, ns);\n  const serviceGeneratedName = elResource?.status?.configuration.generatedName;\n\n  try {\n    if (!serviceGeneratedName) {\n      if (iteration < 3) {\n        setTimeout(() => exposeRoute(elName, ns, iteration + 1), 500);\n      } else {\n        // Unable to deterministically create the route; create a default one\n        await k8sCreate(RouteModel, createEventListenerRoute(elResource), { ns });\n      }\n      return;\n    }\n\n    // Get the service, find out what port we are exposed on\n    const serviceResource = await k8sGet(ServiceModel, serviceGeneratedName, ns);\n    const servicePort = serviceResource.spec?.ports?.[0]?.name;\n\n    // Build the exposed route on the correct port\n    const route: RouteKind = createEventListenerRoute(\n      elResource,\n      serviceGeneratedName,\n      servicePort,\n    );\n    await k8sCreate(RouteModel, route, { ns });\n  } catch (e) {\n    errorModal({\n      title: 'Error Exposing Route',\n      error: e.message || 'Unknown error exposing the Webhook route',\n    });\n  }\n};\n\nexport const submitTrigger = async (\n  pipeline: PipelineKind,\n  formValues: AddTriggerFormValues,\n): Promise<K8sResourceKind[]> => {\n  const { triggerBinding } = formValues;\n  const thisNamespace = pipeline.metadata.namespace;\n\n  const pipelineRun: PipelineRunKind = getPipelineRunFromForm(pipeline, formValues, null, null, {\n    generateName: true,\n  });\n  const triggerTemplateParams: TriggerTemplateKindParam[] = triggerBinding.resource.spec.params.map(\n    ({ name }) => ({ name } as TriggerTemplateKindParam),\n  );\n  const triggerTemplate: TriggerTemplateKind = createTriggerTemplate(\n    pipeline,\n    pipelineRun,\n    triggerTemplateParams,\n  );\n  const pipelineOperatorVersion = await getPipelineOperatorVersion(thisNamespace);\n  const eventListener: EventListenerKind = createEventListener(\n    [triggerBinding.resource],\n    triggerTemplate,\n    pipelineOperatorVersion,\n  );\n  const metadata = { ns: thisNamespace };\n  let resources: K8sResourceKind[];\n  try {\n    // Validates the modal contents, should be done first\n    const ttResource = await k8sCreate(TriggerTemplateModel, triggerTemplate, metadata);\n\n    // Creates the linkages and will provide the link to non-trigger resources created\n    const elResource = await k8sCreate(EventListenerModel, eventListener, metadata);\n\n    // Capture all related resources\n    resources = [ttResource, elResource];\n  } catch (err) {\n    return Promise.reject(err);\n  }\n\n  exposeRoute(eventListener.metadata.name, thisNamespace);\n\n  return Promise.resolve(resources);\n};\n\nexport const createTrigger = async (\n  pipeline: PipelineKind,\n  gitDetectedType: string,\n): Promise<K8sResourceKind[]> => {\n  const createdResources = [];\n  const defaultTriggerBinding = gitDetectedType ? `${gitDetectedType}-push` : 'github-push';\n  const clusterTriggerBinding = await k8sGet(ClusterTriggerBindingModel, defaultTriggerBinding);\n  if (clusterTriggerBinding) {\n    const triggerValues: AddTriggerFormValues = {\n      ...convertPipelineToModalData(pipeline),\n      workspaces: (pipeline.spec.workspaces || []).map((workspace: TektonWorkspace) => ({\n        ...workspace,\n        type: VolumeTypes.VolumeClaimTemplate,\n        data: getDefaultVolumeClaimTemplate(pipeline?.metadata?.name),\n      })),\n      triggerBinding: {\n        name: defaultTriggerBinding,\n        resource: clusterTriggerBinding,\n      },\n    };\n    const resources = await submitTrigger(pipeline, triggerValues);\n    createdResources.push(...resources);\n  }\n  return Promise.resolve(createdResources);\n};\n","import { SemVer } from 'semver';\nimport { RouteModel } from '@console/internal/models';\nimport { apiVersionForModel, RouteKind } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport {\n  EventListenerKind,\n  EventListenerKindBindingReference,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  TriggerTemplateKindParam,\n} from '../../resource-types';\nimport { isGAVersionInstalled } from '../../utils/pipeline-operator';\n\nexport const createTriggerTemplate = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  params: TriggerTemplateKindParam[],\n): TriggerTemplateKind => {\n  return {\n    apiVersion: apiVersionForModel(TriggerTemplateModel),\n    kind: TriggerTemplateModel.kind,\n    metadata: {\n      name: `trigger-template-${pipeline.metadata.name}-${getRandomChars()}`,\n    },\n    spec: {\n      params,\n      resourcetemplates: [pipelineRun],\n    },\n  };\n};\n\nexport const createEventListener = (\n  triggerBindings: TriggerBindingKind[],\n  triggerTemplate: TriggerTemplateKind,\n  pipelineOperatorVersion: SemVer,\n): EventListenerKind => {\n  const mapTriggerBindings: (\n    triggerBinding: TriggerBindingKind,\n  ) => EventListenerKindBindingReference = (triggerBinding: TriggerBindingKind) => {\n    // The Tekton CRD `EventListeners` before Tekton Triggers 0.5 requires a name\n    // instead of a ref here to link `TriggerBinding` or `ClusterTriggerBinding`.\n    if (\n      pipelineOperatorVersion?.major === 0 ||\n      (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n    ) {\n      return {\n        kind: triggerBinding.kind,\n        name: triggerBinding.metadata.name,\n      } as EventListenerKindBindingReference;\n    }\n    return {\n      kind: triggerBinding.kind,\n      ref: triggerBinding.metadata.name,\n    };\n  };\n  const getTriggerTemplate = (name: string) => {\n    if (!isGAVersionInstalled(pipelineOperatorVersion)) {\n      return {\n        name,\n      };\n    }\n    return { ref: name };\n  };\n\n  return {\n    apiVersion: apiVersionForModel(EventListenerModel),\n    kind: EventListenerModel.kind,\n    metadata: {\n      name: `event-listener-${getRandomChars()}`,\n    },\n    spec: {\n      serviceAccountName: PIPELINE_SERVICE_ACCOUNT,\n      triggers: [\n        {\n          bindings: triggerBindings.map(mapTriggerBindings),\n          template: getTriggerTemplate(triggerTemplate.metadata.name),\n        },\n      ],\n    },\n  };\n};\n\nexport const createEventListenerRoute = (\n  eventListener: EventListenerKind,\n  generatedName?: string,\n  targetPort: number = 8080,\n): RouteKind => {\n  const eventListenerName = eventListener.metadata.name;\n  // Not ideal, but if all else fails, we can do our best guess\n  const referenceName = generatedName || `el-${eventListenerName}`;\n\n  return {\n    apiVersion: apiVersionForModel(RouteModel),\n    kind: RouteModel.kind,\n    metadata: {\n      name: referenceName,\n      labels: {\n        'app.kubernetes.io/managed-by': EventListenerModel.kind,\n        'app.kubernetes.io/part-of': 'Triggers',\n        eventlistener: eventListenerName,\n      },\n    },\n    spec: {\n      port: {\n        targetPort,\n      },\n      to: {\n        kind: 'Service',\n        name: referenceName,\n        weight: 100,\n      },\n    },\n  };\n};\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import { PIPELINE_RUN_AUTO_START_FAILED } from '../const';\n\nexport const getAllNotStartedPipelines = (): { [ns: string]: string[] } => {\n  try {\n    return JSON.parse(sessionStorage.getItem(PIPELINE_RUN_AUTO_START_FAILED) ?? '{}');\n  } catch (e) {\n    return {};\n  }\n};\n\nexport const getNotStartedPipelines = (namespace: string): string[] => {\n  return getAllNotStartedPipelines()[namespace] ?? [];\n};\nexport const isPipelineNotStarted = (pipelineName: string, namespace: string): boolean => {\n  return getNotStartedPipelines(namespace).includes(pipelineName);\n};\n\nexport const removePipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n\n  const newList = getNotStartedPipelines(namespace).filter((pName) => pName !== pipelineName);\n\n  sessionStorage.setItem(\n    PIPELINE_RUN_AUTO_START_FAILED,\n    JSON.stringify({ ...getAllNotStartedPipelines(), [namespace]: newList }),\n  );\n};\n\nexport const setPipelineNotStarted = (pipelineName: string, namespace: string): void => {\n  if (!pipelineName || !namespace) return;\n  const pipelineData = getAllNotStartedPipelines();\n\n  if (!pipelineData[namespace]) {\n    pipelineData[namespace] = [];\n  }\n  if (!pipelineData[namespace].includes(pipelineName)) {\n    pipelineData[namespace].push(pipelineName);\n    sessionStorage.setItem(PIPELINE_RUN_AUTO_START_FAILED, JSON.stringify(pipelineData));\n  }\n};\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n","import i18n from 'i18next';\n// eslint-disable-next-line import/no-cycle\nimport { PipelineBuilderFormValues } from './types';\n\nexport const STATUS_KEY_NAME_ERROR = 'taskError';\n\nexport enum UpdateOperationType {\n  ADD_LIST_TASK,\n  ADD_FINALLY_LIST_TASK,\n  ADD_LOADING_TASK,\n  ADD_FINALLY_LOADING_TASK,\n  CONVERT_LOADING_TASK_TO_TASK,\n  CONVERT_LOADING_TASK_TO_FINALLY_TASK,\n  CONVERT_LIST_TO_TASK,\n  CONVERT_LIST_TO_FINALLY_TASK,\n  RENAME_TASK,\n  REMOVE_TASK,\n  DELETE_LIST_TASK,\n  DELETE_FINALLY_LIST_TASK,\n  FIX_INVALID_LIST_TASK,\n  FIX_INVALID_FINALLY_LIST_TASK,\n}\n\nexport enum TaskErrorType {\n  NAME_ERROR = 'nameError',\n  MISSING_REQUIRED_PARAMS = 'missingParams',\n  MISSING_RESOURCES = 'missingResources',\n  MISSING_WORKSPACES = 'missingWorkspaces',\n  MISSING_REQUIRED_WHEN_EXPRESSIONS = 'missingWhenExpressions',\n}\n\nexport const TASK_FIELD_ERROR_TYPE_MAPPING: { [key in TaskErrorType]: string[] } = {\n  [TaskErrorType.NAME_ERROR]: ['name'],\n  [TaskErrorType.MISSING_REQUIRED_PARAMS]: ['params'],\n  [TaskErrorType.MISSING_RESOURCES]: ['resources'],\n  [TaskErrorType.MISSING_WORKSPACES]: ['workspaces'],\n  [TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS]: ['when'],\n};\n\nexport const getTaskErrorString = (errorType: TaskErrorType): string => {\n  switch (errorType) {\n    case TaskErrorType.NAME_ERROR:\n      return i18n.t('pipelines-plugin~Invalid name');\n    case TaskErrorType.MISSING_REQUIRED_PARAMS:\n      return i18n.t('pipelines-plugin~Missing parameters');\n    case TaskErrorType.MISSING_RESOURCES:\n      return i18n.t('pipelines-plugin~Missing resources');\n    case TaskErrorType.MISSING_WORKSPACES:\n      return i18n.t('pipelines-plugin~Missing workspaces');\n    case TaskErrorType.MISSING_REQUIRED_WHEN_EXPRESSIONS:\n      return i18n.t('pipelines-plugin~Invalid when expressions');\n    default:\n      throw new Error(`Unknown errorType, ${errorType}`);\n  }\n};\n\nexport enum WhenExpressionOperatorType {\n  in = 'in',\n  notin = 'notin',\n}\n\nexport const initialPipelineFormData: PipelineBuilderFormValues = {\n  name: 'new-pipeline',\n  params: [],\n  resources: [],\n  workspaces: [],\n  tasks: [],\n  listTasks: [],\n  finallyTasks: [],\n  finallyListTasks: [],\n  loadingTasks: [],\n};\n","import * as React from 'react';\nimport { flatten, mapValues } from 'lodash';\nimport {\n  WatchK8sResource,\n  WatchK8sResources,\n  WatchK8sResults,\n  WatchK8sResultsObject,\n} from '@console/dynamic-plugin-sdk';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\nimport {\n  useK8sWatchResource,\n  useK8sWatchResources,\n} from '@console/internal/components/utils/k8s-watch-hook';\nimport { RouteModel } from '@console/internal/models';\nimport { K8sResourceCommon, referenceForModel, RouteKind } from '@console/internal/module/k8s';\nimport { EventListenerModel, PipelineRunModel, TriggerTemplateModel } from '../../../models';\nimport { PipelineRunKind } from '../../../types';\nimport {\n  getResourceModelFromBindingKind,\n  getSafeBindingResourceKind,\n} from '../../../utils/pipeline-augment';\nimport { ResourceModelLink } from '../resource-overview/DynamicResourceLinkList';\nimport {\n  EventListenerKind,\n  EventListenerKindTrigger,\n  TriggerBindingKind,\n  TriggerTemplateKind,\n  EventListenerKindBindingReference,\n} from '../resource-types';\n\ntype RouteMap = { [generatedName: string]: RouteKind };\ntype TriggerTemplateMapping = { [key: string]: TriggerTemplateKind };\n\nconst getResourceName = (resource: K8sResourceCommon): string => resource.metadata.name;\nconst getEventListenerTemplateNames = (el: EventListenerKind): string[] =>\n  el.spec.triggers?.map(\n    (elTrigger: EventListenerKindTrigger) => elTrigger.template?.ref || elTrigger.template?.name,\n  ) || [];\nconst getEventListenerGeneratedName = (eventListener: EventListenerKind) =>\n  eventListener.status?.configuration.generatedName;\n\nconst useEventListenerRoutes = (\n  namespace: string,\n  eventListenerResources: EventListenerKind[],\n): RouteMap => {\n  const memoResources: WatchK8sResources<RouteMap> = React.useMemo(() => {\n    return (eventListenerResources || []).map(getEventListenerGeneratedName).reduce(\n      (acc, generatedName) => ({\n        ...acc,\n        [generatedName]: {\n          kind: RouteModel.kind,\n          name: generatedName,\n          namespace,\n          optional: true,\n        } as WatchK8sResource,\n      }),\n      {},\n    );\n  }, [namespace, eventListenerResources]);\n\n  const results: WatchK8sResults<RouteMap> = useK8sWatchResources<RouteMap>(memoResources);\n\n  return mapValues(results, (result: WatchK8sResultsObject<RouteKind>) => result.data);\n};\n\nconst useAllEventListeners = (namespace: string) => {\n  const eventListenerResource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: referenceForModel(EventListenerModel),\n      isList: true,\n      namespace,\n    }),\n    [namespace],\n  );\n  const [resources, eventListenerLoaded, error] = useK8sWatchResource<EventListenerKind[]>(\n    eventListenerResource,\n  );\n\n  return eventListenerLoaded && !error ? resources : null;\n};\n\nexport type RouteTemplate = {\n  routeURL: string | null;\n  triggerTemplateName: string;\n};\n\nexport const usePipelineTriggerTemplateNames = (\n  pipelineName: string,\n  namespace: string,\n): RouteTemplate[] | null => {\n  const eventListenerResources = useAllEventListeners(namespace);\n\n  const triggerTemplateResources: WatchK8sResources<TriggerTemplateMapping> = React.useMemo(() => {\n    if (!eventListenerResources) {\n      return {};\n    }\n    return flatten(eventListenerResources.map(getEventListenerTemplateNames))\n      .filter((t) => !!t)\n      .reduce(\n        (resourceMap, triggerTemplateName: string) => ({\n          ...resourceMap,\n          [triggerTemplateName]: {\n            kind: referenceForModel(TriggerTemplateModel),\n            name: triggerTemplateName,\n            namespace,\n            optional: true,\n          },\n        }),\n        {},\n      );\n  }, [eventListenerResources, namespace]);\n  const triggerTemplates: WatchK8sResults<TriggerTemplateMapping> = useK8sWatchResources(\n    triggerTemplateResources,\n  );\n  const routes: RouteMap = useEventListenerRoutes(namespace, eventListenerResources);\n\n  const triggerTemplateResults: WatchK8sResultsObject<TriggerTemplateKind>[] = Object.values(\n    triggerTemplates,\n  );\n  const countExpected = Object.keys(triggerTemplateResources).length;\n  const countLoaded = triggerTemplateResults.filter(({ loaded }) => loaded).length;\n  const countErrored = triggerTemplateResults.filter(({ loadError }) => !!loadError).length;\n  if (countLoaded === 0 || countLoaded !== countExpected - countErrored) {\n    return null;\n  }\n  const matchingTriggerTemplateNames: string[] = triggerTemplateResults\n    .filter((resourceWatch) => resourceWatch.loaded)\n    .map((resourceWatch) => resourceWatch.data)\n    .filter((triggerTemplate: TriggerTemplateKind) => {\n      const plr: PipelineRunKind = triggerTemplate?.spec?.resourcetemplates?.find(\n        ({ kind }) => kind === PipelineRunModel.kind,\n      );\n      return plr?.spec?.pipelineRef?.name === pipelineName;\n    })\n    .map(getResourceName);\n\n  return (eventListenerResources || []).reduce((acc, ev: EventListenerKind) => {\n    const eventListenerTemplateNames = getEventListenerTemplateNames(ev);\n    const generatedRouteName = getEventListenerGeneratedName(ev);\n\n    const triggerTemplateName = matchingTriggerTemplateNames.find((name) => {\n      return eventListenerTemplateNames.includes(name);\n    });\n    const route: RouteKind = routes[generatedRouteName];\n\n    if (!triggerTemplateName) {\n      return acc;\n    }\n\n    let routeURL = null;\n    try {\n      if (route) {\n        routeURL = getRouteWebURL(route);\n      }\n    } catch (e) {\n      // swallow errors, we don't care if we can't create a good route right now\n    }\n\n    return [...acc, { routeURL, triggerTemplateName }];\n  }, []);\n};\n\nexport const useEventListenerURL = (\n  eventListener: EventListenerKind,\n  namespace: string,\n): string | null => {\n  const [route, routeLoaded] = useK8sGet<RouteKind>(\n    RouteModel,\n    getEventListenerGeneratedName(eventListener),\n    namespace,\n  );\n\n  return routeLoaded && route?.status?.ingress ? getRouteWebURL(route) : null;\n};\n\nexport const getEventListenerTriggerBindingNames = (\n  bindings: EventListenerKindBindingReference[],\n): ResourceModelLink[] =>\n  bindings?.map((binding) => ({\n    resourceKind: getSafeBindingResourceKind(binding.kind),\n    // Ref is used since Tekton Triggers 0.5 (OpenShift Pipeline Operator 1.1)\n    // We keep the fallback to name here to support also OpenShift Pipeline Operator 1.0.\n    name: binding.ref || binding.name,\n  }));\n\nexport const getTriggerTemplatePipelineName = (triggerTemplate: TriggerTemplateKind): string => {\n  return (\n    triggerTemplate.spec.resourcetemplates.find(({ kind }) => kind === PipelineRunModel.kind)?.spec\n      .pipelineRef.name || ''\n  );\n};\n\nexport const useTriggerTemplateEventListenerNames = (triggerTemplate: TriggerTemplateKind) => {\n  const eventListenerResources = useAllEventListeners(triggerTemplate.metadata.namespace) || [];\n\n  return eventListenerResources\n    .filter((eventListener: EventListenerKind) =>\n      eventListener.spec.triggers?.find((trigger) =>\n        [trigger.template?.ref, trigger.template?.name].includes(getResourceName(triggerTemplate)),\n      ),\n    )\n    .map(getResourceName);\n};\n\nexport const useTriggerBindingEventListenerNames = (triggerBinding: TriggerBindingKind) => {\n  const eventListenerResources = useAllEventListeners(triggerBinding.metadata.namespace) || [];\n  return eventListenerResources\n    .filter((eventListener: EventListenerKind) =>\n      eventListener.spec.triggers?.find(({ bindings }) =>\n        bindings?.find(\n          ({ kind, name }) =>\n            getResourceName(triggerBinding) === name &&\n            getResourceModelFromBindingKind(kind).kind === triggerBinding.kind,\n        ),\n      ),\n    )\n    .map(getResourceName);\n};\n","export * from './hooks';\nexport { default as ResourceKebabWithUserLabel } from './ResourceKebabWithUserLabel';\n","import * as React from 'react';\nimport i18n from 'i18next';\nimport * as _ from 'lodash';\nimport { SemVer } from 'semver';\nimport { deleteModal, errorModal } from '@console/internal/components/modals';\nimport {\n  history,\n  resourcePathFromModel,\n  Kebab,\n  KebabAction,\n  asAccessReview,\n} from '@console/internal/components/utils';\nimport { k8sCreate, K8sKind, k8sPatch, referenceForModel } from '@console/internal/module/k8s';\nimport { StartedByAnnotation } from '../components/pipelines/const';\nimport {\n  addTriggerModal,\n  startPipelineModal,\n  removeTriggerModal,\n} from '../components/pipelines/modals';\nimport { getPipelineRunData } from '../components/pipelines/modals/common/utils';\nimport { getTaskRunsOfPipelineRun } from '../components/taskruns/useTaskRuns';\nimport { RESOURCE_LOADED_FROM_RESULTS_ANNOTATION } from '../const';\nimport { EventListenerModel, PipelineModel, PipelineRunModel, TaskRunModel } from '../models';\nimport { PipelineKind, PipelineRunKind, TaskRunKind } from '../types';\nimport {\n  shouldHidePipelineRunStop,\n  shouldHidePipelineRunCancel,\n  TaskStatus,\n  shouldHidePipelineRunStopForTaskRunStatus,\n  shouldHidePipelineRunCancelForTaskRunStatus,\n} from './pipeline-augment';\nimport { getSbomTaskRun, returnValidPipelineRunModel } from './pipeline-utils';\n\nexport const handlePipelineRunSubmit = (pipelineRun: PipelineRunKind) => {\n  history.push(\n    resourcePathFromModel(\n      PipelineRunModel,\n      pipelineRun.metadata.name,\n      pipelineRun.metadata.namespace,\n    ),\n  );\n};\n\nexport const triggerPipeline = (\n  pipeline: PipelineKind,\n  onSubmit?: (pipelineRun: PipelineRunKind) => void,\n) => {\n  k8sCreate(PipelineRunModel, getPipelineRunData(pipeline))\n    .then(onSubmit)\n    .catch((err) => errorModal({ error: err.message }));\n};\n\nexport const reRunPipelineRun: KebabAction = (kind: K8sKind, pipelineRun: PipelineRunKind) => ({\n  // t('pipelines-plugin~Rerun')\n  labelKey: 'pipelines-plugin~Rerun',\n  callback: () => {\n    const namespace = _.get(pipelineRun, 'metadata.namespace');\n    const { pipelineRef, pipelineSpec } = pipelineRun.spec;\n    if (namespace && (pipelineRef?.name || pipelineSpec)) {\n      k8sCreate(returnValidPipelineRunModel(pipelineRun), getPipelineRunData(null, pipelineRun));\n    } else {\n      errorModal({\n        error: i18n.t(\n          'pipelines-plugin~Invalid PipelineRun configuration, unable to start Pipeline.',\n        ),\n      });\n    }\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipelineRun.metadata.name,\n    namespace: pipelineRun.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nexport const editPipeline: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Edit Pipeline')\n  labelKey: 'pipelines-plugin~Edit Pipeline',\n  callback: () => {\n    const {\n      metadata: { name, namespace },\n    } = pipeline;\n    history.push(`/k8s/ns/${namespace}/${referenceForModel(PipelineModel)}/${name}/builder`);\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'update',\n  },\n});\n\nexport const startPipeline: KebabAction = (\n  kind: K8sKind,\n  pipeline: PipelineKind,\n  onSubmit?: (pipelineRun: PipelineRunKind) => void,\n) => ({\n  // t('pipelines-plugin~Start')\n  labelKey: 'pipelines-plugin~Start',\n  callback: () => {\n    const params = _.get(pipeline, ['spec', 'params'], []);\n    const resources = _.get(pipeline, ['spec', 'resources'], []);\n    const workspaces = _.get(pipeline, ['spec', 'workspaces'], []);\n\n    if (!_.isEmpty(params) || !_.isEmpty(resources) || !_.isEmpty(workspaces)) {\n      startPipelineModal({\n        pipeline,\n        modalClassName: 'modal-lg',\n        onSubmit,\n      });\n    } else {\n      triggerPipeline(pipeline, onSubmit);\n    }\n  },\n  accessReview: {\n    group: PipelineRunModel.apiGroup,\n    resource: PipelineRunModel.plural,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\ntype RerunPipelineData = {\n  onComplete?: (pipelineRun: PipelineRunKind) => void;\n  labelKey?: string;\n};\nconst rerunPipeline: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  resources: any,\n  customData: RerunPipelineData = {},\n) => {\n  // t('pipelines-plugin~Start last run')\n  const { labelKey = 'pipelines-plugin~Start last run', onComplete } = customData;\n\n  const sharedProps = { labelKey, accessReview: {} };\n\n  if (\n    !pipelineRun ||\n    !_.has(pipelineRun, 'metadata.name') ||\n    !_.has(pipelineRun, 'metadata.namespace')\n  ) {\n    return sharedProps;\n  }\n\n  return {\n    ...sharedProps,\n    callback: () => {\n      k8sCreate(kind, getPipelineRunData(null, pipelineRun))\n        .then(typeof onComplete === 'function' ? onComplete : () => {})\n        .catch((err) => errorModal({ error: err.message }));\n    },\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'create',\n    },\n  };\n};\n\nexport const rerunPipelineAndStay: KebabAction = (kind: K8sKind, pipelineRun: PipelineRunKind) => {\n  return rerunPipeline(kind, pipelineRun);\n};\n\nexport const rerunPipelineAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    // t('pipelines-plugin~Start last run')\n    labelKey: 'pipelines-plugin~Start last run',\n  });\n};\n\nexport const deleteResourceObj: KebabAction = (\n  kind: K8sKind,\n  resourceObj: PipelineRunKind | TaskRunKind,\n) => {\n  const tektonResultsFlag =\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/log'] ||\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/record'] ||\n    resourceObj?.metadata?.annotations?.['results.tekton.dev/result'];\n  const isResourceLoadedFromTR =\n    resourceObj?.metadata?.annotations?.[RESOURCE_LOADED_FROM_RESULTS_ANNOTATION];\n\n  const message = (\n    <p>\n      {i18n.t(\n        'pipelines-plugin~This action will delete resource from k8s but still the resource can be fetched from Tekton Results',\n      )}\n    </p>\n  );\n  return {\n    // t('pipelines-plugin~Delete {{kind}}', {kind: kind.label})\n    labelKey: 'pipelines-plugin~Delete {{kind}}',\n    labelKind: { kind: kind.labelKey ? i18n.t(kind.labelKey) : kind.label },\n    callback: () =>\n      deleteModal({\n        kind,\n        resource: resourceObj,\n        message: !isResourceLoadedFromTR && tektonResultsFlag ? message : '',\n      }),\n    accessReview: asAccessReview(kind, resourceObj, 'delete'),\n    isDisabled: !!isResourceLoadedFromTR,\n    tooltip: isResourceLoadedFromTR\n      ? i18n.t('pipelines-plugin~Resource is being fetched from Tekton Results.')\n      : '',\n  };\n};\n\nexport const rerunPipelineRunAndRedirect: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n) => {\n  return rerunPipeline(kind, pipelineRun, null, {\n    onComplete: handlePipelineRunSubmit,\n    // t('pipelines-plugin~Rerun')\n    labelKey: 'pipelines-plugin~Rerun',\n  });\n};\n\nexport const stopPipelineRun: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  operatorVersion: SemVer,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Stop')\n    labelKey: 'pipelines-plugin~Stop',\n    // t('pipelines-plugin~Let the running tasks complete, then execute finally tasks'),\n    tooltipKey: 'pipelines-plugin~Let the running tasks complete, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value:\n              operatorVersion.major === 1 && operatorVersion.minor < 9\n                ? 'PipelineRunCancelled'\n                : 'StoppedRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunStop(pipelineRun, PLRTasks),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const stopPipelineRunForTaskRunStatus: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  operatorVersion: SemVer,\n  taskRunStatusObj?: TaskStatus,\n) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Stop')\n    labelKey: 'pipelines-plugin~Stop',\n    // t('pipelines-plugin~Let the running tasks complete, then execute finally tasks'),\n    tooltipKey: 'pipelines-plugin~Let the running tasks complete, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value:\n              operatorVersion.major === 1 && operatorVersion.minor < 9\n                ? 'PipelineRunCancelled'\n                : 'StoppedRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunStopForTaskRunStatus(pipelineRun, taskRunStatusObj),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const cancelPipelineRunFinally: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Cancel')\n    labelKey: 'pipelines-plugin~Cancel',\n    // t('pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks'),\n    tooltipKey:\n      'pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'CancelledRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunCancel(pipelineRun, PLRTasks),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const cancelPipelineRunFinallyForTaskRunStatus: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj?: TaskStatus,\n) => {\n  // The returned function will be called using the 'kind' and 'obj' in Kebab Actions\n  return {\n    // t('pipelines-plugin~Cancel')\n    labelKey: 'pipelines-plugin~Cancel',\n    // t('pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks'),\n    tooltipKey:\n      'pipelines-plugin~Interrupt any executing non finally tasks, then execute finally tasks',\n    callback: () => {\n      k8sPatch(\n        PipelineRunModel,\n        {\n          metadata: { name: pipelineRun.metadata.name, namespace: pipelineRun.metadata.namespace },\n        },\n        [\n          {\n            op: 'replace',\n            path: `/spec/status`,\n            value: 'CancelledRunFinally',\n          },\n        ],\n      );\n    },\n    hidden: shouldHidePipelineRunCancelForTaskRunStatus(pipelineRun, taskRunStatusObj),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: pipelineRun.metadata.name,\n      namespace: pipelineRun.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\nexport const viewPipelineRunSBOM: KebabAction = (\n  kind: K8sKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => {\n  const PLRTasks = getTaskRunsOfPipelineRun(taskRuns, pipelineRun?.metadata?.name);\n  const sbomTaskRun = getSbomTaskRun(PLRTasks);\n\n  return {\n    labelKey: 'pipelines-plugin~View SBOM',\n    callback: () => {\n      history.push(\n        `/k8s/ns/${sbomTaskRun.metadata.namespace}/${referenceForModel(TaskRunModel)}/${\n          sbomTaskRun.metadata.name\n        }/logs`,\n      );\n    },\n    hidden: !sbomTaskRun,\n  };\n};\n\nconst addTrigger: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Add Trigger')\n  labelKey: 'pipelines-plugin~Add Trigger',\n  callback: () => {\n    const cleanPipeline: PipelineKind = {\n      ...pipeline,\n      metadata: {\n        ...pipeline.metadata,\n        annotations: _.omit(pipeline.metadata.annotations, [StartedByAnnotation.user]),\n      },\n    };\n    addTriggerModal({ pipeline: cleanPipeline, modalClassName: 'modal-lg' });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst removeTrigger: KebabAction = (kind: K8sKind, pipeline: PipelineKind) => ({\n  // t('pipelines-plugin~Remove Trigger')\n  labelKey: 'pipelines-plugin~Remove Trigger',\n  callback: () => {\n    removeTriggerModal({ pipeline });\n  },\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: pipeline.metadata.name,\n    namespace: pipeline.metadata.namespace,\n    verb: 'delete',\n  },\n});\nexport const getPipelineKebabActions = (\n  pipelineRun?: PipelineRunKind,\n  isTriggerPresent?: boolean,\n): KebabAction[] => [\n  (model, resource: PipelineKind) => startPipeline(model, resource, handlePipelineRunSubmit),\n  ...(pipelineRun ? [() => rerunPipelineAndRedirect(PipelineRunModel, pipelineRun)] : []),\n  (model, pipeline) => addTrigger(EventListenerModel, pipeline),\n  ...(isTriggerPresent ? [(model, pipeline) => removeTrigger(EventListenerModel, pipeline)] : []),\n  Kebab.factory.ModifyLabels,\n  Kebab.factory.ModifyAnnotations,\n  (model, pipeline) => editPipeline(model, pipeline),\n  Kebab.factory.Delete,\n];\n\nexport const getPipelineRunKebabActions = (\n  operatorVersion: SemVer,\n  taskRuns?: TaskRunKind[],\n  redirectReRun?: boolean,\n  taskRunStatusObj?: TaskStatus,\n): KebabAction[] => [\n  redirectReRun\n    ? (model, pipelineRun) => rerunPipelineRunAndRedirect(model, pipelineRun)\n    : (model, pipelineRun) => reRunPipelineRun(model, pipelineRun),\n  !taskRunStatusObj\n    ? (model, pipelineRun) => stopPipelineRun(model, pipelineRun, operatorVersion, taskRuns)\n    : (model, pipelineRun) =>\n        stopPipelineRunForTaskRunStatus(model, pipelineRun, operatorVersion, taskRunStatusObj),\n  !taskRunStatusObj\n    ? (model, pipelineRun) => cancelPipelineRunFinally(model, pipelineRun, taskRuns)\n    : (model, pipelineRun) =>\n        cancelPipelineRunFinallyForTaskRunStatus(model, pipelineRun, taskRunStatusObj),\n  (model, pipelineRun) => deleteResourceObj(model, pipelineRun),\n];\n\nexport const getTaskRunKebabActions = (): KebabAction[] => [\n  (model, taskRun) => deleteResourceObj(model, taskRun),\n];\n","import * as React from 'react';\nimport { Form } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport {\n  ModalBody,\n  ModalComponentProps,\n  ModalSubmitFooter,\n  ModalTitle,\n} from '@console/internal/components/factory';\n\ntype ModalStructureProps = {\n  children: React.ReactNode;\n  submitBtnText: string;\n  submitDanger?: boolean;\n  title: string;\n};\n\ntype ModalStructureCombinedProps = FormikProps<FormikValues> &\n  ModalComponentProps &\n  ModalStructureProps;\n\nconst ModalStructure: React.FC<ModalStructureCombinedProps> = (props) => {\n  const {\n    children,\n    close,\n    errors,\n    isSubmitting,\n    handleSubmit,\n    status,\n    submitBtnText,\n    submitDanger,\n    title,\n  } = props;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div className=\"modal-content\">\n        <ModalTitle>{title}</ModalTitle>\n        <ModalBody>\n          <div className=\"pf-v5-c-form\">{children}</div>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={status?.submitError}\n          inProgress={isSubmitting}\n          submitText={submitBtnText}\n          submitDisabled={!_.isEmpty(errors) || isSubmitting}\n          submitDanger={submitDanger}\n          cancel={close}\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport default ModalStructure;\n","import { merge } from 'lodash';\n// FIXME react-redux types are 6.x while react-redux is 7.x\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { useSelector } from 'react-redux';\nimport { getUser } from '@console/dynamic-plugin-sdk';\nimport { KebabAction, Kebab } from '@console/internal/components/utils';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { PipelineRunKind } from '../../../types';\nimport { StartedByAnnotation } from '../../pipelines/const';\n\ntype AnnotationMap = { [annotationKey: string]: string };\n\nconst mergeAnnotationsWithResource = (annotations: AnnotationMap, resource: K8sResourceCommon) => {\n  return merge({}, resource, { metadata: { annotations }, spec: {} });\n};\n\nexport const useUserAnnotationForManualStart = (): AnnotationMap => {\n  const user = useSelector(getUser);\n\n  if (!user?.metadata?.name) {\n    return {};\n  }\n\n  return {\n    [StartedByAnnotation.user]: user.metadata.name,\n  };\n};\n\nexport const usePipelineRunWithUserAnnotation = (plr: PipelineRunKind): PipelineRunKind => {\n  const annotations = useUserAnnotationForManualStart();\n\n  return plr && mergeAnnotationsWithResource(annotations, plr);\n};\n\nexport const useMenuActionsWithUserAnnotation = (menuActions: KebabAction[]): KebabAction[] => {\n  const annotations = useUserAnnotationForManualStart();\n\n  return menuActions.map((kebabAction) => {\n    if (Object.values(Kebab.factory).includes(kebabAction)) {\n      return kebabAction;\n    }\n    return (kind, resource, ...rest) =>\n      kebabAction(kind, mergeAnnotationsWithResource(annotations, resource), ...rest);\n  });\n};\n","import i18next from 'i18next';\nimport * as yup from 'yup';\nimport { paramIsRequired } from '../../../../utils/common';\nimport { PipelineResourceType, VolumeTypes } from '../../const';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\n\nexport const validateResourceType = () =>\n  yup.object().shape({\n    type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    params: yup\n      .object()\n      .when('type', {\n        is: PipelineResourceType.git,\n        then: yup.object({\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          revision: yup.string(),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.image,\n        then: yup.object({\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.storage,\n        then: yup.object({\n          type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          location: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          dir: yup.string(),\n        }),\n      })\n      .when('type', {\n        is: PipelineResourceType.cluster,\n        then: yup.object({\n          name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          url: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          username: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          password: yup.string(),\n          insecure: yup.string(),\n        }),\n      }),\n    secrets: yup.object().when('type', {\n      is: PipelineResourceType.cluster,\n      then: yup.object({\n        cadata: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        token: yup.string(),\n      }),\n    }),\n  });\n\nexport const formResources = () =>\n  yup.array().of(\n    yup.object().shape({\n      name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      selection: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      data: yup.object().when('selection', {\n        is: CREATE_PIPELINE_RESOURCE,\n        then: validateResourceType(),\n      }),\n    }),\n  );\n\nconst volumeTypeSchema = () =>\n  yup\n    .object()\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.Secret,\n      then: yup.object().shape({\n        secret: yup.object().shape({\n          secretName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          items: yup.array().of(\n            yup.object().shape({\n              key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n              path: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            }),\n          ),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.ConfigMap,\n      then: yup.object().shape({\n        configMap: yup.object().shape({\n          name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          items: yup.array().of(\n            yup.object().shape({\n              key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n              path: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            }),\n          ),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.PVC,\n      then: yup.object().shape({\n        persistentVolumeClaim: yup.object().shape({\n          claimName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        }),\n      }),\n    })\n    .when('type', {\n      is: (type) => VolumeTypes[type] === VolumeTypes.VolumeClaimTemplate,\n      then: yup.object().shape({\n        volumeClaimTemplate: yup.object().shape({\n          spec: yup.object().shape({\n            accessModes: yup\n              .array()\n              .of(yup.string().required(i18next.t('pipelines-plugin~Required'))),\n            resources: yup.object().shape({\n              requests: yup\n                .object()\n                .shape({ storage: yup.string().required(i18next.t('pipelines-plugin~Required')) }),\n            }),\n            storageClassName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n            volumeMode: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          }),\n        }),\n      }),\n    });\n\nconst commonPipelineSchema = () =>\n  yup.object().shape({\n    parameters: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        default: yup.string(),\n        description: yup.string(),\n        value: yup\n          .string()\n          .test('test-if-param-can-be-empty', i18next.t('pipelines-plugin~Required'), function (\n            value: string,\n          ) {\n            return paramIsRequired(this.parent) ? !!value : true;\n          }),\n      }),\n    ),\n    resources: formResources(),\n    workspaces: yup.array().of(\n      yup.object().shape({\n        type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n        data: volumeTypeSchema(),\n      }),\n    ),\n  });\n\nexport const startPipelineSchema = () =>\n  commonPipelineSchema().shape({\n    secretOpen: yup.boolean().equals([false]),\n  });\n\nexport const addTriggerSchema = () =>\n  commonPipelineSchema().shape({\n    triggerBinding: yup.object().shape({\n      name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      resource: yup\n        .object()\n        .shape({\n          metadata: yup.object().shape({\n            name: yup.string().required(i18next.t('pipelines-plugin~Required')),\n          }),\n        })\n        .required(i18next.t('pipelines-plugin~Required')),\n    }),\n  });\n\nexport const advancedSectionValidationSchema = () =>\n  yup.object().shape({\n    secretName: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    type: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    annotations: yup.object().shape({\n      key: yup.string().required(i18next.t('pipelines-plugin~Required')),\n      value: yup.string().required(i18next.t('pipelines-plugin~Required')),\n    }),\n  });\n","import { FormikErrors } from 'formik';\nimport i18n from 'i18next';\nimport * as _ from 'lodash';\nimport { apiVersionForModel } from '@console/internal/module/k8s';\nimport { getRandomChars } from '@console/shared';\nimport { ClusterTaskModel, PipelineModel, TaskModel } from '../../../models';\nimport {\n  PipelineKind,\n  PipelineTask,\n  PipelineTaskParam,\n  TaskKind,\n  TektonParam,\n} from '../../../types';\nimport { sanitizePipelineParams } from '../detail-page-tabs/utils';\nimport { getTaskParameters } from '../resource-utils';\nimport {\n  getTaskErrorString,\n  STATUS_KEY_NAME_ERROR,\n  TASK_FIELD_ERROR_TYPE_MAPPING,\n  TaskErrorType,\n} from './const';\nimport {\n  BuilderTasksErrorGroup,\n  GetErrorMessage,\n  PipelineBuilderFormikStatus,\n  PipelineBuilderFormValues,\n  PipelineBuilderFormYamlValues,\n  PipelineBuilderLoadingTask,\n  PipelineBuilderTaskBase,\n  PipelineBuilderTaskResources,\n  TaskErrors,\n  TaskType,\n} from './types';\n\nconst isTaskArrayErrors = (errors: string | string[] | TaskErrors): errors is TaskErrors => {\n  return Array.isArray(errors) && errors.some((value) => typeof value === 'object');\n};\n\nexport const getBuilderTasksErrorGroup = (\n  formikFormErrors?: FormikErrors<PipelineBuilderFormValues>,\n  status?: PipelineBuilderFormikStatus,\n): BuilderTasksErrorGroup => {\n  const paths = Object.keys(status?.[STATUS_KEY_NAME_ERROR] || {});\n  const nameErrorString = getTaskErrorString(TaskErrorType.NAME_ERROR);\n  const { formData } = paths.reduce((data, path) => {\n    _.set(data, path, nameErrorString);\n    return data;\n  }, {} as FormikErrors<PipelineBuilderFormYamlValues>);\n\n  const getErrorsForType = (type: TaskType): TaskErrors => {\n    const formErrors = isTaskArrayErrors(formikFormErrors?.[type]) ? formikFormErrors[type] : [];\n    const displayNameErrors = formData?.[type];\n    return _.merge([], formErrors, displayNameErrors);\n  };\n\n  return {\n    tasks: getErrorsForType('tasks'),\n    finally: getErrorsForType('finallyTasks'),\n  };\n};\n\nexport const getTopLevelErrorMessage: GetErrorMessage = (errors) => (taskIndex) => {\n  const errorObj = errors[taskIndex] || {};\n  const taskErrors = Object.values(errorObj);\n\n  if (taskErrors.length === 0) return null;\n\n  // Check if it's one of the known error messages\n  const matchingErrorType: TaskErrorType = Object.values(\n    TaskErrorType,\n  ).find((errorType: TaskErrorType) => taskErrors.includes(getTaskErrorString(errorType)));\n  if (matchingErrorType) return getTaskErrorString(matchingErrorType);\n\n  // Not one of the top-level known ones, is it a problem with a known area?\n  const keys = Object.keys(TASK_FIELD_ERROR_TYPE_MAPPING) as TaskErrorType[];\n  const mappingErrorType: TaskErrorType = keys.find((key) => {\n    const properties: string[] = TASK_FIELD_ERROR_TYPE_MAPPING[key];\n    return properties?.some((propertyPath) => _.get(errorObj, propertyPath));\n  });\n  if (!mappingErrorType) return null;\n\n  // Problem with a known area, get the area based error for a high-level error (more specific error will be on the field)\n  return getTaskErrorString(mappingErrorType);\n};\n\nexport const findTask = (\n  resourceTasks: PipelineBuilderTaskResources,\n  task: PipelineTask,\n): TaskKind => {\n  if (task?.taskRef) {\n    if (\n      !resourceTasks?.tasksLoaded ||\n      !resourceTasks.clusterTasks ||\n      !resourceTasks.namespacedTasks\n    ) {\n      return null;\n    }\n    const {\n      taskRef: { kind, name },\n    } = task;\n    const matchingName = (taskResource: TaskKind) => taskResource.metadata.name === name;\n\n    if (kind === ClusterTaskModel.kind) {\n      return resourceTasks.clusterTasks.find(matchingName);\n    }\n    return resourceTasks.namespacedTasks.find(matchingName);\n  }\n\n  if (task?.taskSpec) {\n    return {\n      apiVersion: apiVersionForModel(TaskModel),\n      kind: 'EmbeddedTask',\n      metadata: {\n        name: i18n.t('pipelines-plugin~Embedded task'),\n      },\n      spec: task.taskSpec,\n    };\n  }\n\n  return null;\n};\n\nexport const findTaskFromFormikData = (\n  formikData: PipelineBuilderFormYamlValues,\n  task: PipelineTask,\n): TaskKind => {\n  const { taskResources } = formikData;\n  return findTask(taskResources, task);\n};\n\n/**\n * Swaps one runAfter (relatedTaskName) for another (taskName).\n */\nexport const mapReplaceRelatedInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(relatedTaskName)) {\n    return iterationTask;\n  }\n\n  const remainingRunAfters = iterationTask.runAfter.filter(\n    (runAfterName) => runAfterName !== relatedTaskName,\n  );\n\n  return {\n    ...iterationTask,\n    runAfter: [...remainingRunAfters, taskName],\n  };\n};\n\n/**\n * Finds and removes a related runAfter (taskName).\n */\nexport const mapRemoveRelatedInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(taskName)) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: iterationTask.runAfter.filter((runAfterName) => runAfterName !== taskName),\n  };\n};\n\n/**\n * Removes reference of a task (removalTask) in the other task (iterationTask) & combines the task\n * (removalTask) runAfters in the other task (iterationTask).\n */\nexport const mapStitchReplaceInOthers = <TaskType extends PipelineBuilderTaskBase>(\n  removalTask: PipelineBuilderTaskBase,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!removalTask?.name) {\n    return iterationTask;\n  }\n  if (!removalTask?.runAfter) {\n    return mapRemoveRelatedInOthers<TaskType>(removalTask.name, iterationTask);\n  }\n  if (!iterationTask?.runAfter?.includes(removalTask.name)) {\n    return iterationTask;\n  }\n\n  const updatedIterationTask = mapRemoveRelatedInOthers(removalTask.name, iterationTask);\n  let newRunAfter: string[] = removalTask.runAfter;\n  if (updatedIterationTask.runAfter.length > 0) {\n    newRunAfter = [...updatedIterationTask.runAfter, ...newRunAfter];\n  }\n\n  return {\n    ...updatedIterationTask,\n    runAfter: _.uniq(newRunAfter),\n  };\n};\n\n/**\n * Simply add a runAfter (of newTaskName) to a task (iterationTask) on matching names (relatedTaskName).\n */\nexport const mapBeRelated = <TaskType extends PipelineBuilderTaskBase>(\n  newTaskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (iterationTask?.name !== relatedTaskName) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: [newTaskName],\n  };\n};\n\n/**\n * Adds a task (taskName) to an existing runAfter (iterationTask.runAfter) if a related name\n * (relatedTaskName) is already part of the runAfter.\n */\nexport const mapAddRelatedToOthers = <TaskType extends PipelineBuilderTaskBase>(\n  taskName: string,\n  relatedTaskName: string,\n  iterationTask: TaskType,\n): TaskType => {\n  if (!iterationTask?.runAfter?.includes(relatedTaskName)) {\n    return iterationTask;\n  }\n\n  return {\n    ...iterationTask,\n    runAfter: [...iterationTask.runAfter, taskName],\n  };\n};\n\nexport const safeName = (reservedNames: string[], desiredName: string): string => {\n  if (reservedNames.includes(desiredName)) {\n    const newName = `${desiredName}-${getRandomChars(3)}`;\n    if (reservedNames.includes(newName)) {\n      return safeName(reservedNames, desiredName);\n    }\n    return newName;\n  }\n  return desiredName;\n};\n\nexport const convertResourceToLoadingTask = (\n  usedNames: string[],\n  resource: TaskKind,\n  isFinallyTask: boolean,\n  runAfter?: string[],\n): PipelineBuilderLoadingTask => {\n  const kind = resource.kind ?? TaskModel.kind;\n  return {\n    name: safeName(usedNames, resource.metadata.name),\n    runAfter: isFinallyTask ? [] : runAfter,\n    taskRef: {\n      kind,\n      name: resource.metadata.name,\n    },\n    resource,\n    isFinallyTask,\n  };\n};\n\nexport const convertResourceToTask = (\n  usedNames: string[],\n  resource: TaskKind,\n  runAfter?: string[],\n): PipelineTask => {\n  const kind = resource.kind ?? TaskModel.kind;\n  return {\n    name: safeName(usedNames, resource.metadata.name),\n    runAfter,\n    taskRef: {\n      kind,\n      name: resource.metadata.name,\n    },\n    params: getTaskParameters(resource).map(\n      (param: TektonParam): PipelineTaskParam => ({\n        name: param.name,\n        value: param.default,\n      }),\n    ),\n  };\n};\n\nconst removeListRunAfters = (task: PipelineTask, listIds: string[]): PipelineTask => {\n  if (task?.runAfter && listIds.length > 0) {\n    // Trim out any runAfters pointing at list nodes\n    const runAfter = (task.runAfter || []).filter(\n      (runAfterName) => !listIds.includes(runAfterName),\n    );\n\n    return {\n      ...task,\n      runAfter,\n    };\n  }\n\n  return task;\n};\n\nexport const removeEmptyFormFields = (task: PipelineTask): PipelineTask => {\n  let trimmedTask = task;\n  // Since we can submit, this param has a default; check for empty values and remove\n  if (task.params?.length > 0) {\n    const params = task.params?.filter((param) => !!param.value);\n    trimmedTask = { ...trimmedTask, params };\n  }\n  // Drop input/output resources which are not linked to an (optional) resource.\n  if (task.resources?.inputs?.length > 0 || task.resources?.outputs?.length > 0) {\n    const inputs = task.resources?.inputs?.filter((resource) => resource.resource);\n    const outputs = task.resources?.outputs?.filter((resource) => resource.resource);\n    trimmedTask = { ...trimmedTask, resources: { ...trimmedTask.resources, inputs, outputs } };\n  }\n  // Drop workspaces which are not linked to an (optional) workspace.\n  if (task.workspaces?.length > 0) {\n    const workspaces = task.workspaces?.filter((workspace) => workspace.workspace);\n    trimmedTask = { ...trimmedTask, workspaces };\n  }\n  return trimmedTask;\n};\n\nexport const convertBuilderFormToPipeline = (\n  formValues: PipelineBuilderFormValues,\n  namespace: string,\n  existingPipeline?: PipelineKind,\n): PipelineKind => {\n  const {\n    name,\n    resources,\n    params,\n    workspaces,\n    tasks,\n    listTasks,\n    finallyTasks,\n    ...others\n  } = formValues;\n  const listIds = listTasks.map((listTask) => listTask.name);\n  // Strip remaining builder-only properties\n  const unhandledSpec = _.omit(others, 'finallyListTasks', 'loadingTasks');\n\n  return {\n    ...existingPipeline,\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      ...existingPipeline?.metadata,\n      name: existingPipeline?.metadata?.name ? existingPipeline?.metadata?.name : name,\n      namespace,\n    },\n    spec: {\n      ...existingPipeline?.spec,\n      ...unhandledSpec,\n      params: sanitizePipelineParams(\n        params.length > 0 ? params : existingPipeline?.spec?.params ?? [],\n      ),\n      workspaces: workspaces.length > 0 ? workspaces : existingPipeline?.spec?.workspaces ?? [],\n      tasks:\n        tasks.length > 0\n          ? tasks\n          : existingPipeline?.spec?.tasks ??\n            [].map((task) => task && removeEmptyFormFields(removeListRunAfters(task, listIds))),\n      finally: finallyTasks,\n    },\n  };\n};\n\nexport const convertPipelineToBuilderForm = (pipeline: PipelineKind): PipelineBuilderFormValues => {\n  if (!pipeline) return null;\n\n  const {\n    metadata: { name },\n    spec: { params = [], resources = [], workspaces = [], tasks = [], finally: finallyTasks = [] },\n  } = pipeline;\n\n  return {\n    name,\n    params,\n    resources,\n    workspaces: workspaces.map((workspace) => ({\n      ...workspace,\n      optional: !!workspace.optional, // Formik fails to understand \"undefined boolean\" checkbox values\n    })),\n    tasks,\n    listTasks: [],\n    loadingTasks: [],\n    finallyTasks,\n    finallyListTasks: [],\n  };\n};\n\nexport const hasEmptyString = (arr: string[]) => _.find(arr, _.isEmpty) === '';\n\nexport const isFieldValid = (value: string | string[], dirty: boolean, emptyIsInvalid: boolean) =>\n  dirty && emptyIsInvalid ? (_.isArray(value) ? !hasEmptyString(value) : !_.isEmpty(value)) : true;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectList,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  getAccessModeForProvisioner,\n  getAccessModeOptions,\n} from '@console/internal/components/storage/shared';\nimport { PersistentVolumeClaimKind } from '@console/internal/module/k8s';\n\nexport const getPVCAccessModes = (resource: PersistentVolumeClaimKind, key: string) =>\n  _.reduce(\n    resource?.spec?.accessModes,\n    (res, value) => {\n      const mode = getAccessModeOptions().find((accessMode) => accessMode.value === value);\n      if (mode) {\n        res.push(mode[key]);\n      }\n      return res;\n    },\n    [],\n  );\n\nexport const AccessModeSelector: React.FC<AccessModeSelectorProps> = (props) => {\n  const {\n    className,\n    pvcResource,\n    filterByVolumeMode,\n    onChange,\n    loaded,\n    provisioner,\n    availableAccessModes = [],\n    description,\n    ignoreReadOnly,\n  } = props;\n\n  const { t } = useTranslation();\n  const pvcInitialAccessMode = pvcResource\n    ? getPVCAccessModes(pvcResource, 'value')\n    : availableAccessModes;\n  const volumeMode: string = pvcResource?.spec?.volumeMode;\n\n  const [allowedAccessModes, setAllowedAccessModes] = React.useState<string[]>();\n  const [accessMode, setAccessMode] = React.useState<string>();\n\n  const changeAccessMode = React.useCallback(\n    (mode: string) => {\n      setAccessMode(mode);\n      onChange(mode);\n    },\n    [onChange],\n  );\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<string>(\n    getAccessModeOptions().find((mode) => mode.value === pvcInitialAccessMode[0]).title,\n  );\n\n  const onToggleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelect = (_event: undefined, value: { val: string; label: string }) => {\n    setIsOpen(!isOpen);\n    setSelected(value.label);\n    changeAccessMode(value.val);\n  };\n  const selectOptions = getAccessModeOptions().map((option) => {\n    const disabled = !allowedAccessModes?.includes(option.value);\n    return (\n      <SelectOption\n        key={option.title}\n        value={{ val: option.value, label: option.title }}\n        isDisabled={disabled}\n        isSelected={accessMode === option.value}\n      >\n        {option.title}\n      </SelectOption>\n    );\n  });\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={onToggleClick}\n      isExpanded={isOpen}\n      style={\n        {\n          width: '200px',\n        } as React.CSSProperties\n      }\n    >\n      {selected}\n    </MenuToggle>\n  );\n\n  React.useEffect(() => {\n    if (loaded) {\n      setAllowedAccessModes(\n        getAccessModeForProvisioner(\n          provisioner,\n          ignoreReadOnly,\n          filterByVolumeMode ? volumeMode : null,\n        ),\n      );\n    }\n  }, [filterByVolumeMode, ignoreReadOnly, loaded, provisioner, volumeMode]);\n\n  React.useEffect(() => {\n    // Make sure the default or already checked option button value is from any one of allowed the access mode\n    if (allowedAccessModes) {\n      if (!accessMode && allowedAccessModes.includes(pvcInitialAccessMode[0])) {\n        // To view the same access mode value of pvc\n        changeAccessMode(pvcInitialAccessMode[0]);\n      } else if (!allowedAccessModes.includes(accessMode)) {\n        // Old access mode will be disabled\n        changeAccessMode(allowedAccessModes[0]);\n      }\n    }\n  }, [accessMode, allowedAccessModes, changeAccessMode, pvcInitialAccessMode]);\n\n  return (\n    <FormGroup\n      label={t('console-app~Access mode')}\n      isRequired\n      fieldId=\"access-mode\"\n      className={className}\n    >\n      {loaded && allowedAccessModes && (\n        <Select\n          isOpen={isOpen}\n          selected={selected}\n          onSelect={onSelect}\n          onOpenChange={(open) => setIsOpen(open)}\n          toggle={toggle}\n          shouldFocusToggleOnSelect\n        >\n          <SelectList>{selectOptions}</SelectList>\n        </Select>\n      )}\n\n      {allowedAccessModes && allowedAccessModes && description && (\n        <p className=\"help-block\" id=\"access-mode-help\">\n          {description}\n        </p>\n      )}\n      {(!loaded || !allowedAccessModes) && <div className=\"skeleton-text\" />}\n    </FormGroup>\n  );\n};\n\ntype AccessModeSelectorProps = {\n  className?: string;\n  pvcResource?: PersistentVolumeClaimKind;\n  filterByVolumeMode?: boolean;\n  onChange: (accessMode: string) => void;\n  availableAccessModes?: string[];\n  loaded: boolean;\n  loadError?: any;\n  provisioner: string;\n  description?: string;\n  ignoreReadOnly?: boolean;\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\n/* eslint-disable import/named */\nimport { WithTranslation, withTranslation } from 'react-i18next';\n\nimport { Firehose, LoadingInline, Dropdown, ResourceName, ResourceIcon } from '.';\nimport { isDefaultClass } from '../storage-class';\nimport * as classNames from 'classnames';\n\n/* Component StorageClassDropdown - creates a dropdown list of storage classes */\n\nexport class StorageClassDropdownInnerWithTranslation extends React.Component<\n  StorageClassDropdownInnerProps,\n  StorageClassDropdownInnerState\n> {\n  readonly state: StorageClassDropdownInnerState = {\n    items: {},\n    name: this.props.name,\n    selectedKey: this.props.selectedKey,\n    title: <LoadingInline />,\n    defaultClass: this.props.defaultClass,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { loaded, loadError, resources, t } = nextProps;\n\n    if (loadError) {\n      this.setState({\n        title: (\n          <div className=\"cos-error-title\">\n            {t('public~Error loading {{desc}}', { desc: nextProps.desc })}\n          </div>\n        ),\n      });\n      return;\n    }\n    if (!loaded) {\n      return;\n    }\n\n    const state = {\n      items: {},\n      title: {},\n      defaultClass: '',\n    };\n    let unorderedItems = {};\n    const noStorageClass = t('public~No default StorageClass');\n    _.map(resources.StorageClass.data, (resource) => {\n      unorderedItems[resource.metadata.name] = {\n        kindLabel: 'StorageClass',\n        name: resource.metadata.name,\n        description: _.get(resource, 'metadata.annotations.description', ''),\n        default: isDefaultClass(resource),\n        accessMode: _.get(\n          resource,\n          ['metadata', 'annotations', 'storage.alpha.openshift.io/access-mode'],\n          '',\n        ),\n        provisioner: resource.provisioner,\n        parameters: resource.parameters,\n        type: _.get(resource, 'parameters.type', ''),\n        zone: _.get(resource, 'parameters.zone', ''),\n        resource,\n      };\n    });\n\n    //Filter if user provides a custom function\n    if (nextProps.filter) {\n      unorderedItems = Object.keys(unorderedItems)\n        .filter((sc) => nextProps.filter(unorderedItems[sc]))\n        .reduce((acc, key) => {\n          acc[key] = unorderedItems[key];\n          return acc;\n        }, {});\n    }\n\n    // Determine if there is a default storage class\n    state.defaultClass = _.findKey(unorderedItems, 'default');\n    const { selectedKey } = this.state;\n    if (!state.defaultClass) {\n      // Add No Storage Class option if there is not a default storage class\n      unorderedItems[''] = { kindLabel: '', name: noStorageClass };\n    }\n\n    if (!this.props.loaded || !selectedKey || !unorderedItems[selectedKey || state.defaultClass]) {\n      state.title = <span className=\"text-muted\">{t('public~Select StorageClass')}</span>;\n    }\n\n    const selectedItem = unorderedItems[selectedKey || state.defaultClass];\n    if (selectedItem) {\n      state.title = this.getTitle(selectedItem);\n    }\n\n    Object.keys(unorderedItems)\n      .sort()\n      .forEach((key) => {\n        state.items[key] = unorderedItems[key];\n      });\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    const { defaultClass } = this.state;\n    if (defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  componentDidUpdate() {\n    const { defaultClass, selectedKey } = this.state;\n    if (selectedKey) {\n      this.onChange(selectedKey);\n    } else if (defaultClass) {\n      this.onChange(defaultClass);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state, nextState);\n  }\n\n  autocompleteFilter = (text, item) => fuzzy(text, item.props.name);\n\n  getTitle = (storageClass) => {\n    return storageClass.kindLabel ? (\n      <ResourceName kind=\"StorageClass\" name={storageClass.name} />\n    ) : (\n      <span>{storageClass.name}</span>\n    );\n  };\n\n  onChange = (key) => {\n    const storageClass = _.get(this.state, ['items', key], {});\n    this.setState(\n      {\n        selectedKey: key,\n        title: this.getTitle(storageClass),\n      },\n      () => this.props.onChange(storageClass.resource),\n    );\n  };\n\n  render() {\n    const { id, loaded, describedBy, noSelection, t } = this.props;\n    const items = {};\n    _.each(\n      this.state.items,\n      (props, key) =>\n        (items[key] = key ? (\n          <StorageClassDropdownEntry {...props} />\n        ) : (\n          <StorageClassDropdownNoStorageClassOption {...props} />\n        )),\n    );\n\n    const { selectedKey, defaultClass } = this.state;\n\n    // Only show the dropdown if 'no storage class' is not the only option which depends on defaultClass\n    const itemsAvailableToShow = defaultClass || _.size(items) > 1;\n    return (\n      <>\n        {loaded && itemsAvailableToShow && (\n          <div>\n            <label\n              className={classNames('control-label', this.props.hideClassName, {\n                'co-required': this.props.required,\n              })}\n              htmlFor={id}\n            >\n              {t('public~StorageClass')}\n            </label>\n            <Dropdown\n              className=\"co-storage-class-dropdown\"\n              dropDownClassName=\"dropdown--full-width\"\n              autocompleteFilter={this.autocompleteFilter}\n              autocompletePlaceholder={t('public~Select StorageClass')}\n              items={items}\n              selectedKey={selectedKey}\n              title={this.state.title}\n              onChange={this.onChange}\n              id={id}\n              dataTest={this.props?.['data-test']}\n              noSelection={noSelection}\n              menuClassName=\"dropdown-menu--text-wrap\"\n            />\n            {describedBy && (\n              <p className=\"help-block\" id={describedBy}>\n                {t('public~StorageClass for the new claim')}\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const StorageClassDropdownInner = withTranslation()(\n  StorageClassDropdownInnerWithTranslation,\n);\n\nexport const StorageClassDropdown = (props) => {\n  return (\n    <Firehose resources={[{ kind: 'StorageClass', prop: 'StorageClass', isList: true }]}>\n      <StorageClassDropdownInner {...props} />\n    </Firehose>\n  );\n};\n\nconst StorageClassDropdownEntry = (props) => {\n  const storageClassProperties = [\n    props.default ? ' (default)' : '',\n    props.description,\n    props.accessMode,\n    props.provisioner,\n    props.type,\n    props.zone,\n  ];\n  const storageClassDescriptionLine = _.compact(storageClassProperties).join(' | ');\n  return (\n    <span className=\"co-resource-item\">\n      <ResourceIcon kind={props.kindLabel} />\n      <span className=\"co-resource-item__resource-name\">\n        {props.name}\n        <div className=\"text-muted small\"> {storageClassDescriptionLine}</div>\n      </span>\n    </span>\n  );\n};\n\nconst StorageClassDropdownNoStorageClassOption = (props) => {\n  return (\n    <span className=\"co-resource-item\">\n      <span className=\"co-resource-item__resource-name\">{props.name}</span>\n    </span>\n  );\n};\n\nexport type StorageClassDropdownInnerState = {\n  items: any;\n  name: string;\n  selectedKey: string;\n  title: React.ReactNode;\n  defaultClass: string;\n};\n\nexport type StorageClassDropdownInnerProps = WithTranslation & {\n  id?: string;\n  loaded?: boolean;\n  resources?: any;\n  name: string;\n  onChange: (object) => void;\n  describedBy: string;\n  defaultClass: string;\n  required?: boolean;\n  hideClassName?: string;\n  filter?: (param) => boolean;\n  noSelection?: boolean;\n  selectedKey?: string;\n};\n","import { TektonParam } from '../types';\n\nexport const paramIsRequired = (param: TektonParam): boolean => {\n  return !('default' in param);\n};\n","import { k8sListResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { TaskRunModel } from '../../models';\nimport { TaskRunKind } from '../../types';\nimport { TektonResourceLabel } from '../pipelines/const';\n\nexport const useTaskRuns = (\n  namespace: string,\n  pipelineRunName?: string,\n): [TaskRunKind[], boolean, unknown] => {\n  const taskRunResource = pipelineRunName\n    ? {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        selector: {\n          matchLabels: {\n            [TektonResourceLabel.pipelinerun]: pipelineRunName,\n          },\n        },\n        isList: true,\n      }\n    : {\n        kind: referenceForModel(TaskRunModel),\n        namespace,\n        isList: true,\n      };\n  return useK8sWatchResource<TaskRunKind[]>(taskRunResource);\n};\n\nexport const getTaskRuns = async (namespace: string, pipelineRunName?: string) => {\n  const taskRunResource = pipelineRunName\n    ? {\n        model: TaskRunModel,\n        queryParams: {\n          ns: namespace,\n          labelSelector: {\n            matchLabels: {\n              [TektonResourceLabel.pipelinerun]: pipelineRunName,\n            },\n          },\n        },\n      }\n    : {\n        model: TaskRunModel,\n        queryParams: {\n          ns: namespace,\n        },\n      };\n  const taskRuns = await k8sListResource(taskRunResource);\n  return taskRuns;\n};\n\nexport const getTaskRunsOfPipelineRun = (\n  taskRuns: TaskRunKind[],\n  pipelineRunName: string,\n): TaskRunKind[] => {\n  return taskRuns.filter(\n    (taskRun) => taskRun.metadata?.labels[TektonResourceLabel.pipelinerun] === pipelineRunName,\n  );\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { PipelineModel, PipelineResourceModel } from '../../../models';\nimport {\n  PipelineKind,\n  PipelineRunKind,\n  PipelineRunReferenceResource,\n  PipelineRunResource,\n  PipelineTask,\n  TektonParam,\n  TektonResource,\n} from '../../../types';\nimport { getSafeTaskResourceKind } from '../../../utils/pipeline-augment';\nimport PipelineResourceRef from '../../shared/common/PipelineResourceRef';\nimport { ResourceModelLink } from '../resource-overview/DynamicResourceLinkList';\n\nexport const removeEmptyDefaultFromPipelineParams = (parameters: TektonParam[]): TektonParam[] =>\n  _.map(\n    parameters,\n    (parameter) =>\n      _.omit(parameter, _.isEmpty(parameter.default) ? ['default'] : []) as TektonParam,\n  );\n\nexport const sanitizePipelineParams = (parameters: TektonParam[]): TektonParam[] => {\n  const pipelineWithNoEmptyDefaultParams = removeEmptyDefaultFromPipelineParams(parameters);\n  return pipelineWithNoEmptyDefaultParams.length > 0\n    ? pipelineWithNoEmptyDefaultParams.map((parameter) => {\n        if (parameter?.type === 'array' && typeof parameter?.default === 'string') {\n          return {\n            ...parameter,\n            default: parameter.default.split(',').map((param) => param.trim()),\n          };\n        }\n        return parameter;\n      })\n    : [];\n};\n\ntype PipelineTaskLinks = {\n  taskLinks: ResourceModelLink[];\n  finallyTaskLinks: ResourceModelLink[];\n};\n\nexport const getPipelineTaskLinks = (pipeline: PipelineKind): PipelineTaskLinks => {\n  const toResourceLinkData = (tasks: PipelineTask[]): ResourceModelLink[] => {\n    if (!tasks) return [];\n    return tasks?.map((task) =>\n      task.taskRef\n        ? task.taskRef.kind === 'ClusterTask' || task.taskRef.kind === 'Task'\n          ? {\n              resourceKind: getSafeTaskResourceKind(task.taskRef.kind),\n              name: task.taskRef.name,\n              qualifier: task.name,\n            }\n          : {\n              resourceKind: task.taskRef?.kind,\n              name: i18next.t('pipelines-plugin~Custom Task'),\n              qualifier: task.name,\n              disableLink: true,\n            }\n        : {\n            resourceKind: 'EmbeddedTask',\n            name: i18next.t('pipelines-plugin~Embedded task'),\n            qualifier: task.name,\n            disableLink: true,\n          },\n    );\n  };\n  return {\n    taskLinks: toResourceLinkData(pipeline.spec.tasks),\n    finallyTaskLinks: toResourceLinkData(pipeline.spec.finally),\n  };\n};\n\nconst isResourceRef = (resource: PipelineRunResource): resource is PipelineRunReferenceResource =>\n  !!(resource as PipelineRunReferenceResource).resourceRef;\n\nexport const getPipelineResourceLinks = (\n  definitionResources: TektonResource[] = [],\n  runResources: PipelineRunResource[],\n): ResourceModelLink[] => {\n  return runResources?.map(\n    (resource): ResourceModelLink => {\n      const definitionResource = definitionResources.find(({ name }) => name === resource.name);\n      const qualifier = definitionResource ? definitionResource.type : undefined;\n\n      if (isResourceRef(resource)) {\n        return {\n          resourceKind: PipelineResourceModel.kind,\n          name: resource.resourceRef.name,\n          qualifier,\n        };\n      }\n\n      return {\n        resourceKind: 'EmbeddedPipelineResource',\n        name: i18next.t('pipelines-plugin~Embedded PipelineResource'),\n        qualifier,\n      };\n    },\n  );\n};\n\nexport const convertBackingPipelineToPipelineResourceRefProps = (\n  pipelineRun: PipelineRunKind,\n): React.ComponentProps<typeof PipelineResourceRef> => {\n  if (pipelineRun.spec.pipelineRef) {\n    return {\n      resourceKind: PipelineModel.kind,\n      resourceName: pipelineRun.spec.pipelineRef.name,\n      namespace: pipelineRun.metadata.namespace,\n    };\n  }\n\n  return {\n    resourceKind: 'EmbeddedPipeLine', // intentional capitalization for EPL\n    resourceName: i18next.t('pipelines-plugin~Embedded Pipeline'),\n  };\n};\n","import * as React from 'react';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport LogSnippetFromPod from './LogSnippetFromPod';\n\ntype LogSnippetBlockProps = {\n  children: (logSnippet: string) => React.ReactNode;\n  logDetails: CombinedErrorDetails;\n  namespace: string;\n};\n\nconst LogSnippetBlock: React.FC<LogSnippetBlockProps> = ({ children, logDetails, namespace }) => {\n  return 'podName' in logDetails ? (\n    <LogSnippetFromPod\n      containerName={logDetails.containerName}\n      namespace={namespace}\n      podName={logDetails.podName}\n      title={logDetails.title}\n    >\n      {children}\n    </LogSnippetFromPod>\n  ) : (\n    <>{children(logDetails.staticMessage)}</>\n  );\n};\n\nexport default LogSnippetBlock;\n","import * as React from 'react';\nimport { Formik, FormikHelpers } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { createModalLauncher, ModalComponentProps } from '@console/internal/components/factory';\nimport { PipelineKind } from '../../../../types';\nimport ModalStructure from '../common/ModalStructure';\nimport { removeTrigger } from './remove-utils';\nimport RemoveTriggerForm from './RemoveTriggerForm';\nimport { RemoveTriggerFormValues } from './types';\nimport { removeTriggerSchema } from './validation-utils';\n\ntype RemoveTriggerModalProps = ModalComponentProps & {\n  pipeline: PipelineKind;\n};\n\nconst RemoveTriggerModal: React.FC<RemoveTriggerModalProps> = ({ pipeline, close }) => {\n  const { t } = useTranslation();\n  const initialValues: RemoveTriggerFormValues = {\n    selectedTrigger: null,\n  };\n\n  const handleSubmit = (\n    values: RemoveTriggerFormValues,\n    actions: FormikHelpers<RemoveTriggerFormValues>,\n  ) => {\n    return removeTrigger(values, pipeline)\n      .then(() => {\n        close();\n      })\n      .catch((e) => {\n        actions.setStatus({ submitError: e.message });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={removeTriggerSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          {...formikProps}\n          submitBtnText={t('pipelines-plugin~Remove')}\n          submitDanger\n          title={t('pipelines-plugin~Remove Trigger')}\n          close={close}\n        >\n          <RemoveTriggerForm pipeline={pipeline} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(RemoveTriggerModal);\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { errorModal } from '@console/internal/components/modals';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineKind, PipelineRunKind } from '../../../../types';\nimport { useUserAnnotationForManualStart } from '../../../pipelineruns/triggered-by';\nimport { usePipelinePVC } from '../../hooks';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { startPipelineSchema } from '../common/validation-utils';\nimport StartPipelineForm from './StartPipelineForm';\nimport { submitStartPipeline } from './submit-utils';\nimport { StartPipelineFormValues } from './types';\n\nexport interface StartPipelineModalProps {\n  pipeline: PipelineKind;\n  onSubmit?: (pipelineRun: PipelineRunKind) => void;\n}\nconst StartPipelineModal: React.FC<StartPipelineModalProps & ModalComponentProps> = ({\n  pipeline,\n  close,\n  onSubmit,\n}) => {\n  const { t } = useTranslation();\n  const userStartedAnnotation = useUserAnnotationForManualStart();\n  const [pipelinePVC, pipelinePVCLoaded] = usePipelinePVC(\n    pipeline.metadata?.name,\n    pipeline.metadata?.namespace,\n  );\n\n  if (!pipelinePVCLoaded) {\n    return <LoadingBox />;\n  }\n\n  const initialValues: StartPipelineFormValues = {\n    ...convertPipelineToModalData(pipeline, false, pipelinePVC?.metadata?.name),\n    secretOpen: false,\n  };\n\n  const handleSubmit = (values: StartPipelineFormValues, actions) => {\n    return submitStartPipeline(values, pipeline, null, userStartedAnnotation)\n      .then((res) => {\n        onSubmit && onSubmit(res);\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n        errorModal({ error: err.message });\n        close();\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={startPipelineSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          submitBtnText={t('pipelines-plugin~Start')}\n          title={t('pipelines-plugin~Start Pipeline')}\n          close={close}\n          {...formikProps}\n        >\n          <StartPipelineForm {...formikProps} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(StartPipelineModal);\n","import * as React from 'react';\nimport { KebabAction } from '@console/internal/components/utils';\nimport { useMenuActionsWithUserAnnotation } from './hooks';\nimport { ResourceKebab } from './ResourceKebab';\n\nconst ResourceKebabWithUserLabel: React.FC<React.ComponentProps<typeof ResourceKebab>> = ({\n  actions,\n  ...otherProps\n}) => {\n  const augmentedMenuActions: KebabAction[] = useMenuActionsWithUserAnnotation(actions);\n\n  return <ResourceKebab {...otherProps} actions={augmentedMenuActions} />;\n};\n\nexport default ResourceKebabWithUserLabel;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FieldArray, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { InputField, TextColumnField } from '@console/shared';\nimport { paramIsRequired } from '../../../../utils/common';\nimport AutoCompletePopover from '../../../shared/common/auto-complete/AutoCompletePopover';\nimport { CommonPipelineModalFormikValues, ModalParameter } from './types';\n\ntype ParametersSectionProps = {\n  autoCompleteValues?: string[];\n};\n\nconst PipelineParameterSection: React.FC<ParametersSectionProps> = ({ autoCompleteValues }) => {\n  const { t } = useTranslation();\n\n  const {\n    setFieldValue,\n    values: { parameters },\n  } = useFormikContext<CommonPipelineModalFormikValues>();\n\n  return (\n    <FieldArray\n      name=\"parameters\"\n      key=\"parameters-row\"\n      render={() =>\n        parameters.length > 0 && (\n          <FormSection title={t('pipelines-plugin~Parameters')} fullWidth>\n            {parameters.map((parameter: ModalParameter, index) => {\n              const name = `parameters.${index}.value`;\n              const isRequired = paramIsRequired(parameter);\n\n              const input = (ref?) => (\n                <InputField\n                  ref={ref}\n                  name={name}\n                  type={TextInputTypes.text}\n                  label={parameter.name}\n                  helpText={parameter.description}\n                  required={isRequired}\n                  autoComplete=\"off\"\n                />\n              );\n              return parameter.type === 'array' ? (\n                <TextColumnField\n                  name={name}\n                  label={parameter.name}\n                  helpText={parameter.description}\n                  required={isRequired}\n                  addLabel={`Add ${parameter.name}`}\n                  data-test={`${parameter.name}-text-column-field`}\n                >\n                  {({ name: arrayName, ...additionalProps }) =>\n                    autoCompleteValues ? (\n                      <AutoCompletePopover\n                        autoCompleteValues={autoCompleteValues}\n                        onAutoComplete={(value: string) => setFieldValue(name, value)}\n                      >\n                        {(callbackRef) => (\n                          <InputField\n                            ref={callbackRef}\n                            name={arrayName}\n                            {...additionalProps}\n                            autoComplete=\"off\"\n                          />\n                        )}\n                      </AutoCompletePopover>\n                    ) : (\n                      <InputField name={arrayName} {...additionalProps} autoComplete=\"off\" />\n                    )\n                  }\n                </TextColumnField>\n              ) : (\n                <React.Fragment key={parameter.name}>\n                  {autoCompleteValues ? (\n                    <AutoCompletePopover\n                      autoCompleteValues={autoCompleteValues}\n                      onAutoComplete={(value: string) => setFieldValue(name, value)}\n                    >\n                      {(callbackRef) => input(callbackRef)}\n                    </AutoCompletePopover>\n                  ) : (\n                    input()\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </FormSection>\n        )\n      }\n    />\n  );\n};\n\nexport default PipelineParameterSection;\n","import * as _ from 'lodash';\nimport { PipelineTask, TektonParam, TektonWorkspace } from '../../../../types';\nimport { PipelineBuilderTaskResources } from '../../../pipelines/pipeline-builder/types';\nimport { findTask } from '../../../pipelines/pipeline-builder/utils';\n\nexport const paramToAutoComplete = (param: TektonParam): string => `params.${param.name}`;\n\nexport const workspaceToAutoComplete = (workspace: TektonWorkspace): string =>\n  `workspaces.${workspace.name}.bound`;\n\nexport const taskToStatus = (task: PipelineTask): string => `tasks.${task.name}.status`;\n\nexport const taskToResult = (resources: PipelineBuilderTaskResources) => (\n  task: PipelineTask,\n): string[] | null => {\n  const taskResource = findTask(resources, task);\n  if (!taskResource?.spec.results) return null;\n\n  const {\n    spec: { results },\n  } = taskResource;\n  return results.map((result) => `tasks.${task.name}.results.${result.name}`);\n};\n\nexport const findTasksThatRunAfter = (tasks: PipelineTask[], taskName: string): string[] => {\n  const runAfterTasks = tasks.filter((task) => task.runAfter?.includes(taskName));\n\n  let runAfterNames = runAfterTasks.map((task) => task.name);\n  if (runAfterTasks.some((task) => task.runAfter)) {\n    runAfterNames = [\n      ...runAfterNames,\n      ...runAfterTasks.map((task) => findTasksThatRunAfter(tasks, task.name)).flat(),\n    ];\n  }\n\n  return _.uniq([taskName, ...runAfterNames]);\n};\n\nexport const computeAvailableResultACs = (\n  tasks: PipelineTask[],\n  taskResources: PipelineBuilderTaskResources,\n  taskIndex: number,\n): string[] => {\n  const thisTask: PipelineTask = tasks[taskIndex];\n  const invalidTasks: string[] = thisTask ? findTasksThatRunAfter(tasks, thisTask.name) : [];\n  return tasks\n    .filter((task: PipelineTask) => !invalidTasks.includes(task.name))\n    .map(taskToResult(taskResources))\n    .flat()\n    .filter((v) => !!v);\n};\n\nexport type CursorPosition = [number, number];\nexport const insertIntoValue = (value: string, position: CursorPosition, insertText = '') => {\n  const [startPos, endPos] = position;\n  return `${value.substring(0, startPos)}${insertText}${value.substring(endPos)}`;\n};\n","import * as React from 'react';\nimport { FieldArray, useField } from 'formik';\nimport { capitalize } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport PipelineResourceDropdownField from './PipelineResourceDropdownField';\nimport { PipelineModalFormResource } from './types';\n\ntype ResourceSectionType = {\n  formikIndex: number;\n  resource: PipelineModalFormResource;\n};\ntype ResourceSection = {\n  cluster?: ResourceSectionType[];\n  git?: ResourceSectionType[];\n  image?: ResourceSectionType[];\n  storage?: ResourceSectionType[];\n};\n\nconst reduceToSections = (\n  acc: ResourceSection,\n  resource: PipelineModalFormResource,\n  formikIndex: number,\n) => {\n  const resourceType = resource.data.type;\n\n  if (!resourceType) {\n    return acc;\n  }\n\n  return {\n    ...acc,\n    [resourceType]: [...(acc[resourceType] || []), { formikIndex, resource }],\n  };\n};\n\nconst PipelineResourceSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [{ value: resources }] = useField<PipelineModalFormResource[]>('resources');\n\n  const sections: ResourceSection = resources.reduce(reduceToSections, {} as ResourceSection);\n  const types = Object.keys(sections);\n\n  return (\n    <>\n      {types.map((type) => (\n        <FieldArray\n          name={type}\n          key={type}\n          render={() => {\n            const section = sections[type];\n\n            return (\n              <FormSection\n                title={t('pipelines-plugin~{{type}} resources', { type: capitalize(type) })}\n                fullWidth\n              >\n                {section.map((sectionData: ResourceSectionType) => {\n                  const { formikIndex, resource } = sectionData;\n\n                  return (\n                    <PipelineResourceDropdownField\n                      key={resource.name}\n                      name={`resources.${formikIndex}`}\n                      filterType={type}\n                      label={resource.name}\n                    />\n                  );\n                })}\n              </FormSection>\n            );\n          }}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PipelineResourceSection;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useFormikContext, FormikValues, useField } from 'formik';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { SecretModel, ConfigMapModel } from '@console/internal/models';\nimport { DropdownField } from '@console/shared';\nimport { VolumeTypes } from '../../const';\nimport MultipleResourceKeySelector from './MultipleResourceKeySelector';\nimport PVCDropdown from './PVCDropdown';\nimport { PipelineModalFormWorkspace } from './types';\nimport VolumeClaimTemplateForm from './VolumeClaimTemplateForm';\nimport './PipelineWorkspacesSection.scss';\n\nconst getVolumeTypeFields = (volumeType: VolumeTypes, index: number) => {\n  switch (volumeType) {\n    case VolumeTypes.Secret: {\n      return (\n        <MultipleResourceKeySelector\n          resourceNameField={`workspaces.${index}.data.secret.secretName`}\n          resourceKeysField={`workspaces.${index}.data.secret.items`}\n          label={i18next.t('pipelines-plugin~Secret')}\n          resourceModel={SecretModel}\n          addString={i18next.t('pipelines-plugin~Add item')}\n          required\n        />\n      );\n    }\n    case VolumeTypes.ConfigMap: {\n      return (\n        <MultipleResourceKeySelector\n          resourceNameField={`workspaces.${index}.data.configMap.name`}\n          resourceKeysField={`workspaces.${index}.data.configMap.items`}\n          label={i18next.t('pipelines-plugin~Config Map')}\n          resourceModel={ConfigMapModel}\n          addString={i18next.t('pipelines-plugin~Add item')}\n          required\n        />\n      );\n    }\n    case VolumeTypes.EmptyDirectory: {\n      return (\n        <div className=\"odc-PipelineWorkspacesSection__emptydir\">\n          <Alert\n            isInline\n            variant=\"info\"\n            title={i18next.t(\n              \"pipelines-plugin~Empty Directory doesn't support shared data between tasks.\",\n            )}\n          />\n        </div>\n      );\n    }\n    case VolumeTypes.VolumeClaimTemplate: {\n      return (\n        <VolumeClaimTemplateForm\n          name={`workspaces.${index}.data.volumeClaimTemplate`}\n          initialSizeValue=\"1\"\n          initialSizeUnit=\"Gi\"\n        />\n      );\n    }\n    case VolumeTypes.PVC: {\n      return <PVCDropdown name={`workspaces.${index}.data.persistentVolumeClaim.claimName`} />;\n    }\n    default:\n      return null;\n  }\n};\n\nconst PipelineWorkspacesSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { setFieldValue } = useFormikContext<FormikValues>();\n  const [{ value: workspaces }] = useField<PipelineModalFormWorkspace[]>('workspaces');\n\n  const volumeTypeOptions: { [type in VolumeTypes]: string } = {\n    [VolumeTypes.NoWorkspace]: t('pipelines-plugin~No workspace'),\n    [VolumeTypes.EmptyDirectory]: t('pipelines-plugin~Empty Directory'),\n    [VolumeTypes.ConfigMap]: t('pipelines-plugin~Config Map'),\n    [VolumeTypes.Secret]: t('pipelines-plugin~Secret'),\n    [VolumeTypes.PVC]: t('pipelines-plugin~PersistentVolumeClaim'),\n    [VolumeTypes.VolumeClaimTemplate]: t('pipelines-plugin~VolumeClaimTemplate'),\n  };\n\n  return (\n    workspaces.length > 0 && (\n      <FormSection title={t('pipelines-plugin~Workspaces')} fullWidth>\n        {workspaces.map((workspace, index) => {\n          return (\n            <div className=\"form-group\" key={workspace.name}>\n              <DropdownField\n                name={`workspaces.${index}.type`}\n                label={workspace.name}\n                items={\n                  workspace.optional\n                    ? volumeTypeOptions\n                    : _.omit(volumeTypeOptions, VolumeTypes.NoWorkspace)\n                }\n                onChange={(type) =>\n                  setFieldValue(\n                    `workspaces.${index}.data`,\n                    type === VolumeTypes.EmptyDirectory ? { emptyDir: {} } : {},\n                    // Validation is automatically done by DropdownField useFormikValidationFix\n                    false,\n                  )\n                }\n                fullWidth\n                required={!workspace.optional}\n                helpText={workspace.description}\n              />\n              {getVolumeTypeFields(workspace.type, index)}\n            </div>\n          );\n        })}\n      </FormSection>\n    )\n  );\n};\n\nexport default PipelineWorkspacesSection;\n","import * as React from 'react';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { LoadingBox } from '@console/internal/components/utils';\nimport { PipelineKind } from '../../../../types';\nimport { usePipelinePVC } from '../../hooks';\nimport ModalStructure from '../common/ModalStructure';\nimport { convertPipelineToModalData } from '../common/utils';\nimport { addTriggerSchema } from '../common/validation-utils';\nimport AddTriggerForm from './AddTriggerForm';\nimport { TRIGGER_BINDING_EMPTY } from './const';\nimport { submitTrigger } from './submit-utils';\nimport { AddTriggerFormValues } from './types';\n\ntype AddTriggerModalProps = ModalComponentProps & {\n  pipeline: PipelineKind;\n};\n\nconst AddTriggerModal: React.FC<AddTriggerModalProps> = ({ pipeline, close }) => {\n  const { t } = useTranslation();\n  const [pipelinePVC, pipelinePVCLoaded] = usePipelinePVC(\n    pipeline.metadata?.name,\n    pipeline.metadata?.namespace,\n  );\n\n  if (!pipelinePVCLoaded) {\n    return <LoadingBox />;\n  }\n  const initialValues: AddTriggerFormValues = {\n    ...convertPipelineToModalData(pipeline, true, pipelinePVC?.metadata?.name),\n    triggerBinding: {\n      name: TRIGGER_BINDING_EMPTY,\n      resource: null,\n    },\n  };\n\n  const handleSubmit = (values: AddTriggerFormValues, actions) => {\n    return submitTrigger(pipeline, values)\n      .then(() => {\n        close();\n      })\n      .catch((error) => {\n        actions.setStatus({\n          submitError: error?.message || t('pipelines-plugin~There was an unknown error'),\n        });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={addTriggerSchema()}\n    >\n      {(formikProps) => (\n        <ModalStructure\n          submitBtnText={t('pipelines-plugin~Add')}\n          title={t('pipelines-plugin~Add Trigger')}\n          close={close}\n          {...formikProps}\n        >\n          <AddTriggerForm {...formikProps} />\n        </ModalStructure>\n      )}\n    </Formik>\n  );\n};\n\nexport default createModalLauncher(AddTriggerModal);\n","import i18next from 'i18next';\nimport {\n  Condition,\n  PipelineRunKind,\n  PLRTaskRunData,\n  PLRTaskRunStep,\n  TaskRunKind,\n} from '../../../types';\nimport { pipelineRunStatus } from '../../../utils/pipeline-filter-reducer';\nimport { CombinedErrorDetails } from './log-snippet-types';\nimport { taskRunSnippetMessage } from './log-snippet-utils';\n\nexport const getPLRLogSnippet = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): CombinedErrorDetails => {\n  if (!pipelineRun?.status) {\n    // Lack information to pull from the Pipeline Run\n    return null;\n  }\n  if (pipelineRunStatus(pipelineRun) !== 'Failed') {\n    // Not in a failed state, no need to get the log snippet\n    return null;\n  }\n\n  const succeededCondition = pipelineRun.status.conditions?.find(\n    (condition: Condition) => condition.type === 'Succeeded',\n  );\n\n  if (succeededCondition?.status !== 'False') {\n    // Not in error / lack information\n    return null;\n  }\n\n  const tRuns: PLRTaskRunData[] = Object.values(taskRuns || pipelineRun.status.taskRuns || {});\n  const failedTaskRuns = tRuns.filter((taskRun) =>\n    taskRun?.status?.conditions?.find(\n      (condition) => condition.type === 'Succeeded' && condition.status === 'False',\n    ),\n  );\n  const isKnownReason = (reason: string): boolean => {\n    // known reasons https://tekton.dev/vault/pipelines-v0.21.0/pipelineruns/#monitoring-execution-status\n    return ['StoppedRunFinally', 'CancelledRunFinally', 'PipelineRunTimeout'].includes(reason);\n  };\n\n  // We're intentionally looking at the first failure because we have to start somewhere - they have the YAML still\n  const failedTaskRun = failedTaskRuns[0];\n\n  if (!failedTaskRun || isKnownReason(succeededCondition?.reason)) {\n    // No specific task run failure information, just print pipeline run status\n    return {\n      staticMessage:\n        succeededCondition.message || i18next.t('pipelines-plugin~Unknown failure condition'),\n      title: i18next.t('pipelines-plugin~Failure - check logs for details.'),\n    };\n  }\n\n  const containerName = failedTaskRun.status.steps?.find(\n    (step: PLRTaskRunStep) => step.terminated?.exitCode !== 0,\n  )?.container;\n\n  return taskRunSnippetMessage(failedTaskRun.pipelineTaskName, failedTaskRun.status, containerName);\n};\n","export { default as removeTriggerModal } from './triggers/RemoveTriggerModal';\nexport { default as startPipelineModal } from './start-pipeline/StartPipelineModal';\nexport { default as addTriggerModal } from './triggers/AddTriggerModal';\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Kebab, ResourceKebabProps } from '@console/internal/components/utils';\nimport { connectToModel } from '@console/internal/kinds';\n\nexport const ResourceKebab = connectToModel((props: ResourceKebabProps) => {\n  const { t } = useTranslation();\n  const { actions, kindObj, resource, isDisabled, customData, terminatingTooltip } = props;\n  if (!kindObj) {\n    return null;\n  }\n  const options = _.reject(\n    actions.map((a) => a(kindObj, resource, null, customData)),\n    'hidden',\n  );\n  return (\n    <Kebab\n      options={options}\n      key={resource.metadata.uid}\n      isDisabled={isDisabled ?? options.length === 0}\n      terminatingTooltip={\n        _.has(resource.metadata, 'deletionTimestamp')\n          ? terminatingTooltip || t('pipelines-plugin~Resource is being deleted.')\n          : ''\n      }\n    />\n  );\n});\n","import * as React from 'react';\nimport { FocusTrap, Menu, MenuList, MenuItem } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { WithScrollContainer } from '@console/internal/components/utils';\nimport Popper from '@console/shared/src/components/popper/Popper';\nimport useAutoComplete from './useAutoComplete';\n\ntype AutoCompletePopoverProps = {\n  autoCompleteValues: string[];\n  children: (contentRefCallback: (ref: HTMLElement) => void) => React.ReactNode;\n  onAutoComplete: (newValue: string) => void;\n};\n\nconst AutoCompletePopover: React.FC<AutoCompletePopoverProps> = ({\n  autoCompleteValues,\n  children,\n  onAutoComplete,\n}) => {\n  const { t } = useTranslation();\n\n  const {\n    contentRefCallback,\n    focusTrapProps,\n    insertAutoComplete,\n    popperProps,\n    menuWidth,\n    options,\n  } = useAutoComplete(autoCompleteValues, onAutoComplete);\n\n  return (\n    <>\n      {children(contentRefCallback)}\n      <WithScrollContainer>\n        {(scrollContainer) => (\n          <Popper\n            {...popperProps}\n            placement=\"bottom-start\"\n            closeOnEsc\n            closeOnOutsideClick\n            container={scrollContainer}\n            popperOptions={{\n              modifiers: {\n                hide: {\n                  enabled: false,\n                },\n                preventOverflow: {\n                  enabled: false,\n                },\n                flip: {\n                  enabled: false,\n                },\n              },\n            }}\n          >\n            <FocusTrap {...focusTrapProps}>\n              <Menu\n                style={{ maxHeight: 200, overflow: 'auto', width: menuWidth }}\n                onSelect={(event, itemId: number) => {\n                  const text = options[itemId];\n                  if (text) {\n                    insertAutoComplete(text);\n                  }\n                }}\n              >\n                <MenuList>\n                  {options.length === 0 ? (\n                    // There is a tab-index problem with the Menus from PF. If the first option is removed, it breaks tab indexes\n                    // Need key 0 because of PF bug\n                    <MenuItem key={0} itemId={-1} isDisabled>\n                      {t('pipelines-plugin~No options matching your criteria')}\n                    </MenuItem>\n                  ) : (\n                    options.map((value, idx) => (\n                      // Using index-based keys to get around PF bug, see above\n                      // eslint-disable-next-line react/no-array-index-key\n                      <MenuItem key={idx} itemId={idx}>\n                        {value}\n                      </MenuItem>\n                    ))\n                  )}\n                </MenuList>\n              </Menu>\n            </FocusTrap>\n          </Popper>\n        )}\n      </WithScrollContainer>\n    </>\n  );\n};\n\nexport default AutoCompletePopover;\n","import { get } from 'lodash';\nimport { TaskKind, TektonParam, TektonResource, TektonResourceGroup } from '../../types';\n\nexport type TaskKindAlpha = TaskKind & {\n  spec: {\n    inputs?: {\n      params?: TektonParam[];\n      resources?: TektonResource[];\n    };\n    outputs?: {\n      resources?: TektonResource[];\n    };\n  };\n};\n\nenum PATHS {\n  alphaInputResources = 'spec.inputs.resources',\n  alphaOutputResources = 'spec.outputs.resources',\n  alphaParameters = 'spec.inputs.params',\n\n  betaInputResources = 'spec.resources.inputs',\n  betaOutputResources = 'spec.resources.outputs',\n  betaParameters = 'spec.params',\n}\n\nexport const getTaskResources = (\n  taskResource: TaskKind | TaskKindAlpha,\n): TektonResourceGroup<TektonResource> => {\n  const inputs =\n    get(taskResource, PATHS.alphaInputResources) || get(taskResource, PATHS.betaInputResources);\n  const outputs =\n    get(taskResource, PATHS.alphaOutputResources) || get(taskResource, PATHS.betaOutputResources);\n\n  if (inputs || outputs) {\n    return {\n      inputs,\n      outputs,\n    };\n  }\n\n  return {};\n};\n\nexport const getTaskParameters = (taskResource: TaskKind | TaskKindAlpha): TektonParam[] => {\n  return get(taskResource, PATHS.alphaParameters) || get(taskResource, PATHS.betaParameters) || [];\n};\n","import { useFormikContext } from 'formik';\nimport { AddTriggerFormValues } from '../../../pipelines/modals/triggers/types';\nimport {\n  PipelineBuilderFormikValues,\n  SelectedBuilderTask,\n} from '../../../pipelines/pipeline-builder/types';\nimport {\n  computeAvailableResultACs,\n  paramToAutoComplete,\n  taskToStatus,\n  workspaceToAutoComplete,\n} from './autoCompleteUtils';\n\nexport const useBuilderParams = (selectedData: SelectedBuilderTask): string[] => {\n  const {\n    values: {\n      formData: { params, tasks, workspaces },\n      taskResources,\n    },\n  } = useFormikContext<PipelineBuilderFormikValues>();\n  const { taskIndex, isFinallyTask } = selectedData || {};\n\n  const paramACs: string[] = params.map(paramToAutoComplete);\n  const workspaceACs: string[] = workspaces.map(workspaceToAutoComplete);\n\n  const contextualACs: string[] = [\n    'context.pipelineRun.name',\n    'context.pipelineRun.namespace',\n    'context.pipelineRun.uid',\n    'context.pipeline.name',\n  ];\n\n  let finallyStatusACs: string[] = [];\n  if (isFinallyTask) {\n    finallyStatusACs = tasks.map(taskToStatus);\n  }\n\n  const taskResultACs: string[] = computeAvailableResultACs(tasks, taskResources, taskIndex);\n\n  return [...paramACs, ...workspaceACs, ...contextualACs, ...finallyStatusACs, ...taskResultACs];\n};\n\nexport const useAddTriggerParams = (): string[] => {\n  const {\n    values: { triggerBinding },\n  } = useFormikContext<AddTriggerFormValues>();\n\n  const bindingParamACs: string[] =\n    triggerBinding?.resource?.spec?.params?.map((param) => `tt.${paramToAutoComplete(param)}`) ||\n    [];\n\n  const staticACs: string[] = ['uid'];\n\n  return [...bindingParamACs, ...staticACs];\n};\n","import i18next from 'i18next';\nimport { Condition, TaskRunStatus } from '../../../types';\nimport { CombinedErrorDetails } from './log-snippet-types';\n\nconst joinConditions = (conditions: Condition[]) =>\n  conditions.map((condition) => condition.message).join('\\n') ||\n  i18next.t('pipelines-plugin~Unknown failure condition');\n\nexport const taskRunSnippetMessage = (\n  taskName: string,\n  taskRunStatus: TaskRunStatus,\n  containerName: string,\n): CombinedErrorDetails => {\n  if (!taskRunStatus?.podName || !containerName) {\n    // Not enough to go to the logs, print all the conditions messages together\n    return {\n      staticMessage: joinConditions(taskRunStatus.conditions),\n      title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n        taskName,\n      }),\n    };\n  }\n  // We don't know enough but have enough to locate the logs\n  return {\n    containerName,\n    podName: taskRunStatus.podName,\n    title: i18next.t('pipelines-plugin~Failure on task {{taskName}} - check logs for details.', {\n      taskName,\n    }),\n  };\n};\n","import * as React from 'react';\nimport { k8sGet } from '@console/internal/module/k8s';\nimport { PipelineModel } from '../../../models';\nimport { PipelineKind, PipelineRunKind } from '../../../types';\nimport { getPipelineFromPipelineRun } from '../../../utils/pipeline-augment';\n\nexport const usePipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const [pipeline, setPipeline] = React.useState<PipelineKind>(null);\n  React.useEffect(() => {\n    const emptyPipeline: PipelineKind = { spec: { tasks: [] } };\n    const pipelineFromPipelineRun = getPipelineFromPipelineRun(pipelineRun);\n    if (pipelineFromPipelineRun) {\n      setPipeline(pipelineFromPipelineRun);\n    } else if (pipelineRun.spec.pipelineRef?.name) {\n      const pipelineName = pipelineRun.spec.pipelineRef.name;\n      k8sGet(PipelineModel, pipelineName, pipelineRun.metadata.namespace)\n        .then((newPipeline: PipelineKind) => {\n          setPipeline(newPipeline);\n        })\n        .catch(() => setPipeline(emptyPipeline));\n    } else {\n      setPipeline(emptyPipeline);\n    }\n  }, [pipelineRun]);\n  return pipeline;\n};\n","import { k8sKill, k8sList, k8sPatch } from '@console/internal/module/k8s';\nimport { EventListenerModel, TriggerTemplateModel } from '../../../../models';\nimport { PipelineKind } from '../../../../types';\nimport { EventListenerKind, EventListenerKindTrigger } from '../../resource-types';\nimport { RemoveTriggerFormValues } from './types';\n\nexport const removeTrigger = async (values: RemoveTriggerFormValues, pipeline: PipelineKind) => {\n  const ns = pipeline.metadata.namespace;\n  const selectedTriggerTemplate = values.selectedTrigger;\n\n  // Remove the selected TriggerTemplate\n  await k8sKill(TriggerTemplateModel, {\n    metadata: { name: selectedTriggerTemplate, namespace: ns },\n  });\n\n  const triggerMatchesTriggerTemplate = ({ template }: EventListenerKindTrigger) => {\n    return template?.ref === selectedTriggerTemplate || template?.name === selectedTriggerTemplate;\n  };\n\n  // Get all the event listeners so we can update their references\n  const eventListeners: EventListenerKind[] = await k8sList(EventListenerModel, { ns });\n  const matchingEventListeners = eventListeners.filter(({ spec: { triggers } }) =>\n    triggers.find(triggerMatchesTriggerTemplate),\n  );\n\n  const singleTriggers = ({ spec: { triggers } }) => triggers.length === 1;\n\n  // Delete all EventListeners that only had the one trigger\n  const deletableEventListeners: EventListenerKind[] = matchingEventListeners.filter(\n    singleTriggers,\n  );\n  await Promise.all(\n    deletableEventListeners.map((eventListener) => k8sKill(EventListenerModel, eventListener)),\n  );\n\n  // Update all EventListeners that had more than one trigger\n  const updatableEventListeners: EventListenerKind[] = matchingEventListeners.filter(\n    (eventListener) => !singleTriggers(eventListener),\n  );\n  await Promise.all(\n    updatableEventListeners.map((eventListener) =>\n      k8sPatch(EventListenerModel, eventListener, [\n        {\n          op: 'replace',\n          path: '/spec/triggers',\n          value: eventListener.spec.triggers.filter(triggerMatchesTriggerTemplate),\n        },\n      ]),\n    ),\n  );\n\n  return Promise.resolve();\n};\n","import * as React from 'react';\nimport { Icon, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { global_warning_color_100 as warningColor } from '@patternfly/react-tokens/dist/js/global_warning_color_100';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { PipelineKind } from '../../../../types';\nimport TriggerTemplateSelector from './TriggerTemplateSelector';\n\ntype RemoveTriggerFormProps = {\n  pipeline: PipelineKind;\n};\n\nconst RemoveTriggerForm: React.FC<RemoveTriggerFormProps> = (props) => {\n  const { t } = useTranslation();\n  const { pipeline } = props;\n  const pipelineName = pipeline.metadata.name;\n\n  return (\n    <Split className=\"odc-modal-content\" hasGutter>\n      <SplitItem>\n        <Icon size=\"md\">\n          <ExclamationTriangleIcon color={warningColor.value} />\n        </Icon>\n      </SplitItem>\n      <SplitItem isFilled>\n        <p className=\"co-break-word\">\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Select the trigger to remove from pipeline <b>{{ pipelineName }}</b>.\n          </Trans>\n        </p>\n        <TriggerTemplateSelector\n          name=\"selectedTrigger\"\n          placeholder={t('pipelines-plugin~Select TriggerTemplate')}\n          pipeline={pipeline}\n        />\n      </SplitItem>\n    </Split>\n  );\n};\n\nexport default RemoveTriggerForm;\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { DropdownField } from '@console/shared/src';\nimport { PipelineKind } from '../../../../types';\nimport { RouteTemplate, usePipelineTriggerTemplateNames } from '../../utils/triggers';\n\nimport './TriggerTemplateSelector.scss';\n\ntype TriggerTemplateSelectorProps = {\n  name: string;\n  pipeline: PipelineKind;\n  placeholder: string;\n};\n\nconst TriggerTemplateSelector: React.FC<TriggerTemplateSelectorProps> = (props) => {\n  const { t } = useTranslation();\n  const { name, pipeline, placeholder } = props;\n  const {\n    metadata: { name: pipelineName, namespace },\n  } = pipeline;\n\n  const [field] = useField(name);\n  const selection = field.value;\n\n  const templateNames: RouteTemplate[] =\n    usePipelineTriggerTemplateNames(pipelineName, namespace) || [];\n  const items = templateNames.reduce(\n    (acc, { triggerTemplateName }) => ({ ...acc, [triggerTemplateName]: triggerTemplateName }),\n    {},\n  );\n\n  return (\n    <div className=\"odc-trigger-template-selector\">\n      <DropdownField\n        fullWidth\n        disabled={templateNames.length === 0}\n        items={items}\n        name={name}\n        title={placeholder}\n      />\n      {selection ? (\n        <div className=\"co-break-word odc-trigger-template-selector__confirmationMessage\">\n          <Trans t={t} ns=\"pipelines-plugin\">\n            Are you sure you want to remove <b>{{ selection }}</b> from <b>{{ pipelineName }}</b>?\n          </Trans>\n        </div>\n      ) : (\n        <div className=\"odc-trigger-template-selector__pfModalHack\" />\n      )}\n    </div>\n  );\n};\n\nexport default TriggerTemplateSelector;\n","import i18next from 'i18next';\nimport * as yup from 'yup';\n\nexport const removeTriggerSchema = () =>\n  yup.object().shape({\n    selectedTrigger: yup.string().required(i18next.t('pipelines-plugin~Required')),\n  });\n","import * as React from 'react';\nimport { FormikProps } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport PipelineParameterSection from '../common/PipelineParameterSection';\nimport PipelineResourceSection from '../common/PipelineResourceSection';\nimport PipelineSecretSection from '../common/PipelineSecretSection';\nimport PipelineWorkspacesSection from '../common/PipelineWorkspacesSection';\nimport { StartPipelineFormValues } from './types';\n\nconst StartPipelineForm: React.FC<FormikProps<StartPipelineFormValues>> = () => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <PipelineParameterSection />\n      <PipelineResourceSection />\n      <PipelineWorkspacesSection />\n      <FormSection title={t('pipelines-plugin~Advanced options')} fullWidth>\n        <PipelineSecretSection />\n      </FormSection>\n    </>\n  );\n};\n\nexport default StartPipelineForm;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { CursorPosition, insertIntoValue } from './autoCompleteUtils';\n\ntype ElementType = HTMLInputElement | HTMLTextAreaElement;\ntype AutoCompleteHook = {\n  contentRefCallback: (contentNode: ElementType) => void;\n  focusTrapProps: {\n    active: boolean;\n    focusTrapOptions: {\n      clickOutsideDeactivates: boolean;\n      onDeactivate: () => void;\n      fallbackFocus: ElementType;\n    };\n  };\n  insertAutoComplete: (newValue: string) => void;\n  menuWidth: number;\n  options: string[];\n  popperProps: {\n    open: boolean;\n    onRequestClose: () => void;\n    reference: () => ElementType;\n  };\n};\n\ntype ShouldOpenCallback = (event) => boolean;\ntype MenuKeyWatcherHook = {\n  isOpen: boolean;\n  shouldOpen: ShouldOpenCallback;\n  closeMenu: () => void;\n};\n\ntype SetAutoCompleteCallback = (newValue: string) => void;\n\ntype SetFilterOptions = (filterValue: string) => void;\ntype FilterOptionsHook = [string[], SetFilterOptions];\n\nconst PARAM_REFERENCE = '$(';\nconst PARAM_REFERENCE_CHARS = PARAM_REFERENCE.split('');\n\n/**\n * Tracks open state + manages keystrokes to open.\n */\nconst useOpenMenuKeyWatcher = (): MenuKeyWatcherHook => {\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n\n  const shouldOpen = React.useCallback<ShouldOpenCallback>(\n    (event) => {\n      const { key, code, ctrlKey } = event;\n\n      if (code === 'Space' && ctrlKey) {\n        // Hotkey to open\n        setOpen(true);\n        return true;\n      }\n\n      if (!PARAM_REFERENCE_CHARS.includes(key) || isOpen) {\n        // Ignore event, does not apply to opening\n        return false;\n      }\n\n      const cursorPos = event.target.selectionStart;\n      // Go back the character we added and then one more to get the previous character\n      const lastCharacter = event.target.value[cursorPos - 2];\n\n      if (lastCharacter === PARAM_REFERENCE_CHARS[0] && key === PARAM_REFERENCE_CHARS[1]) {\n        // Manual open\n        setOpen(true);\n        return true;\n      }\n\n      return false;\n    },\n    [isOpen],\n  );\n\n  return { isOpen, shouldOpen, closeMenu: React.useCallback(() => setOpen(false), []) };\n};\n\n/**\n * Filters options that are provided based on a setFilter.\n */\nconst useFilterOptions = (options: string[]): FilterOptionsHook => {\n  type FilterMap = { [singleValue: string]: string };\n\n  const [filteredOptions, setFilteredOptions] = React.useState<string[]>(options);\n  const filterMappings = React.useRef<FilterMap>({});\n\n  React.useEffect(() => {\n    filterMappings.current = options.reduce((acc: FilterMap, option: string, idx: number) => {\n      const optionPartMap = option.split('.').reduce((optionAcc, optionPart: string) => {\n        return {\n          ...optionAcc,\n          // startsWith value + unique identifier to allow multiple overlapping parts\n          [`${optionPart}|${idx}`]: option,\n        };\n      }, {});\n\n      return {\n        ...acc,\n        ...optionPartMap,\n        [option]: option,\n      };\n    }, {});\n  }, [options]);\n\n  const setFilter: SetFilterOptions = React.useCallback(\n    (newFilterValue: string) => {\n      if (!newFilterValue) {\n        setFilteredOptions(options);\n        return;\n      }\n\n      const newOptions: string[] = _.uniq(\n        Object.keys(filterMappings.current)\n          .filter((value: string) => value.toLowerCase().startsWith(newFilterValue.toLowerCase()))\n          .map((value: string) => filterMappings.current[value]),\n      );\n      setFilteredOptions(newOptions);\n    },\n    [options],\n  );\n\n  return [filteredOptions, setFilter];\n};\n\n/**\n * Listens to the node in various ways to prefer functions of AutoComplete.\n */\nconst useNodeListener = (\n  cursorPosition: React.MutableRefObject<CursorPosition>,\n  menuOptions: MenuKeyWatcherHook,\n  filterOptions: FilterOptionsHook,\n  setFocusingOptions: (isFocusing: boolean) => void,\n  closeCleanup: () => void,\n): [React.MutableRefObject<ElementType>, (node: ElementType) => void] => {\n  const [node, setNode] = React.useState<ElementType>(null);\n  const nodeRef = React.useRef<ElementType>(null);\n  nodeRef.current = node;\n\n  const { isOpen, shouldOpen } = menuOptions;\n  const [, setFilter] = filterOptions;\n\n  const onKeyCallback = React.useCallback(\n    (e) => {\n      const applyFilterAtCursor = () => {\n        const filterValue = nodeRef.current.value.substring(\n          cursorPosition.current[0],\n          cursorPosition.current[1],\n        );\n        setFilter(filterValue);\n      };\n\n      if (isOpen) {\n        cursorPosition.current = [cursorPosition.current[0], nodeRef.current.selectionEnd];\n\n        if (cursorPosition.current[1] < cursorPosition.current[0]) {\n          // User moved before the start of the autoComplete trigger, close\n          closeCleanup();\n          return;\n        }\n\n        applyFilterAtCursor();\n      } else {\n        cursorPosition.current = [nodeRef.current.selectionStart, nodeRef.current.selectionEnd];\n        const isOpening = shouldOpen(e);\n\n        if (isOpening) {\n          // In the case they are highlighting text, invoke auto complete immediately on the text\n          applyFilterAtCursor();\n        }\n      }\n    },\n    [isOpen, setFilter, shouldOpen, closeCleanup, cursorPosition],\n  );\n\n  const focusDropdownCallback = React.useCallback(\n    (e) => {\n      if (!isOpen) return;\n\n      if (e.code === 'Tab' || e.code === 'ArrowDown') {\n        e.stopPropagation();\n        e.preventDefault();\n        setFocusingOptions(true);\n      }\n    },\n    [isOpen, setFocusingOptions],\n  );\n\n  React.useEffect(() => {\n    if (node) {\n      node.addEventListener('keydown', focusDropdownCallback);\n      node.addEventListener('keyup', onKeyCallback);\n    }\n\n    return () => {\n      if (node) {\n        node.removeEventListener('keydown', focusDropdownCallback);\n        node.removeEventListener('keyup', onKeyCallback);\n      }\n    };\n  }, [focusDropdownCallback, onKeyCallback, node]);\n\n  return [nodeRef, (contentNode) => setNode(contentNode)];\n};\n\n/**\n * Manages auto complete state.\n */\nconst useAutoComplete = (\n  autoCompleteValues: string[],\n  onAutoComplete: SetAutoCompleteCallback,\n): AutoCompleteHook => {\n  const cursorPosition = React.useRef<CursorPosition>([0, 0]);\n  const [focusingOptions, setFocusingOptions] = React.useState<boolean>(false);\n  const menuOptions = useOpenMenuKeyWatcher();\n  const filterOptions = useFilterOptions(autoCompleteValues);\n\n  const { isOpen, closeMenu } = menuOptions;\n  const [options, setFilter] = filterOptions;\n\n  const closeCleanup = React.useCallback(() => {\n    closeMenu();\n    setFilter('');\n    setFocusingOptions(false);\n    cursorPosition.current = [0, 0];\n  }, [closeMenu, setFilter]);\n\n  const [nodeRef, setNodeRef] = useNodeListener(\n    cursorPosition,\n    menuOptions,\n    filterOptions,\n    setFocusingOptions,\n    closeCleanup,\n  );\n\n  const insertAutoComplete = React.useCallback(\n    (newValue: string) => {\n      // Look for the PARAM_REFERENCE prefix to see if we need to add it\n      const leftCapturePoint = cursorPosition.current[0] - PARAM_REFERENCE.length;\n      const prefix =\n        leftCapturePoint >= 0\n          ? nodeRef.current.value.substr(leftCapturePoint, PARAM_REFERENCE.length)\n          : null;\n      const hasPrefix = prefix === PARAM_REFERENCE;\n\n      // Update the value + the node\n      const insertValue = `${hasPrefix ? '' : PARAM_REFERENCE}${newValue})`;\n      onAutoComplete(insertIntoValue(nodeRef.current.value, cursorPosition.current, insertValue));\n\n      // Make sure the cursor remains at the end of the inserted text so they can continue typing a prefix (if desired)\n      const cursorEndPoint: number = cursorPosition.current[0] + insertValue.length;\n      setTimeout(() => {\n        nodeRef.current.setSelectionRange(cursorEndPoint, cursorEndPoint);\n      }, 0);\n\n      closeCleanup();\n    },\n    [nodeRef, closeCleanup, onAutoComplete],\n  );\n\n  return {\n    contentRefCallback: setNodeRef,\n    focusTrapProps: {\n      active: focusingOptions,\n      focusTrapOptions: {\n        clickOutsideDeactivates: true,\n        onDeactivate: closeCleanup,\n        fallbackFocus: nodeRef.current,\n      },\n    },\n    insertAutoComplete,\n    menuWidth: nodeRef.current?.getBoundingClientRect().width || 300,\n    options,\n    popperProps: {\n      open: isOpen,\n      onRequestClose: closeCleanup,\n      reference: () => nodeRef.current,\n    },\n  };\n};\n\nexport default useAutoComplete;\n","import * as React from 'react';\nimport { FormGroup } from '@patternfly/react-core';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { DropdownFieldProps, useFormikValidationFix } from '@console/shared';\nimport PipelineResourceParam from '../../pipeline-resource/PipelineResourceParam';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\nimport PipelineResourceDropdown from './PipelineResourceDropdown';\nimport { PipelineModalFormResource } from './types';\n\ntype PipelineResourceDropdownFieldProps = DropdownFieldProps & {\n  filterType?: string;\n};\nconst PipelineResourceDropdownField: React.FC<PipelineResourceDropdownFieldProps> = (props) => {\n  const { filterType, name, label } = props;\n\n  const [field] = useField<PipelineModalFormResource>(name);\n  const { values } = useFormikContext<FormikValues>();\n  const { namespace } = values;\n  const {\n    value: { selection },\n  } = field;\n  const creating = selection === CREATE_PIPELINE_RESOURCE;\n\n  useFormikValidationFix(field.value);\n\n  return (\n    <>\n      <FormGroup fieldId={name} label={label} isRequired>\n        <PipelineResourceDropdown\n          {...props}\n          autoSelect={selection === ''}\n          filterType={filterType}\n          namespace={namespace}\n          name={`${name}.selection`}\n        />\n      </FormGroup>\n\n      {creating && <PipelineResourceParam name={`${name}.data`} type={filterType} />}\n    </>\n  );\n};\n\nexport default PipelineResourceDropdownField;\n","import * as React from 'react';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { PipelineResourceType } from '../const';\nimport PipelineClusterOptions from './PipelineClusterOptions';\nimport PipelineGitOptions from './PipelineGitOptions';\nimport PipelineImageOptions from './PipelineImageOptions';\nimport PipelineStorageOptions from './PipelineStorageOptions';\n\nexport interface PipelineResourceParamProps {\n  name: string;\n  type: string;\n}\n\nconst PipelineResourceParam: React.FC<PipelineResourceParamProps> = (props) => {\n  const { name, type } = props;\n\n  const renderTypeFields = () => {\n    switch (type) {\n      case PipelineResourceType.git:\n        return <PipelineGitOptions prefixName={name} />;\n      case PipelineResourceType.image:\n        return <PipelineImageOptions prefixName={name} />;\n      case PipelineResourceType.cluster:\n        return <PipelineClusterOptions prefixName={name} />;\n      case PipelineResourceType.storage:\n        return <PipelineStorageOptions prefixName={name} />;\n      default:\n        return null;\n    }\n  };\n\n  return <FormSection fullWidth>{renderTypeFields()}</FormSection>;\n};\n\nexport default PipelineResourceParam;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField, DroppableFileInputField } from '@console/shared';\n\ntype PipelineClusterOptionsProps = { prefixName: string };\n\nconst PipelineClusterOptions: React.FC<PipelineClusterOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.name`}\n        label={t('pipelines-plugin~Name')}\n        helpText={t('pipelines-plugin~Name of the cluster.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.url`}\n        label={t('pipelines-plugin~URL')}\n        helpText={t('pipelines-plugin~Host URL of the control plane node.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.username`}\n        label={t('pipelines-plugin~Username')}\n        helpText={t('pipelines-plugin~The user with access to the cluster.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.password}\n        name={`${prefixName}.params.password`}\n        label={t('pipelines-plugin~Password')}\n        helpText={t('pipelines-plugin~Please provide password.')}\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.insecure`}\n        label={t('pipelines-plugin~Insecure')}\n        helpText={t(\n          'pipelines-plugin~Indicate server should be accessed without verifying the TLS certificate.',\n        )}\n      />\n      <DroppableFileInputField\n        name={`${prefixName}.secrets.cadata`}\n        label={t('pipelines-plugin~Cadata')}\n        helpText={t(\n          'pipelines-plugin~The PEM format certificate. Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n        )}\n        required\n      />\n      <DroppableFileInputField\n        name={`${prefixName}.secrets.token`}\n        label={t('pipelines-plugin~Token')}\n        helpText={t(\n          'pipelines-plugin~Upload file by dragging & dropping, selecting it, or pasting from the clipboard.',\n        )}\n        required\n      />\n    </>\n  );\n};\n\nexport default PipelineClusterOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineGitOptionsProps = { prefixName: string };\n\nconst PipelineGitOptions: React.FC<PipelineGitOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.url`}\n        label={t('pipelines-plugin~URL')}\n        helpText={t('pipelines-plugin~Please provide Git URL.')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.revision`}\n        label={t('pipelines-plugin~Revision')}\n        helpText={t('pipelines-plugin~Please provide revisions. i.e master')}\n      />\n    </>\n  );\n};\n\nexport default PipelineGitOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineImageOptionsProps = { prefixName: string };\n\nconst PipelineImageOptions: React.FC<PipelineImageOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <InputField\n      type={TextInputTypes.text}\n      name={`${prefixName}.params.url`}\n      label={t('pipelines-plugin~URL')}\n      helpText={t('pipelines-plugin~Please provide Image URL.')}\n      required\n    />\n  );\n};\n\nexport default PipelineImageOptions;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { InputField } from '@console/shared';\n\ntype PipelineStorageOptionsProps = { prefixName: string };\n\nconst PipelineStorageOptions: React.FC<PipelineStorageOptionsProps> = ({ prefixName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.type`}\n        label={t('pipelines-plugin~Type')}\n        helpText={t('pipelines-plugin~Represents the type of blob storage i.e gcs')}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.location`}\n        label={t('pipelines-plugin~Location')}\n        helpText={t(\n          'pipelines-plugin~Represents the location of the blob storage i.e gs://some-private-bucket',\n        )}\n        required\n      />\n      <InputField\n        type={TextInputTypes.text}\n        name={`${prefixName}.params.dir`}\n        label={t('pipelines-plugin~Directory')}\n        helpText={t('pipelines-plugin~Represents whether the blob storage is a directory or not')}\n      />\n    </>\n  );\n};\n\nexport default PipelineStorageOptions;\n","import * as React from 'react';\nimport { FormikValues, useField, useFormikContext } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { FormSelectField, FormSelectFieldOption } from '@console/shared';\nimport { PipelineResourceModel } from '../../../../models';\nimport { PipelineResourceKind } from '../../../../types';\nimport { CREATE_PIPELINE_RESOURCE } from './const';\n\nimport './PipelineResourceDropdown.scss';\n\ntype PipelineResourceDropdownProps = {\n  autoSelect?: boolean;\n  filterType: string;\n  name: string;\n  namespace: string;\n};\n\nconst PipelineResourceDropdown: React.FC<PipelineResourceDropdownProps> = (props) => {\n  const { t } = useTranslation();\n  const { autoSelect, filterType, name, namespace } = props;\n\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [, { touched }] = useField(name);\n\n  const [resources, loaded, error] = useK8sWatchResource<PipelineResourceKind[]>({\n    isList: true,\n    namespace,\n    kind: referenceForModel(PipelineResourceModel),\n  });\n\n  const availableResources: PipelineResourceKind[] = resources.filter(\n    (resource) => resource.spec.type === filterType,\n  );\n\n  const canAutoSelect = autoSelect && !touched && loaded && !error;\n  React.useEffect(() => {\n    if (canAutoSelect) {\n      if (availableResources.length === 0) {\n        setFieldValue(name, CREATE_PIPELINE_RESOURCE);\n      } else {\n        setFieldValue(name, availableResources[0].metadata.name);\n      }\n      setFieldTouched(name);\n    }\n  }, [canAutoSelect, name, availableResources, setFieldTouched, setFieldValue]);\n\n  const options: FormSelectFieldOption<string>[] = [\n    {\n      value: '',\n      label: t('pipelines-plugin~Select Pipeline resource'),\n      isPlaceholder: true,\n      isDisabled: true,\n    },\n    {\n      label: t('pipelines-plugin~Create Pipeline resource'),\n      value: CREATE_PIPELINE_RESOURCE,\n    },\n    ...availableResources.map(\n      (resource): FormSelectFieldOption => {\n        const resourceName = resource.metadata.name;\n        const url = _.find(resource.spec.params, ['name', 'url'])?.value || '';\n        const label = url.trim().length > 0 ? `${url} (${resourceName})` : resourceName;\n\n        return { label, value: resourceName };\n      },\n    ),\n  ];\n\n  if (!loaded) {\n    return <LoadingInline />;\n  }\n\n  return (\n    <FormSelectField\n      name={name}\n      className=\"odc-pipeline-resource-dropdown\"\n      options={options}\n      isDisabled={loaded && availableResources.length === 0}\n    />\n  );\n};\n\nexport default PipelineResourceDropdown;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { Formik, useField, useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ExpandCollapse } from '@console/internal/components/utils';\nimport { SecretModel } from '@console/internal/models';\nimport { k8sCreate } from '@console/internal/module/k8s';\nimport {\n  associateServiceAccountToSecret,\n  getSecretAnnotations,\n} from '../../../../utils/pipeline-utils';\nimport { SecretAnnotationId } from '../../const';\nimport SecretForm from './SecretForm';\nimport SecretsList from './SecretsList';\nimport { CommonPipelineModalFormikValues } from './types';\nimport { advancedSectionValidationSchema } from './validation-utils';\n\nimport './PipelineSecretSection.scss';\n\nconst initialValues = {\n  secretName: '',\n  annotations: { key: SecretAnnotationId.Image, value: '' },\n  type: SecretType.dockerconfigjson,\n  formData: {},\n};\n\nconst PipelineSecretSection: React.FC = () => {\n  const { t } = useTranslation();\n  const [secretOpenField] = useField<boolean>('secretOpen');\n  const {\n    setFieldValue,\n    values: { namespace },\n  } = useFormikContext<CommonPipelineModalFormikValues>();\n\n  const handleSubmit = (values, actions) => {\n    const newSecret = {\n      apiVersion: SecretModel.apiVersion,\n      kind: SecretModel.kind,\n      metadata: {\n        name: values.secretName,\n        namespace,\n        annotations: getSecretAnnotations(values.annotations),\n      },\n      type: values.type,\n      stringData: values.formData,\n    };\n    return k8sCreate(SecretModel, newSecret)\n      .then((resp) => {\n        setFieldValue(secretOpenField.name, false);\n        associateServiceAccountToSecret(\n          resp,\n          namespace,\n          values.annotations.key === SecretAnnotationId.Image,\n        );\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err.message });\n      });\n  };\n\n  const handleReset = (values, actions) => {\n    actions.resetForm({ values: initialValues, status: {} });\n    setFieldValue(secretOpenField.name, false);\n  };\n\n  return (\n    <ExpandCollapse\n      textExpanded={t('pipelines-plugin~Hide credential options')}\n      textCollapsed={t('pipelines-plugin~Show credential options')}\n    >\n      <div className=\"odc-pipeline-secret-section\">\n        <p>\n          {t(\n            'pipelines-plugin~The following secrets are available for all pipelines in this namespace to authenticate to the specified Git server or Image registry:',\n          )}\n        </p>\n        <div className=\"odc-pipeline-secret-section__secrets\">\n          <SecretsList namespace={namespace} />\n          {secretOpenField.value ? (\n            <div className=\"odc-pipeline-secret-section__secret-form\">\n              <Formik\n                initialValues={initialValues}\n                validationSchema={advancedSectionValidationSchema()}\n                onSubmit={handleSubmit}\n                onReset={handleReset}\n              >\n                {(formikProps) => <SecretForm {...formikProps} />}\n              </Formik>\n            </div>\n          ) : (\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                setFieldValue(secretOpenField.name, true);\n              }}\n              className=\"odc-pipeline-secret-section__secret-action\"\n              icon={<PlusCircleIcon />}\n            >\n              {t('pipelines-plugin~Add Secret')}\n            </Button>\n          )}\n        </div>\n      </div>\n    </ExpandCollapse>\n  );\n};\n\nexport default PipelineSecretSection;\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  SecretType,\n  BasicAuthSubform,\n  SSHAuthSubform,\n  CreateConfigSubform,\n} from '@console/internal/components/secrets/create-secret';\nimport { ButtonBar } from '@console/internal/components/utils';\nimport { DropdownField, InputField, ActionGroupWithIcons } from '@console/shared';\nimport { SecretAnnotationId } from '../../const';\nimport './SecretForm.scss';\n\nconst renderSecretForm = (\n  type: SecretType,\n  stringData: {\n    [key: string]: any;\n  },\n  onDataChanged: (value: string) => void,\n) => {\n  switch (type) {\n    case SecretType.basicAuth:\n      return (\n        <BasicAuthSubform onChange={onDataChanged} stringData={stringData[SecretType.basicAuth]} />\n      );\n    case SecretType.sshAuth:\n      return (\n        <SSHAuthSubform onChange={onDataChanged} stringData={stringData[SecretType.sshAuth]} />\n      );\n    case SecretType.dockerconfigjson:\n      return (\n        <CreateConfigSubform\n          onChange={onDataChanged}\n          stringData={stringData[SecretType.dockerconfigjson]}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\ninterface SecretFormValues {\n  secretName: string;\n  type: SecretType;\n  annotations: {\n    key: SecretAnnotationId;\n    value: string; // url\n  };\n  formData: any;\n}\n\nconst SecretForm: React.FC<FormikProps<SecretFormValues>> = ({\n  values,\n  setFieldValue,\n  setFieldTouched,\n  handleSubmit,\n  handleReset,\n  status,\n  isSubmitting,\n}) => {\n  const { t } = useTranslation();\n  const [stringData, setStringData] = React.useState({\n    [SecretType.basicAuth]: {},\n    [SecretType.sshAuth]: {},\n    [SecretType.dockerconfigjson]: {},\n  });\n\n  const secretTypes = React.useMemo<Record<string, string>>(\n    () => ({\n      [SecretAnnotationId.Git]: t('pipelines-plugin~Git Server'),\n      [SecretAnnotationId.Image]: t('pipelines-plugin~Image Registry'),\n    }),\n    [t],\n  );\n\n  const authTypes = React.useMemo<Record<string, string>>(() => {\n    switch (values.annotations.key) {\n      case SecretAnnotationId.Git:\n        return {\n          [SecretType.basicAuth]: t('pipelines-plugin~Basic Authentication'),\n          [SecretType.sshAuth]: t('pipelines-plugin~SSH Key'),\n        };\n      case SecretAnnotationId.Image:\n        return {\n          [SecretType.basicAuth]: t('pipelines-plugin~Basic Authentication'),\n          [SecretType.dockerconfigjson]: t('pipelines-plugin~Image Registry Credentials'),\n        };\n      default:\n        return {};\n    }\n  }, [values.annotations.key, t]);\n\n  const clearServerURL = React.useCallback(() => {\n    setFieldValue('annotations', {\n      key: values.annotations.key,\n      value: '', // clear url\n    });\n    setFieldTouched('annotations', false);\n  }, [setFieldTouched, setFieldValue, values.annotations.key]);\n\n  React.useEffect(() => {\n    const availableAuthTypes = Object.keys(authTypes);\n    if (!availableAuthTypes.includes(values.type)) {\n      setFieldValue('type', SecretType.basicAuth);\n      clearServerURL();\n    }\n  }, [authTypes, values.type, setFieldValue, clearServerURL]);\n\n  // Uses a memo instead of const outside of the function so that we can add i18n right here\n  const helpText = React.useMemo(\n    () => ({\n      [SecretType.dockerconfigjson]: t(\n        'pipelines-plugin~The base server url (e.g. https://quay.io/)',\n      ),\n      [SecretType.basicAuth]: t('pipelines-plugin~The base server url (e.g. https://github.com)'),\n      [SecretType.sshAuth]: t(\n        'pipelines-plugin~Server hostname without schema or path (e.g. github.com)',\n      ),\n    }),\n    [t],\n  );\n\n  const setValues = (type: SecretType, data) => {\n    if (type === SecretType.dockerconfigjson) {\n      setFieldValue('formData', _.mapValues({ '.dockerconfigjson': data[type] }, JSON.stringify));\n    } else {\n      setFieldValue('formData', data[type]);\n    }\n    if (values.type !== type) {\n      clearServerURL();\n    }\n  };\n\n  const onDataChanged = (value: string) => {\n    setStringData((prevState) => {\n      setValues(values.type, { ...prevState, [values.type]: value });\n      return { ...prevState, [values.type]: value };\n    });\n  };\n\n  return (\n    <div className=\"odc-secret-form\">\n      <h1 className=\"co-section-heading-tertiary odc-secret-form__title\">\n        {t('pipelines-plugin~Create Secret')}\n      </h1>\n      <div className=\"form-group\">\n        <InputField\n          type={TextInputTypes.text}\n          name=\"secretName\"\n          label={t('pipelines-plugin~Secret name')}\n          helpText={t('pipelines-plugin~Unique name of the new secret.')}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <DropdownField\n          name=\"annotations.key\"\n          label={t('pipelines-plugin~Access to')}\n          helpText={t('pipelines-plugin~Designate provider to be authenticated.')}\n          items={secretTypes}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <DropdownField\n          name=\"type\"\n          label={t('pipelines-plugin~Authentication type')}\n          items={authTypes}\n          title={authTypes[values.type]}\n          onChange={(type: SecretType) => setValues(type, stringData)}\n          fullWidth\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <InputField\n          name=\"annotations.value\"\n          label={t('pipelines-plugin~Server URL')}\n          helpText={helpText[values.type]}\n          type={TextInputTypes.text}\n          required\n        />\n      </div>\n      {renderSecretForm(values.type, stringData, onDataChanged)}\n      <ButtonBar errorMessage={status?.submitError} inProgress={isSubmitting}>\n        <ActionGroupWithIcons onSubmit={handleSubmit} onClose={handleReset} />\n      </ButtonBar>\n    </div>\n  );\n};\n\nexport default SecretForm;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport {\n  ResourceLink,\n  Firehose,\n  FirehoseResult,\n  FirehoseResource,\n} from '@console/internal/components/utils';\nimport { SecretModel, ServiceAccountModel } from '@console/internal/models';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { SecondaryStatus } from '@console/shared';\nimport { ServiceAccountType } from '../../../../utils/pipeline-utils';\nimport { PIPELINE_SERVICE_ACCOUNT } from '../../const';\nimport './SecretsList.scss';\n\ntype SecretsProps = {\n  secrets?: FirehoseResult<SecretKind[]>;\n  serviceaccounts?: FirehoseResult<ServiceAccountType>;\n};\n\ntype SecretsListProps = {\n  namespace: string;\n};\n\nconst secretTypes = [SecretType.dockerconfigjson, SecretType.basicAuth, SecretType.sshAuth];\n\nconst Secrets: React.FC<SecretsProps> = ({ secrets, serviceaccounts }) => {\n  const { t } = useTranslation();\n  const serviceAccountSecrets = _.map(serviceaccounts.data.secrets, 'name');\n  const filterData = _.filter(\n    secrets.data,\n    (secret) =>\n      _.includes(secretTypes, secret.type) &&\n      _.includes(serviceAccountSecrets, secret.metadata.name),\n  );\n  const sortedFilterData = _.sortBy(filterData, (data) => data.metadata.name);\n\n  return (\n    <div className=\"odc-secrets-list\">\n      {sortedFilterData.map((secret) => {\n        return (\n          <ResourceLink\n            key={secret.metadata.uid}\n            kind={SecretModel.kind}\n            name={secret.metadata.name}\n            namespace={secret.metadata.namespace}\n            linkTo={false}\n          />\n        );\n      })}\n      {_.isEmpty(sortedFilterData) && (\n        <SecondaryStatus status={t('pipelines-plugin~No secrets found')} />\n      )}\n    </div>\n  );\n};\n\nconst SecretsList: React.FC<SecretsListProps> = ({ namespace }) => {\n  const resources: FirehoseResource[] = [\n    {\n      isList: true,\n      namespace,\n      kind: SecretModel.kind,\n      prop: SecretModel.plural,\n    },\n    {\n      isList: false,\n      namespace,\n      kind: ServiceAccountModel.kind,\n      prop: ServiceAccountModel.plural,\n      name: PIPELINE_SERVICE_ACCOUNT,\n    },\n  ];\n\n  return (\n    <Firehose resources={resources}>\n      <Secrets />\n    </Firehose>\n  );\n};\n\nexport default SecretsList;\n","import * as React from 'react';\nimport { FormGroup, FormHelperText, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport cx from 'classnames';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { RedExclamationCircleIcon, WatchK8sResource } from '@console/dynamic-plugin-sdk';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdown, getFieldId, useFormikValidationFix } from '@console/shared';\nimport MultipleKeySelector from './MultipleKeySelector';\n\ninterface MultipleResourceKeySelectorProps {\n  label: string;\n  resourceModel: K8sKind;\n  required?: boolean;\n  resourceNameField: string;\n  resourceKeysField: string;\n  addString?: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst MultipleResourceKeySelector: React.FC<StateProps & MultipleResourceKeySelectorProps> = ({\n  label,\n  namespace,\n  resourceModel,\n  required,\n  resourceNameField,\n  resourceKeysField,\n  addString,\n}) => {\n  const { t } = useTranslation();\n  const { setFieldValue, setFieldTouched } = useFormikContext<FormikValues>();\n  const [field, { touched, error }] = useField(resourceNameField);\n  const isValid = !(touched && error);\n  const fieldId = getFieldId(resourceNameField, 'res-dropdown');\n  const [keys, setKeys] = React.useState({});\n\n  useFormikValidationFix(field.value);\n\n  const resource: WatchK8sResource = React.useMemo(\n    () => ({\n      kind: resourceModel.kind,\n      isList: true,\n      namespace,\n      optional: true,\n    }),\n    [namespace, resourceModel.kind],\n  );\n\n  const [resources, loaded, loadError] = useK8sWatchResource(resource);\n\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n\n  const generateKeys = (resourceName: string) => {\n    const selectedResource: K8sResourceKind = _.find(resources, (res) => {\n      return _.get(res, 'metadata.name') === resourceName;\n    });\n    const keyMap = selectedResource?.data ?? {};\n    const itemKeys = Object.keys(keyMap).reduce((acc, key) => ({ ...acc, [key]: key }), {});\n    setKeys(itemKeys);\n  };\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={label}\n      className=\"odc-multiple-key-selector\"\n      isRequired={required}\n    >\n      <ResourceDropdown\n        resources={[\n          { kind: resourceModel.kind, loaded, loadError, data: resources as K8sResourceKind[] },\n        ]}\n        loaded={loaded}\n        loadError={loadError}\n        dataSelector={['metadata', 'name']}\n        selectedKey={field.value}\n        placeholder={t('pipelines-plugin~Select a {{label}}', { label: t(resourceModel.labelKey) })}\n        autocompleteFilter={autocompleteFilter}\n        dropDownClassName={cx({ 'dropdown--full-width': true })}\n        onChange={(value: string) => {\n          setFieldValue(resourceKeysField, undefined);\n          setFieldValue(resourceNameField, value);\n          setFieldTouched(resourceNameField, true);\n          generateKeys(value);\n        }}\n        showBadge\n      />\n      {field.value && !_.isEmpty(keys) && (\n        <MultipleKeySelector name={resourceKeysField} keys={keys} addString={addString} />\n      )}\n\n      {!isValid && (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem variant=\"error\" icon={<RedExclamationCircleIcon />}>\n              {error}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      )}\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, MultipleResourceKeySelectorProps>(mapStateToProps)(\n  MultipleResourceKeySelector,\n);\n","import * as React from 'react';\nimport { TextInputTypes, Button, FormGroup, Tooltip, Flex, FlexItem } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { FieldArray, useFormikContext, FormikValues } from 'formik';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DropdownField, InputField, getFieldId, useFormikValidationFix } from '@console/shared';\nimport './MultipleKeySelector.scss';\n\ninterface MultipleKeySelectorProps {\n  name: string;\n  keys: { [key: string]: string };\n  addString?: string;\n  tooltip?: string;\n}\n\nconst MultipleKeySelector: React.FC<MultipleKeySelectorProps> = ({\n  name,\n  keys,\n  addString,\n  tooltip,\n}) => {\n  const { t } = useTranslation();\n  const { values } = useFormikContext<FormikValues>();\n  const items = _.get(values, name, []);\n  useFormikValidationFix(items);\n  return (\n    <FieldArray\n      name={name}\n      key=\"multiple-key-selector\"\n      render={({ push, remove }) => {\n        return (\n          <FormGroup\n            fieldId={getFieldId(name, 'multiple-key-selector')}\n            label={t('pipelines-plugin~Items')}\n            className=\"odc-multiple-key-selector\"\n          >\n            {items.length > 0 &&\n              items.map((item, index) => {\n                const fieldKey = `${name}.${index}.${item.key}`;\n                return (\n                  <div className=\"form-group odc-multiple-key-selector__item\" key={fieldKey}>\n                    <Flex direction={{ default: 'column', lg: 'row' }}>\n                      <FlexItem grow={{ default: 'grow' }}>\n                        <DropdownField\n                          name={`${name}.${index}.key`}\n                          title={t('pipelines-plugin~Select a key')}\n                          items={keys}\n                          fullWidth\n                        />\n                      </FlexItem>\n                      <FlexItem grow={{ default: 'grow' }}>\n                        <InputField\n                          name={`${name}.${index}.path`}\n                          type={TextInputTypes.text}\n                          placeholder={t('pipelines-plugin~Enter a path')}\n                        />\n                      </FlexItem>\n                    </Flex>\n                    <div className=\"odc-multiple-key-selector__deleteButton\">\n                      <Tooltip content={tooltip || t('pipelines-plugin~Remove')}>\n                        <MinusCircleIcon aria-hidden=\"true\" onClick={() => remove(index)} />\n                      </Tooltip>\n                    </div>\n                  </div>\n                );\n              })}\n            <Button\n              variant=\"link\"\n              onClick={() => push({ key: '', path: '' })}\n              icon={<PlusCircleIcon />}\n              isInline\n            >\n              {addString || t('pipelines-plugin~Add items')}\n            </Button>\n          </FormGroup>\n        );\n      }}\n    />\n  );\n};\n\nexport default MultipleKeySelector;\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { PersistentVolumeClaimModel } from '@console/internal/models';\nimport { getActiveNamespace } from '@console/internal/reducers/ui';\nimport { RootState } from '@console/internal/redux';\nimport { ResourceDropdownField } from '@console/shared';\nimport './PVCDropdown.scss';\n\ninterface PVCDropdownProps {\n  name: string;\n}\n\ninterface StateProps {\n  namespace: string;\n}\n\nconst PVCDropdown: React.FC<PVCDropdownProps & StateProps> = ({ name, namespace }) => {\n  const { t } = useTranslation();\n  const autocompleteFilter = (strText, item): boolean => fuzzy(strText, item?.props?.name);\n  const resources = [\n    {\n      isList: true,\n      kind: PersistentVolumeClaimModel.kind,\n      namespace,\n      prop: PersistentVolumeClaimModel.id,\n      optional: true,\n    },\n  ];\n  return (\n    <ResourceDropdownField\n      name={name}\n      className=\"odc-pvc-dropdown\"\n      resources={resources}\n      dataSelector={['metadata', 'name']}\n      placeholder={t('pipelines-plugin~Select a PVC')}\n      autocompleteFilter={autocompleteFilter}\n      fullWidth\n      showBadge\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => ({\n  namespace: getActiveNamespace(state),\n});\n\nexport default connect<StateProps, null, PVCDropdownProps>(mapStateToProps)(PVCDropdown);\n","import * as React from 'react';\nimport { FormGroup, Alert } from '@patternfly/react-core';\nimport { useField, useFormikContext, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { AccessModeSelector } from '@console/app/src/components/access-modes/access-mode';\nimport { RadioInput } from '@console/internal/components//radio';\nimport {\n  getVolumeModeRadios,\n  initialAccessModes,\n  dropdownUnits,\n  getAccessModeForProvisioner,\n} from '@console/internal/components/storage/shared';\nimport { RequestSizeInput, ExpandCollapse } from '@console/internal/components/utils';\nimport { StorageClassDropdown } from '@console/internal/components/utils/storage-class-dropdown';\nimport { useFormikValidationFix } from '@console/shared/src/hooks';\nimport { cephStorageProvisioners } from '@console/shared/src/utils';\n\nimport './VolumeClaimTemplateForm.scss';\n\ninterface VolumeClaimTemplateFormProps {\n  name: string;\n  initialSizeValue?: string;\n  initialSizeUnit?: string;\n  initialVolumeMode?: string;\n}\n\ninterface RequestSize {\n  value: string;\n  unit: string;\n}\n\nconst VolumeClaimTemplateForm: React.FC<VolumeClaimTemplateFormProps> = ({\n  name,\n  initialSizeValue = '1',\n  initialSizeUnit = 'Gi',\n  initialVolumeMode = 'Filesystem',\n}) => {\n  const { t } = useTranslation();\n  const [field] = useField(name);\n  const initAccessModeHelp = t('pipelines-plugin~Permissions to the mounted drive.');\n  const [accessModeHelp, setAccessModeHelp] = React.useState(initAccessModeHelp);\n  const { setFieldValue, setFieldTouched, errors } = useFormikContext<FormikValues>();\n  const [allowedAccessModes, setAllowedAccessModes] = React.useState<string[]>(initialAccessModes);\n  const [volumeMode, setVolumeMode] = React.useState(initialVolumeMode);\n  const [accessMode, setAccessMode] = React.useState('ReadWriteOnce');\n  const [requestSizeError, setRequestSizeError] = React.useState(null);\n  const [requestSizeValue, setRequestSizeValue] = React.useState(initialSizeValue);\n  const [requestSizeUnit, setRequestSizeUnit] = React.useState(initialSizeUnit);\n  const [storageProvisioner, setStorageProvisioner] = React.useState('');\n  const [storageClass, setStorageClass] = React.useState('');\n  useFormikValidationFix(field.value);\n\n  const handleVolumeMode: React.ReactEventHandler<HTMLInputElement> = (event) => {\n    setVolumeMode(event.currentTarget.value);\n  };\n\n  const handleStorageClass = (updatedStorageClass): void => {\n    const provisioner: string = updatedStorageClass?.provisioner || '';\n    // if the provisioner is unknown or no storage class selected, user should be able to set any access mode\n    const modes = getAccessModeForProvisioner(provisioner);\n    // setting message to display for various modes when a storage class of a know provisioner is selected\n    const displayMessage = modes\n      ? t('pipelines-plugin~Access mode is set by storage class and cannot be changed')\n      : t('pipelines-plugin~Permissions to the mounted drive');\n    setAccessMode('ReadWriteOnce');\n    setAccessModeHelp(displayMessage);\n    // setting accessMode to default with the change to Storage Class selection\n    setAllowedAccessModes(modes);\n    setStorageClass(updatedStorageClass?.metadata?.name);\n    setStorageProvisioner(provisioner);\n    if (storageProvisioner.includes(cephStorageProvisioners[1])) {\n      setVolumeMode('Filesystem');\n    }\n  };\n\n  const handleRequestSizeChange = (size: RequestSize): void => {\n    const { value, unit } = size;\n    setRequestSizeValue(value);\n    setRequestSizeUnit(unit);\n  };\n\n  React.useEffect(() => {\n    setRequestSizeError(null);\n    const volumeClaimTemplate = {\n      spec: {\n        accessModes: [accessMode],\n        storageClassName: storageClass,\n        volumeMode,\n        resources: {\n          requests: { storage: `${requestSizeValue}${requestSizeUnit}` },\n        },\n      },\n    };\n    if (!requestSizeValue || parseInt(requestSizeValue, 10) < 1) {\n      volumeClaimTemplate.spec.resources.requests.storage = null;\n      setRequestSizeError(t('pipelines-plugin~Size must be an integer greater than 0.'));\n    }\n\n    setFieldValue(name, volumeClaimTemplate);\n    setFieldTouched(name);\n  }, [\n    volumeMode,\n    accessMode,\n    requestSizeValue,\n    requestSizeUnit,\n    storageClass,\n    name,\n    setFieldTouched,\n    setFieldValue,\n    t,\n  ]);\n\n  const helpText = !requestSizeError\n    ? t(\n        'pipelines-plugin~This will create a PersistentVolumeClaim with a size of {{requestSizeValue}} {{requestSizeUnit}}.',\n        { requestSizeValue, requestSizeUnit },\n      )\n    : t('pipelines-plugin~This will create a PersistentVolumeClaim.');\n\n  return (\n    <FormGroup fieldId={name}>\n      {errors[name] && <Alert isInline variant=\"danger\" title={t('pipelines-plugin~Required')} />}\n      <p className=\"help-block\">{helpText}</p>\n      <ExpandCollapse\n        textExpanded={t('pipelines-plugin~Hide VolumeClaimTemplate options')}\n        textCollapsed={t('pipelines-plugin~Show VolumeClaimTemplate options')}\n      >\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <StorageClassDropdown\n            onChange={handleStorageClass}\n            id=\"storageclass-dropdown\"\n            data-test=\"storageclass-dropdown\"\n            describedBy=\"storageclass-dropdown-help\"\n            required={false}\n            name=\"storageClass\"\n          />\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <AccessModeSelector\n            onChange={setAccessMode}\n            provisioner={storageProvisioner}\n            loaded\n            availableAccessModes={allowedAccessModes}\n            description={accessModeHelp}\n            ignoreReadOnly\n          />\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <label className=\"control-label co-required\" htmlFor=\"request-size-input\">\n            {t('pipelines-plugin~Size')}\n          </label>\n          <RequestSizeInput\n            name=\"requestSize\"\n            required\n            onChange={handleRequestSizeChange}\n            defaultRequestSizeUnit={requestSizeUnit}\n            defaultRequestSizeValue={requestSizeValue}\n            dropdownUnits={dropdownUnits}\n            describedBy=\"request-size-help\"\n            inputID=\"request-size-input\"\n            data-test-id=\"pvc-size-input\"\n          />\n          {requestSizeError ? (\n            <p className=\"pf-v5-c-form__helper-text pf-m-error\">{requestSizeError}</p>\n          ) : (\n            <p className=\"help-block\">{t('pipelines-plugin~Desired storage capacity')}</p>\n          )}\n        </div>\n        <div className=\"odc-VolumeClaimTemplateForm--section\">\n          <label className=\"control-label\" htmlFor=\"volume-mode\">\n            {t('pipelines-plugin~Volume Mode')}\n          </label>\n          <FormGroup fieldId=\"volumeMode\" data-test-id=\"volumeModeRadio\">\n            {getVolumeModeRadios().map((radio) => (\n              <RadioInput\n                {...radio}\n                key={radio.value}\n                onChange={handleVolumeMode}\n                inline\n                checked={radio.value === volumeMode}\n                name={`${name}.volumeMode`}\n              />\n            ))}\n          </FormGroup>\n        </div>\n      </ExpandCollapse>\n    </FormGroup>\n  );\n};\n\nexport default VolumeClaimTemplateForm;\n","import * as React from 'react';\nimport { FormikProps } from 'formik';\nimport { useAddTriggerParams } from '../../../shared/common/auto-complete/autoCompleteValueParsers';\nimport PipelineParameterSection from '../common/PipelineParameterSection';\nimport PipelineResourceSection from '../common/PipelineResourceSection';\nimport PipelineWorkspacesSection from '../common/PipelineWorkspacesSection';\nimport TriggerBindingSection from './TriggerBindingSection';\nimport { AddTriggerFormValues } from './types';\n\nconst AddTriggerForm: React.FC<FormikProps<AddTriggerFormValues>> = () => {\n  const autoCompleteValues: string[] = useAddTriggerParams();\n\n  return (\n    <>\n      <TriggerBindingSection />\n      <PipelineParameterSection autoCompleteValues={autoCompleteValues} />\n      <PipelineResourceSection />\n      <PipelineWorkspacesSection />\n    </>\n  );\n};\n\nexport default AddTriggerForm;\n","import * as React from 'react';\nimport { Badge, ExpandableSection, FormHelperText } from '@patternfly/react-core';\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport FormSection from '@console/dev-console/src/components/import/section/FormSection';\nimport { TriggerBindingKind, TriggerBindingParam } from '../../resource-types';\nimport { usePipelineOperatorVersion } from '../../utils/pipeline-operator';\nimport TriggerBindingSelector from './TriggerBindingSelector';\nimport { AddTriggerFormValues } from './types';\n\nimport './TriggerBindingSection.scss';\n\nconst TriggerBindingSection: React.FC = () => {\n  const { t } = useTranslation();\n  const { values, setFieldValue } = useFormikContext<AddTriggerFormValues>();\n  const [bindingVars, setBindingVars] = React.useState<TriggerBindingParam[]>(null);\n\n  // Starting with Pipeline Operator 1.1 (Tekton Triggers 0.6) we should use a new param name.\n  const pipelineOperatorVersion = usePipelineOperatorVersion(values.namespace);\n  const paramPrefix =\n    pipelineOperatorVersion?.major === 0 ||\n    (pipelineOperatorVersion?.major === 1 && pipelineOperatorVersion?.minor === 0)\n      ? 'params.'\n      : 'tt.params.';\n\n  const updateTriggerBindingVariables = React.useCallback(\n    (selectedTriggerBinding: TriggerBindingKind) => {\n      setBindingVars(selectedTriggerBinding.spec.params);\n      setFieldValue('triggerBinding.resource', selectedTriggerBinding);\n    },\n    [setFieldValue],\n  );\n\n  return (\n    <div className=\"odc-trigger-binding-section\">\n      <FormSection title={t('pipelines-plugin~Webhook')} fullWidth>\n        <TriggerBindingSelector\n          description={t(\n            'pipelines-plugin~Select your Git provider type to be associated with the Trigger.',\n          )}\n          label={t('pipelines-plugin~Git provider type')}\n          onChange={updateTriggerBindingVariables}\n        />\n        {bindingVars && (\n          <ExpandableSection\n            toggleTextExpanded={t('pipelines-plugin~Hide variables')}\n            toggleTextCollapsed={t('pipelines-plugin~Show variables')}\n          >\n            <div className=\"odc-trigger-binding-section__variable-container\">\n              <p className=\"odc-trigger-binding-section__variable-descriptor\">\n                {t(\n                  'pipelines-plugin~The following variables can be used in the Parameters or when created new Resources.',\n                )}\n              </p>\n              {bindingVars.map(({ name }) => (\n                <Badge key={name} className=\"odc-trigger-binding-section__variable-badge\" isRead>\n                  {name}\n                </Badge>\n              ))}\n            </div>\n            <FormHelperText className=\"odc-trigger-binding-section__variable-help-text\">\n              {t('pipelines-plugin~Use this format when you reference variables in this form: ')}\n              <code className=\"co-code\">{`$(${paramPrefix}parameter)`}</code>\n            </FormHelperText>\n          </ExpandableSection>\n        )}\n      </FormSection>\n    </div>\n  );\n};\n\nexport default TriggerBindingSection;\n","import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport * as fuzzy from 'fuzzysearch';\nimport { useTranslation } from 'react-i18next';\nimport { referenceForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ResourceDropdownField } from '@console/shared';\nimport { ClusterTriggerBindingModel, TriggerBindingModel } from '../../../../models';\nimport { TriggerBindingKind } from '../../resource-types';\nimport { AddTriggerFormValues } from './types';\n\ntype TriggerBindingSelectorProps = {\n  description?: string;\n  label?: string;\n  onChange: (selectedTriggerBinding: TriggerBindingKind) => void;\n};\n\nconst KEY_DIVIDER = '~';\n\nconst TriggerBindingSelector: React.FC<TriggerBindingSelectorProps> = (props) => {\n  const { t } = useTranslation();\n  const { description, label = t(TriggerBindingModel.labelKey), onChange } = props;\n  const { values } = useFormikContext<AddTriggerFormValues>();\n  const autoCompleteFilter = (strText: string, item: React.ReactElement): boolean =>\n    fuzzy(strText, item?.props?.name);\n  const onTriggerChange = (key: string, value: string, selectedResource: TriggerBindingKind) => {\n    if (selectedResource) {\n      onChange && onChange(selectedResource);\n    }\n  };\n\n  return (\n    <ResourceDropdownField\n      name=\"triggerBinding.name\"\n      resources={[\n        {\n          isList: true,\n          namespace: values.namespace,\n          kind: referenceForModel(TriggerBindingModel),\n          prop: 'triggerBindingData',\n          optional: true,\n        },\n        {\n          isList: true,\n          kind: referenceForModel(ClusterTriggerBindingModel),\n          prop: 'clusterTriggerBindingData',\n          optional: true,\n        },\n      ]}\n      autocompleteFilter={autoCompleteFilter}\n      dataSelector={['metadata', 'name']}\n      customResourceKey={(key: string, resource: K8sResourceKind) => {\n        const { kind } = resource;\n        const order = kind === ClusterTriggerBindingModel.kind ? 2 : 1;\n        return `${order}${KEY_DIVIDER}${key}`;\n      }}\n      fullWidth\n      helpText={description}\n      label={label}\n      placeholder={t('pipelines-plugin~Select {{label}}', { label })}\n      title={t('pipelines-plugin~Select {{label}}', { label })}\n      showBadge\n      onChange={onTriggerChange}\n    />\n  );\n};\n\nexport default TriggerBindingSelector;\n","export const TRIGGER_BINDING_EMPTY = '#empty-trigger-binding#';\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport './HorizontalStackedBars.scss';\n\nexport type StackedValue = {\n  color: string;\n  name: string;\n  size: number;\n};\n\nexport type HorizontalStackedBarsProps = {\n  barGap?: number;\n  height?: number | string;\n  inline?: boolean;\n  values: StackedValue[];\n  width?: number | string;\n};\n\nconst HorizontalStackedBars: React.FC<HorizontalStackedBarsProps> = ({\n  barGap,\n  height,\n  inline,\n  values,\n  width,\n}) => {\n  return (\n    <div\n      className={classNames('odc-horizontal-stacked-bars', { 'is-inline': inline })}\n      style={{ height, width, ['--bar-gap' as any]: barGap && `${barGap}px` }}\n    >\n      <div className=\"odc-horizontal-stacked-bars__bars\">\n        {values.map(({ color, name, size }) => (\n          <div\n            key={name}\n            className=\"odc-horizontal-stacked-bars__data-bar\"\n            style={{\n              background: color,\n              flexGrow: size,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HorizontalStackedBars;\n","import { PipelineKind, PipelineRunKind, TaskRunKind } from '../../../types';\nimport { getTaskStatus, TaskStatus } from '../../../utils/pipeline-augment';\nimport { usePipelineFromPipelineRun } from './usePipelineFromPipelineRun';\n\nexport const useTaskStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const pipeline: PipelineKind = usePipelineFromPipelineRun(pipelineRun);\n  return getTaskStatus(pipelineRun, pipeline, taskRuns);\n};\n","import * as React from 'react';\nimport { ComputedStatus } from '../../../types';\nimport { TaskStatus, getRunStatusColor } from '../../../utils/pipeline-augment';\nimport './TaskStatusTooltip.scss';\n\ninterface TaskStatusToolTipProps {\n  taskStatus: TaskStatus;\n}\n\nconst TaskStatusToolTip: React.FC<TaskStatusToolTipProps> = ({ taskStatus }) => {\n  return (\n    <div className=\"odc-task-status-tooltip\">\n      {Object.keys(ComputedStatus).map((status) => {\n        const { message, pftoken } = getRunStatusColor(status);\n        return taskStatus[status] ? (\n          <React.Fragment key={status}>\n            <div\n              className=\"odc-task-status-tooltip__legend\"\n              style={{ background: pftoken.value }}\n            />\n            <div>\n              {status === ComputedStatus.PipelineNotStarted ||\n              status === ComputedStatus.FailedToStart\n                ? message\n                : `${taskStatus[status]} ${message}`}\n            </div>\n          </React.Fragment>\n        ) : null;\n      })}\n    </div>\n  );\n};\n\nexport default TaskStatusToolTip;\n","import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { coFetchText } from '@console/internal/co-fetch';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { PodModel } from '@console/internal/models';\nimport { resourceURL } from '@console/internal/module/k8s';\n\ntype LogSnippetFromPodProps = {\n  children: (logSnippet: string) => React.ReactNode;\n  containerName: string;\n  namespace: string;\n  podName: string;\n  title: string;\n};\n\nconst LogSnippetFromPod: React.FC<LogSnippetFromPodProps> = ({\n  children,\n  containerName,\n  namespace,\n  podName,\n  title,\n}) => {\n  const { t } = useTranslation();\n  const [logSnippet, setLogSnippet] = React.useState<string>(null);\n  const [logError, setLogError] = React.useState<string>(null);\n\n  React.useEffect(() => {\n    const urlOpts = {\n      ns: namespace,\n      name: podName,\n      path: 'log',\n      queryParams: {\n        container: containerName,\n        tailLines: '5',\n      },\n    };\n    const watchURL = resourceURL(PodModel, urlOpts);\n    coFetchText(watchURL)\n      .then((logContent: string) => {\n        setLogSnippet(logContent);\n      })\n      .catch((error) => {\n        setLogError(error?.message || t('pipelines-plugin~Unknown error retrieving logs'));\n      });\n  }, [containerName, namespace, podName, t]);\n\n  if (logError) {\n    return (\n      <Alert isInline title={title} variant=\"danger\">\n        {logError}\n      </Alert>\n    );\n  }\n\n  if (!logSnippet) {\n    return <LoadingInline />;\n  }\n\n  return <>{children(logSnippet)}</>;\n};\n\nexport default LogSnippetFromPod;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport TopologySideBarTabSection from '@console/topology/src/components/side-bar/TopologySideBarTabSection';\nimport PipelinesOverview from '../components/pipelines/pipeline-overview/PipelineOverview';\n\nexport const usePipelinesSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const data = element.getData();\n  const resources = data?.resources;\n  // This check is based on the properties added through getPipelinesDataModelReconciler\n  if (!resources?.pipelines) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <TopologySideBarTabSection>\n      <PipelinesOverview item={resources} />\n    </TopologySideBarTabSection>\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport PipelineRunDecorator from './PipelineRunDecorator';\n\nexport const getPipelineRunDecorator = (element: Node, radius: number, x: number, y: number) => {\n  const overviewItem = element.getData()?.resources;\n  const { pipelines, pipelineRuns } = overviewItem || {};\n  if (!pipelineRuns) {\n    return null;\n  }\n\n  return (\n    <PipelineRunDecorator\n      key=\"pipeline-run\"\n      radius={radius}\n      x={x}\n      y={y}\n      pipeline={pipelines[0]}\n      pipelineRuns={pipelineRuns}\n    />\n  );\n};\n","import { Model } from '@patternfly/react-topology';\nimport { TopologyDataResources } from '@console/topology/src/topology-types';\nimport { getTopologyResourceObject } from '@console/topology/src/utils';\nimport { getPipelinesAndPipelineRunsForResource } from '../utils/pipeline-plugin-utils';\nimport { getLatestPipelineRunStatus } from '../utils/pipeline-utils';\n\nexport const getPipelinesDataModelReconciler = (\n  model: Model,\n  resources: TopologyDataResources,\n): void => {\n  if (!model || !model.nodes) {\n    return;\n  }\n\n  // For all nodes, associate any pipeline data with the node\n  model.nodes.forEach((node) => {\n    const resource = getTopologyResourceObject(node.data);\n    if (resource) {\n      const pipelineData = getPipelinesAndPipelineRunsForResource(resource, resources);\n      if (pipelineData) {\n        node.data.resources.pipelines = pipelineData.pipelines;\n        node.data.resources.pipelineRuns = pipelineData.pipelineRuns;\n        const { status } = getLatestPipelineRunStatus(pipelineData.pipelineRuns);\n        node.data.resources.pipelineRunStatus = status;\n      }\n    }\n  });\n};\n"],"sourceRoot":""}