{"version":3,"sources":["webpack:///./packages/operator-lifecycle-manager/src/utils/useOperatorHubConfig.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/modals/delete-catalog-source-modal.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/modals/disable-default-source-modal.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/modals/edit-registry-poll-interval-modal.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/catalog-source.tsx","webpack:///./public/components/create-yaml.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/package-manifest.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/deprecated-operator-warnings/deprecated-operator-warnings.tsx","webpack:///./packages/operator-lifecycle-manager/src/components/cluster-service-version-logo.tsx","webpack:///./packages/operator-lifecycle-manager/src/operator.svg"],"names":["kind","name","isList","deleteCatalogSourceModal","resource","close","cancel","inProgress","errorMessage","handlePromise","t","confirmed","setConfirmed","submit","event","preventDefault","onSubmit","className","ns","metadata","type","onKeyUp","e","currentTarget","value","placeholder","submitText","submitDisabled","submitDanger","disableDefaultSourceModal","operatorHub","sourceName","currentSources","patch","op","path","source","disabled","availablePollIntervals","editRegitryPollInterval","catalogSource","pollInterval","setPollInterval","initialValue","spec","updateStrategy","registryPoll","interval","endsWith","substring","length","items","label","fieldId","id","onChange","selectedInterval","selectedKey","catalogSourceModelReference","deleteModal","factory","Delete","callback","disableSourceModal","labelKey","accessReview","enableSource","DefaultSourceKebab","sourceDisabled","options","Edit","getOperatorCount","packageManifests","filter","p","status","catalogSourceNamespace","namespace","getEndpoint","configmap","image","address","CatalogSourceDetails","obj","operatorCount","catsrcNamespace","text","editAsGroup","description","canEdit","onEdit","CatalogSourceOperatorsPage","props","showTitle","CatalogSourceDetailsPage","operatorHubLoaded","operatorHubLoadError","params","menuActions","sources","some","common","pages","details","editYaml","href","nameKey","component","resources","prop","CreateSubscriptionYAML","location","Create","createProps","packageManifest","loaded","data","pkg","channel","defaultChannel","channels","find","template","apiGroup","apiVersion","URLSearchParams","search","get","currentCSV","plural","title","tableColumnClasses","columnClass","getRowProps","undefined","CatalogSourceTableRow","availability","endpoint","isDefault","publisher","registryPollInterval","actions","ModifyLabels","ModifyAnnotations","CatalogSourceList","labelPlural","Header","sortField","transforms","Row","DisabledPopover","visible","setVisible","onClickEnable","then","isVisible","shouldClose","statusBody","isInline","variant","onClick","getRegistryPollInterval","CatalogSourceListPage","canCreate","createAccessReview","model","createButtonText","to","flatten","catalogSources","defaultSources","defaultSource","catalogSourceExists","availabilitySort","connectionState","lastObservedState","customSources","a","b","ListComponent","textFilter","hideLabelFilter","displayName","CreateYAMLInner","kindsInFlight","kindObj","hideHeader","resourceObjPath","isCreate","templateExtensions","resolvedTemplates","properties","yamlTemplates","getIn","namespaced","crd","header","objLabel","loader","c","DroppableEditYAML","initialResource","create","CreateYAML_","CreateYAML","EditYAMLPage","wrapperProps","EditYAML","PackageManifestTableHeader","sortFunc","PackageManifestTableHeaderWithCatalogSource","PackageManifestTableRow","customData","version","provider","currentCSVDesc","icon","timestamp","creationTimestamp","PackageManifestListEmptyMessage","PackageManifestList","TableHeader","filters","EmptyMsg","virtualize","PackageManifestsPage","helpText","selector","matchExpressions","key","operator","values","DeprecatedOperatorType","findDeprecation","deprecation","conditions","f","findDeprecatedOperator","deprecatedPackage","PackageDeprecated","deprecatedChannel","ChannelDeprecated","deprecatedVersion","VersionDeprecated","DeprecatedOperatorWarningBadge","content","message","color","DeprecatedOperatorWarningIcon","dataTest","DeprecatedOperatorWarningAlert","dismissible","alertVisible","setAlertVisible","actionClose","onClose","ClusterServiceVersionLogo","imgSrc","mediatype","base64data","src","alt","module","exports"],"mappings":"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","file":"catalog-source-chunk-7a9e4417cd4572fa9c27.min.js","sourcesContent":["import { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { OperatorHubKind } from '../components/operator-hub';\nimport { OperatorHubModel } from '../models';\n\nconst useOperatorHubConfig = () =>\n  useK8sWatchResource<OperatorHubKind>({\n    kind: referenceForModel(OperatorHubModel),\n    name: 'cluster',\n    isList: false,\n  });\n\nexport default useOperatorHubConfig;\n","import * as React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '@console/internal/components/utils';\nimport { k8sKill, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\n\nconst DeleteCatalogSourceModal: React.FC<DeleteCatalogSourceModalProps> = ({\n  kind,\n  resource,\n  close,\n  cancel,\n  inProgress,\n  errorMessage,\n  handlePromise,\n}) => {\n  const { t } = useTranslation();\n  const [confirmed, setConfirmed] = React.useState<boolean>(false);\n  const isConfirmed = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    setConfirmed(e.currentTarget.value === resource.metadata.name);\n  };\n\n  const submit = React.useCallback(\n    (event: React.FormEvent<EventTarget>) => {\n      event.preventDefault();\n      return handlePromise(k8sKill(kind, resource), close);\n    },\n    [close, handlePromise, kind, resource],\n  );\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        {t('olm~Delete CatalogSource?')}\n      </ModalTitle>\n      <ModalBody>\n        <p>\n          {t(\n            'olm~By deleting a CatalogSource, any Operator that has been installed from this source will no longer receive updates.',\n          )}\n        </p>\n        <p>\n          <Trans ns=\"olm\">\n            Confirm deletion by typing{' '}\n            <strong className=\"co-break-word\">{{ name: resource.metadata.name }}</strong> below:\n          </Trans>\n        </p>\n        <input\n          type=\"text\"\n          className=\"pf-v5-c-form-control\"\n          onKeyUp={isConfirmed}\n          placeholder={t('olm~Enter name')}\n          data-test=\"delete-catalogsource-input\"\n        />\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('public~Delete')}\n        submitDisabled={!confirmed}\n        cancel={cancel}\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitDanger\n      />\n    </form>\n  );\n};\n\ntype DeleteCatalogSourceModalProps = {\n  kind: K8sKind;\n  resource: K8sResourceKind;\n} & ModalComponentProps &\n  HandlePromiseProps;\n\nexport const deleteCatalogSourceModal = createModalLauncher(\n  withHandlePromise(DeleteCatalogSourceModal),\n);\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n  ModalComponentProps,\n} from '@console/internal/components/factory/modal';\nimport { withHandlePromise, HandlePromiseProps } from '@console/internal/components/utils';\nimport { k8sPatch, K8sKind } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { OperatorHubKind } from '../operator-hub';\n\nconst DisableDefaultSourceModal: React.FC<DisableSourceModalProps> = ({\n  kind,\n  operatorHub,\n  sourceName,\n  close,\n  cancel,\n  inProgress,\n  errorMessage,\n  handlePromise,\n}) => {\n  const { t } = useTranslation();\n  const submit = React.useCallback(\n    (event: React.FormEvent<EventTarget>): void => {\n      event.preventDefault();\n      const currentSources = _.get(operatorHub, 'spec.sources', []);\n      const patch = [\n        {\n          op: 'add',\n          path: '/spec/sources',\n          value: [\n            ..._.filter(currentSources, (source) => source.name !== sourceName),\n            {\n              name: sourceName,\n              disabled: true,\n            },\n          ],\n        },\n      ];\n      return handlePromise(k8sPatch(kind, operatorHub, patch), close);\n    },\n    [close, handlePromise, kind, operatorHub, sourceName],\n  );\n\n  return (\n    <form onSubmit={submit} name=\"form\" className=\"modal-content \">\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        {t('olm~Disable CatalogSource?')}\n      </ModalTitle>\n      <ModalBody>\n        {t(\n          'olm~By disabling a default source, the operators it provides will no longer appear in OperatorHub and any operator that has been installed from this source will no longer receive updates until the source is re-enabled. Disabling the source will also remove the corresponding OperatorSource and CatalogSource resources from the cluster.',\n        )}\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('public~Disable')}\n        cancel={cancel}\n        errorMessage={errorMessage}\n        inProgress={inProgress}\n        submitDanger\n      />\n    </form>\n  );\n};\n\ntype DisableSourceModalProps = {\n  kind: K8sKind;\n  operatorHub: OperatorHubKind;\n  sourceName: string;\n} & ModalComponentProps &\n  HandlePromiseProps;\n\nexport const disableDefaultSourceModal = createModalLauncher(\n  withHandlePromise(DisableDefaultSourceModal),\n);\n","import * as React from 'react';\nimport { Form, FormGroup } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ModalTitle,\n  ModalBody,\n  createModalLauncher,\n  ModalComponentProps,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport {\n  withHandlePromise,\n  HandlePromiseProps,\n  Dropdown,\n} from '@console/internal/components/utils';\nimport { k8sPatch } from '@console/internal/module/k8s';\nimport { CatalogSourceModel } from '../../models';\nimport { CatalogSourceKind } from '../../types';\n\ntype DropdownItems = Record<string, string>;\n\nconst availablePollIntervals: DropdownItems = {\n  '10m': '10m',\n  '15m': '15m',\n  '30m': '30m',\n  '45m': '45m',\n  '60m': '60m',\n};\n\nconst EditRegistryPollIntervalModal: React.FC<EditRegistryPollIntervalModalProps> = ({\n  cancel,\n  close,\n  catalogSource,\n  handlePromise,\n  errorMessage,\n}) => {\n  const { t } = useTranslation();\n  const [pollInterval, setPollInterval] = React.useState(() => {\n    let initialValue = catalogSource.spec?.updateStrategy?.registryPoll?.interval || '';\n    if (initialValue.endsWith('0s')) {\n      initialValue = initialValue.substring(0, initialValue.length - 2);\n    }\n    return initialValue;\n  });\n  const items = React.useMemo<DropdownItems>(() => {\n    let interval = catalogSource.spec?.updateStrategy?.registryPoll?.interval || '';\n    if (interval.endsWith('0s')) {\n      interval = interval.substring(0, interval.length - 2);\n    }\n    return {\n      ...availablePollIntervals,\n      ...(interval && !availablePollIntervals[interval] ? { interval } : {}),\n    };\n  }, [catalogSource.spec]);\n\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    const patch = [\n      { op: 'add', path: '/spec/updateStrategy/registryPoll/interval', value: pollInterval },\n    ];\n    return handlePromise(k8sPatch(CatalogSourceModel, catalogSource, patch), close);\n  };\n\n  return (\n    <Form onSubmit={submit} name=\"form\">\n      <div className=\"modal-content\">\n        <ModalTitle>{t('olm~Edit registry poll interval')}</ModalTitle>\n        <ModalBody>\n          <FormGroup label={t('olm~Registry poll interval')} fieldId=\"pollInterval_dropdown\">\n            <Dropdown\n              className=\"dropdown--full-width\"\n              id=\"pollInterval_dropdown\"\n              items={items}\n              onChange={(selectedInterval: string) => setPollInterval(selectedInterval)}\n              selectedKey={pollInterval}\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalSubmitFooter\n          errorMessage={errorMessage}\n          inProgress={false}\n          submitText={t('olm~Save')}\n          cancel={cancel}\n          submitDisabled={\n            pollInterval === catalogSource.spec?.updateStrategy?.registryPoll?.interval\n          }\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport const editRegitryPollInterval = createModalLauncher(\n  withHandlePromise(EditRegistryPollIntervalModal),\n);\n\ntype EditRegistryPollIntervalModalProps = {\n  catalogSource: CatalogSourceKind;\n} & ModalComponentProps &\n  HandlePromiseProps;\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, useLocation } from 'react-router-dom-v5-compat';\nimport { PopoverStatus, StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { CreateYAML } from '@console/internal/components/create-yaml';\nimport {\n  DetailsPage,\n  Table,\n  TableData,\n  TableProps,\n  MultiListPage,\n  MultiListPageProps,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport {\n  Firehose,\n  Kebab,\n  LoadingBox,\n  ConsoleEmptyState,\n  navFactory,\n  ResourceKebab,\n  ResourceLink,\n  SectionHeading,\n  asAccessReview,\n  KebabOption,\n  ResourceSummary,\n  DetailsItem,\n  FirehoseResult,\n} from '@console/internal/components/utils';\nimport i18n from '@console/internal/i18n';\nimport { ConfigMapModel } from '@console/internal/models';\nimport { referenceForModel, K8sKind, k8sPatch } from '@console/internal/module/k8s';\nimport { withFallback } from '@console/shared/src/components/error';\nimport { DEFAULT_SOURCE_NAMESPACE } from '../const';\nimport {\n  SubscriptionModel,\n  CatalogSourceModel,\n  PackageManifestModel,\n  OperatorGroupModel,\n  OperatorHubModel,\n} from '../models';\nimport { CatalogSourceKind, PackageManifestKind, OperatorGroupKind } from '../types';\nimport useOperatorHubConfig from '../utils/useOperatorHubConfig';\nimport { deleteCatalogSourceModal } from './modals/delete-catalog-source-modal';\nimport { disableDefaultSourceModal } from './modals/disable-default-source-modal';\nimport { editRegitryPollInterval } from './modals/edit-registry-poll-interval-modal';\nimport { requireOperatorGroup } from './operator-group';\nimport { OperatorHubKind } from './operator-hub';\nimport { PackageManifestsPage } from './package-manifest';\n\nconst catalogSourceModelReference = referenceForModel(CatalogSourceModel);\n\nconst deleteModal = (kind: K8sKind, catalogSource: CatalogSourceKind): KebabOption => ({\n  ...Kebab.factory.Delete(kind, catalogSource),\n  callback: () => deleteCatalogSourceModal({ kind, resource: catalogSource }),\n});\n\nconst disableSourceModal = (\n  kind: K8sKind,\n  operatorHub: OperatorHubKind,\n  sourceName: string,\n): KebabOption => ({\n  // t('olm~Disable')\n  labelKey: 'olm~Disable',\n  callback: () => disableDefaultSourceModal({ kind, operatorHub, sourceName }),\n  accessReview: asAccessReview(kind, operatorHub, 'patch'),\n});\n\nconst enableSource = (\n  kind: K8sKind,\n  operatorHub: OperatorHubKind,\n  sourceName: string,\n): KebabOption => ({\n  // t('olm~Enable')\n  labelKey: 'olm~Enable',\n  callback: () => {\n    const currentSources = _.get(operatorHub, 'spec.sources', []);\n    const patch = [\n      {\n        op: 'add',\n        path: '/spec/sources',\n        value: _.filter(currentSources, (source) => source.name !== sourceName),\n      },\n    ];\n    return k8sPatch(kind, operatorHub, patch);\n  },\n  accessReview: asAccessReview(kind, operatorHub, 'patch'),\n});\n\nconst DefaultSourceKebab: React.FC<DefaultSourceKebabProps> = ({\n  kind,\n  operatorHub,\n  sourceName,\n  sourceDisabled,\n  source,\n}) => {\n  const options = sourceDisabled\n    ? [enableSource(kind, operatorHub, sourceName)]\n    : [\n        disableSourceModal(kind, operatorHub, sourceName),\n        ...(source ? [Kebab.factory.Edit(CatalogSourceModel, source)] : []),\n      ];\n  return <Kebab options={options} />;\n};\n\nconst getOperatorCount = (\n  catalogSource: CatalogSourceKind,\n  packageManifests: PackageManifestKind[],\n): number =>\n  packageManifests.filter(\n    (p) =>\n      p.status?.catalogSource === catalogSource.metadata.name &&\n      p.status?.catalogSourceNamespace === catalogSource.metadata.namespace,\n  ).length;\n\nconst getEndpoint = (catalogSource: CatalogSourceKind): React.ReactNode => {\n  if (catalogSource.spec.configmap) {\n    return (\n      <ResourceLink\n        kind={referenceForModel(ConfigMapModel)}\n        name={catalogSource.spec.configmap}\n        namespace={catalogSource.metadata.namespace}\n      />\n    );\n  }\n  return catalogSource.spec.image || catalogSource.spec.address;\n};\n\nexport const CatalogSourceDetails: React.FC<CatalogSourceDetailsProps> = ({\n  obj: catalogSource,\n  packageManifests,\n}) => {\n  const { t } = useTranslation();\n\n  const operatorCount = getOperatorCount(catalogSource, packageManifests);\n\n  const catsrcNamespace =\n    catalogSource.metadata.namespace === DEFAULT_SOURCE_NAMESPACE\n      ? 'Cluster wide'\n      : catalogSource.metadata.namespace;\n\n  return !_.isEmpty(catalogSource) ? (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading\n        text={t('olm~CatalogSource details', {\n          resource: CatalogSourceModel.label,\n        })}\n      />\n      <div className=\"row\">\n        <div className=\"col-sm-6 col-xs-12\">\n          <ResourceSummary resource={catalogSource} />\n        </div>\n        <div className=\"col-sm-6 col-xs-12\">\n          <div className=\"co-m-pane__body\">\n            <DetailsItem\n              editAsGroup\n              label={t('public~Status')}\n              obj={catalogSource}\n              path=\"status.connectionState.lastObservedState\"\n            />\n            <DetailsItem\n              label={t('public~Display name')}\n              obj={catalogSource}\n              path=\"spec.displayName\"\n            />\n            <DetailsItem label={t('olm~Publisher')} obj={catalogSource} path=\"spec.publisher\" />\n            <DetailsItem\n              label={t('olm~Availability')}\n              obj={catalogSource}\n              description={t(\n                'olm~Denotes whether this CatalogSource provides operators to a specific namespace, or the entire cluster.',\n              )}\n            >\n              {catsrcNamespace}\n            </DetailsItem>\n            <DetailsItem\n              label=\"Endpoint\"\n              obj={catalogSource}\n              description={t(\n                \"olm~The ConfigMap, image, or address for this CatalogSource's registry.\",\n              )}\n            >\n              {getEndpoint(catalogSource)}\n            </DetailsItem>\n            <DetailsItem\n              label={t('olm~Registry poll interval')}\n              obj={catalogSource}\n              path=\"spec.updateStrategy.registryPoll.interval\"\n              canEdit={!_.isEmpty(catalogSource.spec.updateStrategy)}\n              onEdit={() => editRegitryPollInterval({ catalogSource })}\n            />\n            <DetailsItem\n              label={t('olm~Number of Operators')}\n              obj={catalogSource}\n              description={t('olm~The number of packages this CatalogSource provides.')}\n            >\n              {operatorCount}\n            </DetailsItem>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div />\n  );\n};\n\nexport const CatalogSourceOperatorsPage: React.FC<CatalogSourceOperatorsPageProps> = (props) => {\n  return <PackageManifestsPage catalogSource={props.obj} showTitle={false} {...props} />;\n};\n\nexport const CatalogSourceDetailsPage: React.FC = (props) => {\n  const [operatorHub, operatorHubLoaded, operatorHubLoadError] = useOperatorHubConfig();\n  const params = useParams();\n\n  const isDefaultSource = React.useMemo(\n    () =>\n      DEFAULT_SOURCE_NAMESPACE === params.ns &&\n      operatorHub?.status?.sources?.some((source) => source.name === params.name),\n    [operatorHub, params.name, params.ns],\n  );\n\n  const menuActions = isDefaultSource\n    ? [Kebab.factory.Edit, () => disableSourceModal(OperatorHubModel, operatorHub, params.name)]\n    : Kebab.factory.common;\n\n  return (\n    <DetailsPage\n      {...props}\n      namespace={params.ns}\n      kind={referenceForModel(CatalogSourceModel)}\n      name={params.name}\n      pages={[\n        navFactory.details(CatalogSourceDetails),\n        navFactory.editYaml(),\n        {\n          href: 'operators',\n          // t('olm~Operators')\n          nameKey: 'olm~Operators',\n          component: CatalogSourceOperatorsPage,\n        },\n      ]}\n      menuActions={operatorHubLoaded && !operatorHubLoadError ? menuActions : []}\n      resources={[\n        {\n          kind: referenceForModel(PackageManifestModel),\n          isList: true,\n          namespace: params.ns,\n          prop: 'packageManifests',\n        },\n      ]}\n    />\n  );\n};\n\nexport const CreateSubscriptionYAML: React.FC = (props) => {\n  type CreateProps = {\n    packageManifest: { loaded: boolean; data?: PackageManifestKind };\n    operatorGroup: { loaded: boolean; data?: OperatorGroupKind[] };\n  };\n  const { t } = useTranslation();\n  const params = useParams();\n  const location = useLocation();\n  const Create = requireOperatorGroup(\n    withFallback<CreateProps>(\n      (createProps) => {\n        if (createProps.packageManifest.loaded && createProps.packageManifest.data) {\n          const pkg = createProps.packageManifest.data;\n          const channel = pkg.status.defaultChannel\n            ? pkg.status.channels.find(({ name }) => name === pkg.status.defaultChannel)\n            : pkg.status.channels[0];\n\n          const template = `\n          apiVersion: ${SubscriptionModel.apiGroup}/${SubscriptionModel.apiVersion}\n          kind: ${SubscriptionModel.kind},\n          metadata:\n            generateName: ${pkg.metadata.name}-\n            namespace: default\n          spec:\n            source: ${new URLSearchParams(location.search).get('catalog')}\n            sourceNamespace: ${new URLSearchParams(location.search).get('catalogNamespace')}\n            name: ${pkg.metadata.name}\n            startingCSV: ${channel.currentCSV}\n            channel: ${channel.name}\n        `;\n          return (\n            <CreateYAML {...(props as any)} plural={SubscriptionModel.plural} template={template} />\n          );\n        }\n        return <LoadingBox />;\n      },\n      () => (\n        <ConsoleEmptyState title={t('olm~Package not found')}>\n          {t('olm~Cannot create a Subscription to a non-existent package.')}\n        </ConsoleEmptyState>\n      ),\n    ),\n  );\n\n  return (\n    <Firehose\n      resources={[\n        {\n          kind: referenceForModel(PackageManifestModel),\n          isList: false,\n          name: new URLSearchParams(location.search).get('pkg'),\n          namespace: new URLSearchParams(location.search).get('catalogNamespace'),\n          prop: 'packageManifest',\n        },\n        {\n          kind: referenceForModel(OperatorGroupModel),\n          isList: true,\n          namespace: params.ns,\n          prop: 'operatorGroup',\n        },\n      ]}\n    >\n      {/* FIXME(alecmerdler): Hack because `Firehose` injects props without TypeScript knowing about it */}\n      <Create {...(props as any)} />\n    </Firehose>\n  );\n};\n\nconst tableColumnClasses = [\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm'),\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nconst getRowProps = (obj) => ({\n  className: obj?.disabled ? 'catalog-source__table-row--disabled' : undefined,\n});\n\nconst CatalogSourceTableRow: React.FC<RowFunctionArgs<CatalogSourceTableRowObj>> = ({\n  obj: {\n    availability = '-',\n    disabled = false,\n    endpoint = '-',\n    isDefault = false,\n    name,\n    operatorCount = 0,\n    operatorHub,\n    publisher = '-',\n    registryPollInterval = '-',\n    status = '',\n    source,\n  },\n}) => (\n  <>\n    <TableData className={tableColumnClasses[0]}>\n      {source ? (\n        <ResourceLink\n          kind={catalogSourceModelReference}\n          name={source.metadata.name}\n          namespace={source.metadata.namespace}\n        />\n      ) : (\n        name\n      )}\n    </TableData>\n    <TableData className={tableColumnClasses[1]} data-test={`${source?.metadata.name}-status`}>\n      {status}\n    </TableData>\n    <TableData className={tableColumnClasses[2]}>{publisher}</TableData>\n    <TableData className={tableColumnClasses[3]}>{availability}</TableData>\n    <TableData className={tableColumnClasses[4]}>{endpoint}</TableData>\n    <TableData className={tableColumnClasses[5]}>{registryPollInterval}</TableData>\n    <TableData className={tableColumnClasses[6]}>{operatorCount || '-'}</TableData>\n    <TableData className={tableColumnClasses[7]}>\n      {isDefault ? (\n        <DefaultSourceKebab\n          kind={OperatorHubModel}\n          operatorHub={operatorHub}\n          sourceName={name}\n          sourceDisabled={disabled}\n          source={source}\n        />\n      ) : (\n        <ResourceKebab\n          actions={[\n            Kebab.factory.ModifyLabels,\n            Kebab.factory.ModifyAnnotations,\n            Kebab.factory.Edit,\n            deleteModal,\n          ]}\n          kind={catalogSourceModelReference}\n          resource={source}\n        />\n      )}\n    </TableData>\n  </>\n);\n\nconst CatalogSourceList: React.FC<TableProps> = (props) => {\n  const { t } = useTranslation();\n  const CatalogSourceHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Status'),\n        sortField: 'status',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('olm~Publisher'),\n        sortField: 'publisher',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('olm~Availability'),\n        sortField: 'availabilitySort',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('olm~Endpoint'),\n        sortField: 'endpoint',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[4] },\n      },\n      {\n        title: t('olm~Registry poll interval'),\n        sortField: 'registryPollInterval',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[5] },\n      },\n      {\n        title: t('olm~# of Operators'),\n        sortField: 'operatorCount',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[6] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[7] },\n      },\n    ];\n  };\n  return (\n    <Table\n      {...props}\n      aria-label={`${CatalogSourceModel.labelPlural}`}\n      Header={CatalogSourceHeader}\n      Row={CatalogSourceTableRow}\n      getRowProps={getRowProps}\n    />\n  );\n};\n\nconst DisabledPopover: React.FC<DisabledPopoverProps> = ({ operatorHub, sourceName }) => {\n  const [visible, setVisible] = React.useState<boolean>(null);\n  const close = React.useCallback(() => {\n    setVisible(false);\n  }, []);\n  const onClickEnable = React.useCallback(\n    () => enableSource(OperatorHubModel, operatorHub, sourceName).callback().then(close),\n    [close, operatorHub, sourceName],\n  );\n  const { t } = useTranslation();\n  return (\n    <PopoverStatus\n      title={t('olm~Disabled')}\n      isVisible={visible}\n      shouldClose={close}\n      statusBody={<StatusIconAndText title={t('olm~Disabled')} />}\n    >\n      <p>\n        {t(\n          'olm~Operators provided by this source will not appear in OperatorHub and any operators installed from this source will not receive updates until this source is re-enabled.',\n        )}\n      </p>\n      <Button isInline variant=\"link\" onClick={onClickEnable}>\n        {t('olm~Enable source')}\n      </Button>\n    </PopoverStatus>\n  );\n};\n\nconst getRegistryPollInterval = (catalogSource: CatalogSourceKind): string => {\n  return catalogSource.spec?.updateStrategy?.registryPoll?.interval;\n};\n\nconst flatten = ({\n  catalogSources,\n  operatorHub,\n  packageManifests,\n}: FlattenArgType): CatalogSourceTableRowObj[] => {\n  const defaultSources: CatalogSourceTableRowObj[] = _.map(\n    operatorHub.status?.sources,\n    (defaultSource) => {\n      const catalogSource = _.find(catalogSources.data, {\n        metadata: { name: defaultSource.name, namespace: DEFAULT_SOURCE_NAMESPACE },\n      });\n      const catalogSourceExists = !_.isEmpty(catalogSource);\n      return {\n        availability: catalogSourceExists ? (\n          i18n.t('olm~Cluster wide')\n        ) : (\n          <DisabledPopover operatorHub={operatorHub} sourceName={defaultSource.name} />\n        ),\n        // Add a string value for sorting by availability since React elements can't be sorted.\n        availabilitySort: catalogSourceExists ? 'Cluster wide' : 'Disabled',\n        disabled: !catalogSourceExists,\n        isDefault: true,\n        name: defaultSource.name,\n        namespace: DEFAULT_SOURCE_NAMESPACE,\n        operatorHub,\n        ...(catalogSourceExists && {\n          source: catalogSource,\n          endpoint: getEndpoint(catalogSource),\n          operatorCount: getOperatorCount(catalogSource, packageManifests.data),\n          publisher: catalogSource.spec.publisher,\n          registryPollInterval: getRegistryPollInterval(catalogSource),\n          status: catalogSource.status?.connectionState?.lastObservedState,\n        }),\n      };\n    },\n  );\n\n  const customSources: CatalogSourceTableRowObj[] = _.map(catalogSources.data, (source) => ({\n    availability:\n      source.metadata.namespace === DEFAULT_SOURCE_NAMESPACE\n        ? i18n.t('olm~Cluster wide')\n        : source.metadata.namespace,\n    endpoint: getEndpoint(source),\n    name: source.metadata.name,\n    namespace: source.metadata.namespace,\n    operatorCount: getOperatorCount(source, packageManifests.data),\n    operatorHub,\n    publisher: source.spec.publisher,\n    registryPollInterval: getRegistryPollInterval(source),\n    status: source.status?.connectionState?.lastObservedState,\n    source,\n  }));\n\n  return _.unionWith(\n    defaultSources,\n    customSources,\n    (a, b) => a.name === b.name && a.namespace === b.namespace,\n  );\n};\n\nexport const CatalogSourceListPage: React.FC<CatalogSourceListPageProps> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <MultiListPage\n      {...props}\n      canCreate\n      createAccessReview={{ model: CatalogSourceModel }}\n      createButtonText={t('olm~Create CatalogSource')}\n      createProps={{ to: `/k8s/cluster/${referenceForModel(CatalogSourceModel)}/~new` }}\n      flatten={(data) => flatten({ operatorHub: props.obj, ...data })}\n      ListComponent={CatalogSourceList}\n      textFilter=\"catalog-source-name\"\n      hideLabelFilter\n      resources={[\n        {\n          isList: true,\n          kind: referenceForModel(PackageManifestModel),\n          prop: 'packageManifests',\n        },\n        {\n          isList: true,\n          kind: catalogSourceModelReference,\n          prop: 'catalogSources',\n        },\n      ]}\n    />\n  );\n};\n\ntype CatalogSourceTableRowObj = {\n  availability: React.ReactNode;\n  disabled?: boolean;\n  endpoint?: React.ReactNode;\n  isDefault?: boolean;\n  name: string;\n  namespace: string;\n  operatorCount?: number;\n  operatorHub: OperatorHubKind;\n  publisher?: string;\n  registryPollInterval?: string;\n  status?: string;\n  source?: CatalogSourceKind;\n};\n\ntype DefaultSourceKebabProps = {\n  kind: K8sKind;\n  operatorHub: OperatorHubKind;\n  sourceName: string;\n  sourceDisabled: boolean;\n  source?: CatalogSourceKind;\n};\n\ntype DisabledPopoverProps = {\n  operatorHub: OperatorHubKind;\n  sourceName: string;\n};\n\ntype FlattenArgType = {\n  catalogSources?: FirehoseResult<CatalogSourceKind[]>;\n  packageManifests?: FirehoseResult<PackageManifestKind[]>;\n  operatorHub: OperatorHubKind;\n};\n\nexport type CatalogSourceDetailsProps = {\n  obj: CatalogSourceKind;\n  packageManifests: PackageManifestKind[];\n};\n\nexport type CatalogSourceListPageProps = {\n  obj: OperatorHubKind;\n} & MultiListPageProps;\n\nexport type CatalogSourceOperatorsPageProps = {\n  obj: CatalogSourceKind;\n} & MultiListPageProps;\n\nCatalogSourceDetails.displayName = 'CatalogSourceDetails';\nCatalogSourceDetailsPage.displayName = 'CatalogSourceDetailPage';\nCreateSubscriptionYAML.displayName = 'CreateSubscriptionYAML';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport { useResolvedExtensions } from '@console/dynamic-plugin-sdk/src/api/useResolvedExtensions';\nimport {\n  YAMLTemplate,\n  isYAMLTemplate,\n} from '@console/dynamic-plugin-sdk/src/extensions/yaml-templates';\nimport { getYAMLTemplates } from '../models/yaml-templates';\nimport { connectToPlural } from '../kinds';\nimport { AsyncComponent } from './utils/async';\nimport { Firehose, LoadingBox } from './utils';\nimport {\n  K8sKind,\n  apiVersionForModel,\n  referenceForModel,\n  K8sResourceKindReference,\n  K8sResourceKind,\n} from '../module/k8s';\nimport { ErrorPage404 } from './error';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\n\nexport const CreateYAMLInner = (props) => {\n  const {\n    params,\n    kindsInFlight,\n    kindObj,\n    hideHeader = false,\n    onChange = () => null,\n    resourceObjPath,\n    isCreate = true,\n  } = props;\n  const { t } = useTranslation();\n  const [templateExtensions, resolvedTemplates] = useResolvedExtensions<YAMLTemplate>(\n    React.useCallback(\n      (e): e is YAMLTemplate => isYAMLTemplate(e) && e.properties.model.kind === kindObj?.kind,\n      [kindObj],\n    ),\n  );\n  const yamlTemplates = React.useMemo(() => getYAMLTemplates(templateExtensions), [\n    templateExtensions,\n  ]);\n\n  if (!kindObj) {\n    if (kindsInFlight || !resolvedTemplates) {\n      return <LoadingBox />;\n    }\n    return <ErrorPage404 />;\n  }\n\n  const namespace = params.ns || 'default';\n  const template =\n    props.template ||\n    yamlTemplates.getIn([referenceForModel(kindObj), 'default']) ||\n    yamlTemplates.getIn(['DEFAULT', 'default']);\n\n  const obj = safeYAMLToJS(template);\n  obj.kind = kindObj.kind;\n  obj.metadata = obj.metadata || {};\n  if (kindObj.namespaced) {\n    obj.metadata.namespace = namespace;\n  }\n  if (kindObj.crd && template === yamlTemplates.getIn(['DEFAULT', 'default'])) {\n    obj.apiVersion = apiVersionForModel(kindObj);\n    obj.spec = obj.spec || {};\n  }\n  const header = t('public~Create {{objLabel}}', {\n    objLabel: kindObj.labelKey ? t(kindObj.labelKey) : kindObj.label,\n  });\n\n  // TODO: if someone edits namespace, we'll redirect to old namespace\n\n  return (\n    <AsyncComponent\n      loader={() => import('./droppable-edit-yaml').then((c) => c.DroppableEditYAML)}\n      initialResource={obj}\n      create={isCreate}\n      kind={kindObj.kind}\n      header={header}\n      hideHeader={hideHeader}\n      resourceObjPath={resourceObjPath}\n      onChange={onChange}\n    />\n  );\n};\n\nconst CreateYAML_ = connectToPlural(CreateYAMLInner);\n\nexport const CreateYAML = (props) => {\n  const params = useParams();\n  return <CreateYAML_ {...props} params={params} />;\n};\n\nexport const EditYAMLPage: React.SFC<EditYAMLPageProps> = (props) => {\n  const params = useParams();\n  const Wrapper = (wrapperProps) => (\n    <AsyncComponent\n      {...wrapperProps}\n      obj={wrapperProps.obj.data}\n      loader={() => import('./edit-yaml').then((c) => c.EditYAML)}\n      create={false}\n    />\n  );\n  return (\n    <Firehose\n      resources={[\n        {\n          kind: props.kind,\n          name: params.name,\n          namespace: params.ns,\n          isList: false,\n          prop: 'obj',\n        },\n      ]}\n    >\n      <Wrapper />\n    </Firehose>\n  );\n};\n\nexport type CreateYAMLProps = {\n  match?: any;\n  params?: any;\n  kindsInFlight: boolean;\n  kindObj: K8sKind;\n  template?: string;\n  download?: boolean;\n  header?: string;\n  hideHeader?: boolean;\n  isCreate?: boolean;\n  resourceObjPath?: (obj: K8sResourceKind, kind: K8sResourceKindReference) => string;\n  onChange?: (yaml: string) => any;\n};\n\nexport type EditYAMLPageProps = {\n  kind: string;\n};\n\nCreateYAML.displayName = 'CreateYAML';\nEditYAMLPage.displayName = 'EditYAMLPage';\n","import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useParams, Link } from 'react-router-dom-v5-compat';\nimport {\n  MultiListPage,\n  Table,\n  TableData,\n  Flatten,\n  Filter,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport {\n  ConsoleEmptyState,\n  Timestamp,\n  ResourceLink,\n  resourcePathFromModel,\n} from '@console/internal/components/utils';\nimport i18n from '@console/internal/i18n';\nimport { MatchExpression, referenceForModel } from '@console/internal/module/k8s';\nimport { OPERATOR_HUB_LABEL } from '@console/shared';\nimport { PackageManifestModel, CatalogSourceModel } from '../models';\nimport { PackageManifestKind, CatalogSourceKind } from '../types';\nimport { ClusterServiceVersionLogo } from './cluster-service-version-logo';\nimport { visibilityLabel, iconFor, defaultChannelFor } from './index';\n\nconst tableColumnClasses = [\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  '',\n];\n\nexport const PackageManifestTableHeader = () => [\n  {\n    title: i18n.t('public~Name'),\n    sortFunc: 'sortPackageManifestByDefaultChannelName',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[0] },\n  },\n  {\n    title: i18n.t('public~Latest version'),\n    props: { className: tableColumnClasses[1] },\n  },\n  {\n    title: i18n.t('public~Created'),\n    sortField: 'metadata.creationTimestamp',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[2] },\n  },\n];\n\nexport const PackageManifestTableHeaderWithCatalogSource = () => [\n  ...PackageManifestTableHeader(),\n  {\n    title: i18n.t('olm~CatalogSource'),\n    sortField: 'status.catalogSource',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[3] },\n  },\n];\n\nexport const PackageManifestTableRow: React.FC<RowFunctionArgs<\n  PackageManifestKind,\n  { catalogSource: CatalogSourceKind }\n>> = ({ obj: packageManifest, customData }) => {\n  const channel = defaultChannelFor(packageManifest);\n\n  const { displayName, version, provider } = channel?.currentCSVDesc;\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <Link\n          to={resourcePathFromModel(\n            PackageManifestModel,\n            packageManifest.metadata.name,\n            packageManifest.metadata.namespace,\n          )}\n        >\n          <ClusterServiceVersionLogo\n            displayName={displayName}\n            icon={iconFor(packageManifest)}\n            provider={provider.name}\n          />\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        {version} ({channel.name})\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Timestamp timestamp={packageManifest.metadata.creationTimestamp} />\n      </TableData>\n      {!customData.catalogSource && (\n        <TableData className={tableColumnClasses[3]}>\n          <ResourceLink\n            kind={referenceForModel(CatalogSourceModel)}\n            name={packageManifest.status?.catalogSource}\n            namespace={packageManifest.status?.catalogSourceNamespace}\n          />\n        </TableData>\n      )}\n    </>\n  );\n};\n\nconst PackageManifestListEmptyMessage = () => {\n  const { t } = useTranslation();\n  return (\n    <ConsoleEmptyState title={t('olm~No PackageManifests Found')}>\n      {t('olm~The CatalogSource author has not added any packages.')}\n    </ConsoleEmptyState>\n  );\n};\n\nexport const PackageManifestList = (props: PackageManifestListProps) => {\n  const { customData } = props;\n\n  // If the CatalogSource is not present, display PackageManifests along with their CatalogSources (used in PackageManifest Search page)\n  const TableHeader = customData.catalogSource\n    ? PackageManifestTableHeader\n    : PackageManifestTableHeaderWithCatalogSource;\n\n  return (\n    <Table\n      {...props}\n      aria-label=\"PackageManifests\"\n      loaded={props.loaded}\n      data={props.data || []}\n      filters={props.filters}\n      Header={TableHeader}\n      Row={PackageManifestTableRow}\n      EmptyMsg={PackageManifestListEmptyMessage}\n      virtualize\n    />\n  );\n};\n\nexport const PackageManifestsPage: React.FC<PackageManifestsPageProps> = (props) => {\n  const { catalogSource } = props;\n  const { ns: namespace } = useParams();\n\n  const flatten: Flatten = (resources) => _.get(resources.packageManifest, 'data', []);\n\n  const helpText = (\n    <Trans ns=\"olm\">\n      Catalogs are groups of Operators you can make available on the cluster. Use{' '}\n      <Link to=\"/operatorhub\">OperatorHub</Link> to subscribe and grant namespaces access to use\n      installed Operators.\n    </Trans>\n  );\n\n  const customData = React.useMemo(\n    () => ({\n      catalogSource,\n    }),\n    [catalogSource],\n  );\n\n  return (\n    <MultiListPage\n      {...props}\n      customData={customData}\n      namespace={namespace}\n      showTitle={false}\n      helpText={helpText}\n      ListComponent={PackageManifestList}\n      textFilter=\"packagemanifest-name\"\n      flatten={flatten}\n      resources={[\n        {\n          kind: referenceForModel(PackageManifestModel),\n          isList: true,\n          namespaced: true,\n          prop: 'packageManifest',\n          selector: {\n            matchExpressions: [\n              ...((catalogSource\n                ? [\n                    {\n                      key: 'catalog',\n                      operator: 'In',\n                      values: [catalogSource?.metadata.name],\n                    },\n                    {\n                      key: 'catalog-namespace',\n                      operator: 'In',\n                      values: [catalogSource?.metadata.namespace],\n                    },\n                  ]\n                : []) as MatchExpression[]),\n              { key: visibilityLabel, operator: 'DoesNotExist' },\n              { key: OPERATOR_HUB_LABEL, operator: 'DoesNotExist' },\n            ],\n          },\n        },\n      ]}\n    />\n  );\n};\n\nexport type PackageManifestsPageProps = {\n  catalogSource: CatalogSourceKind;\n  namespace?: string;\n};\n\nexport type PackageManifestListProps = {\n  customData?: { catalogSource: CatalogSourceKind };\n  namespace?: string;\n  data: PackageManifestKind[];\n  filters?: Filter[];\n  loaded: boolean;\n  loadError?: string | Record<string, any>;\n  showDetailsLink?: boolean;\n};\n\nPackageManifestTableHeader.displayName = 'PackageManifestTableHeader';\nPackageManifestTableHeaderWithCatalogSource.displayName =\n  'PackageManifestTableHeaderWithCatalogSource';\nPackageManifestList.displayName = 'PackageManifestList';\n","import * as React from 'react';\nimport { Label, FormAlert, Alert, Tooltip, AlertActionCloseButton } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk/src/api/core-api';\nimport { DeprecatedOperatorWarning } from '@console/operator-lifecycle-manager/src/types';\nimport { SubscriptionKind } from '../../types';\n\nexport enum DeprecatedOperatorType {\n  PackageDeprecated = 'PackageDeprecated',\n  ChannelDeprecated = 'ChannelDeprecated',\n  VersionDeprecated = 'BundleDeprecated',\n}\nconst findDeprecation = (obj: SubscriptionKind, type: string): DeprecatedOperatorWarning => {\n  return { deprecation: obj?.status?.conditions?.find((f) => f.type === type) };\n};\n\nexport const findDeprecatedOperator = (\n  obj: SubscriptionKind,\n): {\n  deprecatedPackage: DeprecatedOperatorWarning;\n  deprecatedChannel: DeprecatedOperatorWarning;\n  deprecatedVersion: DeprecatedOperatorWarning;\n} => {\n  return {\n    deprecatedPackage: findDeprecation(obj, DeprecatedOperatorType.PackageDeprecated),\n    deprecatedChannel: findDeprecation(obj, DeprecatedOperatorType.ChannelDeprecated),\n    deprecatedVersion: findDeprecation(obj, DeprecatedOperatorType.VersionDeprecated),\n  };\n};\n\nexport const DeprecatedOperatorWarningBadge: React.FC<DeprecatedOperatorWarningBadge> = ({\n  deprecation,\n  className,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip content={t('olm~Deprecated: {{message}}', { message: deprecation?.message })}>\n      <Label\n        data-test=\"deprecated-operator-warning-badge\"\n        color=\"orange\"\n        className={className}\n        icon={<YellowExclamationTriangleIcon />}\n      >\n        {t('olm~Deprecated')}\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport const DeprecatedOperatorWarningIcon: React.FC<DeprecatedOperatorWarningIcon> = ({\n  deprecation,\n  dataTest,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Tooltip content={t('olm~Deprecated: {{message}}', { message: deprecation?.message })}>\n      <YellowExclamationTriangleIcon dataTest={dataTest} className=\"pf-v5-u-ml-xs\" />\n    </Tooltip>\n  );\n};\n\nexport const DeprecatedOperatorWarningAlert: React.FC<DeprecatedOperatorWarningProps> = ({\n  deprecatedPackage,\n  deprecatedChannel,\n  deprecatedVersion,\n  dismissible,\n}) => {\n  const { t } = useTranslation();\n  const [alertVisible, setAlertVisible] = React.useState<boolean>(true);\n\n  return (\n    alertVisible && (\n      <FormAlert className=\"pf-v5-u-my-md\">\n        <Alert\n          variant=\"warning\"\n          title={t('olm~Deprecated warnings')}\n          aria-live=\"polite\"\n          isInline\n          actionClose={\n            dismissible && <AlertActionCloseButton onClose={() => setAlertVisible(false)} />\n          }\n        >\n          <div data-test=\"deprecated-operator-warning-package\">\n            {deprecatedPackage?.deprecation?.message}\n          </div>\n          <div data-test=\"deprecated-operator-warning-channel\">\n            {deprecatedChannel?.deprecation?.message}\n          </div>\n          <div data-test=\"deprecated-operator-warning-version\">\n            {deprecatedVersion?.deprecation?.message}\n          </div>\n        </Alert>\n      </FormAlert>\n    )\n  );\n};\n\ntype DeprecatedOperatorWarningBadge = {\n  className?: string;\n} & DeprecatedOperatorWarning;\n\ntype DeprecatedOperatorWarningIcon = {\n  dataTest?: string;\n} & DeprecatedOperatorWarning;\n\ntype DeprecatedOperatorWarningProps = {\n  deprecatedPackage: DeprecatedOperatorWarning;\n  deprecatedChannel: DeprecatedOperatorWarning;\n  deprecatedVersion: DeprecatedOperatorWarning;\n  dismissible?: boolean;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DeprecatedOperatorWarning } from '@console/operator-lifecycle-manager/src/types';\nimport operatorLogo from '../operator.svg';\nimport { ClusterServiceVersionIcon } from '../types';\nimport { DeprecatedOperatorWarningBadge } from './deprecated-operator-warnings/deprecated-operator-warnings';\n\nexport const ClusterServiceVersionLogo: React.FC<ClusterServiceVersionLogoProps> = (props) => {\n  const { icon, displayName, provider, version, deprecation } = props;\n  const { t } = useTranslation();\n\n  const imgSrc: string = _.isString(icon)\n    ? icon\n    : _.isEmpty(icon)\n    ? operatorLogo\n    : `data:${icon.mediatype};base64,${icon.base64data}`;\n\n  return (\n    <div className=\"co-clusterserviceversion-logo\">\n      <div className=\"co-clusterserviceversion-logo__icon\">\n        <span className=\"co-catalog-item-icon__bg\">\n          <img\n            className=\"co-catalog-item-icon__img co-catalog-item-icon__img--large\"\n            src={imgSrc}\n            alt={displayName}\n            aria-hidden\n          />\n        </span>\n      </div>\n      <div className=\"co-clusterserviceversion-logo__name\">\n        <h1 className=\"co-clusterserviceversion-logo__name__clusterserviceversion\">\n          {displayName}{' '}\n          {deprecation && (\n            <DeprecatedOperatorWarningBadge className=\"pf-v5-u-ml-sm\" deprecation={deprecation} />\n          )}\n        </h1>\n        {provider && (\n          <span className=\"co-clusterserviceversion-logo__name__provider text-muted\">\n            {t('olm~{{version}} provided by {{provider}}', {\n              version: version || '',\n              provider: _.get(provider, 'name', provider),\n            })}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\nexport type ClusterServiceVersionLogoProps = {\n  displayName: string;\n  icon: ClusterServiceVersionIcon | string;\n  provider?: { name: string } | string;\n  version?: string;\n} & DeprecatedOperatorWarning;\n","module.exports = __webpack_public_path__ + \"assets/packages/operator-lifecycle-manager/src/operator.svg\";"],"sourceRoot":""}