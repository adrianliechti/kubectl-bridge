{"version":3,"sources":["webpack:///./packages/topology/src/operators/components/OperatorBackedService.tsx","webpack:///./packages/topology/src/operators/components/OperatorBackedServiceGroup.tsx","webpack:///./packages/topology/src/operators/components/OperatorBackedServiceNode.tsx","webpack:///./packages/topology/src/components/workload/index.ts","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/topology/src/actions/provider.ts","webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./public/components/replicaset.jsx","webpack:///./public/components/daemon-set.tsx","webpack:///./public/components/deployment.tsx","webpack:///./packages/topology/src/operators/operatorFilters.ts","webpack:///./packages/topology/src/operators/operators-data-transformer.ts","webpack:///./packages/topology/src/operators/components/operatorsComponentFactory.ts","webpack:///./packages/topology/src/operators/operatorsDataModelReconciler.ts","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/topology/src/utils/index.ts","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/extensions/topology.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/topology/src/utils/useOverviewMetrics.ts","webpack:///./packages/topology/src/utils/metricStats.ts","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/topology/src/utils/createConnection.tsx","webpack:///./packages/topology/src/utils/withEditReviewAccess.tsx","webpack:///./packages/topology/src/utils/useMetricStats.ts","webpack:///./packages/topology/src/utils/removeConnection.tsx","webpack:///./packages/topology/src/utils/moveNodeToGroup.tsx","webpack:///./packages/topology/src/components/side-bar/TopologySideBarTabSection.tsx","webpack:///./packages/topology/src/topology-types.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/Decorator.tsx","webpack:///./packages/topology/src/filters/index.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/BaseEdge.tsx","webpack:///./packages/topology/src/components/workload/utils.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/topology/src/filters/const.ts","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/actions/creators/common-factory.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/topology/src/components/svg/SvgDropShadowFilter.tsx","webpack:///./packages/topology/src/actions/edgeActions.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./packages/topology/src/actions/modify-application.ts","webpack:///./packages/topology/src/filters/filter-utils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/topology/src/actions/contextMenuActions.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/BaseNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecoratorBubble.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNode.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./packages/topology/src/components/graph-view/components/index.ts","webpack:///./packages/topology/src/components/graph-view/components/componentUtils.ts","webpack:///./packages/topology/src/components/graph-view/components/nodeContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/index.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/index.ts","webpack:///./packages/topology/src/filters/useDisplayFilters.ts","webpack:///./packages/topology/src/components/svg/SvgCircledIcon.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/GroupNodeAnchor.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/ResourceKindsInfo.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/PodSet.tsx","webpack:///./packages/dev-console/src/components/import/GiteaIcon.tsx","webpack:///./packages/topology/src/elements/OdcBaseEdge.ts","webpack:///./packages/topology/src/components/graph-view/index.ts","webpack:///./packages/topology/src/filters/FilterProvider.tsx","webpack:///./packages/topology/src/actions/index.ts","webpack:///./packages/topology/src/filters/useShowLabel.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/nodeUtils.ts","webpack:///./packages/topology/src/components/workload/CronJobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DaemonSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentConfigSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/DeploymentSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/JobSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/pods-tab-section.tsx","webpack:///./packages/topology/src/components/workload/ResolveAdapter.ts","webpack:///./packages/topology/src/components/workload/StatefulSetSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/workload-resource-link.tsx","webpack:///./packages/topology/src/components/workload/build-tab-section.tsx","webpack:///./packages/topology/src/components/workload/network-tab-section.tsx","webpack:///./packages/topology/src/components/workload/jobs-tab-section.tsx","webpack:///./packages/topology/src/components/workload/PodSideBarDetails.tsx","webpack:///./packages/topology/src/components/workload/resource-alert.tsx","webpack:///./packages/topology/src/components/workload/vpa-tab-section.tsx","webpack:///./packages/rhoas-plugin/src/topology/components/const.ts","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/BuildDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/EditDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/MonitoringAlertsDecorator.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/UrlDecorator.tsx","webpack:///./packages/console-app/src/actions/creators/deployment-factory.ts","webpack:///./packages/topology/src/actions/nodeActions.ts","webpack:///./packages/topology/src/behavior/useHover.ts","webpack:///./packages/topology/src/behavior/withCreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/componentFactory.ts","webpack:///./packages/topology/src/components/graph-view/components/edges/AggregateEdge.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ConnectsTo.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/CreateConnector.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/ServiceBinding.tsx","webpack:///./packages/topology/src/components/graph-view/components/edges/TrafficConnector.tsx","webpack:///./packages/topology/src/filters/useAppliedDisplayFilters.ts","webpack:///./packages/topology/src/filters/useSearchFilter.ts","webpack:///./packages/topology/src/components/graph-view/components/groups/Application.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/WorkloadNode.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/index.ts","webpack:///./packages/topology/src/components/graph-view/components/NodeShadows.tsx","webpack:///./packages/topology/src/components/graph-view/Topology.tsx","webpack:///./packages/topology/src/elements/odcElementFactory.ts","webpack:///./packages/dev-console/src/components/import/render-utils.tsx","webpack:///./packages/dev-console/src/components/import/CheIcon.tsx","webpack:///./packages/topology/src/components/modals/MoveConnectionModal.tsx","webpack:///./packages/topology/src/components/modals/index.ts","webpack:///./packages/console-app/src/components/vpa/VerticalPodAutoscalerRecommendations.tsx","webpack:///./packages/topology/src/elements/index.ts","webpack:///./packages/topology/src/redux/action.ts","webpack:///./packages/console-shared/src/components/pod/PodsOverview.tsx","webpack:///./packages/topology/src/components/workload/BuildOverview.tsx","webpack:///./packages/topology/src/components/workload/NetworkingOverview.tsx","webpack:///./packages/topology/src/components/workload/JobsOverview.tsx","webpack:///./packages/topology/src/components/graph-view/components/nodes/decorators/getNodeDecorators.tsx","webpack:///./packages/topology/src/data-transforms/useRoutesURL.ts","webpack:///./packages/topology/src/components/graph-view/components/withTopologyContextMenu.tsx","webpack:///./packages/topology/src/components/graph-view/components/GraphComponent.tsx","webpack:///./packages/topology/src/redux/const.ts","webpack:///./packages/topology/src/components/graph-view/components/RegroupHint.tsx","webpack:///./packages/topology/src/components/graph-view/components/groups/ApplicationGroupExpanded.tsx","webpack:///./packages/topology/src/components/graph-view/layouts/layoutFactory.ts","webpack:///./packages/topology/src/components/graph-view/layouts/TopologyColaLayout.ts","webpack:///./packages/knative-plugin/src/topology/layouts/layoutConstraints.ts","webpack:///./packages/topology/src/components/graph-view/TopologyControlBar.tsx"],"names":["state","serviceBinding","element","rest","spec","accept","canDrop","item","monitor","props","nodeElement","getOperation","type","getTargetEdges","find","e","getSource","collect","dropTarget","isOver","shallow","edgeDragging","dropHint","obsDropTargetSpec","dndDropProps","dndDropRef","resourceObj","resourceModel","editAccess","group","apiGroup","verb","resource","plural","name","metadata","namespace","data","getData","ownerReferenceKind","kind","operatorKind","apiVersion","kindAbbr","kindStr","kindColor","badgeClassName","toLowerCase","isCollapsed","badge","badgeColor","selected","onSelect","dragNodeRef","dragging","onContextMenu","contextMenuOpen","ref","t","hover","hoverRef","innerHover","innerHoverRef","labelDragging","dragLabelRef","nodeRefs","hasChildren","getChildren","length","filtered","getLabel","labels","showLabel","x","y","width","height","getBounds","node","onClick","className","id","undefined","triggerRef","content","trigger","isVisible","animationDuration","position","key","rx","ry","filter","dy","textAnchor","paddingX","paddingY","labelIconClass","builderImage","dragRef","bgClassName","useTopologyWorkloadActionProvider","actions","getType","k8sKind","useTopologyVisualConnectorActionProvider","kindObj","inFlight","ModifyCount","AddStorage","common","factory","menuActions","obj","labelKey","callback","dc","req","latest","force","opts","ns","path","rollout","catch","err","error","message","accessReview","subresource","paused","getDeploymentConfigStatus","conditions","progressingFailure","reason","status","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","timeout","updatePeriod","interval","triggers","join","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","variant","title","href","deprecatedDeploymentConfig","text","additionalClassName","DeploymentConfigsDetails","model","uid","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","context","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","to","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","creationTimestamp","ReplicationControllersList","sortField","transforms","sortFunc","ReplicationControllersPage","Details","replicaSet","ReplicaSetPods","ReplicaSetsDetailsPage","ReplicaSetTableRow","count1","count2","ReplicaSetsList","ReplicaSetsPage","getExtensionsActionsForKind","DaemonSetDetailsList","ds","DaemonSetDetails","daemonset","podData","resourceKind","enableScaling","EnvironmentTab","DaemonSetTableRow","currentNumber","currentNumberScheduled","desiredNumber","desiredNumberScheduled","DaemonSets","DaemonSetsPage","DaemonSetPods","DaemonSetsDetailsPage","prometheusIsAvailable","metrics","deployment","DeploymentDetailsList","rollingUpdate","progressDeadlineSeconds","DeploymentDetails","ReplicaSetsTab","DeploymentsDetailsPage","DeploymentTableRow","DeploymentTableHeader","DeploymentsList","DeploymentsPage","EXPAND_OPERATORS_RELEASE_FILTER","getTopologyFilters","expand","priority","value","applyOperatorDisplayOptions","filters","found","appliedFilters","expanded","nodes","forEach","d","push","collapsed","applyDisplayOptions","edgesFromServiceBinding","source","sbrs","sourceBindings","sbr","edgeExists","reference","application","labelSelector","matchLabels","matches","getServiceBindingEdges","obsGroups","installedOperators","edges","services","bss","targetGroup","target","getOperatorGroupResource","resources","clusterServiceVersions","operatorBackedServiceKindMap","ownerReference","ownerReferences","ownerUid","nodeResourceKind","operatorBackedServiceKind","appGroup","operator","op","csvName","operatorName","groupUid","operatorGroupItem","getOperatorGroupResources","groupResource","getOperatorTopologyDataModel","workloads","operatorsDataModel","serviceBindingRequests","Promise","resolve","getOperatorsComponentFactory","controlled","topLevelParent","parent","n","children","includes","OBSModelProps","visible","shape","rect","style","padding","operatorsDataModelReconciler","defaultIcon","camelSinkKameletBindings","obsGroupNodes","csv","crdKinds","customresourcedefinitions","owned","map","crd","operatorGroupNodes","reduce","groupNodes","owner","nodeOwnerKind","Object","keys","operatorNodes","baseNode","buildConfigs","routes","isOperatorBackedService","groupResources","icon","csvIcon","operatorIcon","acc","dataParent","g","topLevelDataParent","obsNode","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","contextPart","replace","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","getRoutesURL","getTopologyResourceObject","topologyObject","getResource","getResourceKind","updateTopologyResourceApplication","itemData","reject","updates","nextResource","Error","all","createTopologyResourceConnection","replaceTarget","removeTopologyResourceConnection","edge","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","DroppableFileInput","API_PROXY_URL","convertHeaders","headers","output","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","setSecret","inProgress","setInProgress","setError","setStringData","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","cancel","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","s","onSave","renderBody","disabled","htmlFor","onChange","required","onFormDisable","disable","onSubmit","errorMessage","submitText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","r","getContents","specificPath","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","json","slug","ResourceNotFound","values","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","RegExp","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","test","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","succeedCondition","cancelledCondition","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","transform","cv","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","tag","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","labelPluralKey","abbr","namespaced","labelPlural","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","tr","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","annotationKey","pipelinesTab","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","some","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","queryParams","accessCheckRequired","canListResource","allowed","safeKill","deleteWebhooks","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","isList","prop","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","editURL","vcsRef","isKnativeResource","getTopologyNodeItem","nodeProps","WorkloadModelProps","getTopologyEdgeItems","targetNode","edgeApiVersion","edgeKind","edgeName","getTopologyGroupItems","groupName","mergeGroup","newGroup","existingGroups","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","jobs","cronJobs","statefulSets","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","val","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","serviceName","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","isTopologyComponentFactory","isTopologyDataModelFactory","isTopologyCreateConnector","isTopologyDisplayFilters","isTopologyDecoratorProvider","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","labelPosition","bottom","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","getInternalBounds","getStyle","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","useOverviewMetrics","UI","getIn","getPodMetricStats","currentPods","current","totalBytes","totalCores","memoryByPod","cpuByPod","bytes","isFinite","formattedValue","cores","deploymentData","inProgressDeploymentData","completedDeploymentData","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","size","createConnection","sourceNode","replaceTargetNode","withEditReviewAccess","WrappedComponent","Component","canEdit","useMetricStats","removeConnection","messageKey","btnTextKey","submitDanger","executeFn","moveNodeToGroup","sourceGroup","getParent","titleKey","nodeLabel","sourceLabel","targetLabel","close","TopologyViewType","TopologyDisplayFilterType","SHOW_GROUPING_HINT_EVENT","radius","ariaLabel","external","decorator","showBackground","rel","stopPropagation","role","endTerminalType","directional","onShowRemoveConnector","onHideRemoveConnector","targetDragRef","sourceDragRef","getDataFromAdapter","resolvedExtensions","properties","adapt","usePodsAdapterForWorkloads","podsAdapterForWorkloads","provider","buildsAdapterForWorkloads","networkAdapterForWorkloads","usePodsAdapterForCronJobWorkloads","setPods","setLoaded","setLoadError","watchedResources","errorKey","updatedPods","podsAdapterForCronJobWorkload","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","revisions","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","traffic","curr","el","rev","revisionName","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","percent","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSourceKameletBindings","binding","sinkResource","findIndex","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","SHOW_POD_COUNT_FILTER_ID","SHOW_LABELS_FILTER_ID","EXPAND_APPLICATION_GROUPS_FILTER_ID","EXPAND_GROUPS_FILTER_ID","DEFAULT_TOPOLOGY_FILTERS","DEFAULT_SUPPORTED_FILTER_IDS","healthChecksAdded","healthChecksUrl","AddHealthChecks","hidden","EditHealthChecks","CommonActionFactory","Delete","cta","Edit","ModifyLabels","blocking","ModifyAnnotations","ModifyPodSelector","ModifyTolerations","modalClassName","getCommonResourceActions","NodeType","EdgeType","KameletType","dx","stdDeviation","floodColor","floodOpacity","window","navigator","userAgent","in","in2","getAvailableTargetForEdge","currentTargets","getSourceEdges","getId","n1","n2","localeCompare","MoveConnectorAction","getElements","availableTargets","DeleteConnectorAction","edgeActions","moveConnection","resourceLimitsModal","m","getModifyApplicationAction","insertBefore","initialApplication","TOPOLOGY_SEARCH_FILTER_KEY","TOPOLOGY_LABELS_FILTER_KEY","NameLabelFilterValues","onSearchChange","searchQuery","clearNameFilter","clearLabelFilter","clearAll","getSupportedTopologyFilters","topology","plugins","devconsole","getSupportedTopologyKinds","getTopologySearchQuery","getFilterById","isExpanded","showKind","WorkloadTableRow","customData","WorkloadTableHeader","createContextMenuItems","option","SUB_MENU","GROUP_MENU","action","graphActionContext","graph","connectorSource","groupActionContext","contextMenuActions","innerRadius","onShowCreateConnector","createConnectorAccessVerb","createConnectorDrag","alertVariant","hoverChange","setHoverChange","internalHoverRef","nodeHoverRefs","cx","cy","iconRadius","kindData","detailsLevel","getDetailsLevel","showDetails","low","prev","truncateLength","scaleNode","high","showStatusBackground","fill","xlinkHref","otherDecoratorProps","fontSize","truncateOptions","emptyValue","typeIconClass","textHover","textHoverRef","iconSize","iconRef","iconWidth","iconHeight","groupSize","groupRef","getCustomShape","iconClass","TOP_MARGIN","top","EditResourceLimits","hasHPAs","mapOfResources","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","actionOptions","MOVE_CONNECTOR_DROP_TYPE","NODE_DRAG_TYPE","EDGE_DRAG_TYPE","canDropEdgeOnNode","operation","highlightNode","isDragging","getItem","canDropOnNode","nodeDragSourceSpec","allowRegroup","SHIFT","edit","canCancel","begin","dropResult","isCancelled","didDrop","controller","getNodeById","appendChild","regrouping","noRegroupDragSourceSpec","nodesEdgeIsDragging","nodeDropTargetSpec","graphDropTargetSpec","hitTest","getItemType","hasParent","dragInProgress","dragEditInProgress","dragCreate","hasDropTarget","applicationGroupDropTargetSpec","droppable","dragRegroupable","edgeDragSourceSpec","failureTitle","raise","drag","setEndPoint","showIcon","noDropTargetSpec","withNoDrop","withContextMenu","document","getElementById","createVisualConnector","createConnectorCallback","dropHints","relationshipProviders","relationshipProviderExtensions","curRelProvider","create","createConnectors","createConnectorExtensions","creator","getter","isWorkloadRegroupable","groupContextMenu","graphContextMenu","useDisplayFilters","FILTER_ID","circleRef","typedIconSize","typedIconRef","GroupNodeAnchor","offset","center","offset2x","resourcesData","resourceTypes","RESOURCE_INFO_PADDING","calculateInnerPodStatusRadius","outerPodStatusInnerRadius","outerPodStatusWidth","innerPodStatusOuterRadius","innerPodStatusInnerRadius","podSetInnerRadius","podStatusInnerRadius","podStatusStrokeWidth","innerStrokeWidth","podStatusInset","PodSet","showPodCount","podStatusOuterRadius","hpaControlledScaling","ownerKind","subTitle","titleComponent","outerRadius","xmlns","viewBox","OdcBaseEdge","getAppliedFilters","useFilterContextValues","setAppliedFilters","appliedFiltersLoaded","filtersLoaded","setFiltersLoaded","setFilters","setTopologyFilters","displayFilters","FilterContext","FilterProvider","Provider","useShowLabel","showLabelsFilter","getKindStringAndAbbreviation","CronJobSideBarDetails","cronjob","startingDeadlineSeconds","lastScheduleTime","useCronJobSideBarDetails","DaemonSetSideBarDetails","useDaemonSetSideBarDetails","DeploymentConfigSideBarDetails","useDeploymentConfigSideBarDetails","DeploymentSideBarDetails","useDeploymentSideBarDetails","JobSideBarDetails","job","activeDeadlineSeconds","useJobSideBarDetails","PodsTabSection","podAdapter","podAdapterExtensionResolved","podsData","podsDataLoaded","setPodData","handleAdapterResolved","setTimeout","useAdapterHook","onAdapterDataResolved","usePodsSideBarTabSection","podAdapterExtension","StatefulSetSideBarDetails","ss","useStatefulSetSideBarDetails","getWorkloadResourceLink","kindReference","BuildTabSection","buildAdapter","extensionsResolved","buildConfigsDataLoaded","setBuildConfigsData","useBuildsSideBarTabSection","buildAdapterExtensions","NetworkTabSection","networkAdapter","useNetworkingSideBarTabSection","networkAdapterExtensions","extensionsLoaded","JobsTabSection","useJobsSideBarTabSection","PodSideBarDetails","pod","usePodSideBarDetails","addHealthChecksRefs","useHealthChecksAlert","kindForCRDResource","canAddHealthChecks","canAddHealthChecksLoading","containersName","showAlert","addHealthChecksLink","alertMessage","dismissible","useResourceQuotaAlert","fireTelemetryEvent","canUseAlertAction","canUseAlertActionLoading","replicaFailureMsg","resourceQuotaRequested","alertAction","showAlertActionLink","alertActionCta","alertActionLink","actionLinks","VPATabSection","vpas","vpa","groupVersionKind","useVpaSideBarTabSection","verticalPodAutoscalers","KAFKA_WIDTH","KAFKA_HEIGHT","KAFKA_PADDING","TYPE_MANAGED_KAFKA_CONNECTION","link","left","iconOnly","noTooltip","workloadData","cheEnabled","editUrl","repoIcon","right","dispatch","showMonitoringOverview","firingAlerts","severityAlertType","retryRollout","DeploymentActionFactory","EditDeployment","UpdateStrategy","PauseRollout","RestartRollout","restartRollout","disabledTooltip","StartDCRollout","deploymentConfigRollout","CreateServiceBinding","EMPTY","delayIn","delayOut","setHover","mountRef","unsetHandle","delayHandle","delayedStateChange","newState","delay","clearTimeout","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","DEFAULT_HANDLE_ANGLE","PI","DEFAULT_HANDLE_ANGLE_TOP","DEFAULT_HANDLE_LENGTH","CreateConnectorWidget","onKeepAlive","onCreate","ConnectorComponent","handleAngle","handleAngleTop","handleLength","contextMenuClass","dragItem","dragOperation","hideConnectorMenu","prompt","setPrompt","setActive","hintsRef","dragProps","getDragEvent","choices","getDropHints","hints","refs","dragEvent","startPoint","endPoint","getAnchor","getLocation","isRightLabel","getLabelPosition","referencePoint","tan","cos","sin","translateFromParent","topologyDefaultCreateConnector","fillOpacity","pageX","pageY","open","onRequestClose","withCreateConnector","setShow","alive","setKeepAlive","onHideCreateConnector","isAlive","componentFactory","others","bidirectional","none","directionalAlt","tipContents","hasError","ERROR","errorCross","getStartPoint","getEndPoint","centerX","centerY","angleDeg","atan2","classNames","topologyEdge","danger","topologyConnectorArrow","x1","y1","x2","y2","strokeWidth","endTerminalStatus","useAppliedDisplayFilters","EMPTY_QUERY_PARAMS","useSearchFilter","labelsQuery","labelsMatched","labelsString","fuzzyCaseInsensitive","needsHintRef","needsHint","groupClasses","StatusSeverities","warning","normal","getAggregateStatus","donutStatus","alertSeverity","buildStatus","pipelineStatus","workloadRqAlertVariant","worstPodStatus","podStatus","CrashLoopBackOff","Warning","getNodePodStatus","Critical","WorkloadPodsNode","urlAnchorRef","dropTooltip","decoratorRadius","tipContent","showPodCountFilter","decorators","iconImageUrl","nodeDecorators","workloadRqAlert","nodeStatus","attachments","WorkloadNode","NODE_SHADOW_FILTER_ID","NODE_SHADOW_FILTER_ID_HOVER","NodeShadows","STORED_NODE_LAYOUT_FIELDS","TopologyGraphView","visualizationReady","visualization","controlsDisabled","selectedId","dragHint","selectedIds","layout","layers","getStoredGraphModel","onGraphModelChange","setVisualization","userSettingState","topologyLayoutDataJson","setUserSettingState","setTopologyLayoutData","applicationRef","setVisualizationReady","setDragHint","storedLayoutApplied","componentFactoryExtensions","isStaticResolved","dynamicComponentFactoryExtensions","isDynamicResolved","createVisualization","storedLayout","newVisualization","registerElementFactory","registerLayoutFactory","onCurrentGraphModelChange","visModel","saveGraphModel","scale","scaleExtent","onVisualizationLayoutChange","updatedLayoutData","currentStore","setTopologyLayout","prevState","fromModel","ids","selectedEntity","visualizationRef","storedGraphModel","storedNode","sn","oldNode","oldEdge","getEdgeById","isNodeInView","graphBounds","viewNode","closestNode","closestDistance","nextNode","distance","nodeBounds","nodeX","nodeY","sqrt","nodeDistanceToBounds","panIntoView","selectedItem","registerComponentFactory","getFactory","hint","reset","resizeTimeout","visibleEntity","minimumVisible","routeDecoratorIcon","routeURL","fillRule","stroke","nodeItem","MoveConnectionForm","handleSubmit","isSubmitting","setTranslator","isOpen","setOpen","isDirty","headingLevel","fieldId","_","toggle","toggleRef","isFullWidth","onOpenChange","isSelected","submitDisabled","submitError","MoveConnectionModal","newTarget","handlePromise","setStatus","initialValues","formikProps","moveConnectionModal","editApplicationModal","Recommendations","recommendations","recommendation","containerRecommendations","VerticalPodAutoscalerRecommendations","Actions","setSupportedTopologyFilters","supportedFilters","supportedTopologyFilters","setSupportedTopologyKinds","supportedKinds","supportedTopologyKinds","setTopologyGraphModel","topologyGraphModel","getTopologyGraphModel","podUpdateTime","allStatuses","updateTimes","times","nextStatus","running","errorPhases","isPodError","isEvicted","podCompare","pod1","pod2","error1","evicted1","runtime1","runtime2","PodOverviewItem","podName","tooltipFlag","PodsOverviewList","PodsOverviewContent","allPodsLink","emptyText","showWaitingPods","setShowWaitingPods","shipwrightBuilds","buildRunBeta","buildRunAlpha","watchedBuildRuns","allBuildRuns","useGetShipwrightBuilds","waitingForBuildConfig","completionTimestamp","isComplete","waitingForShipwright","buildRun","buildRunIsComplete","showWaitingForBuildAlert","isDeploymentGeneratedByWebConsole","filteredPods","containerStatuses","containerStatus","imageID","isPodWithoutImageId","errorPodCount","podsShown","linkTo","emptyMessage","podAlert","podSize","StatusTitle","Complete","New","BuildStatus","logSnippet","BuildOverviewItem","startTimestamp","lastUpdated","spin","BuildOverviewList","canStartBuild","inline","buildsLength","BuildOverview","ServicePortList","service","ports","protocol","targetPort","ServicesOverviewListItem","ServicesOverviewList","RoutesOverviewListItem","RoutesOverviewList","NetworkingOverview","serviceResources","routeResources","JobOverviewItem","podsLink","standalone","showTooltip","JobsOverviewList","JobsOverview","allJobsLink","jobCount","getNodeDecorators","nodeRadius","nodeWidth","nodeHeight","location","deltaX","deltaY","upperRight","lowerRight","upperLeft","lowerLeft","retDecorator","getExtensionDecoratorForQuadrant","useRoutesURL","annotationURL","watchedURL","actionContext","atPoint","setReference","graphClasses","setRenderConstraint","addClassList","removeClassList","classList","add","remove","TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY","shift","collapsible","secondaryLabel","badgeTextColor","badgeBorderColor","badgeLocation","labelIcon","labelIconPadding","onCollapseChange","hovered","labelHover","labelHoverRef","isHover","anchorRef","outlineRef","labelLocation","pathRef","altGroup","hullPadding","getNodes","points","getNodeShape","hullPoints","lowPoints","delta","Infinity","computeLabelLocation","groupClassName","topologyGroup","innerGroupClassName","topologyGroupBackground","topologyGroupLabel","getNodeStatus","actionIcon","onActionIconClick","DEFAULT_LAYOUT","SUPPORTED_LAYOUTS","layoutFactory","layoutOnDrag","TopologyColaLayout","groups","initialRun","addingNodes","startLayout","getNodeTimeStamp","nodeSorter","node1","node2","alignNodeConnector","filteredNode","constraints","connectorLinks","isFixed","l1","l2","nextLink","serviceDistance","linkNodeConstraint","axis","offsets","nextOffset","gap","linkDistance","equality","layoutConstraints","leafNodes","leaves","serviceConstraint","eventSourceLinksConnector","pubSubLinksConnector","eventSinkLinksConnector","TopologyControlBar","controlButtons","zoomInCallback","scaleBy","zoomInTip","zoomInAriaLabel","zoomInDisabled","zoomOutCallback","zoomOutTip","zoomOutAriaLabel","zoomOutDisabled","fitToScreenCallback","fit","fitToScreenTip","fitToScreenAriaLabel","fitToScreenDisabled","resetViewCallback","resetViewTip","resetViewAriaLabel","resetViewDisabled","legend"],"mappings":"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","file":"operators-topology-components-chunk-601fad72dda2b6665105.min.js","sourcesContent":["import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  DropTargetSpec,\n  GraphElement,\n  CREATE_CONNECTOR_DROP_TYPE,\n  isEdge,\n  useDndDrop,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  canDropEdgeOnNode,\n  highlightNode,\n  NodeComponentProps,\n  nodesEdgeIsDragging,\n} from '../../components/graph-view/components';\nimport { getKindStringAndAbbreviation } from '../../components/graph-view/components/nodes/nodeUtils';\nimport { getServiceBindingStatus, getResource } from '../../utils/topology-utils';\nimport OperatorBackedServiceGroup from './OperatorBackedServiceGroup';\nimport OperatorBackedServiceNode from './OperatorBackedServiceNode';\n\nimport './OperatorBackedService.scss';\n\nexport const obsDropTargetSpec = (\n  serviceBinding: boolean,\n): DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> => ({\n  accept: [CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    const nodeElement = props.element as Node;\n    if (!serviceBinding) {\n      return false;\n    }\n\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item, nodeElement);\n    }\n    if (!nodeElement || item === nodeElement) {\n      return false;\n    }\n    return !nodeElement.getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => {\n    return {\n      canDrop: serviceBinding && highlightNode(monitor, props.element as Node),\n      dropTarget: monitor.isOver({ shallow: true }),\n      edgeDragging: nodesEdgeIsDragging(monitor, props),\n    };\n  },\n  dropHint: 'createServiceBinding',\n});\n\ninterface StateProps {\n  serviceBinding: boolean;\n}\n\ntype OperatorBackedServiceProps = {\n  element: Node;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps &\n  StateProps;\n\nconst OperatorBackedService: React.FC<OperatorBackedServiceProps> = ({\n  serviceBinding,\n  element,\n  ...rest\n}) => {\n  const spec = React.useMemo(() => obsDropTargetSpec(serviceBinding), [serviceBinding]);\n  const [dndDropProps, dndDropRef] = useDndDrop(spec, { element, ...rest });\n  const resourceObj = getResource(element);\n  const resourceModel = resourceObj ? modelFor(referenceFor(resourceObj)) : null;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n  const { data } = element.getData();\n  const ownerReferenceKind = referenceFor({ kind: data.operatorKind, apiVersion: data.apiVersion });\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ownerReferenceKind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <OperatorBackedServiceNode\n        {...rest}\n        element={element}\n        dndDropRef={dndDropRef}\n        editAccess={editAccess}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        {...dndDropProps}\n      />\n    );\n  }\n\n  return (\n    <OperatorBackedServiceGroup\n      {...rest}\n      element={element}\n      dndDropRef={dndDropRef}\n      editAccess={editAccess}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...dndDropProps}\n    />\n  );\n};\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  return {\n    serviceBinding: getServiceBindingStatus(state),\n  };\n};\n\nexport default connect(mapStateToProps)(observer(OperatorBackedService));\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  useDragNode,\n  Layer,\n  useHover,\n  createSvgIdUrl,\n  useCombineRefs,\n  useAnchor,\n  RectAnchor,\n  WithContextMenuProps,\n  NodeLabel,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport {\n  noRegroupDragSourceSpec,\n  NodeShadows,\n  NODE_SHADOW_FILTER_ID,\n  NODE_SHADOW_FILTER_ID_HOVER,\n} from '../../components/graph-view';\nimport { useSearchFilter } from '../../filters';\nimport { useShowLabel } from '../../filters/useShowLabel';\nimport { getResource } from '../../utils/topology-utils';\n\ntype OperatorBackedServiceGroupProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  editAccess: boolean;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  dragging?: boolean;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDndDropProps &\n  WithDragNodeProps;\n\nconst OperatorBackedServiceGroup: React.FC<OperatorBackedServiceGroupProps> = ({\n  element,\n  selected,\n  editAccess,\n  badge,\n  badgeColor,\n  badgeClassName,\n  onSelect,\n  dndDropRef,\n  dragNodeRef,\n  dragging,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [hover, hoverRef] = useHover();\n  const [innerHover, innerHoverRef] = useHover();\n  const [{ dragging: labelDragging }, dragLabelRef] = useDragNode(noRegroupDragSourceSpec);\n  const nodeRefs = useCombineRefs(innerHoverRef, dragNodeRef);\n  const hasChildren = element.getChildren()?.length > 0;\n  const { data } = element.getData();\n  const [filtered] = useSearchFilter(element.getLabel(), getResource(element)?.metadata?.labels);\n  const showLabel = useShowLabel(hover || innerHover);\n  const { x, y, width, height } = element.getBounds();\n  useAnchor(React.useCallback((node: Node) => new RectAnchor(node, 1.5), []));\n\n  return (\n    <g\n      ref={hoverRef}\n      onClick={onSelect}\n      onContextMenu={editAccess ? onContextMenu : null}\n      className={classNames('odc-operator-backed-service', {\n        'pf-m-dragging': dragging || labelDragging,\n        'is-filtered': filtered,\n        'pf-m-highlight': canDrop,\n      })}\n    >\n      <NodeShadows />\n      <Layer id={dragging || labelDragging ? undefined : 'groups2'}>\n        <Tooltip\n          triggerRef={ref}\n          content={t('topology~Create Service Binding')}\n          trigger=\"manual\"\n          isVisible={dropTarget && canDrop}\n          animationDuration={0}\n          position=\"top\"\n        >\n          <g ref={ref}>\n            <g\n              ref={nodeRefs}\n              className={classNames('odc-operator-backed-service', {\n                'pf-m-selected': selected,\n                'pf-m-highlight': canDrop,\n                'pf-m-dragging': dragging || labelDragging,\n                'is-filtered': filtered,\n                'pf-m-drop-target': canDrop && dropTarget,\n              })}\n            >\n              <rect\n                key={\n                  hover || innerHover || contextMenuOpen || dragging || labelDragging\n                    ? 'rect-hover'\n                    : 'rect'\n                }\n                ref={dndDropRef}\n                className=\"odc-operator-backed-service__bg\"\n                x={x}\n                y={y}\n                width={width}\n                height={height}\n                rx=\"5\"\n                ry=\"5\"\n                filter={createSvgIdUrl(\n                  hover || innerHover || contextMenuOpen || dragging || labelDragging\n                    ? NODE_SHADOW_FILTER_ID_HOVER\n                    : NODE_SHADOW_FILTER_ID,\n                )}\n              />\n              {!hasChildren && (\n                <text x={x + width / 2} y={y + height / 2} dy=\"0.35em\" textAnchor=\"middle\">\n                  No Resources\n                </text>\n              )}\n            </g>\n          </g>\n        </Tooltip>\n      </Layer>\n      {showLabel && (data.kind || element.getLabel()) && (\n        <NodeLabel\n          className=\"pf-topology__group__label odc-knative-service__label odc-base-node__label\"\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          x={x + width / 2}\n          y={y + height + 20}\n          paddingX={8}\n          paddingY={4}\n          labelIconClass={data.builderImage}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeClassName={badgeClassName}\n          dragRef={dragLabelRef}\n        >\n          {element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(OperatorBackedServiceGroup);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  observer,\n  Node,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { GroupNode } from '../../components/graph-view';\n\ntype OperatorBackedServiceNodeProps = {\n  element: Node;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  editAccess: boolean;\n} & WithSelectionProps &\n  WithContextMenuProps &\n  WithDragNodeProps &\n  WithDndDropProps;\n\nconst OperatorBackedServiceNode: React.FC<OperatorBackedServiceNodeProps> = ({\n  canDrop,\n  dropTarget,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  return (\n    <Tooltip\n      triggerRef={ref}\n      content={t('topology~Create Service Binding')}\n      trigger=\"manual\"\n      isVisible={dropTarget && canDrop}\n      animationDuration={0}\n      position=\"top\"\n    >\n      <g ref={ref}>\n        <GroupNode bgClassName=\"odc-operator-backed-service__bg\" {...rest} />\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default observer(OperatorBackedServiceNode);\n","export * from './CronJobSideBarDetails';\nexport * from './DaemonSetSideBarDetails';\nexport * from './DeploymentConfigSideBarDetails';\nexport * from './DeploymentSideBarDetails';\nexport * from './JobSideBarDetails';\nexport * from './pods-tab-section';\nexport * from './StatefulSetSideBarDetails';\nexport * from './workload-resource-link';\nexport * from './utils';\nexport * from './build-tab-section';\nexport * from './network-tab-section';\nexport * from './jobs-tab-section';\nexport * from './PodSideBarDetails';\nexport * from './resource-alert';\nexport * from './vpa-tab-section';\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import { useMemo } from 'react';\nimport { Edge, GraphElement } from '@patternfly/react-topology';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { useK8sModel } from '@console/shared/src/hooks/useK8sModel';\nimport { TYPE_WORKLOAD, TYPE_CONNECTS_TO } from '../const';\nimport { getResource } from '../utils';\nimport { DeleteConnectorAction, MoveConnectorAction } from './edgeActions';\nimport { getModifyApplicationAction } from './modify-application';\n\nexport const useTopologyWorkloadActionProvider = (element: GraphElement) => {\n  const resource = getResource(element);\n  const actions = useMemo(() => {\n    if (element.getType() !== TYPE_WORKLOAD) return undefined;\n    if (!resource) {\n      return [];\n    }\n    const k8sKind = modelFor(referenceFor(resource));\n    return [getModifyApplicationAction(k8sKind, resource)];\n  }, [element, resource]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, true, undefined];\n  }, [actions]);\n};\n\nexport const useTopologyVisualConnectorActionProvider = (element: Edge) => {\n  const resource = getResource(element.getSource?.());\n  const [kindObj, inFlight] = useK8sModel(referenceFor(resource ?? {}));\n  const actions = useMemo(() => {\n    if (!kindObj || element.getType() !== TYPE_CONNECTS_TO) return undefined;\n    return [MoveConnectorAction(kindObj, element), DeleteConnectorAction(kindObj, element)];\n  }, [element, kindObj]);\n\n  return useMemo(() => {\n    if (!actions) return [[], true, undefined];\n    return [actions, !inFlight, undefined];\n  }, [actions, inFlight]);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","// TODO file should be renamed replica-set.jsx to match convention\n\nimport * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  Kebab,\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  ResourceLink,\n  resourcePath,\n  LabelList,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport {\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared/src';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nimport { referenceFor, referenceForModel } from '../module/k8s';\n\nconst Details = ({ obj: replicaSet }) => {\n  const revision = _.get(replicaSet, [\n    'metadata',\n    'annotations',\n    'deployment.kubernetes.io/revision',\n  ]);\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~ReplicaSet details')} />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ResourceSummary resource={replicaSet} showPodSelector showNodeSelector showTolerations>\n              {revision && (\n                <>\n                  <dt>{t('public~Deployment revision')}</dt>\n                  <dd>{revision}</dd>\n                </>\n              )}\n            </ResourceSummary>\n          </div>\n          <div className=\"col-md-6\">\n            <dl className=\"co-m-pane__details\">\n              <ResourcePodCount resource={replicaSet} />\n              <RuntimeClass obj={replicaSet} />\n              <PodDisruptionBudgetField obj={replicaSet} />\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={replicaSet.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={replicaSet} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetPods = (props) => <PodsComponent {...props} showNodes />;\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\nconst ReplicaSetsDetailsPage = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicaSetPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicaSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  Kebab.columnClass,\n];\n\nconst ReplicaSetTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{count1}} of {{count2}} pods', {\n            count1: obj.status.replicas || 0,\n            count2: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nconst ReplicaSetsList = (props) => {\n  const { t } = useTranslation();\n  const ReplicaSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicaSets')}\n      Header={ReplicaSetTableHeader}\n      Row={ReplicaSetTableRow}\n      virtualize\n    />\n  );\n};\nconst ReplicaSetsPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage canCreate={canCreate} kind=\"ReplicaSet\" ListComponent={ReplicaSetsList} {...props} />\n  );\n};\n\nexport { ReplicaSetsList, ReplicaSetsPage, ReplicaSetsDetailsPage };\n","import * as React from 'react';\nimport { Link } from 'react-router-dom-v5-compat';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport {\n  usePodsWatcher,\n  PodRing,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  usePrometheusGate,\n} from '@console/shared';\nimport { K8sResourceKind, referenceFor, referenceForModel, DaemonSetKind } from '../module/k8s';\nimport { DetailsPage, ListPage, Table, TableData, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  detailsPage,\n  LabelList,\n  navFactory,\n  PodsComponent,\n  ResourceLink,\n  ResourceSummary,\n  SectionHeading,\n  Selector,\n  LoadingInline,\n} from './utils';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DaemonSetModel } from '../models';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nexport const menuActions: KebabAction[] = [\n  AddHealthChecks,\n  Kebab.factory.AddStorage,\n  ...Kebab.getExtensionsActionsForKind(DaemonSetModel),\n  EditHealthChecks,\n  ...Kebab.factory.common,\n];\n\nconst kind = 'DaemonSet';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const DaemonSetDetailsList: React.FC<DaemonSetDetailsListProps> = ({ ds }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem\n        label={t('public~Current count')}\n        obj={ds}\n        path=\"status.currentNumberScheduled\"\n      />\n      <DetailsItem\n        label={t('public~Desired count')}\n        obj={ds}\n        path=\"status.desiredNumberScheduled\"\n      />\n      <PodDisruptionBudgetField obj={ds} />\n    </dl>\n  );\n};\n\nconst DaemonSetDetails: React.FC<DaemonSetDetailsProps> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const { podData, loaded } = usePodsWatcher(daemonset);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DaemonSet details')} />\n        {loaded ? (\n          <PodRing\n            key={daemonset.metadata.uid}\n            pods={podData?.pods || []}\n            obj={daemonset}\n            resourceKind={DaemonSetModel}\n            enableScaling={false}\n          />\n        ) : (\n          <LoadingInline />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <ResourceSummary\n              resource={daemonset}\n              showPodSelector\n              showNodeSelector\n              showTolerations\n            />\n          </div>\n          <div className=\"col-lg-6\">\n            <DaemonSetDetailsList ds={daemonset} />\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={daemonset.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={daemonset} heading={t('public~Volumes')} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage: React.FC<EnvironmentPageProps> = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst EnvironmentTab: React.FC<EnvironmentTabProps> = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst DaemonSetTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({ obj: daemonset }) => {\n  const { t } = useTranslation();\n  const resourceKind = referenceFor(daemonset);\n  const context = { [resourceKind]: daemonset };\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={kind}\n          name={daemonset.metadata.name}\n          namespace={daemonset.metadata.namespace}\n        />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`/k8s/ns/${daemonset.metadata.namespace}/daemonsets/${daemonset.metadata.name}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{currentNumber}} of {{desiredNumber}} pods', {\n            currentNumber: daemonset.status.currentNumberScheduled,\n            desiredNumber: daemonset.status.desiredNumberScheduled,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={daemonset.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={daemonset.spec.selector} namespace={daemonset.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const DaemonSets: React.FC = (props) => {\n  const { t } = useTranslation();\n  const DaemonSetTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'daemonsetNumScheduled',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DaemonSets')}\n      Header={DaemonSetTableHeader}\n      Row={DaemonSetTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const DaemonSetsPage: React.FC<DaemonSetsPageProps> = (props) => (\n  <ListPage canCreate={true} ListComponent={DaemonSets} kind={kind} {...props} />\n);\n\nconst DaemonSetPods: React.FC<DaemonSetPodsProps> = (props) => (\n  <PodsComponent {...props} showNodes />\n);\n\nexport const DaemonSetsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={kind}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(detailsPage(DaemonSetDetails)),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        navFactory.pods(DaemonSetPods),\n        navFactory.envEditor(EnvironmentTab),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\ntype DaemonSetDetailsListProps = {\n  ds: DaemonSetKind;\n};\n\ntype EnvironmentPageProps = {\n  obj: K8sResourceKind;\n  rawEnvData: any;\n  envPath: string[];\n  readOnly: boolean;\n};\n\ntype EnvironmentTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DaemonSetDetailsProps = {\n  obj: DaemonSetKind;\n};\n\ntype DaemonSetsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n\ntype DaemonSetPodsProps = {\n  obj: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionServiceProvider,\n  LazyActionMenu,\n  ActionMenu,\n  ActionMenuVariant,\n  Status,\n  usePrometheusGate,\n} from '@console/shared';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport { DeploymentModel } from '../models';\nimport {\n  DeploymentKind,\n  K8sKind,\n  K8sResourceKindReference,\n  referenceFor,\n  referenceForModel,\n} from '../module/k8s';\nimport { configureUpdateStrategyModal, errorModal } from './modals';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ContainerTable,\n  navFactory,\n  ResourceSummary,\n  SectionHeading,\n  togglePaused,\n  WorkloadPausedAlert,\n  RuntimeClass,\n} from './utils';\nimport { ReplicaSetsPage } from './replicaset';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { VerticalPodAutoscalerRecommendations } from '@console/app/src/components/vpa/VerticalPodAutoscalerRecommendations';\n\nconst deploymentsReference: K8sResourceKindReference = 'Deployment';\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nconst UpdateStrategy: KebabAction = (kind: K8sKind, deployment: DeploymentKind) => ({\n  // t('public~Edit update strategy')\n  labelKey: 'public~Edit update strategy',\n  callback: () => configureUpdateStrategyModal({ deployment }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: deployment.metadata.name,\n    namespace: deployment.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: DeploymentKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nexport const menuActions = [\n  hideActionForHPAs(ModifyCount),\n  PauseAction,\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  UpdateStrategy,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...Kebab.getExtensionsActionsForKind(DeploymentModel),\n  EditHealthChecks,\n  ...common,\n];\n\nexport const DeploymentDetailsList: React.FC<DeploymentDetailsListProps> = ({ deployment }) => {\n  const { t } = useTranslation();\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Update strategy')} obj={deployment} path=\"spec.strategy.type\" />\n      {deployment.spec.strategy.type === 'RollingUpdate' && (\n        <>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: deployment.spec.strategy.rollingUpdate.maxUnavailable ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={deployment}\n            path=\"spec.strategy.rollingUpdate.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: deployment.spec.strategy.rollingUpdate.maxSurge ?? 1,\n              count: deployment.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem\n        label={t('public~Progress deadline seconds')}\n        obj={deployment}\n        path=\"spec.progressDeadlineSeconds\"\n      >\n        {deployment.spec.progressDeadlineSeconds\n          ? t('public~{{count}} second', { count: deployment.spec.progressDeadlineSeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem\n        label={t('public~Min ready seconds')}\n        obj={deployment}\n        path=\"spec.minReadySeconds\"\n      >\n        {deployment.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: deployment.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <RuntimeClass obj={deployment} />\n      <PodDisruptionBudgetField obj={deployment} />\n      <VerticalPodAutoscalerRecommendations obj={deployment} />\n    </dl>\n  );\n};\nDeploymentDetailsList.displayName = 'DeploymentDetailsList';\n\nconst DeploymentDetails: React.FC<DeploymentDetailsProps> = ({ obj: deployment }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Deployment details')} />\n        {deployment.spec.paused && <WorkloadPausedAlert obj={deployment} model={DeploymentModel} />}\n        <PodRingSet key={deployment.metadata.uid} obj={deployment} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary\n                resource={deployment}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  {deployment.status.availableReplicas === deployment.status.updatedReplicas &&\n                  deployment.spec.replicas === deployment.status.availableReplicas ? (\n                    <Status status=\"Up to date\" />\n                  ) : (\n                    <Status status=\"Updating\" />\n                  )}\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentDetailsList deployment={deployment} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={deployment.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={deployment} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={deployment.status.conditions} />\n      </div>\n    </>\n  );\n};\nDeploymentDetails.displayName = 'DeploymentDetails';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicaSetsTab: React.FC<ReplicaSetsTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace },\n    spec: { selector },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replica sets for an object.\n  return (\n    <ReplicaSetsPage\n      showTitle={false}\n      namespace={namespace}\n      selector={selector}\n      canCreate={false}\n    />\n  );\n};\n\nexport const DeploymentsDetailsPage: React.FC = (props) => {\n  const prometheusIsAvailable = usePrometheusGate();\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  // t('public~ReplicaSets')\n  return (\n    <DetailsPage\n      {...props}\n      kind={deploymentsReference}\n      customActionMenu={customActionMenu}\n      pages={[\n        navFactory.details(DeploymentDetails),\n        ...(prometheusIsAvailable ? [navFactory.metrics()] : []),\n        navFactory.editYaml(),\n        {\n          href: 'replicasets',\n          nameKey: 'public~ReplicaSets',\n          component: ReplicaSetsTab,\n        },\n        navFactory.pods(),\n        navFactory.envEditor(environmentComponent),\n        navFactory.events(ResourceEventStream),\n      ]}\n    />\n  );\n};\nDeploymentsDetailsPage.displayName = 'DeploymentsDetailsPage';\n\ntype DeploymentDetailsListProps = {\n  deployment: DeploymentKind;\n};\n\ntype DeploymentDetailsProps = {\n  obj: DeploymentKind;\n};\n\nconst kind = 'Deployment';\n\nconst DeploymentTableRow: React.FC<RowFunctionArgs<DeploymentKind>> = ({ obj, ...props }) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentTableHeader.displayName = 'DeploymentTableHeader';\n\nexport const DeploymentsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Deployments')}\n      Header={DeploymentTableHeader}\n      Row={DeploymentTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentsList.displayName = 'DeploymentsList';\n\nexport const DeploymentsPage: React.FC<DeploymentsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deployments/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={deploymentsReference}\n      canCreate={true}\n      createProps={createProps}\n      ListComponent={DeploymentsList}\n      {...props}\n    />\n  );\n};\nDeploymentsPage.displayName = 'DeploymentsPage';\n\ntype ReplicaSetsTabProps = {\n  obj: DeploymentKind;\n};\n\ntype DeploymentsPageProps = {\n  showTitle?: boolean;\n  namespace?: string;\n  selector?: any;\n};\n","import { Model } from '@patternfly/react-topology';\nimport { isExpanded } from '../filters';\nimport { TopologyDisplayFilterType, DisplayFilters } from '../topology-types';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from './components/const';\n\nexport const EXPAND_OPERATORS_RELEASE_FILTER = 'operatorGrouping';\n\nexport const getTopologyFilters = () => {\n  return [\n    {\n      type: TopologyDisplayFilterType.expand,\n      id: EXPAND_OPERATORS_RELEASE_FILTER,\n      // t('topology~Operator groupings')\n      labelKey: 'topology~Operator groupings',\n      priority: 500,\n      value: true,\n    },\n  ];\n};\n\nexport const applyOperatorDisplayOptions = (model: Model, filters: DisplayFilters): string[] => {\n  let found = false;\n  const appliedFilters = [];\n  const expanded = isExpanded(EXPAND_OPERATORS_RELEASE_FILTER, filters);\n  model.nodes.forEach((d) => {\n    if (d.type === TYPE_OPERATOR_BACKED_SERVICE) {\n      if (!found) {\n        found = true;\n        appliedFilters.push(EXPAND_OPERATORS_RELEASE_FILTER);\n      }\n      d.collapsed = !expanded;\n    }\n  });\n  return appliedFilters;\n};\n\nexport const applyDisplayOptions = () => applyOperatorDisplayOptions;\n","import { EdgeModel, Model } from '@patternfly/react-topology/dist/esm/types';\nimport * as _ from 'lodash';\nimport {\n  K8sResourceKind,\n  LabelSelector,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedKnResource } from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager/src';\nimport {\n  isOperatorBackedService,\n  getOperatorBackedServiceKindMap,\n} from '@console/shared/src/utils/operator-utils';\nimport { TYPE_SERVICE_BINDING } from '../const';\nimport { getTopologyEdgeItems } from '../data-transforms/transform-utils';\nimport { TopologyDataResources } from '../topology-types';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const edgesFromServiceBinding = (\n  source: K8sResourceKind,\n  sbrs: K8sResourceKind[],\n): K8sResourceKind[] => {\n  const sourceBindings = [];\n  if (!sbrs) {\n    return sourceBindings;\n  }\n  sbrs.forEach((sbr) => {\n    let edgeExists = false;\n    const reference = referenceFor(source);\n    if (reference && sbr?.spec?.application?.resource === modelFor(reference)?.plural) {\n      if (sbr?.spec?.application?.name === source.metadata.name) {\n        edgeExists = true;\n      } else {\n        const matchLabels = sbr?.spec?.application?.labelSelector?.matchLabels;\n        if (matchLabels) {\n          const sbrSelector = new LabelSelector(sbr.spec.application.labelSelector);\n          if (sbrSelector.matches(source)) {\n            edgeExists = true;\n          }\n        }\n      }\n    }\n    edgeExists && sourceBindings.push(sbr);\n  });\n  return sourceBindings;\n};\n\nexport const getServiceBindingEdges = (\n  dc: K8sResourceKind,\n  obsGroups: K8sResourceKind[],\n  sbrs: K8sResourceKind[],\n  installedOperators: K8sResourceKind[],\n): EdgeModel[] => {\n  const edges = [];\n  if (!sbrs?.length || !installedOperators?.length) {\n    return edges;\n  }\n\n  _.forEach(edgesFromServiceBinding(dc, sbrs), (sbr) => {\n    _.forEach(sbr.spec.services, (bss) => {\n      if (bss) {\n        const targetGroup = obsGroups.find(\n          (group) => group.kind === bss.kind && group.metadata.name === bss.name,\n        );\n        const target = targetGroup?.metadata.uid;\n        const source = dc.metadata.uid;\n        if (source && target) {\n          edges.push({\n            id: `${source}_${target}`,\n            type: TYPE_SERVICE_BINDING,\n            source,\n            target,\n            resource: sbr,\n            data: { sbr },\n          });\n        }\n      }\n    });\n  });\n\n  return edges;\n};\n\nexport const getOperatorGroupResource = (\n  resource: K8sResourceKind,\n  resources?: TopologyDataResources,\n): { operatorGroupItem: K8sResourceKind; csvName: string } => {\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  const operatorBackedServiceKindMap = getOperatorBackedServiceKindMap(installedOperators);\n  // added this as needs to hide operator backed if belong to source\n  if (resources && isOperatorBackedKnResource(resource, resources)) {\n    return null;\n  }\n\n  if (isOperatorBackedService(resource, installedOperators)) {\n    const ownerReference = resource?.metadata?.ownerReferences?.[0];\n    const ownerUid = ownerReference?.uid;\n    const nodeResourceKind = ownerReference?.kind;\n    const operatorBackedServiceKind = operatorBackedServiceKindMap?.[nodeResourceKind];\n    const appGroup = resource?.metadata?.labels?.['app.kubernetes.io/part-of'];\n    const operator: K8sResourceKind =\n      (installedOperators.find((op) => op.metadata.uid === ownerUid) as K8sResourceKind) ||\n      operatorBackedServiceKind;\n    const csvName = operator.metadata.name;\n    const operatorName =\n      ownerReference?.name ?? appGroup\n        ? `${appGroup}:${operator.metadata.name}`\n        : operator.metadata.name;\n\n    const groupUid = ownerReference?.uid ?? `${operatorName}:${operator.metadata.uid}`;\n    const operatorGroupItem = _.merge({}, operator, {\n      apiVersion: ownerReference?.apiVersion ?? '',\n      kind: ownerReference?.kind ?? 'Operator',\n      metadata: {\n        name: ownerReference?.name ?? operator.metadata.name,\n        uid: groupUid,\n      },\n    });\n    return { operatorGroupItem, csvName };\n  }\n  return null;\n};\n\nexport const getOperatorGroupResources = (resources: TopologyDataResources) => {\n  const obsGroups = [];\n  WORKLOAD_TYPES.forEach((key) => {\n    if (resources[key]?.data && resources[key].data.length) {\n      resources[key].data.forEach((resource) => {\n        const groupResource = getOperatorGroupResource(resource, resources);\n        if (!groupResource?.operatorGroupItem) {\n          return;\n        }\n        obsGroups.push(groupResource.operatorGroupItem);\n      });\n    }\n  });\n  return obsGroups;\n};\n\nexport const getOperatorTopologyDataModel = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n): Promise<Model> => {\n  const operatorsDataModel: Model = {\n    nodes: [],\n    edges: [],\n  };\n  const obsGroups = getOperatorGroupResources(resources);\n  const serviceBindingRequests = resources?.serviceBindingRequests?.data;\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  if (installedOperators?.length) {\n    workloads.forEach((dc) => {\n      operatorsDataModel.edges.push(\n        ...[\n          ...getServiceBindingEdges(dc, obsGroups, serviceBindingRequests, installedOperators),\n          ...getTopologyEdgeItems(dc, obsGroups),\n        ],\n      );\n    });\n  }\n\n  return Promise.resolve(operatorsDataModel);\n};\n","import * as React from 'react';\nimport {\n  GraphElement,\n  WithContextMenuProps,\n  withDragNode,\n  withSelection,\n} from '@patternfly/react-topology';\nimport { contextMenuActions } from '../../actions';\nimport {\n  withContextMenu,\n  withNoDrop,\n  ServiceBinding,\n  noRegroupDragSourceSpec,\n} from '../../components/graph-view/components';\nimport { TYPE_SERVICE_BINDING } from '../../const';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from './const';\nimport OperatorBackedService from './OperatorBackedService';\n\nexport const getOperatorsComponentFactory = (\n  kind,\n  type,\n): React.ComponentType<{ element: GraphElement }> | undefined => {\n  switch (type) {\n    case TYPE_OPERATOR_BACKED_SERVICE:\n      return withSelection({ controlled: true })(\n        withContextMenu(contextMenuActions)(\n          withNoDrop()(withDragNode(noRegroupDragSourceSpec)(OperatorBackedService)) as React.FC<\n            WithContextMenuProps\n          >,\n        ),\n      );\n    case TYPE_SERVICE_BINDING:\n      return withContextMenu(contextMenuActions)(ServiceBinding);\n    default:\n      return undefined;\n  }\n};\n","import { Model, NodeShape } from '@patternfly/react-topology/dist/esm/types';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  getKameletSinkAndSourceBindings,\n  isOperatorBackedKnResource,\n  isOperatorBackedKnSinkService,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { ClusterServiceVersionKind } from '@console/operator-lifecycle-manager/src';\nimport { getDefaultOperatorIcon, getImageForCSVIcon } from '@console/shared/src';\nimport { TYPE_APPLICATION_GROUP } from '../const';\nimport { getTopologyNodeItem } from '../data-transforms/transform-utils';\nimport { OdcNodeModel, TopologyDataResources } from '../topology-types';\nimport {\n  OPERATOR_GROUP_HEIGHT,\n  OPERATOR_GROUP_PADDING,\n  OPERATOR_GROUP_WIDTH,\n  TYPE_OPERATOR_BACKED_SERVICE,\n} from './components/const';\nimport { getOperatorGroupResource } from './operators-data-transformer';\n\nconst topLevelParent = (node: OdcNodeModel, model: Model): OdcNodeModel => {\n  const parent = model.nodes.find((n) => n.children?.includes(node.id));\n  if (parent) {\n    return topLevelParent(parent, model);\n  }\n  return node;\n};\n\nconst topLevelDataParent = (node: OdcNodeModel, model: Model): OdcNodeModel => {\n  const parent = model.nodes\n    .filter((g) => g.type !== TYPE_APPLICATION_GROUP)\n    .find((n) => n.children?.includes(node.id));\n  if (parent) {\n    return topLevelParent(parent, model);\n  }\n  return node;\n};\n\nconst OBSModelProps = {\n  width: OPERATOR_GROUP_WIDTH,\n  height: OPERATOR_GROUP_HEIGHT,\n  visible: true,\n  group: true,\n  shape: NodeShape.rect,\n  style: {\n    padding: OPERATOR_GROUP_PADDING,\n  },\n};\n\nexport const operatorsDataModelReconciler = (\n  model: Model,\n  resources: TopologyDataResources,\n): void => {\n  if (!model || !model.nodes) {\n    return;\n  }\n  // const groupDataModel: Model = { nodes: [], edges: [] };\n  const installedOperators = resources?.clusterServiceVersions?.data as ClusterServiceVersionKind[];\n  if (!installedOperators?.length) {\n    return;\n  }\n  const defaultIcon = getImageForIconClass(`icon-openshift`);\n  const { camelSinkKameletBindings } = getKameletSinkAndSourceBindings(resources);\n  const obsGroupNodes: OdcNodeModel[] = [];\n  installedOperators.forEach((csv) => {\n    const crds = csv?.spec?.customresourcedefinitions?.owned ?? [];\n    const crdKinds = crds.map((crd) => crd.kind);\n    const operatorGroupNodes = model.nodes.reduce((groupNodes, node: OdcNodeModel) => {\n      const { resource } = node;\n      if (!resource) {\n        return groupNodes;\n      }\n\n      // Hide operator backed if belong to source\n      if (resources && isOperatorBackedKnResource(resource, resources)) {\n        return groupNodes;\n      }\n\n      // Hide operator backed if belong to sink\n      if (resources && isOperatorBackedKnSinkService(resource, camelSinkKameletBindings)) {\n        return groupNodes;\n      }\n\n      const owner = resource?.metadata?.ownerReferences?.[0];\n      if (!owner) {\n        return groupNodes;\n      }\n\n      const nodeOwnerKind = owner.kind;\n      const nodeOwnerId = owner.uid;\n      if (nodeOwnerId === csv.metadata.uid || crdKinds.includes(nodeOwnerKind)) {\n        const key = resource?.metadata?.ownerReferences?.[0].name;\n        if (!groupNodes[key]) {\n          groupNodes[key] = [];\n        }\n        groupNodes[key].push(node);\n      }\n      return groupNodes;\n    }, {});\n\n    Object.keys(operatorGroupNodes).forEach((key) => {\n      const operatorNodes = operatorGroupNodes[key];\n\n      const baseNode = operatorNodes[0] as OdcNodeModel;\n      const { operatorGroupItem, csvName } = getOperatorGroupResource(baseNode.resource, resources);\n      if (operatorGroupItem) {\n        const data = {\n          id: operatorGroupItem.metadata.uid,\n          name: operatorGroupItem.metadata.name,\n          type: TYPE_OPERATOR_BACKED_SERVICE,\n          resources: {\n            obj: operatorGroupItem,\n            buildConfigs: [],\n            routes: [],\n            services: [],\n            isOperatorBackedService: true,\n          },\n          resource: operatorGroupItem,\n          groupResources: operatorNodes,\n          data: {\n            csvName,\n            operatorKind: operatorGroupItem.kind,\n            builderImage:\n              getImageForCSVIcon(operatorGroupItem?.spec?.icon?.[0]) || getDefaultOperatorIcon(),\n            apiVersion: operatorGroupItem.apiVersion,\n          },\n        };\n        const csvIcon = operatorGroupItem?.spec?.icon?.[0] || csv?.spec?.icon?.[0];\n        const operatorIcon = getImageForCSVIcon(csvIcon) || getDefaultOperatorIcon();\n\n        const children = operatorNodes.reduce((acc, node) => {\n          const parent = topLevelParent(node, model);\n          const dataParent = topLevelDataParent(node, model);\n          if (parent.type === TYPE_APPLICATION_GROUP) {\n            parent.children = parent.children.filter((c) => c !== node.id);\n            if (!parent.children.includes(operatorGroupItem.metadata.uid)) {\n              parent.children.push(operatorGroupItem.metadata.uid);\n            }\n          }\n          if (node.data.data.builderImage === defaultIcon) {\n            node.data.data.builderImage = operatorIcon;\n          }\n          if (!acc.includes(dataParent)) {\n            if (!data.groupResources.includes(dataParent)) {\n              data.groupResources.push(dataParent);\n            }\n            acc.push(dataParent.id);\n          }\n          return acc;\n        }, []);\n\n        const obsNode = getTopologyNodeItem(\n          operatorGroupItem,\n          TYPE_OPERATOR_BACKED_SERVICE,\n          data,\n          OBSModelProps,\n          children,\n          'Operator Backed Service',\n        );\n        obsGroupNodes.push(obsNode);\n      }\n    });\n  });\n  model.nodes.push(...obsGroupNodes);\n};\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './application-utils';\nexport * from './topology-utils';\nexport * from './connector-utils';\nexport * from './createConnection';\nexport * from './removeConnection';\nexport * from './moveNodeToGroup';\nexport * from './useOverviewMetrics';\nexport * from './useMetricStats';\nexport * from './metricStats';\nexport * from './withEditReviewAccess';\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { TopologyQuadrant } from '@patternfly/react-topology';\nimport { WatchK8sResources } from '@console/dynamic-plugin-sdk';\nimport { CodeRef } from '@console/dynamic-plugin-sdk/src/types';\nimport { Extension } from '@console/plugin-sdk/src/typings/base';\nimport {\n  TopologyApplyDisplayOptions,\n  TopologyDataModelDepicted,\n  TopologyDataModelGetter,\n  TopologyDisplayOption,\n  CreateConnectionGetter,\n  ViewComponentFactory,\n  TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n} from '../topology-types';\n\nnamespace ExtensionProperties {\n  export interface TopologyComponentFactory {\n    /** Getter for a ViewComponentFactory */\n    getFactory: CodeRef<ViewComponentFactory>;\n  }\n\n  export interface TopologyDataModelFactory {\n    /** Unique ID for the factory. */\n    id: string;\n    /** Priority for the factory */\n    priority: number;\n    /** Resources to be fetched from useK8sWatchResources hook. */\n    resources?: (namespace: string) => WatchK8sResources<any>;\n    /** Keys in resources containing workloads. */\n    workloadKeys?: string[];\n    /** Getter for the data model factory */\n    getDataModel?: CodeRef<TopologyDataModelGetter>;\n    /** Getter for function to determine if a resource is depicted by this model factory */\n    isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n    /** Getter for function to reconcile data model after all extensions' models have loaded */\n    getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n  }\n\n  export interface TopologyCreateConnector {\n    /** Getter for the create connector function */\n    getCreateConnector: CodeRef<CreateConnectionGetter>;\n  }\n\n  export interface TopologyDisplayFilters {\n    // Getter for topology filters specific to the extension\n    getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n    // Function to apply filters to the model\n    applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n  }\n\n  export interface TopologyDecoratorProvider {\n    id: string;\n    priority: number;\n    quadrant: TopologyQuadrant;\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n}\n\nexport interface TopologyComponentFactory\n  extends Extension<ExtensionProperties.TopologyComponentFactory> {\n  type: 'Topology/ComponentFactory';\n}\n\nexport interface TopologyDataModelFactory\n  extends Extension<ExtensionProperties.TopologyDataModelFactory> {\n  type: 'Topology/DataModelFactory';\n}\n\nexport interface TopologyCreateConnector\n  extends Extension<ExtensionProperties.TopologyCreateConnector> {\n  type: 'Topology/CreateConnector';\n}\n\nexport interface TopologyDisplayFilters\n  extends Extension<ExtensionProperties.TopologyDisplayFilters> {\n  type: 'Topology/DisplayFilters';\n}\n\nexport interface TopologyDecoratorProvider\n  extends Extension<ExtensionProperties.TopologyDecoratorProvider> {\n  type: 'Topology/Decorator';\n}\n\nexport const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory => {\n  return e.type === 'Topology/ComponentFactory';\n};\n\nexport const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory => {\n  return e.type === 'Topology/DataModelFactory';\n};\n\nexport const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector => {\n  return e.type === 'Topology/CreateConnector';\n};\n\nexport const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters => {\n  return e.type === 'Topology/DisplayFilters';\n};\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider => {\n  return e.type === 'Topology/Decorator';\n};\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@console/internal/redux';\n\nexport const useOverviewMetrics = () => {\n  return useSelector((state: RootState) => state.UI.getIn(['overview', 'metrics']));\n};\n","import { NamespaceMetrics } from '@console/internal/actions/ui';\nimport { formatBytesAsMiB, formatCores } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { PodRCData } from '@console/shared/src';\n\nexport type PodStats = {\n  name: string;\n  value: number;\n  formattedValue: string;\n};\n\nexport type MetricStats = {\n  totalBytes?: number;\n  totalCores?: number;\n  memoryByPod?: PodStats[];\n  cpuByPod?: PodStats[];\n};\n\nexport const getPodMetricStats = (metrics: NamespaceMetrics, podData: PodRCData): MetricStats => {\n  const currentPods = podData.current ? podData.current.pods : podData.pods;\n  let totalBytes = 0;\n  let totalCores = 0;\n  const memoryByPod = [];\n  const cpuByPod = [];\n  if (currentPods?.length) {\n    currentPods.forEach(({ metadata: { name } }: K8sResourceKind) => {\n      const bytes = metrics?.memory?.[name];\n      if (Number.isFinite(bytes)) {\n        totalBytes += bytes;\n        const formattedValue = `${formatBytesAsMiB(bytes)} MiB`;\n        memoryByPod.push({ name, value: bytes, formattedValue });\n      }\n\n      const cores = metrics?.cpu?.[name];\n      if (Number.isFinite(cores)) {\n        totalCores += cores;\n        cpuByPod[name] = `${formatCores(cores)} cores`;\n        const formattedValue = `${formatCores(cores)} cores`;\n        cpuByPod.push({ name, value: cores, formattedValue });\n      }\n    });\n  }\n  return { totalBytes, totalCores, memoryByPod, cpuByPod };\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import { Node } from '@patternfly/react-topology';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { createTopologyResourceConnection, getResource } from './topology-utils';\n\nexport const createConnection = (\n  sourceNode: Node,\n  targetNode: Node,\n  replaceTargetNode: Node = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  return createTopologyResourceConnection(\n    getResource(sourceNode),\n    getResource(targetNode),\n    replaceTargetNode ? getResource(replaceTargetNode) : null,\n  );\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { modelFor, referenceFor, K8sVerb } from '@console/internal/module/k8s';\nimport { getResource } from './topology-utils';\n\ntype ComponentProps = {\n  element: Node;\n};\n\nexport const withEditReviewAccess = (verb: K8sVerb) => (WrappedComponent: React.ComponentType) => {\n  const Component: React.FC<ComponentProps> = (props) => {\n    const resourceObj = getResource(props.element);\n    const resourceModel = modelFor(referenceFor(resourceObj));\n    const editAccess = useAccessReview({\n      group: resourceModel.apiGroup,\n      verb,\n      resource: resourceModel.plural,\n      name: resourceObj.metadata.name,\n      namespace: resourceObj.metadata.namespace,\n    });\n    return <WrappedComponent {...(props as any)} canEdit={editAccess} />;\n  };\n  Component.displayName = `withEditReviewAccess(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport { MetricStats, getPodMetricStats } from './metricStats';\nimport { useOverviewMetrics } from './useOverviewMetrics';\n\nexport const useMetricStats = (resource: K8sResourceKind): MetricStats => {\n  const metrics = useOverviewMetrics();\n  const { podData, loaded } = usePodsWatcher(resource, resource.kind, resource.metadata.namespace);\n  const memoryStats = React.useMemo(() => {\n    if (_.isEmpty(metrics) || !loaded) {\n      return null;\n    }\n    return getPodMetricStats(metrics, podData);\n  }, [loaded, metrics, podData]);\n\n  return memoryStats;\n};\n","import * as React from 'react';\nimport { Edge } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { YellowExclamationTriangleIcon } from '@console/shared/src';\nimport { removeTopologyResourceConnection } from './topology-utils';\n\nexport const removeConnection = (edge: Edge): Promise<any> => {\n  const messageKey =\n    // t('topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?')\n    'topology~Deleting the visual connector removes the `connects-to` annotation from the resources. Are you sure you want to delete the visual connector?';\n  return confirmModal({\n    title: (\n      <>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        <Trans ns=\"topology\">Delete Connector?</Trans>\n      </>\n    ),\n    messageKey,\n    // t('topology~Delete')\n    btnTextKey: 'topology~Delete',\n    submitDanger: true,\n    executeFn: () => {\n      return removeTopologyResourceConnection(edge).catch((err) => {\n        err && errorModal({ error: err.message });\n      });\n    },\n  });\n};\n","import * as React from 'react';\nimport { Node } from '@patternfly/react-topology';\nimport { Trans } from 'react-i18next';\nimport { confirmModal, errorModal } from '@console/internal/components/modals';\nimport { updateTopologyResourceApplication } from './topology-utils';\n\nexport const moveNodeToGroup = (node: Node, targetGroup: Node): Promise<void> => {\n  const sourceGroup = node.getParent() !== node.getGraph() ? (node.getParent() as Node) : undefined;\n  if (sourceGroup === targetGroup) {\n    return Promise.reject();\n  }\n\n  if (sourceGroup) {\n    // t('topology~Move component node')\n    // t('topology~Remove component node from application')\n    const titleKey = targetGroup\n      ? 'topology~Move component node'\n      : 'topology~Remove component node from application';\n    const nodeLabel = node.getLabel();\n    const sourceLabel = sourceGroup.getLabel();\n    const targetLabel = targetGroup?.getLabel();\n    const message = targetGroup ? (\n      <Trans ns=\"topology\">\n        Are you sure you want to move <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }} to{' '}\n        {{ targetLabel }}?\n      </Trans>\n    ) : (\n      <Trans ns=\"topology\">\n        Are you sure you want to remove <strong>{{ nodeLabel }}</strong> from {{ sourceLabel }}?\n      </Trans>\n    );\n    // t('topology~Move')\n    // t('topology~Remove')\n    const btnTextKey = targetGroup ? 'topology~Move' : 'topology~Remove';\n\n    return new Promise((resolve, reject) => {\n      confirmModal({\n        titleKey,\n        message,\n        btnTextKey,\n        close: () => {\n          reject();\n        },\n        cancel: () => {\n          reject();\n        },\n        executeFn: () => {\n          return updateTopologyResourceApplication(\n            node,\n            targetGroup ? targetGroup.getLabel() : null,\n          )\n            .then(resolve)\n            .catch((err) => {\n              const error = err.message;\n              errorModal({ error });\n              reject(err);\n            });\n        },\n      });\n    });\n  }\n\n  return updateTopologyResourceApplication(node, targetGroup.getLabel()).catch((err) => {\n    const error = err.message;\n    errorModal({ error });\n  });\n};\n","import * as React from 'react';\nimport './TopologySideBarTabSection.scss';\n\nconst TopologySideBarTabSection: React.FC = ({ children }) => {\n  return <div className=\"ocs-sidebar-tabsection\">{children}</div>;\n};\n\nexport default TopologySideBarTabSection;\n","import * as React from 'react';\nimport {\n  Graph,\n  Node,\n  Model,\n  EdgeModel,\n  NodeModel,\n  EventListener,\n  ModelKind,\n  GraphElement,\n  TopologyQuadrant,\n} from '@patternfly/react-topology';\nimport { WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { ExtPodKind, OverviewItem } from '@console/shared';\n\nexport type Point = [number, number];\n\nexport interface OdcNodeModel extends NodeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport interface OdcEdgeModel extends EdgeModel {\n  resource?: K8sResourceKind;\n  resourceKind?: K8sResourceKindReference;\n}\n\nexport type TopologyResourcesObject = { [key: string]: K8sResourceKind[] };\n\nexport type TopologyDataResources = WatchK8sResults<TopologyResourcesObject>;\n\nexport type TopologyDataModelGetter = (\n  namespace: string,\n  resources: TopologyDataResources,\n  workloads: K8sResourceKind[],\n) => Promise<Model>;\n\nexport enum TopologyViewType {\n  graph = 'graph',\n  list = 'list',\n}\nexport type ViewComponentFactory = (\n  kind: ModelKind,\n  type: string,\n  view?: TopologyViewType,\n) => React.ComponentType<{ element: GraphElement }> | undefined;\n\nexport type TopologyDataModelDepicted = (resource: K8sResourceKind, model: Model) => boolean;\n\nexport type TopologyDataModelReconciler = (model: Model, resources: TopologyDataResources) => void;\n\nexport type CreateConnection = (\n  source: Node,\n  target: Node | Graph,\n) => Promise<React.ReactElement[] | null>;\n\nexport type CreateConnectionGetter = (\n  createHints: string[],\n  source?: Node,\n  target?: Node,\n) => CreateConnection;\n\nexport enum TopologyDisplayFilterType {\n  show = 'show',\n  expand = 'expand',\n  kind = 'kind',\n}\n\nexport type TopologyDisplayOption = {\n  type: TopologyDisplayFilterType;\n  id: string;\n  label?: string;\n  labelKey?: string;\n  priority: number;\n  value: boolean;\n};\n\nexport type DisplayFilters = TopologyDisplayOption[];\n\n// Applies the filters on the model and returns the ids of filters that were relevant\nexport type TopologyApplyDisplayOptions = (model: Model, filters: DisplayFilters) => string[];\n\nexport type TopologyDecoratorGetter = (\n  element: Node,\n  radius: number,\n  centerX: number,\n  centerY: number,\n) => React.ReactElement;\n\nexport type TopologyDecorator = {\n  id: string;\n  priority: number;\n  quadrant: TopologyQuadrant;\n  decorator: TopologyDecoratorGetter;\n};\n\nexport interface TopologyDataObject<D = {}> {\n  id: string;\n  name: string;\n  type: string;\n  resources: OverviewItem;\n  pods?: ExtPodKind[];\n  data: D;\n  resource: K8sResourceKind | null;\n  groupResources?: OdcNodeModel[];\n}\n\nexport interface TopologyApplicationObject {\n  id: string;\n  name: string;\n  resources: OdcNodeModel[];\n}\n\nexport interface WorkloadData {\n  editURL?: string;\n  vcsURI?: string;\n  vcsRef?: string;\n  builderImage?: string;\n  kind?: string;\n  isKnativeResource?: boolean;\n}\n\nexport type TrafficData = {\n  nodes: KialiNode[];\n  edges: KialiEdge[];\n};\n\nexport type KialiNode = {\n  data: {\n    id: string;\n    nodeType: string;\n    namespace: string;\n    workload: string;\n    app: string;\n    version?: string;\n    destServices?: { [key: string]: any }[];\n    traffic?: { [key: string]: any }[];\n  };\n};\n\nexport type KialiEdge = {\n  data: {\n    id: string;\n    source: string;\n    target: string;\n    traffic: { [key: string]: any };\n  };\n};\n\nexport type GraphData = {\n  namespace: string;\n  createResourceAccess: string[];\n  eventSourceEnabled: boolean;\n  createConnectorExtensions?: CreateConnectionGetter[];\n  decorators?: { [key: string]: TopologyDecorator[] };\n};\n\nexport const SHOW_GROUPING_HINT_EVENT = 'show-regroup-hint';\nexport type ShowGroupingHintEventListener = EventListener<[Node, string]>;\n","import * as React from 'react';\nimport { Decorator as PfDecorator } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\n\nimport './Decorator.scss';\n\ntype DecoratorTypes = {\n  x: number;\n  y: number;\n  radius: number;\n  onClick?(event: React.MouseEvent<SVGGElement, MouseEvent>): void;\n  href?: string;\n  ariaLabel?: string;\n  external?: boolean;\n  circleRef?: React.Ref<SVGCircleElement>;\n};\n\nconst Decorator: React.FunctionComponent<DecoratorTypes> = ({\n  x,\n  y,\n  radius,\n  href,\n  ariaLabel,\n  external,\n  ...rest\n}) => {\n  const decorator = (\n    <PfDecorator x={x} y={y} radius={radius} className=\"odc-decorator\" showBackground {...rest} />\n  );\n\n  if (href) {\n    return external ? (\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\n      <a\n        className=\"odc-decorator__link\"\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        role=\"button\"\n        aria-label={ariaLabel}\n      >\n        {decorator}\n      </a>\n    ) : (\n      <Link className=\"odc-decorator__link\" to={href} role=\"button\" aria-label={ariaLabel}>\n        {decorator}\n      </Link>\n    );\n  }\n  return decorator;\n};\n\nexport default Decorator;\n","export * from './const';\nexport * from './filter-utils';\nexport * from './useAppliedDisplayFilters';\nexport * from './useSearchFilter';\nexport * from './useDisplayFilters';\nexport * from './useAllowEdgeCreation';\n","import * as React from 'react';\nimport {\n  Edge,\n  WithRemoveConnectorProps,\n  observer,\n  useSelection,\n  WithContextMenuProps,\n  DefaultEdge,\n  EdgeTerminalType,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  NodeStatus,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport { useAccessReviewAllowed } from '@console/dynamic-plugin-sdk';\nimport { referenceFor, modelFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../../../utils/topology-utils';\nimport './BaseEdge.scss';\n\ntype BaseEdgeProps = {\n  element: GraphElement;\n  dragging?: boolean;\n  className?: string;\n  animationDuration?: number;\n  startTerminalType?: EdgeTerminalType;\n  startTerminalClass?: string;\n  startTerminalStatus?: NodeStatus;\n  endTerminalType?: EdgeTerminalType;\n  endTerminalClass?: string;\n  endTerminalStatus?: NodeStatus;\n  tag?: string;\n  tagClass?: string;\n  tagStatus?: NodeStatus;\n} & WithRemoveConnectorProps &\n  Partial<WithSourceDragProps> &\n  Partial<WithTargetDragProps> &\n  Partial<WithContextMenuProps>;\n\nconst BaseEdge: React.FC<BaseEdgeProps> = ({\n  className,\n  element,\n  endTerminalType = EdgeTerminalType.directional,\n  onShowRemoveConnector,\n  onHideRemoveConnector,\n  targetDragRef,\n  sourceDragRef,\n  ...rest\n}) => {\n  const resourceObj = getResource((element as Edge).getSource());\n  const resourceModel = resourceObj && modelFor(referenceFor(resourceObj));\n  const [selected, onSelect] = useSelection({ controlled: true });\n\n  const editAccess = useAccessReviewAllowed({\n    group: resourceModel?.apiGroup,\n    verb: 'patch',\n    resource: resourceModel?.plural,\n    name: resourceObj?.metadata.name,\n    namespace: resourceObj?.metadata.namespace,\n  });\n\n  return (\n    <DefaultEdge\n      className={classNames('odc-base-edge', className)}\n      element={element}\n      onShowRemoveConnector={editAccess ? onShowRemoveConnector : undefined}\n      onHideRemoveConnector={editAccess ? onHideRemoveConnector : undefined}\n      targetDragRef={editAccess ? targetDragRef : undefined}\n      sourceDragRef={editAccess ? sourceDragRef : undefined}\n      endTerminalType={endTerminalType}\n      selected={selected}\n      onSelect={onSelect}\n      {...rest}\n    />\n  );\n};\n\nexport default observer(BaseEdge);\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  K8sResourceCommon,\n  NetworkAdapterType,\n  PodsAdapterDataType,\n  ResolvedExtension,\n} from '@console/dynamic-plugin-sdk';\nimport { Extension } from '@console/dynamic-plugin-sdk/src/types';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport {\n  DeploymentConfigModel,\n  DeploymentModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  PodModel,\n} from '@console/internal/models';\nimport {\n  BuildConfigData,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  useBuildConfigsWatcher,\n  useJobsForCronJobWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { getResource } from '../../utils';\n\nexport const getDataFromAdapter = <T extends { resource: K8sResourceCommon }, E extends Extension>(\n  element: GraphElement,\n  [resolvedExtensions, loaded]: [ResolvedExtension<E>[], boolean],\n): T | undefined =>\n  loaded\n    ? resolvedExtensions.reduce<T>((acc, { properties: { adapt } }) => {\n        const values = (adapt as (element: GraphElement) => T)(element);\n        return values ?? acc;\n      }, undefined)\n    : undefined;\n\nconst usePodsAdapterForWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const buildConfigData = useBuildConfigsWatcher(resource);\n  const { podData, loaded, loadError } = usePodsWatcher(resource);\n  return React.useMemo(() => ({ pods: podData?.pods, loaded, loadError, buildConfigData }), [\n    buildConfigData,\n    loadError,\n    loaded,\n    podData,\n  ]);\n};\n\nexport const podsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      JobModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: usePodsAdapterForWorkloads };\n};\n\nexport const buildsAdapterForWorkloads = (\n  element: GraphElement,\n): AdapterDataType<BuildConfigData> | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      CronJobModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource, provider: useBuildConfigsWatcher };\n};\n\nexport const networkAdapterForWorkloads = (\n  element: GraphElement,\n): NetworkAdapterType | undefined => {\n  const resource = getResource(element);\n  if (!resource) {\n    return undefined;\n  }\n  if (\n    !resource ||\n    ![\n      DeploymentConfigModel.kind,\n      DeploymentModel.kind,\n      DaemonSetModel.kind,\n      StatefulSetModel.kind,\n      PodModel.kind,\n    ].includes(resource.kind)\n  )\n    return undefined;\n  return { resource };\n};\n\nconst usePodsAdapterForCronJobWorkloads = (resource: K8sResourceCommon): PodsAdapterDataType => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  const {\n    metadata: { namespace },\n  } = resource;\n\n  const [pods, setPods] = React.useState([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      const updatedPods = jobs?.length\n        ? jobs.reduce((acc, res) => {\n            acc.push(...getPodsForResource(res, resources));\n            return acc;\n          }, [])\n        : [];\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [jobs, resources]);\n  return { pods, loaded, loadError };\n};\n\nexport const podsAdapterForCronJobWorkload = (\n  element: GraphElement,\n): AdapterDataType<PodsAdapterDataType> | undefined => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) return undefined;\n  return { resource, provider: usePodsAdapterForCronJobWorkloads };\n};\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { TopologyDisplayFilterType } from '../topology-types';\n\nexport const SHOW_POD_COUNT_FILTER_ID = 'show-pod-count';\nexport const SHOW_LABELS_FILTER_ID = 'show-labels';\nexport const EXPAND_APPLICATION_GROUPS_FILTER_ID = 'expand-app-groups';\nexport const EXPAND_GROUPS_FILTER_ID = 'expand-groups';\n\nexport const DEFAULT_TOPOLOGY_FILTERS = [\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_GROUPS_FILTER_ID,\n    // t('topology~Expand groups')\n    labelKey: 'topology~Expand groups',\n    priority: 1,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_POD_COUNT_FILTER_ID,\n    // t('topology~Pod count')\n    labelKey: 'topology~Pod count',\n    priority: 10,\n    value: false,\n  },\n  {\n    type: TopologyDisplayFilterType.show,\n    id: SHOW_LABELS_FILTER_ID,\n    // t('topology~Labels')\n    labelKey: 'topology~Labels',\n    priority: 900,\n    value: true,\n  },\n  {\n    type: TopologyDisplayFilterType.expand,\n    id: EXPAND_APPLICATION_GROUPS_FILTER_ID,\n    // t('topology~Application groupings')\n    labelKey: 'topology~Application groupings',\n    priority: 10,\n    value: true,\n  },\n];\n\nexport const DEFAULT_SUPPORTED_FILTER_IDS = [SHOW_POD_COUNT_FILTER_ID, SHOW_LABELS_FILTER_ID];\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport {\n  annotationsModalLauncher,\n  deleteModal,\n  labelsModalLauncher,\n  configureReplicaCountModal,\n  podSelectorModal,\n  tolerationsModal,\n} from '@console/internal/components/modals';\nimport { resourceObjPath, asAccessReview } from '@console/internal/components/utils';\nimport { referenceForModel, K8sKind, K8sResourceKind } from '@console/internal/module/k8s';\n\nexport type ResourceActionCreator = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  relatedResource?: K8sResourceKind,\n  message?: JSX.Element,\n) => Action;\n\nexport type ResourceActionFactory = { [name: string]: ResourceActionCreator };\n\nexport const CommonActionFactory: ResourceActionFactory = {\n  Delete: (\n    kind: K8sKind,\n    obj: K8sResourceKind,\n    relatedResource?: K8sResourceKind,\n    message?: JSX.Element,\n  ): Action => ({\n    id: `delete-resource`,\n    label: i18next.t('console-app~Delete {{kind}}', { kind: kind.kind }),\n    cta: () =>\n      deleteModal({\n        kind,\n        resource: obj,\n        message,\n      }),\n    accessReview: asAccessReview(kind, obj, 'delete'),\n  }),\n  Edit: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-resource`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/yaml`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  ModifyLabels: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-labels',\n    label: i18next.t('console-app~Edit labels'),\n    cta: () =>\n      labelsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyAnnotations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-annotations',\n    label: i18next.t('console-app~Edit annotations'),\n    cta: () =>\n      annotationsModalLauncher({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyCount: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-count',\n    label: i18next.t('console-app~Edit Pod count'),\n    cta: () =>\n      configureReplicaCountModal({\n        resourceKind: kind,\n        resource: obj,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch', 'scale'),\n  }),\n  ModifyPodSelector: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-pod-selector',\n    label: i18next.t('console-app~Edit Pod selector'),\n    cta: () =>\n      podSelectorModal({\n        kind,\n        resource: obj,\n        blocking: true,\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  ModifyTolerations: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-toleration',\n    label: i18next.t('console-app~Edit tolerations'),\n    cta: () =>\n      tolerationsModal({\n        resourceKind: kind,\n        resource: obj,\n        modalClassName: 'modal-lg',\n      }),\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n  AddStorage: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'add-storage',\n    label: i18next.t('console-app~Add storage'),\n    cta: {\n      href: `${resourceObjPath(\n        obj,\n        kind.crd ? referenceForModel(kind) : kind.kind,\n      )}/attach-storage`,\n    },\n    accessReview: asAccessReview(kind, obj, 'patch'),\n  }),\n};\n\nexport const getCommonResourceActions = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  message?: JSX.Element,\n): Action[] => {\n  return [\n    CommonActionFactory.ModifyLabels(kind, obj),\n    CommonActionFactory.ModifyAnnotations(kind, obj),\n    CommonActionFactory.Edit(kind, obj),\n    CommonActionFactory.Delete(kind, obj, undefined, message),\n  ];\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import * as React from 'react';\nimport { global_palette_black_1000 as globalBlack1000 } from '@patternfly/react-tokens/dist/js/global_palette_black_1000';\nimport { SVGDefs } from '@patternfly/react-topology';\n\ninterface SvgDropShadowFilterProps {\n  // The unique ID that identifies the filter.\n  // It is also used to uniquely identify the def entry to prevent duplicates.\n  id: string;\n  dx?: number;\n  dy?: number;\n  stdDeviation?: number;\n  floodOpacity?: number;\n  floodColor?: string;\n}\n\nconst SvgDropShadowFilter: React.FC<SvgDropShadowFilterProps> = ({\n  id,\n  dx = 0,\n  dy = 1,\n  stdDeviation = 2,\n  floodColor = globalBlack1000.value,\n  floodOpacity = 0.2,\n}) => {\n  if (window.navigator.userAgent.includes('Edge')) {\n    // feDropShadow is not supported by Edge\n    return (\n      <SVGDefs id={id}>\n        <filter\n          id={id}\n          x={`-${stdDeviation * 12.5}%`}\n          y={`-${stdDeviation * 12.5}%`}\n          width={`${100 + stdDeviation * 25}%`}\n          height={`${100 + stdDeviation * 25}%`}\n        >\n          <feGaussianBlur in=\"SourceAlpha\" stdDeviation={stdDeviation} />\n          <feOffset dx={dx} dy={dy} result=\"offsetblur\" />\n          <feFlood floodColor={floodColor} floodOpacity={floodOpacity} />\n          <feComposite in2=\"offsetblur\" operator=\"in\" />\n          <feMerge>\n            <feMergeNode />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </SVGDefs>\n    );\n  }\n\n  return (\n    <SVGDefs id={id}>\n      <filter\n        id={id}\n        x={`-${stdDeviation * 12.5}%`}\n        y={`-${stdDeviation * 12.5}%`}\n        width={`${100 + stdDeviation * 25}%`}\n        height={`${100 + stdDeviation * 25}%`}\n      >\n        <feDropShadow\n          dx={dx}\n          dy={dy}\n          stdDeviation={stdDeviation}\n          floodColor={floodColor}\n          floodOpacity={floodOpacity}\n        />\n      </filter>\n    </SVGDefs>\n  );\n};\n\nexport default SvgDropShadowFilter;\n","import { Edge, isNode, Node } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { Action, K8sModel } from '@console/dynamic-plugin-sdk';\nimport { asAccessReview } from '@console/internal/components/utils';\nimport { KebabOption } from '@console/internal/components/utils/kebab';\nimport { modelFor, referenceFor } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_REVISION,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_REVISION_TRAFFIC,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport { TYPE_MANAGED_KAFKA_CONNECTION } from '@console/rhoas-plugin/src/topology/components/const';\nimport { moveConnectionModal } from '../components/modals/MoveConnectionModal';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING, TYPE_TRAFFIC_CONNECTOR } from '../const';\nimport { removeConnection } from '../utils';\nimport { getResource } from '../utils/topology-utils';\n\n/**\n * @deprecated migrated to use new Action extension, use MoveConnectorAction\n */\nconst moveConnection = (edge: Edge, availableTargets: Node[]) => {\n  const resourceObj = getResource(edge.getSource());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n\n  return {\n    // t('topology~Move connector')\n    labelKey: 'topology~Move connector',\n    callback: () => {\n      moveConnectionModal({ edge, availableTargets });\n    },\n    isDisabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(resourceModel, resourceObj, 'delete'),\n  };\n};\n\nconst getAvailableTargetForEdge = (edge: Edge, nodes: Node[]) => {\n  const currentTargets = edge\n    .getSource()\n    .getSourceEdges()\n    .map((e) => e.getTarget().getId());\n\n  return nodes\n    .filter((n) => {\n      if (n.getId() === edge.getSource().getId()) {\n        return false;\n      }\n      if (n.getId() !== edge.getTarget().getId() && currentTargets.includes(n.getId())) {\n        return false;\n      }\n      if (n.getType() === TYPE_EVENT_SOURCE) {\n        return false;\n      }\n      switch (edge.getType()) {\n        case TYPE_CONNECTS_TO:\n          return n.getType() !== TYPE_KNATIVE_REVISION && n.getType() !== TYPE_KNATIVE_SERVICE;\n        case TYPE_SERVICE_BINDING:\n          return false;\n        case TYPE_EVENT_SOURCE_LINK:\n          return n.getType() === TYPE_KNATIVE_SERVICE || n.getType() === TYPE_EVENT_PUB_SUB;\n        case TYPE_REVISION_TRAFFIC:\n          return false;\n        case TYPE_TRAFFIC_CONNECTOR:\n          return false;\n        case TYPE_KAFKA_CONNECTION_LINK:\n          return n.getType() === TYPE_MANAGED_KAFKA_CONNECTION;\n        default:\n          return true;\n      }\n    })\n    .sort((n1, n2) => n1.getLabel().localeCompare(n2.getLabel()));\n};\n\nexport const MoveConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n\n  const nodes = element\n    .getController()\n    .getElements()\n    .filter((e) => isNode(e) && !e.isGroup()) as Node[];\n  const availableTargets = getAvailableTargetForEdge(element, nodes);\n\n  return {\n    id: 'move-visual-connector',\n    label: i18next.t('topology~Move connector'),\n    cta: () => {\n      moveConnectionModal({ edge: element, availableTargets });\n    },\n    disabled: availableTargets.length <= 1,\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\nexport const DeleteConnectorAction = (kindObj: K8sModel, element: Edge): Action => {\n  const resourceObj = getResource(element.getSource());\n  return {\n    id: 'delete-connector',\n    label: i18next.t('topology~Delete connector'),\n    cta: () => {\n      removeConnection(element);\n    },\n    accessReview: asAccessReview(kindObj, resourceObj, 'delete'),\n  };\n};\n\n/**\n * @deprecated remove this after migrating the Traffic connector side-panel to dynamic extensions\n */\nexport const edgeActions = (edge: Edge, nodes: Node[]): KebabOption[] => {\n  const actions: KebabOption[] = [];\n  const availableTargets = getAvailableTargetForEdge(edge, nodes);\n  actions.push(moveConnection(edge, availableTargets));\n  return actions;\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { editApplicationModal } from '@console/topology/src/components/modals';\n\nexport const getModifyApplicationAction = (\n  kind: K8sKind,\n  obj: K8sResourceKind,\n  insertBefore?: string | string[],\n): Action => {\n  return {\n    id: 'modify-application',\n    label: i18next.t('topology~Edit application grouping'),\n    insertBefore: insertBefore ?? 'edit-pod-count',\n    cta: () =>\n      editApplicationModal({\n        resourceKind: kind,\n        resource: obj,\n        blocking: true,\n        initialApplication: '',\n      }),\n    accessReview: {\n      verb: 'patch',\n      group: kind.apiGroup,\n      resource: kind.plural,\n      namespace: obj?.metadata?.namespace,\n    },\n  };\n};\n","import {\n  getQueryArgument,\n  removeQueryArgument,\n  setQueryArgument,\n} from '@console/internal/components/utils';\nimport { K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport {\n  DisplayFilters,\n  TopologyDisplayFilterType,\n  TopologyDisplayOption,\n} from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS, EXPAND_GROUPS_FILTER_ID } from './const';\n\nexport const TOPOLOGY_SEARCH_FILTER_KEY = 'searchQuery';\nexport const TOPOLOGY_LABELS_FILTER_KEY = 'labels';\n\nexport enum NameLabelFilterValues {\n  // t('topology~Name')\n  Name = 'Name',\n  // t('topology~Label')\n  Label = 'Label',\n}\n\nexport const onSearchChange = (searchQuery: string): void => {\n  if (searchQuery.length > 0) {\n    setQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY, searchQuery);\n  } else {\n    removeQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY);\n  }\n};\n\nexport const clearNameFilter = () => {\n  onSearchChange('');\n};\nexport const clearLabelFilter = () => {\n  removeQueryArgument(TOPOLOGY_LABELS_FILTER_KEY);\n};\n\nexport const clearAll = () => {\n  clearNameFilter();\n  clearLabelFilter();\n};\n\nexport const getSupportedTopologyFilters = (state: RootState): string[] => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedFilters') : DEFAULT_TOPOLOGY_FILTERS.map((f) => f.id);\n};\n\nexport const getSupportedTopologyKinds = (state: RootState): { [key: string]: number } => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology ? topology.get('supportedKinds') : {};\n};\n\nexport const getTopologySearchQuery = () =>\n  getQueryArgument(TOPOLOGY_SEARCH_FILTER_KEY) ??\n  getQueryArgument(TOPOLOGY_LABELS_FILTER_KEY) ??\n  '';\n\nexport const getFilterById = (id: string, filters: DisplayFilters): TopologyDisplayOption => {\n  if (!filters) {\n    return null;\n  }\n  return filters.find((f) => f.id === id);\n};\n\nexport const isExpanded = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const groupsExpanded = getFilterById(EXPAND_GROUPS_FILTER_ID, filters)?.value ?? true;\n  if (!groupsExpanded) {\n    return false;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.expand) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const isShown = (id: string, filters: DisplayFilters): boolean => {\n  if (!filters) {\n    return true;\n  }\n  const filter = getFilterById(id, filters);\n  if (filter && filter.type === TopologyDisplayFilterType.show) {\n    return filter.value;\n  }\n  return true;\n};\n\nexport const showKind = (kind: K8sResourceKindReference, filters: DisplayFilters): boolean => {\n  if (!filters || !kind) {\n    return true;\n  }\n  // If no kinds are shown, show all\n  const shownKinds = filters.filter((f) => f.type === TopologyDisplayFilterType.kind && f.value);\n  if (shownKinds.length === 0) {\n    return true;\n  }\n\n  // Return filter value if it exists, otherwise filter it out since there are other set filters\n  return getFilterById(kind, filters)?.value ?? false;\n};\n","export { default as BaseNode } from './BaseNode';\nexport * from './WorkloadNode';\nexport { default as PodSet } from './PodSet';\nexport * from './decorators';\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import * as React from 'react';\nimport {\n  Node,\n  ContextSubMenuItem,\n  ContextMenuItem,\n  Graph,\n  GraphElement,\n} from '@patternfly/react-topology';\nimport {\n  Action,\n  GroupedMenuOption,\n  MenuOption,\n  MenuOptionType,\n} from '@console/dynamic-plugin-sdk/src';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getMenuOptionType, orderExtensionBasedOnInsertBeforeAndAfter } from '@console/shared';\nimport ActionMenuItem from '@console/shared/src/components/actions/menu/ActionMenuItem';\nimport { getResource } from '../utils';\n\nexport const createContextMenuItems = (actions: MenuOption[]) => {\n  const sortedOptions = orderExtensionBasedOnInsertBeforeAndAfter(actions);\n  return sortedOptions.map((option: MenuOption) => {\n    const optionType = getMenuOptionType(option);\n    switch (optionType) {\n      case MenuOptionType.SUB_MENU:\n        return (\n          <ContextSubMenuItem label={option.label} key={option.id}>\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </ContextSubMenuItem>\n        );\n      case MenuOptionType.GROUP_MENU:\n        return (\n          <React.Fragment key={option.id}>\n            {option.label && <h1 className=\"pf-v5-c-dropdown__group-title\">{option.label}</h1>}\n            {createContextMenuItems((option as GroupedMenuOption).children)}\n          </React.Fragment>\n        );\n      default:\n        return (\n          <ActionMenuItem key={option.id} action={option as Action} component={ContextMenuItem} />\n        );\n    }\n  });\n};\n\nexport const graphActionContext = (graph: Graph, connectorSource?: Node) => ({\n  'topology-context-actions': { element: graph, connectorSource },\n});\n\nexport const groupActionContext = (element: Node, connectorSource?: Node) => ({\n  'topology-context-actions': { element, connectorSource },\n});\n\nexport const contextMenuActions = (element: GraphElement) => {\n  const resource = getResource(element);\n  const { csvName } = element.getData()?.data ?? {};\n  return {\n    'topology-actions': element,\n    ...(resource ? { [referenceFor(resource)]: resource } : {}),\n    ...(csvName ? { 'csv-actions': { csvName, resource } } : {}),\n  };\n};\n","import * as React from 'react';\nimport {\n  BadgeLocation,\n  DEFAULT_LAYER,\n  DefaultNode,\n  Layer,\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  TOP_LAYER,\n  useCombineRefs,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  StatusModifier,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useAccessReview } from '@console/internal/components/utils';\nimport { K8sVerb, modelFor, referenceFor } from '@console/internal/module/k8s';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport useHover from '../../../../behavior/useHover';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { getKindStringAndAbbreviation } from './nodeUtils';\n\nimport '../../../svg/SvgResourceIcon.scss';\nimport './BaseNode.scss';\n\ntype BaseNodeProps = {\n  className?: string;\n  innerRadius?: number;\n  icon?: string;\n  kind?: string;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: React.ReactNode;\n  labelIconPadding?: number;\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  children?: React.ReactNode;\n  attachments?: React.ReactNode;\n  element: Node;\n  hoverRef?: (node: Element) => () => void;\n  dragging?: boolean;\n  dropTarget?: boolean;\n  canDrop?: boolean;\n  createConnectorAccessVerb?: K8sVerb;\n  nodeStatus?: NodeStatus;\n  showStatusBackground?: boolean;\n  alertVariant?: NodeStatus;\n} & Partial<WithSelectionProps> &\n  Partial<WithDragNodeProps> &\n  Partial<WithDndDropProps> &\n  Partial<WithContextMenuProps> &\n  Partial<WithCreateConnectorProps>;\n\nconst BaseNode: React.FC<BaseNodeProps> = ({\n  className,\n  innerRadius,\n  icon,\n  kind,\n  element,\n  hoverRef,\n  children,\n  onShowCreateConnector,\n  onContextMenu,\n  contextMenuOpen,\n  createConnectorAccessVerb = 'patch',\n  createConnectorDrag,\n  alertVariant,\n  ...rest\n}) => {\n  const [hoverChange, setHoverChange] = React.useState<boolean>(false);\n  const [hover, internalHoverRef] = useHover(200, 200, [hoverChange]);\n  const nodeHoverRefs = useCombineRefs(internalHoverRef, hoverRef);\n  const { width, height } = element.getDimensions();\n  const cx = width / 2;\n  const cy = height / 2;\n  const resourceObj = getTopologyResourceObject(element.getData());\n  const resourceModel = modelFor(referenceFor(resourceObj));\n  const iconRadius = innerRadius * 0.9;\n  const editAccess = useAccessReview({\n    group: resourceModel?.apiGroup,\n    verb: createConnectorAccessVerb,\n    resource: resourceModel?.plural,\n    name: resourceObj.metadata.name,\n    namespace: resourceObj.metadata.namespace,\n  });\n  const [filtered] = useSearchFilter(element.getLabel(), resourceObj?.metadata?.labels);\n  const showLabel = useShowLabel(hover || contextMenuOpen);\n  const kindData = kind && getKindStringAndAbbreviation(kind);\n\n  const detailsLevel = element.getController().getGraph().getDetailsLevel();\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const badgeClassName = kindData\n    ? classNames('odc-resource-icon', {\n        [`odc-resource-icon-${kindData.kindStr.toLowerCase()}`]: !kindData.kindColor,\n      })\n    : '';\n  React.useEffect(() => {\n    if (!createConnectorDrag) {\n      setHoverChange((prev) => !prev);\n    }\n  }, [createConnectorDrag]);\n  return (\n    <Layer id={hover || contextMenuOpen ? TOP_LAYER : DEFAULT_LAYER}>\n      <g ref={nodeHoverRefs} data-test-id={element.getLabel()}>\n        <DefaultNode\n          className={classNames(\n            'odc-base-node',\n            className,\n            alertVariant && StatusModifier[alertVariant],\n            {\n              'is-filtered': filtered,\n            },\n          )}\n          truncateLength={RESOURCE_NAME_TRUNCATE_LENGTH}\n          element={element}\n          showLabel={showLabel}\n          scaleNode={(hover || contextMenuOpen) && detailsLevel !== ScaleDetailsLevel.high}\n          onShowCreateConnector={\n            editAccess && detailsLevel !== ScaleDetailsLevel.low && onShowCreateConnector\n          }\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          badge={kindData?.kindAbbr}\n          badgeColor={kindData?.kindColor}\n          badgeClassName={badgeClassName}\n          showStatusBackground={!showDetails}\n          {...rest}\n        >\n          <g data-test-id=\"base-node-handler\">\n            {icon && showDetails && (\n              <>\n                <circle\n                  fill=\"var(--pf-v5-global--palette--white)\"\n                  cx={cx}\n                  cy={cy}\n                  r={innerRadius + 6}\n                />\n                <image\n                  x={cx - iconRadius}\n                  y={cy - iconRadius}\n                  width={iconRadius * 2}\n                  height={iconRadius * 2}\n                  xlinkHref={icon}\n                />\n              </>\n            )}\n            {showDetails && children}\n          </g>\n        </DefaultNode>\n      </g>\n    </Layer>\n  );\n};\n\nexport default observer(BaseNode);\n","import * as React from 'react';\nimport Decorator from './Decorator';\n\ntype BuildDecoratorBubbleProps = React.ComponentProps<typeof Decorator> & {\n  children: React.ReactNode;\n  radius: number;\n  x: number;\n  y: number;\n};\n\nconst BuildDecoratorBubble: React.FC<BuildDecoratorBubbleProps> = ({\n  children,\n  radius,\n  x,\n  y,\n  ...otherDecoratorProps\n}) => (\n  <Decorator x={x} y={y} radius={radius} {...otherDecoratorProps}>\n    <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n      <foreignObject width={radius} height={radius} style={{ fontSize: radius }}>\n        {children}\n      </foreignObject>\n    </g>\n  </Decorator>\n);\n\nexport default BuildDecoratorBubble;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport {\n  Node,\n  useSize,\n  useHover,\n  DefaultNode,\n  LabelBadge,\n  observer,\n  WithSelectionProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithContextMenuProps,\n  useAnchor,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\nimport {\n  truncateMiddle,\n  shouldTruncate,\n  TruncateOptions,\n} from '@console/internal/components/utils';\nimport { RESOURCE_NAME_TRUNCATE_LENGTH } from '@console/shared';\nimport { useSearchFilter } from '../../../../filters';\nimport { OdcNodeModel } from '../../../../topology-types';\nimport SvgCircledIcon from '../../../svg/SvgCircledIcon';\nimport GroupNodeAnchor from './GroupNodeAnchor';\nimport ResourceKindsInfo from './ResourceKindsInfo';\n\nimport './GroupNode.scss';\n\nconst TOP_MARGIN = 20;\nconst LEFT_MARGIN = 20;\nconst TEXT_MARGIN = 10;\n\nconst truncateOptions: TruncateOptions = {\n  length: RESOURCE_NAME_TRUNCATE_LENGTH,\n};\n\ntype GroupNodeProps = {\n  element: Node;\n  bgClassName: string;\n  badge?: string;\n  badgeColor?: string;\n  badgeClassName?: string;\n  emptyValue?: React.ReactNode;\n  groupResources?: OdcNodeModel[];\n  children?: React.ReactNode;\n  typeIconClass?: string;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & Partial<WithSelectionProps & WithDndDropProps & WithContextMenuProps & WithDragNodeProps>;\n\nconst GroupNode: React.FC<GroupNodeProps> = ({\n  element,\n  bgClassName,\n  badge,\n  badgeColor,\n  badgeClassName,\n  children,\n  emptyValue,\n  typeIconClass,\n  ...rest\n}) => {\n  const ref = React.useRef();\n  const [filtered] = useSearchFilter(element.getLabel());\n  const [textHover, textHoverRef] = useHover();\n  const [iconSize, iconRef] = useSize([badge]);\n  const iconWidth = iconSize ? iconSize.width : 0;\n  const iconHeight = iconSize ? iconSize.height : 0;\n  const title = element.getLabel();\n  const { groupResources } = element.getData();\n  const [groupSize, groupRef] = useSize([groupResources]);\n  const width = groupSize ? groupSize.width : 0;\n  const height = groupSize ? groupSize.height : 0;\n  useAnchor(\n    React.useCallback((node: Node) => new GroupNodeAnchor(node, width, height, 1.5), [\n      width,\n      height,\n    ]),\n  );\n\n  const getCustomShape = () => () => (\n    <rect\n      className={classNames('odc-group-node__bg', bgClassName)}\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx=\"5\"\n      ry=\"5\"\n    />\n  );\n\n  return (\n    <DefaultNode\n      element={element}\n      className={classNames('odc-group-node', { 'is-filtered': filtered })}\n      badge={badge}\n      badgeColor={badgeColor}\n      badgeClassName={badgeClassName}\n      showLabel={false}\n      getCustomShape={getCustomShape}\n      {...rest}\n    >\n      <g ref={groupRef}>\n        {typeIconClass && (\n          <SvgCircledIcon\n            className=\"odc-group-node__type-icon\"\n            x={10}\n            y={-10}\n            width={20}\n            height={20}\n            iconClass={typeIconClass}\n          />\n        )}\n        <g ref={groupRef}>\n          <LabelBadge\n            ref={iconRef}\n            x={LEFT_MARGIN}\n            y={TOP_MARGIN - 2}\n            badge={badge}\n            badgeClassName={badgeClassName}\n            badgeColor={badgeColor}\n          />\n          {title && (\n            <g ref={textHoverRef}>\n              <Tooltip\n                content={title}\n                position={TooltipPosition.top}\n                trigger=\"manual\"\n                isVisible={textHover && shouldTruncate(title, truncateOptions)}\n                triggerRef={ref}\n              >\n                <text\n                  ref={ref}\n                  className=\"odc-group-node__title\"\n                  x={LEFT_MARGIN + iconWidth + TEXT_MARGIN}\n                  y={TOP_MARGIN + iconHeight}\n                  textAnchor=\"start\"\n                  dy=\"-0.25em\"\n                >\n                  {truncateMiddle(title, truncateOptions)}\n                </text>\n              </Tooltip>\n            </g>\n          )}\n          {(children || groupResources || emptyValue) && (\n            <g transform={`translate(${LEFT_MARGIN}, ${TOP_MARGIN + iconHeight})`}>\n              {(groupResources || emptyValue) && (\n                <ResourceKindsInfo groupResources={groupResources} emptyValue={emptyValue} />\n              )}\n              {children}\n            </g>\n          )}\n        </g>\n      </g>\n    </DefaultNode>\n  );\n};\n\nexport default observer(GroupNode);\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","export * from './componentUtils';\nexport * from './componentFactory';\nexport * from './nodeContextMenu';\nexport * from './nodes';\nexport * from './edges';\nexport * from './groups';\nexport * from './NodeShadows';\n","import * as React from 'react';\nimport {\n  Modifiers,\n  Edge,\n  GraphElement,\n  isEdge,\n  isNode,\n  Node,\n  Graph,\n  DragSourceSpec,\n  DragObjectWithType,\n  DropTargetSpec,\n  DropTargetMonitor,\n  DragSpecOperationType,\n  CREATE_CONNECTOR_DROP_TYPE,\n  CREATE_CONNECTOR_OPERATION,\n  isGraph,\n  withDndDrop,\n  DragEvent,\n  DragOperationWithType,\n} from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport { action } from 'mobx';\nimport { errorModal } from '@console/internal/components/modals';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { ActionContext } from '@console/shared';\nimport { createConnection, moveNodeToGroup } from '../../../utils';\nimport { isWorkloadRegroupable, graphContextMenu, groupContextMenu } from './nodeContextMenu';\nimport withTopologyContextMenu from './withTopologyContextMenu';\nimport './GraphComponent.scss';\n\nconst MOVE_CONNECTOR_DROP_TYPE = '#moveConnector#';\n\nconst NODE_DRAG_TYPE = '#node#';\nconst EDGE_DRAG_TYPE = '#edge#';\n\nconst MOVE_CONNECTOR_OPERATION = 'moveconnector';\nconst REGROUP_OPERATION = 'regroup';\n\ntype GraphComponentProps = {\n  element: GraphElement;\n};\n\ntype NodeComponentProps = {\n  element: GraphElement;\n};\n\ntype EdgeComponentProps = {\n  element: GraphElement;\n};\n\n/**\n * type: the drag operation type\n * edit: true if the operation performs an edit, used to dim invalid drop targets\n * canDropOnNode: true if the drag object can be dropped on node, used to highlight valid drop nodes\n */\ntype EditableDragOperationType = DragOperationWithType & {\n  edit?: boolean;\n  canDropOnNode?: (operationType: string, dragElement: GraphElement, node: Node) => boolean;\n};\n\ntype DragNodeObject = {\n  element: GraphElement;\n  allowRegroup: boolean;\n};\n\nconst canDropEdgeOnNode = (operation: string, edge: Edge, node: Node): boolean => {\n  if (edge.getSource() === node) {\n    return false;\n  }\n\n  if (edge.getTarget() === node) {\n    return true;\n  }\n\n  return !node.getTargetEdges().find((e) => e.getSource() === edge.getSource());\n};\n\nconst highlightNode = (monitor: DropTargetMonitor, element: Node): boolean => {\n  const operation = monitor.getOperation() as EditableDragOperationType;\n  if (!monitor.isDragging() || !operation) {\n    return false;\n  }\n\n  if (operation.type === CREATE_CONNECTOR_OPERATION) {\n    return (\n      monitor.getItem() !== element &&\n      monitor.getItem().getParent() !== element &&\n      !monitor\n        .getItem()\n        .getSourceEdges()\n        .find((e) => e.getTarget() === element)\n    );\n  }\n\n  return (\n    operation.canDropOnNode && operation.canDropOnNode(operation.type, monitor.getItem(), element)\n  );\n};\n\nexport type NodeDragSourceSpecType = DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  GraphElement,\n  {\n    dragging?: boolean;\n    regrouping?: boolean;\n  },\n  NodeComponentProps & { canEdit?: boolean }\n>;\n\nconst nodeDragSourceSpec = (\n  type: string,\n  allowRegroup: boolean = true,\n  canEdit: boolean = false,\n): NodeDragSourceSpecType => ({\n  item: { type: NODE_DRAG_TYPE },\n  operation: (monitor, props) => {\n    return (canEdit || props.canEdit) &&\n      allowRegroup &&\n      isWorkloadRegroupable(props.element as Node)\n      ? {\n          [Modifiers.SHIFT]: { type: REGROUP_OPERATION, edit: true },\n        }\n      : undefined;\n  },\n  canCancel: (monitor) => monitor.getOperation()?.type === REGROUP_OPERATION,\n  begin: (monitor, props): DragNodeObject => {\n    return {\n      element: props.element,\n      allowRegroup:\n        (canEdit || props.canEdit) && allowRegroup && isWorkloadRegroupable(props.element as Node),\n    };\n  },\n  end: async (dropResult, monitor, props) => {\n    if (!monitor.isCancelled() && monitor.getOperation()?.type === REGROUP_OPERATION) {\n      if (monitor.didDrop() && dropResult && props && props.element.getParent() !== dropResult) {\n        const controller = props.element.getController();\n        await moveNodeToGroup(\n          props.element as Node,\n          isNode(dropResult) ? (dropResult as Node) : null,\n        );\n\n        // perform the optimistic update in an action so as not to render too soon\n        action(() => {\n          // FIXME: check shouldn't be necessary if we handled the async and backend data refresh correctly\n          if (controller.getNodeById(props.element.getId())) {\n            dropResult.appendChild(props.element);\n          }\n        })();\n      } else {\n        // cancel operation\n        return Promise.reject();\n      }\n    }\n    return undefined;\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n    regrouping: monitor.getOperation()?.type === REGROUP_OPERATION,\n  }),\n});\n\nconst noRegroupDragSourceSpec: DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  {\n    dragging?: boolean;\n  },\n  NodeComponentProps\n> = {\n  item: { type: NODE_DRAG_TYPE },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n};\n\nconst nodesEdgeIsDragging = (monitor, props) => {\n  if (!monitor.isDragging()) {\n    return false;\n  }\n  if (monitor.getOperation()?.type === MOVE_CONNECTOR_OPERATION) {\n    return monitor.getItem().getSource() === props.element;\n  }\n  if (monitor.getOperation()?.type === CREATE_CONNECTOR_OPERATION) {\n    return monitor.getItem() === props.element;\n  }\n  return false;\n};\n\nconst nodeDropTargetSpec: DropTargetSpec<\n  GraphElement,\n  any,\n  { canDrop: boolean; dropTarget: boolean; edgeDragging: boolean },\n  NodeComponentProps\n> = {\n  accept: [EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor, props) => {\n    if (isEdge(item)) {\n      return canDropEdgeOnNode(monitor.getOperation()?.type, item as Edge, props.element as Node);\n    }\n    if (!props.element || item === props.element) {\n      return false;\n    }\n    return !(props.element as Node).getTargetEdges().find((e) => e.getSource() === item);\n  },\n  collect: (monitor, props) => ({\n    canDrop: highlightNode(monitor, props.element as Node),\n    dropTarget: monitor.isOver({ shallow: true }),\n    edgeDragging: nodesEdgeIsDragging(monitor, props),\n  }),\n};\n\nconst graphDropTargetSpec: DropTargetSpec<\n  DragNodeObject,\n  any,\n  { dragEditInProgress: boolean },\n  GraphComponentProps\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  hitTest: () => true,\n  canDrop: (item, monitor, props) => {\n    return (\n      monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n      ((monitor.getOperation()?.type === REGROUP_OPERATION &&\n        // FIXME: the hasParent check is necessary due to model updates during async actions\n        item.element.hasParent() &&\n        item.element.getParent() !== props.element) ||\n        monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE)\n    );\n  },\n  collect: (monitor) => {\n    const operation = monitor.getOperation() as EditableDragOperationType;\n    const dragInProgress = monitor.isDragging();\n    const dragEditInProgress =\n      monitor.isDragging() && (operation?.type === CREATE_CONNECTOR_OPERATION || operation?.edit);\n    const dragCreate =\n      dragEditInProgress &&\n      (monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE ||\n        monitor.getItemType() === MOVE_CONNECTOR_DROP_TYPE);\n    return {\n      dragInProgress,\n      dragEditInProgress,\n      dragCreate,\n      hasDropTarget: dragEditInProgress && monitor.hasDropTarget(),\n    };\n  },\n  dropHint: 'create',\n};\n\nconst applicationGroupDropTargetSpec: DropTargetSpec<\n  any,\n  any,\n  { droppable: boolean; dropTarget: boolean; canDrop: boolean },\n  any\n> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: (item, monitor) =>\n    monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }) &&\n    (monitor.getOperation()?.type === REGROUP_OPERATION ||\n      monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n  collect: (monitor) => {\n    return {\n      droppable: monitor.isDragging() && monitor.getOperation()?.type === REGROUP_OPERATION,\n      dropTarget: monitor.isOver({ shallow: monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE }),\n      canDrop:\n        monitor.isDragging() &&\n        (monitor.getOperation()?.type === REGROUP_OPERATION ||\n          monitor.getItemType() === CREATE_CONNECTOR_DROP_TYPE),\n      dragRegroupable: monitor.isDragging() && monitor.getItem()?.allowRegroup,\n    };\n  },\n  dropHint: 'create',\n};\n\nconst edgeDragSourceSpec = (\n  type: string,\n  callback: (\n    sourceNode: Node,\n    targetNode: Node,\n    replaceTargetNode?: Node,\n  ) => Promise<K8sResourceKind[] | K8sResourceKind>,\n  failureTitle?: string,\n): DragSourceSpec<\n  DragObjectWithType,\n  DragSpecOperationType<EditableDragOperationType>,\n  Node,\n  { dragging: boolean },\n  EdgeComponentProps\n> => ({\n  item: { type: EDGE_DRAG_TYPE },\n  operation: { type: MOVE_CONNECTOR_OPERATION, edit: true, canDropOnNode: canDropEdgeOnNode },\n  begin: (monitor, props) => {\n    props.element.raise();\n    return props.element;\n  },\n  drag: (event, monitor, props) => {\n    (props.element as Edge).setEndPoint(event.x, event.y);\n  },\n  end: (dropResult, monitor, props) => {\n    const edge = props.element as Edge;\n    edge.setEndPoint();\n    if (\n      monitor.didDrop() &&\n      dropResult &&\n      canDropEdgeOnNode(monitor.getOperation()?.type, edge, dropResult)\n    ) {\n      const title =\n        failureTitle !== undefined ? failureTitle : i18next.t('topology~Error moving connection');\n      callback(edge.getSource(), dropResult, edge.getTarget()).catch((error) => {\n        errorModal({ title, error: error.message, showIcon: true });\n      });\n    }\n  },\n  collect: (monitor) => ({\n    dragging: monitor.isDragging(),\n  }),\n});\n\nconst noDropTargetSpec: DropTargetSpec<GraphElement, any, {}, { element: GraphElement }> = {\n  accept: [NODE_DRAG_TYPE, EDGE_DRAG_TYPE, CREATE_CONNECTOR_DROP_TYPE],\n  canDrop: () => {\n    return false;\n  },\n};\n\nconst withNoDrop = () => {\n  return withDndDrop<any, any, {}, NodeComponentProps>(noDropTargetSpec);\n};\n\nconst withContextMenu = <E extends GraphElement>(actions: (element: E) => ActionContext) => {\n  return withTopologyContextMenu(\n    actions,\n    document.getElementById('popper-container'),\n    'odc-topology-context-menu',\n  );\n};\n\nconst createVisualConnector = (source: Node, target: Node | Graph): React.ReactElement[] | null => {\n  if (isGraph(target)) {\n    return graphContextMenu(target, source);\n  }\n  if (target.isGroup()) {\n    return groupContextMenu(target, source);\n  }\n\n  createConnection(source, target, null).catch((error) => {\n    errorModal({ title: i18next.t('topology~Error creating connection'), error: error.message });\n  });\n\n  return null;\n};\n\nconst createConnectorCallback = () => (\n  source: Node,\n  target: Node | Graph,\n  event: DragEvent,\n  dropHints: string[] | undefined,\n): Promise<React.ReactElement[] | null> => {\n  if (source === target) {\n    return null;\n  }\n  const relationshipProviders = target.getGraph()?.getData()?.relationshipProviderExtensions;\n  const curRelProvider = relationshipProviders?.find(({ uid }) => dropHints.includes(uid));\n  if (curRelProvider) {\n    return curRelProvider.properties.create(source, target);\n  }\n\n  const createConnectors = target.getGraph()?.getData()?.createConnectorExtensions;\n  if (isGraph(target) || !createConnectors) {\n    return Promise.resolve(createVisualConnector(source, target));\n  }\n  const creator = createConnectors.find((getter) => !!getter(dropHints, source, target));\n  if (creator) {\n    return creator(dropHints, source, target)(source, target);\n  }\n  return Promise.resolve(createVisualConnector(source, target));\n};\n\nexport {\n  GraphComponentProps,\n  NodeComponentProps,\n  EdgeComponentProps,\n  EditableDragOperationType,\n  DragNodeObject,\n  nodesEdgeIsDragging,\n  noRegroupDragSourceSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  graphDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  noDropTargetSpec,\n  createConnectorCallback,\n  REGROUP_OPERATION,\n  MOVE_CONNECTOR_DROP_TYPE,\n  NODE_DRAG_TYPE,\n  EDGE_DRAG_TYPE,\n  withNoDrop,\n  withContextMenu,\n  canDropEdgeOnNode,\n  highlightNode,\n};\n","import * as React from 'react';\nimport { Node, Graph, isGraph } from '@patternfly/react-topology';\nimport { ActionServiceProvider } from '@console/shared';\nimport { TYPE_APPLICATION_GROUP } from '@console/topology/src/const';\nimport { createContextMenuItems } from '../../../actions/contextMenuActions';\n\nexport const isWorkloadRegroupable = (node: Node): boolean =>\n  isGraph(node?.getParent()) || node?.getParent().getType() === TYPE_APPLICATION_GROUP;\n\nexport const groupContextMenu = (element: Node, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n\nexport const graphContextMenu = (graph: Graph, connectorSource?: Node) => [\n  <ActionServiceProvider\n    key=\"topology\"\n    context={{ 'topology-context-actions': { element: graph, connectorSource } }}\n  >\n    {({ options, loaded }) => loaded && createContextMenuItems(options)}\n  </ActionServiceProvider>,\n];\n","export { default as BaseEdge } from './BaseEdge';\nexport { default as AggregateEdge } from './AggregateEdge';\nexport { default as ConnectsTo } from './ConnectsTo';\nexport { default as CreateConnector } from './CreateConnector';\nexport { default as ServiceBinding } from './ServiceBinding';\nexport { default as TrafficConnector } from './TrafficConnector';\n","export { default as GroupNode } from './GroupNode';\nexport { default as GroupNodeAnchor } from './GroupNodeAnchor';\nexport { default as Application } from './Application';\nexport { default as ResourceKindsInfo } from './ResourceKindsInfo';\n","import { useContext } from 'react';\nimport { useDeepCompareMemoize } from '@console/shared';\nimport { DisplayFilters } from '../topology-types';\nimport { FilterContext } from './FilterProvider';\n\nconst useDisplayFilters = (): DisplayFilters => {\n  const { filters } = useContext(FilterContext);\n  return useDeepCompareMemoize(filters);\n};\n\nexport { useDisplayFilters };\n","import * as React from 'react';\nimport { useSize, createSvgIdUrl } from '@patternfly/react-topology';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport SvgDropShadowFilter from './SvgDropShadowFilter';\n\ninterface SvgTypedIconProps {\n  className?: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: number;\n  iconClass?: string;\n  icon?: React.ReactNode;\n}\n\nconst FILTER_ID = 'SvgTypedIconDropShadowFilterId';\n\nconst CircledIcon: React.FC<SvgTypedIconProps> = (\n  { className, x, y, width, height, iconClass, icon, padding = 4 },\n  circleRef,\n) => {\n  const [typedIconSize, typedIconRef] = useSize([]);\n\n  let iconWidth = 0;\n  let iconHeight = 0;\n\n  if (typedIconSize) {\n    ({ width: iconWidth, height: iconHeight } = typedIconSize);\n  }\n\n  return (\n    <g className={className}>\n      <SvgDropShadowFilter id={FILTER_ID} />\n      <circle\n        key={`circle-${FILTER_ID}`}\n        ref={circleRef}\n        filter={createSvgIdUrl(FILTER_ID)}\n        cx={x - iconWidth / 2}\n        cy={y + iconHeight / 2}\n        r={iconWidth / 2 + padding}\n      />\n      {icon ? (\n        <g ref={typedIconRef}>\n          <foreignObject\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth + 4}\n            y={y}\n            width={width}\n            height={height}\n          >\n            {icon}\n          </foreignObject>\n        </g>\n      ) : (\n        <g ref={typedIconRef}>\n          <image\n            key={`image-${FILTER_ID}`}\n            x={x - iconWidth}\n            y={y}\n            width={width}\n            height={height}\n            xlinkHref={getImageForIconClass(iconClass) || iconClass}\n            filter={createSvgIdUrl(FILTER_ID)}\n          />\n        </g>\n      )}\n    </g>\n  );\n};\n\nexport default React.forwardRef(CircledIcon);\n","import { Node, Point, AbstractAnchor, getRectAnchorPoint } from '@patternfly/react-topology';\n\nclass GroupNodeAnchor extends AbstractAnchor<Node> {\n  protected readonly width: number;\n\n  protected readonly height: number;\n\n  constructor(owner: Node, width: number, height: number, offset: number = 0) {\n    super(owner, offset);\n    this.width = width;\n    this.height = height;\n  }\n\n  getLocation(reference: Point): Point {\n    const center = new Point(\n      this.owner.getPosition().x + this.width / 2,\n      this.owner.getPosition().y + this.height / 2,\n    );\n\n    const offset2x = this.offset * 2;\n    return getRectAnchorPoint(center, this.width + offset2x, this.height + offset2x, reference);\n  }\n}\n\nexport default GroupNodeAnchor;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { ResourceIcon } from '@console/internal/components/utils';\nimport { modelFor, pluralizeKind, referenceForModel } from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../../../../topology-types';\n\nimport './ResourceKindsInfo.scss';\n\nexport const RESOURCE_INFO_PADDING = 32;\nexport const RESOURCE_KIND_ROW_WIDTH = 250;\nexport const RESOURCE_KIND_ROW_HEIGHT = 29;\n\ntype ResourceKindsInfoProps = {\n  groupResources: OdcNodeModel[];\n  emptyValue?: React.ReactNode;\n};\n\nconst ResourceKindsInfo: React.FC<ResourceKindsInfoProps> = ({ groupResources, emptyValue }) => {\n  const resourcesData = {};\n  _.forEach(groupResources, (node: OdcNodeModel) => {\n    if (!node) {\n      return;\n    }\n    const kind = node.resourceKind || node.resource?.kind;\n    resourcesData[kind] = [...(resourcesData[kind] ? resourcesData[kind] : []), node.resource];\n  });\n  const resourceTypes = _.keys(resourcesData);\n\n  if (!resourceTypes.length) {\n    return (\n      <foreignObject\n        width={RESOURCE_KIND_ROW_WIDTH}\n        height={RESOURCE_INFO_PADDING + RESOURCE_KIND_ROW_HEIGHT}\n      >\n        <div className=\"odc-resource-kinds-info\">{emptyValue}</div>\n      </foreignObject>\n    );\n  }\n\n  return (\n    <foreignObject\n      width={RESOURCE_KIND_ROW_WIDTH}\n      height={RESOURCE_INFO_PADDING + resourceTypes.length * RESOURCE_KIND_ROW_HEIGHT}\n    >\n      <div className=\"odc-resource-kinds-info\">\n        <table className=\"odc-resource-kinds-info__table\">\n          <tbody className=\"odc-resource-kinds-info__body\">\n            {resourceTypes.map((key) => {\n              const kindObj = modelFor(key);\n              let kind;\n              let label;\n              if (kindObj) {\n                kind = kindObj.crd ? referenceForModel(kindObj) : kindObj.kind;\n                label = resourcesData[key].length > 1 ? kindObj.labelPlural : kindObj.label;\n              } else {\n                kind = key;\n                label = resourcesData[key].length > 1 ? pluralizeKind(key) : _.startCase(key);\n              }\n              return (\n                <tr key={key} className=\"odc-resource-kinds-info__row\">\n                  <td className=\"odc-resource-kinds-info__count\">{resourcesData[key].length}</td>\n                  <td className=\"odc-resource-kinds-info__resource-icon\">\n                    <ResourceIcon kind={kind} />\n                  </td>\n                  <td className=\"odc-resource-kinds-info__kind\">{label}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </foreignObject>\n  );\n};\n\nexport default ResourceKindsInfo;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RevisionModel } from '@console/knative-plugin/src/models';\nimport {\n  PodRCData,\n  PodStatus,\n  calculateRadius,\n  getPodData,\n  podDataInProgress,\n  usePodRingLabel,\n  useRelatedHPA,\n} from '@console/shared';\n\ninterface PodSetProps {\n  size: number;\n  data: PodRCData;\n  showPodCount?: boolean;\n  x?: number;\n  y?: number;\n}\n\ninterface InnerPodStatusRadius {\n  innerPodStatusOuterRadius: number;\n  innerPodStatusInnerRadius: number;\n}\n\nconst calculateInnerPodStatusRadius = (\n  outerPodStatusInnerRadius: number,\n  outerPodStatusWidth: number,\n): InnerPodStatusRadius => {\n  const innerPodStatusWidth = outerPodStatusWidth * 0.6;\n  const spaceBwOuterAndInnerPodStatus = 3;\n  const innerPodStatusOuterRadius = outerPodStatusInnerRadius - spaceBwOuterAndInnerPodStatus;\n  const innerPodStatusInnerRadius = innerPodStatusOuterRadius - innerPodStatusWidth;\n\n  return { innerPodStatusOuterRadius, innerPodStatusInnerRadius };\n};\n\nexport const podSetInnerRadius = (size: number, data?: PodRCData) => {\n  const { podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(size);\n  let radius = podStatusInnerRadius;\n\n  if (data && podDataInProgress(data.obj, data.current, data.isRollingOut)) {\n    const { innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n      radius,\n      podStatusStrokeWidth,\n    );\n    radius = innerPodStatusInnerRadius;\n  }\n\n  const { podStatusStrokeWidth: innerStrokeWidth, podStatusInset } = calculateRadius(radius * 2);\n\n  return radius - innerStrokeWidth - podStatusInset;\n};\n\nconst PodSet: React.FC<PodSetProps> = React.memo(function PodSet({\n  size,\n  data,\n  x = 0,\n  y = 0,\n  showPodCount,\n}) {\n  const { t } = useTranslation();\n  const { podStatusOuterRadius, podStatusInnerRadius, podStatusStrokeWidth } = calculateRadius(\n    size,\n  );\n  const { innerPodStatusOuterRadius, innerPodStatusInnerRadius } = calculateInnerPodStatusRadius(\n    podStatusInnerRadius,\n    podStatusStrokeWidth,\n  );\n  const { inProgressDeploymentData, completedDeploymentData } = getPodData(data);\n\n  const [hpa] = useRelatedHPA(\n    data.obj?.apiVersion,\n    data.obj?.kind,\n    data.obj?.metadata?.name,\n    data.obj?.metadata?.namespace,\n  );\n  const hpaControlledScaling = !!hpa;\n\n  const obj = data.current?.obj || data.obj;\n  const ownerKind = RevisionModel.kind === data.obj?.kind ? data.obj.kind : obj.kind;\n  const { title, subTitle, titleComponent } = usePodRingLabel(\n    obj,\n    ownerKind,\n    data?.pods,\n    hpaControlledScaling,\n    t,\n    hpa,\n  );\n  return (\n    <>\n      <PodStatus\n        key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n        x={x - size / 2}\n        y={y - size / 2}\n        innerRadius={podStatusInnerRadius}\n        outerRadius={podStatusOuterRadius}\n        data={completedDeploymentData}\n        size={size}\n        subTitle={showPodCount ? subTitle : undefined}\n        title={showPodCount ? title : undefined}\n        titleComponent={showPodCount ? titleComponent : undefined}\n      />\n      {inProgressDeploymentData && (\n        <PodStatus\n          x={x - size / 2}\n          y={y - size / 2}\n          innerRadius={innerPodStatusInnerRadius}\n          outerRadius={innerPodStatusOuterRadius}\n          data={inProgressDeploymentData}\n          size={size}\n        />\n      )}\n    </>\n  );\n});\n\nexport default PodSet;\n","import * as React from 'react';\n\ntype GiteaIconProps = {\n  style?: React.CSSProperties;\n  topology?: boolean;\n};\n\nconst GiteaIcon: React.FC<GiteaIconProps> = ({ style, topology }): React.ReactElement => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={topology ? '0 20 650 587' : '0 20 650 450'}\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      role=\"img\"\n      width=\"1em\"\n      height=\"1em\"\n      style={style}\n    >\n      <path\n        d=\"m395.9 484.2-126.9-61c-12.5-6-17.9-21.2-11.8-33.8l61-126.9c6-12.5 21.2-17.9 33.8-11.8 17.2 8.3 27.1 13 27.1 13l-.1-109.2 16.7-.1.1 117.1s57.4 24.2 83.1 40.1c3.7 2.3 10.2 6.8 12.9 14.4 2.1 6.1 2 13.1-1 19.3l-61 126.9c-6.2 12.7-21.4 18.1-33.9 12z\"\n        style={{\n          fill: '#fff',\n        }}\n      />\n      <path\n        d=\"M622.7 149.8c-4.1-4.1-9.6-4-9.6-4s-117.2 6.6-177.9 8c-13.3.3-26.5.6-39.6.7v117.2c-5.5-2.6-11.1-5.3-16.6-7.9 0-36.4-.1-109.2-.1-109.2-29 .4-89.2-2.2-89.2-2.2s-141.4-7.1-156.8-8.5c-9.8-.6-22.5-2.1-39 1.5-8.7 1.8-33.5 7.4-53.8 26.9C-4.9 212.4 6.6 276.2 8 285.8c1.7 11.7 6.9 44.2 31.7 72.5 45.8 56.1 144.4 54.8 144.4 54.8s12.1 28.9 30.6 55.5c25 33.1 50.7 58.9 75.7 62 63 0 188.9-.1 188.9-.1s12 .1 28.3-10.3c14-8.5 26.5-23.4 26.5-23.4S547 483 565 451.5c5.5-9.7 10.1-19.1 14.1-28 0 0 55.2-117.1 55.2-231.1-1.1-34.5-9.6-40.6-11.6-42.6zM125.6 353.9c-25.9-8.5-36.9-18.7-36.9-18.7S69.6 321.8 60 295.4c-16.5-44.2-1.4-71.2-1.4-71.2s8.4-22.5 38.5-30c13.8-3.7 31-3.1 31-3.1s7.1 59.4 15.7 94.2c7.2 29.2 24.8 77.7 24.8 77.7s-26.1-3.1-43-9.1zm300.3 107.6s-6.1 14.5-19.6 15.4c-5.8.4-10.3-1.2-10.3-1.2s-.3-.1-5.3-2.1l-112.9-55s-10.9-5.7-12.8-15.6c-2.2-8.1 2.7-18.1 2.7-18.1L322 273s4.8-9.7 12.2-13c.6-.3 2.3-1 4.5-1.5 8.1-2.1 18 2.8 18 2.8L467.4 315s12.6 5.7 15.3 16.2c1.9 7.4-.5 14-1.8 17.2-6.3 15.4-55 113.1-55 113.1z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n      <path\n        d=\"M326.8 380.1c-8.2.1-15.4 5.8-17.3 13.8-1.9 8 2 16.3 9.1 20 7.7 4 17.5 1.8 22.7-5.4 5.1-7.1 4.3-16.9-1.8-23.1l24-49.1c1.5.1 3.7.2 6.2-.5 4.1-.9 7.1-3.6 7.1-3.6 4.2 1.8 8.6 3.8 13.2 6.1 4.8 2.4 9.3 4.9 13.4 7.3.9.5 1.8 1.1 2.8 1.9 1.6 1.3 3.4 3.1 4.7 5.5 1.9 5.5-1.9 14.9-1.9 14.9-2.3 7.6-18.4 40.6-18.4 40.6-8.1-.2-15.3 5-17.7 12.5-2.6 8.1 1.1 17.3 8.9 21.3 7.8 4 17.4 1.7 22.5-5.3 5-6.8 4.6-16.3-1.1-22.6 1.9-3.7 3.7-7.4 5.6-11.3 5-10.4 13.5-30.4 13.5-30.4.9-1.7 5.7-10.3 2.7-21.3-2.5-11.4-12.6-16.7-12.6-16.7-12.2-7.9-29.2-15.2-29.2-15.2s0-4.1-1.1-7.1c-1.1-3.1-2.8-5.1-3.9-6.3 4.7-9.7 9.4-19.3 14.1-29-4.1-2-8.1-4-12.2-6.1-4.8 9.8-9.7 19.7-14.5 29.5-6.7-.1-12.9 3.5-16.1 9.4-3.4 6.3-2.7 14.1 1.9 19.8l-24.6 50.4z\"\n        style={{\n          fill: 'currentColor',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default GiteaIcon;\n","import { BaseEdge } from '@patternfly/react-topology';\nimport { observable, makeObservable } from 'mobx';\nimport { K8sResourceKind, K8sResourceKindReference } from '@console/internal/module/k8s';\nimport { OdcEdgeModel } from '../topology-types';\n\nclass OdcBaseEdge extends BaseEdge {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind;\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcEdgeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseEdge;\n","export * from './components';\nexport { default as Topology } from './Topology';\n","import * as React from 'react';\nimport { useUserSettingsCompatibility } from '@console/shared';\nimport { TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY } from '../redux/const';\nimport { DisplayFilters } from '../topology-types';\nimport { DEFAULT_TOPOLOGY_FILTERS } from './const';\n\nconst TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY = `devconsole.topology.filters`;\n\nconst getTopologyFilters = (appliedFilters: AppliedFilters) => {\n  const filters = [...DEFAULT_TOPOLOGY_FILTERS];\n  filters.forEach((filter) => {\n    if (appliedFilters[filter.id] !== undefined) {\n      filter.value = appliedFilters[filter.id];\n    }\n  });\n\n  return filters;\n};\n\nconst getAppliedFilters = (filters: DisplayFilters): { [id: string]: boolean } => {\n  if (!filters?.length) {\n    return {};\n  }\n\n  return filters.reduce((acc, filter) => {\n    acc[filter.id] = filter.value;\n    return acc;\n  }, {});\n};\n\ntype AppliedFilters = { [filterKey: string]: boolean };\ntype SetTopologyFilters = (filters: DisplayFilters) => void;\n\nconst useFilterContextValues = (): [\n  DisplayFilters,\n  AppliedFilters,\n  boolean,\n  SetTopologyFilters,\n] => {\n  const [appliedFilters, setAppliedFilters, appliedFiltersLoaded] = useUserSettingsCompatibility(\n    TOPOLOGY_DISPLAY_FILTERS_USER_SETTINGS_KEY,\n    TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY,\n    getAppliedFilters(DEFAULT_TOPOLOGY_FILTERS),\n  );\n  const [filtersLoaded, setFiltersLoaded] = React.useState<boolean>(false);\n  const [filters, setFilters] = React.useState<DisplayFilters>([]);\n\n  React.useEffect(() => {\n    if (appliedFiltersLoaded && !filtersLoaded) {\n      setFilters(getTopologyFilters(appliedFilters));\n      setFiltersLoaded(true);\n    }\n  }, [appliedFilters, appliedFiltersLoaded, filtersLoaded]);\n\n  const setTopologyFilters = React.useCallback(\n    (displayFilters: DisplayFilters) => {\n      setFilters(displayFilters);\n      setAppliedFilters(getAppliedFilters(displayFilters));\n    },\n    [setAppliedFilters],\n  );\n\n  return [filters, appliedFilters, appliedFilters && filtersLoaded, setTopologyFilters];\n};\n\ntype FilterContextType = {\n  filters?: DisplayFilters;\n  appliedFilters?: AppliedFilters;\n  setTopologyFilters?: SetTopologyFilters;\n};\n\nexport const FilterContext = React.createContext<FilterContextType>({});\n\nexport const FilterProvider: React.FC = ({ children }) => {\n  const [filters, appliedFilters, loaded, setTopologyFilters] = useFilterContextValues();\n  return (\n    <FilterContext.Provider value={{ filters, appliedFilters, setTopologyFilters }}>\n      {loaded ? children : null}\n    </FilterContext.Provider>\n  );\n};\n","export * from './edgeActions';\nexport * from './nodeActions';\nexport * from './modify-application';\nexport * from './contextMenuActions';\nexport * from './provider';\n","import { ScaleDetailsLevel, useVisualizationController } from '@patternfly/react-topology';\nimport { SHOW_LABELS_FILTER_ID } from './const';\nimport { getFilterById } from './filter-utils';\nimport { useDisplayFilters } from './useDisplayFilters';\n\nconst useShowLabel = (hover: boolean): boolean => {\n  const displayFilters = useDisplayFilters();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const showLabelsFilter = getFilterById(SHOW_LABELS_FILTER_ID, displayFilters);\n\n  return hover || (detailsLevel === ScaleDetailsLevel.high && showLabelsFilter?.value);\n};\n\nexport { useShowLabel };\n","import { get } from 'lodash';\nimport { kindToAbbr, modelFor } from '@console/internal/module/k8s';\n\nexport const getKindStringAndAbbreviation = (\n  kind: string,\n): { kindStr: string; kindAbbr: string; kindColor: string } => {\n  const kindObj = modelFor(kind);\n  const kindStr = get(kindObj, 'kind', kind);\n  const kindColor = get(kindObj, 'color', undefined);\n  const kindAbbr = (kindObj && kindObj.abbr) || kindToAbbr(kindStr);\n  return { kindStr, kindAbbr, kindColor };\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DetailsItem, ResourceSummary, Timestamp } from '@console/internal/components/utils';\nimport { CronJobModel } from '@console/internal/models';\nimport { CronJobKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype CronJobSideBarDetailsProps = {\n  cronjob: CronJobKind;\n};\n\nconst CronJobSideBarDetails: React.FC<CronJobSideBarDetailsProps> = ({ cronjob }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={cronjob.metadata.uid} obj={cronjob} path=\"\" />\n      </div>\n      <ResourceSummary resource={cronjob} showPodSelector>\n        <DetailsItem label={t('topology~Schedule')} obj={cronjob} path=\"spec.schedule\" />\n        <DetailsItem\n          label={t('topology~Concurrency policy')}\n          obj={cronjob}\n          path=\"spec.concurrencyPolicy\"\n        />\n        <DetailsItem\n          label={t('topology~Starting deadline seconds')}\n          obj={cronjob}\n          path=\"spec.startingDeadlineSeconds\"\n        >\n          {cronjob.spec.startingDeadlineSeconds\n            ? t('topology~second', { count: cronjob.spec.startingDeadlineSeconds })\n            : t('topology~Not configured')}\n        </DetailsItem>\n        <DetailsItem\n          label={t('topology~Last schedule time')}\n          obj={cronjob}\n          path=\"status.lastScheduleTime\"\n        >\n          <Timestamp timestamp={cronjob.status.lastScheduleTime} />\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useCronJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<CronJobKind>(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <CronJobSideBarDetails cronjob={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DaemonSetDetailsList } from '@console/internal/components/daemon-set';\nimport { ResourceSummary, StatusBox } from '@console/internal/components/utils';\nimport { DaemonSetModel } from '@console/internal/models';\nimport { DaemonSetKind } from '@console/internal/module/k8s';\nimport { PodRing, usePodsWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\n\ntype DaemonSetOverviewDetailsProps = {\n  ds: DaemonSetKind;\n};\n\nconst DaemonSetSideBarDetails: React.FC<DaemonSetOverviewDetailsProps> = ({ ds }) => {\n  const { namespace } = ds.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(ds, 'DaemonSet', namespace);\n\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRing\n            pods={podData?.pods ?? []}\n            resourceKind={DaemonSetModel}\n            obj={ds}\n            enableScaling={false}\n          />\n        </StatusBox>\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={ds} showPodSelector showNodeSelector showTolerations />\n      </div>\n      <div className=\"resource-overview__details\">\n        <DaemonSetDetailsList ds={ds} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDaemonSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DaemonSetKind>(element);\n  if (!resource || resource.kind !== DaemonSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DaemonSetSideBarDetails ds={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentConfigDetailsList } from '@console/internal/components/deployment-config';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentConfigSideBarDetailsProps = {\n  dc: K8sResourceKind;\n};\n\nconst DeploymentConfigSideBarDetails: React.FC<DeploymentConfigSideBarDetailsProps> = ({ dc }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {dc.status.availableReplicas === dc.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentConfigDetailsList dc={dc} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentConfigSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== DeploymentConfigModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentConfigSideBarDetails dc={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { DeploymentDetailsList } from '@console/internal/components/deployment';\nimport {\n  LoadingInline,\n  ResourceSummary,\n  WorkloadPausedAlert,\n} from '@console/internal/components/utils';\nimport { DeploymentModel } from '@console/internal/models';\nimport { DeploymentKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype DeploymentSideBarDetailsProps = {\n  deployment: DeploymentKind;\n};\n\nconst DeploymentSideBarDetails: React.FC<DeploymentSideBarDetailsProps> = ({ deployment: d }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      {d.spec.paused && <WorkloadPausedAlert obj={d} model={DeploymentModel} />}\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={d.metadata.uid} obj={d} path=\"/spec/replicas\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <ResourceSummary resource={d} showPodSelector showNodeSelector showTolerations>\n          <dt>{t('topology~Status')}</dt>\n          <dd>\n            {d.status.availableReplicas === d.status.updatedReplicas ? (\n              t('topology~Active')\n            ) : (\n              <div>\n                <span className=\"co-icon-space-r\">\n                  <LoadingInline />\n                </span>{' '}\n                {t('topology~Updating')}\n              </div>\n            )}\n          </dd>\n        </ResourceSummary>\n      </div>\n      <div className=\"resource-overview__details\">\n        <DeploymentDetailsList deployment={d} />\n      </div>\n    </div>\n  );\n};\n\nexport const useDeploymentSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource<DeploymentKind>(element);\n  if (!resource || resource.kind !== DeploymentModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <DeploymentSideBarDetails deployment={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport {\n  DetailsItem,\n  ResourceSummary,\n  StatusBox,\n  pluralize,\n} from '@console/internal/components/utils';\nimport { JobModel } from '@console/internal/models';\nimport { JobKind } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '@console/shared/src';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype JobSideBarDetailsProps = {\n  job: JobKind;\n};\n\nconst JobSideBarDetails: React.FC<JobSideBarDetailsProps> = ({ job }) => {\n  const { namespace } = job.metadata;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n  const { t } = useTranslation();\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <StatusBox loaded={loaded} data={podData} loadError={loadError}>\n          <PodRingSet key={job.metadata.uid} obj={job} path=\"\" />\n        </StatusBox>\n      </div>\n      <ResourceSummary resource={job} showPodSelector>\n        <DetailsItem label={t('topology~Desired completions')} obj={job} path=\"spec.completions\" />\n        <DetailsItem label={t('topology~Parallelism')} obj={job} path=\"spec.parallelism\" />\n        <DetailsItem\n          label={t('topology~Active deadline seconds')}\n          obj={job}\n          path=\"spec.activeDeadlineSeconds\"\n        >\n          {job.spec?.activeDeadlineSeconds\n            ? pluralize(job.spec.activeDeadlineSeconds, 'second')\n            : t('topology~Not configured')}\n        </DetailsItem>\n      </ResourceSummary>\n    </div>\n  );\n};\n\nexport const useJobSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<JobKind>(element);\n  if (!resource || resource.kind !== JobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobSideBarDetails job={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  isPodAdapter,\n  PodsAdapterDataType,\n  PodAdapter,\n  useResolvedExtensions,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport { PodKind } from '@console/internal/module/k8s';\nimport { PodsOverviewContent } from '@console/shared/src/components/pod/PodsOverview';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst PodsTabSection: React.FC<{\n  id: string;\n  podAdapter: AdapterDataType<PodsAdapterDataType<PodKind>>;\n  podAdapterExtensionResolved: boolean;\n}> = ({ id, podAdapter, podAdapterExtensionResolved }) => {\n  const [{ data: podsData, loaded: podsDataLoaded }, setPodData] = React.useState<{\n    data?: PodsAdapterDataType<PodKind>;\n    loaded: boolean;\n  }>({ loaded: false });\n\n  const handleAdapterResolved = React.useCallback(\n    (data) => {\n      if (podAdapter?.resource?.kind === 'CronJob') {\n        // Fixes the issue of Topology page crashing.\n        setTimeout(() => setPodData({ data, loaded: true }), 3000);\n      } else {\n        setPodData({ data, loaded: true });\n      }\n    },\n    [podAdapter],\n  );\n\n  return podAdapter ? (\n    <TopologySideBarTabSection>\n      {podAdapterExtensionResolved && (\n        <ResolveAdapter<PodsAdapterDataType<PodKind>>\n          key={id}\n          resource={podAdapter.resource}\n          data={podAdapter.data}\n          useAdapterHook={podAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {podsDataLoaded && podsData.loaded && !podsData.loadError && (\n        <PodsOverviewContent obj={podAdapter.resource} {...podsData} />\n      )}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const usePodsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [podAdapterExtension, podAdapterExtensionResolved] = useResolvedExtensions<PodAdapter>(\n    isPodAdapter,\n  );\n  const podAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<PodsAdapterDataType<PodKind>>, PodAdapter>(element, [\n        podAdapterExtension,\n        podAdapterExtensionResolved,\n      ]),\n    [element, podAdapterExtension, podAdapterExtensionResolved],\n  );\n  if (!podAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <PodsTabSection\n      id={element.getId()}\n      podAdapter={podAdapter}\n      podAdapterExtensionResolved={podAdapterExtensionResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\ntype ResolveAdapterProps<D, T> = {\n  resource: K8sResourceCommon;\n  data?: T;\n  useAdapterHook: (resource: K8sResourceCommon, data: T) => D;\n  onAdapterDataResolved: (data: D) => void;\n};\n\nconst ResolveAdapter = <D extends {}, T = {}>({\n  resource,\n  data: customData,\n  useAdapterHook,\n  onAdapterDataResolved,\n}: ResolveAdapterProps<D, T>) => {\n  const data = useAdapterHook(resource, customData);\n\n  React.useEffect(() => {\n    if (data) {\n      onAdapterDataResolved(data);\n    }\n    // We do not want to run the effect every time onAdapterDataResolved changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return null;\n};\n\nexport default ResolveAdapter;\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { ResourceSummary } from '@console/internal/components/utils';\nimport { StatefulSetModel } from '@console/internal/models';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype StatefulSetSideBarDetailsProps = {\n  ss: K8sResourceKind;\n};\n\nconst StatefulSetSideBarDetails: React.FC<StatefulSetSideBarDetailsProps> = ({ ss }) => (\n  <div className=\"overview__sidebar-pane-body resource-overview__body\">\n    <div className=\"resource-overview__pod-counts\">\n      <PodRingSet key={ss.metadata.uid} obj={ss} path=\"/spec/replicas\" />\n    </div>\n    <ResourceSummary resource={ss} showPodSelector showNodeSelector showTolerations />\n  </div>\n);\n\nexport const useStatefulSetSideBarDetails: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== StatefulSetModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <StatefulSetSideBarDetails ss={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { ResourceIcon, resourcePath } from '@console/internal/components/utils';\nimport { referenceFor } from '@console/internal/module/k8s';\nimport { getResource } from '../../utils';\n\nexport const getWorkloadResourceLink = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource) {\n    return null;\n  }\n  const kindReference = referenceFor(resource);\n  return (\n    <>\n      <ResourceIcon className=\"co-m-resource-icon--lg\" kind={kindReference} />\n      <Link\n        to={resourcePath(kindReference, resource.metadata.name, resource.metadata.namespace)}\n        className=\"co-resource-item__resource-name\"\n      >\n        {resource.metadata.name}\n      </Link>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  AdapterDataType,\n  BuildAdapter,\n  isBuildAdapter,\n  useResolvedExtensions,\n} from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { BuildConfigData } from '@console/shared';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { BuildOverview } from './BuildOverview';\nimport ResolveAdapter from './ResolveAdapter';\nimport { getDataFromAdapter } from './utils';\n\nconst BuildTabSection: React.FC<{\n  id: string;\n  buildAdapter: AdapterDataType<BuildConfigData>;\n  extensionsResolved: boolean;\n}> = ({ id, buildAdapter, extensionsResolved }) => {\n  const [\n    { data: buildConfigs, loaded: buildConfigsDataLoaded },\n    setBuildConfigsData,\n  ] = React.useState<{\n    data?: BuildConfigData;\n    loaded: boolean;\n  }>({ loaded: false });\n  const handleAdapterResolved = React.useCallback((data) => {\n    setBuildConfigsData({ data, loaded: true });\n  }, []);\n\n  return buildAdapter ? (\n    <TopologySideBarTabSection>\n      {extensionsResolved && (\n        <ResolveAdapter<BuildConfigData>\n          key={id}\n          resource={buildAdapter.resource}\n          useAdapterHook={buildAdapter.provider}\n          onAdapterDataResolved={handleAdapterResolved}\n        />\n      )}\n      {buildConfigsDataLoaded && <BuildOverview buildConfigs={buildConfigs.buildConfigs} />}\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useBuildsSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [buildAdapterExtensions, extensionsResolved] = useResolvedExtensions<BuildAdapter>(\n    isBuildAdapter,\n  );\n  const buildAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<AdapterDataType<BuildConfigData>, BuildAdapter>(element, [\n        buildAdapterExtensions,\n        extensionsResolved,\n      ]),\n    [buildAdapterExtensions, element, extensionsResolved],\n  );\n  if (!buildAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = (\n    <BuildTabSection\n      id={element.getId()}\n      buildAdapter={buildAdapter}\n      extensionsResolved={extensionsResolved}\n    />\n  );\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport {\n  isNetworkAdapter,\n  useResolvedExtensions,\n  NetworkAdapter,\n  K8sResourceCommon,\n  DetailsTabSectionExtensionHook,\n} from '@console/dynamic-plugin-sdk';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { NetworkingOverview } from './NetworkingOverview';\nimport { getDataFromAdapter } from './utils';\n\nconst NetworkTabSection: React.FC<{\n  networkAdapter: {\n    resource: K8sResourceCommon;\n  };\n}> = ({ networkAdapter }) => {\n  return networkAdapter ? (\n    <TopologySideBarTabSection>\n      <NetworkingOverview obj={networkAdapter.resource} />\n    </TopologySideBarTabSection>\n  ) : null;\n};\n\nexport const useNetworkingSideBarTabSection: DetailsTabSectionExtensionHook = (\n  element: GraphElement,\n) => {\n  const [networkAdapterExtensions, extensionsLoaded] = useResolvedExtensions<NetworkAdapter>(\n    isNetworkAdapter,\n  );\n  const networkAdapter = React.useMemo(\n    () =>\n      getDataFromAdapter<{ resource: K8sResourceCommon }, NetworkAdapter>(element, [\n        networkAdapterExtensions,\n        extensionsLoaded,\n      ]),\n    [element, extensionsLoaded, networkAdapterExtensions],\n  );\n  if (!networkAdapter) {\n    return [undefined, true, undefined];\n  }\n  const section = <NetworkTabSection networkAdapter={networkAdapter} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { CronJobModel } from '@console/internal/models';\nimport { useJobsForCronJobWatcher } from '@console/shared';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\nimport { JobsOverview } from './JobsOverview';\n\nconst JobsTabSection: React.FC<{ resource: K8sResourceCommon }> = ({ resource }) => {\n  const { jobs } = useJobsForCronJobWatcher(resource);\n  return (\n    <TopologySideBarTabSection>\n      <JobsOverview obj={resource} jobs={jobs} />\n    </TopologySideBarTabSection>\n  );\n};\n\nexport const useJobsSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource(element);\n  if (!resource || resource.kind !== CronJobModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <JobsTabSection resource={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk/src/extensions/topology-details';\nimport { PodDetailsList, PodResourceSummary } from '@console/internal/components/pod';\nimport { PodModel } from '@console/internal/models';\nimport { PodKind } from '@console/internal/module/k8s';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { getResource } from '../../utils';\n\ntype PodSideBarDetailsProps = {\n  pod: PodKind;\n};\n\nconst PodSideBarDetails: React.FC<PodSideBarDetailsProps> = ({ pod }) => {\n  return (\n    <div className=\"overview__sidebar-pane-body resource-overview__body\">\n      <div className=\"resource-overview__pod-counts\">\n        <PodRingSet key={pod.metadata.uid} obj={pod} path=\"\" />\n      </div>\n      <div className=\"resource-overview__summary\">\n        <PodResourceSummary pod={pod} />\n      </div>\n      <div className=\"resource-overview__details\">\n        <PodDetailsList pod={pod} />\n      </div>\n    </div>\n  );\n};\n\nexport const usePodSideBarDetails: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const resource = getResource<PodKind>(element);\n  if (!resource || resource.kind !== PodModel.kind) {\n    return [undefined, true, undefined];\n  }\n  const section = <PodSideBarDetails pod={resource} />;\n  return [section, true, undefined];\n};\n","import * as React from 'react';\nimport { AlertActionLink } from '@patternfly/react-core';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { CommonActionFactory } from '@console/app/src/actions/creators/common-factory';\nimport { DeploymentActionFactory } from '@console/app/src/actions/creators/deployment-factory';\nimport { Action, DetailsResourceAlertContent, useAccessReview } from '@console/dynamic-plugin-sdk';\nimport {\n  DaemonSetModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  StatefulSetModel,\n} from '@console/internal/models';\nimport {\n  K8sResourceCondition,\n  modelFor,\n  referenceFor,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceModel as KnativeServiceModel } from '@console/knative-plugin';\nimport { useTelemetry } from '@console/shared/src/hooks/useTelemetry';\nimport { getResource } from '../../utils';\n\nconst addHealthChecksRefs = [\n  referenceForModel(DeploymentConfigModel),\n  referenceForModel(DeploymentModel),\n  referenceForModel(DaemonSetModel),\n  referenceForModel(StatefulSetModel),\n  referenceForModel(KnativeServiceModel),\n];\n\nexport const useHealthChecksAlert = (element: GraphElement): DetailsResourceAlertContent | null => {\n  const resource = getResource(element);\n  const kind = resource?.kind;\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n  const { t } = useTranslation();\n  const kindForCRDResource = resource ? referenceFor(resource) : undefined;\n  const resourceModel = kindForCRDResource ? modelFor(kindForCRDResource) : undefined;\n  const resourceKind = resourceModel?.crd ? kindForCRDResource : kind;\n\n  const [canAddHealthChecks, canAddHealthChecksLoading] = useAccessReview({\n    group: resourceModel?.apiGroup,\n    resource: resourceModel?.plural,\n    namespace,\n    name,\n    verb: 'update',\n  });\n\n  if (!resource || !addHealthChecksRefs.includes(referenceFor(resource))) {\n    return null;\n  }\n\n  const containers = resource?.spec?.template?.spec?.containers;\n  const containersName = containers?.map((container) => container.name);\n  const healthCheckAdded = containers?.every(\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n\n  const showAlert = !healthCheckAdded && canAddHealthChecks && !canAddHealthChecksLoading;\n\n  const addHealthChecksLink = `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containersName[0]}/health-checks`;\n\n  const alertMessage =\n    containersName?.length > 1\n      ? t(\n          'topology~Not all Containers have health checks to ensure your application is running correctly.',\n        )\n      : t(\n          'topology~Container {{containersName}} does not have health checks to ensure your application is running correctly.',\n          { containersName },\n        );\n\n  return showAlert\n    ? {\n        title: t('topology~Health checks'),\n        dismissible: true,\n        content: (\n          <>\n            {alertMessage} <Link to={addHealthChecksLink}>{t('topology~Add health checks')}</Link>\n          </>\n        ),\n        variant: 'custom',\n      }\n    : null;\n};\n\nexport const useResourceQuotaAlert = (element: GraphElement): DetailsResourceAlertContent => {\n  const { t } = useTranslation();\n  const fireTelemetryEvent = useTelemetry();\n  const resource = getResource(element);\n  const name = resource?.metadata?.name;\n  const namespace = resource?.metadata?.namespace;\n\n  const [canUseAlertAction, canUseAlertActionLoading] = useAccessReview({\n    group: DeploymentModel.apiGroup,\n    resource: DeploymentModel.plural,\n    namespace,\n    name,\n    verb: 'patch',\n  });\n\n  if (!resource || referenceForModel(DeploymentModel) !== referenceFor(resource)) return null;\n\n  const statusConditions: K8sResourceCondition[] = resource.status?.conditions ?? [];\n  const replicaFailure = statusConditions.find((condition) => condition.type === 'ReplicaFailure');\n  const replicaFailureMsg: string = replicaFailure?.message ?? '';\n  const resourceQuotaRequested = replicaFailureMsg.split(':')?.[3] ?? '';\n\n  let alertAction: Action;\n  if (resourceQuotaRequested.includes('limits')) {\n    alertAction = DeploymentActionFactory.EditResourceLimits(DeploymentModel, resource);\n  } else if (resourceQuotaRequested.includes('pods')) {\n    alertAction = CommonActionFactory.ModifyCount(DeploymentModel, resource);\n  }\n\n  const showAlertActionLink = alertAction && canUseAlertAction && !canUseAlertActionLoading;\n\n  const alertActionCta = alertAction?.cta as () => void;\n\n  const onAlertActionClick = () => {\n    fireTelemetryEvent('Resource Quota Warning Alert Action Link Clicked');\n    alertActionCta();\n  };\n\n  const alertActionLink = showAlertActionLink ? (\n    <AlertActionLink onClick={onAlertActionClick}>{alertAction.label as string}</AlertActionLink>\n  ) : undefined;\n\n  return replicaFailure\n    ? {\n        title: t('topology~Resource Quotas'),\n        dismissible: true,\n        content: replicaFailureMsg,\n        actionLinks: alertActionLink,\n        variant: 'warning',\n      }\n    : null;\n};\n","import * as React from 'react';\nimport { GraphElement } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsTabSectionExtensionHook } from '@console/dynamic-plugin-sdk';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { K8sResourceCommon } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\nimport { TYPE_WORKLOAD } from '@console/topology/src/const';\nimport { getResource } from '../../utils';\nimport TopologySideBarTabSection from '../side-bar/TopologySideBarTabSection';\n\ntype VPATabSectionProps = {\n  vpas: K8sResourceCommon[];\n};\n\nconst VPATabSection: React.FC<VPATabSectionProps> = ({ vpas }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~VerticalPodAutoscalers')} />\n      <ul className=\"list-group\">\n        {vpas.map((vpa: K8sResourceCommon) => (\n          <li key={vpa.metadata.name} className=\"list-group-item\">\n            <ResourceLink\n              groupVersionKind={getGroupVersionKindForResource(vpa)}\n              name={vpa.metadata.name}\n              namespace={vpa.metadata.namespace}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport const useVpaSideBarTabSection: DetailsTabSectionExtensionHook = (element: GraphElement) => {\n  const [vpas] = useK8sWatchResource<K8sResourceCommon[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    isList: true,\n    namespaced: true,\n  });\n\n  if (element.getType() !== TYPE_WORKLOAD) {\n    return [undefined, true, undefined];\n  }\n\n  const resource = getResource(element);\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, resource);\n\n  const section =\n    verticalPodAutoscalers.length > 0 ? (\n      <TopologySideBarTabSection>\n        <VPATabSection vpas={verticalPodAutoscalers} />\n      </TopologySideBarTabSection>\n    ) : undefined;\n  return [section, true, undefined];\n};\n","import { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\n\nexport const KAFKA_WIDTH = NODE_WIDTH;\nexport const KAFKA_HEIGHT = NODE_HEIGHT;\nexport const KAFKA_PADDING = NODE_PADDING;\n\nexport const TYPE_MANAGED_KAFKA_CONNECTION = 'KafkaConnection';\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { resourcePathFromModel } from '@console/internal/components/utils';\nimport { BuildModel } from '@console/internal/models';\nimport { Status, useBuildConfigsWatcher } from '@console/shared';\nimport { getResource } from '../../../../../utils';\nimport BuildDecoratorBubble from './BuildDecoratorBubble';\n\ninterface BuildDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst BuildDecorator: React.FC<BuildDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const build = buildConfigs?.[0]?.builds?.[0];\n\n  if (!build) {\n    return null;\n  }\n\n  const label = t('topology~Build {{status}}', { status: build.status?.phase });\n\n  const link = `${resourcePathFromModel(\n    BuildModel,\n    build.metadata.name,\n    build.metadata.namespace,\n  )}/logs`;\n\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <BuildDecoratorBubble x={x} y={y} radius={radius} ariaLabel={label} href={link}>\n          <Status status={build.status.phase} iconOnly noTooltip />\n        </BuildDecoratorBubble>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default BuildDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { routeDecoratorIcon } from '@console/dev-console/src/components/import/render-utils';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ConsoleLinkModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceForModel } from '@console/internal/module/k8s';\nimport { getCheDecoratorData, getEditURL } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst EditDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const [consoleLinks] = useK8sWatchResource<K8sResourceKind[]>({\n    isList: true,\n    kind: referenceForModel(ConsoleLinkModel),\n    optional: true,\n  });\n  const { cheURL, cheIconURL } = getCheDecoratorData(consoleLinks);\n  const workloadData = element.getData().data;\n  const { editURL, vcsURI, vcsRef, contextDir } = workloadData;\n  const cheEnabled = !!cheURL;\n  const editUrl = editURL || getEditURL(vcsURI, vcsRef, cheURL, contextDir);\n  const repoIcon = routeDecoratorIcon(editUrl, radius, t, cheEnabled, cheIconURL);\n\n  if (!repoIcon) {\n    return null;\n  }\n  const label = t('topology~Edit source code');\n  return (\n    <Tooltip triggerRef={ref} content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={editUrl} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>{repoIcon}</g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default EditDecorator;\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { Node, SELECTION_EVENT } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { selectOverviewDetailsTab } from '@console/internal/actions/ui';\nimport {\n  getSeverityAlertType,\n  getFiringAlerts,\n  AlertSeverityIcon,\n  shouldHideMonitoringAlertDecorator,\n} from '@console/shared';\nimport Decorator from './Decorator';\n\ntype DispatchProps = {\n  showMonitoringOverview?: () => void;\n};\n\nconst dispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  showMonitoringOverview: () => dispatch(selectOverviewDetailsTab('Observe')),\n});\n\ninterface MonitoringAlertsDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\ntype MonitoringAlertsDecoratorType = MonitoringAlertsDecoratorProps & DispatchProps;\n\nconst MonitoringAlertsDecorator: React.FC<MonitoringAlertsDecoratorType> = ({\n  element,\n  radius,\n  x,\n  y,\n  showMonitoringOverview,\n}) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const workloadData = element.getData().data;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n\n  const showSidebar = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showMonitoringOverview();\n    element.getGraph().getController().fireEvent(SELECTION_EVENT, [element.getId()]);\n  };\n\n  if (shouldHideMonitoringAlertDecorator(severityAlertType)) return null;\n\n  const label = t('topology~Monitoring alert');\n  return (\n    <Tooltip triggerRef={ref} key=\"monitoringAlert\" content={label} position={TooltipPosition.left}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} onClick={showSidebar} ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <AlertSeverityIcon severityAlertType={severityAlertType} fontSize={radius} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default connect<null, DispatchProps, MonitoringAlertsDecoratorProps>(\n  null,\n  dispatchToProps,\n)(MonitoringAlertsDecorator);\n","import * as React from 'react';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Node } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { useRoutesURL } from '../../../../../data-transforms/useRoutesURL';\nimport { getResource } from '../../../../../utils';\nimport Decorator from './Decorator';\n\ninterface DefaultDecoratorProps {\n  element: Node;\n  radius: number;\n  x: number;\n  y: number;\n}\n\nconst UrlDecorator: React.FC<DefaultDecoratorProps> = ({ element, radius, x, y }) => {\n  const ref = React.useRef();\n  const { t } = useTranslation();\n  const resourceObj = getResource(element);\n  const url = useRoutesURL(resourceObj);\n  if (!url) {\n    return null;\n  }\n  const label = t('topology~Open URL');\n  return (\n    <Tooltip triggerRef={ref} key=\"route\" content={label} position={TooltipPosition.right}>\n      <g ref={ref}>\n        <Decorator x={x} y={y} radius={radius} href={url} external ariaLabel={label}>\n          <g transform={`translate(-${radius / 2}, -${radius / 2})`}>\n            <ExternalLinkAltIcon style={{ fontSize: radius }} title={label} />\n          </g>\n        </Decorator>\n      </g>\n    </Tooltip>\n  );\n};\n\nexport default UrlDecorator;\n","import i18next from 'i18next';\nimport { Action } from '@console/dynamic-plugin-sdk';\nimport { k8sPatchResource } from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { configureUpdateStrategyModal, errorModal } from '@console/internal/components/modals';\nimport { togglePaused, asAccessReview, resourceObjPath } from '@console/internal/components/utils';\nimport { DeploymentConfigModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  K8sKind,\n  k8sCreate,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { ServiceBindingModel } from '@console/service-binding-plugin/src/models';\nimport { resourceLimitsModal } from '../../components/modals/resource-limits';\nimport { serviceBindingModal } from '../../components/modals/service-binding';\nimport { ResourceActionFactory } from './common-factory';\n\nconst deploymentConfigRollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst restartRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [];\n  if (!('annotations' in obj.spec.template.metadata)) {\n    patch.push({\n      path: '/spec/template/metadata/annotations',\n      op: 'add',\n      value: {},\n    });\n  }\n  patch.push({\n    path: '/spec/template/metadata/annotations/openshift.openshift.io~1restartedAt',\n    op: 'add',\n    value: new Date(),\n  });\n\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const retryRollout = (model: K8sKind, obj: K8sResourceKind) => {\n  const patch = [\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.phase',\n      op: 'replace',\n      value: 'New',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'add',\n      value: '',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.cancelled',\n      op: 'remove',\n    },\n    {\n      path: '/metadata/annotations/openshift.io~1deployment.status-reason',\n      op: 'remove',\n    },\n  ];\n  return k8sPatchResource({\n    model,\n    resource: obj,\n    data: patch,\n  });\n};\n\nexport const DeploymentActionFactory: ResourceActionFactory = {\n  EditDeployment: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: `edit-deployment`,\n    label: i18next.t('console-app~Edit {{kind}}', { kind: kind.kind }),\n    cta: {\n      href: `${resourceObjPath(obj, kind.crd ? referenceForModel(kind) : kind.kind)}/form`,\n    },\n    // TODO: Fallback to \"View YAML\"? We might want a similar fallback for annotations, labels, etc.\n    accessReview: asAccessReview(kind, obj, 'update'),\n  }),\n  UpdateStrategy: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-update-strategy',\n    label: i18next.t('console-app~Edit update strategy'),\n    cta: () => configureUpdateStrategyModal({ deployment: obj }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  PauseRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'pause-rollout',\n    label: obj.spec.paused\n      ? i18next.t('console-app~Resume rollouts')\n      : i18next.t('console-app~Pause rollouts'),\n    cta: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  RestartRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'restart-rollout',\n    label: i18next.t('console-app~Restart rollout'),\n    cta: () => restartRollout(kind, obj).catch((err) => errorModal({ error: err.message })),\n    disabled: obj.spec.paused || false,\n    disabledTooltip: 'The deployment is paused and cannot be restarted.',\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  StartDCRollout: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'start-rollout',\n    label: i18next.t('console-app~Start rollout'),\n    cta: () =>\n      deploymentConfigRollout(obj).catch((err) => {\n        const error = err.message;\n        errorModal({ error });\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      subresource: 'instantiate',\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'create',\n    },\n  }),\n  EditResourceLimits: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'edit-resource-limits',\n    label: i18next.t('console-app~Edit resource limits'),\n    cta: () =>\n      resourceLimitsModal({\n        model: kind,\n        resource: obj,\n      }),\n    accessReview: {\n      group: kind.apiGroup,\n      resource: kind.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'patch',\n    },\n  }),\n  CreateServiceBinding: (kind: K8sKind, obj: K8sResourceKind): Action => ({\n    id: 'create-service-binding',\n    label: i18next.t('console-app~Create Service Binding'),\n    cta: () =>\n      serviceBindingModal({\n        model: kind,\n        source: obj,\n      }),\n    accessReview: asAccessReview(ServiceBindingModel, obj, 'create'),\n  }),\n};\n","import * as _ from 'lodash';\nimport { Kebab, KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor, referenceFor } from '@console/internal/module/k8s';\n\nexport const nodeActions = (contextMenuResource: K8sResourceKind): KebabOption[] => {\n  if (!contextMenuResource) {\n    return null;\n  }\n  const resourceKind = modelFor(referenceFor(contextMenuResource));\n  const menuActions = [...Kebab.getExtensionsActionsForKind(resourceKind), ...Kebab.factory.common];\n\n  return _.map(menuActions, (a) => a(resourceKind, contextMenuResource));\n};\n","import * as React from 'react';\nimport { useCallbackRef } from '@patternfly/react-topology';\n\n//\n// Local version of the @patternfly/react-topology useHover\n// Updated to provide the capability to reset the hover state based on a dependency change\n//\n\nconst EMPTY: any[] = [];\n\nconst useHover = <T extends Element>(\n  delayIn: number = 200,\n  delayOut: number = 200,\n  dependencies: any[] = EMPTY,\n): [boolean, (node: T) => (() => void) | undefined] => {\n  const [hover, setHover] = React.useState<boolean>(false);\n  const mountRef = React.useRef(true);\n\n  // need to ensure we do not start the unset timer on unmount\n  React.useEffect(\n    () => () => {\n      mountRef.current = false;\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    setHover(false);\n    // dynamic dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  // The unset handle needs to be referred by listeners in different closures.\n  const unsetHandle = React.useRef<number>();\n\n  const callbackRef = useCallbackRef(\n    React.useCallback(\n      (node: T) => {\n        if (node) {\n          // store locally instead of a ref because it only needs to be referred by inner closures\n          let delayHandle: any;\n\n          const delayedStateChange = (newState: boolean, delay: number) => {\n            clearTimeout(unsetHandle.current);\n            clearTimeout(delayHandle);\n\n            if (delay != null) {\n              delayHandle = window.setTimeout(() => {\n                clearTimeout(unsetHandle.current);\n                setHover(newState);\n              }, delay);\n            } else {\n              setHover(newState);\n            }\n          };\n\n          const onMouseEnter = () => {\n            delayedStateChange(true, delayIn);\n          };\n\n          const onMouseLeave = () => {\n            delayedStateChange(false, delayOut);\n          };\n\n          node.addEventListener('mouseenter', onMouseEnter);\n          node.addEventListener('mouseleave', onMouseLeave);\n\n          return () => {\n            node.removeEventListener('mouseenter', onMouseEnter);\n            node.removeEventListener('mouseleave', onMouseLeave);\n            clearTimeout(delayHandle);\n            if (mountRef.current) {\n              // Queue the unset in case reattaching to a new node in the same location.\n              // This can happen with layers. Rendering a node to a new layer will unmount the old node\n              // and remount a new node at the same location. This will prevent flickering and getting\n              // stuck in a hover state.\n              unsetHandle.current = window.setTimeout(() => {\n                if (mountRef.current) {\n                  setHover(false);\n                }\n              }, Math.max(delayIn, delayOut));\n            }\n          };\n        }\n        return undefined;\n      },\n      [delayIn, delayOut],\n    ),\n  );\n\n  return [hover, callbackRef];\n};\n\nexport default useHover;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  hullPath,\n  DefaultCreateConnector,\n  Point,\n  Layer,\n  ContextMenu,\n  ContextMenuItem,\n  AnchorEnd,\n  Graph,\n  GraphElement,\n  isGraph,\n  isNode,\n  LabelPosition,\n  Node,\n  DragEvent,\n  DragObjectWithType,\n  DragOperationWithType,\n  DragSourceMonitor,\n  DragSourceSpec,\n  DragSpecOperationType,\n  useDndDrag,\n  TOP_LAYER,\n  useCombineRefs,\n  useHover,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { observer } from 'mobx-react';\n\n//\n// Local version of the @patternfly/react-topology withCreateConnector\n// Updated to notify the wrapped component when the create connector is being dragged\n//\n\nexport const CREATE_CONNECTOR_OPERATION = '#createconnector#';\nexport const CREATE_CONNECTOR_DROP_TYPE = '#createConnector#';\n\nexport interface ConnectorChoice {\n  label: string;\n}\n\nexport interface CreateConnectorOptions {\n  handleAngle?: number;\n  handleAngleTop?: number;\n  handleLength?: number;\n  dragItem?: DragObjectWithType;\n  dragOperation?: DragOperationWithType;\n  hideConnectorMenu?: boolean;\n}\n\ninterface ConnectorComponentProps {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging: boolean;\n  hover?: boolean;\n}\n\ntype CreateConnectorRenderer = React.ComponentType<ConnectorComponentProps>;\n\ntype OnCreateResult = ConnectorChoice[] | void | undefined | null | React.ReactElement[];\n\ntype CreateConnectorWidgetProps = {\n  element: Node;\n  onKeepAlive: (isAlive: boolean) => void;\n  onCreate: (\n    element: Node,\n    target: Node | Graph,\n    event: DragEvent,\n    dropHints?: string[] | undefined,\n    choice?: ConnectorChoice,\n  ) => Promise<OnCreateResult> | OnCreateResult;\n  ConnectorComponent: CreateConnectorRenderer;\n  contextMenuClass?: string;\n} & CreateConnectorOptions;\n\ninterface CollectProps {\n  event?: DragEvent;\n  dragging: boolean;\n  hints?: string[] | undefined;\n}\n\ninterface PromptData {\n  element: Node;\n  target: Node | Graph;\n  event: DragEvent;\n  choices: ConnectorChoice[] | React.ReactElement[];\n}\n\nconst isReactElementArray = (\n  choices: ConnectorChoice[] | React.ReactElement[],\n): choices is React.ReactElement[] => React.isValidElement(choices[0]);\n\nconst DEFAULT_HANDLE_ANGLE = Math.PI / 180;\nconst DEFAULT_HANDLE_ANGLE_TOP = 1.5 * Math.PI;\nconst DEFAULT_HANDLE_LENGTH = 32;\n\nconst CreateConnectorWidget: React.FunctionComponent<CreateConnectorWidgetProps> = observer(\n  (props) => {\n    const {\n      element,\n      onKeepAlive,\n      onCreate,\n      ConnectorComponent,\n      handleAngle = DEFAULT_HANDLE_ANGLE,\n      handleAngleTop = DEFAULT_HANDLE_ANGLE_TOP,\n      handleLength = DEFAULT_HANDLE_LENGTH,\n      contextMenuClass,\n      dragItem,\n      dragOperation,\n      hideConnectorMenu,\n    } = props;\n    const [prompt, setPrompt] = React.useState<PromptData | null>(null);\n    const [active, setActive] = React.useState(false);\n    const hintsRef = React.useRef<string[] | undefined>();\n\n    const spec = React.useMemo(() => {\n      const dragSourceSpec: DragSourceSpec<\n        DragObjectWithType,\n        DragSpecOperationType<DragOperationWithType>,\n        GraphElement,\n        CollectProps,\n        CreateConnectorWidgetProps\n      > = {\n        item: dragItem || { type: CREATE_CONNECTOR_DROP_TYPE },\n        operation: dragOperation || { type: CREATE_CONNECTOR_OPERATION },\n        begin: (monitor: DragSourceMonitor, dragProps: any) => {\n          setActive(true);\n          return dragProps.element;\n        },\n        drag: (event: DragEvent, monitor: DragSourceMonitor, p: CreateConnectorWidgetProps) => {\n          p.element.raise();\n        },\n        end: async (\n          dropResult: GraphElement,\n          monitor: DragSourceMonitor,\n          dragProps: CreateConnectorWidgetProps,\n        ) => {\n          const event = monitor.getDragEvent();\n          if ((isNode(dropResult) || isGraph(dropResult)) && event) {\n            const choices = await dragProps.onCreate(\n              dragProps.element,\n              dropResult,\n              event,\n              monitor.getDropHints(),\n            );\n            if (choices && choices.length && !hideConnectorMenu) {\n              setPrompt({ element: dragProps.element, target: dropResult, event, choices });\n              return;\n            }\n          }\n          setActive(false);\n          dragProps.onKeepAlive(false);\n        },\n        collect: (monitor) => ({\n          dragging: !!monitor.getItem(),\n          event: monitor.isDragging() ? monitor.getDragEvent() : undefined,\n          hints: monitor.getDropHints(),\n        }),\n      };\n      return dragSourceSpec;\n    }, [setActive, dragItem, dragOperation, hideConnectorMenu]);\n    const [{ dragging, event, hints }, dragRef] = useDndDrag(spec, props);\n    const [hover, hoverRef] = useHover();\n    const refs = useCombineRefs(dragRef, hoverRef);\n\n    if (!active && dragging && !event) {\n      // another connector is dragging right now\n      return null;\n    }\n\n    if (dragging) {\n      // store the latest hints\n      hintsRef.current = hints;\n    }\n\n    const dragEvent = prompt ? prompt.event : event;\n\n    let startPoint: Point;\n    let endPoint: Point;\n\n    if (dragEvent) {\n      endPoint = new Point(dragEvent.x, dragEvent.y);\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(endPoint);\n    } else {\n      const bounds = element.getBounds();\n      const isRightLabel = element.getLabelPosition() === LabelPosition.right;\n      const referencePoint = isRightLabel\n        ? new Point(bounds.x + bounds.width / 2, bounds.y)\n        : new Point(\n            bounds.right(),\n            Math.tan(handleAngle) * (bounds.width / 2) + bounds.y + bounds.height / 2,\n          );\n      startPoint = element.getAnchor(AnchorEnd.source).getLocation(referencePoint);\n      endPoint = new Point(\n        Math.cos(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.x,\n        Math.sin(isRightLabel ? handleAngleTop : handleAngle) * handleLength + startPoint.y,\n      );\n    }\n\n    // bring into the coordinate space of the element\n    element.translateFromParent(startPoint);\n    element.translateFromParent(endPoint);\n\n    const connector = (\n      <g\n        className={css(styles.topologyDefaultCreateConnector)}\n        ref={refs}\n        onMouseEnter={!active ? () => onKeepAlive(true) : undefined}\n        onMouseLeave={!active ? () => onKeepAlive(false) : undefined}\n      >\n        <ConnectorComponent\n          startPoint={startPoint}\n          endPoint={endPoint}\n          dragging={dragging}\n          hints={hintsRef.current || []}\n          hover={hover}\n        />\n        <path\n          d={hullPath(\n            [\n              [startPoint.x, startPoint.y],\n              [endPoint.x, endPoint.y],\n            ],\n            7,\n          )}\n          fillOpacity=\"0\"\n        />\n      </g>\n    );\n\n    return (\n      <>\n        {active ? <Layer id={TOP_LAYER}>{connector}</Layer> : connector}\n        {prompt && (\n          <ContextMenu\n            reference={{ x: prompt.event.pageX, y: prompt.event.pageY }}\n            className={contextMenuClass}\n            open\n            onRequestClose={() => {\n              setActive(false);\n              onKeepAlive(false);\n            }}\n          >\n            {isReactElementArray(prompt.choices)\n              ? prompt.choices\n              : prompt.choices.map((c: ConnectorChoice) => (\n                  <ContextMenuItem\n                    key={c.label}\n                    onClick={() => {\n                      onCreate(prompt.element, prompt.target, prompt.event, hintsRef.current, c);\n                    }}\n                  >\n                    {c.label}\n                  </ContextMenuItem>\n                ))}\n          </ContextMenu>\n        )}\n      </>\n    );\n  },\n);\n\ninterface ElementProps {\n  element: Node;\n}\n\nexport interface WithCreateConnectorProps {\n  onShowCreateConnector: () => void;\n  onHideCreateConnector: () => void;\n  createConnectorDrag: boolean;\n}\n\nexport const withCreateConnector = <P extends WithCreateConnectorProps & ElementProps>(\n  onCreate: React.ComponentProps<typeof CreateConnectorWidget>['onCreate'],\n  ConnectorComponent: CreateConnectorRenderer = DefaultCreateConnector,\n  contextMenuClass?: string,\n  options?: CreateConnectorOptions,\n) => (WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FunctionComponent<Omit<P, keyof WithCreateConnectorProps>> = ({\n    children,\n    ...props\n  }) => {\n    const [show, setShow] = React.useState(false);\n    const [alive, setKeepAlive] = React.useState(false);\n    const onShowCreateConnector = React.useCallback(() => setShow(true), []);\n    const onHideCreateConnector = React.useCallback(() => setShow(false), []);\n    const onKeepAlive = React.useCallback(\n      (isAlive: boolean) => {\n        setKeepAlive((prev) => {\n          if (prev && !isAlive) {\n            onHideCreateConnector();\n          }\n          return isAlive;\n        });\n      },\n      [onHideCreateConnector],\n    );\n    return (\n      <WrappedComponent\n        {...(props as any)}\n        onShowCreateConnector={onShowCreateConnector}\n        onHideCreateConnector={onHideCreateConnector}\n        createConnectorDrag={alive}\n      >\n        {children}\n        {(show || alive) && (\n          <CreateConnectorWidget\n            {...options}\n            element={props.element}\n            onCreate={onCreate}\n            onKeepAlive={onKeepAlive}\n            ConnectorComponent={ConnectorComponent}\n            contextMenuClass={contextMenuClass}\n          />\n        )}\n      </WrappedComponent>\n    );\n  };\n  Component.displayName = `withCreateConnector(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n","import {\n  ModelKind,\n  withPanZoom,\n  withDragNode,\n  withTargetDrag,\n  withSelection,\n  withDndDrop,\n  DragObjectWithType,\n  ComponentFactory,\n} from '@patternfly/react-topology';\nimport { contextMenuActions, graphActionContext, groupActionContext } from '../../../actions';\nimport { withCreateConnector } from '../../../behavior/withCreateConnector';\nimport {\n  TYPE_WORKLOAD,\n  TYPE_CONNECTS_TO,\n  TYPE_APPLICATION_GROUP,\n  TYPE_AGGREGATE_EDGE,\n  TYPE_TRAFFIC_CONNECTOR,\n} from '../../../const';\nimport { createConnection } from '../../../utils/createConnection';\nimport { withEditReviewAccess } from '../../../utils/withEditReviewAccess';\nimport {\n  NodeComponentProps,\n  graphDropTargetSpec,\n  nodeDragSourceSpec,\n  nodeDropTargetSpec,\n  applicationGroupDropTargetSpec,\n  edgeDragSourceSpec,\n  MOVE_CONNECTOR_DROP_TYPE,\n  withContextMenu,\n  createConnectorCallback,\n} from './componentUtils';\nimport { AggregateEdge, ConnectsTo, CreateConnector, TrafficConnector } from './edges';\nimport GraphComponent from './GraphComponent';\nimport { Application } from './groups';\nimport { WorkloadNode } from './nodes';\n\nimport './ContextMenu.scss';\n\nexport const componentFactory: ComponentFactory = (kind, type) => {\n  switch (type) {\n    case TYPE_APPLICATION_GROUP:\n      return withDndDrop(applicationGroupDropTargetSpec)(\n        withDragNode(nodeDragSourceSpec(type, false, false))(\n          withSelection({ controlled: true })(withContextMenu(groupActionContext)(Application)),\n        ),\n      );\n    case TYPE_WORKLOAD:\n      return withCreateConnector(\n        createConnectorCallback(),\n        CreateConnector,\n      )(\n        withDndDrop<\n          any,\n          any,\n          { droppable?: boolean; hover?: boolean; canDrop?: boolean },\n          NodeComponentProps\n        >(nodeDropTargetSpec)(\n          withEditReviewAccess('patch')(\n            withDragNode(nodeDragSourceSpec(type))(\n              withSelection({ controlled: true })(\n                withContextMenu(contextMenuActions)(WorkloadNode),\n              ),\n            ),\n          ),\n        ),\n      );\n    case TYPE_CONNECTS_TO:\n      return withTargetDrag<DragObjectWithType>(\n        edgeDragSourceSpec(MOVE_CONNECTOR_DROP_TYPE, createConnection),\n      )(withContextMenu(contextMenuActions)(ConnectsTo));\n    case TYPE_AGGREGATE_EDGE:\n      return AggregateEdge;\n    case TYPE_TRAFFIC_CONNECTOR:\n      return TrafficConnector;\n    default:\n      switch (kind) {\n        case ModelKind.graph:\n          return withDndDrop(graphDropTargetSpec)(\n            withPanZoom()(\n              withSelection({ controlled: true })(\n                withContextMenu(graphActionContext)(GraphComponent),\n              ),\n            ),\n          );\n        default:\n          return undefined;\n      }\n  }\n};\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType, observer } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './AggregateEdge.scss';\n\ntype AggregateEdgeProps = {\n  element: Edge;\n};\n\nconst AggregateEdge: React.FC<AggregateEdgeProps> = ({ element, ...others }) => {\n  const { bidirectional } = element.getData();\n\n  const endTerminalType =\n    !bidirectional && (!element.getSource().isCollapsed() || !element.getTarget().isCollapsed())\n      ? EdgeTerminalType.directional\n      : EdgeTerminalType.none;\n\n  return (\n    <BaseEdge\n      data-test-id=\"edge-handler\"\n      element={element}\n      className=\"odc-base-edge odc-aggregate-edge\"\n      endTerminalType={endTerminalType}\n      {...others}\n    />\n  );\n};\n\nexport default observer(AggregateEdge);\n","import * as React from 'react';\nimport {\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n  Edge,\n  observer,\n  EdgeTerminalType,\n} from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\n\nimport './ConnectsTo.scss';\n\ntype ConnectsToProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\nconst ConnectsTo: React.FC<ConnectsToProps> = (props) => (\n  <BaseEdge\n    className=\"odc-connects-to\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default observer(ConnectsTo);\n","import * as React from 'react';\nimport { DefaultCreateConnector, Point } from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\ntype CreateConnectorProps = {\n  startPoint: Point;\n  endPoint: Point;\n  hints: string[];\n  dragging?: boolean;\n  hover?: boolean;\n};\n\nconst CreateConnector: React.FC<CreateConnectorProps> = ({\n  startPoint,\n  endPoint,\n  dragging,\n  hover,\n  hints,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <DefaultCreateConnector\n      startPoint={startPoint}\n      endPoint={endPoint}\n      dragging={dragging}\n      hints={hints}\n      hover={hover}\n      tipContents={hover && dragging ? t('topology~Add resources') : null}\n    />\n  );\n};\n\nexport default CreateConnector;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport {\n  Edge,\n  EdgeTerminalType,\n  NodeStatus,\n  StatusModifier,\n  observer,\n  WithSourceDragProps,\n  WithTargetDragProps,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { ComputedServiceBindingStatus } from '@console/service-binding-plugin/src/types';\nimport { getComputedServiceBindingStatus } from '@console/service-binding-plugin/src/utils';\nimport BaseEdge from './BaseEdge';\n\nimport './ServiceBinding.scss';\n\nconst ERROR_CROSS_SIZE = 8;\nconst ERROR_CROSS_STROKE_WIDTH = 2;\n\ntype ServiceBindingProps = {\n  element: Edge;\n  dragging?: boolean;\n} & WithSourceDragProps &\n  WithTargetDragProps &\n  WithContextMenuProps;\n\nconst ServiceBinding: React.FC<ServiceBindingProps> = (props) => {\n  const { sbr } = props.element.getData();\n\n  const hasError = getComputedServiceBindingStatus(sbr) === ComputedServiceBindingStatus.ERROR;\n\n  let errorCross: JSX.Element;\n  if (hasError) {\n    const startPoint = props.element.getStartPoint();\n    const endPoint = props.element.getEndPoint();\n    const centerX = (startPoint.x + endPoint.x) / 2;\n    const centerY = (startPoint.y + endPoint.y) / 2;\n    const angleDeg =\n      Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) * (180 / Math.PI);\n\n    const classNames = css(\n      // required to make it red\n      styles.topologyEdge,\n      StatusModifier[NodeStatus.danger],\n      // required to make it blue when the edge is selected\n      styles.topologyConnectorArrow,\n    );\n\n    errorCross = (\n      <g transform={`translate(${centerX}, ${centerY}) rotate(${angleDeg})`} className={classNames}>\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={-ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n        <line\n          x1={-ERROR_CROSS_SIZE}\n          y1={ERROR_CROSS_SIZE}\n          x2={ERROR_CROSS_SIZE}\n          y2={-ERROR_CROSS_SIZE}\n          strokeWidth={ERROR_CROSS_STROKE_WIDTH}\n        />\n      </g>\n    );\n  }\n\n  return (\n    <BaseEdge\n      className=\"odc-service-binding\"\n      endTerminalStatus={hasError ? NodeStatus.danger : undefined}\n      endTerminalType={EdgeTerminalType.directional}\n      {...props}\n    >\n      {errorCross}\n    </BaseEdge>\n  );\n};\n\nexport default observer(ServiceBinding);\n","import * as React from 'react';\nimport { Edge, EdgeTerminalType } from '@patternfly/react-topology';\nimport BaseEdge from './BaseEdge';\nimport './TrafficConnector.scss';\n\ntype TrafficConnectorProps = {\n  element: Edge;\n};\n\nconst TrafficConnector: React.FC<TrafficConnectorProps> = (props) => (\n  <BaseEdge\n    className=\"odc-traffic-connector\"\n    endTerminalType={EdgeTerminalType.directionalAlt}\n    {...props}\n  />\n);\n\nexport default TrafficConnector;\n","import { useContext } from 'react';\nimport { FilterContext } from './FilterProvider';\n\nconst useAppliedDisplayFilters = (): { [filterKey: string]: boolean } => {\n  return useContext(FilterContext).appliedFilters;\n};\n\nexport { useAppliedDisplayFilters };\n","import * as React from 'react';\nimport * as fuzzy from 'fuzzysearch';\nimport { toLower } from 'lodash';\nimport { useQueryParams } from '@console/shared/src';\n\nconst EMPTY_QUERY_PARAMS = [];\n\nconst fuzzyCaseInsensitive = (a: string, b: string): boolean => fuzzy(toLower(a), toLower(b));\n\nconst useSearchFilter = (\n  name: string,\n  labels: { [key: string]: string } = {},\n): [boolean, string] => {\n  const queryParams = useQueryParams();\n  const searchQuery = queryParams.get('searchQuery');\n  const labelsQuery = queryParams.get('labels')?.split(',') ?? EMPTY_QUERY_PARAMS;\n\n  const labelsMatched = React.useMemo(() => {\n    const labelsString = Object.entries(labels).map((label) => label.join('='));\n    return labelsQuery.every((label) => labelsString.includes(label));\n  }, [labels, labelsQuery]);\n\n  const filtered = React.useMemo(() => fuzzyCaseInsensitive(searchQuery, name), [\n    searchQuery,\n    name,\n  ]);\n\n  return [(filtered && !!searchQuery) || (labelsMatched && labelsQuery.length > 0), searchQuery];\n};\n\nexport { useSearchFilter };\n","import * as React from 'react';\nimport {\n  Node,\n  observer,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  WithContextMenuProps,\n  useHover,\n  useCombineRefs,\n} from '@patternfly/react-topology';\nimport classNames from 'classnames';\nimport { useSearchFilter } from '../../../../filters';\nimport { useShowLabel } from '../../../../filters/useShowLabel';\nimport { ApplicationModel } from '../../../../models';\nimport { SHOW_GROUPING_HINT_EVENT } from '../../../../topology-types';\nimport { getKindStringAndAbbreviation } from '../nodes/nodeUtils';\nimport RegroupHint from '../RegroupHint';\nimport ApplicationGroupExpanded from './ApplicationGroupExpanded';\nimport GroupNode from './GroupNode';\n\nimport './Application.scss';\n\ntype ApplicationProps = {\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  dragRegroupable?: boolean;\n} & WithSelectionProps &\n  WithDndDropProps &\n  WithDragNodeProps &\n  WithContextMenuProps;\n\nconst Application: React.FC<ApplicationProps> = ({\n  element,\n  dragNodeRef,\n  canDrop,\n  dropTarget,\n  dragRegroupable,\n  ...others\n}) => {\n  const [hover, hoverRef] = useHover();\n  const refs = useCombineRefs(dragNodeRef, hoverRef);\n  const [filtered] = useSearchFilter(element.getLabel());\n  const needsHintRef = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    const needsHint = dropTarget && !canDrop && dragRegroupable;\n    if (needsHint !== needsHintRef.current) {\n      needsHintRef.current = needsHint;\n      element\n        .getController()\n        .fireEvent(SHOW_GROUPING_HINT_EVENT, element, needsHint ? <RegroupHint /> : null);\n    }\n  }, [dropTarget, canDrop, element, dragRegroupable]);\n  const showLabel = useShowLabel(hover);\n  const { kindAbbr, kindStr, kindColor } = getKindStringAndAbbreviation(ApplicationModel.kind);\n  const badgeClassName = classNames('odc-resource-icon', {\n    [`odc-resource-icon-${kindStr.toLowerCase()}`]: !kindColor,\n  });\n\n  const groupClasses = classNames('odc-application-group', {\n    'is-filtered': filtered,\n  });\n\n  if (element.isCollapsed()) {\n    return (\n      <GroupNode\n        bgClassName=\"odc-application-group__bg\"\n        element={element}\n        canDrop={canDrop}\n        dropTarget={dropTarget}\n        badge={kindAbbr}\n        badgeColor={kindColor}\n        badgeClassName={badgeClassName}\n        dragNodeRef={refs}\n        {...others}\n      />\n    );\n  }\n\n  // Use local version of DefaultGroupExpanded until we have a fix for https://github.com/patternfly/patternfly-react/issues/7300\n  return (\n    <ApplicationGroupExpanded\n      className={groupClasses}\n      showLabel={showLabel}\n      element={element}\n      canDrop={canDrop}\n      dropTarget={dropTarget}\n      dragNodeRef={refs}\n      badge={kindAbbr}\n      badgeColor={kindColor}\n      badgeClassName={badgeClassName}\n      {...others}\n    />\n  );\n};\n\nexport default observer(Application);\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport {\n  Node,\n  NodeStatus,\n  observer,\n  ScaleDetailsLevel,\n  useHover,\n  useVisualizationController,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\nimport { AlertSeverity } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport {\n  AllPodStatus,\n  calculateRadius,\n  getFiringAlerts,\n  getPodStatus,\n  getSeverityAlertType,\n  PodRCData,\n  useBuildConfigsWatcher,\n  usePodsWatcher,\n} from '@console/shared';\nimport { WithCreateConnectorProps } from '../../../../behavior/withCreateConnector';\nimport { getFilterById, SHOW_POD_COUNT_FILTER_ID, useDisplayFilters } from '../../../../filters';\nimport { getResource, getTopologyResourceObject } from '../../../../utils/topology-utils';\nimport { useResourceQuotaAlert } from '../../../workload';\nimport BaseNode from './BaseNode';\nimport { getNodeDecorators } from './decorators/getNodeDecorators';\nimport PodSet, { podSetInnerRadius } from './PodSet';\n\nimport './WorkloadNode.scss';\n\nconst POD_STATUS_NORMAL = 1;\nconst POD_STATUS_WARNING = 2;\nconst POD_STATUS_DANGER = 3;\n\nconst StatusSeverities = {\n  danger: [\n    'ContainerCannotRun',\n    'CrashLoopBackOff',\n    'Critical',\n    'ErrImagePull',\n    'Error',\n    'Failed',\n    'Failure',\n    'ImagePullBackOff',\n    'InstallCheckFailed',\n    'Lost',\n    'Rejected',\n    'UpgradeFailed',\n  ],\n  warning: [\n    'Cancelled',\n    'Deleting',\n    'Expired',\n    'Not Ready',\n    'Terminating',\n    'Warning',\n    'RequiresApproval',\n  ],\n  normal: [\n    'New',\n    'Pending',\n    'Planning',\n    'ContainerCreating',\n    'UpgradePending',\n    'In Progress',\n    'Installing',\n    'InstallReady',\n    'Replacing',\n    'Running',\n    'Updating',\n    'Upgrading',\n    'Accepted',\n    'Active',\n    'Bound',\n    'Complete',\n    'Completed',\n    'Created',\n    'Enabled',\n    'Succeeded',\n    'Ready',\n    'Up to date',\n    'Provisioned as node',\n    'Preferred',\n    'Connected',\n    'Info',\n    'Unknown',\n    'PipelineNotStarted',\n  ],\n};\n\nexport const getNodePodStatus = (podStatus: AllPodStatus): number => {\n  switch (podStatus) {\n    case AllPodStatus.Failed:\n    case AllPodStatus.CrashLoopBackOff:\n      return POD_STATUS_DANGER;\n    case AllPodStatus.Warning:\n      return POD_STATUS_WARNING;\n    default:\n      return POD_STATUS_NORMAL;\n  }\n};\n\nexport const getAggregateStatus = (\n  donutStatus: PodRCData,\n  alertSeverity: AlertSeverity,\n  buildStatus: string,\n  pipelineStatus: string,\n  workloadRqAlertVariant: NodeStatus,\n): NodeStatus => {\n  const worstPodStatus =\n    donutStatus?.pods?.reduce((acc, pod) => {\n      return Math.max(acc, getNodePodStatus(getPodStatus(pod)));\n    }, POD_STATUS_NORMAL) ?? NodeStatus.default;\n\n  if (\n    worstPodStatus === POD_STATUS_DANGER ||\n    alertSeverity === AlertSeverity.Critical ||\n    StatusSeverities.danger.includes(buildStatus) ||\n    StatusSeverities.danger.includes(pipelineStatus)\n  ) {\n    return NodeStatus.danger;\n  }\n  if (\n    worstPodStatus === POD_STATUS_WARNING ||\n    alertSeverity === AlertSeverity.Warning ||\n    StatusSeverities.warning.includes(buildStatus) ||\n    StatusSeverities.warning.includes(pipelineStatus) ||\n    workloadRqAlertVariant === NodeStatus.warning\n  ) {\n    return NodeStatus.warning;\n  }\n  return NodeStatus.default;\n};\n\ntype WorkloadNodeProps = {\n  element: Node;\n  dragging?: boolean;\n  highlight?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  urlAnchorRef?: React.Ref<SVGCircleElement>;\n  dropTooltip?: React.ReactNode;\n} & WithSelectionProps &\n  WithDragNodeProps &\n  WithDndDropProps &\n  WithContextMenuProps &\n  WithCreateConnectorProps;\n\ntype WorkloadPodsNodeProps = WorkloadNodeProps & {\n  donutStatus: PodRCData;\n};\n\nconst WorkloadPodsNode: React.FC<WorkloadPodsNodeProps> = observer(function WorkloadPodsNode({\n  donutStatus,\n  element,\n  children,\n  urlAnchorRef,\n  canDrop,\n  dropTarget,\n  dropTooltip,\n  contextMenuOpen,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { width, height } = element.getDimensions();\n  const workloadData = element.getData().data;\n  const filters = useDisplayFilters();\n  const [hover, hoverRef] = useHover();\n  const size = Math.min(width, height);\n  const { radius, decoratorRadius } = calculateRadius(size);\n  const cx = width / 2;\n  const cy = height / 2;\n  const tipContent = dropTooltip || t('topology~Create a visual connector');\n  const showPodCountFilter = getFilterById(SHOW_POD_COUNT_FILTER_ID, filters);\n  const showPodCount = showPodCountFilter?.value ?? false;\n  const { decorators } = element.getGraph().getData();\n  const controller = useVisualizationController();\n  const detailsLevel = controller.getGraph().getDetailsLevel();\n  const iconImageUrl = getImageForIconClass(workloadData.builderImage) ?? workloadData.builderImage;\n  const showDetails = hover || contextMenuOpen || detailsLevel !== ScaleDetailsLevel.low;\n  const nodeDecorators = showDetails\n    ? getNodeDecorators(element, decorators, cx, cy, radius, decoratorRadius)\n    : null;\n  const { monitoringAlerts } = workloadData;\n  const firingAlerts = getFiringAlerts(monitoringAlerts);\n  const severityAlertType = getSeverityAlertType(firingAlerts);\n  const resource = getResource(element);\n  const { buildConfigs } = useBuildConfigsWatcher(resource);\n  const buildStatus = buildConfigs?.[0]?.builds?.[0]?.status?.phase;\n  const pipelineStatus = element.getData()?.resources?.pipelineRunStatus ?? 'Unknown';\n  const workloadRqAlert = useResourceQuotaAlert(element);\n  const workloadRqAlertVariant = (workloadRqAlert?.variant as NodeStatus) || NodeStatus.default;\n\n  return (\n    <g className=\"odc-workload-node\">\n      <Tooltip\n        content={tipContent}\n        trigger=\"manual\"\n        isVisible={dropTarget && canDrop}\n        animationDuration={0}\n      >\n        <BaseNode\n          className=\"odc-workload-node\"\n          hoverRef={hoverRef}\n          innerRadius={podSetInnerRadius(size, donutStatus)}\n          icon={showDetails && !showPodCount ? iconImageUrl : undefined}\n          kind={workloadData.kind}\n          element={element}\n          dropTarget={dropTarget}\n          canDrop={canDrop}\n          nodeStatus={\n            !showDetails &&\n            getAggregateStatus(\n              donutStatus,\n              severityAlertType,\n              buildStatus,\n              pipelineStatus,\n              workloadRqAlertVariant,\n            )\n          }\n          attachments={nodeDecorators}\n          contextMenuOpen={contextMenuOpen}\n          alertVariant={workloadRqAlertVariant}\n          {...rest}\n        >\n          {donutStatus && showDetails ? (\n            <PodSet size={size} x={cx} y={cy} data={donutStatus} showPodCount={showPodCount} />\n          ) : null}\n          {children}\n        </BaseNode>\n      </Tooltip>\n    </g>\n  );\n});\n\nconst WorkloadNode: React.FC<WorkloadNodeProps> = observer(function WorkloadNode({\n  element,\n  ...rest\n}) {\n  const resource = getTopologyResourceObject(element.getData());\n  const { podData, loadError, loaded } = usePodsWatcher(\n    resource,\n    resource.kind,\n    resource.metadata.namespace,\n  );\n  return (\n    <WorkloadPodsNode\n      element={element}\n      donutStatus={loaded && !loadError ? podData : null}\n      {...rest}\n    />\n  );\n});\n\nexport { WorkloadNode, WorkloadPodsNode };\n","export { default as Decorator } from './Decorator';\nexport { default as BuildDecorator } from './BuildDecorator';\nexport { default as BuildDecoratorBubble } from './BuildDecoratorBubble';\nexport { default as EditDecorator } from './EditDecorator';\nexport { default as MonitoringAlertsDecorator } from './MonitoringAlertsDecorator';\nexport { default as UrlDecorator } from './UrlDecorator';\n","import * as React from 'react';\nimport SvgDropShadowFilter from '../../svg/SvgDropShadowFilter';\n\nexport const NODE_SHADOW_FILTER_ID = 'NodeShadowsFilterId';\nexport const NODE_SHADOW_FILTER_ID_HOVER = 'NodeShadowsFilterId--hover';\n\nconst NodeShadows: React.FC = () => (\n  <>\n    <SvgDropShadowFilter id={NODE_SHADOW_FILTER_ID} />\n    <SvgDropShadowFilter\n      id={NODE_SHADOW_FILTER_ID_HOVER}\n      dy={3}\n      stdDeviation={7}\n      floodOpacity={0.24}\n    />\n  </>\n);\n\nexport { NodeShadows };\n","import * as React from 'react';\nimport {\n  Visualization,\n  VisualizationSurface,\n  GraphElement,\n  isNode,\n  BaseEdge,\n  VisualizationProvider,\n  Model,\n  GraphModel,\n  NodeModel,\n  BOTTOM_LAYER,\n  GROUPS_LAYER,\n  DEFAULT_LAYER,\n  TOP_LAYER,\n  SelectionEventListener,\n  SELECTION_EVENT,\n  NODE_POSITIONED_EVENT,\n  GRAPH_POSITION_CHANGE_EVENT,\n  Node,\n  Rect,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport { action } from 'mobx';\nimport { connect } from 'react-redux';\nimport {\n  useResolvedExtensions,\n  isTopologyComponentFactory as isDynamicTopologyComponentFactory,\n  TopologyComponentFactory as DynamicTopologyComponentFactory,\n} from '@console/dynamic-plugin-sdk';\nimport { RootState } from '@console/internal/redux';\nimport {\n  useQueryParams,\n  withUserSettingsCompatibility,\n  WithUserSettingsCompatibilityProps,\n} from '@console/shared';\nimport { withFallback, ErrorBoundaryFallbackPage } from '@console/shared/src/components/error';\nimport { TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY, TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY } from '../../const';\nimport { odcElementFactory } from '../../elements';\nimport { isTopologyComponentFactory, TopologyComponentFactory } from '../../extensions/topology';\nimport { getTopologyGraphModel, setTopologyGraphModel } from '../../redux/action';\nimport { SHOW_GROUPING_HINT_EVENT, ShowGroupingHintEventListener } from '../../topology-types';\nimport { componentFactory } from './components';\nimport { DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory } from './layouts/layoutFactory';\nimport TopologyControlBar from './TopologyControlBar';\n\nimport './Topology.scss';\n\nconst STORED_NODE_LAYOUT_FIELDS = ['id', 'x', 'y'];\n\nconst setTopologyLayout = (namespace: string, nodes: NodeModel[], layout: string) => {\n  const currentStore = {};\n  currentStore[namespace] = {\n    nodes: nodes?.map((n) =>\n      Object.keys(n).reduce((acc, key) => {\n        if (STORED_NODE_LAYOUT_FIELDS.includes(key)) {\n          acc[key] = n[key];\n        }\n        return acc;\n      }, {} as NodeModel),\n    ),\n    layout,\n  };\n  return currentStore;\n};\n\nconst nodeDistanceToBounds = (node: Node, bounds: Rect): number => {\n  const nodeBounds = node.getBounds();\n  const nodeX = nodeBounds.x + nodeBounds.width / 2;\n  const nodeY = nodeBounds.y + nodeBounds.height / 2;\n\n  const dx = Math.max(bounds.x - nodeX, 0, nodeX - (bounds.x + bounds.width));\n  const dy = Math.max(bounds.y - nodeY, 0, nodeY - (bounds.y + bounds.height));\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\ninterface TopologyGraphViewProps {\n  visualizationReady: boolean;\n  visualization: Visualization;\n  controlsDisabled?: boolean;\n  selectedId?: string;\n  dragHint?: string;\n}\n\nconst TopologyGraphView: React.FC<TopologyGraphViewProps> = React.memo(\n  ({ visualizationReady, visualization, controlsDisabled, selectedId, dragHint }) => {\n    if (!visualizationReady) {\n      return null;\n    }\n    return (\n      <div className=\"odc-topology-graph-view\">\n        <VisualizationProvider controller={visualization}>\n          <VisualizationSurface state={{ selectedIds: [selectedId] }} />\n          {dragHint && (\n            <div className=\"odc-topology__hint-container\">\n              <div className=\"odc-topology__hint-background\">{dragHint}</div>\n            </div>\n          )}\n          <TopologyControlBar visualization={visualization} isDisabled={controlsDisabled} />\n        </VisualizationProvider>\n      </div>\n    );\n  },\n);\n\nconst TOPOLOGY_GRAPH_ID = 'odc-topology-graph';\nconst graphModel: Model = {\n  graph: {\n    id: TOPOLOGY_GRAPH_ID,\n    type: 'graph',\n    layout: DEFAULT_LAYOUT,\n    layers: [BOTTOM_LAYER, GROUPS_LAYER, 'groups2', DEFAULT_LAYER, TOP_LAYER],\n  },\n};\n\ninterface StateProps {\n  getStoredGraphModel: (namespace: string) => GraphModel;\n}\n\ninterface DispatchProps {\n  onGraphModelChange: (namespace: string, model: GraphModel) => void;\n}\n\ninterface TopologyProps {\n  model: Model;\n  application: string;\n  namespace: string;\n  onSelect: (entity?: GraphElement) => void;\n  setVisualization: (vis: Visualization) => void;\n}\n\nconst Topology: React.FC<\n  TopologyProps & StateProps & DispatchProps & WithUserSettingsCompatibilityProps<object>\n> = ({\n  model,\n  application,\n  namespace,\n  onSelect,\n  setVisualization,\n  onGraphModelChange,\n  getStoredGraphModel,\n  userSettingState: topologyLayoutDataJson,\n  setUserSettingState: setTopologyLayoutData,\n}) => {\n  const applicationRef = React.useRef<string>(null);\n  const [visualizationReady, setVisualizationReady] = React.useState<boolean>(false);\n  const [dragHint, setDragHint] = React.useState<string>('');\n  const storedLayoutApplied = React.useRef<boolean>(false);\n  const queryParams = useQueryParams();\n  const selectedId = queryParams.get('selectId');\n  const [componentFactoryExtensions, isStaticResolved] = useResolvedExtensions<\n    TopologyComponentFactory\n  >(isTopologyComponentFactory);\n  const [dynamicComponentFactoryExtensions, isDynamicResolved] = useResolvedExtensions<\n    DynamicTopologyComponentFactory\n  >(isDynamicTopologyComponentFactory);\n\n  const createVisualization = React.useCallback(() => {\n    const storedLayout = topologyLayoutDataJson?.[namespace];\n    const newVisualization = new Visualization();\n    newVisualization.registerElementFactory(odcElementFactory);\n    newVisualization.registerLayoutFactory(layoutFactory);\n\n    const onCurrentGraphModelChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const saveGraphModel = {\n        id: visModel.graph.id,\n        type: visModel.graph.type,\n        x: visModel.graph.x,\n        y: visModel.graph.y,\n        scale: visModel.graph.scale,\n        scaleExtent: visModel.graph.scaleExtent,\n      };\n      onGraphModelChange(namespace, saveGraphModel);\n    }, 200);\n\n    const onVisualizationLayoutChange = _.debounce(() => {\n      const visModel = newVisualization.toModel();\n      const updatedLayoutData = setTopologyLayout(namespace, visModel.nodes, visModel.graph.layout);\n      setTopologyLayoutData((prevState) => {\n        return { ...prevState, ...updatedLayoutData };\n      });\n    }, 200);\n\n    newVisualization.addEventListener(NODE_POSITIONED_EVENT, onVisualizationLayoutChange);\n    newVisualization.addEventListener(GRAPH_POSITION_CHANGE_EVENT, onCurrentGraphModelChange);\n\n    if (storedLayout) {\n      // Cleanup removed layouts, otherwise the `newVisualization.fromModel` call\n      // will crash in @patternfly/react-topology Visualization `getLayout(type: string)`\n      if (!SUPPORTED_LAYOUTS.includes(storedLayout.layout)) {\n        graphModel.graph.layout = DEFAULT_LAYOUT;\n        setTopologyLayoutData((prevState) => {\n          return { ...prevState, layout: DEFAULT_LAYOUT };\n        });\n      } else {\n        graphModel.graph.layout = storedLayout.layout;\n      }\n    }\n    newVisualization.fromModel(graphModel);\n    newVisualization.addEventListener<SelectionEventListener>(SELECTION_EVENT, (ids: string[]) => {\n      const selectedEntity = ids[0] ? newVisualization.getElementById(ids[0]) : null;\n      onSelect(selectedEntity);\n    });\n    return newVisualization;\n  }, [namespace, onGraphModelChange, onSelect, setTopologyLayoutData, topologyLayoutDataJson]);\n\n  const visualizationRef = React.useRef<Visualization>();\n  if (!visualizationRef.current) {\n    visualizationRef.current = createVisualization();\n  }\n  const visualization = visualizationRef.current;\n  React.useEffect(() => {\n    if (visualization) {\n      setVisualization(visualization);\n    }\n  }, [setVisualization, visualization]);\n\n  React.useEffect(() => {\n    if (model && visualizationReady) {\n      if (!storedLayoutApplied.current) {\n        const storedGraphModel = getStoredGraphModel(namespace);\n        if (storedGraphModel) {\n          model.graph = {\n            ...graphModel.graph,\n            x: storedGraphModel.x,\n            y: storedGraphModel.y,\n            scale: storedGraphModel.scale,\n            scaleExtent: storedGraphModel.scaleExtent,\n            data: visualization.getGraph()?.getData(),\n          };\n        }\n        const storedLayout = topologyLayoutDataJson?.[namespace];\n        if (storedLayout) {\n          model.nodes.forEach((n) => {\n            const storedNode = storedLayout.nodes.find((sn) => sn.id === n.id);\n            if (storedNode) {\n              STORED_NODE_LAYOUT_FIELDS.forEach((key) => {\n                n[key] = storedNode[key];\n              });\n            }\n          });\n        }\n      }\n\n      model.nodes.forEach((n) => {\n        const oldNode = visualization.getNodeById(n.id);\n        if (oldNode && _.isEqual(oldNode.getData(), n.data)) {\n          n.data = oldNode.getData();\n        }\n      });\n      model.edges.forEach((e) => {\n        const oldEdge = visualization.getEdgeById(e.id);\n        if (oldEdge && _.isEqual(oldEdge.getData(), e.data)) {\n          e.data = oldEdge.getData();\n        }\n      });\n\n      visualization.fromModel(model);\n\n      // Make sure something is visible in the case where stored locations are off the screen\n      if (!storedLayoutApplied.current) {\n        storedLayoutApplied.current = true;\n        if (topologyLayoutDataJson?.[namespace]) {\n          const graph = visualization.getGraph();\n          const nodes = visualization.getElements().filter(isNode);\n          if (nodes.length) {\n            const nodesVisible = nodes.find((n) => graph.isNodeInView(n, { padding: 0 }));\n            if (!nodesVisible) {\n              const graphBounds = graph.getBounds();\n              const [viewNode] = nodes.reduce(\n                ([closestNode, closestDistance], nextNode) => {\n                  const distance = nodeDistanceToBounds(nextNode, graphBounds);\n                  if (!closestNode || distance < closestDistance) {\n                    return [nextNode, distance];\n                  }\n                  return [closestNode, closestDistance];\n                },\n                [null, 0],\n              );\n              graph.panIntoView(viewNode);\n            }\n          }\n        }\n      }\n\n      const selectedItem = selectedId ? visualization.getElementById(selectedId) : null;\n      if (!selectedItem || !selectedItem.isVisible()) {\n        onSelect();\n      } else {\n        onSelect(selectedItem);\n      }\n    }\n    // Do not update on selectedId change or stored layout change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, visualization, visualizationReady]);\n\n  React.useEffect(() => {\n    if (!isStaticResolved || !isDynamicResolved) {\n      return;\n    }\n\n    visualization.registerComponentFactory(componentFactory);\n    [...componentFactoryExtensions, ...dynamicComponentFactoryExtensions].forEach((factory) => {\n      visualization.registerComponentFactory(factory.properties.getFactory);\n    });\n\n    visualization.addEventListener<ShowGroupingHintEventListener>(\n      SHOW_GROUPING_HINT_EVENT,\n      (element, hint) => {\n        setDragHint(hint);\n      },\n    );\n    setVisualizationReady(true);\n  }, [\n    visualization,\n    isStaticResolved,\n    isDynamicResolved,\n    componentFactoryExtensions,\n    dynamicComponentFactoryExtensions,\n  ]);\n\n  React.useEffect(() => {\n    if (!applicationRef.current) {\n      applicationRef.current = application;\n      return;\n    }\n    if (application !== applicationRef.current) {\n      applicationRef.current = application;\n      if (visualization) {\n        visualization.getGraph().reset();\n        visualization.getGraph().layout();\n      }\n    }\n  }, [application, visualization]);\n\n  React.useEffect(() => {\n    let resizeTimeout = null;\n    if (visualization) {\n      if (selectedId) {\n        const selectedEntity = visualization.getElementById(selectedId);\n        if (selectedEntity) {\n          const visibleEntity = isNode(selectedEntity)\n            ? selectedEntity\n            : (selectedEntity as BaseEdge).getSource();\n          resizeTimeout = setTimeout(\n            action(() => {\n              visualization\n                .getGraph()\n                .panIntoView(visibleEntity, { offset: 20, minimumVisible: 100 });\n              resizeTimeout = null;\n            }),\n            500,\n          );\n        }\n      }\n    }\n    return () => {\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n      }\n    };\n  }, [selectedId, visualization]);\n\n  return (\n    <TopologyGraphView\n      visualizationReady={visualizationReady}\n      visualization={visualization}\n      controlsDisabled={!model?.nodes.length}\n      dragHint={dragHint}\n      selectedId={selectedId}\n    />\n  );\n};\n\nconst TopologyStateToProps = (state: RootState): StateProps => {\n  return {\n    getStoredGraphModel: (namespace: string) => getTopologyGraphModel(state, namespace),\n  };\n};\n\nconst TopologyDispatchToProps = (dispatch): DispatchProps => ({\n  onGraphModelChange: (namespace: string, model: GraphModel) => {\n    dispatch(setTopologyGraphModel(namespace, model));\n  },\n});\n\nexport default withFallback(\n  connect<StateProps, DispatchProps, TopologyProps>(\n    TopologyStateToProps,\n    TopologyDispatchToProps,\n  )(\n    withUserSettingsCompatibility<\n      TopologyProps & WithUserSettingsCompatibilityProps<object>,\n      object\n    >(\n      TOPOLOGY_LAYOUT_CONFIG_STORAGE_KEY,\n      TOPOLOGY_LAYOUT_LOCAL_STORAGE_KEY,\n      {},\n    )(React.memo(Topology)),\n  ),\n  ErrorBoundaryFallbackPage,\n);\n","import { ElementFactory, GraphElement, ModelKind, BaseGraph } from '@patternfly/react-topology';\nimport OdcBaseEdge from './OdcBaseEdge';\nimport OdcBaseNode from './OdcBaseNode';\n\nconst odcElementFactory: ElementFactory = (kind: ModelKind): GraphElement | undefined => {\n  switch (kind) {\n    case ModelKind.graph:\n      return new BaseGraph();\n    case ModelKind.node:\n      return new OdcBaseNode();\n    case ModelKind.edge:\n      return new OdcBaseEdge();\n    default:\n      return undefined;\n  }\n};\n\nexport default odcElementFactory;\n","import * as React from 'react';\nimport { BitbucketIcon } from '@patternfly/react-icons/dist/esm/icons/bitbucket-icon';\nimport { GitAltIcon } from '@patternfly/react-icons/dist/esm/icons/git-alt-icon';\nimport { GithubIcon } from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { GitlabIcon } from '@patternfly/react-icons/dist/esm/icons/gitlab-icon';\nimport { TFunction } from 'i18next';\nimport { GitProvider } from '@console/git-service/src';\nimport CheIcon from './CheIcon';\nimport GiteaIcon from './GiteaIcon';\nimport { detectGitType } from './import-validation-utils';\n\nexport const routeDecoratorIcon = (\n  routeURL: string,\n  radius: number,\n  t: TFunction,\n  cheEnabled?: boolean,\n  cheIconURL?: string,\n): React.ReactElement => {\n  if (cheEnabled && routeURL) {\n    return cheIconURL ? (\n      <image xlinkHref={cheIconURL} width={radius} height={radius} />\n    ) : (\n      <CheIcon style={{ fontSize: radius }} />\n    );\n  }\n  switch (detectGitType(routeURL)) {\n    case GitProvider.INVALID:\n      // Not a valid url and thus not safe to use\n      return null;\n    case GitProvider.GITHUB:\n      return <GithubIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.BITBUCKET:\n      return (\n        <BitbucketIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />\n      );\n    case GitProvider.GITLAB:\n      return <GitlabIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n    case GitProvider.GITEA:\n      return <GiteaIcon style={{ fontSize: radius }} topology />;\n    default:\n      return <GitAltIcon style={{ fontSize: radius }} title={t('devconsole~Edit source code')} />;\n  }\n};\n","import * as React from 'react';\n\nconst CheIcon: React.FC<React.HTMLProps<SVGElement>> = ({ style }): React.ReactElement => {\n  return (\n    <svg height=\"1em\" width=\"1em\" version=\"1.1\" viewBox=\"0 0 47 57\" style={style}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\">\n        <path\n          d=\"M0.032227,30.88l-0.032227-17.087,23.853-13.793,23.796,13.784-14.691,8.51-9.062-5.109-23.864,13.695z\"\n          fill=\"#fdb940\"\n        />\n        <path\n          d=\"M0,43.355l23.876,13.622,23.974-13.937v-16.902l-23.974,13.506-23.876-13.506v17.217z\"\n          fill=\"#525c86\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default CheIcon;\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Title,\n  Select,\n  SelectList,\n  SelectOption,\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core';\nimport { Edge, Node } from '@patternfly/react-topology';\nimport { Formik, FormikProps, FormikValues } from 'formik';\nimport { TFunction } from 'i18next';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { PromiseComponent, ResourceIcon } from '@console/internal/components/utils';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KAFKA_CONNECTION_LINK,\n} from '@console/knative-plugin/src/topology/const';\nimport {\n  createEventSourceKafkaConnection,\n  createSinkConnection,\n} from '@console/knative-plugin/src/topology/knative-topology-utils';\nimport { TYPE_CONNECTS_TO, TYPE_SERVICE_BINDING } from '../../const';\nimport { createConnection } from '../../utils';\n\ntype MoveConnectionModalProps = {\n  edge: Edge;\n  availableTargets: Node[];\n  cancel?: () => void;\n  close?: () => void;\n};\n\ntype MoveConnectionModalState = {\n  inProgress: boolean;\n  errorMessage: string;\n};\n\nconst nodeItem = (node: Node) => (\n  <span>\n    <span className=\"co-icon-space-r\">\n      <ResourceIcon kind={node.getData().data?.kind} />\n    </span>\n    {node.getLabel()}\n  </span>\n);\n\nconst MoveConnectionForm: React.FC<\n  FormikProps<FormikValues> & MoveConnectionModalProps & { setTranslator: (t: TFunction) => void }\n> = ({\n  handleSubmit,\n  isSubmitting,\n  setTranslator,\n  cancel,\n  values,\n  edge,\n  availableTargets,\n  status,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const isDirty = values.target.getId() !== edge.getTarget().getId();\n  setTranslator(t);\n\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle\n      id=\"toggle-id\"\n      ref={toggleRef}\n      onClick={() => setOpen(!isOpen)}\n      isExpanded={isOpen}\n      isFullWidth\n    >\n      {nodeItem(values.target)}\n    </MenuToggle>\n  );\n\n  const sourceLabel = edge.getSource().getLabel();\n  return (\n    <form onSubmit={handleSubmit} className=\"modal-content\">\n      <ModalTitle>{t('topology~Move connector')}</ModalTitle>\n      <ModalBody>\n        <Title headingLevel=\"h2\" size=\"md\" className=\"co-m-form-row\">\n          <Trans ns=\"topology\" t={t}>\n            Connect <strong>{{ sourceLabel }}</strong> to\n          </Trans>\n        </Title>\n        <div className=\"pf-v5-c-form\">\n          <FormGroup fieldId=\"target-node\" label=\"Target\">\n            <Select\n              id=\"target-node-dropdown\"\n              className=\"dropdown--full-width\"\n              onSelect={(_, value: Node) => {\n                if (value) {\n                  values.target = value;\n                }\n                setOpen(false);\n              }}\n              toggle={toggle}\n              isOpen={isOpen}\n              onOpenChange={(open) => setOpen(open)}\n            >\n              <SelectList>\n                {availableTargets.map((node) => (\n                  <SelectOption\n                    key={node.getId()}\n                    value={node}\n                    isSelected={values.target.getId() === node.getId()}\n                  >\n                    {nodeItem(node)}\n                  </SelectOption>\n                ))}\n              </SelectList>\n            </Select>\n          </FormGroup>\n        </div>\n      </ModalBody>\n      <ModalSubmitFooter\n        submitText={t('topology~Move')}\n        submitDisabled={!isDirty || isSubmitting}\n        cancel={cancel}\n        inProgress={isSubmitting}\n        errorMessage={status && status.submitError}\n      />\n    </form>\n  );\n};\n\nclass MoveConnectionModal extends PromiseComponent<\n  MoveConnectionModalProps,\n  MoveConnectionModalState\n> {\n  private t: TFunction;\n\n  private onSubmit = (newTarget: Node): Promise<K8sResourceKind[] | K8sResourceKind> => {\n    const { edge } = this.props;\n    switch (edge.getType()) {\n      case TYPE_CONNECTS_TO:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_SERVICE_BINDING:\n        return createConnection(edge.getSource(), newTarget, edge.getTarget());\n      case TYPE_EVENT_SOURCE_LINK:\n        return createSinkConnection(edge.getSource(), newTarget);\n      case TYPE_KAFKA_CONNECTION_LINK:\n        return createEventSourceKafkaConnection(edge.getSource(), newTarget);\n      default:\n        return Promise.reject(\n          new Error(\n            this.t('topology~Unable to move connector of type {{type}}.', {\n              type: edge.getType(),\n            }),\n          ),\n        );\n    }\n  };\n\n  private handleSubmit = (values, actions) => {\n    const { close } = this.props;\n    return this.handlePromise(this.onSubmit(values.target))\n      .then(() => {\n        close();\n      })\n      .catch((err) => {\n        actions.setStatus({ submitError: err });\n      });\n  };\n\n  private setTranslator = (t: TFunction) => {\n    this.t = t;\n  };\n\n  render() {\n    const { edge } = this.props;\n    const initialValues = {\n      target: edge.getTarget(),\n    };\n    return (\n      <Formik initialValues={initialValues} onSubmit={this.handleSubmit}>\n        {(formikProps) => (\n          <MoveConnectionForm setTranslator={this.setTranslator} {...formikProps} {...this.props} />\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport const moveConnectionModal = createModalLauncher((props: MoveConnectionModalProps) => (\n  <MoveConnectionModal {...props} />\n));\n","export const editApplicationModal = (props) =>\n  import('./EditApplicationModal' /* webpackChunkName: \"topology-modals\" */).then((m) =>\n    m.editApplicationModal(props),\n  );\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getGroupVersionKindForResource } from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { ResourceLink } from '@console/internal/components/utils/resource-link';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { getVerticalPodAutoscalersForResource } from '@console/shared/src';\n\nconst Recommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const recommendations = obj?.status?.recommendation?.containerRecommendations ?? [];\n  return (\n    <>\n      {recommendations.length > 0 && <p>{t('console-app~Recommended')}</p>}\n      {recommendations.map((recommendation) => (\n        <React.Fragment key={recommendation.containerName}>\n          <div>\n            {t('console-app~Container name')}: {recommendation.containerName}\n          </div>\n          <div>\n            {t('console-app~CPU')}: {recommendation.target.cpu}\n          </div>\n          <div>\n            {t('console-app~Memory')}: {recommendation.target.memory}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n\nexport const VerticalPodAutoscalerRecommendations: React.FC<VerticalPodAutoscalerRecommendationsProps> = ({\n  obj,\n}) => {\n  const { t } = useTranslation();\n  const [vpas] = useK8sWatchResource<K8sResourceKind[]>({\n    groupVersionKind: {\n      group: 'autoscaling.k8s.io',\n      version: 'v1',\n      kind: 'VerticalPodAutoscaler',\n    },\n    namespace: obj?.metadata?.namespace,\n    isList: true,\n    namespaced: true,\n  });\n\n  const verticalPodAutoscalers = getVerticalPodAutoscalersForResource(vpas, obj);\n\n  return (\n    <>\n      <dt>{t('console-app~VerticalPodAutoscalers')}</dt>\n      <dd>\n        {verticalPodAutoscalers.length > 0\n          ? verticalPodAutoscalers.map((vpa) => (\n              <>\n                <p>\n                  <ResourceLink\n                    groupVersionKind={getGroupVersionKindForResource(vpa)}\n                    name={vpa?.metadata?.name}\n                    namespace={vpa?.metadata?.namespace}\n                  />\n                </p>\n                <Recommendations obj={vpa} />\n              </>\n            ))\n          : t('console-app~No VerticalPodAutoscalers')}\n      </dd>\n    </>\n  );\n};\n\ntype VerticalPodAutoscalerRecommendationsProps = {\n  obj: K8sResourceKind;\n};\n","export { default as OdcBaseEdge } from './OdcBaseEdge';\nexport { default as OdcBaseNode } from './OdcBaseNode';\nexport { default as odcElementFactory } from './odcElementFactory';\n","import { GraphModel } from '@patternfly/react-topology';\nimport { action, ActionType } from 'typesafe-actions';\nimport { RootState } from '@console/internal/redux';\n\nexport enum Actions {\n  topologyFilters = 'topologyFilters',\n  supportedTopologyFilters = 'supportedTopologyFilters',\n  supportedTopologyKinds = 'supportedTopologyKinds',\n  topologyGraphModel = 'topologyGraphModel',\n}\n\nexport const setSupportedTopologyFilters = (supportedFilters: string[]) => {\n  return action(Actions.supportedTopologyFilters, { supportedFilters });\n};\n\nexport const setSupportedTopologyKinds = (supportedKinds: { [key: string]: number }) => {\n  return action(Actions.supportedTopologyKinds, { supportedKinds });\n};\n\nexport const setTopologyGraphModel = (namespace: string, graphModel: GraphModel) => {\n  return action(Actions.topologyGraphModel, { namespace, graphModel });\n};\n\nexport const getTopologyGraphModel = (state: RootState, namespace: string): GraphModel => {\n  const topology = state?.plugins?.devconsole?.topology;\n  return topology?.get('topologyGraphModel')?.[namespace];\n};\n\nconst actions = {\n  setSupportedTopologyFilters,\n  setSupportedTopologyKinds,\n  setTopologyGraphModel,\n};\n\nexport type TopologyAction = ActionType<typeof actions>;\n","import * as React from 'react';\nimport { Alert, AlertActionLink } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { PodStatus } from '@console/internal/components/pod';\nimport { PodTraffic } from '@console/internal/components/pod-traffic';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  LoadingBox,\n} from '@console/internal/components/utils';\nimport { useK8sWatchResources } from '@console/internal/components/utils/k8s-watch-hook';\nimport { podPhase, PodKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport {\n  usePodsWatcher,\n  getPodsForResource,\n  getResourcesToWatchForPods,\n  BuildConfigData,\n} from '@console/shared';\n\nconst kind: string = 'Pod';\nconst MAX_PODS: number = 3;\nconst MAX_ERROR_PODS: number = 10;\n\nconst podUpdateTime = (pod: PodKind) => {\n  const allStatuses = [\n    ..._.get(pod, 'status.containerStatuses', []),\n    ..._.get(pod, 'status.initContainerStatuses', []),\n  ];\n  const updateTimes = _.reduce(\n    allStatuses,\n    (times, nextStatus) => {\n      if (nextStatus.state.running) {\n        return [...times, _.get(nextStatus, 'state.running.startedAt')];\n      }\n      if (nextStatus.state.terminated) {\n        return [...times, _.get(nextStatus, 'state.terminated.finishedAt')];\n      }\n      if (nextStatus.lastState.running) {\n        return [...times, _.get(nextStatus, 'lastState.running.startedAt')];\n      }\n      if (nextStatus.lastState.terminated) {\n        return [...times, _.get(nextStatus, 'lastState.terminated.finishedAt')];\n      }\n      return [...times, _.get(nextStatus, _.get(pod, 'startTime'))];\n    },\n    [],\n  );\n\n  return _.head(_.reverse(updateTimes.sort()));\n};\n\nconst errorPhases = [\n  'ContainerCannotRun',\n  'CrashLoopBackOff',\n  'Critical',\n  'Error',\n  'Failed',\n  'InstallCheckFailed',\n  'Cancelled',\n  'Expired',\n  'Not Ready',\n  'Terminating',\n];\n\nconst isPodError = (pod: PodKind) => _.includes(errorPhases, podPhase(pod));\n\nconst isEvicted = (pod: PodKind) => podPhase(pod) === 'Evicted';\n\nconst isDeploymentGeneratedByWebConsole = (obj: K8sResourceKind) =>\n  obj.kind === 'Deployment' &&\n  obj.metadata?.annotations?.['openshift.io/generated-by'] === 'OpenShiftWebConsole';\n\nconst isPodWithoutImageId = (pod: PodKind) =>\n  pod.status?.phase === 'Pending' &&\n  pod.status?.containerStatuses?.some((containerStatus) => !containerStatus.imageID);\n\nexport const podCompare = (pod1: PodKind, pod2: PodKind): number => {\n  const error1 = isPodError(pod1);\n  const error2 = isPodError(pod2);\n\n  if (error1 !== error2) {\n    return error1 ? -1 : 1;\n  }\n\n  const evicted1 = isEvicted(pod1);\n  const evicted2 = isEvicted(pod2);\n\n  if (evicted1 !== evicted2) {\n    return evicted1 ? 1 : -1;\n  }\n\n  const runtime1 = podUpdateTime(pod1);\n  const runtime2 = podUpdateTime(pod2);\n\n  if (runtime1 < runtime2) {\n    return 1;\n  }\n  if (runtime1 > runtime2) {\n    return -1;\n  }\n\n  return pod1.metadata.name.localeCompare(pod2.metadata.name);\n};\n\nconst PodOverviewItem: React.FC<PodOverviewItemProps> = ({ pod }) => {\n  const {\n    metadata: { name, namespace },\n  } = pod;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"row\">\n        <span className=\"col-xs-5\">\n          <ResourceLink kind={kind} name={name} namespace={namespace} />\n        </span>\n        <span className=\"col-xs-3\">\n          <PodStatus pod={pod} />\n        </span>\n        <span className=\"col-xs-1\">\n          <PodTraffic podName={name} namespace={namespace} tooltipFlag />\n        </span>\n        <span className=\"col-xs-3 text-right\">\n          <Link to={`${resourcePath(kind, name, namespace)}/logs`}>{t('public~View logs')}</Link>\n        </span>\n      </div>\n    </li>\n  );\n};\n\nPodOverviewItem.displayName = 'PodOverviewItem';\n\ntype PodOverviewItemProps = {\n  pod: PodKind;\n};\n\nconst PodsOverviewList: React.FC<PodOverviewListProps> = ({ pods }) => (\n  <ul className=\"list-group\">\n    {_.map(pods, (pod) => (\n      <PodOverviewItem key={pod.metadata.uid} pod={pod} />\n    ))}\n  </ul>\n);\n\nPodsOverviewList.displayName = 'PodsOverviewList';\n\nconst isComplete = (build: K8sResourceKind) => build.status?.completionTimestamp;\n\n/**\n * Get the Shipwright BuildRun status for a pod's image if it exists, otherwise\n * return an empty object\n */\nconst useGetShipwrightBuilds = (namespace: string, name: string): K8sResourceKind[] => {\n  const watchedResources = {\n    buildRunBeta: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1beta1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n    buildRunAlpha: {\n      groupVersionKind: {\n        group: 'shipwright.io',\n        version: 'v1alpha1',\n        kind: 'BuildRun',\n      },\n      namespace,\n    },\n  };\n\n  // get all shipwright buildrun CRDs and concatenate into a list\n  const watchedBuildRuns = useK8sWatchResources(watchedResources);\n\n  const buildRuns = React.useMemo(() => {\n    const allBuildRuns = {\n      ...((watchedBuildRuns.buildRunBeta.data as object) || {}),\n      ...((watchedBuildRuns.buildRunAlpha.data as object) || {}),\n    };\n\n    return Object.keys(allBuildRuns)\n      .filter((key) => {\n        const buildRun = allBuildRuns[key] as K8sResourceKind;\n        return buildRun.spec?.build?.name === name;\n      })\n      .map((key) => allBuildRuns[key] as K8sResourceKind);\n  }, [watchedBuildRuns, name]);\n\n  return buildRuns;\n};\n\nconst buildRunIsComplete = (buildRun: K8sResourceKind) => {\n  const succeededCondition = buildRun?.status?.conditions?.find(\n    (condition) => condition.type === 'Succeeded',\n  );\n\n  return (\n    (succeededCondition?.status === 'True' || succeededCondition?.status === 'False') &&\n    succeededCondition?.reason === 'Succeeded'\n  );\n};\n\nexport const PodsOverviewContent: React.FC<PodsOverviewContentProps> = ({\n  obj,\n  pods,\n  loaded,\n  loadError,\n  allPodsLink,\n  emptyText,\n  buildConfigData,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const [showWaitingPods, setShowWaitingPods] = React.useState(false);\n  const shipwrightBuilds = useGetShipwrightBuilds(namespace, name);\n\n  const waitingForBuildConfig =\n    buildConfigData?.buildConfigs?.length > 0 &&\n    !buildConfigData.buildConfigs[0].builds.some((build) => isComplete(build));\n\n  const waitingForShipwright =\n    shipwrightBuilds?.length > 0 &&\n    !shipwrightBuilds.some((buildRun) => buildRunIsComplete(buildRun));\n\n  const showWaitingForBuildAlert =\n    (waitingForBuildConfig || waitingForShipwright) && isDeploymentGeneratedByWebConsole(obj);\n\n  let filteredPods = [...pods];\n  if (showWaitingForBuildAlert && !showWaitingPods) {\n    filteredPods = filteredPods.filter((pod) => !isPodWithoutImageId(pod));\n  }\n  filteredPods.sort(podCompare);\n\n  const errorPodCount = _.size(_.filter(pods, (pod) => isPodError(pod)));\n  const podsShown = Math.max(Math.min(errorPodCount, MAX_ERROR_PODS), MAX_PODS);\n  const linkTo = allPodsLink || `${resourcePath(referenceFor(obj), name, namespace)}/pods`;\n  const emptyMessage = emptyText || t('console-shared~No Pods found for this resource.');\n\n  const podAlert = showWaitingForBuildAlert ? (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~Waiting for the build')}\n      actionLinks={\n        <AlertActionLink\n          onClick={() => setShowWaitingPods(!showWaitingPods)}\n          data-test=\"waiting-pods\"\n        >\n          {showWaitingPods\n            ? t('console-shared~Hide waiting pods with errors')\n            : t('console-shared~Show waiting pods with errors')}\n        </AlertActionLink>\n      }\n    >\n      {t(\n        'console-shared~Waiting for the first build to run successfully. You may temporarily see \"ImagePullBackOff\" and \"ErrImagePull\" errors while waiting.',\n      )}\n    </Alert>\n  ) : null;\n\n  return (\n    <>\n      <SidebarSectionHeading text={t('public~Pods')}>\n        {_.size(pods) > podsShown && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('console-shared~View all {{podSize}}', { podSize: _.size(pods) })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {buildConfigData?.loaded && !buildConfigData?.loadError && podAlert}\n      {_.isEmpty(filteredPods) ? (\n        <span className=\"text-muted\">{loaded || !!loadError ? emptyMessage : <LoadingBox />}</span>\n      ) : (\n        <PodsOverviewList pods={_.take(filteredPods, podsShown)} />\n      )}\n    </>\n  );\n};\nPodsOverviewContent.displayName = 'PodsOverviewContent';\n\nexport const PodsOverview: React.FC<PodsOverviewProps> = ({\n  obj,\n  podsFilter,\n  hideIfEmpty = false,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const { podData, loadError, loaded } = usePodsWatcher(obj, obj.kind, namespace);\n\n  React.useEffect(() => {\n    if (!loadError && loaded) {\n      let updatedPods = podData.pods as PodKind[];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n    }\n  }, [podData, loadError, loaded, podsFilter]);\n\n  if (!pods.length && hideIfEmpty) {\n    return null;\n  }\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\nexport const PodsOverviewMultiple: React.FC<PodsOverviewMultipleProps> = ({\n  obj,\n  podResources,\n  podsFilter,\n  ...props\n}) => {\n  const {\n    metadata: { namespace },\n  } = obj;\n\n  const [pods, setPods] = React.useState<PodKind[]>([]);\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n  const [loadError, setLoadError] = React.useState<string>('');\n  const watchedResources = React.useMemo(() => getResourcesToWatchForPods('CronJob', namespace), [\n    namespace,\n  ]);\n\n  const resources = useK8sWatchResources(watchedResources);\n\n  React.useEffect(() => {\n    const errorKey = Object.keys(resources).find((key) => resources[key].loadError);\n    if (errorKey) {\n      setLoadError(resources[errorKey].loadError);\n      return;\n    }\n    setLoadError('');\n    if (\n      Object.keys(resources).length > 0 &&\n      Object.keys(resources).every((key) => resources[key].loaded)\n    ) {\n      let updatedPods = podResources?.length\n        ? podResources.reduce((acc, resource) => {\n            acc.push(...getPodsForResource(resource, resources));\n            return acc;\n          }, [])\n        : [];\n      if (podsFilter) {\n        updatedPods = updatedPods.filter(podsFilter);\n      }\n      setPods(updatedPods);\n      setLoaded(true);\n    }\n  }, [podResources, podsFilter, resources]);\n\n  return (\n    <PodsOverviewContent obj={obj} pods={pods} loaded={loaded} loadError={loadError} {...props} />\n  );\n};\n\ntype PodOverviewListProps = {\n  pods: PodKind[];\n};\n\ntype PodsOverviewContentProps = {\n  obj: K8sResourceKind;\n  pods: PodKind[];\n  loaded: boolean;\n  loadError: string;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n\ntype PodsOverviewProps = {\n  obj: K8sResourceKind;\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n  hideIfEmpty?: boolean;\n};\n\ntype PodsOverviewMultipleProps = {\n  obj: K8sResourceKind;\n  podResources: K8sResourceKind[];\n  allPodsLink?: string;\n  emptyText?: string;\n  buildConfigData?: BuildConfigData;\n  podsFilter?: (pod: PodKind) => boolean;\n};\n","import * as React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { SyncAltIcon } from '@patternfly/react-icons/dist/esm/icons/sync-alt-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { StatusIconAndText } from '@console/dynamic-plugin-sdk';\nimport { BuildLogLink, BuildNumberLink } from '@console/internal/components/build';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n  useAccessReview,\n} from '@console/internal/components/utils';\nimport { fromNow } from '@console/internal/components/utils/datetime';\nimport { BuildConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\nimport { BuildPhase, startBuild } from '@console/internal/module/k8s/builds';\nimport { LogSnippet, Status, BuildConfigOverviewItem } from '@console/shared';\n\nconst MAX_VISIBLE = 3;\n\nconst StatusTitle = ({ build }: { build: K8sResourceKind }) => {\n  const { t } = useTranslation();\n  switch (build.status.phase) {\n    case BuildPhase.Cancelled:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was cancelled\n        </Trans>\n      );\n    case BuildPhase.Complete:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> was complete\n        </Trans>\n      );\n    case BuildPhase.Error:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> encountered an error\n        </Trans>\n      );\n    case BuildPhase.Failed:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> failed\n        </Trans>\n      );\n    case BuildPhase.New:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is new\n        </Trans>\n      );\n    case BuildPhase.Pending:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is pending\n        </Trans>\n      );\n    case BuildPhase.Running:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is running\n        </Trans>\n      );\n    default:\n      return (\n        <Trans t={t} ns=\"topology\">\n          Build <BuildNumberLink build={build} /> is {build.status?.phase?.toLowerCase()}\n        </Trans>\n      );\n  }\n};\n\nconst BuildStatus = ({ build }: { build: K8sResourceKind }) => {\n  const {\n    status: { logSnippet, message, phase },\n  } = build;\n  const unsuccessful = [BuildPhase.Error, BuildPhase.Failed].includes(phase);\n  return unsuccessful ? <LogSnippet message={message} logSnippet={logSnippet} /> : null;\n};\n\nconst BuildOverviewItem: React.FC<BuildOverviewListItemProps> = ({ build }) => {\n  const {\n    metadata: { creationTimestamp },\n    status: { completionTimestamp, startTimestamp, phase },\n  } = build;\n  const lastUpdated = completionTimestamp || startTimestamp || creationTimestamp;\n  return (\n    <li className=\"list-group-item build-overview__item\">\n      <div className=\"build-overview__item-title\">\n        <div className=\"build-overview__status co-icon-and-text\">\n          <div className=\"co-icon-and-text__icon co-icon-flex-child\">\n            {phase === 'Running' ? (\n              <StatusIconAndText icon={<SyncAltIcon />} title={phase} spin iconOnly />\n            ) : (\n              <Status status={phase} iconOnly />\n            )}\n          </div>\n          <div>\n            <StatusTitle build={build} />\n            {lastUpdated && (\n              <>\n                {' '}\n                <span className=\"build-overview__item-time text-muted\">\n                  ({fromNow(lastUpdated)})\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div>\n          <BuildLogLink build={build} />\n        </div>\n      </div>\n      <BuildStatus build={build} />\n    </li>\n  );\n};\n\nconst BuildOverviewList: React.FC<BuildOverviewListProps> = ({ buildConfig }) => {\n  const {\n    metadata: { name, namespace },\n    builds,\n  } = buildConfig;\n  const { t } = useTranslation();\n\n  const canStartBuild = useAccessReview({\n    group: BuildConfigModel.apiGroup,\n    resource: BuildConfigModel.plural,\n    subresource: 'instantiate',\n    name,\n    namespace,\n    verb: 'create',\n  });\n  const onClick = () => {\n    startBuild(buildConfig).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    });\n  };\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item build-overview__item\">\n        <div className=\"build-overview__item-title\">\n          <div>\n            <ResourceLink inline kind=\"BuildConfig\" name={name} namespace={namespace} />\n          </div>\n          {builds.length > MAX_VISIBLE && (\n            <div>\n              <Link\n                className=\"sidebar__section-view-all\"\n                to={`${resourcePath(referenceFor(buildConfig), name, namespace)}/builds`}\n              >\n                {t('topology~View all {{buildsLength}}', {\n                  buildsLength: builds.length,\n                })}\n              </Link>\n            </div>\n          )}\n          {canStartBuild && (\n            <div>\n              <Button variant=\"secondary\" onClick={onClick} data-test-id=\"start-build-action\">\n                {t('topology~Start Build')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </li>\n      {!(builds?.length > 0) ? (\n        <li className=\"list-group-item\">\n          <span className=\"text-muted\">{t('topology~No Builds found for this Build Config.')}</span>\n        </li>\n      ) : (\n        builds\n          .slice(0, MAX_VISIBLE)\n          .map((build) => <BuildOverviewItem key={build.metadata.uid} build={build} />)\n      )}\n    </ul>\n  );\n};\nexport const BuildOverview: React.FC<BuildConfigsOverviewProps> = ({ buildConfigs }) => {\n  const { t } = useTranslation();\n  if (!(buildConfigs?.length > 0)) {\n    return null;\n  }\n  return (\n    <div className=\"build-overview\">\n      <SidebarSectionHeading text={t('topology~Builds')} />\n      {buildConfigs.map((buildConfig) => (\n        <BuildOverviewList key={buildConfig.metadata.uid} buildConfig={buildConfig} />\n      ))}\n    </div>\n  );\n};\ntype BuildOverviewListItemProps = {\n  build: K8sResourceKind;\n};\ntype BuildOverviewListProps = {\n  buildConfig: BuildConfigOverviewItem;\n};\ntype BuildConfigsOverviewProps = {\n  buildConfigs: BuildConfigOverviewItem[];\n  loaded?: boolean;\n  loadError?: string;\n};\n","import * as React from 'react';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { useTranslation } from 'react-i18next';\nimport { RouteLocation } from '@console/internal/components/routes';\nimport { ResourceLink, SidebarSectionHeading } from '@console/internal/components/utils';\nimport { K8sResourceKind, RouteKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher, useServicesWatcher } from '@console/shared';\n\nconst ServicePortList: React.FC<ServicePortListProps> = ({ service }) => {\n  const ports = service.spec?.ports ?? [];\n  const { t } = useTranslation();\n  return (\n    <ul className=\"port-list\">\n      {ports.map(({ name, port, protocol, targetPort }) => (\n        <li key={name || `${protocol}/${port}`}>\n          <span className=\"text-muted\">{t('topology~Service port:')}</span>{' '}\n          {name || `${protocol}/${port}`}\n          &nbsp;\n          <LongArrowAltRightIcon />\n          &nbsp;\n          <span className=\"text-muted\">{t('topology~Pod port:')}</span> {targetPort}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst ServicesOverviewListItem: React.FC<ServiceOverviewListItemProps> = ({ service }) => {\n  const { name, namespace } = service.metadata;\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Service\" name={name} namespace={namespace} />\n      <ServicePortList service={service} />\n    </li>\n  );\n};\n\nconst ServicesOverviewList: React.FC<ServiceOverviewListProps> = ({ services }) => (\n  <ul className=\"list-group\">\n    {services?.map((service) => (\n      <ServicesOverviewListItem key={service.metadata.uid} service={service} />\n    ))}\n  </ul>\n);\n\nconst RoutesOverviewListItem: React.FC<RoutesOverviewListItemProps> = ({ route }) => {\n  const { name, namespace } = route.metadata;\n  const { t } = useTranslation();\n  return (\n    <li className=\"list-group-item\">\n      <ResourceLink kind=\"Route\" name={name} namespace={namespace} />\n      <span className=\"text-muted\">{t('topology~Location:')}</span>\n      <RouteLocation obj={route} />\n    </li>\n  );\n};\n\nconst RoutesOverviewList: React.FC<RoutesOverviewListProps> = ({ routes }) => (\n  <ul className=\"list-group\">\n    {routes?.map((route) => (\n      <RoutesOverviewListItem key={route.metadata.uid} route={route} />\n    ))}\n  </ul>\n);\n\nexport const NetworkingOverview: React.FC<NetworkingOverviewProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const serviceResources = useServicesWatcher(obj);\n  const services =\n    serviceResources.loaded && !serviceResources.loadError ? serviceResources.services : [];\n  const routeResources = useRoutesWatcher(obj);\n  const routes = routeResources.loaded && !routeResources.loadError ? routeResources.routes : [];\n  return (\n    <>\n      <SidebarSectionHeading text={t('topology~Services')} />\n      {!(services?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Services found for this resource.')}</span>\n      ) : (\n        <ServicesOverviewList services={services} />\n      )}\n\n      <SidebarSectionHeading text={t('topology~Routes')} />\n      {!(routes?.length > 0) ? (\n        <span className=\"text-muted\">{t('topology~No Routes found for this resource.')}</span>\n      ) : (\n        <RoutesOverviewList routes={routes} />\n      )}\n    </>\n  );\n};\n\ntype RoutesOverviewListProps = {\n  routes: RouteKind[];\n};\n\ntype RoutesOverviewListItemProps = {\n  route: RouteKind;\n};\n\ntype NetworkingOverviewProps = {\n  obj: K8sResourceKind;\n};\n\ntype ServicePortListProps = {\n  service: K8sResourceKind;\n};\n\ntype ServiceOverviewListProps = {\n  services: K8sResourceKind[];\n};\n\ntype ServiceOverviewListItemProps = {\n  service: K8sResourceKind;\n};\n","import * as React from 'react';\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport {\n  ResourceLink,\n  resourcePath,\n  SidebarSectionHeading,\n} from '@console/internal/components/utils';\nimport { K8sResourceKind, referenceFor, JobKind } from '@console/internal/module/k8s';\nimport { PodStatus, usePodsWatcher } from '@console/shared';\n\nconst kind: string = 'Job';\nconst MAX_JOBS: number = 3;\n\nconst JobOverviewItem: React.FC<JobOverviewItemProps> = ({ job }) => {\n  const {\n    metadata: { name, namespace },\n  } = job;\n  const podsLink = `${resourcePath(referenceFor(job), name, namespace)}/pods`;\n  const { podData, loaded, loadError } = usePodsWatcher(job, 'Job', namespace);\n\n  return loaded && !loadError ? (\n    <li className=\"list-group-item container-fluid\">\n      <div className=\"job-overview__item\">\n        <ResourceLink kind={kind} name={name} namespace={namespace} />\n        <Link to={podsLink} className=\"overview__pod-donut-sm\">\n          <PodStatus\n            standalone\n            data={podData.pods}\n            size={25}\n            innerRadius={8}\n            outerRadius={12}\n            title={`${podData.pods.length}`}\n            titleComponent={<ChartLabel style={{ fontSize: '10px' }} />}\n            showTooltip={false}\n          />\n        </Link>\n      </div>\n    </li>\n  ) : null;\n};\n\nJobOverviewItem.displayName = 'JobOverviewItem';\n\ntype JobOverviewItemProps = {\n  job: JobKind;\n};\n\nconst JobsOverviewList: React.FC<JobsOverviewListProps> = ({ jobs }) => (\n  <ul className=\"list-group\">\n    {jobs?.map((job) => (\n      <JobOverviewItem key={job.metadata.uid} job={job} />\n    ))}\n  </ul>\n);\n\nJobsOverviewList.displayName = 'JobsOverviewList';\n\nexport const JobsOverview: React.FC<JobsOverviewProps> = ({\n  jobs,\n  obj,\n  allJobsLink,\n  emptyText,\n}) => {\n  const {\n    metadata: { name, namespace },\n  } = obj;\n  const { t } = useTranslation();\n  const linkTo = allJobsLink || `${resourcePath(referenceFor(obj), name, namespace)}/jobs`;\n  const emptyMessage = emptyText || t('topology~No Jobs found for this resource.');\n\n  return (\n    <>\n      <SidebarSectionHeading text=\"Jobs\">\n        {jobs?.length > MAX_JOBS && (\n          <Link className=\"sidebar__section-view-all\" to={linkTo}>\n            {t('topology~View all ({{jobCount}})', { jobCount: jobs.length })}\n          </Link>\n        )}\n      </SidebarSectionHeading>\n      {!(jobs?.length > 0) ? (\n        <span className=\"text-muted\">{emptyMessage}</span>\n      ) : (\n        <JobsOverviewList jobs={jobs.slice(0, MAX_JOBS)} />\n      )}\n    </>\n  );\n};\n\ntype JobsOverviewListProps = {\n  jobs: JobKind[];\n};\n\ntype JobsOverviewProps = {\n  jobs: JobKind[];\n  obj: K8sResourceKind;\n  allJobsLink?: string;\n  emptyText?: string;\n};\n","import * as React from 'react';\nimport { Node, TopologyQuadrant } from '@patternfly/react-topology/dist/esm/types';\nimport { TopologyDecorator } from '../../../../../topology-types';\n\nconst getExtensionDecoratorForQuadrant = (\n  location: string,\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number,\n  decoratorRadius: number,\n  nodeWidth: number,\n  nodeHeight: number,\n): React.ReactElement => {\n  let x: number;\n  let y: number;\n  const deltaX = nodeRadius > 0 ? nodeRadius : nodeWidth / 2;\n  const deltaY = nodeRadius > 0 ? nodeRadius : nodeHeight / 2;\n  const offset = nodeRadius > 0 ? decoratorRadius * 0.7 : 0;\n  switch (location) {\n    case TopologyQuadrant.upperRight:\n      x = centerX + deltaX - offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerRight:\n      x = centerX + deltaX - offset;\n      y = centerY + deltaY - offset;\n      break;\n    case TopologyQuadrant.upperLeft:\n      x = centerX - deltaX + offset;\n      y = centerY - deltaY + offset;\n      break;\n    case TopologyQuadrant.lowerLeft:\n      x = centerX - deltaX + offset;\n      y = centerY + deltaY - offset;\n      break;\n    default:\n      x = centerX;\n      y = centerY;\n  }\n\n  let retDecorator;\n  let i = 0;\n  const length = decorators?.[location]?.length ?? 0;\n  while (!retDecorator && i < length) {\n    retDecorator = decorators[location][i++].decorator(element, decoratorRadius, x, y);\n  }\n  return retDecorator;\n};\n\nexport const getNodeDecorators = (\n  element: Node,\n  decorators: { [key: string]: TopologyDecorator[] },\n  centerX: number,\n  centerY: number,\n  nodeRadius: number, // -1 to use width/height\n  decoratorRadius: number,\n  nodeWidth?: number,\n  nodeHeight?: number,\n): React.ReactNode => {\n  const keys = decorators ? Object.keys(decorators) : [];\n  return (\n    <>\n      {keys.map((key) =>\n        getExtensionDecoratorForQuadrant(\n          key,\n          element,\n          decorators,\n          centerX,\n          centerY,\n          nodeRadius,\n          decoratorRadius,\n          nodeWidth,\n          nodeHeight,\n        ),\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { useRoutesWatcher } from '@console/shared';\nimport { ROUTE_DISABLED_ANNOTATION, ROUTE_URL_ANNOTATION } from '../const';\nimport { getRoutesURL } from '../utils/topology-utils';\n\nexport const useRoutesURL = (resource: K8sResourceKind): string => {\n  const disabled = resource?.metadata?.annotations?.[ROUTE_DISABLED_ANNOTATION] === 'true';\n  const annotationURL = resource?.metadata?.annotations?.[ROUTE_URL_ANNOTATION];\n\n  const routeResources = useRoutesWatcher(resource);\n  const routes = React.useMemo(\n    () => (routeResources.loaded && !routeResources.loadError ? routeResources.routes : []),\n    [routeResources],\n  );\n  const watchedURL = React.useMemo(() => getRoutesURL(resource, routes), [resource, routes]);\n\n  const url = annotationURL || watchedURL;\n  if (disabled || !url || !(url.startsWith('http://') || url.startsWith('https://'))) {\n    return null;\n  }\n  return url;\n};\n","import * as React from 'react';\nimport { GraphElement, ElementContext, ContextMenu } from '@patternfly/react-topology';\nimport { observer } from 'mobx-react';\nimport { ActionContext, ActionServiceProvider } from '@console/shared';\nimport { createContextMenuItems } from '../../../actions';\n\ntype Reference = React.ComponentProps<typeof ContextMenu>['reference'];\n\nexport interface WithContextMenuProps {\n  onContextMenu: (e: React.MouseEvent) => void;\n  contextMenuOpen: boolean;\n}\n\nconst withContextMenu = <E extends GraphElement>(\n  actionContext: (element: E) => ActionContext,\n  container?: Element | null | undefined | (() => Element),\n  className?: string,\n  atPoint: boolean = true,\n) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<Partial<P>>) => {\n  const Component: React.FC<Omit<P, keyof WithContextMenuProps>> = (props) => {\n    const element = React.useContext(ElementContext);\n    const [reference, setReference] = React.useState<Reference | null>(null);\n    const onContextMenu = React.useCallback((e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setReference(\n        atPoint\n          ? {\n              x: e.pageX,\n              y: e.pageY,\n            }\n          : e.currentTarget,\n      );\n    }, []);\n\n    return (\n      <>\n        <WrappedComponent\n          {...(props as any)}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={!!reference}\n        />\n        {reference ? (\n          <ActionServiceProvider context={actionContext(element as E)}>\n            {({ options, loaded }) =>\n              loaded ? (\n                <ContextMenu\n                  reference={reference}\n                  container={container}\n                  className={className}\n                  open\n                  onRequestClose={() => setReference(null)}\n                >\n                  {createContextMenuItems(options)}\n                </ContextMenu>\n              ) : null\n            }\n          </ActionServiceProvider>\n        ) : null}\n      </>\n    );\n  };\n  Component.displayName = `withContextMenu(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return observer(Component);\n};\n\nexport default withContextMenu;\n","import * as React from 'react';\nimport {\n  GraphComponent as BaseGraphComponent,\n  WithContextMenuProps,\n} from '@patternfly/react-topology';\nimport * as classNames from 'classnames';\n\ntype GraphComponentProps = React.ComponentProps<typeof BaseGraphComponent> & {\n  dragInProgress?: boolean;\n  dragEditInProgress?: boolean;\n  hasDropTarget?: boolean;\n  dragCreate?: boolean;\n} & WithContextMenuProps;\n\nconst DRAG_ACTIVE_CLASS = 'odc-m-drag-active';\nconst VALID_DROP_CLASS = 'odc-m-valid-drop-target';\n\nconst GraphComponent: React.FC<GraphComponentProps> = (props) => {\n  const { dragInProgress, dragEditInProgress, hasDropTarget, dragCreate } = props;\n  const graphClasses = classNames('odc-graph', { 'odc-m-drag-create': dragCreate });\n  const controller = props.element.getController();\n\n  React.useEffect(() => {\n    controller.setRenderConstraint(!dragInProgress);\n  }, [controller, dragInProgress]);\n\n  React.useEffect(() => {\n    const addClassList = [];\n    const removeClassList = [];\n\n    dragEditInProgress\n      ? addClassList.push(DRAG_ACTIVE_CLASS)\n      : removeClassList.push(DRAG_ACTIVE_CLASS);\n    hasDropTarget ? addClassList.push(VALID_DROP_CLASS) : removeClassList.push(VALID_DROP_CLASS);\n\n    if (addClassList.length) {\n      addClassList.forEach((className) => document.body.classList.add(className));\n    }\n    if (removeClassList.length) {\n      removeClassList.forEach((className) => document.body.classList.remove(className));\n    }\n  }, [dragEditInProgress, hasDropTarget]);\n  return (\n    <g className={graphClasses}>\n      <BaseGraphComponent {...props} />\n    </g>\n  );\n};\n\nexport default GraphComponent;\n","export const TOPOLOGY_DISPLAY_FILTERS_LOCAL_STORAGE_KEY = `bridge/topology-display-filters`;\n","import * as React from 'react';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '@console/shared';\n\nimport './RegroupHint.scss';\n\nconst RegroupHint: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"odc-regroup-hint\">\n      <InfoCircleIcon className=\"odc-regroup-hint__icon\" />\n      <span className=\"odc-regroup-hint__text\">\n        <ShortcutTable>\n          <Shortcut shift drag>\n            {t('topology~Edit application grouping')}\n          </Shortcut>\n        </ShortcutTable>\n      </span>\n    </div>\n  );\n};\n\nexport default RegroupHint;\n","import * as React from 'react';\nimport CollapseIcon from '@patternfly/react-icons/dist/esm/icons/compress-alt-icon';\nimport { css } from '@patternfly/react-styles';\nimport {\n  NodeLabel,\n  Layer,\n  GROUPS_LAYER,\n  hullPath,\n  maxPadding,\n  useCombineRefs,\n  useHover,\n  BadgeLocation,\n  isGraph,\n  Node,\n  NodeShape,\n  NodeStyle,\n  PointTuple,\n  useDragNode,\n  useSvgAnchor,\n  WithContextMenuProps,\n  WithDndDropProps,\n  WithDragNodeProps,\n  WithSelectionProps,\n  CollapsibleGroupProps,\n} from '@patternfly/react-topology';\nimport styles from '@patternfly/react-topology/dist/js/css/topology-components';\nimport { polygonHull } from 'd3-polygon';\nimport * as _ from 'lodash';\nimport { observer } from 'mobx-react';\n\ntype ApplicationGroupExpandedProps = {\n  className?: string;\n  element: Node;\n  droppable?: boolean;\n  canDrop?: boolean;\n  dropTarget?: boolean;\n  dragging?: boolean;\n  hover?: boolean;\n  label?: string; // Defaults to element.getLabel()\n  secondaryLabel?: string;\n  showLabel?: boolean; // Defaults to true\n  truncateLength?: number; // Defaults to 13\n  badge?: string;\n  badgeColor?: string;\n  badgeTextColor?: string;\n  badgeBorderColor?: string;\n  badgeClassName?: string;\n  badgeLocation?: BadgeLocation;\n  labelIconClass?: string; // Icon to show in label\n  labelIcon?: string;\n  labelIconPadding?: number;\n} & Partial<\n  CollapsibleGroupProps &\n    WithDragNodeProps &\n    WithSelectionProps &\n    WithDndDropProps &\n    WithContextMenuProps\n>;\n\ntype PointWithSize = [number, number, number];\n\n// Return the point whose Y is the largest value.\n// If multiple points are found, compute the center X between them\n// export for testing only\nexport function computeLabelLocation(points: PointWithSize[]): PointWithSize {\n  let lowPoints: PointWithSize[];\n  const threshold = 5;\n\n  _.forEach(points, (p) => {\n    const delta = !lowPoints ? Infinity : Math.round(p[1]) - Math.round(lowPoints[0][1]);\n    if (delta > threshold) {\n      lowPoints = [p];\n    } else if (Math.abs(delta) <= threshold) {\n      lowPoints.push(p);\n    }\n  });\n  return [\n    (_.minBy(lowPoints, (p) => p[0])[0] + _.maxBy(lowPoints, (p) => p[0])[0]) / 2,\n    lowPoints[0][1],\n    // use the max size value\n    _.maxBy(lowPoints, (p) => p[2])[2],\n  ];\n}\n\nconst ApplicationGroupExpanded: React.FunctionComponent<ApplicationGroupExpandedProps> = ({\n  className,\n  element,\n  collapsible,\n  selected,\n  onSelect,\n  hover,\n  label,\n  secondaryLabel,\n  showLabel = true,\n  truncateLength,\n  dndDropRef,\n  droppable,\n  canDrop,\n  dropTarget,\n  onContextMenu,\n  contextMenuOpen,\n  dragging,\n  dragNodeRef,\n  badge,\n  badgeColor,\n  badgeTextColor,\n  badgeBorderColor,\n  badgeClassName,\n  badgeLocation,\n  labelIconClass,\n  labelIcon,\n  labelIconPadding,\n  onCollapseChange,\n}) => {\n  const [hovered, hoverRef] = useHover();\n  const [labelHover, labelHoverRef] = useHover();\n  const dragLabelRef = useDragNode()[1];\n  const refs = useCombineRefs<SVGPathElement>(hoverRef, dragNodeRef);\n  const isHover = hover !== undefined ? hover : hovered;\n  const anchorRef = useSvgAnchor();\n  const outlineRef = useCombineRefs(dndDropRef, anchorRef);\n  const labelLocation = React.useRef<PointWithSize>();\n  const pathRef = React.useRef<string>();\n\n  let parent = element.getParent();\n  let altGroup = false;\n  while (!isGraph(parent)) {\n    altGroup = !altGroup;\n    parent = parent.getParent();\n  }\n\n  // cast to number and coerce\n  const padding = maxPadding(element.getStyle<NodeStyle>().padding);\n  const hullPadding = (point: PointWithSize | PointTuple) => (point[2] || 0) + padding;\n\n  if (!droppable || !pathRef.current || !labelLocation.current) {\n    const children = element.getNodes().filter((c) => c.isVisible());\n    if (children.length === 0) {\n      return null;\n    }\n    const points: (PointWithSize | PointTuple)[] = [];\n    _.forEach(children, (c) => {\n      if (c.getNodeShape() === NodeShape.circle) {\n        const bounds = c.getBounds();\n        const { width, height } = bounds;\n        const { x, y } = bounds.getCenter();\n        const radius = Math.max(width, height) / 2;\n        points.push([x, y, radius] as PointWithSize);\n      } else {\n        // add all 4 corners\n        const { width, height, x, y } = c.getBounds();\n        points.push([x, y, 0] as PointWithSize);\n        points.push([x + width, y, 0] as PointWithSize);\n        points.push([x, y + height, 0] as PointWithSize);\n        points.push([x + width, y + height, 0] as PointWithSize);\n      }\n    });\n    const hullPoints: (PointWithSize | PointTuple)[] =\n      points.length > 2 ? polygonHull(points as PointTuple[]) : (points as PointTuple[]);\n    if (!hullPoints) {\n      return null;\n    }\n\n    // change the box only when not dragging\n    pathRef.current = hullPath(hullPoints as PointTuple[], hullPadding);\n\n    // Compute the location of the group label.\n    labelLocation.current = computeLabelLocation(hullPoints as PointWithSize[]);\n  }\n\n  const groupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n  );\n  const innerGroupClassName = css(\n    styles.topologyGroup,\n    className,\n    altGroup && 'pf-m-alt-group',\n    canDrop && 'pf-m-highlight',\n    dragging && 'pf-m-dragging',\n    selected && 'pf-m-selected',\n    (isHover || labelHover) && 'pf-m-hover',\n    canDrop && dropTarget && 'pf-m-drop-target',\n  );\n\n  return (\n    <g\n      ref={labelHoverRef}\n      onContextMenu={onContextMenu}\n      onClick={onSelect}\n      className={groupClassName}\n    >\n      <Layer id={GROUPS_LAYER}>\n        <g\n          ref={refs}\n          onContextMenu={onContextMenu}\n          onClick={onSelect}\n          className={innerGroupClassName}\n        >\n          <path ref={outlineRef} className={styles.topologyGroupBackground} d={pathRef.current} />\n        </g>\n      </Layer>\n      {showLabel && (\n        <NodeLabel\n          className={styles.topologyGroupLabel}\n          data-test={`group-label-text`}\n          x={labelLocation.current[0]}\n          y={labelLocation.current[1] + hullPadding(labelLocation.current) + 24}\n          paddingX={8}\n          paddingY={5}\n          dragRef={dragNodeRef ? dragLabelRef : undefined}\n          status={element.getNodeStatus()}\n          secondaryLabel={secondaryLabel}\n          truncateLength={truncateLength}\n          badge={badge}\n          badgeColor={badgeColor}\n          badgeTextColor={badgeTextColor}\n          badgeBorderColor={badgeBorderColor}\n          badgeClassName={badgeClassName}\n          badgeLocation={badgeLocation}\n          labelIconClass={labelIconClass}\n          labelIcon={labelIcon}\n          labelIconPadding={labelIconPadding}\n          onContextMenu={onContextMenu}\n          contextMenuOpen={contextMenuOpen}\n          hover={isHover || labelHover}\n          actionIcon={collapsible ? <CollapseIcon /> : undefined}\n          onActionIconClick={() => onCollapseChange(element, true)}\n        >\n          {label || element.getLabel()}\n        </NodeLabel>\n      )}\n    </g>\n  );\n};\n\nexport default observer(ApplicationGroupExpanded);\n","import { Graph, Layout, LayoutFactory } from '@patternfly/react-topology';\nimport TopologyColaLayout from './TopologyColaLayout';\n\nconst COLA_LAYOUT = 'Cola';\n\nconst DEFAULT_LAYOUT = COLA_LAYOUT;\n\nconst SUPPORTED_LAYOUTS = [COLA_LAYOUT];\n\nconst layoutFactory: LayoutFactory = (type: string, graph: Graph): Layout | undefined => {\n  return type === COLA_LAYOUT ? new TopologyColaLayout(graph, { layoutOnDrag: false }) : undefined;\n};\n\nexport { COLA_LAYOUT, DEFAULT_LAYOUT, SUPPORTED_LAYOUTS, layoutFactory };\n","import {\n  ColaLayout,\n  ColaNode,\n  ColaGroup,\n  ColaLink,\n  Graph,\n  GraphModel,\n} from '@patternfly/react-topology';\nimport { layoutConstraints } from '@console/knative-plugin/src/topology/layouts/layoutConstraints';\n\nclass TopologyColaLayout extends ColaLayout {\n  protected getConstraints(nodes: ColaNode[], groups: ColaGroup[], edges: ColaLink[]): any[] {\n    return layoutConstraints(nodes, groups, edges, this.options);\n  }\n\n  protected startLayout(\n    graph: Graph<GraphModel, any>,\n    initialRun: boolean,\n    addingNodes: boolean,\n  ): void {\n    if (graph.getNodes()?.filter((n) => n.isVisible()).length === 0) {\n      return;\n    }\n    super.startLayout(graph, initialRun, addingNodes);\n  }\n}\n\nexport default TopologyColaLayout;\n","import {\n  ColaGroup,\n  ColaLink,\n  ColaNode,\n  getGroupPadding,\n  LayoutOptions,\n} from '@patternfly/react-topology';\nimport * as _ from 'lodash';\nimport {\n  TYPE_EVENT_SOURCE_LINK,\n  TYPE_KNATIVE_SERVICE,\n  TYPE_EVENT_PUB_SUB,\n  TYPE_EVENT_PUB_SUB_LINK,\n  TYPE_SINK_URI,\n  TYPE_EVENT_SINK_LINK,\n} from '../const';\n\nconst getNodeTimeStamp = (node: ColaNode): Date => {\n  const data = node.element.getData();\n  return new Date(_.get(data, 'resources.obj.metadata.creationTimestamp', 0));\n};\n\n// Sort nodes most recent to least recent\nconst nodeSorter = (node1: ColaNode, node2: ColaNode) =>\n  getNodeTimeStamp(node1) > getNodeTimeStamp(node2) ? -1 : 1;\n\nconst alignNodeConnector = (\n  edges: ColaLink[],\n  type: string,\n  g: ColaGroup | ColaNode,\n  options: LayoutOptions,\n  filteredNode,\n): any[] => {\n  const constraints = [];\n  const connectorLinks = edges\n    .filter(\n      (e) =>\n        e.element.getType() === type &&\n        !e.target.isFixed &&\n        !e.source.isFixed &&\n        (e.target.element === g.element ||\n          e.source.element === g.element ||\n          e.target.element.getParent() === g.element),\n    )\n    .sort((l1: ColaLink, l2: ColaLink) => nodeSorter(l1.source, l2.source));\n  if (connectorLinks.length) {\n    const height = connectorLinks.reduce((current: number, nextLink: ColaLink) => {\n      return current + nextLink.source.height;\n    }, 0);\n    const serviceDistance =\n      g instanceof ColaGroup\n        ? (filteredNode as ColaNode).radius + getGroupPadding(g.element)\n        : (filteredNode as ColaNode).width / 2;\n\n    const linkNodeConstraint: any = {\n      type: 'alignment',\n      axis: 'y',\n      offsets: [{ node: connectorLinks[0].target.index, offset: 0 }],\n    };\n    let nextOffset = -height / 2;\n    connectorLinks.forEach((link: ColaLink) => {\n      // Evenly space out the nodes vertically\n      if (type === TYPE_EVENT_PUB_SUB_LINK) {\n        linkNodeConstraint.offsets.push({\n          node: link.target.index,\n          offset: nextOffset + link.target.height / 2,\n        });\n      } else {\n        linkNodeConstraint.offsets.push({\n          node: link.source.index,\n          offset: nextOffset + link.source.height / 2,\n        });\n      }\n\n      if (type === TYPE_EVENT_SINK_LINK) {\n        // Keep the event sink to the right\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: link.target.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      } else {\n        // Keep the event sources to the left\n        constraints.push({\n          axis: 'x',\n          left: link.source.index,\n          right: filteredNode.index,\n          gap: serviceDistance + link.source.width / 2 + options.linkDistance,\n          equality: true,\n        });\n      }\n      nextOffset += link.source.height;\n    });\n    constraints.push(linkNodeConstraint);\n  }\n  return constraints;\n};\n\nexport const layoutConstraints = (\n  nodes: ColaNode[],\n  groups: ColaGroup[],\n  edges: ColaLink[],\n  options: LayoutOptions,\n): any[] => {\n  let constraints: any[] = [];\n\n  [...groups, ...nodes]\n    .filter((g) =>\n      [TYPE_EVENT_PUB_SUB, TYPE_SINK_URI, TYPE_KNATIVE_SERVICE].includes(g.element.getType()),\n    )\n    .forEach((g) => {\n      const leafNodes =\n        g instanceof ColaGroup && g.leaves.sort(nodeSorter).filter((n) => !n.isFixed);\n      const filteredNode = (leafNodes && _.first(leafNodes)) || g;\n      if (g.element.getType() === TYPE_KNATIVE_SERVICE) {\n        const serviceConstraint: any = {\n          type: 'alignment',\n          axis: 'y',\n          offsets: [],\n        };\n\n        // Sort revisions such that most recent is to the left\n        if (leafNodes) {\n          for (let i = 0; i < leafNodes.length; i++) {\n            serviceConstraint.offsets.push({ node: leafNodes[i].index, offset: 0 });\n            if (i < leafNodes.length - 1) {\n              // Space out each revision horizontally\n              constraints.push({\n                axis: 'x',\n                left: leafNodes[i].index,\n                right: leafNodes[i + 1].index,\n                gap: leafNodes[i].width,\n                equality: true,\n              });\n            }\n          }\n          if (serviceConstraint.offsets.length) {\n            constraints.push(serviceConstraint);\n          }\n        }\n      }\n\n      const eventSourceLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SOURCE_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const pubSubLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_PUB_SUB_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      const eventSinkLinksConnector = alignNodeConnector(\n        edges,\n        TYPE_EVENT_SINK_LINK,\n        g,\n        options,\n        filteredNode,\n      );\n\n      constraints = [\n        ...constraints,\n        ...eventSourceLinksConnector,\n        ...pubSubLinksConnector,\n        ...eventSinkLinksConnector,\n      ];\n    });\n  return constraints;\n};\n","import * as React from 'react';\nimport {\n  TopologyControlBar as PfTopologyControlBar,\n  observer,\n  action,\n  createTopologyControlButtons,\n  defaultControlButtonsOptions,\n  Visualization,\n} from '@patternfly/react-topology';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopologyControlBar.scss';\n\ninterface ControlBarProps {\n  visualization: Visualization;\n  isDisabled: boolean;\n}\n\nconst TopologyControlBar: React.FC<ControlBarProps> = observer(({ visualization, isDisabled }) => {\n  const { t } = useTranslation();\n  return (\n    <span className=\"pf-topology-control-bar odc-topology-control-bar\">\n      <PfTopologyControlBar\n        controlButtons={[\n          ...createTopologyControlButtons({\n            ...defaultControlButtonsOptions,\n            zoomInCallback: action(() => {\n              visualization.getGraph().scaleBy(4 / 3);\n            }),\n            zoomInTip: t('topology~Zoom in'),\n            zoomInAriaLabel: t('topology~Zoom in'),\n            zoomInDisabled: isDisabled,\n            zoomOutCallback: action(() => {\n              visualization.getGraph().scaleBy(0.75);\n            }),\n            zoomOutTip: t('topology~Zoom out'),\n            zoomOutAriaLabel: t('topology~Zoom out'),\n            zoomOutDisabled: isDisabled,\n            fitToScreenCallback: action(() => {\n              visualization.getGraph().fit(80);\n            }),\n            fitToScreenTip: t('topology~Fit to screen'),\n            fitToScreenAriaLabel: t('topology~Fit to screen'),\n            fitToScreenDisabled: isDisabled,\n            resetViewCallback: action(() => {\n              visualization.getGraph().reset();\n              visualization.getGraph().layout();\n            }),\n            resetViewTip: t('topology~Reset view'),\n            resetViewAriaLabel: t('topology~Reset view'),\n            resetViewDisabled: isDisabled,\n            legend: false,\n          }),\n        ]}\n      />\n    </span>\n  );\n});\n\nexport default TopologyControlBar;\n"],"sourceRoot":""}