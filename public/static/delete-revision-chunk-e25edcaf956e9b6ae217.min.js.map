{"version":3,"sources":["webpack:///./packages/knative-plugin/src/components/revisions/DeleteRevisionModal.tsx","webpack:///./public/components/secrets/create-secret/index.tsx","webpack:///./packages/knative-plugin/src/components/revisions/DeleteRevisionModalController.tsx","webpack:///./packages/pipelines-plugin/src/models/index.ts","webpack:///./packages/git-service/src/types/index.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/const.ts","webpack:///./packages/topology/src/utils/topology-utils.ts","webpack:///./public/components/secrets/create-secret/utils.ts","webpack:///./packages/git-service/src/index.ts","webpack:///./packages/git-service/src/services/base-service.ts","webpack:///./public/components/secrets/create-secret/DropableFileInput.tsx","webpack:///./packages/pipelines-plugin/src/types/index.ts","webpack:///./packages/console-shared/src/utils/proxy.ts","webpack:///./public/components/secrets/create-secret/SecretFormWrapper.tsx","webpack:///./packages/dev-console/src/components/import/import-types.ts","webpack:///./public/components/secrets/create-secret/SecretSubForm.tsx","webpack:///./public/components/secrets/create-secret/SourceSecretForm.tsx","webpack:///./public/components/secrets/create-secret/BasicAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/SSHAuthSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretForm.tsx","webpack:///./public/components/secrets/create-secret/CreateConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/PullSecretCredentialEntry.tsx","webpack:///./public/components/secrets/create-secret/UploadConfigSubform.tsx","webpack:///./public/components/secrets/create-secret/WebHookSecretForm.tsx","webpack:///./public/components/secrets/create-secret/GenericSecretForm.tsx","webpack:///./public/components/secrets/create-secret/KeyValueEntryForm.tsx","webpack:///./packages/git-service/src/types/git.ts","webpack:///./packages/git-service/src/services/github-service.ts","webpack:///./packages/git-service/src/services/bitbucket-service.ts","webpack:///./packages/git-service/src/services/gitlab-service.ts","webpack:///./packages/git-service/src/services/gitea-service.ts","webpack:///./packages/git-service/src/utils/build-tool-type-detector.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-filter-reducer.ts","webpack:///./packages/pipelines-plugin/src/components/import/import-types.ts","webpack:///./packages/dev-console/src/components/import/validation-schema.ts","webpack:///./packages/pipelines-plugin/src/models/pipelines.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-utils.ts","webpack:///./packages/dev-console/src/utils/yup-validation-util.ts","webpack:///./packages/topology/src/utils/application-utils.ts","webpack:///./packages/pipelines-plugin/src/types/coreTekton.ts","webpack:///./packages/pipelines-plugin/src/types/pipelineRun.ts","webpack:///./packages/pipelines-plugin/src/types/taskRun.ts","webpack:///./packages/pipelines-plugin/src/types/computedStatus.ts","webpack:///./packages/git-service/src/utils/import-strategy-detector.ts","webpack:///./packages/knative-plugin/src/topology/const.ts","webpack:///./packages/pipelines-plugin/src/utils/pipeline-augment.ts","webpack:///./public/components/secrets/create-secret/EditSecret.tsx","webpack:///./public/components/secrets/create-secret/CreateSecret.tsx","webpack:///./packages/git-service/src/types/repo.ts","webpack:///./packages/git-service/src/types/build-tools.ts","webpack:///./packages/git-service/src/services/index.ts","webpack:///./packages/git-service/src/utils/build-tool-detector.ts","webpack:///./packages/git-service/src/services/git-service.ts","webpack:///./packages/git-service/src/utils/index.ts","webpack:///./packages/git-service/src/utils/dockerfile-parser.ts","webpack:///./packages/topology/src/data-transforms/transform-utils.ts","webpack:///./packages/pipelines-plugin/src/components/repository/consts.ts","webpack:///./packages/dev-console/src/components/import/import-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pipelines/pipeline-metrics/pipeline-metrics-utils.ts","webpack:///./packages/dev-console/src/components/import/serverless/serverless-utils.ts","webpack:///./packages/topology/src/elements/OdcBaseNode.ts","webpack:///./packages/pipelines-plugin/src/components/repository/repository-form-utils.ts","webpack:///./packages/dev-console/src/components/health-checks/health-checks-probe-validation-utils.ts","webpack:///./packages/pipelines-plugin/src/components/pac/const.ts","webpack:///./packages/topology/src/operators/components/const.ts","webpack:///./packages/git-service/src/utils/serverless-strategy-detector.ts","webpack:///./packages/topology/src/elements/BaseNode.ts","webpack:///./packages/knative-plugin/src/topology/knative-topology-utils.ts","webpack:///./packages/knative-plugin/src/topology/topology-types.ts","webpack:///./packages/knative-plugin/src/utils/traffic-splitting-utils.ts","webpack:///./packages/knative-plugin/src/components/traffic-splitting/TrafficSplittingFields.tsx","webpack:///./packages/knative-plugin/src/components/traffic-splitting/TrafficModalRevisionsDropdownField.tsx"],"names":["props","t","deleteRevision","handleSubmit","isSubmitting","status","showTraffic","cancel","serviceName","metadata","labels","className","onSubmit","revlabel","label","name","namespace","isInline","variant","title","inProgress","submitText","cancelText","errorMessage","error","submitDisabled","submitDanger","Controller","loaded","resources","revision","close","service","services","data","find","s","revisions","filter","r","uid","length","serviceLabel","type","onClick","revisionItems","traffic","spec","percent","tag","revisionName","deleteTraffic","tr","initialValues","trafficSplitting","reduce","acc","trafficIndex","findIndex","val","push","action","then","RegExp","test","window","location","pathname","catch","err","errMessage","message","setStatus","values","ksvcPatch","onReset","initialStatus","modalProps","deleteRevisionModalLauncher","isList","kind","prop","StartedByLabel","StartedByAnnotation","TektonTaskAnnotation","TaskProviders","TektonTaskLabel","TektonResourceLabel","PipelineResourceType","VolumeTypes","SecretAnnotationId","Git","Image","PIPELINE_GA_VERSION","TRIGGERS_GA_VERSION","PIPELINE_UNSIMPLIFIED_METRICS_VERSION","PIPELINE_SERVICE_ACCOUNT","PIPELINE_RUN_AUTO_START_FAILED","DEFAULT_CHART_HEIGHT","DEFAULT_LEGEND_CHART_HEIGHT","DEFAULT_SAMPLES","preferredNameAnnotation","chainsSignedAnnotation","PIPELINE_NAMESPACE","PIPELINERUN_TEMPLATE_NAMESPACE","PIPELINE_CONFIG_NAME","PipelineMetricsLevel","FLAG_TEKTON_V1_ENABLED","FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER","FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER","WORKLOAD_TYPES","getServiceBindingStatus","FLAGS","get","getCheDecoratorData","consoleLinks","cheConsoleLink","cheURL","href","cheIconURL","applicationMenu","imageURL","getEditURL","vcsURI","gitBranch","contextDir","fullGitURL","gitUrl","branch","baseUrl","resource","owner","contextPart","replace","includes","getFullGitURL","getNamespaceDashboardKialiLink","filterBasedOnActiveApplication","application","dc","getRoutesURL","routes","getTopologyResourceObject","topologyObject","obj","getResource","node","getData","getResourceKind","updateTopologyResourceApplication","item","itemData","Promise","reject","updates","getType","groupResources","groupResource","nextResource","resourceKind","Error","all","createTopologyResourceConnection","source","target","replaceTarget","removeTopologyResourceConnection","edge","getSource","getTarget","toDefaultSecretType","typeAbstraction","basicAuth","image","dockerconfigjson","opaque","toTypeAbstraction","secret","sshAuth","dockercfg","webhook","generic","generateSecret","s4","Math","floor","random","toString","substring","determineSecretType","stringData","dataKeys","sort","tls","serviceAccountToken","getImageSecretKey","secretType","useSecretTitle","isCreate","useSecretDescription","BaseService","gitsource","this","fileList","getRepoFileList","buildTypes","files","packageJsonContent","getPackageJsonContent","a","b","buildType","e","DroppableFileInput","loader","c","API_PROXY_URL","convertHeaders","headers","Object","keys","output","key","consoleProxyFetch","proxyRequest","proxyResponse","post","statusCode","consoleProxyFetchJSON","response","str","JSON","parse","isJSONString","body","SecretFormWrapper","modal","onCancel","navigate","params","existingSecret","defaultSecretType","secretTypeAbstraction","initialSecret","fixed","apiVersion","setSecret","setInProgress","setError","setStringData","value","decode","base64StringData","setBase64StringData","disableForm","setDisableForm","helptext","ns","onDataChanged","secretsData","onError","onNameChanged","event","newSecret","save","preventDefault","encode","onSave","renderBody","disabled","htmlFor","onChange","id","required","onFormDisable","disable","helpText","isDisabled","saveButtonText","ImageStreamActions","GitReadableTypes","GITHUB","GITLAB","GITEA","BITBUCKET","UNSURE","ImportTypes","Resources","BuildOptions","SampleRuntime","ReadableResourcesNames","OpenShift","labelKey","Kubernetes","KnativeService","ReadableBuildOptions","BUILDS","SHIPWRIGHT_BUILD","PIPELINES","DISABLED","ResourcesKinds","TerminationType","InsecureTrafficType","PassthroughInsecureTrafficType","CPUUnits","MemoryUnits","ImportOptions","SecretSubForm","SourceSecretFormWithTranslation","super","state","authType","changeAuthenticationType","bind","setState","authTypes","items","dropDownClassName","selectedKey","SourceSecretForm","BasicAuthSubformWithTranslation","username","password","changeData","BasicAuthSubform","SSHAuthSubform","fileData","endsWith","inputFileData","inputFieldHelpText","textareaFieldHelpText","isRequired","PullSecretForm","setAuthType","pullSecretData","jsonContent","secretData","newDataKey","stringify","onchange","credentials","onDisable","CreateConfigSubformWithTranslation","isDockerconfigjson","secretEntriesArray","imageSecretObjectToArray","hasDuplicate","entry","address","email","auth","imageSecretObject","imageSecretArray","newImageSecretEntry","v","k","decodedAuth","parsedAuth","Array","imageSecretsObject","imageSecretArrayToObject","updatedEntry","entryIndex","updatedEntryData","propagateEntryChange","splice","secretEntriesList","entryData","index","removeEntry","addEntry","CreateConfigSubform","PullSecretCredentialEntry","updateEntry","trimmedUsername","trim","trimmedPassword","handleBlurEvent","currentTarget","handleChangeEvent","onBlur","UploadConfigSubformWithTranslation","configFile","parseError","onFileChange","updateState","parsedData","UploadConfigSubform","WebHookSecretFormWithTranslation","WebHookSecretKey","changeWebHookSecretkey","generateWebHookSecret","WebHookSecretForm","GenericSecretFormWithTranslation","genericSecretObjectToArray","genericSecretObject","newGenericSecretEntry","isBinary","isBase64","genericSecretArray","entryID","updatedSecretEntriesArray","genericSecretArrayToObject","GenericSecretForm","KeyValueEntryFormWithTranslation","onValueChange","onKeyChange","inputFileIsBinary","KeyValueEntryForm","SecretType","GitProvider","ImportStrategy","GithubService","getAuthProvider","PERSONAL_ACCESS_TOKEN","BASIC_AUTH","OAUTH","secretContent","getRepoMetadata","url","repoName","host","defaultBranch","ref","devfilePath","dockerfilePath","isRepoReachable","client","repos","repo","Reachable","RateLimitExceeded","PrivateRepo","InvalidGitTypeSelected","Unreachable","getRepoBranchList","resp","listBranches","branches","map","getContents","specificPath","path","isArray","getRepoLanguageList","listLanguages","languages","createRepoWebhook","token","webhookURL","sslVerification","webhookSecret","Accept","Authorization","active","config","content_type","insecure_ssl","events","AddWebhookBaseURL","method","isFilePresent","getFileContent","Buffer","from","isDockerfilePresent","isTektonFolderPresent","getDockerfileContent","isFuncYamlPresent","getFuncYamlContent","isDevfilePresent","getDevfileContent","authOpts","BitbucketService","baseURL","isServer","fetchJson","requestMethod","authHeaders","requestHeaders","fetch","ok","text","json","slug","ResourceNotFound","isServerURL","f","language","skip_cert_verification","filePath","GitlabService","getRepo","resolve","Projects","show","fullName","path_with_namespace","getProjectId","projectID","Branches","Repositories","tree","file","includeFolder","push_events","merge_requests_events","enable_ssl_verification","default_branch","RepositoryFiles","showRaw","full_name","GiteaService","authorization","allowInsecure","GiteaRepoUnreachable","authorization_header","branch_filter","console","warn","BuildTools","expectedRegexp","priority","join","customDetection","gitService","packageJson","detectBuildTypes","detectedFiles","t1","t2","SucceedConditionReason","pipelineRunStatus","pipelineRun","conditions","succeedCondition","cancelledCondition","reason","PipelineRunStopped","PipelineRunCancelled","Cancelling","Succeeded","Failed","Running","TaskRunCancelled","Cancelled","PipelineRunStopping","TaskRunStopping","CreateContainerConfigError","ExceededNodeResources","ExceededResourceQuota","PipelineRunPending","Pending","ConditionCheckFailed","Skipped","pipelineRunStatusTitle","pipelineFilterReducer","pipeline","latestRun","Other","pipelineTitleFilterReducer","pipelineRunTitleFilterReducer","pipelineRunFilterReducer","pipelineStatusFilter","filters","selected","pipelineRunStatusFilter","phases","taskRunFilterReducer","taskRun","taskRunFilterTitleReducer","PipelineType","hostnameRegex","pathRegex","gitUrlRegex","projectNameValidationSchema","shape","matches","applicationNameValidationSchema","max","when","is","deploymentValidationSchema","replicas","transform","cv","undefined","min","Number","MAX_SAFE_INTEGER","maxSafeInteger","resourcesValidationSchema","oneOf","serverlessValidationSchema","scaling","minpods","maxpods","limit","parent","concurrencytarget","concurrencylimit","concurrencyutilization","autoscale","autoscalewindow","autoscalewindowUnit","unit","convertToSec","domainMapping","of","excludeEmptyString","domainName","split","routeValidationSchema","secure","termination","hostname","unknownTargetPort","typeError","integer","limitsValidationSchema","cpu","request","requestUnit","limitUnit","ensure","memory","imageValidationSchema","build","strategy","gitValidationSchema","showGitType","dockerValidationSchema","containerPort","devfileValidationSchema","devfileContent","devfileHasError","devfileSuggestedResources","buildValidationSchema","isiValidationSchema","importFlowPipelineTemplateValidationSchema","isPipelineEnabled","buildOption","pipelineType","PAC","templateSelected","color","PipelineModel","apiGroup","labelPluralKey","plural","abbr","namespaced","labelPlural","crd","PipelineModelV1Beta1","PipelineRunModel","PipelineRunModelV1Beta1","TaskModel","TaskModelV1Beta1","TaskRunModel","TaskRunModelV1Beta1","CustomRunModelV1Beta1","PipelineResourceModel","ClusterTaskModel","ConditionModel","TriggerBindingModel","ClusterTriggerBindingModel","TriggerTemplateModel","EventListenerModel","RepositoryModel","TektonConfigModel","TektonHubModel","TektonResultModel","task","inputs","runAfter","ListFilterId","ListFilterLabels","PipelineResourceListFilterId","PullRequest","Cluster","Storage","CloudEvent","appendPipelineRunStatus","taskRuns","isFinallyTasks","finally","tasks","Idle","pipelineTask","taskStatus","mTask","pipelineTaskName","completionTime","startTime","date","Date","getTime","duration","getPipelineTasks","out","taskList","forEach","flag","i","taskRef","nextToFlag","getFinallyTasksWithStatus","containerToLogSourceStatus","container","lastState","waiting","terminated","getLatestPipelineRunStatus","pipelineRuns","latestPipelineRun","PipelineNotStarted","getPipelineRunParams","pipelineParams","param","default","getPipelineRunWorkspaces","pipelineWorkspaces","workspace","calculateDuration","endTime","long","start","durationInSeconds","pipelineRunDuration","run","updateServiceAccount","secretName","originalServiceAccount","updateImagePullSecrets","updatedServiceAccount","secrets","imagePullSecrets","associateServiceAccountToSecret","isImageSecret","serviceAccount","getAnnotationKey","suffix","getSecretAnnotations","annotation","existingAnnotations","count","annotationKey","pipelinesTab","kindObj","getMatchedPVCs","pvcResources","ownerResourceName","ownerResourceKind","pvc","ownerReferences","some","reference","getPipeline","pipelines","p","getTriggerTemplates","triggerTemplates","tt","resourcetemplates","rt","pipelineRef","getEventListeners","eventListeners","et","triggers","template","returnValidPipelineModel","returnValidPipelineRunModel","returnValidTaskModel","TaskRunResultsAnnotations","TaskRunResultsAnnotationValue","TaskRunResults","getSbomTaskRun","taskruns","annotations","KEY","SBOM","hasExternalLink","sbomTaskRun","TYPE","EXTERNAL_LINK","getSbomLink","results","taskResults","getImageUrl","PipelineRun","pipelineResults","IMAGE_REPOSITORY","taskRunStatus","getPipelineRunStatus","conditionsMessage","condition","match","result","totalSucceeded","Completed","Incomplete","isInteger","bitBucketUserNameRegex","sanitizeApplicationValue","applicationType","updateItemAppLabel","patch","op","updateResourceApplication","instanceName","prevApplication","patches","listsValue","list","safeLoadList","model","queryParams","accessCheckRequired","canListResource","group","verb","allowed","safeKill","deleteWebhooks","buildConfigs","deploymentsAnnotations","gitType","secretList","webhooks","requests","bc","secretResource","webhookType","webhookTypeObj","secretReference","secretGenericResource","secretGittypeResource","cleanUpWorkload","reqs","builds","channelModels","resourceModel","loadError","resourceBuildConfigs","isBuildConfigPresent","resourceTriggerTemplates","resourceEventListeners","deleteModels","knativeDeleteModels","resourceData","deleteRequest","resourceObj","req","batchDeleteRequests","models","channel","MetricsLevel","LevelTypes","DurationTypes","PipelineRunGroupVersionKind","version","TaskRunGroupVersionKind","ComputedStatus","CustomRunStatus","ImportStrategyList","DEVFILE","DOCKERFILE","SERVERLESS_FUNCTION","S2I","detectImportStrategies","repository","isServerlessEnabled","addServerlessFxStrategy","detectedStrategies","repositoryStatus","GitTypeNotDetected","detectedCustomData","strategies","TYPE_EVENT_SOURCE","TYPE_EVENT_SINK","TYPE_KAFKA_SINK","TYPE_EVENT_SOURCE_KAFKA","TYPE_EVENT_SOURCE_LINK","TYPE_EVENT_SINK_LINK","TYPE_KAFKA_CONNECTION_LINK","TYPE_EVENT_PUB_SUB","TYPE_EVENT_PUB_SUB_LINK","TYPE_KNATIVE_SERVICE","TYPE_REVISION_TRAFFIC","TYPE_KNATIVE_REVISION","TYPE_SINK_URI","KNATIVE_GROUP_NODE_WIDTH","KNATIVE_GROUP_NODE_HEIGHT","KNATIVE_GROUP_NODE_PADDING","EVENT_MARKER_RADIUS","URI_KIND","getLatestRun","runs","field","pipelineSpec","succeededCondition","augmentRunsToData","pipelineruns","prsForPipeline","pr","getRunStatusColor","pftoken","FailedToStart","getPipelineFromPipelineRun","pipelineName","getTaskStatus","pipelinerun","totalTasks","executedPipeline","totalPipelineRunTasks","totalPipelineRunCustomTasks","plrTasks","tRun","plrTaskLength","skippedTaskLength","skippedTasks","pipelineRunHasFailure","pipelineRunIsCancelled","unhandledTasks","getResourceModelFromTaskKind","getSafeTaskResourceKind","getResourceModelFromBindingKind","getSafeBindingResourceKind","getModelReferenceFromTaskKind","countRunningTasks","taskStatuses","shouldHidePipelineRunStop","shouldHidePipelineRunStopForTaskRunStatus","taskRunStatusObj","shouldHidePipelineRunCancel","shouldHidePipelineRunCancelForTaskRunStatus","SecretLoadingWrapper","fixedKeys","EditSecret","CreateSecret","RepoStatus","Maven","expectedRegexps","expectedFiles","Gradle","Golang","Ruby","NodeJS","ModernWebApp","PHP","Python","Perl","WebAppDependencies","matchedFiles","isModernWebApp","dep","dependencies","getGitService","gitProvider","SSH","NO_AUTH","gitSource","DockerFileParser","content","parsedCommands","parsedContent","cmd","exposeCommand","args","getContextDirByName","extractContextDir","buildsData","buildConfigData","buildConfig","pipelinesData","pathContextParam","createTopologyNodeData","overviewItem","defaultIcon","operatorBackedService","monitoringAlerts","dcUID","deploymentsLabels","deploymentsName","builderImageIcon","isOperatorBackedService","editURL","vcsRef","builderImage","isKnativeResource","getTopologyNodeItem","nodeProps","children","WorkloadModelProps","width","height","visible","style","padding","getTopologyEdgeItems","edges","targetNode","deployment","edgeApiVersion","edgeKind","edgeName","edgeExists","getTopologyGroupItems","groupName","collapsed","mergeGroup","newGroup","existingGroups","g","existingGroup","mergeGroupData","mergeGroups","newGroups","addToTopologyDataModel","newModel","graphModel","dataModelDepicters","nodes","n","existing","depicter","getWorkloadResources","kindsMap","workloadTypes","res","resKind","getBaseWatchedResources","deploymentConfigs","optional","deployments","daemonSets","pods","jobs","cronJobs","statefulSets","hpas","RepositoryFields","RepoAnnotationFields","RepositoryRuntimes","RepositoryLabels","REPOSITORY","URL_REPO","URL_ORG","SHA","EVENT_TYPE","RepositoryAnnotations","SHA_MESSAGE","SHA_URL","REPO_URL","BRANCH","PacConfigurationTypes","defaultRepositoryFormValues","githubAppAvailable","INVALID","showOverviewPage","yamlData","user","autoAttach","AccessTokenDocLinks","WebhookDocLinks","gitProviderTypesHosts","validationSchema","project","git","docker","devfile","serverless","route","limits","healthChecks","pac","hasDomain","domain","startsWith","detectGitType","createComponentName","nameString","kebabCaseStr","detectGitRepoName","pop","PipelineQuery","MetricsQueryPrefix","metricsQueries","prefix","TEKTON_PIPELINES_CONTROLLER","PIPELINE_TASK_LEVEL","PIPELINE_SUCCESS_RATIO","NUMBER_OF_PIPELINE_RUNS","PIPELINERUN_TASKRUN_LEVEL","PIPELINE_RUN_TASK_RUN_DURATION","PIPELINE_RUN_DURATION","UNSIMPLIFIED_METRICS_LEVEL","formatValue","string","toExponential","formatPositiveValue","abs","formatDate","format","formatTimeSeriesValues","samples","span","metric","newValues","y","x","setHours","isNaN","end","step","getRangeVectorData","xMutator","yMutator","parseFloat","time","getXaxisValues","timespan","xValues","oneDayDuration","numDays","round","d","now","setDate","getDate","slice","getDuration","seconds","sec","hr","PipelineMetricsTimeRangeOptions","getTransformedDataPoints","previousValue","currentValue","getAutoscaleWindow","autoscaleValue","defaultAutoscalewindowUnit","DOMAIN_MAPPING_KSVC_INFO_REGEX","removeKsvcInfoFromDomainMapping","dm","getOtherKsvcFromDomainMapping","currentKsvcName","removeDuplicateDomainMappings","allDomainMappings","connectedDomainMappings","Set","hasOtherKsvcDomainMappings","getAllOtherDomainMappingInUse","domainMappings","selectedDomain","OdcBaseNode","setModel","dryRunOpt","dryRun","repositoryValidationSchema","accessToken","secretRef","pipelinesAccessTokenValidationSchema","importFlowRepositoryValidationSchema","pipelineEnabled","createRepositoryResources","secretObj","encodedSecret","detectedGitType","repositoryName","generateName","createTokenSecret","gitHost","git_provider","webhook_secret","createRemoteWebhook","authToken","recommendRepositoryName","getPipelineRunTemplate","runtime","runTimeTemplate","pipelineRunTemplateCfg","labelSelector","matchLabels","log","pipelineRunTemplate","getFallbackTemplate","getPipelineRunDefaultTemplate","healthChecksValidationSchema","containerName","showForm","enabled","modified","periodSeconds","initialDelaySeconds","failureThreshold","timeoutSeconds","successThreshold","requestType","httpGet","port","tcpSocket","exec","command","healthChecksProbesValidationSchema","readinessProbe","livenessProbe","startupProbe","PAC_GH_APP_NEW","PAC_GH_APP_DOC","PAC_GH_APP_MANIFEST_API","EVENT_LISTNER_NAME","PAC_SECRET_NAME","PAC_GH_APP_NAME","PAC_INFO","PAC_TEMPLATE_DEFAULT","TYPE_OPERATOR_BACKED_SERVICE","OPERATOR_GROUP_WIDTH","OPERATOR_GROUP_HEIGHT","OPERATOR_GROUP_PADDING","evaluateFunc","resourceContent","funcJSON","builder","builderEnvs","buildEnvs","runtimeEnvs","envs","isServerlessFxRepository","createAnchorKey","both","BaseNode","anchors","dimensions","dimensionsInitialized","positioned","uncollapsedCenter","position","labelPosition","bottom","shallow","groupBounds","sourceEdges","targetEdges","setDimensions","setBounds","setPosition","isCollapsed","getChildren","isVisible","getInternalBounds","rect","getStyle","getBounds","isGroup","union","clone","getGraph","getEdges","total","nexChild","getAllNodeChildren","bounds","getCenter","point","prevLocation","xOffset","yOffset","child","getPosition","newPosition","updateChildrenPositions","getController","fireEvent","every","isDimensionsInitialized","anchor","prevCenter","setCenter","ellipse","setGroup","setCollapsed","toModel","isPositioned","getDimensions","translate","getKnNodeModelProps","EventSource","EventSink","EventSourceKafka","KafkaSink","rhombus","KnService","PubSub","stadium","SinkUri","circle","getEventSourceStatus","isInternalResource","isSubscriber","relatedResource","mainResource","subscriberRef","subscriber","channelRef","isPublisher","relationshipResource","broker","getTriggerFilters","attributes","entries","getKnativeDynamicResources","dynamicProps","currProp","getSubscribedEventsources","pubSubResource","eventSourceProps","evSrc","sinkRes","sink","getPubSubSubscribers","channelResourceProps","relationShipMap","Broker","isRelatedResource","Service","subscribers","depicters","concat","relRes","relationShipData","relationshipRes","getSubscriberByType","sub","getSubscribedPubSubNodes","ksvc","pubsubNodes","channels","brokers","connector","pubsubConnectorResources","connectorRes","subscribedService","channelAdded","eventSources","pushEventSource","evsrc","eventBroker","channelKind","getChannelRef","channelResources","eventingChannel","getKnativeRevisionsData","configurations","getKnativeServiceData","utils","ksroutes","util","getDeploymentsForKamelet","integrations","integrationsOwnData","createKnativeDeploymentItems","associatedDeployment","depObj","overviewItems","knResources","getKnativeTopologyNodeItems","configUidData","ChildData","curr","el","rev","filterRevisionsBaseOnTrafficStatus","uidRev","Revision","getApiGroup","getEventTopologyEdgeItems","sinkTarget","resUid","resName","trafficData","sinkURIDataModel","knDataModel","sinkUri","uri","sinkTargetUid","nodeData","sinkNodeData","nodeResData","getSinkTargetUid","encodeURIComponent","eventSourcesData","evSrcSinkUri","getEventSourcesData","sinkUriObj","sinkData","getSinkUriTopologyNodeItems","targetUid","getSinkUriTopologyEdgeItems","currentProp","transformKnNodeData","knResourcesData","ownedIntegrationData","ownedServiceData","ksservices","ownedDeploymentData","knServiceData","getOwnedEventSinkData","kameletType","Sink","createEventSinkTopologyNodeData","sinkSource","targetRef","getEventSinkTopologyEdgeItems","Source","ownedSourceData","getOwnedEventSourceData","kafkasinks","svcRes","knativeSvc","createTopologyServiceNodeData","trafficSvc","resname","trafficPercent","revisionObj","revisionIndex","Traffic","getTrafficTopologyEdgeItems","createTopologyPubSubNodeData","channelProps","depChannelResources","subscriptionData","eventingsubscription","triggerList","triggersData","channelSubsData","subs","subUid","subscribable","subscriptionSvc","svc","tData","trigger","brokerName","knService","knServiceAdded","resType","resourceObject","createPubSubDataItems","possibleTargetResources","connectedResource","targetResource","EventPubSubLink","subscriberRes","getTriggerTopologyEdgeItems","subRes","channelData","svcData","getSubscriptionTopologyEdgeItems","kafkaSource","kafkaConnections","kafkaConnection","kcServiceAccountSecretName","serviceAccountSecretName","kafkaSourcePasswordSecretKeyRefName","net","sasl","secretKeyRef","kafkaSourceUserSecretKeyRefName","kcBootstrapServerHost","bootstrapServerHost","bootstrapServers","edgeId","EventSourceKafkaLink","edgeStyle","dashedMd","getKnSourceKafkaTopologyEdgeItems","getRevisionsData","revisionData","isOperatorBackedKnResource","getKameletSinkAndSourceBindings","camelKameletBindingResources","kameletbindings","sinkCamelKameletResources","kamelets","kameletGlobalNS","camelKamelet","camelSinkKameletBindings","camelSourceKameletBindings","binding","sinkResource","kameletSink","isOperatorBackedKnSinkService","knEventSinks","createSinkConnection","eventSourceObj","targetName","updatePayload","createKnativeEventSourceSink","createEventSourceKafkaConnection","sourceObj","targetObj","mkcBoostrapServer","mkcServiceAccountSecretName","knKafkaSourceObj","updatedObjPayload","enable","createSinkPubSubConnection","subObj","subscriptionObj","createEventingPubSubSink","isServerlessFunction","element","NodeType","EdgeType","KameletType","getRevisionItems","currValue","trafficDataForPatch","knativeServingResourcesTrafficSplitting","selectedRevisions","revisionItem","addLabel","emptyValues","disableDeleteRow","tooltipDeleteRow","disableAddRow","tooltipAddRow","spans","number","maxWidth","dropdownItems","fullWidth"],"mappings":"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","file":"delete-revision-chunk-e25edcaf956e9b6ae217.min.js","sourcesContent":["import * as React from 'react';\nimport { Alert } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ModalTitle,\n  ModalBody,\n  ModalSubmitFooter,\n} from '@console/internal/components/factory/modal';\nimport { K8sResourceKind } from '@console/internal/module/k8s';\nimport { YellowExclamationTriangleIcon } from '@console/shared';\nimport { KNATIVE_SERVING_LABEL } from '../../const';\nimport { RevisionModel } from '../../models';\nimport { RevisionItems } from '../../utils/traffic-splitting-utils';\nimport TrafficSplittingFields from '../traffic-splitting/TrafficSplittingFields';\n\ninterface TrafficSplittingDeleteModalProps {\n  revisionItems: RevisionItems;\n  deleteRevision: K8sResourceKind;\n  showTraffic: boolean;\n  cancel?: () => void;\n}\n\ntype Props = FormikProps<FormikValues> & TrafficSplittingDeleteModalProps;\n\nconst DeleteRevisionModal: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n  const { deleteRevision, handleSubmit, isSubmitting, status, showTraffic, cancel } = props;\n  const serviceName = deleteRevision.metadata.labels[KNATIVE_SERVING_LABEL];\n\n  return (\n    <form className=\"modal-content\" onSubmit={handleSubmit}>\n      <ModalTitle>\n        <YellowExclamationTriangleIcon className=\"co-icon-space-r\" />{' '}\n        {t('knative-plugin~Delete {{revlabel}}?', { revlabel: RevisionModel.label })}\n      </ModalTitle>\n      <ModalBody>\n        <p>\n          {t('knative-plugin~Are you sure you want to delete ')}\n          <strong className=\"co-break-word\">{deleteRevision.metadata.name}</strong>{' '}\n          {t('knative-plugin~from ')} <strong className=\"co-break-word\">{serviceName}</strong>{' '}\n          {t('knative-plugin~in namespace ')} <strong>{deleteRevision.metadata.namespace}</strong>?\n        </p>\n        {showTraffic && (\n          <>\n            <Alert\n              isInline\n              className=\"co-alert\"\n              variant=\"custom\"\n              title={t(\n                'knative-plugin~Update the traffic distribution among the remaining Revisions',\n              )}\n            />\n            <TrafficSplittingFields {...props} />\n          </>\n        )}\n      </ModalBody>\n      <ModalSubmitFooter\n        inProgress={isSubmitting}\n        submitText={t('knative-plugin~Delete')}\n        cancelText={t('knative-plugin~Cancel')}\n        cancel={cancel}\n        errorMessage={status.error}\n        submitDisabled={isSubmitting}\n        submitDanger\n      />\n    </form>\n  );\n};\n\nexport default DeleteRevisionModal;\n","export * from './utils';\nexport * from './const';\nexport * from './SecretFormWrapper';\nexport * from './PullSecretForm';\nexport * from './PullSecretCredentialEntry';\nexport * from './CreateConfigSubform';\nexport * from './UploadConfigSubform';\nexport * from './WebHookSecretForm';\nexport * from './SourceSecretForm';\nexport * from './BasicAuthSubform';\nexport * from './SSHAuthSubform';\nexport * from './GenericSecretForm';\nexport * from './KeyValueEntryForm';\nexport * from './EditSecret';\nexport * from './CreateSecret';\nexport * from './DropableFileInput';\nexport * from './SecretSubForm';\nexport * from './types';\n","import * as React from 'react';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { Formik, FormikHelpers, FormikValues } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport {\n  createModalLauncher,\n  ModalBody,\n  ModalComponentProps,\n  ModalFooter,\n  ModalTitle,\n} from '@console/internal/components/factory';\nimport {\n  Firehose,\n  FirehoseResult,\n  history,\n  resourceListPathFromModel,\n} from '@console/internal/components/utils';\nimport {\n  k8sKill,\n  k8sPatch,\n  K8sResourceKind,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { RedExclamationCircleIcon } from '@console/shared';\nimport { KNATIVE_SERVING_LABEL } from '../../const';\nimport { RevisionModel, ServiceModel } from '../../models';\nimport { getKnativeRevisionsData } from '../../topology/knative-topology-utils';\nimport { Traffic } from '../../types';\nimport {\n  knativeServingResourcesTrafficSplitting,\n  getRevisionItems,\n  trafficDataForPatch,\n} from '../../utils/traffic-splitting-utils';\nimport { TrafficSplittingType } from '../traffic-splitting/TrafficSplitting';\nimport DeleteRevisionModal from './DeleteRevisionModal';\n\ntype ControllerProps = {\n  loaded?: boolean;\n  revision?: K8sResourceKind;\n  resources?: {\n    configurations: FirehoseResult;\n    revisions: FirehoseResult;\n    services: FirehoseResult;\n  };\n  cancel?: () => void;\n  close?: () => void;\n};\n\nconst Controller: React.FC<ControllerProps> = ({ loaded, resources, revision, cancel, close }) => {\n  const { t } = useTranslation();\n  if (!loaded) {\n    return null;\n  }\n  const service = resources.services.data.find((s: K8sResourceKind) => {\n    return revision.metadata.labels[KNATIVE_SERVING_LABEL] === s.metadata.name;\n  });\n\n  const revisions = getKnativeRevisionsData(service, resources).filter(\n    (r) => revision.metadata.uid !== r.metadata.uid,\n  );\n\n  if (revisions.length === 0) {\n    return (\n      <form className=\"modal-content\" onSubmit={close}>\n        <ModalTitle>\n          <RedExclamationCircleIcon className=\"co-icon-space-r\" />\n          {t('knative-plugin~Unable to delete {{revlabel}}', { revlabel: RevisionModel.label })}\n        </ModalTitle>\n        <ModalBody>\n          <p>\n            {t('knative-plugin~You cannot delete the last {{revlabel}} for the {{serviceLabel}}.', {\n              revlabel: RevisionModel.label,\n              serviceLabel: ServiceModel.label,\n            })}\n          </p>\n        </ModalBody>\n        <ModalFooter inProgress={false}>\n          <ActionGroup className=\"pf-v5-c-form pf-v5-c-form__actions--right pf-v5-c-form__group--no-top-margin\">\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              data-test-id=\"modal-cancel-action\"\n              onClick={close}\n            >\n              {t('knative-plugin~OK')}\n            </Button>\n          </ActionGroup>\n        </ModalFooter>\n      </form>\n    );\n  }\n\n  const revisionItems = getRevisionItems(revisions);\n\n  const traffic = service?.spec?.traffic ?? [{ percent: 0, tag: '', revisionName: '' }];\n  const deleteTraffic = traffic.find((tr) => tr.revisionName === revision.metadata.name);\n\n  const initialValues: TrafficSplittingType = {\n    trafficSplitting: traffic.reduce((acc: Traffic[], tr) => {\n      if (!tr.revisionName || revisions.find((r) => r.metadata.name === tr.revisionName)) {\n        const trafficIndex = acc.findIndex((val) => val.revisionName === tr.revisionName);\n        if (trafficIndex >= 0) {\n          acc[trafficIndex].percent += tr.percent;\n        } else {\n          acc.push({\n            percent: tr.percent,\n            tag: tr.tag || '',\n            revisionName: tr.revisionName || '',\n          });\n        }\n      }\n      return acc;\n    }, []),\n  };\n\n  if (initialValues.trafficSplitting.length === 0 && revisions.length > 0) {\n    initialValues.trafficSplitting.push({\n      percent: 0,\n      tag: '',\n      revisionName: revisions[0].metadata.name,\n    });\n  }\n\n  const deleteRevision = (action: FormikHelpers<FormikValues>) => {\n    return k8sKill(RevisionModel, revision)\n      .then(() => {\n        close();\n        // If we are currently on the deleted revision's page, redirect to the list page\n        const re = new RegExp(`/${revision.metadata.name}(/|$)`);\n        if (re.test(window.location.pathname)) {\n          history.push(resourceListPathFromModel(RevisionModel, revision.metadata.namespace));\n        }\n      })\n      .catch((err) => {\n        const errMessage = err.message || t('knative-plugin~An error occurred. Please try again');\n        action.setStatus({ error: errMessage });\n      });\n  };\n\n  const handleSubmit = (values: FormikValues, action: FormikHelpers<FormikValues>) => {\n    const ksvcPatch = trafficDataForPatch(values.trafficSplitting, service);\n    if (!deleteTraffic || deleteTraffic.percent === 0) {\n      return deleteRevision(action);\n    }\n\n    return k8sPatch(ServiceModel, service, ksvcPatch)\n      .then(() => {\n        deleteRevision(action);\n      })\n      .catch((err) => {\n        const errMessage = err.message || t('knative-plugin~An error occurred. Please try again');\n        action.setStatus({ error: errMessage });\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      onReset={cancel}\n      initialStatus={{ error: '' }}\n    >\n      {(modalProps) => (\n        <DeleteRevisionModal\n          {...modalProps}\n          revisionItems={revisionItems}\n          deleteRevision={revision}\n          showTraffic={deleteTraffic?.percent > 0}\n          cancel={cancel}\n        />\n      )}\n    </Formik>\n  );\n};\n\ntype DeleteRevisionModalControllerProps = {\n  revision: K8sResourceKind;\n};\n\nconst DeleteRevisionModalController: React.FC<DeleteRevisionModalControllerProps> = (props) => {\n  const {\n    metadata: { namespace },\n  } = props.revision;\n  const resources = knativeServingResourcesTrafficSplitting(namespace);\n  resources.push({\n    isList: true,\n    kind: referenceForModel(ServiceModel),\n    namespace,\n    prop: 'services',\n  });\n\n  return (\n    <Firehose resources={resources}>\n      <Controller {...props} />\n    </Firehose>\n  );\n};\n\ntype Props = DeleteRevisionModalControllerProps & ModalComponentProps;\n\nexport const deleteRevisionModalLauncher = createModalLauncher<Props>(\n  DeleteRevisionModalController,\n);\n","export * from './pipelines';\n","export * from './auth';\nexport * from './repo';\nexport * from './git';\nexport * from './build-tools';\n","export enum StartedByLabel {\n  triggers = 'triggers.tekton.dev/eventlistener',\n}\nexport enum StartedByAnnotation {\n  user = 'pipeline.openshift.io/started-by',\n}\nexport enum TektonTaskAnnotation {\n  minVersion = ' tekton.dev/pipelines.minVersion',\n  tags = 'tekton.dev/tags',\n  categories = 'tekton.dev/categories',\n  installedFrom = 'openshift.io/installed-from',\n  semVersion = 'openshift.io/sem-version',\n}\nexport enum TaskProviders {\n  redhat = 'Red Hat',\n  community = 'Community',\n  tektonHub = 'TektonHub',\n  artifactHub = 'ArtifactHub',\n}\nexport enum TektonTaskLabel {\n  providerType = 'operator.tekton.dev/provider-type',\n  version = 'app.kubernetes.io/version',\n}\nexport enum TektonResourceLabel {\n  pipeline = 'tekton.dev/pipeline',\n  pipelinerun = 'tekton.dev/pipelineRun',\n  taskrun = 'tekton.dev/taskRun',\n  pipelineTask = 'tekton.dev/pipelineTask',\n}\n\nexport enum PipelineResourceType {\n  git = 'git',\n  image = 'image',\n  cluster = 'cluster',\n  storage = 'storage',\n}\n\nexport enum VolumeTypes {\n  NoWorkspace = 'noWorkspace',\n  EmptyDirectory = 'emptyDirectory',\n  ConfigMap = 'configMap',\n  Secret = 'secret',\n  PVC = 'pvc',\n  VolumeClaimTemplate = 'volumeClaimTemplate',\n}\n\nexport enum SecretAnnotationId {\n  Git = 'git',\n  Image = 'docker',\n}\n\nexport const SecretAnnotationType = {\n  [SecretAnnotationId.Git]: 'Git Server',\n  [SecretAnnotationId.Image]: 'Image Registry',\n};\n\nexport const PIPELINE_GA_VERSION = '1.4.0';\nexport const TRIGGERS_GA_VERSION = '1.6.0';\nexport const PIPELINE_UNSIMPLIFIED_METRICS_VERSION = '1.5.2';\nexport const PIPELINE_SERVICE_ACCOUNT = 'pipeline';\nexport const PIPELINE_RUN_AUTO_START_FAILED = `bridge/pipeline-run-auto-start-failed`;\n\nexport const DEFAULT_CHART_HEIGHT = 275;\nexport const DEFAULT_LEGEND_CHART_HEIGHT = 375;\nexport const DEFAULT_TIME_RANGE = '1w';\nexport const DEFAULT_REFRESH_INTERVAL = '30s';\nexport const DEFAULT_SAMPLES = 60;\n\n// Annotation for referencing pipeline name in case of PipelineRun with no reference to a Pipeline (embedded pipeline)\nexport const preferredNameAnnotation = 'pipeline.openshift.io/preferredName';\nexport const chainsSignedAnnotation = 'chains.tekton.dev/signed';\n\nexport const PIPELINE_NAMESPACE = 'openshift-pipelines';\nexport const PIPELINERUN_TEMPLATE_NAMESPACE = 'openshift';\nexport const PIPELINE_CONFIG_NAME = 'config';\n\nexport enum PipelineMetricsLevel {\n  PIPELINE_TASK_LEVEL = 'pipeline/task',\n  PIPELINERUN_TASKRUN_LEVEL = 'pipelinerun/taskrun',\n  UNSUPPORTED_LEVEL = 'unsupported',\n  UNSIMPLIFIED_METRICS_LEVEL = 'unsimplified',\n}\n\nexport const FLAG_TEKTON_V1_ENABLED = 'FLAG_TEKTON_V1_ENABLED';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_16_OR_NEWER';\nexport const FLAG_PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER =\n  'PIPELINES_OPERATOR_VERSION_1_17_OR_NEWER';\n","import { Node, Edge, GraphElement } from '@patternfly/react-topology';\nimport * as GitUrlParse from 'git-url-parse';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { getRouteWebURL } from '@console/internal/components/routes';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  modelFor,\n  referenceFor,\n  RouteKind,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { ALLOW_SERVICE_BINDING_FLAG } from '@console/service-binding-plugin/src/const';\nimport OdcBaseNode from '../elements/OdcBaseNode';\nimport { TYPE_OPERATOR_BACKED_SERVICE } from '../operators/components/const';\nimport { TopologyDataObject } from '../topology-types';\nimport { updateResourceApplication } from './application-utils';\nimport { createResourceConnection, removeResourceConnection } from './connector-utils';\n\nexport const WORKLOAD_TYPES = [\n  'deployments',\n  'deploymentConfigs',\n  'daemonSets',\n  'statefulSets',\n  'jobs',\n  'cronJobs',\n  'pods',\n];\n\nexport type CheDecoratorData = {\n  cheURL?: string;\n  cheIconURL?: string;\n};\n\nexport const getServiceBindingStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(ALLOW_SERVICE_BINDING_FLAG);\n\nexport const getCheDecoratorData = (consoleLinks: K8sResourceKind[]): CheDecoratorData => {\n  const cheConsoleLink = _.find(consoleLinks, ['metadata.name', 'che']);\n  return {\n    cheURL: cheConsoleLink?.spec?.href,\n    cheIconURL: cheConsoleLink?.spec?.applicationMenu?.imageURL,\n  };\n};\n\nconst getFullGitURL = (gitUrl: GitUrlParse.GitUrl, branch?: string, contextDir?: string) => {\n  const baseUrl = `https://${gitUrl.resource}/${gitUrl.owner}/${gitUrl.name}`;\n  if (!branch) {\n    return baseUrl;\n  }\n  const contextPart = contextDir ? `/${contextDir.replace(/^\\//, '')}` : '';\n  if (gitUrl.resource.includes('github')) {\n    return `${baseUrl}/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitlab')) {\n    return `${baseUrl}/-/tree/${branch}${contextPart}`;\n  }\n  if (gitUrl.resource.includes('gitea')) {\n    return `${baseUrl}/src/branch/${branch}${contextPart}`;\n  }\n  // Branch names containing '/' do not work with bitbucket src URLs\n  // https://jira.atlassian.com/browse/BCLOUD-9969\n  if (gitUrl.resource.includes('bitbucket') && !branch.includes('/')) {\n    return `${baseUrl}/src/${branch}${contextPart}`;\n  }\n  return baseUrl;\n};\n\nexport const getEditURL = (\n  vcsURI?: string,\n  gitBranch?: string,\n  cheURL?: string,\n  contextDir?: string,\n) => {\n  if (!vcsURI) {\n    return null;\n  }\n  const fullGitURL = getFullGitURL(GitUrlParse(vcsURI), gitBranch, contextDir);\n  return cheURL ? `${cheURL}/f?url=${fullGitURL}&policies.create=peruser` : fullGitURL;\n};\n\nexport const getNamespaceDashboardKialiLink = (\n  consoleLinks: K8sResourceKind[],\n  namespace: string,\n): string => {\n  const kialiLink = _.find(consoleLinks, ['metadata.name', `kiali-namespace-${namespace}`])?.spec\n    ?.href;\n  return kialiLink || '';\n};\n\n/**\n * filter data based on the active application\n */\nexport const filterBasedOnActiveApplication = (\n  data: K8sResourceKind[],\n  application: string,\n): K8sResourceKind[] => {\n  const PART_OF = 'app.kubernetes.io/part-of';\n  if (!application) {\n    return data;\n  }\n  return data.filter((dc) => {\n    return _.get(dc, ['metadata', 'labels', PART_OF]) === application;\n  });\n};\n\n/**\n * get routes url\n */\nexport const getRoutesURL = (resource: K8sResourceKind, routes: RouteKind[]): string => {\n  if (routes.length > 0 && !_.isEmpty(routes[0].spec)) {\n    return getRouteWebURL(routes[0]);\n  }\n  return null;\n};\n\nexport const getTopologyResourceObject = (topologyObject: TopologyDataObject): K8sResourceKind => {\n  if (!topologyObject) {\n    return null;\n  }\n  return topologyObject.resource || topologyObject.resources?.obj;\n};\n\nexport const getResource = <T = K8sResourceKind>(node: GraphElement): T => {\n  const resource = (node as OdcBaseNode)?.getResource();\n  return (resource as T) || (getTopologyResourceObject(node?.getData()) as T);\n};\n\nexport const getResourceKind = (node: Node): K8sResourceKindReference => {\n  return node instanceof OdcBaseNode\n    ? (node as OdcBaseNode).getResourceKind()\n    : referenceFor(getTopologyResourceObject(node?.getData()));\n};\n\nexport const updateTopologyResourceApplication = (\n  item: Node,\n  application: string,\n): Promise<any> => {\n  const itemData = item?.getData();\n  const resource = getResource(item);\n  if (!item || !resource || !_.size(itemData.resources)) {\n    return Promise.reject();\n  }\n\n  const resources: K8sResourceKind[] = [];\n  const updates: Promise<any>[] = [];\n\n  resources.push(resource);\n\n  if (item.getType() === TYPE_OPERATOR_BACKED_SERVICE) {\n    _.forEach(itemData.groupResources, (groupResource) => {\n      resources.push(groupResource.resource);\n    });\n  }\n\n  for (const nextResource of resources) {\n    const resourceKind = modelFor(referenceFor(nextResource));\n    if (!resourceKind) {\n      return Promise.reject(\n        new Error(\n          i18next.t('topology~Unable to update application, invalid resource type: {{kind}}', {\n            kind: nextResource.kind,\n          }),\n        ),\n      );\n    }\n    updates.push(updateResourceApplication(resourceKind, nextResource, application));\n  }\n\n  return Promise.all(updates);\n};\n\nexport const createTopologyResourceConnection = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n  replaceTarget: K8sResourceKind = null,\n): Promise<K8sResourceKind[] | K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Can not create a connection from a node to itself.')),\n    );\n  }\n\n  return createResourceConnection(source, target, replaceTarget);\n};\n\nexport const removeTopologyResourceConnection = (edge: Edge): Promise<any> => {\n  const source = getResource(edge.getSource());\n  const target = getResource(edge.getTarget());\n\n  if (!source || !target) {\n    return Promise.reject();\n  }\n\n  return removeResourceConnection(source, target);\n};\n\nexport const isOperatorBackedNode = (element: Node | GraphElement): boolean => {\n  if (element?.getData()?.resources?.isOperatorBackedService) {\n    return true;\n  }\n  return element?.hasParent() ? isOperatorBackedNode(element.getParent()) : false;\n};\n","import * as _ from 'lodash-es';\nimport { WebHookSecretKey } from '../../secret';\nimport { useTranslation } from 'react-i18next';\nimport { SecretType, SecretTypeAbstraction } from './const';\n\nexport const toDefaultSecretType = (typeAbstraction: SecretTypeAbstraction): SecretType => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return SecretType.basicAuth;\n    case SecretTypeAbstraction.image:\n      return SecretType.dockerconfigjson;\n    default:\n      return SecretType.opaque;\n  }\n};\n\nexport const toTypeAbstraction = (secret): SecretTypeAbstraction => {\n  const { data, type } = secret;\n  switch (type) {\n    case SecretType.basicAuth:\n    case SecretType.sshAuth:\n      return SecretTypeAbstraction.source;\n    case SecretType.dockerconfigjson:\n    case SecretType.dockercfg:\n      return SecretTypeAbstraction.image;\n    default:\n      if (data?.[WebHookSecretKey] && _.size(data) === 1) {\n        return SecretTypeAbstraction.webhook;\n      }\n      return SecretTypeAbstraction.generic;\n  }\n};\n\nexport const generateSecret = (): string => {\n  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  return s4() + s4() + s4() + s4();\n};\n\nexport const determineSecretType = (stringData): SecretType => {\n  const dataKeys = _.keys(stringData).sort();\n  if (_.isEqual(dataKeys, ['tls.crt', 'tls.key'])) {\n    return SecretType.tls;\n  } else if (_.isEqual(dataKeys, ['ca.crt', 'namespace', 'service-ca.crt', 'token'])) {\n    return SecretType.serviceAccountToken;\n  } else if (_.isEqual(dataKeys, ['.dockercfg'])) {\n    return SecretType.dockercfg;\n  } else if (_.isEqual(dataKeys, ['.dockerconfigjson'])) {\n    return SecretType.dockerconfigjson;\n  } else if (_.isEqual(dataKeys, ['password', 'username'])) {\n    return SecretType.basicAuth;\n  } else if (_.isEqual(dataKeys, ['ssh-privatekey'])) {\n    return SecretType.sshAuth;\n  }\n  return SecretType.opaque;\n};\n\nexport const getImageSecretKey = (secretType: SecretType): string => {\n  switch (secretType) {\n    case SecretType.dockercfg:\n      return '.dockercfg';\n    case SecretType.dockerconfigjson:\n      return '.dockerconfigjson';\n    default:\n      return secretType;\n  }\n};\n\nexport const useSecretTitle = (\n  isCreate: boolean,\n  typeAbstraction: SecretTypeAbstraction,\n): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return isCreate ? t('public~Create key/value secret') : t('public~Edit key/value secret');\n    case SecretTypeAbstraction.image:\n      return isCreate ? t('public~Create image pull secret') : t('public~Edit image pull secret');\n    default:\n      return isCreate\n        ? t('public~Create {{secretType}} secret', { secretType: typeAbstraction })\n        : t('public~Edit {{secretType}} secret', { secretType: typeAbstraction });\n  }\n};\n\nexport const useSecretDescription = (typeAbstraction: SecretTypeAbstraction): string => {\n  const { t } = useTranslation();\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.generic:\n      return t(\n        'public~Key/value secrets let you inject sensitive data into your application as files or environment variables.',\n      );\n    case SecretTypeAbstraction.source:\n      return t('public~Source secrets let you authenticate against a Git server.');\n    case SecretTypeAbstraction.image:\n      return t('public~Image pull secrets let you authenticate against a private image registry.');\n    case SecretTypeAbstraction.webhook:\n      return t('public~Webhook secrets let you authenticate a webhook trigger.');\n    default:\n      return null;\n  }\n};\n","export * from './types';\nexport * from './services';\nexport * from './utils';\n","import {\n  BranchList,\n  BuildType,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n} from '../types';\nimport { detectBuildTypes, isModernWebApp } from '../utils/build-tool-detector';\n\nexport abstract class BaseService {\n  protected gitsource: GitSource;\n\n  constructor(gitsource: GitSource) {\n    this.gitsource = gitsource;\n  }\n\n  /**\n   * Fetch metadata of the repository.\n   */\n  protected abstract getRepoMetadata(): RepoMetadata;\n\n  /**\n   * Get the auth providor for the git service.\n   */\n  protected abstract getAuthProvider(): any;\n\n  /**\n   * Returns if repo reachable or not along with the api response.\n   */\n  abstract isRepoReachable(): Promise<RepoStatus>;\n\n  /**\n   * Returns list of branches for given gitsource.\n   */\n  abstract getRepoBranchList(): Promise<BranchList>;\n\n  /**\n   * Returns source code tree for given gitsource\n   */\n  abstract getRepoFileList(params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList>;\n\n  /**\n   * Returns list of detected languages.\n   */\n  abstract getRepoLanguageList(): Promise<RepoLanguageList>;\n\n  /**\n   * Creates a Webhook and returns the response status code.\n   */\n  abstract createRepoWebhook(\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean>;\n\n  /**\n   * Returns content of the file as a string.\n   */\n  abstract getFileContent(path: string): Promise<string | null>;\n\n  /**\n   * Check if Dockerfile present in the repo.\n   */\n  abstract isDockerfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if .tekton folder present in the repo.\n   */\n  abstract isTektonFolderPresent(): Promise<boolean>;\n\n  /**\n   * Checks if dockerfile exist in the repo and returns dockerfile content\n   */\n  abstract getDockerfileContent(): Promise<string>;\n\n  /**\n   * Check if func.yaml is present in the repo.\n   */\n  abstract isFuncYamlPresent(): Promise<boolean>;\n\n  /**\n   * Checks if func.yaml exist in the repo and returns func.yaml content\n   */\n  abstract getFuncYamlContent(): Promise<string>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract isDevfilePresent(): Promise<boolean>;\n\n  /**\n   * Check if Devfile present in the repo.\n   */\n  abstract getDevfileContent(): Promise<string>;\n\n  /**\n   * Checks if package.json exist in the repo and returns content of the file.\n   */\n  abstract getPackageJsonContent(): Promise<string>;\n\n  /**\n   * Detect build types for given gitsource, It runs regular expressions on file list\n   * and returns list of build types matched.\n   */\n  async detectBuildTypes(): Promise<BuildType[]> {\n    try {\n      const fileList = await this.getRepoFileList();\n      const buildTypes = detectBuildTypes(fileList.files);\n      if (fileList.files.includes('package.json')) {\n        const packageJsonContent = await this.getPackageJsonContent();\n        if (isModernWebApp(packageJsonContent)) {\n          return buildTypes.sort((a, b) => {\n            if (b.buildType === 'modern-webapp') return 1;\n            if (a.buildType === 'modern-webapp') return -1;\n            return 0;\n          });\n        }\n      }\n      return buildTypes;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n","import * as React from 'react';\nimport { AsyncComponent } from '../../utils/async';\n\n//TODO :Create a shared LazyDroppableFileInput component.\nexport const DroppableFileInput = (props) => (\n  <AsyncComponent\n    loader={() => import('../../utils/file-input').then((c) => c.DroppableFileInput)}\n    {...props}\n  />\n);\n","export * from './coreTekton';\nexport * from './pipeline';\nexport * from './pipelineRun';\nexport * from './pipelineResource';\nexport * from './task';\nexport * from './taskRun';\nexport * from './computedStatus';\n","import { safeLoad } from 'js-yaml';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { HttpError } from '@console/dynamic-plugin-sdk/src/utils/error/http-error';\n\nexport const API_PROXY_URL = '/api/dev-console/proxy/internet';\n\ntype ProxyRequest = {\n  allowInsecure?: boolean;\n  allowAuthHeader?: boolean;\n  method: string;\n  url: string;\n  headers?: Record<string, string[]>;\n  queryparams?: Record<string, string[]>;\n  body?: string;\n};\n\nexport type ProxyResponse = {\n  statusCode: number;\n  headers: Record<string, string[]>;\n  body: string;\n};\n\nconst isJSONString = (str: string): boolean => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const convertHeaders = (headers): Record<string, string[]> => {\n  return Object.keys(headers).reduce((output, key) => {\n    output[key] = [headers[key]];\n    return output;\n  }, {});\n};\n\n/**\n * Calls the proxy in our backend to bypass CORS headers.\n */\nexport const consoleProxyFetch = async (proxyRequest: ProxyRequest): Promise<ProxyResponse> => {\n  const proxyResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, proxyRequest);\n  if (!proxyResponse.statusCode) {\n    throw new Error('Unexpected proxy response: Status code is missing!');\n  }\n  if (proxyResponse.statusCode < 200 || proxyResponse.statusCode >= 300) {\n    throw new HttpError(\n      `Unexpected status code: ${proxyResponse.statusCode}`,\n      proxyResponse.statusCode,\n      null,\n      proxyResponse,\n    );\n  }\n  return proxyResponse;\n};\n\nexport const consoleProxyFetchJSON = <T>(proxyRequest: ProxyRequest): Promise<T> => {\n  return consoleProxyFetch(proxyRequest).then((response) => {\n    return isJSONString(response.body) ? JSON.parse(response.body) : safeLoad(response.body);\n  });\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\nimport { ActionGroup, Button } from '@patternfly/react-core';\nimport { useParams, useNavigate } from 'react-router-dom-v5-compat';\nimport { k8sCreate, k8sUpdate, K8sResourceKind, referenceFor } from '../../../module/k8s';\nimport { ButtonBar, PageHeading, resourceObjPath } from '../../utils';\nimport { ModalBody, ModalTitle, ModalSubmitFooter } from '../../factory/modal';\nimport { SecretModel } from '../../../models';\nimport { SecretTypeAbstraction } from './const';\nimport {\n  toDefaultSecretType,\n  determineSecretType,\n  useSecretTitle,\n  useSecretDescription,\n} from './utils';\nimport { SecretSubForm } from './SecretSubForm';\n\nexport const SecretFormWrapper: React.FC<BaseEditSecretProps_> = (props) => {\n  const { isCreate, modal, onCancel } = props;\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const existingSecret = _.pick(props.obj, ['metadata', 'type']);\n  const defaultSecretType = toDefaultSecretType(props.secretTypeAbstraction);\n  const initialSecret = _.defaultsDeep({}, props.fixed, existingSecret, {\n    apiVersion: 'v1',\n    data: {},\n    kind: 'Secret',\n    metadata: {\n      name: '',\n    },\n    type: defaultSecretType,\n  });\n\n  const [secretTypeAbstraction] = React.useState(props.secretTypeAbstraction);\n  const [secret, setSecret] = React.useState(initialSecret);\n  const [inProgress, setInProgress] = React.useState(false);\n  const [error, setError] = React.useState();\n  const [stringData, setStringData] = React.useState(\n    _.mapValues(_.get(props.obj, 'data'), (value) => {\n      return value ? Base64.decode(value) : '';\n    }),\n  );\n  const [base64StringData, setBase64StringData] = React.useState({});\n  const [disableForm, setDisableForm] = React.useState(false);\n  const title = useSecretTitle(isCreate, secretTypeAbstraction);\n  const helptext = useSecretDescription(secretTypeAbstraction);\n  const cancel = () => navigate(`/k8s/ns/${params.ns}/core~v1~Secret`);\n\n  const onDataChanged = (secretsData) => {\n    setStringData({ ...secretsData?.stringData });\n    setBase64StringData({ ...secretsData?.base64StringData });\n  };\n\n  const onError = (err) => {\n    setError(err);\n    setInProgress(false);\n  };\n\n  const onNameChanged = (event) => {\n    const name = event.target.value;\n    const newSecret = _.cloneDeep(secret);\n    newSecret.metadata.name = name;\n    setSecret(newSecret);\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    const { metadata } = secret;\n    setInProgress(true);\n    const data = {\n      ..._.mapValues(stringData, (value) => {\n        return Base64.encode(value);\n      }),\n      ...base64StringData,\n    };\n    const newSecret = _.assign(\n      {},\n      secret,\n      {\n        data,\n      },\n      // When creating new Secret, determine it's type from the `stringData` keys.\n      // When updating a Secret, use it's type.\n      isCreate ? { type: determineSecretType(stringData) } : {},\n    );\n    (isCreate\n      ? k8sCreate(SecretModel, newSecret)\n      : k8sUpdate(SecretModel, newSecret, metadata.namespace, newSecret.metadata.name)\n    ).then(\n      (s) => {\n        setInProgress(false);\n        if (props.onSave) {\n          props.onSave(s.metadata.name);\n        }\n        if (!props.modal) {\n          navigate(resourceObjPath(s, referenceFor(s)));\n        }\n      },\n      (err) => {\n        setError(err.message);\n        setInProgress(false);\n      },\n    );\n  };\n\n  const renderBody = () => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    return (\n      <>\n        <fieldset disabled={!isCreate}>\n          <div className=\"form-group\">\n            <label className=\"control-label co-required\" htmlFor=\"secret-name\">\n              {t('public~Secret name')}\n            </label>\n            <div>\n              <input\n                className=\"pf-v5-c-form-control\"\n                type=\"text\"\n                onChange={onNameChanged}\n                value={secret?.metadata?.name}\n                aria-describedby=\"secret-name-help\"\n                id=\"secret-name\"\n                data-test=\"secret-name\"\n                required\n              />\n              <p className=\"help-block\" id=\"secret-name-help\">\n                {t('public~Unique name of the new secret.')}\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <SecretSubForm\n          typeAbstraction={props.secretTypeAbstraction}\n          onChange={onDataChanged}\n          onError={onError}\n          onFormDisable={(disable) => setDisableForm(disable)}\n          stringData={stringData}\n          secretType={secret.type}\n          isCreate={isCreate}\n        />\n      </>\n    );\n  };\n\n  return modal ? (\n    <form className=\"co-create-secret-form modal-content\" onSubmit={save}>\n      <ModalTitle>{title}</ModalTitle>\n      <ModalBody>{renderBody()}</ModalBody>\n      <ModalSubmitFooter\n        errorMessage={error || ''}\n        inProgress={inProgress}\n        submitText={t('public~Create')}\n        cancel={onCancel || cancel}\n      />\n    </form>\n  ) : (\n    <div className=\"co-m-pane__form\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <PageHeading title={title} helpText={helptext} />\n      <div className=\"co-m-pane__body\">\n        <form className=\"co-m-pane__body-group co-create-secret-form\" onSubmit={save}>\n          {renderBody()}\n          <ButtonBar errorMessage={error} inProgress={inProgress}>\n            <ActionGroup className=\"pf-v5-c-form\">\n              <Button\n                type=\"submit\"\n                data-test=\"save-changes\"\n                isDisabled={disableForm}\n                variant=\"primary\"\n                id=\"save-changes\"\n              >\n                {props.saveButtonText || t('public~Create')}\n              </Button>\n              <Button type=\"button\" variant=\"secondary\" id=\"cancel\" onClick={onCancel || cancel}>\n                {t('public~Cancel')}\n              </Button>\n            </ActionGroup>\n          </ButtonBar>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ntype BaseEditSecretProps_ = {\n  obj?: K8sResourceKind;\n  fixed: any;\n  kind?: string;\n  isCreate?: boolean;\n  modal?: boolean;\n  secretTypeAbstraction?: SecretTypeAbstraction;\n  saveButtonText?: string;\n  onCancel?: () => void;\n  onSave?: (name: string) => void;\n};\n","import { ValidatedOptions } from '@patternfly/react-core';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { GitProvider } from '@console/git-service/src';\nimport { DetectedStrategy } from '@console/git-service/src/utils/import-strategy-detector';\nimport { DeploymentModel, DeploymentConfigModel } from '@console/internal/models';\nimport { K8sResourceKind, ContainerPort } from '@console/internal/module/k8s';\nimport { PipelineData } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { RepositoryFormValues } from '@console/pipelines-plugin/src/components/repository/types';\nimport { LazyLoader } from '@console/plugin-sdk';\nimport { NameValuePair, NameValueFromPair, LimitsData } from '@console/shared';\nimport { ClusterBuildStrategy } from '@console/shipwright-plugin/src/types';\nimport { NormalizedBuilderImages } from '../../utils/imagestream-utils';\nimport { HealthCheckFormProbe } from '../health-checks/health-checks-types';\n\nexport interface DeployImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: FirehoseList | WatchK8sResultsObject<K8sResourceKind[]>;\n}\nexport type ImageStreamPayload = boolean | K8sResourceKind;\n\nexport type ImageStreamState = {\n  accessLoading: ImageStreamPayload;\n  loading: ImageStreamPayload;\n  selectedImageStream: ImageStreamPayload;\n};\nexport enum ImageStreamActions {\n  setAccessLoading = 'setAccessLoading',\n  setLoading = 'setLoading',\n  setSelectedImageStream = 'setSelectedImageStream',\n}\nexport type ImageStreamAction = { type: ImageStreamActions; value: ImageStreamPayload };\nexport interface ImageStreamContextProps {\n  state: ImageStreamState;\n  dispatch: React.Dispatch<ImageStreamAction>;\n  hasImageStreams: boolean;\n  setHasImageStreams: (value: boolean) => void;\n  setValidated: (validated: ValidatedOptions) => void;\n}\nexport interface SourceToImageFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface GitImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\nexport interface DevfileImportFormProps {\n  builderImages?: NormalizedBuilderImages;\n  projects?: {\n    data: [];\n    loaded: boolean;\n  };\n}\n\nexport interface FirehoseList {\n  data?: K8sResourceKind[];\n  [key: string]: any;\n}\n\nexport interface DeployImageFormData {\n  formType?: string;\n  project: ProjectData;\n  application: ApplicationData;\n  name: string;\n  searchTerm: string;\n  allowInsecureRegistry: boolean;\n  registry: string;\n  imageStream: {\n    image: string;\n    tag: string;\n    namespace: string;\n  };\n  isi: ImageStreamImageData;\n  image: ImageStreamImageData;\n  runtimeIcon?: string;\n  isSearchingForImage: boolean;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  serverless?: ServerlessData;\n  pac?: PacData;\n  pipeline?: PipelineData;\n  labels: { [name: string]: string };\n  annotations?: { [name: string]: string };\n  env?: { [name: string]: string };\n  route: RouteData;\n  build: BuildData;\n  deployment: DeploymentData;\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n  fileUpload?: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport type FileUploadData = {\n  name: string;\n  value: File | '';\n  javaArgs?: string;\n};\n\nexport interface BaseFormData {\n  formType?: string;\n  name: string;\n  project: ProjectData;\n  application: ApplicationData;\n  serverless?: ServerlessData;\n  image: ImageData;\n  runtimeIcon?: string;\n  route: RouteData;\n  resources: Resources;\n  resourceTypesNotValid?: Resources[];\n  build: BuildData;\n  deployment: DeploymentData;\n  labels: { [name: string]: string };\n  limits: LimitsData;\n  healthChecks: HealthChecksFormData;\n}\nexport interface UploadJarFormData extends BaseFormData {\n  fileUpload: FileUploadData;\n  import?: ImportStrategyData;\n}\n\nexport interface GitImportFormData extends BaseFormData {\n  pipeline?: PipelineData;\n  resourceTypesNotValid?: Resources[];\n  git: GitData;\n  docker: DockerData;\n  devfile?: DevfileData;\n  pac?: PacData;\n  import?: ImportStrategyData;\n}\n\nexport interface ApplicationData {\n  initial?: string;\n  name: string;\n  selectedKey: string;\n  isInContext?: boolean;\n}\n\nexport interface ImageData {\n  selected: string;\n  recommended: string;\n  isRecommending: boolean;\n  couldNotRecommend: boolean;\n  tag: string;\n  tagObj: object;\n  ports: ContainerPort[];\n  imageEnv?: { [key: string]: string };\n}\n\nexport interface ImageStreamImageData {\n  name: string;\n  image: { [key: string]: any };\n  tag: string;\n  status: { metadata: {}; status: string };\n  ports: ContainerPort[];\n}\n\nexport interface ProjectData {\n  name: string;\n  displayName?: string;\n  description?: string;\n}\n\nexport interface GitData {\n  url: string;\n  detectedType?: GitProvider;\n  type: GitProvider;\n  ref: string;\n  dir: string;\n  showGitType: boolean;\n  secret: string;\n  isUrlValidating: boolean;\n  validated?: ValidatedOptions;\n  secretResource?: K8sResourceKind;\n}\n\nexport interface DockerData {\n  dockerfilePath?: string;\n  dockerfileHasError?: boolean;\n}\n\nexport type DevfileData = {\n  devfilePath?: string;\n  devfileContent?: string;\n  devfileSourceUrl?: string;\n  devfileHasError: boolean;\n  devfileSuggestedResources?: DevfileSuggestedResources;\n  devfileProjectType?: string;\n};\n\nexport type PacData = {\n  pacHasError: boolean;\n  repository: RepositoryFormValues;\n};\n\nexport type DevfileSuggestedResources = {\n  imageStream: K8sResourceKind;\n  buildResource: K8sResourceKind;\n  deployResource: K8sResourceKind;\n  service?: K8sResourceKind | null;\n  route?: K8sResourceKind | null;\n};\n\nexport interface RouteData {\n  disable?: boolean;\n  create: boolean;\n  targetPort: string;\n  unknownTargetPort?: string;\n  defaultUnknownPort?: number;\n  path?: string;\n  hostname?: string;\n  secure?: boolean;\n  tls?: TLSData;\n  labels?: { [name: string]: string };\n}\n\nexport interface TLSData {\n  termination: TerminationType;\n  insecureEdgeTerminationPolicy: InsecureTrafficType | PassthroughInsecureTrafficType;\n  certificate: string;\n  key: string;\n  caCertificate: string;\n  destinationCACertificate: string;\n}\n\nexport interface BuildData {\n  triggers: {\n    webhook?: boolean;\n    image?: boolean;\n    config?: boolean;\n  };\n  env: (NameValuePair | NameValueFromPair)[];\n  strategy: string;\n  source?: { type: string };\n  option?: BuildOptions;\n  clusterBuildStrategy?: ClusterBuildStrategy;\n}\n\nexport interface DetectedStrategyFormData extends DetectedStrategy {\n  title?: string;\n  iconUrl?: string;\n}\n\nexport interface ImportStrategyData {\n  loaded?: boolean;\n  knativeFuncLoaded?: boolean;\n  loadError?: string;\n  strategies?: DetectedStrategy[];\n  recommendedStrategy?: DetectedStrategyFormData;\n  selectedStrategy?: DetectedStrategyFormData;\n  showEditImportStrategy?: boolean;\n  strategyChanged?: boolean;\n}\n\nexport interface DeploymentData {\n  triggers: {\n    image: boolean;\n    config?: boolean;\n  };\n  replicas: number;\n  env: (NameValuePair | NameValueFromPair)[];\n}\n\nexport interface ServerlessData {\n  scaling: ServerlessScaling;\n  domainMapping?: string[];\n}\n\nexport interface ServerlessScaling {\n  minpods: number | '';\n  maxpods: number | '';\n  concurrencytarget: number | '';\n  concurrencylimit: number | '';\n  defaultConcurrencytarget?: number | '';\n  defaultConcurrencyutilization?: number | '';\n  autoscale: AutoscaleWindowType;\n  concurrencyutilization: number | '';\n}\n\nexport const GitReadableTypes = {\n  [GitProvider.GITHUB]: 'GitHub',\n  [GitProvider.GITLAB]: 'GitLab',\n  [GitProvider.GITEA]: 'Gitea',\n  [GitProvider.BITBUCKET]: 'Bitbucket',\n  [GitProvider.UNSURE]: 'Other',\n};\n\nexport enum ImportTypes {\n  git = 'git',\n  devfile = 'devfile',\n  docker = 'docker',\n  s2i = 's2i',\n}\n\nexport enum Resources {\n  OpenShift = 'openshift',\n  Kubernetes = 'kubernetes',\n  KnativeService = 'knative',\n}\n\nexport enum BuildOptions {\n  BUILDS = 'BUILDS',\n  SHIPWRIGHT_BUILD = 'SHIPWRIGHT_BUILD',\n  PIPELINES = 'PIPELINES',\n  DISABLED = 'DISABLED',\n}\n\nexport enum SampleRuntime {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'Node.js' = 'nodejs',\n  Quarkus = 'quarkus',\n  dotnet = 'dotnet',\n  Python = 'python',\n  Go = 'golang',\n  springboot = 'spring-boot',\n}\n\nexport const ReadableResourcesNames: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.labelKey,\n  [Resources.Kubernetes]: DeploymentModel.labelKey,\n  // t('devconsole~Serverless Deployment')\n  [Resources.KnativeService]: `devconsole~Serverless Deployment`,\n};\n\nexport const ReadableBuildOptions: Record<BuildOptions, string> = {\n  [BuildOptions.BUILDS]: 'devconsole~BuildConfig',\n  // t('devconsole~Builds for OpenShift (Shipwright)')\n  [BuildOptions.SHIPWRIGHT_BUILD]: 'devconsole~Builds for OpenShift (Shipwright)',\n  // t('devconsole~Build using pipelines')\n  [BuildOptions.PIPELINES]: 'devconsole~Build using pipelines',\n  [BuildOptions.DISABLED]: 'devconsole~Disabled',\n};\n\nexport const ResourcesKinds: Record<Resources, string> = {\n  [Resources.OpenShift]: DeploymentConfigModel.kind,\n  [Resources.Kubernetes]: DeploymentModel.kind,\n  [Resources.KnativeService]: 'Service',\n};\n\nexport interface ImportData {\n  type: ImportTypes;\n  title: string;\n  buildStrategy: string;\n  loader: LazyLoader<GitImportFormProps | SourceToImageFormProps>;\n}\n\nexport enum TerminationType {\n  EDGE = 'edge',\n  PASSTHROUGH = 'passthrough',\n  REENCRYPT = 'reencrypt',\n}\n\nexport enum InsecureTrafficType {\n  None = 'None',\n  Allow = 'Allow',\n  Redirect = 'Redirect',\n}\n\nexport enum PassthroughInsecureTrafficType {\n  None = 'None',\n  Redirect = 'Redirect',\n}\n\nexport interface AutoscaleWindowType {\n  autoscalewindow: number | '';\n  defaultAutoscalewindow?: number | '';\n  autoscalewindowUnit: string;\n  defaultAutoscalewindowUnit: string;\n}\n\nexport enum CPUUnits {\n  m = 'millicores',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '' = 'cores',\n}\n\nexport enum MemoryUnits {\n  Mi = 'Mi',\n  Gi = 'Gi',\n}\n\nexport enum ImportOptions {\n  GIT = 'GIT',\n  CONTAINER = 'CONTAINER',\n  CATALOG = 'CATALOG',\n  DOCKERFILE = 'DOCKERFILE',\n  DEVFILE = 'DEVFILE',\n  DATABASE = 'DATABASE',\n  EVENTSOURCE = 'EVENTSOURCE',\n  EVENTPUBSUB = 'EVENTPUBSUB',\n  OPERATORBACKED = 'OPERATORBACKED',\n  HELMCHARTS = 'HELMCHARTS',\n  SAMPLES = 'SAMPLES',\n  EVENTCHANNEL = 'EVENTCHANNEL',\n  EVENTBROKER = 'EVENTBROKER',\n  UPLOADJAR = 'UPLOADJAR',\n}\n\nexport interface HealthChecksFormData {\n  readinessProbe: HealthCheckFormProbe;\n  livenessProbe: HealthCheckFormProbe;\n  startupProbe?: HealthCheckFormProbe;\n}\n","import * as React from 'react';\nimport { SecretSubFormProps } from './types';\nimport { SecretTypeAbstraction } from './const';\nimport { SourceSecretForm } from './SourceSecretForm';\nimport { PullSecretForm } from './PullSecretForm';\nimport { WebHookSecretForm } from './WebHookSecretForm';\nimport { GenericSecretForm } from './GenericSecretForm';\n\nexport const SecretSubForm: React.FC<WithTypeAbstraction<SecretSubFormProps>> = ({\n  typeAbstraction,\n  ...props\n}) => {\n  switch (typeAbstraction) {\n    case SecretTypeAbstraction.source:\n      return <SourceSecretForm {...props} />;\n    case SecretTypeAbstraction.image:\n      return <PullSecretForm {...props} />;\n    case SecretTypeAbstraction.webhook:\n      return <WebHookSecretForm {...props} />;\n    default:\n      return <GenericSecretForm {...props} />;\n  }\n};\n\ntype WithTypeAbstraction<T> = T & {\n  typeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretType } from './const';\nimport { BasicAuthSubform } from './BasicAuthSubform';\nimport { SSHAuthSubform } from './SSHAuthSubform';\nimport { SecretStringData } from './types';\n\nclass SourceSecretFormWithTranslation extends React.Component<\n  SourceSecretFormProps & WithT,\n  SourceSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.secretType,\n      stringData: this.props.stringData || {},\n      authType: SecretType.basicAuth,\n    };\n    this.changeAuthenticationType = this.changeAuthenticationType.bind(this);\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  changeAuthenticationType(type: SecretType) {\n    this.setState(\n      {\n        type,\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  onDataChanged(secretsData) {\n    this.setState(\n      {\n        stringData: { ...secretsData },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const authTypes = {\n      [SecretType.basicAuth]: t('public~Basic authentication'),\n      [SecretType.sshAuth]: t('public~SSH key'),\n    };\n    return (\n      <>\n        {this.props.isCreate ? (\n          <div className=\"form-group\">\n            <label className=\"control-label\" htmlFor=\"secret-type\">\n              {t('public~Authentication type')}\n            </label>\n            <div className=\"co-create-secret__dropdown\">\n              <Dropdown\n                items={authTypes}\n                dropDownClassName=\"dropdown--full-width\"\n                id=\"dropdown-selectbox\"\n                selectedKey={this.state.authType}\n                onChange={this.changeAuthenticationType}\n              />\n            </div>\n          </div>\n        ) : null}\n        {this.state.type === SecretType.basicAuth ? (\n          <BasicAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        ) : (\n          <SSHAuthSubform onChange={this.onDataChanged} stringData={this.state.stringData} />\n        )}\n      </>\n    );\n  }\n}\n\nexport const SourceSecretForm = withTranslation()(SourceSecretFormWithTranslation);\n\ntype SourceSecretFormState = {\n  type: SecretType;\n  stringData: SecretStringData;\n  authType: SecretType.basicAuth | SecretType.sshAuth;\n};\n\ntype SourceSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  secretType: SecretType;\n  isCreate: boolean;\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { SecretStringData } from './types';\n\nclass BasicAuthSubformWithTranslation extends React.Component<\n  BasicAuthSubformProps & WithT,\n  BasicAuthSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.stringData.username || '',\n      password: this.props.stringData.password || '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n  changeData(event) {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      } as BasicAuthSubformState,\n      () => this.props.onChange(this.state),\n    );\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"username\">\n            {t('public~Username')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"username\"\n              data-test=\"secret-username\"\n              aria-describedby=\"username-help\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.changeData}\n              value={this.state.username}\n            />\n            <p className=\"help-block\" id=\"username-help\">\n              {t('public~Optional username for Git authentication.')}\n            </p>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor=\"password\">\n            {t('public~Password or token')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id=\"password\"\n              data-test=\"secret-password\"\n              aria-describedby=\"password-help\"\n              type=\"password\"\n              name=\"password\"\n              onChange={this.changeData}\n              value={this.state.password}\n              required\n            />\n            <p className=\"help-block\" id=\"password-help\">\n              {t(\n                'public~Password or token for Git authentication. Required if a ca.crt or .gitconfig file is not specified.',\n              )}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const BasicAuthSubform = withTranslation()(BasicAuthSubformWithTranslation);\n\ntype BasicAuthSubformState = {\n  username: string;\n  password: string;\n};\n\ntype BasicAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { SecretStringData } from './types';\n\nexport const SSHAuthSubform: React.FC<SSHAuthSubformProps> = ({ onChange, stringData }) => {\n  const { t } = useTranslation();\n  const onFileChange = (fileData: string) => {\n    const value = fileData.endsWith('\\n') ? fileData : `${fileData}\\n`;\n    onChange({ 'ssh-privatekey': value });\n  };\n  return (\n    <DroppableFileInput\n      onChange={onFileChange}\n      inputFileData={stringData['ssh-privatekey'] || ''}\n      id=\"ssh-privatekey\"\n      label={t('public~SSH private key')}\n      inputFieldHelpText={t(\n        'public~Drag and drop file with your private SSH key here or browse to upload it.',\n      )}\n      textareaFieldHelpText={t('public~Private SSH key file for Git authentication.')}\n      isRequired={true}\n    />\n  );\n};\n\ntype SSHAuthSubformProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown } from '../../utils';\nimport { SecretSubFormProps } from './types';\nimport { getImageSecretKey } from './utils';\nimport { AUTHS_KEY } from './const';\nimport { CreateConfigSubform } from './CreateConfigSubform';\nimport { UploadConfigSubform } from './UploadConfigSubform';\n\nexport const PullSecretForm: React.FC<SecretSubFormProps> = ({\n  onChange,\n  onError,\n  onFormDisable,\n  stringData,\n  secretType,\n  isCreate,\n}) => {\n  const [authType, setAuthType] = React.useState('credentials');\n  const { t } = useTranslation();\n\n  const pullSecretData = React.useMemo<PullSecretData>(() => {\n    try {\n      const key = getImageSecretKey(secretType);\n      const jsonContent = stringData[key] ?? '{}';\n      return JSON.parse(jsonContent);\n    } catch (err) {\n      onError(`Error parsing secret's data: ${err.message}`);\n      return {};\n    }\n  }, [stringData, secretType]);\n\n  const onDataChanged = React.useCallback(\n    (secretData: PullSecretData) => {\n      if (!_.isError(secretData)) {\n        onFormDisable(false);\n      }\n      const newDataKey = secretData[AUTHS_KEY] ? '.dockerconfigjson' : '.dockercfg';\n      onChange({\n        stringData: {\n          [newDataKey]: JSON.stringify(secretData),\n        },\n        base64StringData: {},\n      });\n    },\n    [onFormDisable, onchange],\n  );\n\n  const authTypes = {\n    credentials: t('public~Image registry credentials'),\n    'config-file': t('public~Upload configuration file'),\n  };\n\n  return (\n    <>\n      {isCreate && (\n        <div className=\"form-group\">\n          <label className=\"control-label\" htmlFor=\"secret-type\">\n            {t('public~Authentication type')}\n          </label>\n          <div className=\"co-create-secret__dropdown\">\n            <Dropdown\n              items={authTypes}\n              dropDownClassName=\"dropdown--full-width\"\n              id=\"dropdown-selectbox\"\n              selectedKey={authType}\n              onChange={setAuthType}\n            />\n          </div>\n        </div>\n      )}\n      {authType === 'credentials' ? (\n        <CreateConfigSubform onChange={onDataChanged} stringData={pullSecretData} />\n      ) : (\n        <UploadConfigSubform\n          onChange={onDataChanged}\n          stringData={pullSecretData}\n          onDisable={onFormDisable}\n        />\n      )}\n    </>\n  );\n};\n\ntype DockerConfigData = {\n  [url: string]: {\n    username: string;\n    password: string;\n    email: string;\n    auth: string;\n  };\n};\n\ntype DockerConfigJSONData = {\n  auths: DockerConfigData;\n};\n\ntype PullSecretData = DockerConfigData | DockerConfigJSONData;\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { AUTHS_KEY } from './const';\nimport { PullSecretCredentialEntry } from './PullSecretCredentialEntry';\n\nclass CreateConfigSubformWithTranslation extends React.Component<\n  CreateConfigSubformProps & WithT,\n  CreateConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // If user creates a new image secret by filling out the form a 'kubernetes.io/dockerconfigjson' secret will be created.\n      isDockerconfigjson: _.isEmpty(this.props.stringData) || !!this.props.stringData[AUTHS_KEY],\n      secretEntriesArray: this.imageSecretObjectToArray(\n        this.props.stringData?.[AUTHS_KEY] || this.props.stringData,\n      ),\n      hasDuplicate: false,\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newImageSecretEntry() {\n    return {\n      entry: {\n        address: '',\n        username: '',\n        password: '',\n        email: '',\n        auth: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  imageSecretObjectToArray(imageSecretObject) {\n    const imageSecretArray = [];\n    if (_.isEmpty(imageSecretObject)) {\n      return _.concat(imageSecretArray, this.newImageSecretEntry());\n    }\n    _.each(imageSecretObject, (v, k) => {\n      // Decode and parse 'auth' in case 'username' and 'password' are not part of the secret.\n      const decodedAuth = Base64.decode(_.get(v, 'auth', ''));\n      const parsedAuth = _.isEmpty(decodedAuth) ? _.fill(Array(2), '') : _.split(decodedAuth, ':');\n      imageSecretArray.push({\n        entry: {\n          address: k,\n          username: _.get(v, 'username', parsedAuth[0]),\n          password: _.get(v, 'password', parsedAuth[1]),\n          email: _.get(v, 'email', ''),\n          auth: _.get(v, 'auth', ''),\n        },\n        uid: _.get(v, 'uid', _.uniqueId()),\n      });\n    });\n    return imageSecretArray;\n  }\n  imageSecretArrayToObject(imageSecretArray) {\n    const imageSecretsObject = {};\n    _.each(imageSecretArray, (value) => {\n      imageSecretsObject[value.entry.address] = _.pick(value.entry, [\n        'username',\n        'password',\n        'auth',\n        'email',\n      ]);\n    });\n    return imageSecretsObject;\n  }\n  propagateEntryChange(secretEntriesArray) {\n    const imageSecretObject = this.imageSecretArrayToObject(secretEntriesArray);\n    this.props.onChange(\n      this.state.isDockerconfigjson ? { [AUTHS_KEY]: imageSecretObject } : imageSecretObject,\n    );\n  }\n  onDataChanged(updatedEntry, entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        const updatedEntryData = {\n          uid: secretEntriesArray[entryIndex].uid,\n          entry: updatedEntry,\n          auth: Base64.encode(`${updatedEntry.username}:${updatedEntry.password}`),\n        };\n        secretEntriesArray[entryIndex] = updatedEntryData;\n        return {\n          secretEntriesArray,\n        };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  removeEntry(entryIndex: number) {\n    this.setState(\n      (state: CreateConfigSubformState) => {\n        const secretEntriesArray = [...state.secretEntriesArray];\n        secretEntriesArray.splice(entryIndex, 1);\n        return { secretEntriesArray };\n      },\n      () => this.propagateEntryChange(this.state.secretEntriesArray),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newImageSecretEntry()),\n      },\n      () => {\n        this.propagateEntryChange(this.state.secretEntriesArray);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      const { uid, entry } = entryData ?? {};\n      const { address, email, password, username } = entry ?? {};\n      return (\n        <div className=\"co-add-remove-form__entry\" key={uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                onClick={() => this.removeEntry(index)}\n                type=\"button\"\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove credentials')}\n              </Button>\n            </div>\n          )}\n          <PullSecretCredentialEntry\n            id={index}\n            address={address}\n            email={email}\n            password={password}\n            username={username}\n            onChange={this.onDataChanged}\n          />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add credentials')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const CreateConfigSubform = withTranslation()(CreateConfigSubformWithTranslation);\n\ntype CreateConfigSubformState = {\n  isDockerconfigjson: boolean;\n  hasDuplicate: boolean;\n  secretEntriesArray: {\n    entry: {\n      address: string;\n      username: string;\n      password: string;\n      email: string;\n      auth: string;\n    };\n    uid: string;\n  }[];\n};\n\ntype CreateConfigSubformProps = {\n  onChange: Function;\n  stringData: {\n    [key: string]: any;\n  };\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Base64 } from 'js-base64';\n\nexport const PullSecretCredentialEntry: React.FC<PullSecretCredentialEntryProps> = ({\n  id,\n  address,\n  email,\n  password,\n  username,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n\n  const updateEntry = (name: string, value: string): void => {\n    const trimmedUsername = username.trim();\n    const trimmedPassword = password.trim();\n    const auth = username && password ? Base64.encode(`${trimmedUsername}:${trimmedPassword}`) : '';\n    onChange(\n      {\n        address,\n        username,\n        password,\n        email,\n        [name]: value,\n        ...(auth ? { auth } : {}),\n      },\n      id,\n    );\n  };\n\n  const handleBlurEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value.trim());\n\n  const handleChangeEvent = (e: React.SyntheticEvent<HTMLInputElement>) =>\n    updateEntry(e.currentTarget.name, e.currentTarget.value);\n\n  return (\n    <div className=\"co-m-pane__body-group\" data-test-id=\"create-image-secret-form\">\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-address`}>\n          {t('public~Registry server address')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-address`}\n            aria-describedby={`${id}-address-help`}\n            type=\"text\"\n            name=\"address\"\n            onChange={handleChangeEvent}\n            value={address}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-address\"\n            required\n          />\n        </div>\n        <p className=\"help-block\" id={`${id}-address-help`}>\n          {t('public~For example quay.io or docker.io')}\n        </p>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-username`}>\n          {t('public~Username')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-username`}\n            type=\"text\"\n            name=\"username\"\n            onChange={handleChangeEvent}\n            value={username}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-username\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor={`${id}-password`}>\n          {t('public~Password')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-password`}\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChangeEvent}\n            value={password}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-password\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"control-label\" htmlFor={`${id}-email`}>\n          {t('public~Email')}\n        </label>\n        <div>\n          <input\n            className=\"pf-v5-c-form-control\"\n            id={`${id}-email`}\n            type=\"text\"\n            name=\"email\"\n            onChange={handleChangeEvent}\n            value={email}\n            onBlur={handleBlurEvent}\n            data-test=\"image-secret-email\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype PullSecretCredentialEntryProps = {\n  id: number;\n  address: string;\n  email: string;\n  password: string;\n  username: string;\n  onChange: (updatedEntry, entryIndex: number) => void;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\n\nclass UploadConfigSubformWithTranslation extends React.Component<\n  UploadConfigSubformProps & WithT,\n  UploadConfigSubformState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configFile: _.isEmpty(this.props.stringData) ? '' : JSON.stringify(this.props.stringData),\n      parseError: false,\n    };\n    this.changeData = this.changeData.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n  changeData(event) {\n    this.updateState(_.attempt(JSON.parse, event.target.value), event.target.value);\n  }\n  onFileChange(fileData) {\n    this.updateState(_.attempt(JSON.parse, fileData), fileData);\n  }\n  updateState(parsedData, stringData) {\n    this.setState(\n      {\n        configFile: stringData,\n        parseError: _.isError(parsedData),\n      },\n      () => {\n        this.props.onChange(parsedData);\n        this.props.onDisable(this.state.parseError);\n      },\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <>\n        <DroppableFileInput\n          onChange={this.onFileChange}\n          inputFileData={this.state.configFile}\n          id=\"docker-config\"\n          label={t('public~Configuration file')}\n          inputFieldHelpText={t('public~Upload a .dockercfg or .docker/config.json file.')}\n          textareaFieldHelpText={t(\n            'public~File with credentials and other configuration for connecting to a secured image registry.',\n          )}\n          isRequired={true}\n        />\n        {this.state.parseError && (\n          <div className=\"co-create-secret-warning\">\n            {t('public~Configuration file should be in JSON format.')}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport const UploadConfigSubform = withTranslation()(UploadConfigSubformWithTranslation);\n\ntype UploadConfigSubformState = {\n  parseError: boolean;\n  configFile: string;\n};\n\ntype UploadConfigSubformProps = {\n  onChange: Function;\n  onDisable: Function;\n  stringData: {\n    [key: string]: Object;\n  };\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { generateSecret } from './utils';\nimport { SecretStringData } from './types';\n\nclass WebHookSecretFormWithTranslation extends React.Component<\n  WebHookSecretFormProps & WithT,\n  WebHookSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stringData: { WebHookSecretKey: this.props.stringData.WebHookSecretKey || '' },\n    };\n    this.changeWebHookSecretkey = this.changeWebHookSecretkey.bind(this);\n    this.generateWebHookSecret = this.generateWebHookSecret.bind(this);\n  }\n  changeWebHookSecretkey(event) {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: event.target.value },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  generateWebHookSecret() {\n    this.setState(\n      {\n        stringData: { WebHookSecretKey: generateSecret() },\n      },\n      () => this.props.onChange(this.state),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"form-group\">\n        <label className=\"control-label co-required\" htmlFor=\"webhook-secret-key\">\n          {t('public~Webhook secret key')}\n        </label>\n        <div className=\"pf-v5-c-input-group\">\n          <input\n            className=\"pf-v5-c-form-control\"\n            id=\"webhook-secret-key\"\n            data-test=\"secret-key\"\n            type=\"text\"\n            name=\"webhookSecretKey\"\n            onChange={this.changeWebHookSecretkey}\n            value={this.state.stringData.WebHookSecretKey}\n            aria-describedby=\"webhook-secret-help\"\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={this.generateWebHookSecret}\n            className=\"pf-v5-c-button pf-m-tertiary\"\n            data-test=\"webhook-generate-button\"\n          >\n            {t('public~Generate')}\n          </button>\n        </div>\n        <p className=\"help-block\" id=\"webhook-secret-help\">\n          {t('public~Value of the secret will be supplied when invoking the webhook.')}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport const WebHookSecretForm = withTranslation()(WebHookSecretFormWithTranslation);\n\ntype WebHookSecretFormState = {\n  stringData: SecretStringData;\n};\n\ntype WebHookSecretFormProps = {\n  onChange: Function;\n  onError: Function;\n  onFormDisable: Function;\n  secretType: string;\n  stringData: SecretStringData;\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { Button } from '@patternfly/react-core';\nimport { MinusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/minus-circle-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport * as ITOB from 'istextorbinary/edition-es2017';\nimport { KeyValueEntryFormState, SecretStringData } from './types';\nimport { KeyValueEntryForm } from './KeyValueEntryForm';\n\nclass GenericSecretFormWithTranslation extends React.Component<\n  GenericSecretFormProps & WithT,\n  GenericSecretFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secretEntriesArray: this.genericSecretObjectToArray(this.props.stringData),\n    };\n    this.onDataChanged = this.onDataChanged.bind(this);\n  }\n  newGenericSecretEntry() {\n    return {\n      entry: {\n        key: '',\n        value: '',\n      },\n      uid: _.uniqueId(),\n    };\n  }\n  genericSecretObjectToArray(genericSecretObject) {\n    if (_.isEmpty(genericSecretObject)) {\n      return [this.newGenericSecretEntry()];\n    }\n    return _.map(genericSecretObject, (value, key) => {\n      const isBinary = ITOB.isBinary(null, value);\n      return {\n        uid: _.uniqueId(),\n        entry: {\n          key,\n          value: isBinary ? Base64.encode(value) : value,\n          isBase64: isBinary,\n          isBinary,\n        },\n      };\n    });\n  }\n  genericSecretArrayToObject(genericSecretArray) {\n    return _.reduce(\n      genericSecretArray,\n      (acc, k) =>\n        _.assign(acc, {\n          [k.entry.key]:\n            k.entry?.isBase64 || k.entry?.isBinary ? k.entry.value : Base64.encode(k.entry.value),\n        }),\n      {},\n    );\n  }\n  onDataChanged(updatedEntry, entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    const updatedEntryData = {\n      uid: updatedSecretEntriesArray[entryID].uid,\n      entry: updatedEntry,\n    };\n    updatedSecretEntriesArray[entryID] = updatedEntryData;\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  removeEntry(entryID) {\n    const updatedSecretEntriesArray = [...this.state.secretEntriesArray];\n    updatedSecretEntriesArray.splice(entryID, 1);\n    this.setState(\n      {\n        secretEntriesArray: updatedSecretEntriesArray,\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  addEntry() {\n    this.setState(\n      {\n        secretEntriesArray: _.concat(this.state.secretEntriesArray, this.newGenericSecretEntry()),\n      },\n      () =>\n        this.props.onChange({\n          base64StringData: this.genericSecretArrayToObject(this.state.secretEntriesArray),\n        }),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    const secretEntriesList = _.map(this.state.secretEntriesArray, (entryData, index) => {\n      return (\n        <div className=\"co-add-remove-form__entry\" key={entryData.uid}>\n          {_.size(this.state.secretEntriesArray) > 1 && (\n            <div className=\"co-add-remove-form__link--remove-entry\">\n              <Button\n                type=\"button\"\n                onClick={() => this.removeEntry(index)}\n                variant=\"link\"\n                data-test=\"remove-entry-button\"\n              >\n                <MinusCircleIcon className=\"co-icon-space-r\" />\n                {t('public~Remove key/value')}\n              </Button>\n            </div>\n          )}\n          <KeyValueEntryForm id={index} entry={entryData.entry} onChange={this.onDataChanged} />\n        </div>\n      );\n    });\n    return (\n      <>\n        {secretEntriesList}\n        <Button\n          className=\"co-create-secret-form__link--add-entry pf-m-link--align-left\"\n          onClick={() => this.addEntry()}\n          type=\"button\"\n          variant=\"link\"\n          data-test=\"add-credentials-button\"\n        >\n          <PlusCircleIcon className=\"co-icon-space-r\" />\n          {t('public~Add key/value')}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport const GenericSecretForm = withTranslation()(GenericSecretFormWithTranslation);\n\ntype GenericSecretFormProps = {\n  onChange: Function;\n  stringData: SecretStringData;\n  isCreate: boolean;\n};\n\ntype GenericSecretFormState = {\n  secretEntriesArray: {\n    entry: KeyValueEntryFormState;\n    uid: string;\n  }[];\n};\n","import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { DroppableFileInput } from './DropableFileInput';\nimport { KeyValueEntryFormState, KeyValueEntryFormProps } from './types';\n\nexport class KeyValueEntryFormWithTranslation extends React.Component<\n  KeyValueEntryFormProps & WithT,\n  KeyValueEntryFormState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: props.entry.key,\n      value: props.entry.value,\n      isBinary: props.entry.isBinary,\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyChange = this.onKeyChange.bind(this);\n  }\n  onValueChange(fileData, isBinary) {\n    this.setState(\n      {\n        value: fileData,\n        isBase64: isBinary,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  onKeyChange(event) {\n    this.setState(\n      {\n        key: event.target.value,\n      },\n      () => this.props.onChange(this.state, this.props.id),\n    );\n  }\n  render() {\n    const { t } = this.props;\n    return (\n      <div className=\"co-create-generic-secret__form\">\n        <div className=\"form-group\">\n          <label className=\"control-label co-required\" htmlFor={`${this.props.id}-key`}>\n            {t('public~Key')}\n          </label>\n          <div>\n            <input\n              className=\"pf-v5-c-form-control\"\n              id={`${this.props.id}-key`}\n              type=\"text\"\n              name=\"key\"\n              onChange={this.onKeyChange}\n              value={this.state.key}\n              data-test=\"secret-key\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div>\n            <DroppableFileInput\n              onChange={this.onValueChange}\n              inputFileData={this.state.value}\n              id={`${this.props.id}-value`}\n              label={t('public~Value')}\n              inputFieldHelpText={t(\n                'public~Drag and drop file with your value here or browse to upload it.',\n              )}\n              inputFileIsBinary={this.state.isBinary}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const KeyValueEntryForm = withTranslation()(KeyValueEntryFormWithTranslation);\n","export enum SecretType {\n  NO_AUTH,\n  BASIC_AUTH,\n  SSH,\n  PERSONAL_ACCESS_TOKEN,\n  OAUTH,\n}\n\nexport interface GitSource {\n  url: string;\n  secretType?: SecretType;\n  secretContent?: any;\n  ref?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport enum GitProvider {\n  GITHUB = 'github',\n  BITBUCKET = 'bitbucket',\n  GITLAB = 'gitlab',\n  GITEA = 'gitea',\n  UNSURE = 'other',\n  INVALID = '',\n}\n\nexport enum ImportStrategy {\n  S2I,\n  DOCKERFILE,\n  DEVFILE,\n  SERVERLESS_FUNCTION,\n}\n","import * as Octokit from '@octokit/rest';\nimport * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class GithubService extends BaseService {\n  private readonly client: Octokit;\n\n  private readonly metadata: RepoMetadata;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    const authOpts = this.getAuthProvider();\n    this.metadata = this.getRepoMetadata();\n    const baseUrl =\n      this.metadata.host === 'github.com' ? null : `https://${this.metadata.host}/api/v3`;\n    this.client = new Octokit({ ...authOpts, baseUrl });\n  }\n\n  protected getAuthProvider = (): Octokit.Options => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.BASIC_AUTH:\n      case SecretType.OAUTH:\n        return { auth: Base64.decode(this.gitsource.secretContent.password) };\n      default:\n        return null;\n    }\n  };\n\n  protected getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, source } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host: source,\n      defaultBranch: this.gitsource.ref,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      const resp = await this.client.repos.get({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n\n      if (resp.status === 200) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 403: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 404: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const resp = await this.client.repos.listBranches({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      const list = resp.data.map((r) => {\n        return r.name;\n      });\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        ...(params && params?.specificPath\n          ? { path: `${this.metadata.contextDir}/${params.specificPath}` }\n          : { path: this.metadata.contextDir }),\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      let files = [];\n      if (resp.status === 200 && Array.isArray(resp.data)) {\n        files = resp.data.map((t) => t.name);\n      }\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const resp = await this.client.repos.listLanguages({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n      });\n      if (resp.status === 200) {\n        return { languages: Object.keys(resp.data) };\n      }\n      return { languages: [] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const headers = {\n      Accept: ['application/vnd.github+json'],\n      Authorization: [`Bearer ${token}`],\n      'X-GitHub-Api-Version': ['2022-11-28'],\n    };\n    const body = {\n      name: 'web',\n      active: true,\n      config: {\n        url: webhookURL,\n        content_type: 'json',\n        insecure_ssl: sslVerification ? '0' : '1',\n        secret: webhookSecret,\n      },\n      events: ['push', 'pull_request'],\n    };\n    const AddWebhookBaseURL =\n      this.metadata.host === 'github.com'\n        ? `https://api.github.com`\n        : `https://${this.metadata.host}/api/v3`;\n    /* Using DevConsole Proxy to create webhook as Octokit is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${AddWebhookBaseURL}/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      return resp.status === 200;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const resp = await this.client.repos.getContents({\n        owner: this.metadata.owner,\n        repo: this.metadata.repoName,\n        path,\n        ...(this.metadata.defaultBranch ? { ref: this.metadata.defaultBranch } : {}),\n      });\n      if (resp.status === 200) {\n        // eslint-disable-next-line dot-notation\n        return Buffer.from(resp.data['content'], 'base64').toString();\n      }\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { Base64 } from 'js-base64';\nimport * as ParseBitbucketUrl from 'parse-bitbucket-url';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\nexport class BitbucketService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private baseURL = 'https://api.bitbucket.org/2.0';\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (this.metadata.host !== 'bitbucket.org') {\n      this.baseURL = `https://${this.metadata.host}/rest/api/1.0`;\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.BASIC_AUTH: {\n        const { username, password } = this.gitsource.secretContent;\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { Authorization: `Basic ${encodedAuth}` };\n      }\n      default:\n        return null;\n    }\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, host } = ParseBitbucketUrl(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref || 'HEAD',\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      if (data.slug === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        default: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n      }\n    }\n    return RepoStatus.Unreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/branches`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/refs/branches`;\n    try {\n      const data = await this.fetchJson(url);\n      const list = data.values.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  isServerURL = (isServer: boolean, specificPath?: string) => {\n    let url = '';\n    if (specificPath) {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}/${specificPath}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}/${specificPath}?pagelen=50`;\n    } else {\n      url = isServer\n        ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/files/${this.metadata.contextDir}?limit=50&at=${this.metadata.defaultBranch}`\n        : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${this.metadata.contextDir}?pagelen=50`;\n    }\n    return url;\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? this.isServerURL(this.isServer, params.specificPath)\n      : this.isServerURL(this.isServer);\n    try {\n      const data = await this.fetchJson(url);\n      const files = this.isServer ? data.values : data.values?.map((f) => f.path) || [];\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data = await this.fetchJson(url);\n      return { languages: [data.language] };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n  ): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`Basic ${token}`],\n    };\n    const body = {\n      url: webhookURL,\n      events: ['repo:push', 'pullrequest:created', 'pullrequest:updated'],\n      skip_cert_verification: !sslVerification,\n      active: true,\n    };\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/hooks`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Bitbucket is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = this.isServer\n      ? `${this.baseURL}/projects/${this.metadata.owner}/repos/${this.metadata.repoName}/raw/${filePath}?at=${this.metadata.defaultBranch}`\n      : `${this.baseURL}/repositories/${this.metadata.owner}/${this.metadata.repoName}/src/${this.metadata.defaultBranch}/${filePath}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Gitlab } from 'gitlab';\nimport i18n from 'i18next';\nimport { Base64 } from 'js-base64';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport { API_PROXY_URL, ProxyResponse } from '@console/shared/src/utils/proxy';\nimport {\n  GitSource,\n  SecretType,\n  RepoMetadata,\n  BranchList,\n  RepoLanguageList,\n  RepoFileList,\n  RepoStatus,\n} from '../types';\nimport { BaseService } from './base-service';\n\ntype GitlabRepo = {\n  id: number;\n  path_with_namespace: string;\n};\n\nconst removeLeadingSlash = (str: string) => str?.replace(/^\\//, '') || '';\n\nexport class GitlabService extends BaseService {\n  private readonly client: any;\n\n  private readonly metadata: RepoMetadata;\n\n  private repo: GitlabRepo;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    const token = this.getAuthProvider();\n    this.client = new Gitlab({\n      host: this.metadata.host,\n      token,\n    });\n    this.repo = null;\n  }\n\n  private getRepo = async (): Promise<GitlabRepo> => {\n    if (this.repo) {\n      return Promise.resolve(this.repo);\n    }\n    const repo: GitlabRepo = await this.client.Projects.show(this.metadata.fullName);\n    if (!repo) {\n      throw new Error(i18n.t('git-service~Unable to find repository'));\n    } else if (repo.path_with_namespace !== this.metadata.fullName) {\n      throw new Error(\n        i18n.t('git-service~Repository path {{path}} does not match expected name {{name}}', {\n          path: repo.path_with_namespace,\n          name: this.metadata.fullName,\n        }),\n      );\n    }\n\n    this.repo = repo;\n    return Promise.resolve(this.repo);\n  };\n\n  getRepoMetadata(): RepoMetadata {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = removeLeadingSlash(this.gitsource.contextDir);\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  }\n\n  getAuthProvider = (): any => {\n    switch (this.gitsource.secretType) {\n      case SecretType.PERSONAL_ACCESS_TOKEN:\n      case SecretType.OAUTH:\n      case SecretType.BASIC_AUTH:\n        return Base64.decode(this.gitsource.secretContent.password);\n      default:\n        return null;\n    }\n  };\n\n  getProjectId = async (): Promise<any> => {\n    try {\n      const repo = await this.getRepo();\n      return repo.id;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    try {\n      await this.getRepo();\n      return RepoStatus.Reachable;\n    } catch (e) {\n      switch (e.status) {\n        case 429: {\n          return RepoStatus.RateLimitExceeded;\n        }\n        case 403: {\n          return RepoStatus.PrivateRepo;\n        }\n        case 404: {\n          return RepoStatus.ResourceNotFound;\n        }\n        case 422: {\n          return RepoStatus.InvalidGitTypeSelected;\n        }\n        default: {\n          return RepoStatus.Unreachable;\n        }\n      }\n    }\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Branches.all(projectID);\n      const list = resp.map((b) => b.name);\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: {\n    specificPath?: string;\n    includeFolder?: boolean;\n  }): Promise<RepoFileList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        ...(params?.specificPath\n          ? { path: this.filePath(params.specificPath) }\n          : { path: this.metadata.contextDir }),\n      });\n      const files = resp.reduce((acc, file) => {\n        if (file.type === 'blob' || (params?.includeFolder && file.type === 'tree'))\n          acc.push(file.path);\n        return acc;\n      }, []);\n      return { files };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Projects.languages(projectID);\n      return { languages: Object.keys(resp) };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  createRepoWebhook = async (\n    token: string,\n    webhookURL: string,\n    sslVerification: boolean,\n    webhookSecret: string,\n  ): Promise<boolean> => {\n    const projectID = await this.getProjectId();\n    const headers = {\n      'Content-Type': ['application/json'],\n      'PRIVATE-TOKEN': [token],\n    };\n    const body = {\n      url: webhookURL,\n      push_events: true,\n      merge_requests_events: true,\n      enable_ssl_verification: sslVerification,\n      token: webhookSecret,\n    };\n    /* Using DevConsole Proxy to create webhook as Gitlab is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url: `${this.metadata.host}/api/v4/projects/${projectID}/hooks`,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      await this.client.RepositoryFiles.showRaw(projectID, path, ref);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    try {\n      const projectID = await this.getProjectId();\n      const ref = this.metadata.defaultBranch || (this.repo as any)?.default_branch;\n      const filePath = path.replace(/^\\/+/, '');\n      return await this.client.RepositoryFiles.showRaw(projectID, filePath, ref);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  filePath = (file: string): string => {\n    return this.metadata.contextDir ? `${this.metadata.contextDir}/${file}` : file;\n  };\n\n  isDockerfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isTektonFolderPresent = async (): Promise<boolean> => {\n    try {\n      const projectID = await this.getProjectId();\n      const resp = await this.client.Repositories.tree(projectID, {\n        path: this.metadata.contextDir,\n      });\n      const tektonFolderPresent = resp.find(\n        (file) => file.type === 'tree' && file.name === '.tekton',\n      );\n      return !!tektonFolderPresent;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getDockerfileContent = () =>\n    this.getFileContent(this.filePath(`${this.metadata.dockerfilePath}`));\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(this.filePath('func.yaml')) || this.isFilePresent(this.filePath('func.yml'));\n\n  getFuncYamlContent = () =>\n    this.getFileContent(this.filePath('func.yaml')) ||\n    this.getFileContent(this.filePath('func.yml'));\n\n  isDevfilePresent = () => this.isFilePresent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getDevfileContent = () => this.getFileContent(this.filePath(`${this.metadata.devfilePath}`));\n\n  getPackageJsonContent = () => this.getFileContent(this.filePath('package.json'));\n}\n","import * as GitUrlParse from 'git-url-parse';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport 'whatwg-fetch';\nimport { consoleFetchJSON } from '@console/dynamic-plugin-sdk/src/lib-core';\nimport {\n  API_PROXY_URL,\n  ProxyResponse,\n  consoleProxyFetchJSON,\n  convertHeaders,\n} from '@console/shared/src/utils/proxy';\nimport {\n  BranchList,\n  GitSource,\n  RepoFileList,\n  RepoLanguageList,\n  RepoMetadata,\n  RepoStatus,\n  SecretType,\n} from '../types';\nimport { definitions } from '../types/generated/gitea';\nimport { BaseService } from './base-service';\n\nexport class GiteaService extends BaseService {\n  private readonly metadata: RepoMetadata;\n\n  private isServer = false;\n\n  constructor(gitsource: GitSource) {\n    super(gitsource);\n    this.metadata = this.getRepoMetadata();\n    if (!this.metadata.host.includes('gitea.com')) {\n      this.isServer = true;\n    }\n  }\n\n  protected getAuthProvider = (): any => {\n    if (this.gitsource.secretType === SecretType.BASIC_AUTH) {\n      const { username, password } = this.gitsource.secretContent;\n      if (!_.isEmpty(username)) {\n        const encodedAuth = Base64.encode(`${Base64.decode(username)}:${Base64.decode(password)}`);\n        return { authorization: `Basic ${encodedAuth}` };\n      }\n      return { Authorization: `token ${Base64.decode(password)}` };\n    }\n    return null;\n  };\n\n  protected fetchJson = async (\n    url: string,\n    requestMethod?: string,\n    headers?: object,\n    body?: object,\n  ) => {\n    const authHeaders = this.getAuthProvider();\n    const requestHeaders = {\n      Accept: 'application/json',\n      ...authHeaders,\n      ...headers,\n    };\n    if (this.isServer) {\n      return consoleProxyFetchJSON({\n        allowInsecure: true,\n        url,\n        method: requestMethod || 'GET',\n        headers: convertHeaders(requestHeaders),\n        ...(body && { body: JSON.stringify(body) }),\n      });\n    }\n\n    const response = await fetch(url, {\n      method: requestMethod || 'GET',\n      headers: requestHeaders,\n      ...(body && { body: JSON.stringify(body) }),\n    });\n    if (!response.ok) {\n      throw response;\n    }\n    if (response.headers.get('Content-Type') === 'text/plain') {\n      return response.text();\n    }\n    return response.json();\n  };\n\n  getRepoMetadata = (): RepoMetadata => {\n    const { name, owner, resource, full_name: fullName } = GitUrlParse(this.gitsource.url);\n    const contextDir = this.gitsource.contextDir?.replace(/\\/$/, '') || '';\n    const host = `https://${resource}`;\n    return {\n      repoName: name,\n      owner,\n      host,\n      defaultBranch: this.gitsource.ref,\n      fullName,\n      contextDir,\n      devfilePath: this.gitsource.devfilePath,\n      dockerfilePath: this.gitsource.dockerfilePath,\n    };\n  };\n\n  isRepoReachable = async (): Promise<RepoStatus> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}`;\n    try {\n      const data: definitions['Repository'] = await this.fetchJson(url);\n      if (data?.name === this.metadata.repoName) {\n        return RepoStatus.Reachable;\n      }\n    } catch (e) {\n      return RepoStatus.GiteaRepoUnreachable;\n    }\n    return RepoStatus.GiteaRepoUnreachable;\n  };\n\n  getRepoBranchList = async (): Promise<BranchList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/branches`;\n    try {\n      const data: definitions['Branch'][] = await this.fetchJson(url);\n      const list = data?.map((b) => b.name) || [];\n      return { branches: list };\n    } catch (e) {\n      return { branches: [] };\n    }\n  };\n\n  getRepoFileList = async (params?: { specificPath?: string }): Promise<RepoFileList> => {\n    const url = params?.specificPath\n      ? `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}/${params.specificPath}`\n      : `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${this.metadata.contextDir}`;\n\n    try {\n      const data: definitions['ContentsResponse'][] = await this.fetchJson(url);\n      const list = data?.map((f) => f.name) || [];\n      return { files: list };\n    } catch (e) {\n      return { files: [] };\n    }\n  };\n\n  getRepoLanguageList = async (): Promise<RepoLanguageList> => {\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/languages`;\n    try {\n      const data: { [key: string]: number } = await this.fetchJson(url);\n      const list = Object?.keys(data) || [];\n      return { languages: list };\n    } catch (e) {\n      return { languages: [] };\n    }\n  };\n\n  /* TODO: Gitea PAC Support */\n  createRepoWebhook = async (token: string, webhookURL: string): Promise<boolean> => {\n    const headers = {\n      'Content-Type': ['application/json'],\n      Authorization: [`token ${token}`],\n    };\n    const body = {\n      active: true,\n      authorization_header: '',\n      branch_filter: '*',\n      config: {\n        content_type: 'json',\n        url: webhookURL,\n      },\n      events: ['push', 'pull_request'],\n      type: 'gitea',\n    };\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/hooks`;\n\n    /* Using DevConsole Proxy to create webhook as Gitea is giving CORS error */\n    const webhookResponse: ProxyResponse = await consoleFetchJSON.post(API_PROXY_URL, {\n      url,\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    });\n\n    return webhookResponse.statusCode === 201;\n  };\n\n  isFilePresent = async (path: string): Promise<boolean> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/contents/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      await this.fetchJson(url);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  getFileContent = async (path: string): Promise<string | null> => {\n    const filePath = path.replace(/^\\//, '');\n    const url = `${this.metadata.host}/api/v1/repos/${this.metadata.owner}/${this.metadata.repoName}/raw/${filePath}?ref=${this.metadata.defaultBranch}`;\n    try {\n      const data = await this.fetchJson(url);\n      return data as string;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error fetching file content', e);\n      return null;\n    }\n  };\n\n  isDockerfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isTektonFolderPresent = () => this.isFilePresent(`${this.metadata.contextDir}/.tekton`);\n\n  getDockerfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.dockerfilePath}`);\n\n  isFuncYamlPresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.isFilePresent(`${this.metadata.contextDir}/func.yml`);\n\n  getFuncYamlContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/func.yaml`) ||\n    this.getFileContent(`${this.metadata.contextDir}/func.yml`);\n\n  isDevfilePresent = () =>\n    this.isFilePresent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getDevfileContent = () =>\n    this.getFileContent(`${this.metadata.contextDir}/${this.metadata.devfilePath}`);\n\n  getPackageJsonContent = () => this.getFileContent(`${this.metadata.contextDir}/package.json`);\n}\n","import { BaseService } from '../services/base-service';\nimport { isModernWebApp } from './build-tool-detector';\n\ntype BuildTool = {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<string[]>;\n};\n\nconst BuildTools: BuildTool[] = [\n  {\n    name: 'Maven',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /pom.xml/,\n    priority: 0,\n  },\n  {\n    name: 'Gradle',\n    type: 'java',\n    language: 'java',\n    expectedRegexp: /.*gradle.*/,\n    priority: 0,\n  },\n  {\n    name: 'Golang',\n    type: 'golang',\n    language: 'go',\n    expectedRegexp: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Ruby',\n    type: 'ruby',\n    language: 'ruby',\n    expectedRegexp: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'NodeJS',\n    type: 'nodejs',\n    language: 'javascript',\n    expectedRegexp: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Modern Web App',\n    type: 'modern-webapp',\n    language: 'javascript',\n    expectedRegexp: /package\\.json/,\n    priority: 1,\n    customDetection: async (gitService) => {\n      const packageJson = await gitService.getPackageJsonContent();\n      return isModernWebApp(packageJson) ? ['package.json'] : [];\n    },\n  },\n  {\n    name: 'PHP',\n    type: 'php',\n    language: 'php',\n    expectedRegexp: RegExp([`index.php`, `composer.json`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Python',\n    type: 'python',\n    language: 'python',\n    expectedRegexp: RegExp([`requirements.txt`, `setup.py`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Perl',\n    type: 'perl',\n    language: 'perl',\n    expectedRegexp: RegExp([`index.pl`, `cpanfile`].join('|')),\n    priority: 0,\n  },\n  {\n    name: 'Dotnet',\n    type: 'dotnet',\n    language: 'C#',\n    expectedRegexp: RegExp([`project.json`, `.*.csproj`].join('|')),\n    priority: 0,\n  },\n];\n\nexport type DetectedBuildType = {\n  name: string;\n  type: string;\n  language: string;\n  priority: number;\n  detectedFiles: string[];\n};\n\nexport const detectBuildTypes = async (gitService: BaseService): Promise<DetectedBuildType[]> => {\n  const { files } = await gitService.getRepoFileList();\n\n  const buildTypes = await Promise.all(\n    BuildTools.map<Promise<DetectedBuildType>>(async (t) => {\n      let detectedFiles = files.filter((f) => t.expectedRegexp.test(f));\n      if (detectedFiles.length > 0 && t.customDetection) {\n        detectedFiles = await t.customDetection(gitService);\n      }\n      return {\n        name: t.name,\n        type: t.type,\n        language: t.language,\n        priority: t.priority,\n        detectedFiles,\n      };\n    }),\n  );\n\n  return buildTypes\n    .filter((t) => !!t.detectedFiles.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n};\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { ComputedStatus } from '../types';\n\nexport enum SucceedConditionReason {\n  PipelineRunCancelled = 'StoppedRunFinally',\n  PipelineRunStopped = 'CancelledRunFinally',\n  TaskRunCancelled = 'TaskRunCancelled',\n  Cancelled = 'Cancelled',\n  PipelineRunStopping = 'PipelineRunStopping',\n  PipelineRunPending = 'PipelineRunPending',\n  TaskRunStopping = 'TaskRunStopping',\n  CreateContainerConfigError = 'CreateContainerConfigError',\n  ExceededNodeResources = 'ExceededNodeResources',\n  ExceededResourceQuota = 'ExceededResourceQuota',\n  ConditionCheckFailed = 'ConditionCheckFailed',\n}\n\nexport const pipelineRunStatus = (pipelineRun): ComputedStatus => {\n  const conditions = _.get(pipelineRun, ['status', 'conditions'], []);\n  if (conditions.length === 0) return null;\n\n  const succeedCondition = conditions.find((c) => c.type === 'Succeeded');\n  const cancelledCondition = conditions.find((c) => c.reason === 'Cancelled');\n\n  if (\n    [\n      SucceedConditionReason.PipelineRunStopped,\n      SucceedConditionReason.PipelineRunCancelled,\n    ].includes(pipelineRun.spec?.status) &&\n    !cancelledCondition\n  ) {\n    return ComputedStatus.Cancelling;\n  }\n\n  if (!succeedCondition || !succeedCondition.status) {\n    return null;\n  }\n\n  const status =\n    succeedCondition.status === 'True'\n      ? ComputedStatus.Succeeded\n      : succeedCondition.status === 'False'\n      ? ComputedStatus.Failed\n      : ComputedStatus.Running;\n\n  if (succeedCondition.reason && succeedCondition.reason !== status) {\n    switch (succeedCondition.reason) {\n      case SucceedConditionReason.PipelineRunCancelled:\n      case SucceedConditionReason.TaskRunCancelled:\n      case SucceedConditionReason.Cancelled:\n      case SucceedConditionReason.PipelineRunStopped:\n        return ComputedStatus.Cancelled;\n      case SucceedConditionReason.PipelineRunStopping:\n      case SucceedConditionReason.TaskRunStopping:\n        return ComputedStatus.Failed;\n      case SucceedConditionReason.CreateContainerConfigError:\n      case SucceedConditionReason.ExceededNodeResources:\n      case SucceedConditionReason.ExceededResourceQuota:\n      case SucceedConditionReason.PipelineRunPending:\n        return ComputedStatus.Pending;\n      case SucceedConditionReason.ConditionCheckFailed:\n        return ComputedStatus.Skipped;\n      default:\n        return status;\n    }\n  }\n  return status;\n};\n\n// Converts the PipelineRun (and TaskRun) condition status into a human readable string.\n// See also tkn cli implementation at https://github.com/tektoncd/cli/blob/release-v0.15.0/pkg/formatted/k8s.go#L54-L83\nexport const pipelineRunStatusTitle = (pipelineRun): string => {\n  const status = pipelineRunStatus(pipelineRun);\n  if (!status) return '-';\n  switch (status) {\n    case ComputedStatus.Cancelled:\n      return i18next.t('pipelines-plugin~Cancelled');\n    case ComputedStatus.Failed:\n      return i18next.t('pipelines-plugin~Failed');\n    case ComputedStatus.Succeeded:\n      return i18next.t('pipelines-plugin~Succeeded');\n    case ComputedStatus.Pending:\n      return i18next.t('pipelines-plugin~Pending');\n    case ComputedStatus.Running:\n      return i18next.t('pipelines-plugin~Running');\n    case ComputedStatus.Skipped:\n      return i18next.t('pipelines-plugin~Skipped');\n    case ComputedStatus.Cancelling:\n      return i18next.t('pipelines-plugin~Cancelling');\n    default:\n      return status;\n  }\n};\n\nexport const pipelineFilterReducer = (pipeline): ComputedStatus => {\n  if (!pipeline.latestRun) return ComputedStatus.Other;\n  return pipelineRunStatus(pipeline.latestRun) || ComputedStatus.Other;\n};\n\nexport const pipelineTitleFilterReducer = (pipeline): string => {\n  if (!pipeline.latestRun) return '-';\n  return pipelineRunStatusTitle(pipeline.latestRun) || '-';\n};\n\nexport const pipelineRunTitleFilterReducer = (pipelineRun): string => {\n  const status = pipelineRunStatusTitle(pipelineRun);\n  return status || '-';\n};\nexport const pipelineRunFilterReducer = (pipelineRun): ComputedStatus => {\n  const status = pipelineRunStatus(pipelineRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const pipelineStatusFilter = (filters, pipeline) => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const status = pipelineFilterReducer(pipeline);\n  return filters.selected?.includes(status) || !_.includes(filters.all, status);\n};\n\nexport const pipelineRunStatusFilter = (phases, pipeline) => {\n  if (!phases || !phases.selected || !phases.selected.length) {\n    return true;\n  }\n\n  const status = pipelineRunFilterReducer(pipeline);\n  return phases.selected?.includes(status) || !_.includes(phases.all, status);\n};\n\nexport const pipelineResourceFilterReducer = (pipelineResource): string => {\n  return pipelineResource.spec.type;\n};\n\nexport const pipelineResourceTypeFilter = (filters, pipelineResource): boolean => {\n  if (!filters || !filters.selected || !filters.selected.length) {\n    return true;\n  }\n  const type = pipelineResourceFilterReducer(pipelineResource);\n  return filters.selected?.includes(type) || !_.includes(filters.all, type);\n};\n\nexport const taskRunFilterReducer = (taskRun): ComputedStatus => {\n  const status = pipelineRunStatus(taskRun);\n  return status || ComputedStatus.Other;\n};\n\nexport const taskRunFilterTitleReducer = (taskRun): string => {\n  const status = pipelineRunStatusTitle(taskRun);\n  return status || '-';\n};\n","import { PipelineKind } from '../../types';\n\nexport enum PipelineType {\n  PAC = 'pac',\n  PIPELINE = 'pipeline',\n}\nexport interface PipelineData {\n  enabled: boolean;\n  type?: PipelineType;\n  template?: PipelineKind;\n}\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { convertToBaseValue } from '@console/internal/components/utils';\nimport { PipelineType } from '@console/pipelines-plugin/src/components/import/import-types';\nimport { CREATE_APPLICATION_KEY } from '@console/topology/src/const';\nimport { isInteger } from '../../utils/yup-validation-util';\nimport { BuildOptions, Resources } from './import-types';\nimport { removeKsvcInfoFromDomainMapping } from './serverless/serverless-utils';\n\nconst hostnameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;\nconst pathRegex = /^\\/.*$/;\nconst projectNameRegex = /^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;\n\nexport const gitUrlRegex = /^((((ssh|git|https?:?):\\/\\/:?)(([^\\s@]+@|[^@]:?)[-\\w.]+(:\\d\\d+:?)?(\\/[-\\w.~/?[\\]!$&'()*+,;=:@%]*:?)?:?))|([^\\s@]+@[-\\w.]+:[-\\w.~/?[\\]!$&'()*+,;=:@%]*?:?))$/;\n\nconst convertToSec = (value: number, unit: string): number => {\n  switch (unit) {\n    case 'm': {\n      return value * 60;\n    }\n    case 'h': {\n      return value * 3600;\n    }\n    default: {\n      return value;\n    }\n  }\n};\n\nexport const projectNameValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      projectNameRegex,\n      \"Name must consist of lower case alphanumeric characters or '-' and must start and end with an alphanumeric character.\",\n    )\n    .required('Required'),\n});\n\nexport const applicationNameValidationSchema = yup.object().shape({\n  selectedKey: yup.string(),\n  name: yup\n    .string()\n    .max(63, 'Cannot be longer than 63 characters.')\n    .when('selectedKey', {\n      is: CREATE_APPLICATION_KEY,\n      then: yup.string().required('Required'),\n    }),\n});\n\nexport const deploymentValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    replicas: yup\n      .number()\n      .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n      .test(isInteger(t('devconsole~Replicas must be an integer.')))\n      .min(0, t('devconsole~Replicas must be greater than or equal to 0.'))\n      .max(\n        Number.MAX_SAFE_INTEGER,\n        t('devconsole~Replicas must be lesser than or equal to {{maxSafeInteger}}.', {\n          maxSafeInteger: Number.MAX_SAFE_INTEGER,\n        }),\n      )\n      .test({\n        name: 'isEmpty',\n        test: (value) => value !== undefined,\n        message: t('devconsole~This field cannot be empty.'),\n      }),\n  });\n\nexport const resourcesValidationSchema = yup\n  .string()\n  .oneOf([Resources.OpenShift, Resources.Kubernetes, Resources.KnativeService])\n  .required();\n\nexport const serverlessValidationSchema = (t: TFunction) =>\n  yup.object().when('resources', {\n    is: Resources.KnativeService,\n    then: yup.object().shape({\n      scaling: yup.object({\n        minpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Min Pods must be an integer.')))\n          .min(0, t('devconsole~Min Pods must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Min Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        maxpods: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Max Pods must be an integer.')))\n          .min(1, t('devconsole~Max Pods must be greater than or equal to 1.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Max Pods must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          )\n          .test({\n            test(limit) {\n              const { minpods } = this.parent;\n              return limit ? limit >= minpods : true;\n            },\n            message: t('devconsole~Max Pods must be greater than or equal to Min Pods.'),\n          }),\n        concurrencytarget: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency target must be an integer.')))\n          .min(0, t('devconsole~Concurrency target must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency target must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencylimit: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .test(isInteger(t('devconsole~Concurrency limit must be an integer.')))\n          .min(0, t('devconsole~Concurrency limit must be greater than or equal to 0.'))\n          .max(\n            Number.MAX_SAFE_INTEGER,\n            t('devconsole~Concurrency limit must be lesser than or equal to {{maxSafeInteger}}.', {\n              maxSafeInteger: Number.MAX_SAFE_INTEGER,\n            }),\n          ),\n        concurrencyutilization: yup\n          .number()\n          .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n          .min(0, t('devconsole~Concurrency utilization must be between 0 and 100.'))\n          .max(100, t('devconsole~Concurrency utilization must be between 0 and 100.')),\n        autoscale: yup.object().shape({\n          autoscalewindow: yup\n            .number()\n            .transform((cv) => (_.isNaN(cv) ? undefined : cv))\n            .test({\n              test(autoscalewindow) {\n                if (autoscalewindow) {\n                  const { autoscalewindowUnit } = this.parent;\n                  const value = convertToSec(autoscalewindow, autoscalewindowUnit);\n                  return value >= 6 && value <= 3600;\n                }\n                return true;\n              },\n              message: t('devconsole~Autoscale window must be between 6s and 1h.'),\n            }),\n        }),\n      }),\n      domainMapping: yup.array().of(\n        yup\n          .string()\n          .transform(removeKsvcInfoFromDomainMapping)\n          .matches(hostnameRegex, {\n            message: t(\n              'devconsole~Domain name must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n            ),\n            excludeEmptyString: true,\n          })\n          .test(\n            'domainname-has-segements',\n            t('devconsole~Domain name must consist of at least two segments separated by dots.'),\n            function (domainName: string) {\n              return domainName.split('.').length >= 2;\n            },\n          ),\n      ),\n    }),\n  });\n\nexport const routeValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    secure: yup.boolean(),\n    tls: yup.object().when('secure', {\n      is: true,\n      then: yup.object({\n        termination: yup.string().required(t('devconsole~Please select a termination type.')),\n      }),\n    }),\n    hostname: yup\n      .string()\n      .matches(hostnameRegex, {\n        message: t(\n          'devconsole~Hostname must consist of lower-case letters, numbers, periods, and hyphens. It must start and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .max(253, t('devconsole~Cannot be longer than 253 characters.')),\n    path: yup.string().matches(pathRegex, {\n      message: t('devconsole~Path must start with /.'),\n      excludeEmptyString: true,\n    }),\n    unknownTargetPort: yup\n      .number()\n      .typeError(t('devconsole~Port must be an integer.'))\n      .integer(t('devconsole~Port must be an integer.'))\n      .min(1, t('devconsole~Port must be between 1 and 65535.'))\n      .max(65535, t('devconsole~Port must be between 1 and 65535.')),\n  });\n\nexport const limitsValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    cpu: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limitUnit: yup.string(t('devconsole~Unit must be millicores or cores.')).ensure(),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${limit}${limitUnit}`) >=\n                convertToBaseValue(`${request}${requestUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~CPU limit must be greater than or equal to request.'),\n        }),\n    }),\n    memory: yup.object().shape({\n      request: yup\n        .number()\n        .transform((request) => (_.isNaN(request) ? undefined : request))\n        .min(0, t('devconsole~Request must be greater than or equal to 0.'))\n        .test({\n          test(request) {\n            const { requestUnit, limit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory request must be less than or equal to limit.'),\n        }),\n      requestUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n      limit: yup\n        .number()\n        .transform((limit) => (_.isNaN(limit) ? undefined : limit))\n        .min(0, t('devconsole~Limit must be greater than or equal to 0.'))\n        .test({\n          test(limit) {\n            const { request, requestUnit, limitUnit } = this.parent;\n            if (limit !== undefined) {\n              return (\n                convertToBaseValue(`${request}${requestUnit}`) <=\n                convertToBaseValue(`${limit}${limitUnit}`)\n              );\n            }\n            return true;\n          },\n          message: t('devconsole~Memory limit must be greater than or equal to request.'),\n        }),\n      limitUnit: yup.string(t('devconsole~Unit must be Mi or Gi.')),\n    }),\n  });\n\nexport const imageValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Source',\n    then: yup.object().shape({\n      selected: yup.string().required(t('devconsole~Required')),\n      tag: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const gitValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    url: yup\n      .string()\n      .max(2000, t('devconsole~Please enter a URL that is less then 2000 characters.'))\n      .matches(gitUrlRegex, t('devconsole~Invalid Git URL.'))\n      .required(t('devconsole~Required')),\n    type: yup.string().when('showGitType', {\n      is: true,\n      then: yup\n        .string()\n        .required(t('devconsole~We failed to detect the Git type. Please choose a Git type.')),\n    }),\n    showGitType: yup.boolean(),\n  });\n\nexport const dockerValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Docker',\n    then: yup.object().shape({\n      containerPort: yup\n        .number()\n        .test(isInteger(t('devconsole~Container port should be an integer'))),\n      dockerfilePath: yup.string().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const devfileValidationSchema = (t: TFunction) =>\n  yup.object().when('build', {\n    is: (build) => build.strategy === 'Devfile',\n    then: yup.object().shape({\n      devfilePath: yup.string().required(t('devconsole~Required')),\n      devfileContent: yup\n        .string()\n        .min(1, t('devconsole~Required'))\n        .required(t('devconsole~Required')),\n      devfileHasError: yup.boolean().oneOf([false]),\n      devfileSuggestedResources: yup.object().required(t('devconsole~Required')),\n    }),\n  });\n\nexport const buildValidationSchema = yup.object().shape({\n  strategy: yup.string(),\n});\n\nexport const searchTermValidationSchema = (t: TFunction) =>\n  yup.string().required(t('devconsole~Required'));\n\nexport const isiValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup.string().required(t('devconsole~Required')),\n    image: yup.object().required(t('devconsole~Required')),\n    tag: yup.string(),\n    status: yup.string().required(t('devconsole~Required')),\n  });\n\nexport const importFlowPipelineTemplateValidationSchema = yup\n  .object()\n  .when(['enabled', 'build.option', 'type'], {\n    is: (isPipelineEnabled, buildOption, pipelineType) =>\n      (isPipelineEnabled || buildOption === BuildOptions.PIPELINES) &&\n      pipelineType !== PipelineType.PAC,\n    then: yup.object().shape({\n      templateSelected: yup.string().required(),\n    }),\n  });\n","import { chart_color_green_400 as tektonGroupColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { K8sKind } from '@console/internal/module/k8s';\n\nconst color = tektonGroupColor.value;\n\nexport const PipelineModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Pipeline',\n  // t('pipelines-plugin~Pipeline')\n  labelKey: 'pipelines-plugin~Pipeline',\n  // t('pipelines-plugin~Pipelines')\n  labelPluralKey: 'pipelines-plugin~Pipelines',\n  plural: 'pipelines',\n  abbr: 'PL',\n  namespaced: true,\n  kind: 'Pipeline',\n  id: 'pipeline',\n  labelPlural: 'Pipelines',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'PipelineRun',\n  // t('pipelines-plugin~PipelineRun')\n  labelKey: 'pipelines-plugin~PipelineRun',\n  // t('pipelines-plugin~PipelineRuns')\n  labelPluralKey: 'pipelines-plugin~PipelineRuns',\n  plural: 'pipelineruns',\n  abbr: 'PLR',\n  namespaced: true,\n  kind: 'PipelineRun',\n  id: 'pipelinerun',\n  labelPlural: 'PipelineRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'Task',\n  // t('pipelines-plugin~Task')\n  labelKey: 'pipelines-plugin~Task',\n  // t('pipelines-plugin~Tasks')\n  labelPluralKey: 'pipelines-plugin~Tasks',\n  plural: 'tasks',\n  abbr: 'T',\n  namespaced: true,\n  kind: 'Task',\n  id: 'task',\n  labelPlural: 'Tasks',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const TaskRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TaskRun',\n  // t('pipelines-plugin~TaskRun')\n  labelKey: 'pipelines-plugin~TaskRun',\n  // t('pipelines-plugin~TaskRuns')\n  labelPluralKey: 'pipelines-plugin~TaskRuns',\n  plural: 'taskruns',\n  abbr: 'TR',\n  namespaced: true,\n  kind: 'TaskRun',\n  id: 'taskrun',\n  labelPlural: 'TaskRuns',\n  crd: true,\n  color,\n};\n\nexport const CustomRunModelV1Beta1: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'CustomRun',\n  // t('pipelines-plugin~CustomRun')\n  labelKey: 'pipelines-plugin~CustomRun',\n  // t('pipelines-plugin~CustomRuns')\n  labelPluralKey: 'pipelines-plugin~CustomRuns',\n  plural: 'customruns',\n  abbr: 'CR',\n  namespaced: true,\n  kind: 'CustomRun',\n  id: 'customrun',\n  labelPlural: 'CustomRuns',\n  crd: true,\n  color,\n};\n\nexport const PipelineResourceModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'PipelineResource',\n  // t('pipelines-plugin~PipelineResource')\n  labelKey: 'pipelines-plugin~PipelineResource',\n  // t('pipelines-plugin~PipelineResources')\n  labelPluralKey: 'pipelines-plugin~PipelineResources',\n  plural: 'pipelineresources',\n  abbr: 'PR',\n  namespaced: true,\n  kind: 'PipelineResource',\n  id: 'pipelineresource',\n  labelPlural: 'PipelineResources',\n  crd: true,\n  color,\n};\n\nexport const ClusterTaskModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTask',\n  // t('pipelines-plugin~ClusterTask')\n  labelKey: 'pipelines-plugin~ClusterTask',\n  // t('pipelines-plugin~ClusterTasks')\n  labelPluralKey: 'pipelines-plugin~ClusterTasks',\n  plural: 'clustertasks',\n  abbr: 'CT',\n  namespaced: false,\n  kind: 'ClusterTask',\n  id: 'clustertask',\n  labelPlural: 'ClusterTasks',\n  crd: true,\n  color,\n};\n\nexport const ConditionModel: K8sKind = {\n  apiGroup: 'tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Condition',\n  // t('pipelines-plugin~Condition')\n  labelKey: 'pipelines-plugin~Condition',\n  // t('pipelines-plugin~Conditions')\n  labelPluralKey: 'pipelines-plugin~Conditions',\n  plural: 'conditions',\n  abbr: 'C',\n  namespaced: true,\n  kind: 'Condition',\n  id: 'condition',\n  labelPlural: 'Conditions',\n  crd: true,\n  color,\n};\n\nexport const TriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerBinding',\n  // t('pipelines-plugin~TriggerBinding')\n  labelKey: 'pipelines-plugin~TriggerBinding',\n  // t('pipelines-plugin~TriggerBindings')\n  labelPluralKey: 'pipelines-plugin~TriggerBindings',\n  plural: 'triggerbindings',\n  abbr: 'TB',\n  namespaced: true,\n  kind: 'TriggerBinding',\n  id: 'triggerbinding',\n  labelPlural: 'TriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const ClusterTriggerBindingModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBinding')\n  labelKey: 'pipelines-plugin~ClusterTriggerBinding',\n  // t('pipelines-plugin~ClusterTriggerBindings')\n  labelPluralKey: 'pipelines-plugin~ClusterTriggerBindings',\n  plural: 'clustertriggerbindings',\n  abbr: 'CTB',\n  namespaced: false,\n  kind: 'ClusterTriggerBinding',\n  id: 'clustertriggerbinding',\n  labelPlural: 'ClusterTriggerBindings',\n  crd: true,\n  color,\n};\n\nexport const TriggerTemplateModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplate')\n  labelKey: 'pipelines-plugin~TriggerTemplate',\n  // t('pipelines-plugin~TriggerTemplates')\n  labelPluralKey: 'pipelines-plugin~TriggerTemplates',\n  plural: 'triggertemplates',\n  abbr: 'TT',\n  namespaced: true,\n  kind: 'TriggerTemplate',\n  id: 'triggertemplate',\n  labelPlural: 'TriggerTemplates',\n  crd: true,\n  color,\n};\n\nexport const EventListenerModel: K8sKind = {\n  apiGroup: 'triggers.tekton.dev',\n  apiVersion: 'v1beta1',\n  label: 'EventListener',\n  // t('pipelines-plugin~EventListener')\n  labelKey: 'pipelines-plugin~EventListener',\n  // t('pipelines-plugin~EventListeners')\n  labelPluralKey: 'pipelines-plugin~EventListeners',\n  plural: 'eventlisteners',\n  abbr: 'EL',\n  namespaced: true,\n  kind: 'EventListener',\n  id: 'eventlistener',\n  labelPlural: 'EventListeners',\n  crd: true,\n  color,\n};\n\nexport const RepositoryModel: K8sKind = {\n  apiGroup: 'pipelinesascode.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'Repository',\n  // t('pipelines-plugin~Repository')\n  labelKey: 'pipelines-plugin~Repository',\n  // t('pipelines-plugin~Repositories')\n  labelPluralKey: 'pipelines-plugin~Repositories',\n  plural: 'repositories',\n  abbr: 'R',\n  namespaced: true,\n  kind: 'Repository',\n  id: 'repository',\n  labelPlural: 'Repositories',\n  crd: true,\n  color,\n};\n\nexport const TektonConfigModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonConfig',\n  // t('pipelines-plugin~TektonConfig')\n  labelKey: 'pipelines-plugin~TektonConfig',\n  // t('pipelines-plugin~TektonConfigs')\n  labelPluralKey: 'pipelines-plugin~TektonConfigs',\n  plural: 'tektonconfigs',\n  abbr: 'TC',\n  namespaced: false,\n  kind: 'TektonConfig',\n  id: 'tektonconfig',\n  labelPlural: 'TektonConfigs',\n  crd: true,\n};\n\nexport const TektonHubModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonHub',\n  // t('pipelines-plugin~TektonHub')\n  labelKey: 'pipelines-plugin~TektonHub',\n  // t('pipelines-plugin~TektonHubs')\n  labelPluralKey: 'pipelines-plugin~TektonHubs',\n  plural: 'tektonhubs',\n  abbr: 'TH',\n  namespaced: false,\n  kind: 'TektonHub',\n  id: 'tektonhub',\n  labelPlural: 'TektonHubs',\n  crd: true,\n};\n\nexport const TektonResultModel: K8sKind = {\n  apiGroup: 'operator.tekton.dev',\n  apiVersion: 'v1alpha1',\n  label: 'TektonResult',\n  // t('pipelines-plugin~TektonResult')\n  labelKey: 'pipelines-plugin~TektonResult',\n  // t('pipelines-plugin~TektonResults')\n  labelPluralKey: 'pipelines-plugin~TektonResults',\n  plural: 'tektonresults',\n  abbr: 'TR',\n  namespaced: false,\n  kind: 'TektonResult',\n  id: 'tektonresult',\n  labelPlural: 'TektonResults',\n  crd: true,\n};\n","import { formatPrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { errorModal } from '@console/internal/components/modals/error-modal';\nimport {\n  LOG_SOURCE_RESTARTING,\n  LOG_SOURCE_WAITING,\n  LOG_SOURCE_RUNNING,\n  LOG_SOURCE_TERMINATED,\n} from '@console/internal/components/utils';\nimport { ServiceAccountModel } from '@console/internal/models';\nimport {\n  ContainerStatus,\n  k8sUpdate,\n  k8sGet,\n  SecretKind,\n  K8sResourceCommon,\n  K8sKind,\n  K8sResourceKind,\n  PersistentVolumeClaimKind,\n  K8sModel,\n} from '@console/internal/module/k8s';\nimport {\n  PIPELINE_SERVICE_ACCOUNT,\n  SecretAnnotationId,\n  TektonResourceLabel,\n} from '../components/pipelines/const';\nimport { PipelineModalFormWorkspace } from '../components/pipelines/modals/common/types';\nimport { getDuration } from '../components/pipelines/pipeline-metrics/pipeline-metrics-utils';\nimport { EventListenerKind, TriggerTemplateKind } from '../components/pipelines/resource-types';\nimport {\n  PipelineRunModel,\n  TaskRunModel,\n  PipelineResourceModel,\n  ConditionModel,\n  ClusterTaskModel,\n  TriggerTemplateModel,\n  TriggerBindingModel,\n  ClusterTriggerBindingModel,\n  PipelineModel,\n  TaskModel,\n  EventListenerModel,\n  RepositoryModel,\n  PipelineModelV1Beta1,\n  PipelineRunModelV1Beta1,\n  TaskModelV1Beta1,\n} from '../models';\nimport {\n  ComputedStatus,\n  PipelineRunKind,\n  PipelineRunParam,\n  PipelineRunWorkspace,\n  PipelineTask,\n  PipelineKind,\n  TaskRunKind,\n  TektonParam,\n  TaskRunStatus,\n  TaskKind,\n  PLRTaskRunData,\n  PipelineRunStatusType,\n} from '../types';\nimport { TaskStatus, getLatestRun } from './pipeline-augment';\nimport {\n  pipelineRunFilterReducer,\n  pipelineRunStatus,\n  SucceedConditionReason,\n} from './pipeline-filter-reducer';\n\ninterface ServiceAccountSecretNames {\n  [name: string]: string;\n}\n\nexport type ServiceAccountType = {\n  secrets: ServiceAccountSecretNames[];\n  imagePullSecrets: ServiceAccountSecretNames[];\n} & K8sResourceCommon;\n\nexport const TaskStatusClassNameMap = {\n  'In Progress': 'is-running',\n  Succeeded: 'is-done',\n  Failed: 'is-error',\n  Idle: 'is-idle',\n};\n\nexport const conditions = {\n  hasFromDependency: (task: PipelineTask): boolean =>\n    task.resources &&\n    task.resources.inputs &&\n    task.resources.inputs.length > 0 &&\n    !!task.resources.inputs[0].from,\n  hasRunAfterDependency: (task: PipelineTask): boolean => task.runAfter && task.runAfter.length > 0,\n};\n\nexport enum ListFilterId {\n  Running = 'Running',\n  Failed = 'Failed',\n  Succeeded = 'Succeeded',\n  Cancelled = 'Cancelled',\n  Other = '-',\n}\n\nexport const ListFilterLabels = {\n  [ListFilterId.Running]: i18next.t('pipelines-plugin~Running'),\n  [ListFilterId.Failed]: i18next.t('pipelines-plugin~Failed'),\n  [ListFilterId.Succeeded]: i18next.t('pipelines-plugin~Succeeded'),\n  [ListFilterId.Cancelled]: i18next.t('pipelines-plugin~Cancelled'),\n  [ListFilterId.Other]: i18next.t('pipelines-plugin~Other'),\n};\n\nexport enum PipelineResourceListFilterId {\n  Git = 'git',\n  PullRequest = 'pullRequest',\n  Image = 'image',\n  Cluster = 'cluster',\n  Storage = 'storage',\n  CloudEvent = 'cloudEvent',\n}\n\nexport const PipelineResourceListFilterLabels = {\n  [PipelineResourceListFilterId.Git]: 'Git',\n  [PipelineResourceListFilterId.PullRequest]: 'Pull Request',\n  [PipelineResourceListFilterId.Image]: 'Image',\n  [PipelineResourceListFilterId.Cluster]: 'Cluster',\n  [PipelineResourceListFilterId.Storage]: 'Storage',\n  [PipelineResourceListFilterId.CloudEvent]: 'Cloud Event',\n};\n\n/**\n * Appends the pipeline run status to each tasks in the pipeline.\n * @param pipeline\n * @param pipelineRun\n * @param isFinallyTasks\n */\nexport const appendPipelineRunStatus = (\n  pipeline,\n  pipelineRun,\n  taskRuns: TaskRunKind[],\n  isFinallyTasks = false,\n) => {\n  const tasks = (isFinallyTasks ? pipeline.spec.finally : pipeline.spec.tasks) || [];\n\n  return tasks.map((task) => {\n    if (!pipelineRun.status) {\n      return task;\n    }\n    if (!taskRuns || taskRuns.length === 0) {\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunCancelled) {\n        return _.merge(task, { status: { reason: ComputedStatus.Cancelled } });\n      }\n      if (pipelineRun.spec.status === SucceedConditionReason.PipelineRunPending) {\n        return _.merge(task, { status: { reason: ComputedStatus.Idle } });\n      }\n      return _.merge(task, { status: { reason: ComputedStatus.Failed } });\n    }\n\n    const taskRun = _.find(\n      taskRuns,\n      (tr) => tr.metadata.labels[TektonResourceLabel.pipelineTask] === task.name,\n    );\n    const taskStatus: TaskRunStatus = taskRun?.status;\n\n    const mTask = _.merge(task, {\n      status: pipelineRun?.status?.taskRuns\n        ? _.get(_.find(pipelineRun.status.taskRuns, { pipelineTaskName: task.name }), 'status')\n        : taskStatus,\n    });\n    // append task duration\n    if (mTask.status && mTask.status.completionTime && mTask.status.startTime) {\n      const date =\n        new Date(mTask.status.completionTime).getTime() -\n        new Date(mTask.status.startTime).getTime();\n      mTask.status.duration = formatPrometheusDuration(date);\n    }\n    // append task status\n    if (!mTask.status) {\n      mTask.status = { reason: ComputedStatus.Pending };\n    } else if (mTask.status && mTask.status.conditions) {\n      mTask.status.reason = pipelineRunStatus(mTask) || ComputedStatus.Pending;\n    } else if (mTask.status && !mTask.status.reason) {\n      mTask.status.reason = ComputedStatus.Pending;\n    }\n    return mTask;\n  });\n};\n\nexport const getPipelineTasks = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind = {\n    apiVersion: '',\n    metadata: {},\n    kind: 'PipelineRun',\n    spec: {},\n  },\n  taskRuns: TaskRunKind[],\n): PipelineTask[][] => {\n  // Each unit in 'out' array is termed as stage | out = [stage1 = [task1], stage2 = [task2,task3], stage3 = [task4]]\n  const out = [];\n  if (!pipeline.spec?.tasks || _.isEmpty(pipeline.spec.tasks)) {\n    return out;\n  }\n  const taskList = appendPipelineRunStatus(pipeline, pipelineRun, taskRuns);\n\n  // Step 1: Push all nodes without any dependencies in different stages\n  taskList.forEach((task) => {\n    if (!conditions.hasFromDependency(task) && !conditions.hasRunAfterDependency(task)) {\n      if (out.length === 0) {\n        out.push([]);\n      }\n      out[0].push(task);\n    }\n  });\n\n  // Step 2: Push nodes with 'from' dependency and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (!conditions.hasRunAfterDependency(task) && conditions.hasFromDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (\n            t.taskRef?.name === task.resources.inputs[0].from[0] ||\n            t.name === task.resources.inputs[0].from[0]\n          ) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0] &&\n        nextToFlag[0].resources &&\n        nextToFlag[0].resources.inputs &&\n        nextToFlag[0].resources.inputs[0] &&\n        nextToFlag[0].resources.inputs[0].from &&\n        nextToFlag[0].resources.inputs[0].from[0] &&\n        nextToFlag[0].resources.inputs[0].from[0] === task.resources.inputs[0].from[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n\n  // Step 3: Push nodes with 'runAfter' dependencies and stack similar tasks in a stage\n  taskList.forEach((task) => {\n    if (conditions.hasRunAfterDependency(task)) {\n      let flag = out.length - 1;\n      for (let i = 0; i < out.length; i++) {\n        for (const t of out[i]) {\n          if (t.taskRef?.name === task.runAfter[0] || t.name === task.runAfter[0]) {\n            flag = i;\n          }\n        }\n      }\n      const nextToFlag = out[flag + 1] ? out[flag + 1] : null;\n      if (\n        nextToFlag &&\n        nextToFlag[0].runAfter &&\n        nextToFlag[0].runAfter[0] &&\n        nextToFlag[0].runAfter[0] === task.runAfter[0]\n      ) {\n        nextToFlag.push(task);\n      } else {\n        out.splice(flag + 1, 0, [task]);\n      }\n    }\n  });\n  return out;\n};\n\nexport const getFinallyTasksWithStatus = (\n  pipeline: PipelineKind,\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n) => appendPipelineRunStatus(pipeline, pipelineRun, taskRuns, true);\n\nexport const containerToLogSourceStatus = (container: ContainerStatus): string => {\n  if (!container) {\n    return LOG_SOURCE_WAITING;\n  }\n  const { state, lastState } = container;\n  if (state.waiting && !_.isEmpty(lastState)) {\n    return LOG_SOURCE_RESTARTING;\n  }\n  if (state.waiting) {\n    return LOG_SOURCE_WAITING;\n  }\n  if (state.terminated) {\n    return LOG_SOURCE_TERMINATED;\n  }\n  return LOG_SOURCE_RUNNING;\n};\n\nexport type LatestPipelineRunStatus = {\n  latestPipelineRun: PipelineRunKind;\n  status: string;\n};\n\n/**\n * Takes pipeline runs and produces a latest pipeline run state.\n */\nexport const getLatestPipelineRunStatus = (\n  pipelineRuns: PipelineRunKind[],\n): LatestPipelineRunStatus => {\n  if (!pipelineRuns || pipelineRuns.length === 0) {\n    // Not enough data to build the current state\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  const latestPipelineRun = getLatestRun(pipelineRuns, 'creationTimestamp');\n\n  if (!latestPipelineRun) {\n    // Without the latestRun we will not have progress to show\n    return { latestPipelineRun: null, status: ComputedStatus.PipelineNotStarted };\n  }\n\n  let status: string = pipelineRunFilterReducer(latestPipelineRun);\n  if (status === '-') {\n    status = ComputedStatus.Pending;\n  }\n\n  return {\n    latestPipelineRun,\n    status,\n  };\n};\n\nexport const getPipelineRunParams = (pipelineParams: TektonParam[]): PipelineRunParam[] => {\n  return (\n    pipelineParams &&\n    pipelineParams.map((param) => ({\n      name: param.name,\n      value: param.default,\n    }))\n  );\n};\n\nexport const getPipelineRunWorkspaces = (\n  pipelineWorkspaces: PipelineModalFormWorkspace[],\n): PipelineRunWorkspace[] => {\n  return (\n    pipelineWorkspaces &&\n    pipelineWorkspaces.map((workspace) => ({\n      name: workspace.name,\n      ...workspace.data,\n    }))\n  );\n};\n\nexport const calculateDuration = (startTime: string, endTime?: string, long?: boolean) => {\n  const start = new Date(startTime).getTime();\n  const end = endTime ? new Date(endTime).getTime() : new Date().getTime();\n  const durationInSeconds = (end - start) / 1000;\n  return getDuration(durationInSeconds, long);\n};\n\nexport const pipelineRunDuration = (run: PipelineRunKind | TaskRunKind): string => {\n  const startTime = run?.status?.startTime ?? null;\n  const completionTime = run?.status?.completionTime ?? null;\n\n  // Duration cannot be computed if start time is missing or a completed/failed pipeline/task has no end time\n  if (!startTime || (!completionTime && pipelineRunStatus(run) !== 'Running')) {\n    return '-';\n  }\n  return calculateDuration(startTime, completionTime, true);\n};\n\nexport const updateServiceAccount = (\n  secretName: string,\n  originalServiceAccount: ServiceAccountType,\n  updateImagePullSecrets: boolean,\n): Promise<ServiceAccountType> => {\n  const updatedServiceAccount = _.cloneDeep(originalServiceAccount);\n  updatedServiceAccount.secrets = [...updatedServiceAccount.secrets, { name: secretName }];\n  if (updateImagePullSecrets) {\n    updatedServiceAccount.imagePullSecrets = [\n      ...updatedServiceAccount.imagePullSecrets,\n      { name: secretName },\n    ];\n  }\n  return k8sUpdate(ServiceAccountModel, updatedServiceAccount);\n};\n\nexport const associateServiceAccountToSecret = (\n  secret: SecretKind,\n  namespace: string,\n  isImageSecret: boolean,\n) => {\n  k8sGet(ServiceAccountModel, PIPELINE_SERVICE_ACCOUNT, namespace)\n    .then((serviceAccount) => {\n      if (_.find(serviceAccount.secrets, (s) => s.name === secret.metadata.name) === undefined) {\n        updateServiceAccount(secret.metadata.name, serviceAccount, isImageSecret);\n      }\n    })\n    .catch((err) => {\n      errorModal({ error: err.message });\n    });\n};\n\ntype KeyValuePair = {\n  key: string;\n  value: string;\n};\n\nconst getAnnotationKey = (secretType: string, suffix: number) => {\n  const annotationPrefix = 'tekton.dev';\n  if (secretType === SecretAnnotationId.Git) {\n    return `${annotationPrefix}/${SecretAnnotationId.Git}-${suffix}`;\n  }\n  if (secretType === SecretAnnotationId.Image) {\n    return `${annotationPrefix}/${SecretAnnotationId.Image}-${suffix}`;\n  }\n  return null;\n};\n\nexport const getSecretAnnotations = (\n  annotation: KeyValuePair,\n  existingAnnotations: { [key: string]: string } = {},\n) => {\n  let count = 0;\n  let annotationKey = getAnnotationKey(annotation?.key, count);\n  if (!annotationKey) {\n    return existingAnnotations;\n  }\n  while (\n    existingAnnotations[annotationKey] &&\n    existingAnnotations[annotationKey] !== annotation?.value\n  ) {\n    annotationKey = getAnnotationKey(annotation?.key, ++count);\n  }\n\n  return { ...existingAnnotations, [annotationKey]: annotation?.value };\n};\n\nexport const pipelinesTab = (kindObj: K8sKind) => {\n  switch (kindObj.kind) {\n    case PipelineModel.kind:\n    case TaskModel.kind:\n    case EventListenerModel.kind:\n      return '';\n    case PipelineRunModel.kind:\n      return 'pipeline-runs';\n    case PipelineResourceModel.kind:\n      return 'pipeline-resources';\n    case ConditionModel.kind:\n      return 'conditions';\n    case TaskRunModel.kind:\n      return 'task-runs';\n    case ClusterTaskModel.kind:\n      return 'cluster-tasks';\n    case TriggerTemplateModel.kind:\n      return 'trigger-templates';\n    case TriggerBindingModel.kind:\n      return 'trigger-bindings';\n    case ClusterTriggerBindingModel.kind:\n      return 'cluster-trigger-bindings';\n    case RepositoryModel.kind:\n      return 'repositories';\n    default:\n      return null;\n  }\n};\n\nexport const getMatchedPVCs = (\n  pvcResources: PersistentVolumeClaimKind[],\n  ownerResourceName: string,\n  ownerResourceKind: string,\n): PersistentVolumeClaimKind[] => {\n  return pvcResources.filter((pvc) => {\n    const { ownerReferences = [] } = pvc.metadata;\n\n    return ownerReferences.some(\n      (reference) => reference.name === ownerResourceName && reference.kind === ownerResourceKind,\n    );\n  });\n};\n\nexport const getPipeline = (resource: K8sResourceKind, pipelines: PipelineKind[]): PipelineKind => {\n  const pipeline = pipelines.find((p: PipelineKind) => p.metadata.name === resource.metadata.name);\n  return pipeline;\n};\n\nexport const getTriggerTemplates = (\n  pipeline: PipelineKind,\n  triggerTemplates: TriggerTemplateKind[],\n): TriggerTemplateKind[] => {\n  const triggerTemplate = triggerTemplates.filter(\n    (tt: TriggerTemplateKind) =>\n      !!tt.spec.resourcetemplates.find(\n        (rt) => rt.spec.pipelineRef?.name === pipeline.metadata.name,\n      ),\n  );\n  return triggerTemplate;\n};\n\nexport const getEventListeners = (\n  triggerTemplates: TriggerTemplateKind[],\n  eventListeners: EventListenerKind[],\n): EventListenerKind[] => {\n  const resourceEventListeners = eventListeners.reduce((acc, et: EventListenerKind) => {\n    const triggers = et.spec.triggers.filter((t) =>\n      triggerTemplates.find((tt) => tt?.metadata.name === t?.template?.ref),\n    );\n    if (triggers.length > 0) {\n      acc.push(et);\n    }\n    return acc;\n  }, []);\n  return resourceEventListeners;\n};\n\nexport const returnValidPipelineModel = (pipeline: PipelineKind): K8sModel => {\n  if (pipeline.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineModelV1Beta1;\n  }\n  return PipelineModel;\n};\n\nexport const returnValidPipelineRunModel = (pipelineRun: PipelineRunKind): K8sModel => {\n  if (pipelineRun.apiVersion === 'tekton.dev/v1beta1') {\n    return PipelineRunModelV1Beta1;\n  }\n  return PipelineRunModel;\n};\n\nexport const returnValidTaskModel = (task: TaskKind): K8sModel => {\n  if (task.apiVersion === 'tekton.dev/v1beta1') {\n    return TaskModelV1Beta1;\n  }\n  return TaskModel;\n};\n\nexport enum TaskRunResultsAnnotations {\n  KEY = 'task.results.key',\n  TYPE = 'task.results.type',\n}\n\nexport enum TaskRunResultsAnnotationValue {\n  EXTERNAL_LINK = 'external-link',\n}\n\nexport enum TaskRunResults {\n  IMAGE_REPOSITORY = 'IMAGE_URL',\n  SBOM = 'LINK_TO_SBOM',\n  SCAN_OUTPUT = 'SCAN_OUTPUT',\n  TEST_OUTPUT = 'TEST_OUTPUT',\n}\n\nexport const getSbomTaskRun = (taskruns: TaskRunKind[]): TaskRunKind =>\n  taskruns?.find(\n    (tr) => tr?.metadata?.annotations?.[TaskRunResultsAnnotations.KEY] === TaskRunResults.SBOM,\n  );\n\nexport const hasExternalLink = (sbomTaskRun: TaskRunKind): boolean =>\n  sbomTaskRun?.metadata?.annotations?.[TaskRunResultsAnnotations.TYPE] ===\n  TaskRunResultsAnnotationValue.EXTERNAL_LINK;\n\nexport const getSbomLink = (sbomTaskRun: TaskRunKind): string | undefined =>\n  (sbomTaskRun?.status?.results || sbomTaskRun?.status?.taskResults)?.find(\n    (r) => r.name === TaskRunResults.SBOM,\n  )?.value;\n\nexport const getImageUrl = (PipelineRun: PipelineRunKind): string | undefined =>\n  (PipelineRun?.status?.results || PipelineRun?.status?.pipelineResults)?.find(\n    (r) => r.name === TaskRunResults.IMAGE_REPOSITORY,\n  )?.value;\n\nexport const taskRunStatus = (taskRun: TaskRunKind | PLRTaskRunData): ComputedStatus => {\n  if (!taskRun?.status?.conditions?.length) {\n    return ComputedStatus.Pending;\n  }\n  const status: ComputedStatus = pipelineRunStatus(taskRun);\n  return status;\n};\n\nexport const getPipelineRunStatus = (pipelineRun: PipelineRunKind): TaskStatus => {\n  const conditionsMessage = pipelineRun?.status?.conditions?.find(\n    (condition) => condition?.type === 'Succeeded',\n  )?.message;\n\n  // Extracting key-value pairs using updated regular expression\n  const matches = conditionsMessage?.match(/(\\w+)(?::\\s*|\\s+)(\\d+)/g);\n  // Creating the object dynamically\n  const result: PipelineRunStatusType = {};\n  matches?.forEach((match) => {\n    const [key, value] = match.split(/(?::\\s*|\\s+)/);\n    result[key.trim()] = Number(value.trim());\n  });\n\n  const totalSucceeded =\n    (result?.Completed || 0) - (result?.Failed || 0) - (result?.Cancelled || 0);\n\n  const taskRunStatusObj: TaskStatus = {\n    Running: result?.Incomplete || 0,\n    Succeeded: totalSucceeded || 0,\n    Cancelled: result?.Cancelled || 0,\n    Failed: result?.Failed || 0,\n    Skipped: result?.Skipped || 0,\n    Completed: result?.Completed || 0,\n    Cancelling: result?.Cancelled || 0,\n    PipelineNotStarted: 0,\n    Pending: 0,\n  };\n\n  return taskRunStatusObj;\n};\n","export const isInteger = (message) => ({\n  test(value) {\n    return value == null || Number.isInteger(value);\n  },\n  message,\n});\n\nexport const bitBucketUserNameRegex = /^[a-z]([a-z0-9_]-?)*[a-z0-9]$/;\n","import i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { detectGitType } from '@console/dev-console/src/components/import/import-validation-utils';\nimport { checkAccess } from '@console/internal/components/utils';\nimport {\n  ImageStreamModel,\n  BuildConfigModel,\n  ServiceModel,\n  DeploymentConfigModel,\n  DeploymentModel,\n  RouteModel,\n  SecretModel,\n  DaemonSetModel,\n  StatefulSetModel,\n  JobModel,\n  CronJobModel,\n  BuildModel,\n} from '@console/internal/models';\nimport {\n  K8sModel,\n  k8sList,\n  k8sPatch,\n  k8sKill,\n  K8sResourceKind,\n  modelFor,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  CamelKameletBindingModel,\n  EventingBrokerModel,\n  KafkaSinkModel,\n  ServiceModel as KnativeServiceModel,\n} from '@console/knative-plugin/src/models';\nimport {\n  fetchChannelsCrd,\n  isDynamicEventResourceKind,\n} from '@console/knative-plugin/src/utils/fetch-dynamic-eventsources-utils';\nimport {\n  EventListenerKind,\n  TriggerTemplateKind,\n} from '@console/pipelines-plugin/src/components/pipelines/resource-types';\nimport {\n  EventListenerModel,\n  PipelineModel,\n  TriggerTemplateModel,\n} from '@console/pipelines-plugin/src/models';\nimport {\n  getEventListeners,\n  getPipeline,\n  getTriggerTemplates,\n} from '@console/pipelines-plugin/src/utils/pipeline-utils';\nimport { getBuildConfigsForResource } from '@console/shared';\nimport { CREATE_APPLICATION_KEY, UNASSIGNED_KEY } from '../const';\nimport { listInstanceResources } from './connector-utils';\n\nexport const sanitizeApplicationValue = (\n  application: string,\n  applicationType: string = application,\n): string => {\n  switch (applicationType) {\n    case UNASSIGNED_KEY:\n    case CREATE_APPLICATION_KEY:\n      return '';\n    default:\n      return application;\n  }\n};\n\n// Updates the resource's labels to set its application grouping\nconst updateItemAppLabel = (\n  resourceKind: K8sModel,\n  item: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  const labels = { ...item.metadata.labels, 'app.kubernetes.io/part-of': application || undefined };\n\n  if (!resourceKind) {\n    return Promise.reject();\n  }\n\n  const patch = [\n    {\n      op: _.isEmpty(labels) ? 'add' : 'replace',\n      path: '/metadata/labels',\n      value: labels,\n    },\n  ];\n\n  return k8sPatch(resourceKind, item, patch);\n};\n\n// Updates the given resource and its associated resources to the given application grouping\nexport const updateResourceApplication = (\n  resourceKind: K8sModel,\n  resource: K8sResourceKind,\n  application: string,\n): Promise<any> => {\n  if (!resource) {\n    return Promise.reject(\n      new Error(i18next.t('topology~Error: no resource provided to update application for.')),\n    );\n  }\n  if (!resourceKind) {\n    return Promise.reject(\n      new Error(\n        i18next.t('topology~Error: invalid resource kind provided for updating application.'),\n      ),\n    );\n  }\n\n  const instanceName = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/instance']);\n  const prevApplication = _.get(resource, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n\n  const patches: Promise<any>[] = [updateItemAppLabel(resourceKind, resource, application)];\n\n  // If there is no instance label, only update this item\n  if (!instanceName) {\n    return Promise.all(patches);\n  }\n\n  // selector is for the instance name and current application if there is one\n  const labelSelector = {\n    'app.kubernetes.io/instance': instanceName,\n  };\n  if (prevApplication) {\n    labelSelector['app.kubernetes.io/part-of'] = prevApplication;\n  }\n\n  // Update all the instance's resources that were part of the previous application\n  return listInstanceResources(resource.metadata.namespace, instanceName, {\n    'app.kubernetes.io/part-of': prevApplication,\n  }).then((listsValue) => {\n    _.forEach(listsValue, (list) => {\n      _.forEach(list, (item) => {\n        // verify the case of no previous application\n        if (prevApplication || !_.get(item, ['metadata', 'labels', 'app.kubernetes.io/part-of'])) {\n          patches.push(updateItemAppLabel(modelFor(item.kind), item, application));\n        }\n      });\n    });\n\n    return Promise.all(patches);\n  });\n};\n\nconst safeLoadList = async (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  accessCheckRequired?: boolean,\n) => {\n  try {\n    if (accessCheckRequired) {\n      const canListResource = await checkAccess({\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'list',\n        namespace: queryParams?.ns,\n      });\n      if (!canListResource?.status?.allowed) {\n        return [];\n      }\n    }\n    return await k8sList(model, queryParams);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(`Ignore that model ${model.plural} was not found:`, error);\n      return [];\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while loading model ${model.plural}:`, error);\n    throw error;\n  }\n};\n\nconst safeKill = async (model: K8sModel, obj: K8sResourceKind) => {\n  const resp = await checkAccess({\n    group: model.apiGroup,\n    resource: model.plural,\n    verb: 'delete',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n  });\n  if (!resp.status.allowed) {\n    // eslint-disable-next-line no-console\n    console.warn(`User is not allowed to delete resource ${model.plural} ${obj.metadata.name}.`);\n    return null;\n  }\n  try {\n    return await k8sKill(model, obj);\n  } catch (error) {\n    // Ignore when resource is not found\n    if (error?.response?.status === 404) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Resource ${model.plural} ${obj.metadata.name} was not found. Ignore this error.`,\n        error,\n      );\n      return null;\n    }\n    // eslint-disable-next-line no-console\n    console.warn(`Error while deleting resource ${model.plural} ${obj.metadata.name}:`, error);\n    throw error;\n  }\n};\n\nconst deleteWebhooks = async (resource: K8sResourceKind, buildConfigs?: K8sResourceKind[]) => {\n  const deploymentsAnnotations = resource.metadata?.annotations ?? {};\n  const gitType = detectGitType(deploymentsAnnotations['app.openshift.io/vcs-uri']);\n  const secretList = await k8sList(SecretModel, {\n    ns: resource.metadata.namespace,\n  });\n  let webhooks;\n  if (buildConfigs?.length > 0) {\n    webhooks = buildConfigs?.reduce((requests, bc) => {\n      const triggers = bc.spec?.triggers ?? [];\n      const reqs = triggers.reduce((a, t) => {\n        let secretResource: K8sResourceKind;\n        const webhookType = t.generic ? 'generic' : gitType;\n        const webhookTypeObj = t.generic || t[gitType];\n        if (webhookTypeObj) {\n          const secretName =\n            webhookTypeObj.secretReference?.name ??\n            `${resource.metadata.name}-${webhookType}-webhook-secret`;\n          secretResource = secretList.find(\n            (secret: K8sResourceKind) => secret.metadata.name === secretName,\n          );\n        }\n        return secretResource ? [...a, safeKill(SecretModel, secretResource)] : a;\n      }, []);\n      return [...requests, ...reqs];\n    }, []);\n  } else {\n    const secretGenericResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-generic-webhook-secret`,\n    );\n    const secretGittypeResource = secretList.find(\n      (secret: K8sResourceKind) =>\n        secret.metadata.name === `${resource.metadata.name}-${gitType}-webhook-secret`,\n    );\n    webhooks = [\n      safeKill(SecretModel, secretGenericResource),\n      safeKill(SecretModel, secretGittypeResource),\n    ];\n  }\n  return webhooks;\n};\n\nexport const cleanUpWorkload = async (resource: K8sResourceKind): Promise<K8sResourceKind[]> => {\n  const reqs = [];\n\n  const buildConfigs = await safeLoadList(BuildConfigModel, { ns: resource.metadata.namespace });\n  const builds = await safeLoadList(BuildModel, { ns: resource.metadata.namespace });\n  const pipelines = await safeLoadList(PipelineModel, { ns: resource.metadata.namespace }, true);\n  const triggerTemplates = await safeLoadList(\n    TriggerTemplateModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const eventListeners = await safeLoadList(\n    EventListenerModel,\n    {\n      ns: resource.metadata.namespace,\n    },\n    true,\n  );\n  const channelModels = await fetchChannelsCrd();\n\n  const resourceModel = modelFor(referenceFor(resource));\n  const resources = {\n    buildConfigs: {\n      data: buildConfigs,\n      loaded: true,\n      loadError: null,\n    },\n    builds: {\n      data: builds,\n      loaded: true,\n      loadError: null,\n    },\n  };\n  const resourceBuildConfigs = getBuildConfigsForResource(resource, resources);\n  const isBuildConfigPresent = !_.isEmpty(resourceBuildConfigs);\n  const pipeline = getPipeline(resource, pipelines);\n  let resourceTriggerTemplates: TriggerTemplateKind[] = [];\n  let resourceEventListeners: EventListenerKind[] = [];\n\n  const deleteModels = [ServiceModel, RouteModel, ImageStreamModel];\n  const knativeDeleteModels = [KnativeServiceModel, ImageStreamModel];\n\n  if (!_.isEmpty(pipeline)) {\n    deleteModels.push(PipelineModel);\n    knativeDeleteModels.push(PipelineModel);\n    resourceTriggerTemplates = getTriggerTemplates(pipeline, triggerTemplates);\n    resourceEventListeners = getEventListeners(resourceTriggerTemplates, eventListeners);\n  }\n  const resourceData = _.cloneDeep(resource);\n  const deleteRequest = (model: K8sModel, resourceObj: K8sResourceKind) => {\n    const req = safeKill(model, resourceObj);\n    req && reqs.push(req);\n  };\n  if (isBuildConfigPresent) {\n    resourceBuildConfigs.forEach((bc) => {\n      deleteRequest(BuildConfigModel, bc);\n    });\n  }\n  const batchDeleteRequests = (models: K8sModel[], resourceObj: K8sResourceKind): void => {\n    models.forEach((model) => deleteRequest(model, resourceObj));\n  };\n  if (isDynamicEventResourceKind(referenceFor(resource)))\n    deleteRequest(modelFor(referenceFor(resource)), resource);\n  if (channelModels.find((channel) => channel.kind === resource.kind)) {\n    deleteRequest(resourceModel, resource);\n  }\n  if (resourceTriggerTemplates.length > 0) {\n    resourceTriggerTemplates.forEach((tt) => deleteRequest(TriggerTemplateModel, tt));\n  }\n\n  if (resourceEventListeners.length > 0) {\n    resourceEventListeners.forEach((et) => deleteRequest(EventListenerModel, et));\n  }\n\n  switch (resource.kind) {\n    case DaemonSetModel.kind:\n    case StatefulSetModel.kind:\n    case JobModel.kind:\n    case CronJobModel.kind:\n    case EventingBrokerModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    case DeploymentModel.kind:\n    case DeploymentConfigModel.kind:\n      deleteRequest(resourceModel, resource);\n      batchDeleteRequests(deleteModels, resource);\n      break;\n    case KnativeServiceModel.kind:\n      batchDeleteRequests(knativeDeleteModels, resourceData);\n      break;\n    case CamelKameletBindingModel.kind:\n    case KafkaSinkModel.kind:\n      deleteRequest(resourceModel, resource);\n      break;\n    default:\n      break;\n  }\n\n  if (isBuildConfigPresent) {\n    reqs.push(...(await deleteWebhooks(resource, resourceBuildConfigs)));\n  }\n  if (pipeline) {\n    reqs.push(...(await deleteWebhooks(resource)));\n  }\n\n  return Promise.all(reqs);\n};\n","import { K8sResourceCommon } from '@console/dynamic-plugin-sdk/src';\n\nexport type ResourceTarget = 'inputs' | 'outputs';\n\nexport type TektonParam = {\n  default?: string | string[];\n  description?: string;\n  name: string;\n  type?: 'string' | 'array';\n};\n\nexport type TektonTaskSteps = {\n  // TODO: Figure out required fields\n  name: string;\n  args?: string[];\n  command?: string[];\n  image?: string;\n  resources?: {}[] | {};\n  env?: { name: string; value: string }[];\n  script?: string[];\n};\n\nexport type TaskResult = {\n  name: string;\n  description?: string;\n};\n\nexport type TektonTaskSpec = {\n  metadata?: {};\n  description?: string;\n  steps: TektonTaskSteps[];\n  params?: TektonParam[];\n  resources?: TektonResourceGroup<TektonResource>;\n  results?: TaskResult[];\n  workspaces?: TektonWorkspace[];\n};\n\nexport type TektonResourceGroup<ResourceType> = {\n  inputs?: ResourceType[];\n  outputs?: ResourceType[];\n};\n\n/** Deprecated upstream - Workspaces are replacing Resources */\nexport type TektonResource = {\n  name: string;\n  optional?: boolean;\n  type: string; // TODO: limit to known strings\n};\n\nexport type TektonWorkspace = {\n  name: string;\n  description?: string;\n  mountPath?: string;\n  readOnly?: boolean;\n  optional?: boolean;\n};\n\nexport type TektonResultsRun = {\n  name: string;\n  value: string;\n};\n\nexport interface Addon {\n  enablePipelinesAsCode: boolean;\n  params: Param[];\n}\n\nexport interface Param {\n  name: string;\n  value: string;\n}\n\nexport interface Dashboard {\n  readonly: boolean;\n}\n\nexport enum MetricsLevel {\n  METRICS_PIPELINERUN_DURATION_TYPE = 'metrics.pipelinerun.duration-type',\n  METRICS_PIPELINERUN_LEVEL = 'metrics.pipelinerun.level',\n  METRICS_TASKRUN_DURATION_TYPE = 'metrics.taskrun.duration-type',\n  METRICS_TASKRUN_LEVEL = 'metrics.taskrun.level',\n}\n\nexport enum LevelTypes {\n  PIPELINE = 'pipeline',\n  PIPELINERUN = 'pipelinerun',\n  TASK = 'task',\n  TASKRUN = 'taskrun',\n}\n\nexport enum DurationTypes {\n  HISTOGRAM = 'histogram',\n  LASTVALUE = 'lastvalue',\n  NAMESPACE = 'namespace',\n}\n\nexport interface Pipeline {\n  'default-service-account': string;\n  'disable-affinity-assistant': boolean;\n  'disable-creds-init': boolean;\n  'enable-api-fields': string;\n  'enable-custom-tasks': boolean;\n  'enable-tekton-oci-bundles': boolean;\n  [MetricsLevel.METRICS_PIPELINERUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_PIPELINERUN_LEVEL]: LevelTypes;\n  [MetricsLevel.METRICS_TASKRUN_DURATION_TYPE]: DurationTypes;\n  [MetricsLevel.METRICS_TASKRUN_LEVEL]: LevelTypes;\n  params: Param[];\n  'require-git-ssh-secret-known-hosts': boolean;\n  'running-in-environment-with-injected-sidecars': boolean;\n  'scope-when-expressions-to-task': boolean;\n}\n\nexport interface Pruner {\n  keep: number;\n  resources: string[];\n  schedule: string;\n}\n\nexport interface Trigger {\n  'default-service-account': string;\n  'enable-api-fields': string;\n}\n\nexport interface Spec {\n  addon: Addon;\n  config: {};\n  dashboard: Dashboard;\n  hub: {};\n  params: Param[];\n  pipeline: Pipeline;\n  profile: string;\n  pruner: Pruner;\n  targetNamespace: string;\n  trigger: Trigger;\n}\n\nexport interface Status {\n  conditions: TektonConfigCondition[];\n}\n\nexport interface TektonConfigCondition {\n  lastTransitionTime: string;\n  status: string;\n  type: string;\n}\n\nexport type TektonConfig = K8sResourceCommon & {\n  spec: Spec;\n  status: Status;\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  ObjectMetadata,\n} from '@console/internal/module/k8s';\nimport { TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineKind, PipelineSpec } from './pipeline';\n\nexport type PLRTaskRunStep = {\n  container: string;\n  imageID?: string;\n  name: string;\n  waiting?: {\n    reason: string;\n  };\n  running?: {\n    startedAt: string;\n  };\n  terminated?: {\n    containerID: string;\n    exitCode: number;\n    finishedAt: string;\n    reason: string;\n    startedAt: string;\n    message?: string;\n  };\n};\n\nexport type PLRTaskRunData = {\n  pipelineTaskName: string;\n  status: {\n    completionTime?: string;\n    conditions: Condition[];\n    /** Can be empty */\n    podName: string;\n    startTime: string;\n    steps?: PLRTaskRunStep[];\n    taskSpec?: TektonTaskSpec;\n    taskResults?: { name: string; value: string }[]; // in tekton v1 taskResults is renamed to results\n    results?: { name: string; value: string }[];\n  };\n};\n\nexport type PLRTaskRuns = {\n  [taskRunName: string]: PLRTaskRunData;\n};\n\nexport type VolumeTypeSecret = {\n  secretName: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypeConfigMaps = {\n  name: string;\n  items?: {\n    key: string;\n    path: string;\n  }[];\n};\n\nexport type VolumeTypePVC = {\n  claimName: string;\n};\n\nexport type PersistentVolumeClaimType = {\n  persistentVolumeClaim: VolumeTypePVC;\n};\n\nexport type VolumeClaimTemplateType = {\n  volumeClaimTemplate: VolumeTypeClaim;\n};\nexport type VolumeTypeClaim = {\n  metadata?: ObjectMetadata;\n  spec: {\n    accessModes: string[];\n    resources: {\n      requests: {\n        storage: string;\n      };\n    };\n    storageClassName?: string;\n    volumeMode?: string;\n  };\n};\n\nexport type Condition = {\n  type: string;\n  status: string;\n  reason?: string;\n  message?: string;\n  lastTransitionTime?: string;\n};\n\nexport type ChildReferences = {\n  apiVersion: string;\n  kind: string;\n  name: string;\n  pipelineTaskName: string;\n};\n\nexport type PipelineRunEmbeddedResourceParam = { name: string; value: string };\nexport type PipelineRunEmbeddedResource = {\n  name: string;\n  resourceSpec: {\n    params: PipelineRunEmbeddedResourceParam[];\n    type: string;\n  };\n};\nexport type PipelineRunReferenceResource = {\n  name: string;\n  resourceRef: {\n    name: string;\n  };\n};\nexport type PipelineRunResource = PipelineRunReferenceResource | PipelineRunEmbeddedResource;\n\nexport type PipelineRunWorkspace = {\n  name: string;\n  [volumeType: string]:\n    | VolumeTypeSecret\n    | VolumeTypeConfigMaps\n    | VolumeTypePVC\n    | VolumeTypeClaim\n    | {};\n};\n\nexport type PipelineRunParam = {\n  name: string;\n  value: string | string[];\n\n  // TODO: To be validated\n  input?: string;\n  output?: string;\n  resource?: object;\n};\n\nexport type PipelineRunStatus = {\n  succeededCondition?: string;\n  creationTimestamp?: string;\n  conditions?: Condition[];\n  startTime?: string;\n  completionTime?: string;\n  taskRuns?: PLRTaskRuns;\n  pipelineSpec: PipelineSpec;\n  skippedTasks?: {\n    name: string;\n  }[];\n  pipelineResults?: TektonResultsRun[]; // in tekton v1 pipelineResults is renamed to results\n  results?: TektonResultsRun[];\n  childReferences?: ChildReferences[];\n};\n\nexport type PipelineRunKind = K8sResourceCommon & {\n  spec: {\n    pipelineRef?: { name: string };\n    pipelineSpec?: PipelineSpec;\n    params?: PipelineRunParam[];\n    workspaces?: PipelineRunWorkspace[];\n    resources?: PipelineRunResource[];\n    serviceAccountName?: string;\n    timeout?: string;\n    // Only used in a single case - cancelling a pipeline; should not be copied between PLRs\n    status?: 'StoppedRunFinally' | 'PipelineRunPending' | 'CancelledRunFinally';\n    // In tekton v1 ServiceAccountName is moved\n    // to TaskRunTemplate as TaskRunTemplate.ServiceAccountName\n    taskRunTemplate?: {\n      serviceAccountName?: string;\n    };\n  };\n  status?: PipelineRunStatus;\n};\n\nexport type PipelineWithLatest = PipelineKind & {\n  latestRun?: PipelineRunKind;\n};\n\nexport const PipelineRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'PipelineRun',\n};\n","import {\n  K8sGroupVersionKind,\n  K8sResourceCommon,\n  PersistentVolumeClaimKind,\n} from '@console/internal/module/k8s';\nimport { TektonResource, TektonResultsRun, TektonTaskSpec } from './coreTekton';\nimport { PipelineTaskParam, PipelineTaskRef } from './pipeline';\nimport {\n  Condition,\n  PLRTaskRunStep,\n  VolumeTypeConfigMaps,\n  VolumeTypePVC,\n  VolumeTypeSecret,\n} from './pipelineRun';\n\nexport type TaskRunWorkspace = {\n  name: string;\n  volumeClaimTemplate?: PersistentVolumeClaimKind;\n  persistentVolumeClaim?: VolumeTypePVC;\n  configMap?: VolumeTypeConfigMaps;\n  emptyDir?: {};\n  secret?: VolumeTypeSecret;\n  subPath?: string;\n};\n\nexport type TaskRunStatus = {\n  completionTime?: string;\n  conditions?: Condition[];\n  podName?: string;\n  startTime?: string;\n  steps?: PLRTaskRunStep[];\n  taskResults?: TektonResultsRun[]; // in tekton v1 taskResults is renamed to results\n  results?: TektonResultsRun[];\n};\n\nexport type TaskRunKind = K8sResourceCommon & {\n  spec: {\n    taskRef?: PipelineTaskRef;\n    taskSpec?: TektonTaskSpec;\n    serviceAccountName?: string;\n    params?: PipelineTaskParam[];\n    resources?: TektonResource[];\n    timeout?: string;\n    workspaces?: TaskRunWorkspace[];\n  };\n  status?: TaskRunStatus;\n};\n\nexport const TaskRunGroupVersionKind: K8sGroupVersionKind = {\n  group: 'tekton.dev',\n  version: 'v1',\n  kind: 'TaskRun',\n};\n\nexport type PipelineRunStatusType = {\n  Completed?: number;\n  Failed?: number;\n  Skipped?: number;\n  Cancelled?: number;\n  Incomplete?: number;\n  PipelineNotStarted?: number;\n  Pending?: number;\n  Running?: number;\n  Succeeded?: number;\n};\n","export enum ComputedStatus {\n  Cancelling = 'Cancelling',\n  Succeeded = 'Succeeded',\n  Failed = 'Failed',\n  Running = 'Running',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  'In Progress' = 'In Progress',\n  FailedToStart = 'FailedToStart',\n  PipelineNotStarted = 'PipelineNotStarted',\n  Skipped = 'Skipped',\n  Cancelled = 'Cancelled',\n  Pending = 'Pending',\n  Idle = 'Idle',\n  Other = '-',\n}\n\nexport enum CustomRunStatus {\n  RunCancelled = 'RunCancelled',\n}\n","import { BaseService } from '../services/base-service';\nimport { RepoStatus } from '../types';\nimport { ImportStrategy } from '../types/git';\nimport { detectBuildTypes } from './build-tool-type-detector';\nimport { isServerlessFxRepository } from './serverless-strategy-detector';\n\ntype ImportStrategyType = {\n  name: string;\n  type: ImportStrategy;\n  expectedRegexp: RegExp;\n  priority: number;\n  customDetection?: (gitService: BaseService) => Promise<any>;\n};\n\nconst ImportStrategyList: ImportStrategyType[] = [\n  {\n    name: 'Devfile',\n    type: ImportStrategy.DEVFILE,\n    expectedRegexp: /^\\.?devfile\\.yaml$/,\n    priority: 3,\n  },\n  {\n    name: 'Dockerfile',\n    type: ImportStrategy.DOCKERFILE,\n    expectedRegexp: /^(Dockerfile|Containerfile).*/,\n    priority: 2,\n  },\n  {\n    name: 'Serverless Function',\n    type: ImportStrategy.SERVERLESS_FUNCTION,\n    expectedRegexp: /^func\\.(yaml|yml)$/,\n    priority: 1,\n  },\n  {\n    name: 'Builder Image',\n    type: ImportStrategy.S2I,\n    expectedRegexp: /^/,\n    priority: 0,\n    customDetection: detectBuildTypes,\n  },\n];\n\nexport type DetectedStrategy = {\n  name: string;\n  type: ImportStrategy;\n  priority: number;\n  detectedFiles: string[];\n  detectedCustomData?: any;\n};\n\ntype DetectedServiceData = {\n  loaded: boolean;\n  loadError?: any;\n  repositoryStatus: RepoStatus;\n  strategies: DetectedStrategy[];\n};\n\nexport const detectImportStrategies = async (\n  repository: string,\n  gitService: BaseService,\n  isServerlessEnabled: boolean = false,\n): Promise<DetectedServiceData> => {\n  let detectedStrategies: DetectedStrategy[] = [];\n  let addServerlessFxStrategy: boolean;\n  let loaded: boolean = false;\n  let loadError = null;\n\n  const repositoryStatus = gitService\n    ? await gitService.isRepoReachable()\n    : RepoStatus.GitTypeNotDetected;\n  let detectedFiles: string[] = [];\n  let detectedCustomData: string[];\n\n  if (repositoryStatus === RepoStatus.Reachable) {\n    try {\n      const { files } = await gitService.getRepoFileList({ includeFolder: true });\n      addServerlessFxStrategy = await isServerlessFxRepository(isServerlessEnabled, gitService);\n\n      detectedStrategies = await Promise.all(\n        ImportStrategyList.map<Promise<DetectedStrategy>>(async (strategy) => {\n          detectedFiles = files.filter((f) => strategy.expectedRegexp.test(f));\n          if (detectedFiles.length > 0 && strategy.customDetection) {\n            detectedCustomData = await strategy.customDetection(gitService);\n          }\n          return {\n            name: strategy.name,\n            type: strategy.type,\n            priority: strategy.priority,\n            detectedFiles,\n            detectedCustomData,\n          };\n        }),\n      );\n      loaded = true;\n    } catch (err) {\n      loaded = true;\n      loadError = err.message;\n    }\n  } else {\n    loaded = true;\n  }\n\n  if (!addServerlessFxStrategy) {\n    detectedStrategies = detectedStrategies.filter(\n      (strategy) => strategy.type !== ImportStrategy.SERVERLESS_FUNCTION,\n    );\n  }\n\n  detectedStrategies = detectedStrategies\n    .filter((strategy) => !!strategy.detectedFiles.length || !!strategy.detectedCustomData?.length)\n    .sort((t1, t2) => t2.priority - t1.priority);\n\n  return {\n    loaded,\n    loadError,\n    repositoryStatus,\n    strategies: detectedStrategies,\n  };\n};\n","import { DEFAULT_GROUP_PAD, GROUP_WIDTH } from '@console/topology/src/const';\n\nexport const TYPE_EVENT_SOURCE = 'event-source';\nexport const TYPE_EVENT_SINK = 'event-sink';\nexport const TYPE_KAFKA_SINK = 'kafka-sink';\nexport const TYPE_EVENT_SOURCE_KAFKA = 'event-source-kafka';\nexport const TYPE_EVENT_SOURCE_LINK = 'event-source-link';\nexport const TYPE_EVENT_SINK_LINK = 'event-sink-link';\nexport const TYPE_KAFKA_CONNECTION_LINK = 'event-source-kafka-link';\nexport const TYPE_EVENT_PUB_SUB = 'event-pubsub';\nexport const TYPE_EVENT_PUB_SUB_LINK = 'event-pubsub-link';\nexport const TYPE_KNATIVE_SERVICE = 'knative-service';\nexport const TYPE_REVISION_TRAFFIC = 'revision-traffic';\nexport const TYPE_KNATIVE_REVISION = 'knative-revision';\nexport const TYPE_SINK_URI = 'sink-uri';\n\nexport const KNATIVE_GROUP_NODE_WIDTH = GROUP_WIDTH;\nexport const KNATIVE_GROUP_NODE_HEIGHT = 100;\nexport const KNATIVE_GROUP_NODE_PADDING = [\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD,\n  DEFAULT_GROUP_PAD + 10,\n  DEFAULT_GROUP_PAD,\n];\n\nexport const EVENT_MARKER_RADIUS = 6;\n\n// URI Kind\nexport const URI_KIND = 'URI';\n","import { chart_color_black_400 as skippedColor } from '@patternfly/react-tokens/dist/js/chart_color_black_400';\nimport { chart_color_black_500 as cancelledColor } from '@patternfly/react-tokens/dist/js/chart_color_black_500';\nimport { chart_color_blue_100 as pendingColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_300 as runningColor } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_green_400 as successColor } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { global_danger_color_100 as failureColor } from '@patternfly/react-tokens/dist/js/global_danger_color_100';\nimport i18next from 'i18next';\nimport {\n  K8sKind,\n  referenceForModel,\n  GroupVersionKind,\n  apiVersionForModel,\n} from '@console/internal/module/k8s';\nimport { TektonResourceLabel } from '../components/pipelines/const';\nimport {\n  ClusterTaskModel,\n  ClusterTriggerBindingModel,\n  TaskModel,\n  TriggerBindingModel,\n  PipelineModel,\n} from '../models';\nimport { ComputedStatus, PipelineKind, PipelineRunKind, PipelineTask, TaskRunKind } from '../types';\nimport { pipelineRunFilterReducer, SucceedConditionReason } from './pipeline-filter-reducer';\n\ninterface Metadata {\n  name: string;\n  namespace?: string;\n}\n\nexport interface PropPipelineData {\n  metadata: Metadata;\n  latestRun?: PipelineRunKind;\n}\n\nexport interface StatusMessage {\n  message: string;\n  pftoken: { name: string; value: string; var: string };\n}\n\nexport interface TaskStatus {\n  PipelineNotStarted: number;\n  Pending: number;\n  Running: number;\n  Succeeded: number;\n  Cancelled: number;\n  Failed: number;\n  Skipped: number;\n  Completed?: number;\n  Cancelling?: number;\n}\n\nexport const getLatestRun = (runs: PipelineRunKind[], field: string): PipelineRunKind => {\n  if (!runs || !(runs.length > 0) || !field) {\n    return null;\n  }\n  let latestRun = runs[0];\n  if (field === 'creationTimestamp') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].metadata &&\n        runs[i].metadata[field] &&\n        new Date(runs[i].metadata[field]) > new Date(latestRun.metadata[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else if (field === 'startTime' || field === 'completionTime') {\n    for (let i = 1; i < runs.length; i++) {\n      latestRun =\n        runs[i] &&\n        runs[i].status &&\n        runs[i].status[field] &&\n        new Date(runs[i].status[field]) > new Date(latestRun.status[field])\n          ? runs[i]\n          : latestRun;\n    }\n  } else {\n    latestRun = runs[runs.length - 1];\n  }\n  if (!latestRun.status) {\n    latestRun = { ...latestRun, status: { pipelineSpec: { tasks: [] } } };\n  }\n  if (!latestRun.status.succeededCondition) {\n    latestRun.status = { ...latestRun.status, succeededCondition: '' };\n  }\n  latestRun.status.succeededCondition = pipelineRunFilterReducer(latestRun);\n  return latestRun;\n};\n\nexport const augmentRunsToData = (\n  pipelines: PropPipelineData[],\n  pipelineruns: PipelineRunKind[],\n): PropPipelineData[] => {\n  return pipelines.map((pipeline) => {\n    const prsForPipeline = pipelineruns.filter(\n      (pr) => pr.metadata.labels?.['tekton.dev/pipeline'] === pipeline.metadata.name,\n    );\n    pipeline.latestRun = getLatestRun(prsForPipeline, 'creationTimestamp');\n    return pipeline;\n  });\n};\n\nexport const getRunStatusColor = (status: string): StatusMessage => {\n  switch (status) {\n    case ComputedStatus.Succeeded:\n      return { message: i18next.t('pipelines-plugin~Succeeded'), pftoken: successColor };\n    case ComputedStatus.Failed:\n      return { message: i18next.t('pipelines-plugin~Failed'), pftoken: failureColor };\n    case ComputedStatus.FailedToStart:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun failed to start'),\n        pftoken: failureColor,\n      };\n    case ComputedStatus.Running:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n    case ComputedStatus['In Progress']:\n      return { message: i18next.t('pipelines-plugin~Running'), pftoken: runningColor };\n\n    case ComputedStatus.Skipped:\n      return { message: i18next.t('pipelines-plugin~Skipped'), pftoken: skippedColor };\n    case ComputedStatus.Cancelled:\n      return { message: i18next.t('pipelines-plugin~Cancelled'), pftoken: cancelledColor };\n    case ComputedStatus.Cancelling:\n      return { message: i18next.t('pipelines-plugin~Cancelling'), pftoken: cancelledColor };\n    case ComputedStatus.Idle:\n    case ComputedStatus.Pending:\n      return { message: i18next.t('pipelines-plugin~Pending'), pftoken: pendingColor };\n    default:\n      return {\n        message: i18next.t('pipelines-plugin~PipelineRun not started yet'),\n        pftoken: pendingColor,\n      };\n  }\n};\n\nexport const truncateName = (name: string, length: number): string =>\n  name.length < length ? name : `${name.slice(0, length - 1)}...`;\n\nexport const getPipelineFromPipelineRun = (pipelineRun: PipelineRunKind): PipelineKind => {\n  const pipelineName =\n    pipelineRun?.metadata?.labels?.[TektonResourceLabel.pipeline] || pipelineRun?.metadata?.name;\n  const pipelineSpec = pipelineRun?.status?.pipelineSpec || pipelineRun?.spec?.pipelineSpec;\n  if (!pipelineName || !pipelineSpec) {\n    return null;\n  }\n  return {\n    apiVersion: apiVersionForModel(PipelineModel),\n    kind: PipelineModel.kind,\n    metadata: {\n      name: pipelineName,\n      namespace: pipelineRun.metadata.namespace,\n    },\n    spec: pipelineSpec,\n  };\n};\n\nexport const totalPipelineRunTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalTasks = (executedPipeline.spec?.tasks || []).length ?? 0;\n  const finallyTasks = (executedPipeline.spec?.finally || []).length ?? 0;\n  return totalTasks + finallyTasks;\n};\n\nexport const totalPipelineRunCustomTasks = (executedPipeline: PipelineKind): number => {\n  if (!executedPipeline) {\n    return 0;\n  }\n  const totalCustomTasks =\n    (executedPipeline.spec?.tasks || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  const finallyCustomTasks =\n    (executedPipeline.spec?.finally || []).filter(\n      (task) => task.taskRef?.kind !== 'Task' && task.taskRef?.kind !== 'ClusterTask',\n    ).length ?? 0;\n  return totalCustomTasks + finallyCustomTasks;\n};\n\nexport const getTaskStatus = (\n  pipelinerun: PipelineRunKind,\n  pipeline: PipelineKind,\n  taskRuns: TaskRunKind[],\n): TaskStatus => {\n  const totalTasks = totalPipelineRunTasks(pipeline) - totalPipelineRunCustomTasks(pipeline);\n  const plrTasks = (): string[] => {\n    if (pipelinerun?.status?.taskRuns) {\n      return Object.keys(pipelinerun.status.taskRuns);\n    }\n    if (taskRuns) {\n      return taskRuns?.map((tRun) => tRun.metadata.name);\n    }\n    return [];\n  };\n  const plrTaskLength = plrTasks().length;\n  const skippedTaskLength = (pipelinerun?.status?.skippedTasks || []).length;\n  const taskStatus: TaskStatus = {\n    PipelineNotStarted: 0,\n    Pending: 0,\n    Running: 0,\n    Succeeded: 0,\n    Failed: 0,\n    Cancelled: 0,\n    Skipped: skippedTaskLength,\n  };\n\n  if (pipelinerun?.status?.taskRuns || taskRuns) {\n    plrTasks().forEach((taskRun) => {\n      const status = pipelineRunFilterReducer(\n        taskRuns?.find((tRun) => tRun.metadata.name === taskRun) ||\n          pipelinerun.status.taskRuns[taskRun],\n      );\n      if (status === 'Succeeded') {\n        taskStatus[ComputedStatus.Succeeded]++;\n      } else if (status === 'Running') {\n        taskStatus[ComputedStatus.Running]++;\n      } else if (status === 'Failed') {\n        taskStatus[ComputedStatus.Failed]++;\n      } else if (status === 'Cancelled') {\n        taskStatus[ComputedStatus.Cancelled]++;\n      } else {\n        taskStatus[ComputedStatus.Pending]++;\n      }\n    });\n\n    const pipelineRunHasFailure = taskStatus[ComputedStatus.Failed] > 0;\n    const pipelineRunIsCancelled =\n      pipelineRunFilterReducer(pipelinerun) === ComputedStatus.Cancelled;\n    const unhandledTasks =\n      totalTasks >= plrTaskLength ? totalTasks - plrTaskLength - skippedTaskLength : totalTasks;\n\n    if (pipelineRunHasFailure || pipelineRunIsCancelled) {\n      taskStatus[ComputedStatus.Cancelled] += unhandledTasks;\n    } else {\n      taskStatus[ComputedStatus.Pending] += unhandledTasks;\n    }\n  } else if (\n    pipelinerun?.status?.conditions?.[0]?.status === 'False' ||\n    pipelinerun?.spec.status === SucceedConditionReason.PipelineRunCancelled\n  ) {\n    taskStatus[ComputedStatus.Cancelled] = totalTasks;\n  } else if (pipelinerun?.spec.status === SucceedConditionReason.PipelineRunPending) {\n    taskStatus[ComputedStatus.Pending] += totalTasks;\n  } else {\n    taskStatus[ComputedStatus.PipelineNotStarted]++;\n  }\n  return taskStatus;\n};\n\nexport const getResourceModelFromTaskKind = (kind: string): K8sKind => {\n  if (kind === ClusterTaskModel.kind) {\n    return ClusterTaskModel;\n  }\n  if (kind === TaskModel.kind || kind === undefined) {\n    return TaskModel;\n  }\n  return null;\n};\n\nexport const getSafeTaskResourceKind = (kind: string): string =>\n  (getResourceModelFromTaskKind(kind) || TaskModel).kind;\n\nexport const getResourceModelFromBindingKind = (kind: string): K8sKind => {\n  if (kind === ClusterTriggerBindingModel.kind) {\n    return ClusterTriggerBindingModel;\n  }\n  if (kind === TriggerBindingModel.kind || kind === undefined) {\n    return TriggerBindingModel;\n  }\n  return null;\n};\n\nexport const getSafeBindingResourceKind = (kind: string): string =>\n  (getResourceModelFromBindingKind(kind) || TriggerBindingModel).kind;\n\nexport const getResourceModelFromTask = (task: PipelineTask): K8sKind => {\n  const {\n    taskRef: { kind },\n  } = task;\n\n  return getResourceModelFromTaskKind(kind);\n};\n\nexport const pipelineRefExists = (pipelineRun: PipelineRunKind): boolean =>\n  !!pipelineRun.spec.pipelineRef?.name;\n\nexport const getModelReferenceFromTaskKind = (kind: string): GroupVersionKind => {\n  const model = getResourceModelFromTaskKind(kind);\n  return referenceForModel(model);\n};\n\nexport const countRunningTasks = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): number => {\n  const taskStatuses = taskRuns && getTaskStatus(pipelineRun, undefined, taskRuns);\n  return taskStatuses?.Running;\n};\n\nexport const shouldHidePipelineRunStop = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    (countRunningTasks(pipelineRun, taskRuns) > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunStopForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    (taskRunStatusObj?.Running > 0 ||\n      pipelineRunFilterReducer(pipelineRun) === ComputedStatus.Running)\n  );\n\nexport const shouldHidePipelineRunCancel = (\n  pipelineRun: PipelineRunKind,\n  taskRuns: TaskRunKind[],\n): boolean =>\n  !(\n    pipelineRun &&\n    countRunningTasks(pipelineRun, taskRuns) > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n\nexport const shouldHidePipelineRunCancelForTaskRunStatus = (\n  pipelineRun: PipelineRunKind,\n  taskRunStatusObj: TaskStatus,\n): boolean =>\n  !(\n    pipelineRun &&\n    taskRunStatusObj?.Running > 0 &&\n    pipelineRunFilterReducer(pipelineRun) !== ComputedStatus.Cancelled\n  );\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { WithT } from 'i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../../../module/k8s';\nimport { Firehose, LoadingBox, StatusBox } from '../../utils';\nimport { SecretTypeAbstraction } from './const';\nimport { toTypeAbstraction } from './utils';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const SecretLoadingWrapper = withTranslation()(\n  class SecretLoadingWrapper extends React.Component<\n    SecretLoadingWrapperProps & WithT,\n    SecretLoadingWrapperState\n  > {\n    readonly state: SecretLoadingWrapperState = {\n      secretTypeAbstraction: SecretTypeAbstraction.generic,\n    };\n    componentDidUpdate() {\n      if (!_.isEmpty(this.props.obj.data)) {\n        const secretTypeAbstraction = toTypeAbstraction(this.props.obj.data);\n        if (this.state.secretTypeAbstraction !== secretTypeAbstraction) {\n          this.setState({\n            secretTypeAbstraction,\n          });\n        }\n      }\n    }\n    render() {\n      const { obj, fixedKeys } = this.props;\n      const { secretTypeAbstraction } = this.state;\n      if (!secretTypeAbstraction) {\n        return <LoadingBox />;\n      }\n      const fixed = fixedKeys?.reduce((acc, k) => ({ ...acc, [k]: obj.data?.[k] || '' }), {});\n\n      return (\n        <StatusBox {...obj}>\n          <SecretFormWrapper\n            {...this.props}\n            secretTypeAbstraction={secretTypeAbstraction}\n            obj={obj.data}\n            fixed={fixed}\n          />\n        </StatusBox>\n      );\n    }\n  },\n);\n\nexport const EditSecret = ({ kind }: EditSecretProps) => {\n  const params = useParams();\n  const { t } = useTranslation();\n  return (\n    <Firehose\n      resources={[{ kind, name: params.name, namespace: params.ns, isList: false, prop: 'obj' }]}\n    >\n      <SecretLoadingWrapper fixedKeys={['kind', 'metadata']} saveButtonText={t('public~Save')} />\n    </Firehose>\n  );\n};\n\ntype EditSecretProps = {\n  kind: string;\n};\n\ntype SecretLoadingWrapperProps = {\n  obj?: {\n    data?: K8sResourceKind;\n    [key: string]: any;\n  };\n  fixedKeys: string[];\n  saveButtonText: string;\n};\n\ntype SecretLoadingWrapperState = {\n  secretTypeAbstraction: SecretTypeAbstraction;\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { SecretTypeAbstraction } from './const';\nimport { SecretFormWrapper } from './SecretFormWrapper';\n\nexport const CreateSecret = () => {\n  const params = useParams();\n  const secretTypeAbstraction = params.type as SecretTypeAbstraction;\n  return (\n    <SecretFormWrapper\n      fixed={{ metadata: { namespace: params.ns } }}\n      secretTypeAbstraction={secretTypeAbstraction}\n      isCreate={true}\n    />\n  );\n};\n","export interface RepoMetadata {\n  repoName: string;\n  owner: string;\n  host: string;\n  defaultBranch?: string;\n  fullName?: string;\n  contextDir?: string;\n  devfilePath?: string;\n  dockerfilePath?: string;\n}\n\nexport interface BranchList {\n  branches: string[];\n}\n\nexport interface RepoLanguageList {\n  languages: string[];\n}\n\nexport interface RepoFileList {\n  files: string[];\n}\n\nexport enum RepoStatus {\n  Reachable,\n  Unreachable,\n  RateLimitExceeded,\n  GitTypeNotDetected,\n  InvalidGitTypeSelected,\n  PrivateRepo,\n  ResourceNotFound,\n  GiteaRepoUnreachable,\n}\n","export interface BuildTool {\n  name: string;\n  type: string;\n  language: string;\n  expectedRegexps: RegExp;\n  expectedFiles: string[];\n}\n\nexport interface BuildType {\n  buildType: string;\n  language: string;\n  files: string[];\n}\n\nexport const Maven: BuildTool = {\n  name: 'Maven',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`pom.xml`].join('|')),\n  expectedFiles: ['pom.xml'],\n};\n\nexport const Gradle: BuildTool = {\n  name: 'Gradle',\n  type: 'java',\n  language: 'java',\n  expectedRegexps: RegExp([`.*gradle.*`].join('|')),\n  expectedFiles: ['build.gradle', 'gradlew', 'gradlew.bat'],\n};\n\nexport const Golang: BuildTool = {\n  name: 'Golang',\n  type: 'golang',\n  language: 'go',\n  expectedRegexps: RegExp([`.*.\\\\.go`, `Gopkg.toml`, `glide.yaml`].join('|')),\n  expectedFiles: ['main.go', 'Gopkg.toml', 'glide.yaml'],\n};\n\nexport const Ruby: BuildTool = {\n  name: 'Ruby',\n  type: 'ruby',\n  language: 'ruby',\n  expectedRegexps: RegExp([`Gemfile`, `Rakefile`, `config.ru`].join('|')),\n  expectedFiles: ['Gemfile', 'Rakefile', 'config.ru'],\n};\n\nexport const NodeJS: BuildTool = {\n  name: 'NodeJS',\n  type: 'nodejs',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const ModernWebApp: BuildTool = {\n  name: 'Modern Web App',\n  type: 'modern-webapp',\n  language: 'javascript',\n  expectedRegexps: RegExp([`app.json`, `package.json`, `gulpfile.js`, `Gruntfile.js`].join('|')),\n  expectedFiles: ['app.json', 'package.json', 'gulpfile.js', 'Gruntfile.js'],\n};\n\nexport const PHP: BuildTool = {\n  name: 'PHP',\n  type: 'php',\n  language: 'php',\n  expectedRegexps: RegExp([`index.php`, `composer.json`].join('|')),\n  expectedFiles: ['index.php', 'composer.json'],\n};\n\nexport const Python: BuildTool = {\n  name: 'Python',\n  type: 'python',\n  language: 'python',\n  expectedRegexps: RegExp([`requirements.txt`, `setup.py`].join('|')),\n  expectedFiles: ['requirements.txt', 'setup.py'],\n};\n\nexport const Perl: BuildTool = {\n  name: 'Perl',\n  type: 'perl',\n  language: 'perl',\n  expectedRegexps: RegExp([`index.pl`, `cpanfile`].join('|')),\n  expectedFiles: ['index.pl', 'cpanfile'],\n};\n\nexport const Dotnet: BuildTool = {\n  name: 'Dotnet',\n  type: 'dotnet',\n  language: 'C#',\n  expectedRegexps: RegExp([`project.json`, `.*.csproj`].join('|')),\n  expectedFiles: ['project.json', 'app.csproj'],\n};\n\nexport const BuildTools = [\n  Dotnet,\n  Golang,\n  Gradle,\n  Maven,\n  NodeJS,\n  ModernWebApp,\n  Perl,\n  PHP,\n  Python,\n  Ruby,\n];\n\nexport const WebAppDependencies = [\n  'react',\n  'angular',\n  '@angular/core',\n  'vue',\n  'knockout',\n  'knockback',\n];\n","export * from './github-service';\nexport * from './bitbucket-service';\nexport * from './gitlab-service';\nexport * from './gitea-service';\nexport * from './git-service';\nexport * from './base-service';\n","import { BuildTool, BuildTools, BuildType, WebAppDependencies } from '../types';\n\nexport function detectBuildTypes(files: string[]): BuildType[] {\n  const buildTypes = BuildTools.map((t: BuildTool) => {\n    const matchedFiles = files.filter((f: string) => t.expectedRegexps.test(f));\n    return { buildType: t.type, language: t.language, files: matchedFiles };\n  });\n  return buildTypes\n    .filter((b: BuildType) => b.files.length > 0)\n    .sort((a, b) => b.files.length - a.files.length);\n}\n\nexport function isModernWebApp(packageJsonContent: string): boolean {\n  try {\n    const packageJson = JSON.parse(packageJsonContent);\n    return WebAppDependencies.some((dep) => dep in packageJson.dependencies);\n  } catch {\n    return false;\n  }\n}\n","import { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { SecretKind } from '@console/internal/module/k8s';\nimport { GitSource, GitProvider, SecretType as GitSecretType } from '../types';\nimport { BaseService } from './base-service';\nimport { BitbucketService } from './bitbucket-service';\nimport { GiteaService } from './gitea-service';\nimport { GithubService } from './github-service';\nimport { GitlabService } from './gitlab-service';\n\nexport function getGitService(\n  repository: string,\n  gitProvider: GitProvider,\n  ref?: string,\n  contextDir?: string,\n  secret?: SecretKind,\n  devfilePath?: string,\n  dockerfilePath?: string,\n): BaseService {\n  let secretType: GitSecretType;\n  let secretContent: any;\n  switch (secret?.type) {\n    case SecretType.basicAuth:\n      secretType = GitSecretType.BASIC_AUTH;\n      secretContent = secret.data;\n      break;\n    case SecretType.sshAuth:\n      secretType = GitSecretType.SSH;\n      secretContent = secret['ssh-privatekey'];\n      break;\n    default:\n      secretType = GitSecretType.NO_AUTH;\n  }\n  const gitSource: GitSource = {\n    url: repository,\n    ref,\n    contextDir,\n    secretType,\n    secretContent,\n    devfilePath,\n    dockerfilePath,\n  };\n\n  switch (gitProvider) {\n    case GitProvider.GITHUB:\n      return new GithubService(gitSource);\n    case GitProvider.BITBUCKET:\n      return new BitbucketService(gitSource);\n    case GitProvider.GITLAB:\n      return new GitlabService(gitSource);\n    case GitProvider.GITEA:\n      return new GiteaService(gitSource);\n    default:\n      return null;\n  }\n}\n","export * from './build-tool-type-detector';\nexport * from './dockerfile-parser';\nexport * from './import-strategy-detector';\n","import { CommandEntry, parse } from 'docker-file-parser';\n\nexport class DockerFileParser {\n  content: string;\n\n  parsedCommands: CommandEntry[];\n\n  constructor(content: string) {\n    this.content = content;\n    this.parsedCommands = this.parse();\n  }\n\n  parse(): CommandEntry[] {\n    let parsedContent: CommandEntry[] = [];\n    try {\n      parsedContent = parse(this.content);\n    } catch {} // eslint-disable-line no-empty\n    return parsedContent;\n  }\n\n  getContainerPort(): number {\n    const cmd = this.parsedCommands.filter((c: CommandEntry) => c.name === 'EXPOSE');\n    if (cmd.length > 0) {\n      const exposeCommand = cmd[0];\n      if ((exposeCommand.args.length as number) > 0) return Number(exposeCommand.args[0]);\n    }\n    return null;\n  }\n}\n","import { EdgeModel, Model, NodeModel, NodeShape } from '@patternfly/react-topology';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResources, WatchK8sResults } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { Alerts } from '@console/internal/components/monitoring/types';\nimport { BuildConfigModel, HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  apiVersionForReference,\n  isGroupVersionKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  kindForReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport {\n  TYPE_EVENT_SOURCE,\n  TYPE_EVENT_SOURCE_KAFKA,\n  TYPE_KNATIVE_REVISION,\n} from '@console/knative-plugin/src/topology/const';\nimport { isKnativeServing, OverviewItem } from '@console/shared';\nimport {\n  TYPE_APPLICATION_GROUP,\n  TYPE_CONNECTS_TO,\n  NODE_WIDTH,\n  NODE_HEIGHT,\n  NODE_PADDING,\n  GROUP_WIDTH,\n  GROUP_HEIGHT,\n  GROUP_PADDING,\n} from '../const';\nimport {\n  TopologyDataObject,\n  TopologyDataResources,\n  TopologyDataModelDepicted,\n  OdcNodeModel,\n  TopologyResourcesObject,\n} from '../topology-types';\nimport { ConnectsToData, edgesFromAnnotations } from '../utils/connector-utils';\nimport { WORKLOAD_TYPES } from '../utils/topology-utils';\n\nexport const dataObjectFromModel = (node: OdcNodeModel): TopologyDataObject => {\n  return {\n    id: node.id,\n    name: node.label,\n    type: node.type,\n    resource: node.resource,\n    resources: null,\n    data: null,\n  };\n};\n\nexport const getContextDirByName = (data, name) => {\n  if (!data?.builds && !data?.buildConfigs && !data?.pipelines) {\n    return null;\n  }\n\n  const extractContextDir = (item) => item.spec?.source?.contextDir ?? null;\n  const buildsData = data?.builds?.data?.find(\n    (build: K8sResourceKind) => build.metadata.name === name,\n  );\n  if (buildsData) {\n    const contextDir = extractContextDir(buildsData);\n    return contextDir;\n  }\n\n  const buildConfigData = data?.buildConfigs?.data?.find(\n    (buildConfig: K8sResourceKind) => buildConfig.metadata.name === name,\n  );\n  if (buildConfigData) {\n    const contextDir = extractContextDir(buildConfigData);\n    return contextDir;\n  }\n\n  const pipelinesData = data?.pipelines?.data?.find(\n    (pipeline: K8sResourceKind) => pipeline.metadata.name === name,\n  );\n  if (pipelinesData) {\n    const pathContextParam = pipelinesData?.spec?.params?.find(\n      (param) => param.name === 'PATH_CONTEXT',\n    );\n    if (pathContextParam) {\n      return pathContextParam.default;\n    }\n  }\n  return null;\n};\n\n/**\n * create all data that need to be shown on a topology data\n */\nexport const createTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  defaultIcon: string,\n  operatorBackedService: boolean = false,\n  resources?: WatchK8sResults<TopologyResourcesObject> | { [x: string]: Alerts },\n): TopologyDataObject => {\n  const { monitoringAlerts = [] } = overviewItem;\n  const dcUID = _.get(resource, 'metadata.uid');\n  const deploymentsLabels = _.get(resource, 'metadata.labels', {});\n  const deploymentsAnnotations = _.get(resource, 'metadata.annotations', {});\n  const deploymentsName = _.get(resource, 'metadata.name', '');\n  const contextDir = getContextDirByName(resources, deploymentsName);\n  const builderImageIcon =\n    getImageForIconClass(`icon-${deploymentsLabels['app.openshift.io/runtime']}`) ||\n    getImageForIconClass(`icon-${deploymentsLabels['app.kubernetes.io/name']}`);\n  return {\n    id: dcUID,\n    name: resource?.metadata.name || deploymentsLabels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      monitoringAlerts,\n      kind: referenceFor(resource),\n      editURL: deploymentsAnnotations['app.openshift.io/edit-url'],\n      vcsURI: deploymentsAnnotations['app.openshift.io/vcs-uri'],\n      vcsRef: deploymentsAnnotations['app.openshift.io/vcs-ref'],\n      contextDir,\n      builderImage: builderImageIcon || defaultIcon,\n      isKnativeResource:\n        type &&\n        (type === TYPE_EVENT_SOURCE ||\n          type === TYPE_KNATIVE_REVISION ||\n          type === TYPE_EVENT_SOURCE_KAFKA)\n          ? true\n          : isKnativeServing(resource, 'metadata.labels'),\n    },\n  };\n};\n\n/**\n * create node data for graphs\n */\nexport const getTopologyNodeItem = (\n  resource: K8sResourceKind,\n  type: string,\n  data: any,\n  nodeProps?: Omit<OdcNodeModel, 'type' | 'data' | 'children' | 'id' | 'label'>,\n  children?: string[],\n  resourceKind?: K8sResourceKindReference,\n  shape?: NodeShape,\n): OdcNodeModel => {\n  const uid = resource?.metadata.uid;\n  const name = resource?.metadata.name;\n  const label = resource?.metadata.labels?.['app.openshift.io/instance'];\n  const kind = resourceKind || referenceFor(resource);\n  return {\n    id: uid,\n    type,\n    label: label || name,\n    shape,\n    resource,\n    resourceKind: kind,\n    data,\n    ...(children && children.length && { children }),\n    ...(nodeProps || {}),\n  };\n};\n\nexport const WorkloadModelProps = {\n  width: NODE_WIDTH,\n  height: NODE_HEIGHT,\n  group: false,\n  visible: true,\n  style: {\n    padding: NODE_PADDING,\n  },\n};\n\n/**\n * create edge data for graph\n */\nexport const getTopologyEdgeItems = (\n  dc: K8sResourceKind,\n  resources: K8sResourceKind[],\n): EdgeModel[] => {\n  const annotations = _.get(dc, 'metadata.annotations');\n  const edges = [];\n\n  _.forEach(edgesFromAnnotations(annotations), (edge: string | ConnectsToData) => {\n    // handles multiple edges\n    const targetNode = _.get(\n      _.find(resources, (deployment) => {\n        let name;\n        if (typeof edge === 'string') {\n          name =\n            deployment.metadata?.labels?.['app.kubernetes.io/instance'] ??\n            deployment.metadata?.name;\n          return name === edge;\n        }\n        name = deployment.metadata?.name;\n        const { apiVersion: edgeApiVersion, kind: edgeKind, name: edgeName } = edge;\n        const { kind, apiVersion } = deployment;\n        let edgeExists = name === edgeName && kind === edgeKind;\n        if (apiVersion) {\n          edgeExists = edgeExists && apiVersion === edgeApiVersion;\n        }\n        return edgeExists;\n      }),\n      ['metadata', 'uid'],\n    );\n    const uid = _.get(dc, ['metadata', 'uid']);\n    if (targetNode) {\n      edges.push({\n        id: `${uid}_${targetNode}`,\n        type: TYPE_CONNECTS_TO,\n        label: i18next.t('topology~Visual connector'),\n        source: uid,\n        target: targetNode,\n      });\n    }\n  });\n\n  return edges;\n};\n\n/**\n * create groups data for graph\n */\nexport const getTopologyGroupItems = (dc: K8sResourceKind): NodeModel => {\n  const groupName = _.get(dc, ['metadata', 'labels', 'app.kubernetes.io/part-of']);\n  if (!groupName) {\n    return null;\n  }\n\n  return {\n    id: `group:${groupName}`,\n    type: TYPE_APPLICATION_GROUP,\n    group: true,\n    label: groupName,\n    children: [_.get(dc, ['metadata', 'uid'])],\n    width: GROUP_WIDTH,\n    height: GROUP_HEIGHT,\n    data: {},\n    visible: true,\n    collapsed: false,\n    style: {\n      padding: GROUP_PADDING,\n    },\n  };\n};\n\nconst mergeGroupData = (newGroup: NodeModel, existingGroup: NodeModel): void => {\n  if (!existingGroup.data?.groupResources && !newGroup.data?.groupResources) {\n    return;\n  }\n\n  if (!existingGroup.data?.groupResources) {\n    existingGroup.data.groupResources = [];\n  }\n  if (newGroup?.data?.groupResources) {\n    newGroup.data.groupResources.forEach((obj) => {\n      if (!existingGroup.data.groupResources.includes(obj)) {\n        existingGroup.data.groupResources.push(obj);\n      }\n    });\n  }\n};\n\nexport const mergeGroup = (newGroup: NodeModel, existingGroups: NodeModel[]): void => {\n  if (!newGroup) {\n    return;\n  }\n\n  // Remove any children from the new group that already belong to another group\n  newGroup.children = newGroup.children?.filter(\n    (c) => !existingGroups?.find((g) => g.children?.includes(c)),\n  );\n\n  // find and add the groups\n  const existingGroup = existingGroups.find((g) => g.group && g.id === newGroup.id);\n  if (!existingGroup) {\n    existingGroups.push(newGroup);\n  } else {\n    newGroup.children.forEach((id) => {\n      if (!existingGroup.children.includes(id)) {\n        existingGroup.children.push(id);\n      }\n      mergeGroupData(newGroup, existingGroup);\n    });\n  }\n};\n\nexport const mergeGroups = (newGroups: NodeModel[], existingGroups: NodeModel[]): void => {\n  if (!newGroups || !newGroups.length) {\n    return;\n  }\n  newGroups.forEach((newGroup) => {\n    mergeGroup(newGroup, existingGroups);\n  });\n};\n\nexport const addToTopologyDataModel = (\n  newModel: Model,\n  graphModel: Model,\n  dataModelDepicters: TopologyDataModelDepicted[] = [],\n) => {\n  if (newModel?.edges) {\n    graphModel.edges.push(...newModel.edges);\n  }\n  if (newModel?.nodes) {\n    graphModel.nodes.push(\n      ...newModel.nodes.filter(\n        (n) =>\n          !n.group &&\n          !graphModel.nodes.find((existing) => {\n            if (n.id === existing.id) {\n              return true;\n            }\n            const { resource } = n as OdcNodeModel;\n            return (\n              !resource || !!dataModelDepicters.find((depicter) => depicter(resource, graphModel))\n            );\n          }),\n      ),\n    );\n    mergeGroups(\n      newModel.nodes.filter((n) => n.group),\n      graphModel.nodes,\n    );\n  }\n};\n\n/**\n * Mapping of TopologyResourcesObject key to k8s resource kind\n */\nexport interface KindsMap {\n  [key: string]: string;\n}\n\nexport const getWorkloadResources = (\n  resources: TopologyDataResources,\n  kindsMap: KindsMap,\n  workloadTypes: string[] = WORKLOAD_TYPES,\n) => {\n  return _.flatten(\n    workloadTypes.map((resourceKind) => {\n      return resources[resourceKind]\n        ? resources[resourceKind].data.map((res) => {\n            const resKind = res.kind || kindsMap[resourceKind];\n            let kind = resKind;\n            let apiVersion;\n            if (resKind && isGroupVersionKind(resKind)) {\n              kind = kindForReference(resKind);\n              apiVersion = apiVersionForReference(resKind);\n            }\n            return {\n              kind,\n              apiVersion,\n              ...res,\n            };\n          })\n        : [];\n    }),\n  );\n};\n\nexport const getBaseWatchedResources = (namespace: string): WatchK8sResources<any> => {\n  return {\n    deploymentConfigs: {\n      isList: true,\n      kind: 'DeploymentConfig',\n      namespace,\n      optional: true,\n    },\n    deployments: {\n      isList: true,\n      kind: 'Deployment',\n      namespace,\n      optional: true,\n    },\n    daemonSets: {\n      isList: true,\n      kind: 'DaemonSet',\n      namespace,\n      optional: true,\n    },\n    pods: {\n      isList: true,\n      kind: 'Pod',\n      namespace,\n      optional: true,\n    },\n    jobs: {\n      isList: true,\n      kind: 'Job',\n      namespace,\n      optional: true,\n    },\n    cronJobs: {\n      isList: true,\n      kind: 'CronJob',\n      namespace,\n      optional: true,\n    },\n    statefulSets: {\n      isList: true,\n      kind: 'StatefulSet',\n      namespace,\n      optional: true,\n    },\n    services: {\n      isList: true,\n      kind: 'Service',\n      namespace,\n      optional: true,\n    },\n    hpas: {\n      isList: true,\n      kind: HorizontalPodAutoscalerModel.kind,\n      namespace,\n      optional: true,\n    },\n    buildConfigs: {\n      isList: true,\n      kind: BuildConfigModel.kind,\n      namespace,\n      optional: true,\n    },\n  };\n};\n","import { GitProvider } from '@console/git-service/src';\nimport { RepositoryFormValues } from './types';\n\nexport enum RepositoryFields {\n  REPOSITORY = 'Repository',\n  URL_REPO = 'RepoUrl',\n  URL_ORG = 'RepoOrg',\n  SHA = 'sha',\n  EVENT_TYPE = 'EventType',\n}\n\nexport enum RepoAnnotationFields {\n  SHA_MESSAGE = 'sha_message',\n  SHA_URL = 'sha_url',\n  REPO_URL = 'repo_url',\n  BRANCH = 'Branch',\n}\n\nexport enum RepositoryRuntimes {\n  golang = 'go',\n  nodejs = 'nodejs',\n  python = 'python',\n  java = 'java',\n}\n\nexport const RepositoryLabels: Record<RepositoryFields, string> = {\n  [RepositoryFields.REPOSITORY]: 'pipelinesascode.tekton.dev/repository',\n  [RepositoryFields.URL_REPO]: 'pipelinesascode.tekton.dev/url-repository',\n  [RepositoryFields.URL_ORG]: 'pipelinesascode.tekton.dev/url-org',\n  [RepositoryFields.SHA]: 'pipelinesascode.tekton.dev/sha',\n  [RepositoryFields.EVENT_TYPE]: 'pipelinesascode.tekton.dev/event-type',\n};\n\nexport const RepositoryAnnotations: Record<RepoAnnotationFields, string> = {\n  [RepoAnnotationFields.SHA_MESSAGE]: 'pipelinesascode.tekton.dev/sha-title',\n  [RepoAnnotationFields.SHA_URL]: 'pipelinesascode.tekton.dev/sha-url',\n  [RepoAnnotationFields.REPO_URL]: 'pipelinesascode.tekton.dev/repo-url',\n  [RepoAnnotationFields.BRANCH]: 'pipelinesascode.tekton.dev/branch',\n};\n\nexport const baseURL = 'https://github.com';\n\nexport enum PacConfigurationTypes {\n  GITHUB = 'github',\n  WEBHOOK = 'webhook',\n}\n\nexport const defaultRepositoryFormValues: RepositoryFormValues = {\n  gitUrl: '',\n  githubAppAvailable: false,\n  gitProvider: GitProvider.INVALID,\n  name: '',\n  method: 'github',\n  showOverviewPage: false,\n  yamlData: ``,\n  webhook: {\n    token: '',\n    method: 'token',\n    secret: '',\n    url: '',\n    user: '',\n    autoAttach: false,\n  },\n};\n\nexport const AccessTokenDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token',\n  [GitProvider.GITLAB]: 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/app-passwords/',\n};\n\nexport const WebhookDocLinks = {\n  [GitProvider.GITHUB]:\n    'https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks',\n  [GitProvider.GITLAB]:\n    'https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#configure-a-webhook-in-gitlab',\n  [GitProvider.BITBUCKET]: 'https://support.atlassian.com/bitbucket-cloud/docs/manage-webhooks/',\n};\n\nexport const gitProviderTypesHosts = ['github.com', 'bitbucket.org', 'gitlab.com'];\n","import { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { GitProvider } from '@console/git-service/src';\nimport { importFlowRepositoryValidationSchema } from '@console/pipelines-plugin/src/components/repository/repository-form-utils';\nimport { nameValidationSchema, nameRegex } from '@console/shared';\nimport { healthChecksProbesValidationSchema } from '../health-checks/health-checks-probe-validation-utils';\nimport {\n  projectNameValidationSchema,\n  applicationNameValidationSchema,\n  deploymentValidationSchema,\n  serverlessValidationSchema,\n  limitsValidationSchema,\n  routeValidationSchema,\n  imageValidationSchema,\n  gitValidationSchema,\n  dockerValidationSchema,\n  buildValidationSchema,\n  gitUrlRegex,\n  resourcesValidationSchema,\n  devfileValidationSchema,\n  importFlowPipelineTemplateValidationSchema,\n} from './validation-schema';\n\nexport const validationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: nameValidationSchema(t),\n    project: projectNameValidationSchema,\n    application: applicationNameValidationSchema,\n    image: imageValidationSchema(t),\n    git: gitValidationSchema(t),\n    docker: dockerValidationSchema(t),\n    devfile: devfileValidationSchema(t),\n    deployment: deploymentValidationSchema(t),\n    serverless: serverlessValidationSchema(t),\n    route: routeValidationSchema(t),\n    limits: limitsValidationSchema(t),\n    build: buildValidationSchema,\n    resources: resourcesValidationSchema,\n    healthChecks: healthChecksProbesValidationSchema(t),\n    pac: importFlowRepositoryValidationSchema(t),\n    pipeline: importFlowPipelineTemplateValidationSchema,\n  });\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  if (hasDomain(url, 'gitea.com') || url.includes('gitea')) {\n    return GitProvider.GITEA;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nexport const createComponentName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return nameString;\n  }\n\n  const kebabCaseStr = _.kebabCase(nameString);\n  return nameString.match(/^\\d/) || kebabCaseStr.match(/^\\d/)\n    ? `ocp-${kebabCaseStr}`\n    : kebabCaseStr;\n};\n\nexport const detectGitRepoName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createComponentName(name);\n};\n","import { parsePrometheusDuration } from '@openshift-console/plugin-shared/src/datetime/prometheus';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport {\n  DataPoint,\n  PrometheusResponse,\n  PrometheusResult,\n} from '@console/internal/components/graphs';\nimport { humanizeNumberSI } from '@console/internal/components/utils';\nimport { dateFormatterNoYear } from '@console/internal/components/utils/datetime';\nimport { PipelineKind } from '../../../types';\nimport { PipelineMetricsLevel } from '../const';\n\nexport interface GraphData {\n  chartName: string;\n  hasData: boolean;\n}\nexport interface PipelineMetricsGraphProps {\n  pipeline: PipelineKind;\n  timespan: number;\n  queryPrefix: string;\n  metricsLevel: string;\n  interval: number;\n  width?: number;\n\n  loaded?: boolean;\n  onLoad?: (g: GraphData) => void;\n}\nexport enum PipelineQuery {\n  NUMBER_OF_PIPELINE_RUNS = 'NUMBER_OF_PIPELINE_RUNS',\n  PIPELINE_RUN_DURATION = 'PIPELINE_RUN_DURATION',\n  PIPELINE_RUN_TASK_RUN_DURATION = 'PIPELINE_RUN_TASK_RUN_DURATION',\n  PIPELINE_SUCCESS_RATIO = 'PIPELINE_SUCCESS_RATIO',\n}\n\nexport enum MetricsQueryPrefix {\n  TEKTON = 'tekton',\n  TEKTON_PIPELINES_CONTROLLER = 'tekton_pipelines_controller',\n}\n\nexport const metricsQueries = (\n  prefix: string = MetricsQueryPrefix.TEKTON_PIPELINES_CONTROLLER,\n) => ({\n  [PipelineMetricsLevel.PIPELINE_TASK_LEVEL]: {\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}`,\n    ),\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})`,\n    ),\n  },\n  [PipelineMetricsLevel.PIPELINERUN_TASKRUN_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds{pipeline=\"<%= name %>\",namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n  [PipelineMetricsLevel.UNSIMPLIFIED_METRICS_LEVEL]: {\n    [PipelineQuery.NUMBER_OF_PIPELINE_RUNS]: _.template(\n      `sum(count by (pipelinerun) (${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"}))`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_TASK_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_taskrun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun, task)`,\n    ),\n    [PipelineQuery.PIPELINE_RUN_DURATION]: _.template(\n      `sum(${prefix}_pipelinerun_duration_seconds_sum{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})  by (pipelinerun)`,\n    ),\n    [PipelineQuery.PIPELINE_SUCCESS_RATIO]: _.template(\n      `count(sort_desc(${prefix}_pipelinerun_duration_seconds_count{pipeline=\"<%= name %>\",exported_namespace=\"<%= namespace %>\"})) by(status)`,\n    ),\n  },\n});\n\nconst formatPositiveValue = (v: number): string =>\n  v === 0 || (v >= 0.001 && v < 1e23) ? humanizeNumberSI(v).string : v.toExponential(1);\nexport const formatValue = (v: number): string =>\n  (v < 0 ? '-' : '') + formatPositiveValue(Math.abs(v));\nexport const formatDate = (date: Date) => {\n  return dateFormatterNoYear.format(date);\n};\nexport const formatTimeSeriesValues = (result: PrometheusResult, samples: number, span: number) => {\n  const { metric, values } = result;\n  const newValues = _.map(values, (v) => {\n    const y = Number(v[1]);\n    return {\n      x: new Date(new Date(v[0] * 1000).setHours(0, 0, 0, 0)),\n      y: Number.isNaN(y) ? null : y,\n      metric,\n    };\n  });\n\n  // The data may have missing values, so we fill those gaps with nulls so that the graph correctly\n  // shows the missing values as gaps in the line\n  const start = Number(_.get(newValues, '[0].x'));\n  const end = Number(_.get(_.last(newValues), 'x'));\n  const step = span / samples;\n  _.range(start, end, step).forEach((t, i) => {\n    const x = new Date(t);\n    if (_.get(newValues, [i, 'x']) > x) {\n      newValues.splice(i, 0, { x, y: null, metric });\n    }\n  });\n\n  return newValues;\n};\n\ntype XMutator = (x: any) => Date | string;\ntype YMutator = (y: any) => number;\nexport const getRangeVectorData = (\n  response: PrometheusResponse,\n  xMutator: XMutator,\n  yMutator?: YMutator,\n) => {\n  const results = response?.data?.result || [];\n  return results?.map((r) => {\n    return r?.values?.map(([x, y]) => {\n      return {\n        x: xMutator?.(r) ?? new Date(x * 1000),\n        y: yMutator?.(y) ?? parseFloat(y),\n        metric: r?.metric,\n        time: x,\n      };\n    });\n  });\n};\n\nexport const getXaxisValues = (timespan: number): number[] => {\n  const xValues = [];\n  if (!timespan) return xValues;\n  const oneDayDuration = parsePrometheusDuration('1d');\n  const numDays = Math.round(timespan / oneDayDuration);\n  const d = new Date(Date.now());\n  d.setHours(0, 0, 0, 0);\n  while (xValues.length - 1 < numDays) {\n    xValues.push(d.getTime());\n    d.setDate(d.getDate() - 1);\n  }\n  return xValues.slice(0, numDays);\n};\n\nexport const getDuration = (seconds: number, long?: boolean): string => {\n  if (seconds === 0) {\n    return i18next.t('pipelines-plugin~less than a sec');\n  }\n  let sec = Math.round(seconds);\n  let min = 0;\n  let hr = 0;\n  let duration = '';\n  if (sec >= 60) {\n    min = Math.floor(sec / 60);\n    sec %= 60;\n  }\n  if (min >= 60) {\n    hr = Math.floor(min / 60);\n    min %= 60;\n  }\n  if (hr > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} hour', { count: hr })\n      : i18next.t('pipelines-plugin~{{hr}}h', { hr });\n    duration += ' ';\n  }\n  if (min > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} minute', { count: min })\n      : i18next.t('pipelines-plugin~{{min}}m', { min });\n    duration += ' ';\n  }\n  if (sec > 0) {\n    duration += long\n      ? i18next.t('pipelines-plugin~{{count}} second', { count: sec })\n      : i18next.t('pipelines-plugin~{{sec}}s', { sec });\n  }\n\n  return duration.trim();\n};\n\nexport const PipelineMetricsTimeRangeOptions = () => ({\n  '1d': i18next.t('pipelines-plugin~1 day'),\n  '3d': i18next.t('pipelines-plugin~3 days'),\n  '1w': i18next.t('pipelines-plugin~1 week'),\n  '2w': i18next.t('pipelines-plugin~2 weeks'),\n  '3w': i18next.t('pipelines-plugin~3 weeks'),\n  '4w': i18next.t('pipelines-plugin~4 weeks'),\n});\n\nexport const getTransformedDataPoints = (data: DataPoint[]): DataPoint[] => {\n  let previousValue = 0;\n  return _.sortBy(data, 'x').map((val) => {\n    const currentValue = val.y - previousValue;\n    previousValue += val.y;\n    return { ...val, y: currentValue };\n  });\n};\n","import { apiVersionForModel, K8sResourceKind } from '@console/internal/module/k8s';\nimport { ServiceModel } from '@console/knative-plugin/src';\nimport { AutoscaleWindowType } from '../import-types';\n\nexport const getAutoscaleWindow = (autoscaleValue: string): AutoscaleWindowType => {\n  const windowRegEx = /^[0-9]+|[a-zA-Z]*/g;\n  const [val, unit] = autoscaleValue?.match(windowRegEx);\n  return {\n    autoscalewindow: Number(val) || '',\n    autoscalewindowUnit: unit || 's',\n    defaultAutoscalewindowUnit: unit || 's',\n  };\n};\n\nconst DOMAIN_MAPPING_KSVC_INFO_REGEX = / *\\([^)]*\\) */g;\n\nexport const removeKsvcInfoFromDomainMapping = (dm: string) =>\n  dm.replace(DOMAIN_MAPPING_KSVC_INFO_REGEX, '');\n\nexport const getOtherKsvcFromDomainMapping = (\n  dm: K8sResourceKind,\n  currentKsvcName: string,\n): string | null => {\n  if (!dm.spec?.ref) return null;\n  const { apiVersion, kind, name } = dm.spec.ref;\n  return apiVersionForModel(ServiceModel) === apiVersion &&\n    kind === ServiceModel.kind &&\n    name !== currentKsvcName\n    ? name\n    : null;\n};\n\nexport const removeDuplicateDomainMappings = (\n  allDomainMappings: string[],\n  connectedDomainMappings: string[],\n): string[] => {\n  return [\n    ...new Set(\n      allDomainMappings\n        ?.filter((dm) =>\n          connectedDomainMappings?.length > 0\n            ? connectedDomainMappings?.includes(removeKsvcInfoFromDomainMapping(dm))\n            : true,\n        )\n        .map((n) => removeKsvcInfoFromDomainMapping(n)),\n    ),\n  ];\n};\n\nexport const hasOtherKsvcDomainMappings = (domainMapping: string[]): boolean =>\n  domainMapping.some((dm) => new RegExp(DOMAIN_MAPPING_KSVC_INFO_REGEX).test(dm));\n\nexport const getAllOtherDomainMappingInUse = (\n  domainMappings: string[],\n  data: K8sResourceKind[] = [],\n  serviceName: string,\n): K8sResourceKind[] =>\n  domainMappings\n    .filter((d) => hasOtherKsvcDomainMappings([d]))\n    .map((dm) => {\n      const selectedDomain = data?.find(\n        (d) => d.metadata.name === removeKsvcInfoFromDomainMapping(dm),\n      );\n      return selectedDomain && selectedDomain.spec?.ref?.name !== serviceName\n        ? selectedDomain\n        : null;\n    })\n    .filter((d) => !!d);\n","import { observable, makeObservable } from 'mobx';\nimport {\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceFor,\n} from '@console/internal/module/k8s';\nimport { OdcNodeModel } from '../topology-types';\n//\n// Import from @patternfly/react-topology when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport BaseNode from './BaseNode';\n\nclass OdcBaseNode extends BaseNode {\n  public resource?: K8sResourceKind | undefined = undefined;\n\n  public resourceKind?: K8sResourceKindReference | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable(this, {\n      resource: observable.ref,\n      resourceKind: observable,\n    });\n  }\n\n  getResource(): K8sResourceKind | undefined {\n    return this.resource;\n  }\n\n  setResource(resource: K8sResourceKind | undefined): void {\n    this.resource = resource;\n  }\n\n  getResourceKind(): K8sResourceKindReference | undefined {\n    return this.resourceKind || referenceFor(this.resource);\n  }\n\n  setResourceKind(kind: K8sResourceKindReference | undefined): void {\n    this.resourceKind = kind;\n  }\n\n  setModel(model: OdcNodeModel): void {\n    super.setModel(model);\n\n    if ('resource' in model) {\n      this.resource = model.resource;\n    }\n    if ('resourceKind' in model) {\n      this.resourceKind = model.resourceKind;\n    }\n  }\n}\n\nexport default OdcBaseNode;\n","import * as GitUrlParse from 'git-url-parse';\nimport { TFunction } from 'i18next';\nimport { Base64 } from 'js-base64';\nimport * as _ from 'lodash';\nimport * as yup from 'yup';\nimport { gitUrlRegex } from '@console/dev-console/src/components/import/validation-schema';\nimport { bitBucketUserNameRegex } from '@console/dev-console/src/utils/yup-validation-util';\nimport {\n  k8sCreateResource,\n  k8sGetResource,\n  k8sListResourceItems,\n  k8sPatchResource,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s';\nimport { getGitService, GitProvider } from '@console/git-service/src';\nimport { SecretType } from '@console/internal/components/secrets/create-secret';\nimport { ConfigMapModel, SecretModel } from '@console/internal/models';\nimport { ConfigMapKind, SecretKind, K8sResourceKind } from '@console/internal/module/k8s';\nimport { nameRegex } from '@console/shared/src';\nimport { RepositoryModel } from '../../models';\nimport { PipelineType } from '../import/import-types';\nimport { PAC_TEMPLATE_DEFAULT } from '../pac/const';\nimport { PIPELINERUN_TEMPLATE_NAMESPACE } from '../pipelines/const';\nimport { RepositoryRuntimes, gitProviderTypesHosts } from './consts';\nimport { RepositoryFormValues } from './types';\n\nexport const dryRunOpt = { dryRun: 'All' };\n\nexport const repositoryValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    name: yup\n      .string()\n      .matches(nameRegex, {\n        message: t(\n          'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n        ),\n        excludeEmptyString: true,\n      })\n      .required(t('pipelines-plugin~Required')),\n    gitUrl: yup\n      .string()\n      .matches(gitUrlRegex, t('pipelines-plugin~Invalid Git URL.'))\n      .required(t('pipelines-plugin~Required')),\n    accessToken: yup.string(),\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(bitBucketUserNameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers, underscores and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl && !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const pipelinesAccessTokenValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    webhook: yup\n      .object()\n      .when('gitProvider', {\n        is: GitProvider.BITBUCKET,\n        then: yup.object().shape({\n          user: yup\n            .string()\n            .matches(nameRegex, {\n              message: t(\n                'pipelines-plugin~Name must consist of lower-case letters, numbers and hyphens. It must start with a letter and end with a letter or number.',\n              ),\n              excludeEmptyString: true,\n            })\n            .required(t('pipelines-plugin~Required')),\n        }),\n      })\n      .when(['method', 'gitProvider', 'gitUrl'], {\n        is: (method, gitProvider, gitUrl) =>\n          gitUrl &&\n          gitProvider &&\n          !(gitProvider === GitProvider.GITHUB && method === GitProvider.GITHUB),\n        then: yup.object().shape({\n          token: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n          secretRef: yup.string().test('oneOfRequired', 'Required', function () {\n            return this.parent.token || this.parent.secretRef;\n          }),\n        }),\n      }),\n  });\n\nexport const importFlowRepositoryValidationSchema = (t: TFunction) => {\n  return yup.object().shape({\n    repository: yup.object().when(['pipelineType', 'pipelineEnabled'], {\n      is: (pipelineType, pipelineEnabled) => pipelineType === PipelineType.PAC && pipelineEnabled,\n      then: pipelinesAccessTokenValidationSchema(t),\n    }),\n  });\n};\n\nconst hasDomain = (url: string, domain: string): boolean => {\n  return (\n    url.startsWith(`https://${domain}/`) ||\n    url.startsWith(`https://www.${domain}/`) ||\n    url.includes(`@${domain}:`)\n  );\n};\n\nexport const detectGitType = (url: string): GitProvider => {\n  if (!gitUrlRegex.test(url)) {\n    // Not a URL\n    return GitProvider.INVALID;\n  }\n  if (hasDomain(url, 'github.com')) {\n    return GitProvider.GITHUB;\n  }\n  if (hasDomain(url, 'bitbucket.org')) {\n    return GitProvider.BITBUCKET;\n  }\n  if (hasDomain(url, 'gitlab.com')) {\n    return GitProvider.GITLAB;\n  }\n  // Not a known URL\n  return GitProvider.UNSURE;\n};\n\nconst createTokenSecret = async (\n  repositoryName: string,\n  user: string,\n  token: string,\n  namespace: string,\n  detectedGitType: GitProvider,\n  webhookSecret?: string,\n  dryRun?: boolean,\n) => {\n  const data: SecretKind = {\n    apiVersion: SecretModel.apiVersion,\n    kind: SecretModel.kind,\n    metadata: {\n      generateName: `${repositoryName}-token-`,\n      namespace,\n    },\n    type: SecretType.opaque,\n    stringData: {\n      'provider.token': token,\n      ...(webhookSecret && { 'webhook.secret': webhookSecret }),\n      ...(detectedGitType === GitProvider.BITBUCKET && {\n        'webhook.auth': Base64.encode(`${user}:${token}`),\n      }),\n    },\n  };\n\n  return k8sCreateResource({\n    model: SecretModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n};\n\nexport const createRepositoryResources = async (\n  values: RepositoryFormValues,\n  namespace: string,\n  labels: { [key: string]: string } = {},\n  dryRun?: boolean,\n): Promise<K8sResourceKind> => {\n  const {\n    name,\n    gitUrl,\n    webhook: { secretObj, method, token, secret: webhookSecret, user },\n  } = values;\n  const encodedSecret = Base64.encode(webhookSecret);\n  const detectedGitType = detectGitType(gitUrl);\n  let secret: SecretKind;\n  if (token && method === 'token') {\n    secret = await createTokenSecret(\n      name,\n      user,\n      token,\n      namespace,\n      detectedGitType,\n      webhookSecret,\n      dryRun,\n    );\n  } else if (\n    method === 'secret' &&\n    secretObj &&\n    secretObj?.data?.['webhook.secret'] !== encodedSecret\n  ) {\n    await k8sPatchResource({\n      model: SecretModel,\n      resource: secretObj,\n      data: [{ op: 'replace', path: `/data/webhook.secret`, value: Base64.encode(webhookSecret) }],\n    });\n  }\n  const gitHost = GitUrlParse(gitUrl).source;\n  const secretRef = secret || secretObj;\n  const data = {\n    kind: RepositoryModel.kind,\n    apiVersion: 'pipelinesascode.tekton.dev/v1alpha1',\n    metadata: {\n      name,\n      namespace,\n      ...(labels || {}),\n    },\n    spec: {\n      url: gitUrl,\n      ...(secretRef || gitHost !== 'github.com'\n        ? {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            git_provider: {\n              ...(!gitProviderTypesHosts.includes(gitHost) ? { url: gitHost } : {}),\n              ...(gitHost === 'bitbucket.org'\n                ? {\n                    user,\n                  }\n                : {}),\n              ...(secretRef\n                ? {\n                    secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'provider.token',\n                    },\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    webhook_secret: {\n                      name: secretRef?.metadata?.name,\n                      key: 'webhook.secret',\n                    },\n                  }\n                : {}),\n            },\n          }\n        : {}),\n    },\n  };\n\n  const resource = await k8sCreateResource({\n    model: RepositoryModel,\n    data,\n    ns: namespace,\n    queryParams: dryRun ? dryRunOpt : {},\n  });\n\n  return resource;\n};\n\nexport const createRemoteWebhook = async (\n  values: RepositoryFormValues,\n  pac: ConfigMapKind,\n  loaded: boolean,\n): Promise<boolean> => {\n  const {\n    gitUrl,\n    webhook: { method, token, secret: webhookSecret, url: webhookURL, secretObj, user },\n  } = values;\n  const detectedGitType = detectGitType(gitUrl);\n  const gitService = getGitService(gitUrl, detectedGitType);\n\n  let sslVerification = true;\n  if (loaded && pac?.data?.['webhook-ssl-verification'] === 'false') {\n    sslVerification = false;\n  }\n\n  let authToken: string;\n  if (detectedGitType === GitProvider.BITBUCKET) {\n    authToken =\n      method === 'token'\n        ? Base64.encode(`${user}:${token}`)\n        : Base64.decode(secretObj?.data?.['webhook.auth']);\n  } else {\n    authToken = method === 'token' ? token : Base64.decode(secretObj?.data?.['provider.token']);\n  }\n\n  const webhookCreationStatus = await gitService.createRepoWebhook(\n    authToken,\n    webhookURL,\n    sslVerification,\n    webhookSecret,\n  );\n\n  return webhookCreationStatus;\n};\n\nexport const createRepositoryName = (nameString: string): string => {\n  if (nameRegex.test(nameString)) {\n    return `git-${nameString}`;\n  }\n  return `git-${_.kebabCase(nameString)}`;\n};\n\nexport const recommendRepositoryName = (url: string): string | undefined => {\n  if (!gitUrlRegex.test(url)) {\n    return undefined;\n  }\n  const name = url.replace(/\\/$/, '').split('/').pop();\n  return createRepositoryName(name);\n};\n\nexport const getFallbackTemplate = (repoName: string): string => `apiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  name: ${repoName ?? 'pull_request'}\n  annotations:\n    # The event we are targeting as seen from the webhook payload\n    # this can be an array too, i.e: [pull_request, push]\n    pipelinesascode.tekton.dev/on-event: \"[pull_request, push]\"\n\n    # The branch or tag we are targeting (ie: main, refs/tags/*)\n    pipelinesascode.tekton.dev/on-target-branch: \"main\"\n\n    # Fetch the git-clone task from hub, we are able to reference later on it\n    # with taskRef and it will automatically be embedded into our pipeline.\n    pipelinesascode.tekton.dev/task: \"git-clone\"\n\n    # You can add more tasks in here to reuse, browse the one you like from here\n    # https://hub.tekton.dev/\n    # example:\n    # pipelinesascode.tekton.dev/task-2: \"[maven, buildah]\"\n\n    # How many runs we want to keep attached to this event\n    pipelinesascode.tekton.dev/max-keep-runs: \"5\"\nspec:\n  params:\n    # The variable with brackets are special to Pipelines as Code\n    # They will automatically be expanded with the events from Github.\n    - name: repo_url\n      value: \"{{ repo_url }}\"\n    - name: revision\n      value: \"{{ revision }}\"\n  pipelineSpec:\n    params:\n      - name: repo_url\n      - name: revision\n    workspaces:\n      - name: source\n      - name: basic-auth\n    tasks:\n      - name: fetch-repository\n        taskRef:\n          name: git-clone\n        workspaces:\n          - name: output\n            workspace: source\n          - name: basic-auth\n            workspace: basic-auth\n        params:\n          - name: url\n            value: $(params.repo_url)\n          - name: revision\n            value: $(params.revision)\n\n      # Customize this task if you like, or just do a taskRef\n      # to one of the hub task.\n      - name: noop-task\n        runAfter:\n          - fetch-repository\n        workspaces:\n          - name: source\n            workspace: source\n        taskSpec:\n          workspaces:\n            - name: source\n          steps:\n            - name: noop-task\n              image: registry.access.redhat.com/ubi9/ubi-micro\n              workingDir: $(workspaces.source.path)\n              script: |\n                exit 0\n  workspaces:\n  - name: source\n    volumeClaimTemplate:\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  # This workspace will inject secret to help the git-clone task to be able to\n  # checkout the private repositories\n  - name: basic-auth\n    secret:\n      secretName: \"{{ git_auth_secret }}\"`;\n\nexport const getPipelineRunDefaultTemplate = async (repoName: string): Promise<string> => {\n  let pipelineRunTemplate = getFallbackTemplate(repoName);\n  try {\n    const template = await k8sGetResource<ConfigMapKind>({\n      model: ConfigMapModel,\n      ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n      name: PAC_TEMPLATE_DEFAULT,\n    });\n    if (template?.data?.template) {\n      pipelineRunTemplate = template.data.template;\n    }\n  } catch (e) {\n    console.log('failed to fetch default template:', e); // eslint-disable-line no-console\n  }\n\n  return pipelineRunTemplate;\n};\n\nexport const getPipelineRunTemplate = async (\n  runtime: string,\n  repoName: string,\n): Promise<string> => {\n  let runTimeTemplate;\n  try {\n    const [pipelineRunTemplateCfg] = await k8sListResourceItems<ConfigMapKind>({\n      model: ConfigMapModel,\n      queryParams: {\n        ns: PIPELINERUN_TEMPLATE_NAMESPACE,\n        labelSelector: {\n          matchLabels: {\n            'pipelinesascode.openshift.io/runtime': RepositoryRuntimes[runtime] || runtime,\n          },\n        },\n      },\n    });\n    runTimeTemplate = pipelineRunTemplateCfg?.data?.template;\n  } catch (e) {\n    console.log('failed to fetch runtime template:', e); // eslint-disable-line no-console\n  }\n  const pipelineRunTemplate = runTimeTemplate ?? (await getPipelineRunDefaultTemplate(repoName));\n  return pipelineRunTemplate;\n};\n","import { TFunction } from 'i18next';\nimport * as yup from 'yup';\n\nconst pathRegex = /^\\/.*$/;\n\nexport const MAX_INT32 = 2147483647;\n\nexport const healthChecksValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    containerName: yup.string(),\n    showForm: yup.boolean(),\n    enabled: yup.boolean(),\n    modified: yup.boolean(),\n    data: yup.object().when('showForm', {\n      is: true,\n      then: yup.object().shape({\n        periodSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Period must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        initialDelaySeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(0, t('devconsole~Initial delay must be greater than or equal to 0.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        failureThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Failure threshold must be greater than or equal to 1.')),\n        timeoutSeconds: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Timeout must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        successThreshold: yup\n          .number()\n          .integer(t('devconsole~Value must be an integer.'))\n          .min(1, t('devconsole~Success threshold must be greater than or equal to 1.'))\n          .max(MAX_INT32, t('devconsole~Value is larger than maximum value allowed.')),\n        requestType: yup.string(),\n        httpGet: yup.object().when('requestType', {\n          is: 'httpGet',\n          then: yup.object({\n            path: yup.string().matches(pathRegex, {\n              message: t('devconsole~Path must start with /.'),\n              excludeEmptyString: true,\n            }),\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        tcpSocket: yup.object().when('requestType', {\n          is: 'tcpSocket',\n          then: yup.object({\n            port: yup.number().required(t('devconsole~Required')),\n          }),\n        }),\n        exec: yup.object().when('requestType', {\n          is: 'command',\n          then: yup.object({\n            command: yup.array().of(yup.string().required(t('devconsole~Required'))),\n          }),\n        }),\n      }),\n    }),\n  });\n\nexport const healthChecksProbesValidationSchema = (t: TFunction) =>\n  yup.object().shape({\n    readinessProbe: healthChecksValidationSchema(t),\n    livenessProbe: healthChecksValidationSchema(t),\n    startupProbe: healthChecksValidationSchema(t),\n  });\n","export const PAC_GH_APP_NEW = 'https://github.com/settings/apps/new';\nexport const PAC_GH_APP_DOC =\n  'https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps#about-github-apps';\nexport const PAC_GH_APP_MANIFEST_API = 'https://api.github.com/app-manifests';\nexport const EVENT_LISTNER_NAME = 'pipelines-as-code-interceptor';\nexport const PAC_SECRET_NAME = 'pipelines-as-code-secret';\nexport const PAC_GH_APP_NAME = 'pipelines-ci-clustername';\nexport const PAC_INFO = 'pipelines-as-code-info';\nexport const PAC_TEMPLATE_DEFAULT = 'pipelines-as-code-pipelinerun-generic';\n","import { GROUP_HEIGHT, GROUP_PADDING, GROUP_WIDTH } from '../../const';\n\nexport const TYPE_OPERATOR_BACKED_SERVICE = 'operator-backed-service';\n\nexport const OPERATOR_GROUP_WIDTH = GROUP_WIDTH;\nexport const OPERATOR_GROUP_HEIGHT = GROUP_HEIGHT;\nexport const OPERATOR_GROUP_PADDING = GROUP_PADDING;\n","import * as _ from 'lodash';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\nimport { BaseService } from '../services/base-service';\n\ntype FuncData = {\n  values: {\n    builder?: string;\n    runtime?: string;\n    builderEnvs?: string[];\n    runtimeEnvs?: string[];\n  };\n};\n\nexport const evaluateFunc = async (gitService: BaseService): Promise<FuncData> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (!isFuncYamlPresent) {\n    return {\n      values: {},\n    };\n  }\n\n  const resourceContent = await gitService.getFuncYamlContent();\n\n  try {\n    const funcJSON = !_.isString(resourceContent) ? resourceContent : safeYAMLToJS(resourceContent);\n\n    const builder = funcJSON?.build?.builder;\n    const builderEnvs = funcJSON?.build?.buildEnvs;\n    const runtime = funcJSON?.runtime;\n    const runtimeEnvs = funcJSON?.run?.envs;\n    return {\n      values: {\n        builder,\n        runtime,\n        builderEnvs,\n        runtimeEnvs,\n      },\n    };\n  } catch {\n    return {\n      values: {},\n    };\n  }\n};\n\nexport const isServerlessFxRepository = async (\n  isServerlessEnabled: boolean,\n  gitService: BaseService,\n): Promise<boolean> => {\n  const isFuncYamlPresent = await gitService.isFuncYamlPresent();\n\n  if (isFuncYamlPresent && isServerlessEnabled) {\n    const content = await gitService.getFuncYamlContent();\n    const funcJSON = safeYAMLToJS(content);\n    if (!funcJSON?.build?.builder || funcJSON?.build?.builder === 's2i') {\n      return true;\n    }\n  }\n  return false;\n};\n","//\n// Copied from @patternfly/react-topology with fixes for https://github.com/patternfly/patternfly-react/issues/7572\n// Remove when updated to a branch containing https://github.com/patternfly/patternfly-react/pull/7573\n//\nimport {\n  Node,\n  Anchor,\n  NodeModel,\n  ModelKind,\n  isNode,\n  isEdge,\n  AnchorEnd,\n  NodeStyle,\n  NodeShape,\n  Edge,\n  GraphElement,\n  NODE_COLLAPSE_CHANGE_EVENT,\n  NODE_POSITIONED_EVENT,\n  NodeStatus,\n  LabelPosition,\n  CenterAnchor,\n  Rect,\n  Translatable,\n  BaseElement,\n  Dimensions,\n  Point,\n} from '@patternfly/react-topology';\nimport { observable, action, computed, makeObservable } from 'mobx';\n\nconst createAnchorKey = (end: AnchorEnd = AnchorEnd.both, type: string = ''): string =>\n  `${end}:${type}`;\n\nclass BaseNode<E extends NodeModel = NodeModel, D = any> extends BaseElement<E, D>\n  implements Node<E, D> {\n  private anchors: { [type: string]: Anchor } = {\n    [createAnchorKey()]: new CenterAnchor(this),\n  };\n\n  private dimensions = new Dimensions();\n\n  private dimensionsInitialized = false;\n\n  private positioned = false;\n\n  private uncollapsedCenter: Point = null;\n\n  private position = new Point();\n\n  private get nodes(): Node[] {\n    if (this.isCollapsed()) {\n      return [];\n    }\n\n    return this.getChildren().filter(isNode);\n  }\n\n  private group = false;\n\n  private collapsed = false;\n\n  private labelPosition = LabelPosition.bottom;\n\n  private shape: NodeShape | undefined = undefined;\n\n  private status: NodeStatus | undefined = undefined;\n\n  constructor() {\n    super();\n\n    makeObservable<\n      BaseElement,\n      | 'anchors'\n      | 'dimensions'\n      | 'dimensionsInitialized'\n      | 'position'\n      | 'nodes'\n      | 'group'\n      | 'collapsed'\n      | 'labelPosition'\n      | 'shape'\n      | 'status'\n      | 'groupBounds'\n      | 'sourceEdges'\n      | 'targetEdges'\n      | 'setDimensions'\n      | 'setBounds'\n      | 'setPosition'\n    >(this, {\n      anchors: observable.shallow,\n      dimensions: observable.ref,\n      dimensionsInitialized: observable,\n      position: observable.ref,\n      nodes: computed,\n      group: observable,\n      collapsed: observable,\n      labelPosition: observable,\n      shape: observable,\n      status: observable,\n      groupBounds: computed,\n      sourceEdges: computed,\n      targetEdges: computed,\n      setDimensions: action,\n      setBounds: action,\n      setPosition: action,\n    });\n  }\n\n  private get groupBounds(): Rect {\n    const children = this.getChildren()\n      .filter(isNode)\n      .filter((n) => n.isVisible());\n    if (!children.length) {\n      return this.getInternalBounds();\n    }\n\n    let rect: Rect | undefined;\n    children.forEach((c) => {\n      if (isNode(c)) {\n        const { padding } = c.getStyle<NodeStyle>();\n        const b = c.getBounds();\n        // Currently non-group nodes do not include their padding in the bounds\n        if (!c.isGroup() && padding) {\n          b.padding(c.getStyle<NodeStyle>().padding);\n        }\n        if (!rect) {\n          rect = b.clone();\n        } else {\n          rect.union(b);\n        }\n      }\n    });\n\n    if (!rect) {\n      rect = new Rect();\n    }\n\n    const { padding } = this.getStyle<NodeStyle>();\n\n    return rect.padding(padding);\n  }\n\n  private get sourceEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getSource() === this);\n  }\n\n  private get targetEdges(): Edge[] {\n    return this.getGraph()\n      .getEdges()\n      .filter((e) => e.getTarget() === this);\n  }\n\n  getChildren(): GraphElement[] {\n    if (this.isCollapsed()) {\n      return super.getChildren().filter(isEdge);\n    }\n    return super.getChildren();\n  }\n\n  // Return all child leaf nodes regardless of collapse status or child groups' collapsed status\n  getAllNodeChildren(): Node[] {\n    return super.getChildren().reduce((total, nexChild) => {\n      if (isNode(nexChild)) {\n        total.push(nexChild.isGroup() ? nexChild.getAllNodeChildren() : nexChild);\n      }\n      return total;\n    }, []);\n  }\n\n  getKind(): ModelKind {\n    return ModelKind.node;\n  }\n\n  private getInternalBounds(): Rect {\n    const { position, dimensions } = this;\n    return new Rect(position.x, position.y, dimensions.width, dimensions.height);\n  }\n\n  getBounds(): Rect {\n    return this.group && !this.collapsed ? this.groupBounds : this.getInternalBounds();\n  }\n\n  setBounds(bounds: Rect): void {\n    const { width, height } = this.dimensions;\n    if (bounds.width !== width || bounds.height !== height) {\n      this.dimensions = new Dimensions(bounds.width, bounds.height);\n    }\n    const { x, y } = this.position;\n    if (bounds.x !== x || bounds.y !== y) {\n      this.setPosition(new Point(bounds.x, bounds.y));\n    }\n  }\n\n  getPosition(): Point {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      return this.getBounds().getCenter();\n    }\n    return this.position;\n  }\n\n  updateChildrenPositions(point: Point, prevLocation: Point): void {\n    const xOffset = point.x - prevLocation.x;\n    const yOffset = point.y - prevLocation.y;\n    this.getChildren().forEach((child) => {\n      if (isNode(child)) {\n        const node = child as Node;\n        const position = node.getPosition();\n        const newPosition = new Point(position.x + xOffset, position.y + yOffset);\n        node.setPosition(newPosition);\n      }\n    });\n  }\n\n  setPosition(point: Point): void {\n    if (this.isGroup() && this.getChildren().length && !this.collapsed) {\n      const prevLocation = this.getBounds().getCenter();\n      this.updateChildrenPositions(point, prevLocation);\n      return;\n    }\n    this.position = point;\n    this.positioned = true;\n    try {\n      this.getController().fireEvent(NODE_POSITIONED_EVENT, { node: this });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n\n  isPositioned(): boolean {\n    return this.positioned;\n  }\n\n  getDimensions(): Dimensions {\n    return this.dimensions;\n  }\n\n  setDimensions(dimensions: Dimensions): void {\n    this.dimensions = dimensions;\n    this.dimensionsInitialized = true;\n  }\n\n  isDimensionsInitialized(): boolean {\n    if (!this.dimensionsInitialized && this.isGroup()) {\n      const nodes = this.getChildren().filter(isNode);\n      if (nodes.length === 0) {\n        return this.dimensionsInitialized;\n      }\n      const result = nodes.every((c) => c.isDimensionsInitialized());\n      if (result) {\n        this.dimensionsInitialized = true;\n      }\n    }\n    return this.dimensionsInitialized;\n  }\n\n  getAnchor(end?: AnchorEnd, type?: string): Anchor {\n    let anchor = this.anchors[createAnchorKey(end, type)];\n    if (!anchor && type) {\n      anchor = this.anchors[createAnchorKey(end)];\n    }\n    if (!anchor && (end === AnchorEnd.source || end === AnchorEnd.target)) {\n      anchor = this.anchors[createAnchorKey(AnchorEnd.both, type)];\n      if (!anchor && type) {\n        anchor = this.anchors[createAnchorKey(AnchorEnd.both)];\n      }\n    }\n    return anchor;\n  }\n\n  setAnchor(anchor: Anchor, end?: AnchorEnd, type?: string): void {\n    const key = createAnchorKey(end, type);\n    if (anchor) {\n      this.anchors[key] = anchor;\n    } else {\n      delete this.anchors[key];\n    }\n  }\n\n  getNodes(): Node[] {\n    return this.nodes;\n  }\n\n  isGroup(): boolean {\n    return this.group;\n  }\n\n  setGroup(group: boolean): void {\n    this.group = group;\n  }\n\n  isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  setCollapsed(collapsed: boolean): void {\n    if (collapsed !== this.collapsed) {\n      // Get the location prior to the collapse change and apply it after the collapse.\n      // This updates the new node(s) location(s) to be what the node was originally, basically\n      // keeping the nodes ln place so the layout doesn't start fresh (putting the new nodes at 0,0\n      // TODO: Update to better position the nodes at a point location rather than relying on the setCenter updating the nodes.\n      const prevCenter = this.getBounds().getCenter();\n      if (!collapsed && this.uncollapsedCenter) {\n        this.updateChildrenPositions(prevCenter, this.uncollapsedCenter);\n        this.uncollapsedCenter = null;\n        this.collapsed = collapsed;\n      } else {\n        this.uncollapsedCenter = collapsed ? prevCenter : null;\n        this.collapsed = collapsed;\n        this.setBounds(this.getBounds().setCenter(prevCenter.x, prevCenter.y));\n      }\n      this.getController().fireEvent(NODE_COLLAPSE_CHANGE_EVENT, { node: this });\n    }\n  }\n\n  getLabelPosition(): LabelPosition {\n    return this.labelPosition;\n  }\n\n  setLabelPosition(position: LabelPosition): void {\n    this.labelPosition = position;\n  }\n\n  getNodeShape(): NodeShape {\n    return this.shape || (this.group ? NodeShape.rect : NodeShape.ellipse);\n  }\n\n  setNodeShape(shape: NodeShape): void {\n    this.shape = shape;\n  }\n\n  getNodeStatus(): NodeStatus {\n    return this.status || NodeStatus.default;\n  }\n\n  setNodeStatus(status: NodeStatus): void {\n    this.status = status;\n  }\n\n  getSourceEdges(): Edge[] {\n    return this.sourceEdges;\n  }\n\n  getTargetEdges(): Edge[] {\n    return this.targetEdges;\n  }\n\n  isVisible(): boolean {\n    return super.isVisible() && this.isDimensionsInitialized();\n  }\n\n  setModel(model: E): void {\n    super.setModel(model);\n\n    let d: Dimensions | undefined;\n    let p: Point | undefined;\n\n    if ('width' in model && model.width != null && model.width !== this.dimensions.width) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.width = model.width;\n    }\n    if ('height' in model && model.height != null && model.height !== this.dimensions.height) {\n      if (!d) {\n        d = this.dimensions.clone();\n      }\n      d.height = model.height;\n    }\n    if (d) {\n      this.setDimensions(d);\n    }\n\n    if ('x' in model && model.x != null && model.x !== this.position.x) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.x = model.x;\n    }\n    if ('y' in model && model.y != null && model.y !== this.position.y) {\n      if (!p) {\n        p = this.position.clone();\n      }\n      p.y = model.y;\n    }\n    if (p) {\n      this.setPosition(p);\n    }\n\n    if ('group' in model) {\n      this.setGroup(!!model.group);\n    }\n    if ('labelPosition' in model) {\n      this.labelPosition = model.labelPosition;\n    }\n    if ('shape' in model) {\n      this.shape = model.shape;\n    }\n    if ('status' in model) {\n      this.status = model.status;\n    }\n    if ('collapsed' in model) {\n      this.setCollapsed(!!model.collapsed);\n    }\n  }\n\n  toModel(): NodeModel {\n    return {\n      ...super.toModel(),\n      x: this.isPositioned() ? this.getPosition().x : undefined,\n      y: this.isPositioned() ? this.getPosition().y : undefined,\n      width: this.isDimensionsInitialized() ? this.getDimensions().width : undefined,\n      height: this.isDimensionsInitialized() ? this.getDimensions().height : undefined,\n      collapsed: this.isCollapsed(),\n      group: this.isGroup(),\n      labelPosition: this.labelPosition,\n      shape: this.shape,\n      status: this.status,\n    };\n  }\n\n  translateToParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(x, y);\n    }\n  }\n\n  translateFromParent(t: Translatable): void {\n    if (!this.group || this.isCollapsed()) {\n      const { x, y } = this.getPosition();\n      t.translate(-x, -y);\n    }\n  }\n}\n\nexport default BaseNode;\n","import {\n  Edge,\n  EdgeModel,\n  EdgeStyle,\n  Model,\n  Node,\n  NodeModel,\n  NodeShape,\n} from '@patternfly/react-topology/dist/esm/types';\nimport i18next from 'i18next';\nimport * as _ from 'lodash';\nimport { WatchK8sResultsObject } from '@console/dynamic-plugin-sdk';\nimport { getImageForIconClass } from '@console/internal/components/catalog/catalog-item-icon';\nimport { DeploymentModel, PodModel, ServiceModel } from '@console/internal/models';\nimport {\n  K8sResourceKind,\n  apiVersionForModel,\n  referenceFor,\n  referenceForModel,\n  modelFor,\n  k8sUpdate,\n  kindForReference,\n  apiVersionForReference,\n  apiGroupForReference,\n  groupVersionFor,\n} from '@console/internal/module/k8s';\nimport { RootState } from '@console/internal/redux';\nimport { getOwnedResources, OverviewItem } from '@console/shared';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '@console/topology/src/const';\nimport {\n  getTopologyGroupItems,\n  createTopologyNodeData,\n  getTopologyNodeItem,\n  mergeGroup,\n  WorkloadModelProps,\n  getContextDirByName,\n} from '@console/topology/src/data-transforms/transform-utils';\nimport { TopologyDataResources, TopologyDataObject } from '@console/topology/src/topology-types';\nimport {\n  filterBasedOnActiveApplication,\n  getTopologyResourceObject,\n  getResource,\n} from '@console/topology/src/utils/topology-utils';\nimport {\n  FLAG_KNATIVE_EVENTING,\n  CAMEL_SOURCE_INTEGRATION,\n  SERVERLESS_FUNCTION_LABEL,\n  SERVERLESS_FUNCTION_LABEL_DEPRECATED,\n  EVENT_SOURCE_SINK_BINDING_KIND,\n  EVENT_SOURCE_CAMEL_KIND,\n} from '../const';\nimport { EventingBrokerModel, EventingTriggerModel, CamelKameletBindingModel } from '../models';\nimport {\n  getDynamicEventSourcesModelRefs,\n  getDynamicChannelModelRefs,\n} from '../utils/fetch-dynamic-eventsources-utils';\nimport { KnativeItem } from '../utils/get-knative-resources';\nimport {\n  KNATIVE_GROUP_NODE_HEIGHT,\n  KNATIVE_GROUP_NODE_PADDING,\n  KNATIVE_GROUP_NODE_WIDTH,\n  URI_KIND,\n} from './const';\nimport {\n  NodeType,\n  Subscriber,\n  EdgeType,\n  PubsubNodes,\n  KnativeUtil,\n  KnativeServiceOverviewItem,\n  KnativeTopologyDataObject,\n  KameletType,\n} from './topology-types';\n\nexport const getKnNodeModelProps = (type: string) => {\n  switch (type) {\n    case NodeType.EventSource:\n    case NodeType.EventSink:\n    case NodeType.EventSourceKafka:\n    case NodeType.KafkaSink:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        visible: true,\n        shape: NodeShape.rhombus,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.KnService:\n      return {\n        width: KNATIVE_GROUP_NODE_WIDTH,\n        height: KNATIVE_GROUP_NODE_HEIGHT,\n        visible: true,\n        collapsed: false,\n        group: true,\n        shape: NodeShape.rect,\n        style: {\n          padding: KNATIVE_GROUP_NODE_PADDING,\n        },\n      };\n    case NodeType.PubSub:\n      return {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT / 2,\n        visible: true,\n        shape: NodeShape.stadium,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    case NodeType.SinkUri:\n      return {\n        width: NODE_WIDTH * 0.75,\n        height: NODE_HEIGHT * 0.75,\n        visible: true,\n        shape: NodeShape.circle,\n        style: {\n          padding: NODE_PADDING,\n        },\n      };\n    default:\n      return WorkloadModelProps;\n  }\n};\n\n/**\n * returns if event source is enabled or not\n * @param Flags\n */\nexport const getEventSourceStatus = ({ FLAGS }: RootState): boolean =>\n  FLAGS.get(FLAG_KNATIVE_EVENTING);\n\n/**\n * fetch the parent resource from a resource\n * @param resource\n * @param resources\n */\nexport const getParentResource = (\n  resource: K8sResourceKind,\n  resources: K8sResourceKind[],\n): K8sResourceKind => {\n  const parentUids = _.map(\n    _.get(resource, ['metadata', 'ownerReferences'], []),\n    (owner) => owner.uid,\n  );\n  const [resourcesParent] = _.filter(resources, ({ metadata: { uid } }) =>\n    parentUids.includes(uid),\n  );\n  return resourcesParent;\n};\n\n/**\n * Filters revision based on active application\n * @param revisions\n * @param resources\n * @param application\n */\nexport const filterRevisionsByActiveApplication = (\n  revisions: K8sResourceKind[],\n  resources: TopologyDataResources,\n  application: string,\n) => {\n  const filteredRevisions = [];\n  _.forEach(revisions, (revision) => {\n    const configuration = getParentResource(revision, resources.configurations.data);\n    const service = getParentResource(configuration, resources.ksservices.data);\n    const hasTraffic =\n      service &&\n      service.status &&\n      _.find(service.status.traffic, { revisionName: revision.metadata.name });\n    const isServicePartofGroup = filterBasedOnActiveApplication([service], application).length > 0;\n    if (hasTraffic && isServicePartofGroup) {\n      filteredRevisions.push(revision);\n    }\n  });\n  return filteredRevisions;\n};\nexport const isInternalResource = (resource: K8sResourceKind): boolean => {\n  return resource.kind !== EventingBrokerModel.kind && !!resource.metadata?.ownerReferences;\n};\n\nconst isSubscriber = (\n  resource: K8sResourceKind,\n  relatedResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const subscriberRef = relatedResource?.spec?.subscriber?.ref;\n  // check for channel reference as channel with different kind can have same name\n  const channelRef = relatedResource?.spec?.channel;\n  if (\n    channelRef &&\n    (mainResource.metadata.name !== channelRef.name ||\n      mainResource.kind !== channelRef.kind ||\n      mainResource.apiVersion !== channelRef.apiVersion)\n  ) {\n    return false;\n  }\n  return (\n    subscriberRef &&\n    apiVersionForReference(referenceFor(resource)) === subscriberRef.apiVersion &&\n    resource.metadata.name === subscriberRef.name\n  );\n};\n\nconst isPublisher = (\n  relatedResource: K8sResourceKind,\n  relationshipResource: K8sResourceKind,\n  mainResource: K8sResourceKind,\n): boolean => {\n  const { name, kind, apiVersion } = relationshipResource.spec?.subscriber?.ref || {};\n  if (\n    mainResource.metadata.name !== name ||\n    mainResource.kind !== kind ||\n    mainResource.apiVersion !== apiVersion\n  ) {\n    return false;\n  }\n  if (relationshipResource.kind === EventingTriggerModel.kind) {\n    return relationshipResource.spec?.broker === relatedResource.metadata.name;\n  }\n  const channel = relationshipResource.spec?.channel;\n  return (\n    channel &&\n    channel.name === relatedResource.metadata.name &&\n    channel.kind === relatedResource.kind &&\n    channel.apiVersion === relatedResource.apiVersion\n  );\n};\n\nexport const getTriggerFilters = (resource: K8sResourceKind) => {\n  const data = {\n    filters: [],\n  };\n  const attributes = resource?.spec?.filter?.attributes;\n  if (attributes && !_.isEmpty(attributes)) {\n    for (const [key, value] of Object.entries(attributes)) {\n      data.filters.push({ key, value });\n    }\n  }\n  return data;\n};\n\nexport const getKnativeDynamicResources = (\n  resources: TopologyDataResources,\n  dynamicProps: string[],\n): K8sResourceKind[] => {\n  return dynamicProps.reduce((acc, currProp) => {\n    const currPropResource = resources[currProp]?.data ?? [];\n    return [...acc, ...currPropResource];\n  }, []);\n};\n\nexport const getSubscribedEventsources = (\n  pubSubResource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const sinkRes = evSrc?.spec?.sink?.ref || {};\n      if (\n        pubSubResource.kind === sinkRes.kind &&\n        pubSubResource.metadata.name === sinkRes.name &&\n        pubSubResource.apiVersion === sinkRes.apiVersion\n      ) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\n/**\n * Get the subscribers for broker, channels and knative service\n * @param resource\n * @param resources\n */\nexport const getPubSubSubscribers = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): Subscriber[] | [] => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n\n  const relationShipMap = {\n    Broker: [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'triggers',\n        isRelatedResource: isSubscriber,\n      },\n    ],\n    Service: [\n      {\n        relatedResource: 'brokers',\n        relationshipResource: 'triggers',\n        isRelatedResource: isPublisher,\n      },\n    ],\n  };\n  _.forEach(channelResourceProps, (channel) => {\n    relationShipMap.Service.push({\n      relatedResource: channel,\n      relationshipResource: 'eventingsubscription',\n      isRelatedResource: isPublisher,\n    });\n    relationShipMap[channel] = [\n      {\n        relatedResource: 'ksservices',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'services',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n      {\n        relatedResource: 'kafkasinks',\n        relationshipResource: 'eventingsubscription',\n        isRelatedResource: isSubscriber,\n      },\n    ];\n  });\n\n  let subscribers = [];\n  if (relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)]) {\n    const depicters = relationShipMap[resource.kind] || relationShipMap[referenceFor(resource)];\n    _.forEach(depicters, (depicter) => {\n      const { relatedResource, relationshipResource, isRelatedResource } = depicter;\n      if (resources[relatedResource] && resources[relatedResource].data?.length > 0) {\n        subscribers = subscribers.concat(\n          _.reduce(\n            resources[relatedResource].data,\n            (acc, relRes) => {\n              if (\n                (referenceFor(relRes) !== referenceFor(ServiceModel) &&\n                  isInternalResource(relRes)) ||\n                !isRelatedResource\n              ) {\n                return acc;\n              }\n              const relationshipResources = (resources[relationshipResource].data || []).filter(\n                (relationshipRes) => {\n                  return isRelatedResource(relRes, relationshipRes, resource);\n                },\n              );\n              const relationShipData = relationshipResources.map((res) => {\n                return {\n                  kind: referenceFor(res),\n                  name: res.metadata.name,\n                  namespace: res.metadata.namespace,\n                  ...getTriggerFilters(res),\n                };\n              });\n              if (relationShipData.length > 0) {\n                const obj = {\n                  kind: referenceFor(relRes),\n                  name: relRes.metadata.name,\n                  namespace: relRes.metadata.namespace,\n                  data: relationShipData,\n                };\n                acc.push(obj);\n              }\n              return acc;\n            },\n            [],\n          ),\n        );\n      }\n    });\n  }\n  return subscribers;\n};\n/**\n * partition and return the array of channels and brokers\n * @param subscribers\n */\nexport const getSubscriberByType = (\n  subscribers: Subscriber[] = [],\n): [Subscriber[], Subscriber[]] => {\n  if (subscribers.length === 0) {\n    return [[], []];\n  }\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.partition(subscribers, (sub) => channelResourceProps.includes(sub.kind));\n};\n/**\n * return the dynamic channel reference\n * @param kind\n */\nconst getChannelRef = (kind: string): string => {\n  const channelResourceProps = getDynamicChannelModelRefs();\n  return _.find(channelResourceProps, (channel) => {\n    return kind === kindForReference(channel);\n  });\n};\n\n/**\n * Get the knative service subscriptions\n * @param ksvc Knative Service\n * @param resources\n */\nexport const getSubscribedPubSubNodes = (\n  ksvc: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  const pubsubConnectors = ['triggers', 'eventingsubscription'];\n  const pubsubNodes: PubsubNodes = { channels: [], brokers: [] };\n  pubsubConnectors.forEach((connector: string) => {\n    if (resources[connector] && resources[connector].data.length > 0) {\n      const pubsubConnectorResources = resources[connector].data;\n      _.map(pubsubConnectorResources, (connectorRes) => {\n        if (!isInternalResource(connectorRes)) {\n          const subscriber = connectorRes.spec?.subscriber?.ref;\n          if (subscriber) {\n            const subscribedService =\n              ksvc.kind === subscriber.kind && ksvc.metadata.name === subscriber.name;\n            if (subscribedService && connectorRes.kind === EventingTriggerModel.kind) {\n              const broker = connectorRes.spec?.broker;\n              if (!pubsubNodes.brokers.includes(broker)) {\n                pubsubNodes.brokers.push(broker);\n              }\n            } else if (subscribedService) {\n              const channel = connectorRes.spec?.channel;\n              const { apiVersion, name, kind } = channel || {};\n\n              const channelAdded = _.find(pubsubNodes.channels, {\n                apiVersion,\n                name,\n                kind,\n              });\n              if (channel && !channelAdded) {\n                pubsubNodes.channels.push(channel);\n              }\n            }\n          }\n        }\n      });\n    }\n  });\n  const eventSources = [];\n  const pushEventSource = (evsrc: K8sResourceKind) => {\n    const evsrcFound = _.find(eventSources, {\n      kind: evsrc.kind,\n      metadata: { name: evsrc.metadata.name },\n    });\n    if (!evsrcFound) {\n      eventSources.push(evsrc);\n    }\n  };\n  pubsubNodes.brokers.forEach((broker) => {\n    const eventBroker = _.find(resources.brokers.data, {\n      metadata: { name: broker },\n    });\n    const evsrcs = eventBroker ? getSubscribedEventsources(eventBroker, resources) : [];\n    evsrcs.forEach((evsrc) => {\n      pushEventSource(evsrc);\n    });\n  });\n  pubsubNodes.channels.forEach((channel) => {\n    const channelKind = getChannelRef(channel.kind);\n    const channelResources = resources[channelKind];\n    if (channelResources) {\n      const eventingChannel = _.find(channelResources.data, {\n        metadata: { name: channel.name },\n        kind: channel.kind,\n      });\n      const evsrcs = eventingChannel ? getSubscribedEventsources(eventingChannel, resources) : [];\n      evsrcs.forEach((evsrc) => {\n        pushEventSource(evsrc);\n      });\n    }\n  });\n\n  getSubscribedEventsources(ksvc, resources).forEach((evsrc) => {\n    pushEventSource(evsrc);\n  });\n  return eventSources;\n};\n\nexport const getKnativeRevisionsData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions =\n    configurations && configurations.length\n      ? getOwnedResources(configurations[0], resources.revisions?.data)\n      : [];\n  return revisions;\n};\n\n/**\n * Forms data with respective revisions, configurations, routes based on kntaive service\n */\nexport const getKnativeServiceData = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeItem => {\n  const configurations = getOwnedResources(resource, resources.configurations?.data);\n  const revisions = getKnativeRevisionsData(resource, resources);\n  const ksroutes = resources.ksroutes\n    ? getOwnedResources(resource, resources.ksroutes?.data)\n    : undefined;\n  const eventSources = getSubscribedPubSubNodes(resource, resources);\n  const overviewItem: KnativeItem = {\n    revisions,\n    configurations,\n    ksroutes,\n    eventSources,\n  };\n  if (utils) {\n    return utils.reduce((acc, util) => {\n      return { ...acc, ...util(resource, resources) };\n    }, overviewItem);\n  }\n  return overviewItem;\n};\n\nexport const getDeploymentsForKamelet = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): K8sResourceKind[] => {\n  if (\n    [EVENT_SOURCE_CAMEL_KIND, CamelKameletBindingModel.kind].includes(resource.kind) &&\n    resources.integrations\n  ) {\n    const integrationsOwnData = getOwnedResources(resource, resources.integrations.data);\n    const associatedDeployment =\n      integrationsOwnData?.length > 0\n        ? getOwnedResources(integrationsOwnData[0], resources.deployments?.data)\n        : [];\n    return associatedDeployment;\n  }\n  return [];\n};\n\n/**\n * Rollup data for deployments for revisions, event sources, event sinks\n */\nexport const createKnativeDeploymentItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): KnativeServiceOverviewItem => {\n  let associatedDeployment = getOwnedResources(resource, resources.deployments.data);\n  associatedDeployment = [\n    ...associatedDeployment,\n    ...getDeploymentsForKamelet(resource, resources),\n  ];\n  if (!_.isEmpty(associatedDeployment)) {\n    const depObj: K8sResourceKind = {\n      ...associatedDeployment[0],\n      apiVersion: apiVersionForModel(DeploymentModel),\n      kind: DeploymentModel.kind,\n    };\n    const overviewItems: KnativeServiceOverviewItem = {\n      obj: resource,\n      associatedDeployment: depObj,\n    };\n\n    if (utils) {\n      return utils.reduce((acc, util) => {\n        return { ...acc, ...util(resource, resources) };\n      }, overviewItems);\n    }\n\n    return overviewItems;\n  }\n  const subscribers = getPubSubSubscribers(resource, resources);\n  const knResources = getKnativeServiceData(resource, resources, utils);\n  return {\n    obj: resource,\n    subscribers,\n    ...knResources,\n  };\n};\n\nexport const createPubSubDataItems = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n): KnativeServiceOverviewItem => {\n  const {\n    kind: resKind,\n    metadata: { name },\n    spec,\n  } = resource;\n  const channelProps = getDynamicChannelModelRefs();\n  const depChannelResources = getOwnedResources(\n    resource,\n    getKnativeDynamicResources(resources, channelProps),\n  );\n  const subscriptionData = resources?.eventingsubscription?.data ?? [];\n  const triggerList = resources?.triggers?.data ?? [];\n  let triggersData = {};\n  const eventSources = getSubscribedEventsources(resource, resources);\n  const channelSubsData = _.reduce(\n    subscriptionData,\n    (acc, subs) => {\n      const subUid = _.get(subs, 'metadata.uid');\n      const subscribers = spec?.subscribable?.subscribers || spec?.subscribers;\n      const isSubscribableData = _.findIndex(subscribers, function ({ uid }) {\n        return uid === subUid;\n      });\n      if (isSubscribableData !== -1) {\n        acc.eventingsubscription.push(subs);\n        const subscriptionSvc = _.get(subs, 'spec.subscriber.ref', null);\n        _.forEach(resources?.ksservices?.data, (svc) => {\n          if (svc.kind === subscriptionSvc?.kind && svc.metadata.name === subscriptionSvc?.name) {\n            acc.ksservices.push(svc);\n          }\n        });\n      }\n      return acc;\n    },\n    { eventingsubscription: [], ksservices: [] },\n  );\n\n  if (resKind === EventingBrokerModel.kind) {\n    triggersData = _.reduce(\n      triggerList,\n      (tData, trigger) => {\n        const brokerName = trigger?.spec?.broker;\n        const knService = _.find(resources?.ksservices?.data, {\n          metadata: { name: trigger?.spec?.subscriber?.ref?.name },\n          kind: trigger?.spec?.subscriber?.ref?.kind,\n          apiVersion: trigger?.spec?.subscriber?.ref?.apiVersion,\n        });\n        const knServiceAdded =\n          knService &&\n          tData.ksservices?.filter((ksvc) => ksvc.metadata.name === knService.metadata.name)\n            .length > 0;\n        if (name === brokerName) {\n          tData.triggers = [...tData.triggers, trigger];\n          tData.ksservices =\n            knService && !knServiceAdded ? [...tData.ksservices, knService] : tData.ksservices;\n        }\n\n        return tData;\n      },\n      { ksservices: [], triggers: [], pods: [], deployments: [] },\n    );\n    [PodModel, DeploymentModel].forEach(({ kind, plural: resType }) => {\n      triggersData[resType] = resources?.[resType]?.data\n        .filter((resourceObject) => {\n          return resourceObject?.metadata?.labels?.['eventing.knative.dev/broker'] === name;\n        })\n        .map((obj) => ({ ...obj, ...{ kind } }));\n    });\n  }\n\n  return {\n    obj: resource,\n    ...(depChannelResources && { channels: depChannelResources }),\n    eventSources,\n    ...channelSubsData,\n    ...triggersData,\n    subscribers: getPubSubSubscribers(resource, resources),\n  };\n};\n\n/**\n * only get revision which are included in traffic data\n */\nexport const filterRevisionsBaseOnTrafficStatus = (\n  resource: K8sResourceKind,\n  revisions: K8sResourceKind[],\n): K8sResourceKind[] => {\n  if (!_.get(resource, 'status.traffic', null)) return undefined;\n  return resource.status.traffic.reduce((acc, curr) => {\n    const el = revisions.find((rev) => curr.revisionName === rev.metadata.name);\n    return el ? [...acc, el] : acc;\n  }, []);\n};\n\n/**\n * Form Node data for revisions/event/service sources\n */\nexport const getKnativeTopologyNodeItems = (\n  resource: K8sResourceKind,\n  type: string,\n  data: TopologyDataObject,\n  resources?: TopologyDataResources,\n): NodeModel[] => {\n  const nodes = [];\n  const children: string[] = [];\n  if (type === NodeType.KnService && resources && resources.configurations) {\n    const configurations = getOwnedResources(resource, resources.configurations.data);\n    const configUidData = _.get(configurations[0], ['metadata', 'uid']);\n    const ChildData = _.filter(resources.revisions.data, {\n      metadata: {\n        ownerReferences: [{ uid: configUidData }],\n      },\n    });\n    _.forEach(filterRevisionsBaseOnTrafficStatus(resource, ChildData), (c) => {\n      const uidRev = c.metadata.uid;\n      children.push(uidRev);\n      nodes.push(\n        getTopologyNodeItem(c, NodeType.Revision, null, getKnNodeModelProps(NodeType.Revision)),\n      );\n    });\n  }\n  nodes.push(getTopologyNodeItem(resource, type, data, getKnNodeModelProps(type), children));\n  return nodes;\n};\n\nexport const getSinkUriTopologyNodeItems = (\n  type: string,\n  id: string,\n  data: TopologyDataObject,\n): NodeModel[] => {\n  const nodes = [];\n  const nodeProps = getKnNodeModelProps(type);\n  nodes.push({\n    id,\n    type,\n    resource: data.resource,\n    resourceKind: 'URI',\n    data,\n    ...(nodeProps || {}),\n  });\n  return nodes;\n};\n\nexport const getSinkUriTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  targetUid: string,\n): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkUri = resource?.spec?.sink?.uri;\n  const edges = [];\n  if (sinkUri && uid) {\n    edges.push({\n      id: `${uid}_${targetUid}`,\n      type: EdgeType.EventSource,\n      label: i18next.t('knative-plugin~Event source connector'),\n      source: uid,\n      target: targetUid,\n    });\n  }\n  return edges;\n};\n\nconst getSinkTargetUid = (nodeData: NodeModel[], sinkUri: string) => {\n  const sinkNodeData = _.find(nodeData, ({ data: nodeResData }) => {\n    return sinkUri === nodeResData?.data?.sinkUri;\n  });\n\n  return sinkNodeData?.id ?? '';\n};\n\nconst getEventSourcesData = (sinkUri: string, resources) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  return _.reduce(\n    getKnativeDynamicResources(resources, eventSourceProps),\n    (acc, evSrc) => {\n      const evSrcSinkUri = evSrc.spec?.sink?.uri || '';\n      if (sinkUri === evSrcSinkUri) {\n        acc.push(evSrc);\n      }\n      return acc;\n    },\n    [],\n  );\n};\n\nconst getApiGroup = (apiVersion: string) => groupVersionFor(apiVersion)?.group;\n\nexport const getEventSinkTopologyEdgeItems = (resource: K8sResourceKind, resources) => {\n  const targetUid = resource?.metadata?.uid;\n  const source = resource?.spec?.source?.ref;\n  if (!targetUid || !source) return [];\n  let sinkSource;\n  const targetRef = referenceFor(source);\n  if (source?.kind === EventingBrokerModel.kind) {\n    sinkSource = resources.brokers.data.find((broker) => broker.metadata.name === source.name);\n  } else {\n    sinkSource = resources[targetRef]?.data?.find((res) => res.metadata.name === source.name);\n  }\n\n  if (sinkSource) {\n    return [\n      {\n        id: `${sinkSource.metadata.uid}_${targetUid}`,\n        type: EdgeType.EventSink,\n        label: i18next.t('knative-plugin~Event sink connector'),\n        target: targetUid,\n        source: sinkSource.metadata.uid,\n      },\n    ];\n  }\n  return [];\n};\n\n/**\n * Form Edge data for event sources\n */\nexport const getEventTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = resource?.metadata?.uid;\n  const sinkTarget = _.get(resource, 'spec.sink.ref', null) || _.get(resource, 'spec.sink', null);\n  const edges = [];\n  if (sinkTarget) {\n    _.forEach(data, (res) => {\n      const {\n        apiVersion,\n        kind,\n        metadata: { uid: resUid, name: resName },\n      } = res;\n      if (\n        resName === sinkTarget.name &&\n        kind === sinkTarget.kind &&\n        getApiGroup(apiVersion) === getApiGroup(sinkTarget.apiVersion)\n      ) {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.EventSource,\n          label: i18next.t('knative-plugin~Event source connector'),\n          source: uid,\n          target: resUid,\n        });\n      }\n    });\n  }\n  return edges;\n};\n/**\n * To fetch the trigger and form the edges in the topology data model.\n * @param broker pass the eventing broker object\n * @param resources pass all the resources\n */\nexport const getTriggerTopologyEdgeItems = (broker: K8sResourceKind, resources): EdgeModel[] => {\n  const {\n    metadata: { uid, name },\n  } = broker;\n  const { triggers, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(triggers?.data, (trigger) => {\n    const brokerName = trigger?.spec?.broker;\n    const connectedResource = trigger.spec?.subscriber?.ref;\n    if (name === brokerName && possibleTargetResources.length > 0) {\n      const targetResource = _.find(possibleTargetResources as K8sResourceKind[], {\n        metadata: { name: connectedResource.name },\n      });\n      if (\n        targetResource &&\n        getApiGroup(connectedResource.apiVersion) ===\n          apiGroupForReference(referenceFor(targetResource))\n      ) {\n        const {\n          metadata: { uid: targetUid },\n        } = targetResource;\n        edges.push({\n          id: `${uid}_${targetUid}`,\n          type: EdgeType.EventPubSubLink,\n          source: uid,\n          target: targetUid,\n          data: {\n            resources: {\n              obj: trigger,\n              eventSources: getSubscribedEventsources(broker, resources),\n              brokers: [broker],\n              subscriberRes: [targetResource],\n              filters: getTriggerFilters(trigger).filters,\n            },\n          },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\nexport const getSubscriptionTopologyEdgeItems = (\n  resource: K8sResourceKind,\n  resources,\n): EdgeModel[] => {\n  const {\n    kind,\n    metadata: { uid, name },\n  } = resource;\n  const { eventingsubscription, ksservices, kafkasinks } = resources;\n  const possibleTargetResources = [\n    ...(ksservices?.data.length > 0 ? ksservices.data : []),\n    ...(kafkasinks?.data.length > 0 ? kafkasinks.data : []),\n  ];\n  const edges = [];\n  _.forEach(eventingsubscription?.data, (subRes) => {\n    const channelData = subRes?.spec?.channel;\n    if (\n      name === channelData?.name &&\n      kind === channelData?.kind &&\n      possibleTargetResources.length > 0\n    ) {\n      const svcData = subRes?.spec?.subscriber?.ref;\n      svcData &&\n        _.forEach(possibleTargetResources, (res) => {\n          const {\n            metadata: { uid: resUid, name: resName },\n          } = res;\n          if (\n            resName === svcData.name &&\n            groupVersionFor(svcData.apiVersion).group === apiGroupForReference(referenceFor(res))\n          ) {\n            edges.push({\n              id: `${uid}_${resUid}`,\n              type: EdgeType.EventPubSubLink,\n              source: uid,\n              target: resUid,\n              data: {\n                resources: {\n                  obj: subRes,\n                  eventSources: getSubscribedEventsources(resource, resources),\n                  channels: [resource],\n                  subscriberRes: [res],\n                },\n              },\n            });\n          }\n        });\n    }\n  });\n  return edges;\n};\n\nexport const getKnSourceKafkaTopologyEdgeItems = (\n  kafkaSource: K8sResourceKind,\n  kafkaConnections: WatchK8sResultsObject<K8sResourceKind[]>,\n): EdgeModel[] => {\n  if (!kafkaConnections?.data) {\n    return [];\n  }\n  const { data } = kafkaConnections;\n  const edges = data.reduce((acc, kafkaConnection) => {\n    const kcServiceAccountSecretName = kafkaConnection?.spec?.credentials?.serviceAccountSecretName;\n    const kafkaSourcePasswordSecretKeyRefName =\n      kafkaSource.spec?.net?.sasl?.password?.secretKeyRef?.name;\n    const kafkaSourceUserSecretKeyRefName = kafkaSource.spec?.net?.sasl?.user?.secretKeyRef?.name;\n    const kcBootstrapServerHost = kafkaConnection.status?.bootstrapServerHost;\n    if (\n      kcServiceAccountSecretName &&\n      kcServiceAccountSecretName === kafkaSourcePasswordSecretKeyRefName &&\n      kcServiceAccountSecretName === kafkaSourceUserSecretKeyRefName &&\n      kcBootstrapServerHost &&\n      kafkaSource.spec?.bootstrapServers.includes(kcBootstrapServerHost)\n    ) {\n      const edgeId = `${kafkaSource?.metadata?.uid}_${kafkaConnection?.metadata?.uid}`;\n      acc.push({\n        id: edgeId,\n        type: EdgeType.EventSourceKafkaLink,\n        edgeStyle: EdgeStyle.dashedMd,\n        label: i18next.t('knative-plugin~Kafka connector'),\n        source: kafkaSource.metadata?.uid,\n        target: kafkaConnection.metadata?.uid,\n      });\n    }\n    return acc;\n  }, []);\n  return edges;\n};\n\n/**\n * Form Edge data for service sources with traffic data\n */\nexport const getTrafficTopologyEdgeItems = (resource: K8sResourceKind, { data }): EdgeModel[] => {\n  const uid = _.get(resource, ['metadata', 'uid']);\n  const trafficSvc = _.get(resource, ['status', 'traffic'], []);\n  const edges = [];\n  _.forEach(trafficSvc, (res) => {\n    const resname = _.get(res, ['revisionName']);\n    const trafficPercent = _.get(res, ['percent']);\n    const revisionObj = _.find(data, (rev) => {\n      const revname = _.get(rev, ['metadata', 'name']);\n      return revname === resname;\n    });\n    const resUid = _.get(revisionObj, ['metadata', 'uid'], null);\n    if (resUid) {\n      const revisionIndex = _.findIndex(edges, (edge) => edge.id === `${uid}_${resUid}`);\n      if (revisionIndex >= 0) {\n        edges[revisionIndex].data.percent += trafficPercent;\n      } else {\n        edges.push({\n          id: `${uid}_${resUid}`,\n          type: EdgeType.Traffic,\n          label: i18next.t('knative-plugin~Traffic distribution connector'),\n          source: uid,\n          target: resUid,\n          data: { percent: trafficPercent },\n        });\n      }\n    }\n  });\n  return edges;\n};\n\n/**\n * create all data that need to be shown on a topology data for knative service\n */\nexport const createTopologyServiceNodeData = (\n  resource: K8sResourceKind,\n  svcRes: OverviewItem,\n  type: string,\n  resources: TopologyDataResources,\n): TopologyDataObject => {\n  const { obj: knativeSvc } = svcRes;\n  const uid = _.get(knativeSvc, 'metadata.uid');\n  const labels = _.get(knativeSvc, 'metadata.labels', {});\n  const annotations = _.get(knativeSvc, 'metadata.annotations', {});\n  const serviceName = _.get(knativeSvc, 'metadata.name');\n  const contextDir = getContextDirByName(resources, serviceName);\n  return {\n    id: uid,\n    name: _.get(knativeSvc, 'metadata.name') || labels['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...svcRes },\n    data: {\n      url: knativeSvc.status?.url || '',\n      kind: referenceFor(knativeSvc),\n      editURL: annotations['app.openshift.io/edit-url'],\n      vcsURI: annotations['app.openshift.io/vcs-uri'],\n      vcsRef: annotations['app.openshift.io/vcs-ref'],\n      isKnativeResource: true,\n      contextDir,\n    },\n  };\n};\n\nexport const createTopologyPubSubNodeData = (\n  resource: K8sResourceKind,\n  res: OverviewItem,\n  type: string,\n): TopologyDataObject => {\n  const {\n    obj: {\n      metadata: { name, uid, labels },\n    },\n  } = res;\n  return {\n    id: uid,\n    name: name || labels?.['app.kubernetes.io/instance'],\n    type,\n    resource,\n    resources: { ...res },\n    data: {\n      kind: referenceFor(res.obj),\n      isKnativeResource: true,\n    },\n  };\n};\n\n/**\n * Get the route URL for the matching revision name\n */\nexport const getRoutesURL = (resource: K8sResourceKind, ksroutes: K8sResourceKind[]): string => {\n  if (ksroutes && ksroutes.length > 0 && !_.isEmpty(ksroutes[0].status)) {\n    const trafficData: { [x: string]: any } = _.find(ksroutes[0].status.traffic, {\n      revisionName: resource.metadata.name,\n    });\n    return trafficData?.url;\n  }\n  return null;\n};\n\nconst getOwnedEventSourceData = (\n  resource: K8sResourceKind,\n  data: TopologyDataObject,\n  resources,\n) => {\n  const eventSourceProps = [...getDynamicEventSourcesModelRefs(), CamelKameletBindingModel.plural];\n  const eventSourcesData = getKnativeDynamicResources(resources, eventSourceProps);\n  let ownedSourceData = getOwnedResources(resource, eventSourcesData);\n  if (resource.kind === CamelKameletBindingModel.kind && resources.integrations?.data?.length > 0) {\n    const ownedIntegrationData = getOwnedResources(resource, resources.integrations.data);\n    ownedSourceData = ownedIntegrationData?.reduce((acc, res) => {\n      const ownRes = getOwnedResources(res, eventSourcesData);\n      return [...acc, ...ownRes];\n    }, []);\n  }\n  return {\n    ...data,\n    resources: { ...data.resources, eventSources: ownedSourceData },\n  };\n};\n\nconst getOwnedEventSinkData = (resource: K8sResourceKind, data: TopologyDataObject, resources) => {\n  const ownedIntegrationData = getOwnedResources(resource, resources.integrations?.data);\n  const ownedServiceData = getOwnedResources(ownedIntegrationData[0], resources.ksservices?.data);\n  const ownedDeploymentData = getOwnedResources(\n    ownedIntegrationData[0],\n    resources.deployments?.data,\n  );\n  let knServiceData = {};\n  if (ownedServiceData.length > 0) {\n    knServiceData = getKnativeServiceData(ownedServiceData[0], resources);\n  }\n  return {\n    ...data,\n    resources: {\n      ...data.resources,\n      integrations: ownedIntegrationData,\n      services: ownedServiceData,\n      deployments: ownedDeploymentData,\n      ...knServiceData,\n    },\n  };\n};\n\nconst sinkURIDataModel = (\n  resource: K8sResourceKind,\n  resources: TopologyDataResources,\n  data: TopologyDataObject,\n  knDataModel: Model,\n) => {\n  // form node data for sink uri\n  const sinkUri = resource.spec?.sink?.uri;\n  let sinkTargetUid = getSinkTargetUid(knDataModel.nodes, sinkUri);\n  if (sinkUri) {\n    if (!sinkTargetUid) {\n      sinkTargetUid = encodeURIComponent(sinkUri);\n      const eventSourcesData = getEventSourcesData(sinkUri, resources);\n      const sinkUriObj = {\n        metadata: {\n          uid: sinkTargetUid,\n          namespace: data.resources.obj.metadata.namespace || '',\n        },\n        spec: { sinkUri },\n        kind: URI_KIND,\n      };\n      const sinkData: KnativeTopologyDataObject<KnativeServiceOverviewItem> = {\n        id: sinkTargetUid,\n        name: 'URI',\n        type: NodeType.SinkUri,\n        resources: { ...data.resources, obj: sinkUriObj, eventSources: eventSourcesData },\n        data: { ...data.data, sinkUri },\n        resource: sinkUriObj,\n      };\n      knDataModel.nodes.push(\n        ...getSinkUriTopologyNodeItems(NodeType.SinkUri, sinkTargetUid, sinkData),\n      );\n    }\n    knDataModel.edges.push(...getSinkUriTopologyEdgeItems(resource, sinkTargetUid));\n  }\n  // form connections for channels\n  if (!isInternalResource(resource)) {\n    const channelResourceProps = getDynamicChannelModelRefs();\n    _.forEach(channelResourceProps, (currentProp) => {\n      resources[currentProp] &&\n        knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources[currentProp]));\n    });\n  }\n  knDataModel.edges.push(...getEventTopologyEdgeItems(resource, resources.brokers));\n};\n\nexport const createEventSinkTopologyNodeData = (\n  resource: K8sResourceKind,\n  overviewItem: OverviewItem,\n  type: string,\n  operatorBackedService: boolean = false,\n): TopologyDataObject => {\n  const dcUID = _.get(resource, 'metadata.uid');\n  return {\n    id: dcUID,\n    name: resource?.metadata.name,\n    type,\n    resource,\n    resources: { ...overviewItem, isOperatorBackedService: operatorBackedService },\n    data: {\n      kind: referenceFor(resource),\n      isKnativeResource: type === NodeType.EventSink,\n      kameletType: KameletType.Sink,\n    },\n  };\n};\n\nexport const transformKnNodeData = (\n  knResourcesData: K8sResourceKind[],\n  type: string,\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): Model => {\n  const knDataModel: Model = { nodes: [], edges: [] };\n  _.forEach(knResourcesData, (res) => {\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    switch (type) {\n      case NodeType.KafkaSink:\n      case NodeType.EventSink: {\n        const data = createEventSinkTopologyNodeData(res, item, type);\n        const itemData = getOwnedEventSinkData(res, data, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n        knDataModel.edges.push(...getEventSinkTopologyEdgeItems(res, resources));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.EventSource: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        if (referenceFor(res) === referenceForModel(CamelKameletBindingModel)) {\n          data.data = {\n            ...data.data,\n            kameletType: KameletType.Source,\n          };\n        }\n        if (!(res.kind === EVENT_SOURCE_SINK_BINDING_KIND && res.metadata?.ownerReferences)) {\n          const itemData = getOwnedEventSourceData(res, data, resources);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, itemData, resources));\n          knDataModel.edges.push(\n            ...(resources.ksservices ? getEventTopologyEdgeItems(res, resources.ksservices) : []),\n            ...(resources.kafkasinks ? getEventTopologyEdgeItems(res, resources.kafkasinks) : []),\n          );\n          sinkURIDataModel(res, resources, data, knDataModel);\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.KnService: {\n        const data = createTopologyServiceNodeData(res, item, type, resources);\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(...getTrafficTopologyEdgeItems(res, resources.revisions));\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      case NodeType.PubSub: {\n        if (!isInternalResource(res)) {\n          const itemData = createPubSubDataItems(res, resources);\n          const data = createTopologyPubSubNodeData(res, itemData, type);\n          knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n          if (res.kind === EventingBrokerModel.kind) {\n            knDataModel.edges.push(...getTriggerTopologyEdgeItems(res, resources));\n          } else {\n            knDataModel.edges.push(...getSubscriptionTopologyEdgeItems(res, resources));\n          }\n          const newGroup = getTopologyGroupItems(res);\n          mergeGroup(newGroup, knDataModel.nodes);\n        }\n        break;\n      }\n      case NodeType.EventSourceKafka: {\n        const data = createTopologyNodeData(\n          res,\n          item,\n          type,\n          getImageForIconClass(`icon-openshift`),\n        );\n        knDataModel.nodes.push(...getKnativeTopologyNodeItems(res, type, data, resources));\n        knDataModel.edges.push(\n          ...getKnSourceKafkaTopologyEdgeItems(res, resources.kafkaConnections),\n          ...getEventTopologyEdgeItems(res, resources.ksservices),\n          ...getEventTopologyEdgeItems(res, resources.kafkasinks),\n        );\n        sinkURIDataModel(res, resources, data, knDataModel);\n        const newGroup = getTopologyGroupItems(res);\n        mergeGroup(newGroup, knDataModel.nodes);\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return knDataModel;\n};\n\nexport interface RevisionDataMap {\n  [id: string]: TopologyDataObject;\n}\n\nexport const getRevisionsData = (\n  knResourcesData: K8sResourceKind[],\n  resources: TopologyDataResources,\n  utils?: KnativeUtil[],\n): RevisionDataMap => {\n  const revisionData = {};\n\n  _.forEach(knResourcesData, (res) => {\n    const { uid } = res.metadata;\n    const item = createKnativeDeploymentItems(res, resources, utils);\n    revisionData[uid] = createTopologyNodeData(\n      res,\n      item,\n      NodeType.Revision,\n      getImageForIconClass(`icon-openshift`),\n    );\n  });\n\n  return revisionData;\n};\n\nexport const createKnativeEventSourceSink = (\n  source: K8sResourceKind,\n  target: K8sResourceKind,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const eventSourceObj = _.omit(source, 'status');\n  let sink = {};\n  if (target.kind === URI_KIND) {\n    sink = {\n      uri: target?.spec?.sinkUri,\n    };\n  } else {\n    const targetName = _.get(target, 'metadata.name');\n    sink = {\n      ref: {\n        apiVersion: target.apiVersion,\n        kind: target.kind,\n        name: targetName,\n      },\n    };\n  }\n  const updatePayload = {\n    ...eventSourceObj,\n    spec: { ...eventSourceObj.spec, sink },\n  };\n  return k8sUpdate(modelFor(referenceFor(source)), updatePayload);\n};\n\nexport const isOperatorBackedKnResource = (\n  obj: K8sResourceKind,\n  resources: TopologyDataResources,\n) => {\n  const eventSourceProps = getDynamicEventSourcesModelRefs();\n  return !!_.find(getKnativeDynamicResources(resources, eventSourceProps), (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const getKameletSinkAndSourceBindings = (resources) => {\n  const camelKameletBindingResources: K8sResourceKind[] = resources?.kameletbindings?.data ?? [];\n  const camelKameletResources: K8sResourceKind[] =\n    resources?.kamelets?.data?.length > 0\n      ? resources.kamelets.data\n      : resources?.kameletGlobalNS?.data ?? [];\n  const sinkCamelKameletResources: K8sResourceKind[] = camelKameletResources.filter(\n    (camelKamelet) => camelKamelet.metadata.labels['camel.apache.org/kamelet.type'] === 'sink',\n  );\n  return camelKameletBindingResources.reduce(\n    ({ camelSinkKameletBindings: sink, camelSourceKameletBindings: source }, binding) => {\n      const sinkResource = binding?.spec?.sink?.ref?.name;\n      sinkCamelKameletResources.findIndex(\n        (kameletSink) => kameletSink.metadata.name === sinkResource,\n      ) > -1\n        ? sink.push(binding)\n        : source.push(binding);\n      return { camelSinkKameletBindings: sink, camelSourceKameletBindings: source };\n    },\n    { camelSinkKameletBindings: [], camelSourceKameletBindings: [] },\n  );\n};\n\nexport const isOperatorBackedKnSinkService = (\n  obj: K8sResourceKind,\n  knEventSinks: K8sResourceKind[],\n) => {\n  return !!_.find(knEventSinks, (evsrc) =>\n    obj.metadata?.labels?.[CAMEL_SOURCE_INTEGRATION]?.startsWith(evsrc.metadata.name),\n  );\n};\n\nexport const createSinkConnection = (source: Node, target: Node): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n\n  return createKnativeEventSourceSink(sourceObj, targetObj);\n};\n\nexport const createEventingPubSubSink = (subObj: K8sResourceKind, target: K8sResourceKind) => {\n  if (!subObj || !target) {\n    return Promise.reject();\n  }\n  const subscriptionObj = _.omit(subObj, 'status');\n  const sink = {\n    ref: {\n      apiVersion: target.apiVersion,\n      kind: target.kind,\n      name: target.metadata?.name,\n    },\n  };\n  const updatePayload = {\n    ...subscriptionObj,\n    spec: { ...subscriptionObj.spec, subscriber: { ...sink } },\n  };\n\n  return k8sUpdate(modelFor(referenceFor(subscriptionObj)), updatePayload);\n};\n\nexport const createEventSourceKafkaConnection = (\n  source: Node,\n  target: Node,\n): Promise<K8sResourceKind> => {\n  if (!source || !target || source === target) {\n    return Promise.reject();\n  }\n  const sourceObj = getResource(source);\n  const targetObj = getResource(target);\n  const mkcBoostrapServer = targetObj?.status?.bootstrapServerHost;\n  const mkcServiceAccountSecretName = targetObj?.spec?.credentials?.serviceAccountSecretName;\n  const knKafkaSourceObj = _.omit(sourceObj, 'status');\n\n  if (!mkcBoostrapServer || !mkcServiceAccountSecretName) {\n    return Promise.reject(\n      new Error(\n        i18next.t(\n          'knative-plugin~Unable to create kafka connector as bootstrapServerHost or secret is not available in target resource.',\n        ),\n      ),\n    );\n  }\n\n  const updatedObjPayload = {\n    ...knKafkaSourceObj,\n    spec: {\n      ...knKafkaSourceObj.spec,\n      bootstrapServers: [mkcBoostrapServer],\n      net: {\n        sasl: {\n          enable: true,\n          user: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-id' } },\n          password: { secretKeyRef: { name: mkcServiceAccountSecretName, key: 'client-secret' } },\n        },\n        tls: { enable: true },\n      },\n    },\n  };\n  return k8sUpdate(modelFor(referenceFor(knKafkaSourceObj)), updatedObjPayload);\n};\n\nexport const createSinkPubSubConnection = (\n  connector: Edge,\n  targetNode: Node,\n): Promise<K8sResourceKind> => {\n  const { resources } = connector.getData();\n  const target = targetNode.getData();\n  if (!target || !resources?.obj) {\n    return Promise.reject();\n  }\n  const targetObj = getTopologyResourceObject(target);\n  return createEventingPubSubSink(resources.obj, targetObj);\n};\n\nexport const isServerlessFunction = (element: K8sResourceKind): boolean => {\n  if (!element) {\n    return false;\n  }\n  const {\n    metadata: { labels },\n  } = element;\n\n  // TODO: remove check for the deprecated label for serverless function\n  return !!(labels?.[SERVERLESS_FUNCTION_LABEL] || labels?.[SERVERLESS_FUNCTION_LABEL_DEPRECATED]);\n};\n","import { K8sResourceKind } from '@console/internal/module/k8s';\nimport { OverviewItem, PodControllerOverviewItem } from '@console/shared/src';\nimport { TopologyDataObject } from '@console/topology/src/topology-types';\nimport { KnativeItem } from '../utils/get-knative-resources';\n\nexport enum NodeType {\n  EventSource = 'event-source',\n  EventSink = 'event-sink',\n  KnService = 'knative-service',\n  Revision = 'knative-revision',\n  PubSub = 'event-pubsub',\n  SinkUri = 'sink-uri',\n  EventSourceKafka = 'event-source-kafka',\n  Kafka = 'knative-kafka',\n  KafkaSink = 'kafka-sink',\n}\n\nexport enum EdgeType {\n  Traffic = 'revision-traffic',\n  EventSource = 'event-source-link',\n  EventSink = 'event-sink-link',\n  EventPubSubLink = 'event-pubsub-link',\n  EventSourceKafkaLink = 'event-source-kafka-link',\n}\n\nexport enum KameletType {\n  Sink = 'Sink',\n  Source = 'Source',\n}\n\nexport type RevK8sResourceKind = K8sResourceKind & {\n  resources?: { [key: string]: any };\n};\n\nexport type Subscriber = {\n  kind: string;\n  name: string;\n  namespace: string;\n  data: {\n    kind: string;\n    name: string;\n    namespace: string;\n    filters: { key: string; value: string }[];\n  }[];\n};\n\nexport type PubsubNodes = {\n  channels: {\n    apiVersion: string;\n    name: string;\n    kind: string;\n  }[];\n  brokers: string[];\n};\n\nexport type KnativeServiceOverviewItem = OverviewItem &\n  KnativeItem & {\n    subscribers?: Subscriber[];\n    current?: PodControllerOverviewItem;\n    previous?: PodControllerOverviewItem;\n    isRollingOut?: boolean;\n  };\n\nexport interface KnativeTopologyDataObject<O extends OverviewItem, D = {}>\n  extends TopologyDataObject<D> {\n  resources: O;\n}\n\nexport type KnativeUtil = (dc: K8sResourceKind, props) => KnativeItem | undefined;\n","import { FirehoseResource } from '@console/internal/components/utils';\nimport { K8sResourceKind, Patch } from '@console/internal/module/k8s';\nimport { Traffic } from '../types';\nimport {\n  knativeServingResourcesRevision,\n  knativeServingResourcesConfigurations,\n} from './get-knative-resources';\n\nexport type RevisionItems = { [name: string]: string };\n\nexport const getRevisionItems = (revisions: K8sResourceKind[]): RevisionItems => {\n  if (!revisions) return {} as RevisionItems;\n\n  return revisions.reduce((acc, currValue) => {\n    acc[currValue.metadata.name] = currValue.metadata.name;\n    return acc;\n  }, {} as RevisionItems);\n};\n\nexport const trafficDataForPatch = (traffic: Traffic[], service: K8sResourceKind): Patch[] => [\n  {\n    op: service.spec?.traffic ? 'replace' : 'add',\n    path: '/spec/traffic',\n    value: traffic,\n  },\n];\n\nexport const knativeServingResourcesTrafficSplitting = (namespace: string): FirehoseResource[] => [\n  ...knativeServingResourcesRevision(namespace),\n  ...knativeServingResourcesConfigurations(namespace),\n];\n","import * as React from 'react';\nimport { TextInputTypes } from '@patternfly/react-core';\nimport { FormikProps, FormikValues } from 'formik';\nimport { pickBy, size } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { MultiColumnField, InputField } from '@console/shared';\nimport { RevisionItems } from '../../utils/traffic-splitting-utils';\nimport TrafficModalRevisionsDropdownField from './TrafficModalRevisionsDropdownField';\n\ninterface TrafficSplittingFieldProps {\n  revisionItems: RevisionItems;\n}\n\ntype Props = FormikProps<FormikValues> & TrafficSplittingFieldProps;\n\nconst TrafficSplittingFields: React.FC<Props> = ({ revisionItems, values }) => {\n  const { t } = useTranslation();\n  const selectedRevisions: string[] = values.trafficSplitting.map(\n    (traffic) => traffic.revisionName,\n  );\n  const items = pickBy(revisionItems, (revisionItem) => !selectedRevisions.includes(revisionItem));\n  return (\n    <MultiColumnField\n      name=\"trafficSplitting\"\n      addLabel={t('knative-plugin~Add Revision')}\n      headers={[\n        { name: t('knative-plugin~Split'), required: true },\n        t('knative-plugin~Tag'),\n        { name: t('knative-plugin~Revision'), required: true },\n      ]}\n      emptyValues={{ percent: '', tag: '', revisionName: '' }}\n      disableDeleteRow={values.trafficSplitting.length === 1}\n      tooltipDeleteRow={\n        values.trafficSplitting.length === 1\n          ? t('knative-plugin~Service must have at least one assigned revision')\n          : undefined /* default */\n      }\n      disableAddRow={values.trafficSplitting.length === size(revisionItems)}\n      tooltipAddRow={\n        values.trafficSplitting.length === size(revisionItems)\n          ? t('knative-plugin~All revisions are already set to receive traffic')\n          : null /* no tooltip */\n      }\n      spans={[2, 3, 7]}\n    >\n      <InputField\n        name=\"percent\"\n        type={TextInputTypes.number}\n        style={{ maxWidth: '100%' }}\n        required\n      />\n      <InputField name=\"tag\" type={TextInputTypes.text} />\n      <TrafficModalRevisionsDropdownField\n        name=\"revisionName\"\n        revisionItems={items}\n        title={t('knative-plugin~Select a Revision')}\n      />\n    </MultiColumnField>\n  );\n};\n\nexport default TrafficSplittingFields;\n","import * as React from 'react';\nimport { useField } from 'formik';\nimport { DropdownField } from '@console/shared';\nimport { RevisionItems } from '../../utils/traffic-splitting-utils';\n\ntype TrafficModalRevisionsDropdownFieldProps = {\n  revisionItems: RevisionItems;\n  name: string;\n  title: string;\n};\n\nconst TrafficModalRevisionsDropdownField: React.FC<TrafficModalRevisionsDropdownFieldProps> = ({\n  revisionItems,\n  name,\n  title,\n}) => {\n  const [field] = useField(name);\n  const dropdownItems =\n    !field.value || Object.values(revisionItems).includes(field.value)\n      ? revisionItems\n      : { ...revisionItems, [field.value]: field.value };\n  return (\n    <DropdownField\n      name={name}\n      items={dropdownItems}\n      title={field.value || title}\n      fullWidth\n      required\n    />\n  );\n};\n\nexport default TrafficModalRevisionsDropdownField;\n"],"sourceRoot":""}