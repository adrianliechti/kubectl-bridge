{"version":3,"sources":["webpack:///./public/components/modals/replace-code-modal.tsx","webpack:///./public/components/import-yaml-results.tsx","webpack:///./public/components/edit-yaml.jsx","webpack:///./packages/console-shared/src/components/editor/CodeEditor.tsx","webpack:///./packages/console-shared/src/components/editor/CodeEditorSidebar.tsx","webpack:///./public/components/utils/k8s-get-hook.ts","webpack:///./packages/console-shared/src/components/editor/yaml-download-utils.ts","webpack:///./packages/console-shared/src/components/editor/theme.ts","webpack:///./public/reducers/ols.ts","webpack:///./packages/console-shared/src/components/editor/CodeEditorToolbar.tsx","webpack:///./packages/console-shared/src/hooks/ols-hook.ts","webpack:///./packages/console-shared/src/components/editor/ShortcutsLink.tsx","webpack:///./public/components/sidebars/explore-type-sidebar.tsx","webpack:///./packages/console-shared/src/components/editor/yaml-editor-utils.ts","webpack:///./public/module/k8s/openapi-to-json-schema.ts","webpack:///./public/components/sidebars/resource-sidebar.tsx","webpack:///./public/components/sidebars/resource-sidebar-samples.tsx"],"names":["handleCodeReplace","t","variant","small","titleIconVariant","title","isOpen","showClose","actions","key","id","onClick","reactPropFix","translate","ImportYAMLPageStatus","errors","inFlight","StatusBlock","size","className","ImportYAMLResourceStatus","creating","error","message","StatusIcon","ImportYAMLResults","createResources","displayResults","importResources","retryFailed","importStatus","setImportStatus","map","setInFlight","some","s","then","results","result","status","reason","substring","gridBreakPoint","none","importResource","index","resource","name","metadata","generateName","kind","namespace","linkTo","type","failedResourceObjects","reduce","acc","EditYAML_","state","activeNamespace","UI","get","impersonate","models","k8s","getIn","Component","props","allowMultiple","connectDropTarget","isOver","canDrop","create","yamlSamplesList","customClass","onChange","showTooltips","download","canDownload","header","genericYAML","children","customAlerts","postFormSubmissionCallback","redirectURL","clearFileUpload","onSave","isCodeImportRedirect","navigate","setErrors","success","setSuccess","initialized","setInitialized","stale","setStale","sampleObj","setSampleObj","showSidebar","setShowSidebar","owner","setOwner","notAllowed","setNotAllowed","setDisplayResults","resourceObjects","setResourceObjects","callbackCommand","setCallbackCommand","showReplaceCodeModal","setShowReplaceCodeModal","olsCode","setOLSCode","olsCodeBlock","closeOLS","CloseOLS","dispatch","monacoRef","editor","buttons","displayedVersion","onCancel","getEditor","current","getModel","obj","checkEditAccess","readOnly","model","resourceAttributes","group","apiGroup","plural","verb","resp","notAll","allowed","updateOptions","catch","e","console","warn","appendYAMLString","yaml","currentYAML","getValue","trim","endsWith","convertObjToYAMLString","lineWidth","loadYaml","reloaded","setValue","str","isValidYaml","value","handleError","err","prevState","loadCSVs","ownerReferences","length","ns","csvList","own","prevProps","newVersion","fileUpload","updateYAML","o","url","resourceObjPath","version","resourceVersion","setDisplay","onRetry","retryObjs","yamlDocuments","join","validate","apiVersion","namespaced","saving","setSaving","saveCallback","newNamespace","newName","original","updated","newAPIGroup","onSubmit","save","saveAllCallback","objs","hasErrors","filter","includes","items","forEach","validationError","resourceObject","resourceName","handleErrors","filteredEntried","saveAll","getYamlContent_","templateExtensions","generateObjToLoad","toggleSidebar","window","dispatchEvent","Event","klass","hover","push","toString","Promise","resolve","options","scrollBeyondLastLine","samples","snippets","definition","properties","hasSidebarContent","sidebarLink","isInline","tooltipCheckBox","label","isChecked","event","checked","setShowTooltips","editYamlComponent","hideHeader","badge","helpText","detail","ref","_event","target","showShortcuts","minHeight","toolbarLinks","currentEditor","reload","data","editorRef","sanitizeYamlContent","contentObj","sanitizedYaml","resolvedTemplates","EditYAML","CONSOLE_YAML_SAMPLE","flags","resources","isList","prop","CodeEditor","showMiniMap","language","theme","usesValue","undefined","editorDidMount","monaco","currentLanguage","getModeId","layout","focus","getAction","run","getModels","tabSize","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","editorOptions","minimap","enabled","bounds","measureRef","contentRect","style","height","width","schema","sidebarLabel","insertYamlContent","yamlContent","selection","getSelection","range","startLineNumber","startColumn","endLineNumber","endColumn","indentSize","Array","lines","split","lineCount","indentedLines","line","i","indentedText","newContentSelection","op","text","forceMoveMarkers","executeEdits","replaceYamlContent","downloadYamlContent","kindObj","loadSampleYaml","insertSnippetYaml","downloadSampleYaml","useK8sGet","opts","setData","loaded","setLoaded","loadError","setLoadError","downloadYaml","blob","Blob","filename","toLowerCase","defineTheme","base","inherit","colors","rules","token","foreground","ActionType","getOLSCodeBlock","plugins","ols","showLightspeedButton","OpenOLS","icon","orientation","default","link","OLSConfigModel","labelKey","labelPluralKey","abbr","labelPlural","crd","useOLSConfig","onHideShortcuts","bodyContent","alt","keyName","ctrl","shift","ctrlCmd","maxWidth","distance","onHide","ExploreType","drilldownHistory","setDrilldownHistory","allDefinitions","setAllDefinitions","response","currentSelection","currentPath","path","currentDefinition","currentProperties","definitions","description","required","Set","kindLabel","breadcrumbs","crumb","isLast","isActive","preventDefault","breadcrumbClicked","child","getDrilldownPath","definitionType","getTypeForRef","$ref","re","test","replace","getRef","definitionTypeStr","isArray","has","desc","scrollTop","drilldown","defaultEditorOptions","MONACO_URI","parse","createDocument","getVersionId","fold","resetMouseLocation","managedLocation","document","doc","getText","rootMappings","mappings","rootElement","rootKey","rootValue","metadataMappings","metadataChildren","start","positionAt","startPosition","end","endPosition","findManagedMetadata","top","getScrollTop","setSelection","setScrollTop","Math","abs","enableYAMLValidation","p2m","monacoURI","yamlService","alreadyInUse","pendingValidationRequests","Map","doValidate","doValidation","diagnostics","markers","asDiagnostics","setModelMarkers","initialFoldingTriggered","tryFolding","setTimeout","onDidChangeContent","request","uri","clearTimeout","delete","cleanPendingValidation","set","registerYAMLinMonaco","m2p","workspaceContext","resolveRelativePath","relativePath","reject","xhr","XMLHttpRequest","onload","responseText","onerror","statusText","open","send","yamlOpenAPI","schemas","fileMatch","configure","completion","createYAMLService","languages","getLanguages","x","register","extensions","aliases","mimetypes","registerYAMLLanguage","languageID","registerCompletionItemProvider","position","doComplete","asPosition","lineNumber","column","list","asCompletionResult","registerYAMLCompletion","registerDocumentSymbolProvider","asSymbolInformations","findDocumentSymbols","registerYAMLDocumentSymbols","registerHoverProvider","doHover","asHover","el","getElementsByClassName","onclick","onauxclick","getAttribute","opener","registerYAMLHover","groupVersionKindToEnums","gvkObjArray","versionEnum","kindEnum","gvkObj","createOrAppendAPIVersion","openAPI","apiVersionEnum","enum","createOrAppendKind","openAPItoJSONSchema","convertedOpenAPI","hasOwnProperty","openAPIDefinition","groupVersionKind","gvkEnums","convertGroupVersionKindToJSONSchema","oneOfSchemas","openAPIDefinitions","schemaProperty","oneOf","sidebarScrollTop","ResourceSidebarWrapper","additionalClassName","ariaLabel","ResourceSchema","ResourceSamples","ResourceSnippets","ResourceSidebar","showSamples","showSnippets","showSchema","tabs","component","tabProps","additionalClassNames","ResourceSidebarSample","sample","highlightText","img","targetResource","reference","src","PreviewYAML","maxPreviewLines","paddingTop","min","lineHeight","folding","ResourceSidebarSnippet","snippet","lazyYaml","yamlPreview","setYamlPreview","yamlPreviewOpen","setYamlPreviewOpen","resolveYaml","callback","resolvedYaml","ResourceSidebarSnippets","listStyle","paddingLeft","ResourceSidebarSamples"],"mappings":"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","file":"29-chunk-4a8283978f0e769f1036.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\n\nexport const ReplaceCodeModal = ({ handleCodeReplace }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      titleIconVariant=\"warning\"\n      title={t('Replace current content?')}\n      isOpen={true}\n      showClose={false}\n      actions={[\n        <Button\n          key=\"yes\"\n          id=\"confirm-replace\"\n          data-test=\"confirm-replace\"\n          variant=\"primary\"\n          onClick={handleCodeReplace}\n        >\n          {t('Yes')}\n        </Button>,\n        <Button\n          key=\"no\"\n          id=\"cancel-replace\"\n          data-test=\"cancel-replace\"\n          variant=\"secondary\"\n          onClick={handleCodeReplace}\n        >\n          {t('No')}\n        </Button>,\n        <Button\n          key=\"both\"\n          id=\"keep-both\"\n          data-test=\"keep-both\"\n          variant=\"tertiary\"\n          onClick={handleCodeReplace}\n        >\n          {t('Keep both')}\n        </Button>,\n      ]}\n    >\n      {t('Existing content will be replaced. Do you want to continue?')}\n    </Modal>\n  );\n};\n\nexport default ReplaceCodeModal;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { Bullseye, Button, Icon, Spinner } from '@patternfly/react-core';\nimport {\n  GreenCheckCircleIcon,\n  RedExclamationCircleIcon,\n  YellowExclamationTriangleIcon,\n} from '@console/shared';\nimport { Table, TableGridBreakpoint, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\n\nimport { ResourceLink } from './utils';\nimport { referenceFor } from '../module/k8s';\n\n/**\n * Without this prop our current TS types fail to match and require a `translate` prop to be added. PF suggests we\n * update our types, but that causes other issues. This will have to do as a workaround for now.\n *\n * This is the best that I can find relates to this value:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/3423b4fc3e3da09f8acc386bc2fee6fb8f5e0880/types/react/index.d.ts#L1763\n */\nconst reactPropFix = {\n  translate: 'no',\n};\n\nexport const ImportYAMLPageStatus: React.FC<ImportYAMLPageStatusProps> = ({ errors, inFlight }) => {\n  const { t } = useTranslation();\n  let StatusBlock: React.ReactNode;\n\n  if (inFlight) {\n    StatusBlock = (\n      <>\n        <Spinner size=\"lg\" />\n        <h2>{t('public~Creating resources...')}</h2>\n      </>\n    );\n  } else if (!inFlight && !errors) {\n    StatusBlock = (\n      <>\n        <Icon size=\"lg\">\n          <GreenCheckCircleIcon />\n        </Icon>\n\n        <h2 data-test=\"resources-successfully-created\">\n          {t('public~Resources successfully created')}\n        </h2>\n      </>\n    );\n  } else {\n    StatusBlock = (\n      <>\n        <Icon size=\"lg\">\n          <YellowExclamationTriangleIcon />\n        </Icon>\n\n        <h2>{t('public~One or more resources failed to be created')}</h2>\n      </>\n    );\n  }\n  return <div className=\"co-import-yaml-status pf-v5-u-text-align-center\">{StatusBlock}</div>;\n};\n\nexport const ImportYAMLResourceStatus: React.FC<ImportYAMLResourceStatusProps> = ({\n  creating,\n  error,\n  message,\n}) => {\n  let StatusIcon: React.ReactNode;\n  if (creating) {\n    StatusIcon = <Spinner size=\"sm\" className=\"co-icon-space-r\" />;\n  } else if (error) {\n    StatusIcon = (\n      <Icon size=\"sm\">\n        <RedExclamationCircleIcon className=\"co-icon-space-r\" />\n      </Icon>\n    );\n  } else {\n    StatusIcon = (\n      <Icon size=\"sm\">\n        <GreenCheckCircleIcon className=\"co-icon-space-r\" />\n      </Icon>\n    );\n  }\n  return (\n    <span>\n      {StatusIcon}\n      {message}\n    </span>\n  );\n};\n\nexport const ImportYAMLResults: React.FC<ImportYAMLResultsProps> = ({\n  createResources,\n  displayResults,\n  importResources,\n  retryFailed,\n}) => {\n  const { t } = useTranslation();\n  const [importStatus, setImportStatus] = React.useState<ImportYAMLStatus[]>(\n    importResources.map(() => ({\n      creating: true,\n      message: t('public~Creating'),\n    })),\n  );\n  const [inFlight, setInFlight] = React.useState(true);\n  const errors = importStatus.some((s) => s.error);\n\n  React.useEffect(() => {\n    createResources(importResources).then((results) => {\n      setImportStatus(\n        results.map((result) => {\n          if (result.status === 'fulfilled') {\n            return { creating: false, result: result.result, message: t('public~Created') };\n          }\n          if (result.status === 'rejected') {\n            return {\n              creating: false,\n              error: true,\n              message: t('public~Error: {{error}}', { error: result?.reason?.substring(11) }),\n            };\n          }\n        }),\n      );\n      setInFlight(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onRetry = () => {\n    const failedResourceObjects = importStatus.reduce((acc, status, index) => {\n      if (!status.error) {\n        return acc;\n      }\n      return [...acc, importResources[index]];\n    }, []);\n    retryFailed(failedResourceObjects);\n  };\n\n  return (\n    <div className=\"co-import-yaml-results-page\">\n      <Helmet>\n        <title>{t('public~Import YAML Results')}</title>\n      </Helmet>\n      <Bullseye>\n        <div className=\"co-import-yaml-results-page__main\">\n          <ImportYAMLPageStatus inFlight={inFlight} errors={errors} />\n          <Table\n            gridBreakPoint={TableGridBreakpoint.none}\n            variant=\"compact\"\n            aria-label={t('public~Import YAML results')}\n            {...reactPropFix}\n            data-codemods=\"true\"\n          >\n            <Thead {...reactPropFix}>\n              <Tr {...reactPropFix}>\n                <Th {...reactPropFix}>{t('public~Name')}</Th>\n                <Th {...reactPropFix}>{t('public~Namespace')}</Th>\n                <Th {...reactPropFix}>{t('public~Creation status')}</Th>\n              </Tr>\n            </Thead>\n            <Tbody {...reactPropFix}>\n              {importResources.map((importResource, index) => {\n                const status = importStatus[index];\n                const resource = status.result || importResource;\n                const name =\n                  !resource.metadata.name && resource.metadata.generateName\n                    ? `${resource.metadata.generateName}...`\n                    : resource.metadata.name;\n                return (\n                  <Tr key={index} {...reactPropFix}>\n                    <Td {...reactPropFix}>\n                      <ResourceLink\n                        kind={referenceFor(resource) || resource.kind}\n                        name={name}\n                        namespace={resource.metadata?.namespace}\n                        linkTo={!inFlight && !importStatus[index].error}\n                      />\n                    </Td>\n                    <Td {...reactPropFix}>\n                      {resource.metadata?.namespace ? (\n                        <ResourceLink kind=\"Namespace\" name={resource.metadata.namespace} />\n                      ) : (\n                        '-'\n                      )}\n                    </Td>\n                    <Td {...reactPropFix}>\n                      <ImportYAMLResourceStatus {...status} />\n                    </Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </Table>\n          {!inFlight && (\n            <>\n              {errors && (\n                <div className=\"co-import-yaml-results-page__footer\">\n                  <Button\n                    variant=\"primary\"\n                    type=\"button\"\n                    onClick={onRetry}\n                    data-test=\"retry-failed-resources\"\n                  >\n                    {t('public~Retry failed resources')}\n                  </Button>\n                </div>\n              )}\n              <div className=\"co-import-yaml-results-page__footer\">\n                <Button\n                  data-test=\"import-more-yaml\"\n                  variant=\"link\"\n                  type=\"button\"\n                  onClick={() => displayResults(false)}\n                >\n                  {t('public~Import more YAML')}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </Bullseye>\n    </div>\n  );\n};\n\ntype ImportYAMLStatus = {\n  creating: boolean;\n  result?: any;\n  error?: boolean;\n  message: string;\n};\ntype ImportYAMLPageStatusProps = {\n  errors?: boolean;\n  inFlight: boolean;\n};\ntype ImportYAMLResourceStatusProps = {\n  creating: boolean;\n  error?: boolean;\n  message: string;\n};\ntype ImportYAMLResultsProps = {\n  createResources: (objs: any, isDryRun?: boolean) => any;\n  displayResults: (value: boolean) => void;\n  importResources: any;\n  retryFailed: (retryObjects: any) => void;\n};\n","/* eslint-disable tsdoc/syntax */\nimport * as _ from 'lodash-es';\nimport * as React from 'react';\nimport * as classNames from 'classnames';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { action } from 'typesafe-actions';\nimport { ActionType, getOLSCodeBlock } from '@console/internal/reducers/ols';\nimport { safeLoad, safeLoadAll, safeDump } from 'js-yaml';\nimport { ActionGroup, Alert, Button, Checkbox } from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom-v5-compat';\nimport {\n  FLAGS,\n  ALL_NAMESPACES_KEY,\n  getBadgeFromType,\n  withPostFormSubmissionCallback,\n  getResourceSidebarSamples,\n  SHOW_YAML_EDITOR_TOOLTIPS_USER_SETTING_KEY,\n  SHOW_YAML_EDITOR_TOOLTIPS_LOCAL_STORAGE_KEY,\n  useUserSettingsCompatibility,\n} from '@console/shared';\n\nimport CodeEditor from '@console/shared/src/components/editor/CodeEditor';\nimport CodeEditorSidebar from '@console/shared/src/components/editor/CodeEditorSidebar';\nimport '@console/shared/src/components/editor/theme';\nimport { fold } from '@console/shared/src/components/editor/yaml-editor-utils';\nimport { downloadYaml } from '@console/shared/src/components/editor/yaml-download-utils';\nimport { isYAMLTemplate, getImpersonate } from '@console/dynamic-plugin-sdk';\nimport { useResolvedExtensions } from '@console/dynamic-plugin-sdk/src/api/useResolvedExtensions';\nimport { connectToFlags } from '../reducers/connectToFlags';\nimport { errorModal, managedResourceSaveModal } from './modals';\nimport ReplaceCodeModal from './modals/replace-code-modal';\nimport { checkAccess, Firehose, Loading, LoadingBox, PageHeading, resourceObjPath } from './utils';\nimport {\n  referenceForModel,\n  k8sCreate,\n  k8sUpdate,\n  k8sList,\n  referenceFor,\n  groupVersionFor,\n} from '../module/k8s';\nimport { ConsoleYAMLSampleModel } from '../models';\nimport { getYAMLTemplates } from '../models/yaml-templates';\nimport { findOwner } from '../module/k8s/managed-by';\nimport { ClusterServiceVersionModel } from '@console/operator-lifecycle-manager/src/models';\nimport { definitionFor } from '../module/k8s/swagger';\nimport { ImportYAMLResults } from './import-yaml-results';\n\nconst generateObjToLoad = (templateExtensions, kind, id, yaml, namespace = 'default') => {\n  const sampleObj = safeLoad(yaml ? yaml : getYAMLTemplates(templateExtensions).getIn([kind, id]));\n  if (_.has(sampleObj.metadata, 'namespace')) {\n    sampleObj.metadata.namespace = namespace;\n  }\n  return sampleObj;\n};\n\nconst stateToProps = (state) => ({\n  activeNamespace: state.UI.get('activeNamespace'),\n  impersonate: getImpersonate(state),\n  models: state.k8s.getIn(['RESOURCES', 'models']),\n});\n\nconst WithYamlTemplates = (Component) =>\n  function Comp(props) {\n    const kind = props?.obj?.kind;\n    const [templateExtensions, resolvedTemplates] = useResolvedExtensions(\n      React.useCallback((e) => isYAMLTemplate(e) && e.properties.model.kind === kind, [kind]),\n    );\n    const [showTooltips, setShowTooltips] = useUserSettingsCompatibility(\n      SHOW_YAML_EDITOR_TOOLTIPS_USER_SETTING_KEY,\n      SHOW_YAML_EDITOR_TOOLTIPS_LOCAL_STORAGE_KEY,\n      true,\n      true,\n    );\n\n    return !resolvedTemplates ? (\n      <LoadingBox />\n    ) : (\n      <Component\n        templateExtensions={templateExtensions}\n        showTooltips={showTooltips}\n        setShowTooltips={setShowTooltips}\n        {...props}\n      />\n    );\n  };\n\nconst EditYAMLInner = (props) => {\n  const {\n    allowMultiple,\n    connectDropTarget,\n    isOver,\n    canDrop,\n    create,\n    yamlSamplesList,\n    customClass,\n    onChange = () => null,\n    models,\n    showTooltips,\n    download: canDownload = true,\n    header,\n    genericYAML = false,\n    children: customAlerts,\n    postFormSubmissionCallback,\n    redirectURL,\n    clearFileUpload,\n    onSave,\n    isCodeImportRedirect,\n  } = props;\n\n  const navigate = useNavigate();\n  const [errors, setErrors] = React.useState(null);\n  const [success, setSuccess] = React.useState(null);\n  const [initialized, setInitialized] = React.useState(false);\n  const [stale, setStale] = React.useState(false);\n  const [sampleObj, setSampleObj] = React.useState(props.sampleObj);\n  const [showSidebar, setShowSidebar] = React.useState(!!create);\n  const [owner, setOwner] = React.useState(null);\n  const [notAllowed, setNotAllowed] = React.useState();\n  const [displayResults, setDisplayResults] = React.useState();\n  const [resourceObjects, setResourceObjects] = React.useState();\n\n  const [callbackCommand, setCallbackCommand] = React.useState('');\n  const [showReplaceCodeModal, setShowReplaceCodeModal] = React.useState(false);\n  const [olsCode, setOLSCode] = React.useState('');\n  const olsCodeBlock = useSelector(getOLSCodeBlock);\n\n  const closeOLS = () => action(ActionType.CloseOLS);\n  const dispatch = useDispatch();\n\n  const monacoRef = React.useRef();\n  const editor = React.useRef();\n  const buttons = React.useRef();\n\n  const { t } = useTranslation();\n\n  const navigateBack = () => navigate(-1);\n\n  const displayedVersion = React.useRef('0');\n  const onCancel = 'onCancel' in props ? props.onCancel : navigateBack;\n\n  const getEditor = () => {\n    return monacoRef.current?.editor;\n  };\n\n  const getModel = React.useCallback(\n    (obj) => {\n      if (_.isEmpty(obj) || !models) {\n        return null;\n      }\n      return models.get(referenceFor(obj)) || models.get(obj.kind);\n    },\n    [models],\n  );\n\n  async function createResources(objs) {\n    const results = [];\n    for (const obj of objs) {\n      try {\n        const result = await k8sCreate(getModel(obj), obj);\n        results.push({\n          status: 'fulfilled',\n          result,\n        });\n      } catch (error) {\n        results.push({\n          status: 'rejected',\n          reason: error.toString(),\n        });\n      }\n    }\n    return Promise.resolve(results);\n  }\n\n  const checkEditAccess = React.useCallback(\n    (obj) => {\n      if (props.readOnly) {\n        // We're already read-only. No need for the access review.\n        return;\n      }\n\n      if (create) {\n        // No need to check edit access if creating a resource.\n        // Note that the Create button is only displayed for users with\n        // correct permissions.\n        return;\n      }\n\n      const model = getModel(obj);\n      if (!model) {\n        return;\n      }\n\n      const { name, namespace } = obj.metadata;\n      const resourceAttributes = {\n        group: model.apiGroup,\n        resource: model.plural,\n        verb: 'update',\n        name,\n        namespace,\n      };\n      checkAccess(resourceAttributes, props.impersonate)\n        .then((resp) => {\n          const notAll = !resp.status.allowed;\n          setNotAllowed(notAll);\n          if (monacoRef.current) {\n            monacoRef.current.editor?.updateOptions({ readOnly: notAll });\n          }\n        })\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.warn('Error while check edit access', e);\n        });\n    },\n    [props.readOnly, props.impersonate, create, getModel],\n  );\n\n  const appendYAMLString = React.useCallback((yaml) => {\n    const currentYAML = getEditor()?.getValue();\n    return _.isEmpty(currentYAML)\n      ? yaml\n      : `${currentYAML}${currentYAML.trim().endsWith('---') ? '\\n' : '\\n---\\n'}${yaml}`;\n  }, []);\n\n  const convertObjToYAMLString = React.useCallback(\n    (obj) => {\n      let yaml = '';\n      if (obj) {\n        if (_.isString(obj)) {\n          yaml = allowMultiple ? appendYAMLString(obj) : obj;\n        } else {\n          try {\n            yaml = safeDump(obj, { lineWidth: -1 });\n            checkEditAccess(obj);\n          } catch (e) {\n            yaml = t('public~Error getting YAML: {{e}}', { e });\n          }\n        }\n      }\n\n      return yaml;\n    },\n    [appendYAMLString, allowMultiple, checkEditAccess, t],\n  );\n\n  const loadYaml = React.useCallback(\n    (reloaded = false, obj = props.obj) => {\n      if (initialized && !reloaded) {\n        return;\n      }\n\n      const yaml = convertObjToYAMLString(obj);\n      displayedVersion.current = _.get(obj, 'metadata.resourceVersion');\n      getEditor()?.setValue(yaml);\n      setInitialized(true);\n      setStale(false);\n    },\n    [convertObjToYAMLString, initialized, props.obj],\n  );\n\n  const handleCodeReplace = (_event) => {\n    if (_event.target.id === 'confirm-replace') {\n      getEditor()?.setValue(olsCodeBlock?.value);\n    } else if (_event.target.id === 'keep-both') {\n      getEditor()?.setValue(appendYAMLString(olsCodeBlock?.value));\n    }\n    setShowReplaceCodeModal(false);\n  };\n\n  const isValidYaml = (str) => {\n    if (_.isEmpty(str)) {\n      return false;\n    }\n    try {\n      safeLoad(str);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  React.useEffect(() => {\n    if (!isValidYaml(olsCodeBlock?.value) || !isCodeImportRedirect) {\n      return;\n    }\n\n    const currentYAML = getEditor()?.getValue();\n\n    if (_.isEmpty(currentYAML) || currentYAML === olsCode) {\n      getEditor()?.setValue(olsCodeBlock?.value);\n    } else {\n      setShowReplaceCodeModal(true);\n    }\n\n    setOLSCode(olsCodeBlock?.value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [olsCodeBlock, initialized, isCodeImportRedirect]);\n\n  const handleError = (err, value = null) => {\n    setSuccess(value);\n    setErrors((prevState) => {\n      let error = prevState || [];\n      if (!_.isEmpty(err)) {\n        error = [...error, err];\n      }\n      return error;\n    });\n  };\n\n  const handleErrors = (resourceObject, err) => {\n    const resourceName = resourceObject?.metadata?.name;\n    const kind = resourceObject?.kind;\n    setErrors((prevState) => {\n      const error = [...(prevState || []), resourceName ? `${kind} ${resourceName}: ${err}` : err];\n      return error;\n    });\n  };\n\n  const loadCSVs = React.useCallback(() => {\n    const namespace = props.obj?.metadata?.namespace;\n    if (create || !namespace || !props.obj?.metadata?.ownerReferences?.length) {\n      return;\n    }\n    k8sList(ClusterServiceVersionModel, { ns: namespace })\n      .then((csvList) => {\n        const own = findOwner(props.obj, csvList);\n        setOwner(own);\n      })\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.error('Could not fetch CSVs', e);\n      });\n  }, [create, props.obj]);\n\n  React.useEffect(() => {\n    if (props.error) {\n      handleError(props.error);\n    }\n    loadYaml();\n    loadCSVs();\n  }, [loadCSVs, loadYaml, props.error]);\n\n  const prevProps = React.useRef(props);\n\n  // unsafecomponentwillreceiveprops\n  React.useEffect(() => {\n    if (isOver) {\n      return;\n    }\n\n    const newVersion = _.get(props.obj, 'metadata.resourceVersion');\n    const s = displayedVersion.current !== newVersion;\n    setStale(s);\n    handleError(props.error, success);\n    if (props.sampleObj) {\n      loadYaml(!_.isEqual(sampleObj, props.sampleObj), props.sampleObj);\n    } else if (props.fileUpload) {\n      loadYaml(!_.isEqual(prevProps.current.fileUpload, props.fileUpload), props.fileUpload);\n    } else {\n      loadYaml();\n    }\n  }, [props, isOver, loadYaml, sampleObj, success]);\n\n  const reload = () => {\n    loadYaml(true);\n    const currentEditor = getEditor();\n    fold(currentEditor, currentEditor.getModel(), false);\n    setSampleObj(null);\n    setErrors(null);\n    setSuccess(null);\n  };\n\n  const updateYAML = React.useCallback(\n    (obj) => {\n      const model = getModel(obj);\n      setSuccess(null);\n      setErrors(null);\n      const response = create\n        ? k8sCreate(model, _.omit(obj, ['metadata.resourceVersion']))\n        : k8sUpdate(model, obj, obj.metadata.namespace, obj.metadata.name);\n\n      response\n        .then((o) => postFormSubmissionCallback(o))\n        .then((o) => {\n          if (create) {\n            let url = redirectURL;\n            if (!url) {\n              const path = _.isFunction(props.resourceObjPath)\n                ? props.resourceObjPath\n                : resourceObjPath;\n              url = path(o, referenceFor(o));\n            }\n            navigate(url);\n            // TODO: (ggreer). show message on new page. maybe delete old obj?\n            return;\n          }\n          const s = t('public~{{name}} has been updated to version {{version}}', {\n            name: obj.metadata.name,\n            version: o.metadata.resourceVersion,\n          });\n          setSuccess(s);\n          setErrors(null);\n          loadYaml(true, o);\n        })\n        .catch((e) => {\n          handleError(e.message);\n        });\n    },\n    [\n      create,\n      loadYaml,\n      t,\n      postFormSubmissionCallback,\n      redirectURL,\n      props.resourceObjPath,\n      navigate,\n      getModel,\n    ],\n  );\n\n  const setDisplay = React.useCallback(\n    (value) => {\n      clearFileUpload();\n      setDisplayResults(value);\n    },\n    [clearFileUpload],\n  );\n\n  const onRetry = (retryObjs) => {\n    setDisplay(false);\n    if (retryObjs) {\n      const yamlDocuments = retryObjs.map((obj) => convertObjToYAMLString(obj));\n      setDisplayResults(false);\n      getEditor()?.setValue(yamlDocuments.join('---\\n'));\n    }\n  };\n\n  const validate = React.useCallback(\n    (obj) => {\n      if (!obj) {\n        return t('public~No YAML content found.');\n      }\n\n      if (!obj.apiVersion) {\n        return t('public~No \"apiVersion\" field found in YAML.');\n      }\n\n      if (!obj.kind) {\n        return t('public~No \"kind\" field found in YAML.');\n      }\n\n      const model = getModel(obj);\n      if (!model) {\n        return t(\n          'public~The server doesn\\'t have a resource type \"kind: {{kind}}, apiVersion: {{apiVersion}}\".',\n          { kind: obj.kind, apiVersion: obj.apiVersion },\n        );\n      }\n\n      if (!obj.metadata) {\n        return t('public~No \"metadata\" field found in YAML.');\n      }\n\n      if (obj.metadata.namespace && !model.namespaced) {\n        delete obj.metadata.namespace;\n      }\n\n      // If this is a namespaced resource, default to the active namespace when none is specified in the YAML.\n      if (!obj.metadata.namespace && model.namespaced) {\n        if (props.activeNamespace === ALL_NAMESPACES_KEY) {\n          return t('public~No \"metadata.namespace\" field found in YAML.');\n        }\n        obj.metadata.namespace = props.activeNamespace;\n      }\n    },\n    [getModel, props.activeNamespace, t],\n  );\n\n  const [saving, setSaving] = React.useState(false);\n\n  const saveCallback = React.useCallback(() => {\n    let obj;\n\n    if (onSave) {\n      onSave(getEditor().getValue());\n      return;\n    }\n\n    try {\n      obj = safeLoad(getEditor().getValue());\n    } catch (e) {\n      handleError(t('public~Error parsing YAML: {{e}}', { e }));\n      return;\n    }\n\n    const error = validate(obj);\n    if (error) {\n      handleError(error);\n      return;\n    }\n\n    const { namespace: newNamespace, name: newName } = obj.metadata;\n\n    if (!create && props.obj) {\n      const { namespace, name } = props.obj.metadata;\n\n      if (name !== newName) {\n        handleError(\n          t('public~Cannot change resource name (original: \"{{name}}\", updated: \"{{newName}}\").', {\n            name,\n            newName,\n          }),\n        );\n        return;\n      }\n      if (namespace !== newNamespace) {\n        handleError(\n          t(\n            'public~Cannot change resource namespace (original: \"{{namespace}}\", updated: \"{{newNamespace}}\").',\n            { namespace, newNamespace },\n          ),\n        );\n        return;\n      }\n      if (props.obj.kind !== obj.kind) {\n        handleError(\n          t(\n            'public~Cannot change resource kind (original: \"{{original}}\", updated: \"{{updated}}\").',\n            { original: props.obj.kind, updated: obj.kind },\n          ),\n        );\n        return;\n      }\n\n      const apiGroup = groupVersionFor(props.obj.apiVersion).group;\n      const newAPIGroup = groupVersionFor(obj.apiVersion).group;\n\n      if (apiGroup !== newAPIGroup) {\n        handleError(\n          t(\n            'public~Cannot change API group (original: \"{{apiGroup}}\", updated: \"{{newAPIGroup}}\").',\n            { apiGroup, newAPIGroup },\n          ),\n        );\n        return;\n      }\n\n      if (owner) {\n        managedResourceSaveModal({\n          kind: obj.kind,\n          resource: obj,\n          onSubmit: () => updateYAML(obj),\n          owner,\n        });\n        return;\n      }\n    }\n    updateYAML(obj);\n  }, [create, owner, t, updateYAML, validate, onSave, props.obj]);\n\n  const save = () => {\n    setErrors([]);\n    setCallbackCommand('save');\n    setSaving((current) => !current);\n  };\n\n  const saveAllCallback = React.useCallback(() => {\n    let objs;\n    let hasErrors = false;\n\n    try {\n      objs = safeLoadAll(getEditor().getValue()).filter((obj) => obj);\n    } catch (e) {\n      handleError(t('public~Error parsing YAML: {{e}}', { e }));\n      return;\n    }\n\n    if (objs.length === 1) {\n      if (objs[0]?.apiVersion === 'v1' && objs[0]?.kind?.includes('List') && objs[0]?.items) {\n        if (objs[0]?.items?.length > 0) {\n          objs = objs[0].items;\n        } else {\n          handleError(t('public~\"items\" list is empty'));\n          return;\n        }\n      } else {\n        save();\n        return;\n      }\n    } else if (objs.length === 0) {\n      return;\n    }\n\n    //Run through client side validation for all resources\n    objs.forEach((obj) => {\n      const validationError = validate(obj);\n      if (validationError) {\n        hasErrors = true;\n        handleErrors(obj, validationError);\n      }\n    });\n\n    if (!hasErrors) {\n      //Check for duplicate name/kinds. ~ is not a valid name character, so use it to separate the fields\n      const filteredEntried = _.filter(objs, (obj) => !obj.metadata.generateName);\n      const uniqueEntries = _.uniqBy(filteredEntried, (obj) =>\n        [\n          obj.metadata.name,\n          obj.metadata.namespace,\n          obj.kind,\n          groupVersionFor(obj.apiVersion).group,\n        ].join('~'),\n      );\n      if (uniqueEntries.length !== filteredEntried.length) {\n        handleError(\n          t('public~Resources in the same namespace and API group must have unique names'),\n        );\n        return;\n      }\n      setErrors(null);\n      setResourceObjects(objs);\n      setDisplay(true);\n    }\n  }, [t, setDisplay, validate]);\n\n  const saveAll = () => {\n    setErrors([]);\n    setCallbackCommand('saveall');\n    setSaving((current) => !current);\n  };\n\n  React.useEffect(() => {\n    if (callbackCommand === 'save') {\n      saveCallback();\n    }\n    if (callbackCommand === 'saveall') {\n      saveAllCallback();\n    }\n    // removed callback functions from deps array to prevent stream of errors after save\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [saving, callbackCommand]);\n\n  const download = () => {\n    const data = getEditor()?.getValue();\n    downloadYaml(data);\n  };\n\n  const getYamlContent_ = (id = 'default', yaml = '', kind = referenceForModel(props.model)) => {\n    try {\n      const s = generateObjToLoad(\n        props.templateExtensions,\n        kind,\n        id,\n        yaml,\n        props.obj.metadata.namespace,\n      );\n      setSampleObj(s);\n      return s;\n    } catch (error) {\n      errorModal({\n        title: t('public~Failed to parse YAML sample'),\n        error: (\n          <div className=\"co-pre-line\">\n            {error.message || error.name || t('public~An error occurred.')}\n          </div>\n        ),\n      });\n    }\n  };\n\n  const toggleSidebar = () => {\n    setShowSidebar((prevState) => !prevState);\n    window.dispatchEvent(new Event('sidebar_toggle'));\n  };\n\n  const toggleShowTooltips = (event, checked) => {\n    props.setShowTooltips(checked);\n  };\n\n  const sanitizeYamlContent = (id, yaml, kind) => {\n    const contentObj = getYamlContent_(id, yaml, kind);\n    const sanitizedYaml = convertObjToYAMLString(contentObj);\n    displayedVersion.current = _.get(contentObj, 'metadata.resourceVersion');\n    return sanitizedYaml;\n  };\n\n  if (!create && !props.obj) {\n    return <Loading />;\n  }\n\n  const klass = classNames('co-file-dropzone-container', {\n    'co-file-dropzone--drop-over': isOver,\n  });\n\n  monacoRef.current?.editor?.updateOptions({ hover: showTooltips });\n\n  if (displayResults) {\n    return (\n      <ImportYAMLResults\n        createResources={createResources}\n        displayResults={setDisplayResults}\n        importResources={resourceObjects}\n        models={models}\n        retryFailed={onRetry}\n      />\n    );\n  }\n\n  const readOnly = props.readOnly || notAllowed;\n  const options = { readOnly, scrollBeyondLastLine: false };\n  const model = getModel(props.obj);\n  const { samples, snippets } = model\n    ? getResourceSidebarSamples(model, yamlSamplesList, t)\n    : { samples: [], snippets: [] };\n  const definition = model ? definitionFor(model) : { properties: [] };\n  const showSchema = definition && !_.isEmpty(definition.properties);\n  const hasSidebarContent = showSchema || (create && !_.isEmpty(samples)) || !_.isEmpty(snippets);\n  const sidebarLink =\n    !showSidebar && hasSidebarContent ? (\n      <Button type=\"button\" variant=\"link\" isInline onClick={toggleSidebar}>\n        <InfoCircleIcon className=\"co-icon-space-r co-p-has-sidebar__sidebar-link-icon\" />\n        {t('public~View sidebar')}\n      </Button>\n    ) : null;\n  const tooltipCheckBox = (\n    <Checkbox\n      label={t('public~Show tooltips')}\n      id=\"showTooltips\"\n      isChecked={showTooltips}\n      data-checked-state={showTooltips}\n      onChange={toggleShowTooltips}\n    />\n  );\n\n  const editYamlComponent = (\n    <div className=\"co-file-dropzone co-file-dropzone__flex\">\n      {canDrop && (\n        <div className={klass}>\n          <p className=\"co-file-dropzone__drop-text\">{t('public~Drop file here')}</p>\n        </div>\n      )}\n\n      {create && !props.hideHeader && (\n        <PageHeading\n          title={header}\n          badge={getBadgeFromType(model && model.badge)}\n          helpText={\n            allowMultiple ? (\n              <Trans ns=\"public\">\n                Drag and drop YAML or JSON files into the editor, or manually enter files and use{' '}\n                <kbd className=\"co-kbd\">---</kbd> to separate each definition.\n              </Trans>\n            ) : (\n              t(\n                'public~Create by manually entering YAML or JSON definitions, or by dragging and dropping a file into the editor.',\n              )\n            )\n          }\n          detail\n        />\n      )}\n\n      <div className=\"pf-v5-c-form co-m-page__body\">\n        <div className=\"co-p-has-sidebar\">\n          <div className=\"co-p-has-sidebar__body\">\n            <div className={classNames('yaml-editor', customClass)} ref={editor}>\n              {showReplaceCodeModal && <ReplaceCodeModal handleCodeReplace={handleCodeReplace} />}\n              <CodeEditor\n                ref={monacoRef}\n                options={options}\n                showShortcuts={!genericYAML}\n                minHeight=\"100px\"\n                toolbarLinks={sidebarLink ? [tooltipCheckBox, sidebarLink] : [tooltipCheckBox]}\n                onChange={onChange}\n                onSave={() => (allowMultiple ? saveAll() : save())}\n              />\n              <div className=\"yaml-editor__buttons\" ref={buttons}>\n                {customAlerts}\n                {errors?.length > 0 && (\n                  <Alert\n                    isInline\n                    className=\"co-alert co-alert--scrollable\"\n                    variant=\"danger\"\n                    title={t('public~An error occurred')}\n                    data-test=\"yaml-error\"\n                  >\n                    <div className=\"co-pre-line\">{errors.join('\\n')}</div>\n                  </Alert>\n                )}\n                {success && (\n                  <Alert isInline className=\"co-alert\" variant=\"success\" title={success} />\n                )}\n                {stale && (\n                  <Alert\n                    isInline\n                    className=\"co-alert\"\n                    variant=\"info\"\n                    title={t('public~This object has been updated.')}\n                  >\n                    {t('public~Click reload to see the new version.')}\n                  </Alert>\n                )}\n                <ActionGroup className=\"pf-v5-c-form__group--no-top-margin\">\n                  {create && (\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      id=\"save-changes\"\n                      data-test=\"save-changes\"\n                      onClick={() => {\n                        allowMultiple ? saveAll() : save();\n                        dispatch(closeOLS());\n                      }}\n                    >\n                      {t('public~Create')}\n                    </Button>\n                  )}\n                  {!create && !readOnly && (\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      id=\"save-changes\"\n                      data-test=\"save-changes\"\n                      onClick={() => save()}\n                    >\n                      {t('public~Save')}\n                    </Button>\n                  )}\n                  {!create && !genericYAML && (\n                    <Button\n                      type=\"submit\"\n                      variant=\"secondary\"\n                      id=\"reload-object\"\n                      data-test=\"reload-object\"\n                      onClick={() => reload()}\n                    >\n                      {t('public~Reload')}\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"secondary\"\n                    id=\"cancel\"\n                    data-test=\"cancel\"\n                    onClick={() => {\n                      onCancel();\n                      dispatch(closeOLS());\n                    }}\n                  >\n                    {t('public~Cancel')}\n                  </Button>\n                  {canDownload && (\n                    <Button\n                      type=\"submit\"\n                      variant=\"secondary\"\n                      className=\"pf-v5-c-button--align-right hidden-sm hidden-xs\"\n                      onClick={() => download()}\n                    >\n                      <DownloadIcon /> {t('public~Download')}\n                    </Button>\n                  )}\n                </ActionGroup>\n              </div>\n            </div>\n          </div>\n          {hasSidebarContent && showSidebar && (\n            <CodeEditorSidebar\n              editorRef={monacoRef}\n              model={model}\n              samples={create ? samples : []}\n              snippets={snippets}\n              sanitizeYamlContent={sanitizeYamlContent}\n              toggleSidebar={toggleSidebar}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  return _.isFunction(connectDropTarget) ? connectDropTarget(editYamlComponent) : editYamlComponent;\n};\n\n/**\n * This component loads the entire Monaco editor library with it.\n * Consider using `AsyncComponent` to dynamically load this component when needed.\n */\n/** @augments {React.Component<{allowMultiple?: boolean, obj?: any, create: boolean, kind: string, redirectURL?: string, resourceObjPath?: (obj: K8sResourceKind, objRef: string) => string}, onChange?: (yaml: string) => void, clearFileUpload?: () => void>} */\nexport const EditYAML_ = connect(stateToProps)(\n  WithYamlTemplates(withPostFormSubmissionCallback(EditYAMLInner)),\n);\n\nexport const EditYAML = connectToFlags(FLAGS.CONSOLE_YAML_SAMPLE)(({ flags, ...props }) => {\n  const resources = flags[FLAGS.CONSOLE_YAML_SAMPLE]\n    ? [\n        {\n          kind: referenceForModel(ConsoleYAMLSampleModel),\n          isList: true,\n          prop: 'yamlSamplesList',\n        },\n      ]\n    : [];\n\n  return (\n    <Firehose resources={resources}>\n      <EditYAML_ {...props} />\n    </Firehose>\n  );\n});\n","import * as React from 'react';\nimport Measure from 'react-measure';\nimport MonacoEditor from 'react-monaco-editor';\nimport { CodeEditorProps } from '@console/dynamic-plugin-sdk';\nimport { ThemeContext } from '@console/internal/components/ThemeProvider';\nimport CodeEditorToolbar from './CodeEditorToolbar';\nimport { registerYAMLinMonaco, defaultEditorOptions } from './yaml-editor-utils';\nimport './theme';\nimport './CodeEditor.scss';\n\nconst CodeEditor = React.forwardRef<MonacoEditor, CodeEditorProps>((props, ref) => {\n  const {\n    value,\n    options = defaultEditorOptions,\n    showShortcuts,\n    showMiniMap,\n    toolbarLinks,\n    minHeight,\n    onChange,\n    onSave,\n    language,\n  } = props;\n\n  const theme = React.useContext(ThemeContext);\n  const [usesValue] = React.useState<boolean>(value !== undefined);\n  const editorDidMount = React.useCallback(\n    (editor, monaco) => {\n      const currentLanguage = editor.getModel()?.getModeId();\n      editor.layout();\n      editor.focus();\n      switch (currentLanguage) {\n        case 'yaml':\n          registerYAMLinMonaco(editor, monaco, usesValue);\n          break;\n        case 'json':\n          editor.getAction('editor.action.formatDocument').run();\n          break;\n        default:\n          break;\n      }\n      monaco.editor.getModels()[0]?.updateOptions({ tabSize: 2 });\n      onSave && editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, onSave); // eslint-disable-line no-bitwise\n    },\n    [onSave, usesValue],\n  );\n\n  const editorOptions = React.useMemo(() => {\n    return {\n      ...options,\n      minimap: {\n        enabled: showMiniMap,\n      },\n    };\n  }, [options, showMiniMap]);\n\n  return (\n    <>\n      <CodeEditorToolbar showShortcuts={showShortcuts} toolbarLinks={toolbarLinks} />\n      <Measure bounds>\n        {({ measureRef, contentRect }) => (\n          <div ref={measureRef} className=\"ocs-yaml-editor__root\" style={{ minHeight }}>\n            <div className=\"ocs-yaml-editor__wrapper\">\n              <MonacoEditor\n                ref={ref}\n                language={language ?? 'yaml'}\n                theme={theme === 'light' ? 'console-light' : 'console-dark'}\n                height={contentRect.bounds.height}\n                width={contentRect.bounds.width}\n                value={value}\n                options={editorOptions}\n                editorDidMount={editorDidMount}\n                onChange={onChange}\n              />\n            </div>\n          </div>\n        )}\n      </Measure>\n    </>\n  );\n});\n\nexport default CodeEditor;\n","import * as React from 'react';\nimport { JSONSchema7 } from 'json-schema';\nimport { Range, Selection } from 'monaco-editor';\nimport MonacoEditor from 'react-monaco-editor';\nimport { ResourceSidebar } from '@console/internal/components/sidebars/resource-sidebar';\nimport { K8sKind } from '@console/internal/module/k8s';\nimport { Sample } from '../../utils';\nimport { downloadYaml } from './yaml-download-utils';\n\ntype CodeEditorSidebarProps = {\n  editorRef: React.MutableRefObject<MonacoEditor>;\n  model?: K8sKind;\n  samples?: Sample[];\n  schema?: JSONSchema7;\n  snippets?: Sample[];\n  sidebarLabel?: string;\n  sanitizeYamlContent?: (id: string, yaml: string, kind: string) => string;\n  toggleSidebar: () => void;\n};\n\nconst CodeEditorSidebar: React.FC<CodeEditorSidebarProps> = ({\n  editorRef,\n  model,\n  samples,\n  schema,\n  snippets,\n  sidebarLabel,\n  sanitizeYamlContent,\n  toggleSidebar,\n}) => {\n  const editor = editorRef.current?.editor;\n\n  const insertYamlContent = React.useCallback(\n    (id: string = 'default', yamlContent: string = '', kind) => {\n      const yaml = sanitizeYamlContent ? sanitizeYamlContent(id, yamlContent, kind) : yamlContent;\n\n      const selection = editor.getSelection();\n      const range = new Range(\n        selection.startLineNumber,\n        selection.startColumn,\n        selection.endLineNumber,\n        selection.endColumn,\n      );\n\n      // Grab the current position and indent every row to left-align the text at the same indentation\n      const indentSize = new Array(selection.startColumn).join(' ');\n      const lines = yaml.split('\\n');\n      const lineCount = lines.length;\n      const indentedLines = lines.map((line, i) => {\n        if (i === 0) {\n          // Already indented, leave it alone\n          return line;\n        }\n        return `${indentSize}${line}`;\n      });\n      const indentedText = indentedLines.join('\\n');\n\n      // Grab the selection size of what we are about to add\n      const newContentSelection = new Selection(\n        selection.startLineNumber,\n        selection.startColumn,\n        selection.startLineNumber + lineCount - 1,\n        selection.startColumn + indentedLines[indentedLines.length - 1].length,\n      );\n\n      const op = { range, text: indentedText, forceMoveMarkers: true };\n      editor.executeEdits(id, [op], [newContentSelection]);\n      editor.focus();\n    },\n    [editor, sanitizeYamlContent],\n  );\n\n  const replaceYamlContent = React.useCallback(\n    (id: string = 'default', yamlContent: string = '', kind: string) => {\n      const yaml = sanitizeYamlContent ? sanitizeYamlContent(id, yamlContent, kind) : yamlContent;\n      editor.setValue(yaml);\n    },\n    [editor, sanitizeYamlContent],\n  );\n\n  const downloadYamlContent = React.useCallback(\n    (id: string = 'default', yamlContent: string = '', kind: string) => {\n      try {\n        const yaml = sanitizeYamlContent ? sanitizeYamlContent(id, yamlContent, kind) : yamlContent;\n        downloadYaml(yaml);\n      } catch (e) {\n        downloadYaml(yamlContent);\n      }\n    },\n    [sanitizeYamlContent],\n  );\n\n  return (\n    <ResourceSidebar\n      kindObj={model}\n      samples={samples}\n      snippets={snippets}\n      schema={schema}\n      sidebarLabel={sidebarLabel}\n      loadSampleYaml={replaceYamlContent}\n      insertSnippetYaml={insertYamlContent}\n      downloadSampleYaml={downloadYamlContent}\n      toggleSidebar={toggleSidebar}\n    />\n  );\n};\n\nexport default CodeEditorSidebar;\n","import * as React from 'react';\nimport { k8sGet, K8sKind, K8sResourceCommon } from '../../module/k8s';\n\nexport const useK8sGet = <R extends K8sResourceCommon = K8sResourceCommon>(\n  kind: K8sKind,\n  name?: string,\n  namespace?: string,\n  opts?: { [k: string]: string },\n): [R, boolean, any] => {\n  const [data, setData] = React.useState<R>();\n  const [loaded, setLoaded] = React.useState(false);\n  const [loadError, setLoadError] = React.useState();\n  React.useEffect(() => {\n    const fetch = async () => {\n      try {\n        setLoadError(null);\n        setLoaded(false);\n        setData(null);\n        const resource = await k8sGet(kind, name, namespace, opts);\n        setData(resource);\n      } catch (error) {\n        setLoadError(error);\n      } finally {\n        setLoaded(true);\n      }\n    };\n    fetch();\n  }, [kind, name, namespace, opts]);\n\n  return [data, loaded, loadError];\n};\n","import { saveAs } from 'file-saver';\nimport { safeLoad } from 'js-yaml';\n\nexport const downloadYaml = (data: BlobPart) => {\n  const blob = new Blob([data], { type: 'text/yaml;charset=utf-8' });\n  let filename = 'k8s-object.yaml';\n  try {\n    const obj = safeLoad(data);\n    if (obj.kind) {\n      filename = `${obj.kind.toLowerCase()}-${obj.metadata.name}.yaml`;\n    }\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Could not parse YAML file:', e);\n  }\n  saveAs(blob, filename);\n};\n","import { global_BackgroundColor_200 as globalBackground200 } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_200';\nimport { global_BackgroundColor_dark_100 as darkEditorBackground } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_dark_100';\nimport { global_BackgroundColor_dark_200 as globalBackgroundDark200 } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_dark_200';\nimport { global_BackgroundColor_light_100 as lightEditorBackground } from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport { global_Color_dark_100 as globalColorDark100 } from '@patternfly/react-tokens/dist/js/global_Color_dark_100';\nimport { global_Color_light_100 as globalColorLight100 } from '@patternfly/react-tokens/dist/js/global_Color_light_100';\n\n(window as any).monaco.editor.defineTheme('console-light', {\n  base: 'vs',\n  inherit: true,\n  colors: {\n    'editor.background': lightEditorBackground.value,\n    'editorGutter.background': '#f5f5f5', // black-150\n    'editorLineNumber.activeForeground': globalColorDark100.value,\n    'editorLineNumber.foreground': globalBackgroundDark200.value,\n  },\n  rules: [\n    { token: 'number', foreground: '486b00' }, // light-green-600\n    { token: 'type', foreground: '795600' }, // gold-500\n    { token: 'string', foreground: '004080' }, // blue-600\n    { token: 'keyword', foreground: '40199a' }, // purple-600\n  ],\n});\n\n(window as any).monaco.editor.defineTheme('console-dark', {\n  base: 'vs-dark',\n  inherit: true,\n  colors: {\n    'editor.background': darkEditorBackground.value,\n    'editorGutter.background': '#292e34', // no pf token defined\n    'editorLineNumber.activeForeground': globalColorLight100.value,\n    'editorLineNumber.foreground': globalBackground200.value,\n  },\n  rules: [\n    { token: 'number', foreground: 'ace12e' }, // light-green-600\n    { token: 'type', foreground: '73bcf7' }, // blue-200\n    { token: 'string', foreground: 'f0ab00' }, // gold-400\n    { token: 'keyword', foreground: 'cbc1ff' }, // purple-100\n  ],\n});\n","import { RootState } from '../redux';\n\nexport enum ActionType {\n  OpenOLS = 'openOLS',\n  CloseOLS = 'closeOLS',\n}\n\ntype CodeBlock = {\n  id: string;\n  value: string;\n};\n\n/* Note: Using Reducer and Selector from OLS plugin */\nexport const getOLSCodeBlock = ({ plugins }: RootState): CodeBlock =>\n  plugins?.ols?.get('codeBlock');\n","import * as React from 'react';\nimport { Button, Divider } from '@patternfly/react-core';\nimport { MagicIcon } from '@patternfly/react-icons';\nimport { useTranslation } from 'react-i18next';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore: FIXME missing exports due to out-of-sync @types/react-redux version\nimport { useDispatch } from 'react-redux';\nimport { action } from 'typesafe-actions';\nimport { ActionType } from '@console/internal/reducers/ols';\nimport { useOLSConfig } from '../../hooks/ols-hook';\nimport { isMac, ShortcutCommand } from '../shortcuts/Shortcut';\nimport ShortcutsLink from './ShortcutsLink';\n\nimport './CodeEditorToolbar.scss';\n\ninterface CodeEditorToolbarProps {\n  showShortcuts?: boolean;\n  toolbarLinks?: React.ReactNodeArray;\n}\n\nconst CodeEditorToolbar: React.FC<CodeEditorToolbarProps> = ({ showShortcuts, toolbarLinks }) => {\n  const { t } = useTranslation();\n  const openOLS = () => action(ActionType.OpenOLS);\n  const showLightspeedButton = useOLSConfig();\n  const dispatch = useDispatch();\n  if (!showShortcuts && !toolbarLinks?.length) return null;\n  return (\n    <div className=\"co-toolbar__group co-toolbar__group--right\">\n      <div className=\"ocs-yaml-editor-toolbar pf-v5-u-pb-sm pf-v5-l-flex\">\n        {showLightspeedButton && (\n          <div className=\"ocs-yaml-editor-toolbar__link pf-v5-l-flex\">\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => {\n                dispatch(openOLS());\n              }}\n              icon={<MagicIcon />}\n            >\n              {t('console-shared~Ask OpenShift Lightspeed')}\n            </Button>\n            <Divider\n              orientation={{\n                default: 'vertical',\n              }}\n            />\n          </div>\n        )}\n        <div className=\"ocs-yaml-editor-toolbar__link\">\n          <div>\n            <span className=\"ocs-yaml-editor-shortcut__command\">\n              <ShortcutCommand>{isMac ? '⌥ Opt' : 'Alt'}</ShortcutCommand>\n              <ShortcutCommand>F1</ShortcutCommand>\n            </span>\n            <span className=\"ocs-yaml-editor-shortcut__text\">\n              {t('console-shared~Accessibility help')}\n            </span>\n          </div>\n        </div>\n        {showShortcuts && (\n          <div className=\"ocs-yaml-editor-toolbar__link pf-v5-l-flex\">\n            <Divider\n              orientation={{\n                default: 'vertical',\n              }}\n            />\n            <ShortcutsLink />\n          </div>\n        )}\n        {toolbarLinks &&\n          toolbarLinks.map((link, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <div key={`${index}`} className=\"ocs-yaml-editor-toolbar__link pf-v5-l-flex\">\n              {(showShortcuts || index > 0) && link ? (\n                <Divider\n                  orientation={{\n                    default: 'vertical',\n                  }}\n                />\n              ) : null}\n              <div className=\"ocs-yaml-editor-toolbar__link\">{link}</div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default CodeEditorToolbar;\n","import { K8sKind, K8sResourceKind } from '@console/dynamic-plugin-sdk/src';\nimport { useK8sGet } from '@console/internal/components/utils/k8s-get-hook';\n\nconst OLSConfigModel: K8sKind = {\n  apiGroup: 'ols.openshift.io',\n  apiVersion: 'v1alpha1',\n  label: 'OLSConfig',\n  // t('console-shared~OLSConfig')\n  labelKey: 'console-shared~OLSConfig',\n  // t('console-shared~OLSConfigs')\n  labelPluralKey: 'console-shared~OLSConfigs',\n  plural: 'olsconfigs',\n  abbr: 'OLSC',\n  namespaced: false,\n  kind: 'OLSConfig',\n  id: 'olsconfig',\n  labelPlural: 'OLSConfigs',\n  crd: true,\n};\n\nconst OLSCONFIG_INSTANCE = 'cluster';\n\nexport const useOLSConfig = (): boolean => {\n  const [, loaded, err] = useK8sGet<K8sResourceKind>(OLSConfigModel, OLSCONFIG_INSTANCE);\n  return loaded && !err;\n};\n","import * as React from 'react';\nimport { Popover, Button } from '@patternfly/react-core';\nimport { QuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport { useTranslation } from 'react-i18next';\nimport { ShortcutTable, Shortcut } from '../shortcuts';\nimport { isMac } from '../shortcuts/Shortcut';\n\ninterface ShortcutsLinkProps {\n  onHideShortcuts?: () => {};\n}\n\nconst ShortcutsLink: React.FC<ShortcutsLinkProps> = ({ onHideShortcuts }) => {\n  const { t } = useTranslation();\n  return (\n    <Popover\n      aria-label={t('console-shared~Shortcuts')}\n      bodyContent={\n        <ShortcutTable>\n          <Shortcut alt keyName=\"F1\">\n            {t('console-shared~Accessibility help')}\n          </Shortcut>\n          <Shortcut keyName=\"F1\">{t('console-shared~View all editor shortcuts')}</Shortcut>\n          <Shortcut ctrl keyName=\"space\">\n            {t('console-shared~Activate auto complete')}\n          </Shortcut>\n          <Shortcut ctrl shift={isMac} keyName=\"m\">\n            {t(\n              'console-shared~Toggle Tab action between insert Tab character and move focus out of editor',\n            )}\n          </Shortcut>\n          <Shortcut ctrlCmd shift keyName=\"o\">\n            {t('console-shared~View document outline')}\n          </Shortcut>\n          <Shortcut hover>{t('console-shared~View property descriptions')}</Shortcut>\n          <Shortcut ctrlCmd keyName=\"s\">\n            {t('console-shared~Save')}\n          </Shortcut>\n        </ShortcutTable>\n      }\n      maxWidth=\"25rem\"\n      distance={18}\n      onHide={onHideShortcuts}\n    >\n      <Button type=\"button\" variant=\"link\" isInline>\n        <QuestionCircleIcon className=\"co-icon-space-r co-p-has-sidebar__sidebar-link-icon\" />\n        {t('console-shared~View shortcuts')}\n      </Button>\n    </Popover>\n  );\n};\n\nexport default ShortcutsLink;\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport { Breadcrumb, BreadcrumbItem, Button, TextContent } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { CamelCaseWrap } from '@console/dynamic-plugin-sdk';\nimport {\n  getDefinitionKey,\n  getSwaggerPath,\n  K8sKind,\n  SwaggerDefinition,\n  SwaggerDefinitions,\n  fetchSwagger,\n} from '../../module/k8s';\nimport { EmptyBox, LinkifyExternal } from '../utils';\n\nconst getRef = (definition: SwaggerDefinition): string => {\n  const ref = definition.$ref || _.get(definition, 'items.$ref');\n  const re = /^#\\/definitions\\//;\n  // Only follow JSON pointers, not external URI references.\n  return ref && re.test(ref) ? ref.replace(re, '') : null;\n};\n\nexport const ExploreType: React.FC<ExploreTypeProps> = (props) => {\n  // Track the previously selected items to build breadcrumbs. Each history\n  // entry contains the name, description, and path to the definition in the\n  // OpenAPI document.\n  const [drilldownHistory, setDrilldownHistory] = React.useState([]);\n  const { kindObj, schema } = props;\n  const { t } = useTranslation();\n  const [allDefinitions, setAllDefinitions] = React.useState<SwaggerDefinitions>(null);\n\n  React.useEffect(() => {\n    if (kindObj) {\n      fetchSwagger()\n        .then((response) => {\n          setAllDefinitions(response);\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('Could not fetch swagger definitions', err);\n        });\n    } else if (schema) {\n      setAllDefinitions({ 'custom-schema': schema });\n    }\n  }, [kindObj, schema]);\n\n  if (!kindObj && !schema) {\n    return null;\n  }\n\n  if (!allDefinitions) {\n    return null;\n  }\n  const currentSelection = _.last(drilldownHistory);\n  // Show the current selected property or the top-level definition for the kind.\n  const currentPath = currentSelection\n    ? currentSelection.path\n    : [kindObj ? getDefinitionKey(kindObj, allDefinitions) : 'custom-schema'];\n  const currentDefinition: SwaggerDefinition = _.get(allDefinitions, currentPath);\n  const currentProperties =\n    currentDefinition?.properties ||\n    currentDefinition?.items?.properties ||\n    currentDefinition?.definitions;\n\n  // Prefer the description saved in `currentSelection`. It won't always be defined in the definition itself.\n  const description = currentSelection\n    ? currentSelection?.description\n    : currentDefinition?.description;\n  const required = new Set(currentDefinition?.required || []);\n  const kindLabel = kindObj?.labelKey ? t(kindObj.labelKey) : kindObj?.kind;\n  const breadcrumbs = drilldownHistory.length\n    ? [kindObj ? kindLabel : t('public~Schema'), ..._.map(drilldownHistory, 'name')]\n    : [];\n\n  const drilldown = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    name: string,\n    desc: string,\n    path: string[],\n  ) => {\n    e.preventDefault();\n    setDrilldownHistory([...drilldownHistory, { name, description: desc, path }]);\n    if (props.scrollTop) {\n      props.scrollTop();\n    }\n  };\n\n  const breadcrumbClicked = (e: React.MouseEvent<HTMLButtonElement>, i: number) => {\n    e.preventDefault();\n    setDrilldownHistory(_.take(drilldownHistory, i));\n  };\n\n  // Get the path in the swagger document to additional property details for drilldown.\n  // This can be\n  // - A reference to another top-level definition\n  // - Inline property declartions\n  // - Inline property declartions for array items\n  const getDrilldownPath = (name: string): string[] => {\n    const path = kindObj\n      ? currentDefinition.items\n        ? getSwaggerPath(allDefinitions, [...currentPath, 'items'], name, true)\n        : getSwaggerPath(allDefinitions, currentPath, name, true)\n      : [...currentPath, 'properties', name];\n\n    // Only allow drilldown if the reference has additional properties to explore.\n    const child = _.get(allDefinitions, path) as SwaggerDefinition;\n    return _.has(child, 'properties') || _.has(child, 'items.properties') ? path : null;\n  };\n\n  // Get the type to display for a property reference.\n  const getTypeForRef = (ref: string): string =>\n    _.get(allDefinitions, [ref, 'format']) || _.get(allDefinitions, [ref, 'type']);\n\n  return (\n    <>\n      {!_.isEmpty(breadcrumbs) && (\n        <Breadcrumb className=\"co-breadcrumb co-break-word\">\n          {breadcrumbs.map((crumb, i) => {\n            const isLast = i === breadcrumbs.length - 1;\n            return (\n              <BreadcrumbItem key={i} isActive={isLast}>\n                {isLast ? (\n                  crumb\n                ) : (\n                  <Button\n                    type=\"button\"\n                    onClick={(e) => breadcrumbClicked(e, i)}\n                    isInline\n                    variant=\"link\"\n                  >\n                    {crumb}\n                  </Button>\n                )}\n              </BreadcrumbItem>\n            );\n          })}\n        </Breadcrumb>\n      )}\n      <TextContent>\n        {description && (\n          <p className=\"co-break-word co-pre-wrap\">\n            <LinkifyExternal>{description}</LinkifyExternal>\n          </p>\n        )}\n        {_.isEmpty(currentProperties) ? (\n          <EmptyBox label={t('public~Properties')} />\n        ) : (\n          <ul className=\"co-resource-sidebar-list pf-v5-c-list\">\n            {_.map(currentProperties, (definition: SwaggerDefinition, name: string) => {\n              const path = getDrilldownPath(name);\n              const definitionType = definition.type || getTypeForRef(getRef(definition));\n              const definitionTypeStr = Array.isArray(definitionType)\n                ? definitionType.join(' ')\n                : definitionType;\n\n              return (\n                <li key={name} className=\"co-resource-sidebar-item\">\n                  <h5 className=\"co-resource-sidebar-item__header co-break-word\">\n                    <CamelCaseWrap value={name} />\n                    &nbsp;\n                    <small>\n                      <span className=\"co-break-word\">{definitionTypeStr}</span>\n                      {required.has(name) && <> &ndash; required</>}\n                    </small>\n                  </h5>\n                  {definition.description && (\n                    <p className=\"co-break-word co-pre-wrap\">\n                      <LinkifyExternal>{definition.description}</LinkifyExternal>\n                    </p>\n                  )}\n                  {path && (\n                    <Button\n                      type=\"button\"\n                      onClick={(e) => drilldown(e, name, definition.description, path)}\n                      isInline\n                      variant=\"link\"\n                    >\n                      {t('public~View details')}\n                    </Button>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </TextContent>\n    </>\n  );\n};\n\ntype ExploreTypeProps = {\n  kindObj: K8sKind;\n  schema?: any;\n  scrollTop?: () => void;\n};\n","import * as URL from 'url';\nimport { Uri, Range } from 'monaco-editor';\nimport {\n  MonacoToProtocolConverter,\n  ProtocolToMonacoConverter,\n} from 'monaco-languageclient/lib/monaco-converter';\nimport * as yaml from 'yaml-ast-parser';\nimport { getLanguageService, TextDocument } from 'yaml-language-server';\nimport { openAPItoJSONSchema } from '@console/internal/module/k8s/openapi-to-json-schema';\nimport { getSwaggerDefinitions } from '@console/internal/module/k8s/swagger';\n\nexport const defaultEditorOptions = { readOnly: false, scrollBeyondLastLine: false };\n\nconst MODEL_URI = 'inmemory://model.yaml';\nconst MONACO_URI = Uri.parse(MODEL_URI);\n\nconst createDocument = (model) => {\n  return TextDocument.create(\n    MODEL_URI,\n    model?.getModeId(),\n    model?.getVersionId(),\n    model?.getValue(),\n  );\n};\n\n// Unfortunately, `editor.focus()` doesn't work when hiding the shortcuts\n// popover. We need to find the actual DOM element.\nexport const hackyFocusEditor = () =>\n  setTimeout(() => document.querySelector<any>('.monaco-editor textarea')?.focus());\n\nexport const registerYAMLLanguage = (monaco) => {\n  // register the YAML language with Monaco\n  monaco.languages.register({\n    id: 'yaml',\n    extensions: ['.yml', '.yaml'],\n    aliases: ['YAML', 'yaml'],\n    mimetypes: ['application/yaml'],\n  });\n};\n\nexport const createYAMLService = () => {\n  const resolveSchema = (url: string): Promise<string> => {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = () => resolve(xhr.responseText);\n      xhr.onerror = () => reject(xhr.statusText);\n      xhr.open('GET', url, true);\n      xhr.send();\n    });\n    return promise as Promise<string>;\n  };\n\n  const workspaceContext = {\n    resolveRelativePath: (relativePath, resource) => URL.resolve(resource, relativePath),\n  };\n\n  const yamlService = getLanguageService(resolveSchema, workspaceContext);\n\n  // Prepare the schema\n  const yamlOpenAPI = getSwaggerDefinitions();\n\n  // Convert the openAPI schema to something the language server understands\n  const kubernetesJSONSchema = openAPItoJSONSchema(yamlOpenAPI);\n\n  const schemas = [\n    {\n      uri: 'inmemory:yaml',\n      fileMatch: ['*'],\n      schema: kubernetesJSONSchema,\n    },\n  ];\n  yamlService.configure({\n    validate: true,\n    schemas,\n    hover: true,\n    completion: true,\n  });\n  return yamlService;\n};\n\nexport const registerYAMLCompletion = (languageID, monaco, m2p, p2m, yamlService) => {\n  monaco.languages.registerCompletionItemProvider(languageID, {\n    provideCompletionItems(model, position) {\n      const document = createDocument(model);\n      return yamlService\n        .doComplete(document, m2p.asPosition(position.lineNumber, position.column), true)\n        .then((list) => {\n          return p2m.asCompletionResult(list);\n        });\n    },\n  });\n};\n\nexport const registerYAMLDocumentSymbols = (languageID, monaco, p2m, yamlService) => {\n  monaco.languages.registerDocumentSymbolProvider(languageID, {\n    provideDocumentSymbols(model) {\n      const document = createDocument(model);\n      return p2m.asSymbolInformations(yamlService.findDocumentSymbols(document));\n    },\n  });\n};\n\nexport const registerYAMLHover = (languageID, monaco, m2p, p2m, yamlService) => {\n  monaco.languages.registerHoverProvider(languageID, {\n    provideHover(model, position) {\n      const doc = createDocument(model);\n      return yamlService\n        .doHover(doc, m2p.asPosition(position.lineNumber, position.column), true)\n        .then((hover) => {\n          return p2m.asHover(hover);\n        })\n        .then((e) => {\n          for (const el of <any>document.getElementsByClassName('monaco-editor-hover')) {\n            el.onclick = (event) => event.preventDefault();\n            el.onauxclick = (event) => {\n              window.open(event.target.getAttribute('data-href'), '_blank').opener = null;\n              event.preventDefault();\n            };\n          }\n          return e;\n        });\n    },\n  });\n};\n\nconst findManagedMetadata = (model) => {\n  const document = createDocument(model);\n  const doc = yaml.safeLoad(document.getText());\n  const rootMappings = doc?.mappings || [];\n  for (const rootElement of rootMappings) {\n    const rootKey = rootElement.key;\n    const rootValue = rootElement.value;\n\n    // Search for metadata\n    if (rootKey.value === 'metadata') {\n      const metadataMappings = rootValue.mappings || [];\n      for (const metadataChildren of metadataMappings) {\n        const childKey = metadataChildren.key;\n\n        // Search for managedFields\n        if (childKey.value === 'managedFields') {\n          const startLine = document.positionAt(metadataChildren.startPosition).line + 1;\n          const endLine = document.positionAt(metadataChildren.endPosition).line;\n          return {\n            start: startLine,\n            end: endLine,\n          };\n        }\n      }\n    }\n  }\n  return {\n    start: -1,\n    end: -1,\n  };\n};\n\nexport const fold = (editor, model, resetMouseLocation: boolean): void => {\n  const managedLocation = findManagedMetadata(model);\n  const { start } = managedLocation;\n  const { end } = managedLocation;\n\n  if (start >= 0 && end >= 0) {\n    const top = editor.getScrollTop();\n    editor.setSelection(new Range(start, 0, end, 0));\n    editor\n      .getAction('editor.fold')\n      .run()\n      .then(() => {\n        if (resetMouseLocation) {\n          editor.setSelection(new Range(0, 0, 0, 0));\n        }\n        editor.setScrollTop(Math.abs(top));\n      })\n      .catch(() => {});\n  }\n};\n\n// TODO: These functions are not part of React Component LifeCycle, will need refactoring\nexport const enableYAMLValidation = (\n  editor,\n  monaco,\n  p2m,\n  monacoURI,\n  yamlService,\n  alreadyInUse: boolean = false,\n) => {\n  const pendingValidationRequests = new Map();\n\n  const getModel = () => monaco.editor?.getModels()[0];\n\n  const cleanPendingValidation = (document) => {\n    const request = pendingValidationRequests.get(document.uri);\n    if (request !== undefined) {\n      clearTimeout(request);\n      pendingValidationRequests.delete(document.uri);\n    }\n  };\n\n  const cleanDiagnostics = () =>\n    monaco.editor.setModelMarkers(monaco.editor.getModel(monacoURI), 'default', []);\n\n  const doValidate = (document) => {\n    if (document.getText().length === 0) {\n      cleanDiagnostics();\n      return;\n    }\n    yamlService\n      .doValidation(document, true)\n      .then((diagnostics) => {\n        const markers = p2m.asDiagnostics(diagnostics);\n        monaco.editor.setModelMarkers(getModel(), 'default', markers);\n      })\n      .catch(() => {});\n  };\n\n  let initialFoldingTriggered = false;\n  const tryFolding = () => {\n    const document = createDocument(getModel());\n    if (!initialFoldingTriggered && document.getText() !== '') {\n      setTimeout(() => fold(editor, getModel(), true));\n      initialFoldingTriggered = true;\n    }\n  };\n  if (alreadyInUse) {\n    tryFolding();\n  }\n\n  getModel()?.onDidChangeContent(() => {\n    tryFolding();\n\n    const document = createDocument(getModel());\n    cleanPendingValidation(document);\n    pendingValidationRequests.set(\n      document.uri,\n      setTimeout(() => {\n        pendingValidationRequests.delete(document.uri);\n        doValidate(document);\n      }),\n    );\n  });\n};\n\nexport const registerYAMLinMonaco = (editor, monaco, alreadyInUse: boolean = false) => {\n  const LANGUAGE_ID = 'yaml';\n\n  const m2p = new MonacoToProtocolConverter();\n  const p2m = new ProtocolToMonacoConverter();\n\n  const yamlService = createYAMLService();\n\n  // validation is not a 'registered' feature like the others, it relies on calling the yamlService\n  // directly for validation results when content in the editor has changed\n  enableYAMLValidation(editor, monaco, p2m, MONACO_URI, yamlService, alreadyInUse);\n\n  /**\n   * This exists because react-monaco-editor passes the same monaco\n   * object each time. Without it you would be registering all the features again and\n   * getting duplicate results.\n   *\n   * Monaco does not provide any apis for unregistering or checking if the features have already\n   * been registered for a language.\n   *\n   * We check that > 1 YAML language exists because one is the default and one is the initial register\n   * that setups our features.\n   */\n  if (monaco.languages.getLanguages().filter((x) => x.id === LANGUAGE_ID).length > 1) {\n    return;\n  }\n\n  registerYAMLLanguage(monaco); // register the YAML language with monaco\n  registerYAMLCompletion(LANGUAGE_ID, monaco, m2p, p2m, yamlService);\n  registerYAMLDocumentSymbols(LANGUAGE_ID, monaco, p2m, yamlService);\n  registerYAMLHover(LANGUAGE_ID, monaco, m2p, p2m, yamlService);\n};\n","// contains all the relevant information for transforming openapi specifications (such as kuberneres openapi)\n// to json schemas\n\ninterface GroupVersionKind {\n  kind: string;\n  version: string;\n  group: string;\n}\n\n/**\n * Given an array of GroupVersionKind objects, return their JSON Schema representation as enums\n */\nfunction groupVersionKindToEnums(gvkObjArray: [GroupVersionKind]) {\n  const versionEnum = [];\n  const kindEnum = [];\n  for (const gvkObj of gvkObjArray) {\n    if (gvkObj.group && gvkObj.version) {\n      versionEnum.push(`${gvkObj.group}/${gvkObj.version}`);\n    } else if (gvkObj.version) {\n      versionEnum.push(gvkObj.version);\n    }\n    if (gvkObj.kind) {\n      kindEnum.push(gvkObj.kind);\n    }\n  }\n  return {\n    versionEnum,\n    kindEnum,\n  };\n}\n\n/**\n * Append enums to APIVersion or create the object if it doesn't exist\n */\nfunction createOrAppendAPIVersion(openAPI, apiVersionEnum: string[]) {\n  if (openAPI.apiVersion) {\n    if (openAPI.apiVersion.enum) {\n      openAPI.apiVersion.enum.push(...apiVersionEnum);\n    } else {\n      openAPI.apiVersion.enum = apiVersionEnum;\n    }\n  } else {\n    openAPI.apiVersion = {\n      enum: apiVersionEnum,\n    };\n  }\n}\n\n/**\n * Append enums to kind or create the object if it doesn't exist\n */\nfunction createOrAppendKind(openAPI, kindEnum: string[]) {\n  if (openAPI.kind) {\n    if (openAPI.kind.enum) {\n      openAPI.kind.enum.push(...kindEnum);\n    } else {\n      openAPI.kind.enum = kindEnum;\n    }\n  } else {\n    openAPI.kind = {\n      enum: kindEnum,\n    };\n  }\n}\n\n/**\n * Converts the openAPI kubernetes specification for group, version, kind to JSON Schema\n *\n * Context: The openAPI specification gives the group, version, and kind objects as 'x-kubernetes-group-version-kind'\n * instead of adding the values to the enum's\n */\nfunction convertGroupVersionKindToJSONSchema(openAPI) {\n  for (const definition in openAPI) {\n    if (openAPI.hasOwnProperty(definition)) {\n      const openAPIDefinition = openAPI[definition];\n      const groupVersionKind = openAPIDefinition['x-kubernetes-group-version-kind'];\n\n      // If this object has x-kubernetes-group-version-kind then add their values into correct places in JSON Schema\n      if (groupVersionKind && openAPIDefinition.properties) {\n        const gvkEnums = groupVersionKindToEnums(groupVersionKind);\n        createOrAppendAPIVersion(openAPIDefinition.properties, gvkEnums.versionEnum);\n        createOrAppendKind(openAPIDefinition.properties, gvkEnums.kindEnum);\n      }\n    }\n  }\n  return openAPI;\n}\n\n/**\n * Takes in the stored kubernetes openAPI object and outputs a JSON Schema of the object\n */\nexport function openAPItoJSONSchema(openAPI) {\n  if (!openAPI) {\n    return null;\n  }\n\n  const convertedOpenAPI = convertGroupVersionKindToJSONSchema(openAPI);\n\n  const oneOfSchemas = [];\n  const openAPIDefinitions = {};\n  for (const schemaProperty in convertedOpenAPI) {\n    if (convertedOpenAPI.hasOwnProperty(schemaProperty)) {\n      openAPIDefinitions[schemaProperty] = convertedOpenAPI[schemaProperty];\n      oneOfSchemas.push({\n        $ref: `#/definitions/${schemaProperty}`,\n      });\n    }\n  }\n\n  return {\n    definitions: {\n      ...openAPIDefinitions,\n    },\n    oneOf: oneOfSchemas,\n  };\n}\n","import * as _ from 'lodash';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CloseButton from '@console/shared/src/components/close-button';\n\nimport { definitionFor, K8sKind } from '../../module/k8s';\nimport {\n  ResourceSidebarSnippets,\n  ResourceSidebarSamples,\n  LoadSampleYaml,\n  DownloadSampleYaml,\n} from './resource-sidebar-samples';\nimport { ExploreType } from './explore-type-sidebar';\nimport { SimpleTabNav, Tab } from '../utils';\nimport { Sample } from '@console/shared';\n\nconst sidebarScrollTop = () => {\n  document.getElementsByClassName('co-p-has-sidebar__sidebar')[0].scrollTop = 0;\n};\n\nconst ResourceSidebarWrapper: React.FC<{\n  label: string;\n  toggleSidebar: () => void;\n}> = (props) => {\n  const { t } = useTranslation();\n  const { label, children, toggleSidebar } = props;\n\n  return (\n    <div\n      className=\"co-p-has-sidebar__sidebar co-p-has-sidebar__sidebar--bordered hidden-sm hidden-xs\"\n      data-test=\"resource-sidebar\"\n    >\n      <div className=\"co-m-pane__body co-p-has-sidebar__sidebar-body\">\n        <CloseButton\n          additionalClassName=\"co-p-has-sidebar__close-button\"\n          ariaLabel={t('public~Close')}\n          onClick={toggleSidebar}\n        />\n        <h2 className=\"co-p-has-sidebar__sidebar-heading text-capitalize\">{label}</h2>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst ResourceSchema: React.FC<{ kindObj: K8sKind; schema: any }> = ({ kindObj, schema }) => (\n  <ExploreType kindObj={kindObj} schema={schema} scrollTop={sidebarScrollTop} />\n);\n\nconst ResourceSamples: React.FC<{\n  samples: Sample[];\n  loadSampleYaml: LoadSampleYaml;\n  downloadSampleYaml: DownloadSampleYaml;\n  kindObj: K8sKind;\n}> = ({ samples, kindObj, downloadSampleYaml, loadSampleYaml }) => (\n  <ResourceSidebarSamples\n    samples={samples}\n    kindObj={kindObj}\n    downloadSampleYaml={downloadSampleYaml}\n    loadSampleYaml={loadSampleYaml}\n  />\n);\n\nconst ResourceSnippets: React.FC<{\n  snippets: Sample[];\n  insertSnippetYaml(id: string, yaml: string, reference: string);\n}> = ({ snippets, insertSnippetYaml }) => (\n  <ResourceSidebarSnippets snippets={snippets} insertSnippetYaml={insertSnippetYaml} />\n);\n\nexport const ResourceSidebar: React.FC<{\n  kindObj: K8sKind;\n  downloadSampleYaml: DownloadSampleYaml;\n  schema: any;\n  sidebarLabel: string;\n  loadSampleYaml: LoadSampleYaml;\n  insertSnippetYaml: (id: string, yaml: string, reference: string) => void;\n  toggleSidebar: () => void;\n  samples: Sample[];\n  snippets: Sample[];\n}> = (props) => {\n  const { t } = useTranslation();\n  const {\n    downloadSampleYaml,\n    kindObj,\n    schema,\n    sidebarLabel,\n    loadSampleYaml,\n    insertSnippetYaml,\n    toggleSidebar,\n    samples,\n    snippets,\n  } = props;\n  if (!kindObj && !schema) {\n    return null;\n  }\n\n  const kindLabel = kindObj?.labelKey ? t(kindObj.labelKey) : kindObj?.label;\n  const label = sidebarLabel ? sidebarLabel : kindLabel;\n\n  const showSamples = !_.isEmpty(samples);\n  const showSnippets = !_.isEmpty(snippets);\n\n  const definition = kindObj ? definitionFor(kindObj) : { properties: [] };\n  const showSchema = schema || (definition && !_.isEmpty(definition.properties));\n\n  let tabs: Tab[] = [];\n  if (showSamples) {\n    tabs.push({\n      name: t('public~Samples'),\n      component: ResourceSamples,\n    });\n  }\n  if (showSnippets) {\n    tabs.push({\n      name: t('public~Snippets'),\n      component: ResourceSnippets,\n    });\n  }\n  if (showSchema) {\n    tabs = [\n      {\n        name: t('public~Schema'),\n        component: ResourceSchema,\n      },\n      ...tabs,\n    ];\n  }\n\n  return (\n    <ResourceSidebarWrapper label={label} toggleSidebar={toggleSidebar}>\n      {tabs.length > 0 ? (\n        <SimpleTabNav\n          tabs={tabs}\n          tabProps={{\n            downloadSampleYaml,\n            kindObj,\n            schema,\n            loadSampleYaml,\n            insertSnippetYaml,\n            samples,\n            snippets,\n          }}\n          additionalClassNames=\"co-m-horizontal-nav__menu--within-sidebar\"\n        />\n      ) : (\n        <ResourceSchema schema={schema} kindObj={kindObj} />\n      )}\n    </ResourceSidebarWrapper>\n  );\n};\n","import * as _ from 'lodash-es';\nimport * as React from 'react';\nimport { Button, Level, LevelItem } from '@patternfly/react-core';\nimport MonacoEditor from 'react-monaco-editor';\nimport { ThemeContext } from '@console/internal/components/ThemeProvider';\nimport { ChevronDownIcon } from '@patternfly/react-icons/dist/esm/icons/chevron-down-icon';\nimport { ChevronRightIcon } from '@patternfly/react-icons/dist/esm/icons/chevron-right-icon';\nimport { DownloadIcon } from '@patternfly/react-icons/dist/esm/icons/download-icon';\nimport { PasteIcon } from '@patternfly/react-icons/dist/esm/icons/paste-icon';\nimport { Sample } from '@console/shared';\nimport { useTranslation } from 'react-i18next';\n\nimport { K8sKind, referenceFor } from '../../module/k8s';\nimport { FirehoseResult } from '../utils';\n\nconst ResourceSidebarSample: React.FC<ResourceSidebarSampleProps> = ({\n  sample,\n  loadSampleYaml,\n  downloadSampleYaml,\n}) => {\n  const { highlightText, title, img, description, id, yaml, targetResource } = sample;\n  const reference = referenceFor(targetResource);\n  const { t } = useTranslation();\n  return (\n    <li className=\"co-resource-sidebar-item\">\n      <h3 className=\"h4\">\n        <span className=\"text-uppercase\">{highlightText}</span> {title}\n      </h3>\n      {img && <img src={img} className=\"co-resource-sidebar-item__img img-responsive\" />}\n      <p>{description}</p>\n      <Level>\n        <LevelItem>\n          <Button\n            type=\"button\"\n            variant=\"link\"\n            data-test=\"load-sample\"\n            isInline\n            onClick={() => loadSampleYaml(id, yaml, reference)}\n          >\n            <PasteIcon className=\"co-icon-space-r\" />\n            {t('public~Try it')}\n          </Button>\n        </LevelItem>\n        <LevelItem>\n          <Button\n            type=\"button\"\n            variant=\"link\"\n            data-test=\"download-sample\"\n            isInline\n            onClick={() => downloadSampleYaml(id, yaml, reference)}\n          >\n            <DownloadIcon className=\"co-icon-space-r\" />\n            {t('public~Download YAML')}\n          </Button>\n        </LevelItem>\n      </Level>\n    </li>\n  );\n};\n\nconst lineHeight = 18;\nconst PreviewYAML = ({ maxPreviewLines = 20, yaml }) => {\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <div style={{ paddingTop: 10 }}>\n      <MonacoEditor\n        height={Math.min(yaml.split('\\n').length, maxPreviewLines) * lineHeight}\n        language=\"yaml\"\n        value={yaml}\n        theme={theme === 'light' ? 'console-light' : 'console-dark'}\n        options={{\n          lineHeight,\n          readOnly: true,\n          folding: false,\n          minimap: { enabled: false },\n          scrollBeyondLastLine: false,\n        }}\n      />\n    </div>\n  );\n};\n\ninterface ResourceSidebarSnippetProps {\n  snippet: Sample;\n  insertSnippetYaml: (id: string, yaml: string, reference: string) => void;\n}\n\nconst ResourceSidebarSnippet: React.FC<ResourceSidebarSnippetProps> = ({\n  snippet,\n  insertSnippetYaml,\n}) => {\n  const { highlightText, title, id, yaml, lazyYaml, targetResource, description } = snippet;\n\n  const [yamlPreview, setYamlPreview] = React.useState<string>(yaml);\n  const [yamlPreviewOpen, setYamlPreviewOpen] = React.useState(false);\n\n  const resolveYaml = async (callback: (resolvedYaml: string) => void) => {\n    if (yaml) {\n      callback(yaml);\n    } else if (lazyYaml) {\n      try {\n        callback(await lazyYaml());\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(`Error while running lazy yaml snippet ${id} (${title})`, error);\n      }\n    }\n  };\n\n  const insertSnippet = () => {\n    const reference = referenceFor(targetResource);\n    resolveYaml((resolvedYaml) => insertSnippetYaml(id, resolvedYaml, reference));\n  };\n\n  const toggleYamlPreview = () => {\n    setYamlPreviewOpen((open) => !open);\n    if (!yamlPreview && !yamlPreviewOpen) {\n      resolveYaml((resolvedYaml) => setYamlPreview(resolvedYaml));\n    }\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <li className=\"co-resource-sidebar-item\">\n      <h3 className=\"h4\">\n        <span className=\"text-uppercase\">{highlightText}</span> {title}\n      </h3>\n      <p>{description}</p>\n      <Level>\n        <LevelItem>\n          <Button type=\"button\" variant=\"link\" isInline onClick={insertSnippet}>\n            <PasteIcon className=\"co-icon-space-r\" />\n            {t('public~Insert snippet')}\n          </Button>\n        </LevelItem>\n        <LevelItem>\n          <Button type=\"button\" variant=\"link\" isInline onClick={toggleYamlPreview}>\n            {yamlPreviewOpen ? (\n              <>\n                {t('public~Hide YAML')}\n                <ChevronDownIcon className=\"co-icon-space-l\" />\n              </>\n            ) : (\n              <>\n                {t('public~Show YAML')}\n                <ChevronRightIcon className=\"co-icon-space-l\" />\n              </>\n            )}\n          </Button>\n        </LevelItem>\n      </Level>\n      {yamlPreviewOpen && yamlPreview && <PreviewYAML yaml={yamlPreview} />}\n    </li>\n  );\n};\n\ninterface ResourceSidebarSnippetsProps {\n  snippets: Sample[];\n  insertSnippetYaml(id: string, yaml: string, reference: string);\n}\n\nexport const ResourceSidebarSnippets: React.FC<ResourceSidebarSnippetsProps> = ({\n  snippets,\n  insertSnippetYaml,\n}) => {\n  return (\n    <ul className=\"co-resource-sidebar-list\" style={{ listStyle: 'none', paddingLeft: 0 }}>\n      {_.map(_.sortBy(snippets, 'title'), (snippet) => (\n        <ResourceSidebarSnippet\n          key={snippet.id}\n          snippet={snippet}\n          insertSnippetYaml={insertSnippetYaml}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport const ResourceSidebarSamples: React.FC<ResourceSidebarSamplesProps> = ({\n  samples,\n  loadSampleYaml,\n  downloadSampleYaml,\n}) => {\n  return (\n    <ol className=\"co-resource-sidebar-list\" data-test=\"resource-samples-list\">\n      {_.map(_.sortBy(samples, 'title'), (sample) => (\n        <ResourceSidebarSample\n          key={sample.id}\n          sample={sample}\n          loadSampleYaml={loadSampleYaml}\n          downloadSampleYaml={downloadSampleYaml}\n        />\n      ))}\n    </ol>\n  );\n};\n\nexport type LoadSampleYaml = (id: string, yaml: string, kind: string) => void;\n\nexport type DownloadSampleYaml = (id: string, yaml: string, kind: string) => void;\n\ntype ResourceSidebarSampleProps = {\n  sample: Sample;\n  loadSampleYaml: LoadSampleYaml;\n  downloadSampleYaml: DownloadSampleYaml;\n};\n\ntype ResourceSidebarSamplesProps = {\n  samples: Sample[];\n  loadSampleYaml: LoadSampleYaml;\n  downloadSampleYaml: DownloadSampleYaml;\n  yamlSamplesList?: FirehoseResult;\n  kindObj: K8sKind;\n};\n"],"sourceRoot":""}