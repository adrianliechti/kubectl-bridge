{"version":3,"sources":["webpack:///./public/components/create-yaml.tsx"],"names":["CreateYAMLInner","props","params","kindsInFlight","kindObj","hideHeader","onChange","resourceObjPath","isCreate","t","templateExtensions","resolvedTemplates","e","properties","model","kind","yamlTemplates","namespace","ns","template","getIn","obj","metadata","namespaced","crd","apiVersion","spec","header","objLabel","labelKey","label","loader","then","c","DroppableEditYAML","initialResource","create","CreateYAML_","CreateYAML","EditYAMLPage","resources","name","isList","prop","wrapperProps","data","EditYAML","displayName"],"mappings":"4FAAA,yPAsBO,MAAMA,EAAmBC,IAC9B,MAAM,OACJC,EAAM,cACNC,EAAa,QACbC,EAAO,WACPC,GAAa,EAAK,SAClBC,EAAW,KAAM,MAAI,gBACrBC,EAAe,SACfC,GAAW,GACTP,GACE,EAAEQ,GAAM,4BACPC,EAAoBC,GAAqB,gCAC9C,cACGC,GAAyB,YAAeA,IAAMA,EAAEC,WAAWC,MAAMC,QAASX,aAAO,EAAPA,EAASW,MACpF,CAACX,KAGCY,EAAgB,UAAc,IAAM,YAAiBN,GAAqB,CAC9EA,IAGF,IAAKN,EACH,OAAID,IAAkBQ,EACb,gBAAC,IAAU,MAEb,gBAAC,eAAY,MAGtB,MAAMM,EAAYf,EAAOgB,IAAM,UACzBC,EACJlB,EAAMkB,UACNH,EAAcI,MAAM,CAAC,aAAkBhB,GAAU,aACjDY,EAAcI,MAAM,CAAC,UAAW,YAE5BC,EAAM,YAAaF,GACzBE,EAAIN,KAAOX,EAAQW,KACnBM,EAAIC,SAAWD,EAAIC,UAAY,GAC3BlB,EAAQmB,aACVF,EAAIC,SAASL,UAAYA,GAEvBb,EAAQoB,KAAOL,IAAaH,EAAcI,MAAM,CAAC,UAAW,cAC9DC,EAAII,WAAa,YAAmBrB,GACpCiB,EAAIK,KAAOL,EAAIK,MAAQ,IAEzB,MAAMC,EAASlB,EAAE,6BAA8B,CAC7CmB,SAAUxB,EAAQyB,SAAWpB,EAAEL,EAAQyB,UAAYzB,EAAQ0B,QAK7D,OACE,gBAAC,IAAc,CACbC,OAAQ,IAAM,8FAAgCC,KAAMC,GAAMA,EAAEC,mBAC5DC,gBAAiBd,EACjBe,OAAQ5B,EACRO,KAAMX,EAAQW,KACdY,OAAQA,EACRtB,WAAYA,EACZE,gBAAiBA,EACjBD,SAAUA,KAKV+B,EAAc,YAAgBrC,GAEvBsC,EAAcrC,IACzB,MAAMC,EAAS,sBACf,OAAO,gBAACmC,EAAW,iBAAKpC,EAAK,CAAEC,OAAQA,MAG5BqC,EAA8CtC,IACzD,MAAMC,EAAS,sBASf,OACE,gBAAC,IAAQ,CACPsC,UAAW,CACT,CACEzB,KAAMd,EAAMc,KACZ0B,KAAMvC,EAAOuC,KACbxB,UAAWf,EAAOgB,GAClBwB,QAAQ,EACRC,KAAM,SAIV,gBApBaC,GACf,gBAAC,IAAc,iBACTA,EAAY,CAChBvB,IAAKuB,EAAavB,IAAIwB,KACtBd,OAAQ,IAAM,sFAAsBC,KAAMC,GAAMA,EAAEa,UAClDV,QAAQ,KAeA,QAuBdE,EAAWS,YAAc,aACzBR,EAAaQ,YAAc","file":"create-yaml-chunk-98da296380f6d859ddca.min.js","sourcesContent":["import * as React from 'react';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { useTranslation } from 'react-i18next';\nimport { useResolvedExtensions } from '@console/dynamic-plugin-sdk/src/api/useResolvedExtensions';\nimport {\n  YAMLTemplate,\n  isYAMLTemplate,\n} from '@console/dynamic-plugin-sdk/src/extensions/yaml-templates';\nimport { getYAMLTemplates } from '../models/yaml-templates';\nimport { connectToPlural } from '../kinds';\nimport { AsyncComponent } from './utils/async';\nimport { Firehose, LoadingBox } from './utils';\nimport {\n  K8sKind,\n  apiVersionForModel,\n  referenceForModel,\n  K8sResourceKindReference,\n  K8sResourceKind,\n} from '../module/k8s';\nimport { ErrorPage404 } from './error';\nimport { safeYAMLToJS } from '@console/shared/src/utils/yaml';\n\nexport const CreateYAMLInner = (props) => {\n  const {\n    params,\n    kindsInFlight,\n    kindObj,\n    hideHeader = false,\n    onChange = () => null,\n    resourceObjPath,\n    isCreate = true,\n  } = props;\n  const { t } = useTranslation();\n  const [templateExtensions, resolvedTemplates] = useResolvedExtensions<YAMLTemplate>(\n    React.useCallback(\n      (e): e is YAMLTemplate => isYAMLTemplate(e) && e.properties.model.kind === kindObj?.kind,\n      [kindObj],\n    ),\n  );\n  const yamlTemplates = React.useMemo(() => getYAMLTemplates(templateExtensions), [\n    templateExtensions,\n  ]);\n\n  if (!kindObj) {\n    if (kindsInFlight || !resolvedTemplates) {\n      return <LoadingBox />;\n    }\n    return <ErrorPage404 />;\n  }\n\n  const namespace = params.ns || 'default';\n  const template =\n    props.template ||\n    yamlTemplates.getIn([referenceForModel(kindObj), 'default']) ||\n    yamlTemplates.getIn(['DEFAULT', 'default']);\n\n  const obj = safeYAMLToJS(template);\n  obj.kind = kindObj.kind;\n  obj.metadata = obj.metadata || {};\n  if (kindObj.namespaced) {\n    obj.metadata.namespace = namespace;\n  }\n  if (kindObj.crd && template === yamlTemplates.getIn(['DEFAULT', 'default'])) {\n    obj.apiVersion = apiVersionForModel(kindObj);\n    obj.spec = obj.spec || {};\n  }\n  const header = t('public~Create {{objLabel}}', {\n    objLabel: kindObj.labelKey ? t(kindObj.labelKey) : kindObj.label,\n  });\n\n  // TODO: if someone edits namespace, we'll redirect to old namespace\n\n  return (\n    <AsyncComponent\n      loader={() => import('./droppable-edit-yaml').then((c) => c.DroppableEditYAML)}\n      initialResource={obj}\n      create={isCreate}\n      kind={kindObj.kind}\n      header={header}\n      hideHeader={hideHeader}\n      resourceObjPath={resourceObjPath}\n      onChange={onChange}\n    />\n  );\n};\n\nconst CreateYAML_ = connectToPlural(CreateYAMLInner);\n\nexport const CreateYAML = (props) => {\n  const params = useParams();\n  return <CreateYAML_ {...props} params={params} />;\n};\n\nexport const EditYAMLPage: React.SFC<EditYAMLPageProps> = (props) => {\n  const params = useParams();\n  const Wrapper = (wrapperProps) => (\n    <AsyncComponent\n      {...wrapperProps}\n      obj={wrapperProps.obj.data}\n      loader={() => import('./edit-yaml').then((c) => c.EditYAML)}\n      create={false}\n    />\n  );\n  return (\n    <Firehose\n      resources={[\n        {\n          kind: props.kind,\n          name: params.name,\n          namespace: params.ns,\n          isList: false,\n          prop: 'obj',\n        },\n      ]}\n    >\n      <Wrapper />\n    </Firehose>\n  );\n};\n\nexport type CreateYAMLProps = {\n  match?: any;\n  params?: any;\n  kindsInFlight: boolean;\n  kindObj: K8sKind;\n  template?: string;\n  download?: boolean;\n  header?: string;\n  hideHeader?: boolean;\n  isCreate?: boolean;\n  resourceObjPath?: (obj: K8sResourceKind, kind: K8sResourceKindReference) => string;\n  onChange?: (yaml: string) => any;\n};\n\nexport type EditYAMLPageProps = {\n  kind: string;\n};\n\nCreateYAML.displayName = 'CreateYAML';\nEditYAMLPage.displayName = 'EditYAMLPage';\n"],"sourceRoot":""}