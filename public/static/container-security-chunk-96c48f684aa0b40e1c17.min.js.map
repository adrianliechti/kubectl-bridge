{"version":3,"sources":["webpack:///./packages/container-security/src/components/image-manifest-vuln.tsx","webpack:///./packages/container-security/src/components/image-vulnerability-utils.ts","webpack:///./packages/container-security/src/components/ImageVulnerabilitiesList.tsx","webpack:///./packages/container-security/src/components/ImageVulnerabilitiesTable.tsx","webpack:///./packages/container-security/src/components/ImageVulnerabilityRow.tsx","webpack:///./packages/container-security/src/components/ImageVulnerabilityToggleGroup.tsx"],"names":["shortenImage","img","replace","split","slice","join","shortenHash","hash","totalCount","obj","status","highCount","mediumCount","lowCount","unknownCount","affectedPodsCount","Object","keys","affectedPods","length","highestSeverityIndex","highestSeverity","index","ImageManifestVulnDetails","props","t","queryURL","className","text","resource","label","path","spec","manifest","href","AffectedPods","kind","namespace","metadata","canCreate","showTitle","ListComponent","listProps","data","pods","filter","p","includes","name","ImageManifestVulnDetailsPage","params","kindObj","titleFunc","image","ns","menuActions","pages","details","editYaml","nameKey","component","tableColumnClasses","ImageManifestVulnTableRow","displayName","columnID","color","value","fixableCount","ImageManifestVulnTableHeader","title","sortField","transforms","id","sortFunc","ImageManifestVulnList","customSorts","totalOrder","affectedPodsOrder","highestSeverityOrder","Header","Row","EmptyMsg","variant","lg","titleText","model","headingLevel","virtualize","ImageManifestVulnPage","hideNameLabelFilters","resources","namespaced","prop","flatten","imageManifestVuln","textFilter","nameFilterPlaceholder","ProjectImageManifestVulnListPage","podKey","pod","ContainerVulnerabilities","content","containerStatuses","map","key","containerID","containers","find","c","loaded","vuln","exists","absent","undefined","containerStatus","imv","some","imageID","style","display","alignItems","findKey","hideIcon","ImageManifestVulnPodTab","isList","selector","matchLabels","VulnerabilitiesType","isSynkVuln","vulnerability","JSON","parse","vulnerabilityMetadata","UpdatedBy","getVulnerabilityType","appDependency","baseImage","getVulnerabilitySource","getFixableVulnerabilitiesCount","vulnerabilities","fixedby","imageVulnerabilitiesRowFilters","filterGroupName","items","type","reducer","v","selected","Defcon1","Critical","High","Medium","Low","Negligible","Unknown","severity","optional","imageVulnerabilities","features","feature","rowFilters","hideLabelFilter","getRowProps","vulnerabilityType","vulnerabilitySource","imageVulnerabilitiesTableColumnClasses","link","version","totalVulnCount","vulns","isSelected","setIsSelected","allVulnerabilities","totalSelectedVulnCount","setTotalSelectedVulnCount","totalSelectedVuln","setTotalSelectedVuln","handleItemClick","event","currentTarget","buttonId","onChange","colorScale","priority","toArray","x","y","titleComponent","fill","fontSize","fixableVulnCount","k","toLowerCase"],"mappings":"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","file":"container-security-chunk-96c48f684aa0b40e1c17.min.js","sourcesContent":["import * as React from 'react';\nimport { EmptyState, EmptyStateVariant, Tooltip, EmptyStateHeader } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport { TFunction } from 'i18next';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { DASH } from '@console/dynamic-plugin-sdk/src/app/constants';\nimport { DefaultList } from '@console/internal/components/default-resource';\nimport {\n  MultiListPage,\n  Table,\n  TableData,\n  DetailsPage,\n  ListPage,\n  RowFunctionArgs,\n} from '@console/internal/components/factory';\nimport { ContainerLink } from '@console/internal/components/pod';\nimport {\n  ResourceLink,\n  ExternalLink,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  DetailsItem,\n  Firehose,\n  FirehoseResult,\n  Loading,\n} from '@console/internal/components/utils';\nimport { referenceForModel, PodKind, ContainerStatus } from '@console/internal/module/k8s';\nimport { EmptyStateResourceBadge, GreenCheckCircleIcon } from '@console/shared/';\nimport { vulnPriority, totalFor, priorityFor } from '../const';\nimport { ImageManifestVulnModel } from '../models';\nimport { ImageManifestVuln } from '../types';\nimport ImageVulnerabilitiesList from './ImageVulnerabilitiesList';\nimport ImageVulnerabilityToggleGroup from './ImageVulnerabilityToggleGroup';\nimport { quayURLFor } from './summary';\nimport './image-manifest-vuln.scss';\n\nconst shortenImage = (img: string) =>\n  (img ?? '').replace('@sha256', '').split('/').slice(1, 3).join('/');\nconst shortenHash = (hash: string): string => (hash ?? '').slice(7, 18);\nexport const totalCount = (obj: ImageManifestVuln) => {\n  if (!obj.status) return 0;\n  const { highCount = 0, mediumCount = 0, lowCount = 0, unknownCount = 0 } = obj.status;\n  return highCount + mediumCount + lowCount + unknownCount;\n};\nexport const affectedPodsCount = (obj: ImageManifestVuln) =>\n  Object.keys(obj.status?.affectedPods ?? {}).length;\n\nexport const highestSeverityIndex = (obj: ImageManifestVuln) =>\n  priorityFor(obj.status?.highestSeverity).index;\n\nexport const ImageManifestVulnDetails: React.FC<ImageManifestVulnDetailsProps> = (props) => {\n  const { t } = useTranslation();\n  const queryURL = quayURLFor(props.obj);\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('container-security~Image Manifest Vulnerabilities details')} />\n        <ImageVulnerabilityToggleGroup obj={props.obj} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={props.obj} />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem\n                label={t('container-security~Registry')}\n                obj={props.obj}\n                path=\"spec.image\"\n              />\n\n              {queryURL && (\n                <DetailsItem\n                  label={t('container-security~Manifest')}\n                  obj={props.obj}\n                  path=\"obj.spec.manifest\"\n                >\n                  <ExternalLink text={shortenHash(props.obj.spec.manifest)} href={queryURL} />\n                </DetailsItem>\n              )}\n            </dl>\n          </div>\n        </div>\n      </div>\n      <div className=\"cs-imagevulnerabilitieslist__wrapper\">\n        <ImageVulnerabilitiesList {...props} />\n      </div>\n    </>\n  );\n};\n\nexport const AffectedPods: React.FC<AffectedPodsProps> = (props) => {\n  const affectedPodsFor = (pods: PodKind[]) =>\n    pods.filter((p) =>\n      _.keys(props.obj.status?.affectedPods ?? {}).includes(\n        [p.metadata.namespace, p.metadata.name].join('/'),\n      ),\n    );\n\n  return (\n    <ListPage\n      kind=\"Pod\"\n      namespace={props.obj.metadata.namespace}\n      canCreate={false}\n      showTitle={false}\n      ListComponent={(listProps) => (\n        <DefaultList {...listProps} data={affectedPodsFor(listProps.data)} />\n      )}\n    />\n  );\n};\n\nexport const ImageManifestVulnDetailsPage: React.FC = () => {\n  const params = useParams();\n  return (\n    <DetailsPage\n      kindObj={ImageManifestVulnModel}\n      titleFunc={(obj: ImageManifestVuln) => {\n        const image = shortenImage(obj?.spec?.image);\n        const hash = obj?.spec?.manifest ? `@${shortenHash(obj.spec.manifest)}` : '';\n        return image ? `${image}${hash}` : null;\n      }}\n      name={params.name}\n      namespace={params.ns}\n      kind={referenceForModel(ImageManifestVulnModel)}\n      menuActions={[]}\n      pages={[\n        navFactory.details(ImageManifestVulnDetails),\n        navFactory.editYaml(),\n        {\n          href: 'pods',\n          // t('container-security~Affected Pods')\n          nameKey: 'container-security~Affected Pods',\n          component: AffectedPods,\n        },\n      ]}\n    />\n  );\n};\n\nconst tableColumnClasses = [\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-md', 'co-break-word'),\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-md'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n];\n\nexport const ImageManifestVulnTableRow: React.FC<RowFunctionArgs<ImageManifestVuln>> = ({\n  obj,\n}) => {\n  const { name, namespace } = obj.metadata;\n  const queryURL = quayURLFor(obj);\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(ImageManifestVulnModel)}\n          name={name}\n          namespace={namespace}\n          displayName={shortenImage(obj.spec.image)}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]} columnID=\"namespace\">\n        <ResourceLink kind=\"Namespace\" name={namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        {obj.status?.highestSeverity ? (\n          <>\n            <ExclamationTriangleIcon color={priorityFor(obj.status.highestSeverity).color.value} />\n            &nbsp;{obj.status.highestSeverity}\n          </>\n        ) : (\n          DASH\n        )}\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{affectedPodsCount(obj)}</TableData>\n      <TableData className={tableColumnClasses[4]}>{obj.status?.fixableCount || 0}</TableData>\n      <TableData className={tableColumnClasses[5]}>{totalCount(obj)}</TableData>\n      <TableData className={tableColumnClasses[6]}>\n        {queryURL ? (\n          <ExternalLink text={shortenHash(obj.spec.manifest)} href={queryURL} />\n        ) : (\n          <span className=\"small text-muted\">-</span>\n        )}\n      </TableData>\n    </>\n  );\n};\n\nexport const ImageManifestVulnTableHeader = (t: TFunction) => () => [\n  {\n    title: t('container-security~Image name'),\n    sortField: 'spec.image',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[0] },\n  },\n  {\n    title: t('container-security~Namespace'),\n    sortField: 'metadata.namespace',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[1] },\n    id: 'namespace',\n  },\n  {\n    title: t('container-security~Highest severity'),\n    sortFunc: 'highestSeverityOrder',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[2] },\n  },\n  {\n    title: t('container-security~Affected Pods'),\n    props: { className: tableColumnClasses[3] },\n    transforms: [sortable],\n    sortFunc: 'affectedPodsOrder',\n  },\n  {\n    title: t('container-security~Fixable'),\n    sortField: 'status.fixableCount',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[4] },\n  },\n  {\n    title: t('container-security~Total'),\n    sortFunc: 'totalOrder',\n    transforms: [sortable],\n    props: { className: tableColumnClasses[5] },\n  },\n  {\n    title: t('container-security~Manifest'),\n    props: { className: tableColumnClasses[6] },\n    transforms: [sortable],\n    sortField: 'spec.manifest',\n  },\n];\n\nexport const ImageManifestVulnList: React.FC<ImageManifestVulnListProps> = (props) => {\n  const { t } = useTranslation();\n  const EmptyMsg = () => (\n    <EmptyState variant={EmptyStateVariant.lg}>\n      <EmptyStateHeader\n        titleText={\n          <>\n            <EmptyStateResourceBadge model={ImageManifestVulnModel} />\n            {t('container-security~No Image vulnerabilities found')}\n          </>\n        }\n        headingLevel=\"h4\"\n      />\n    </EmptyState>\n  );\n\n  return (\n    <Table\n      {...props}\n      customSorts={{\n        totalOrder: totalCount,\n        affectedPodsOrder: affectedPodsCount,\n        highestSeverityOrder: highestSeverityIndex,\n      }}\n      aria-label={t('container-security~Image Manifest Vulnerabilities')}\n      Header={ImageManifestVulnTableHeader(t)}\n      Row={ImageManifestVulnTableRow}\n      EmptyMsg={EmptyMsg}\n      virtualize\n    />\n  );\n};\n\nexport const ImageManifestVulnPage: React.FC<ImageManifestVulnPageProps> = (props) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const { showTitle = true, hideNameLabelFilters = true } = props;\n  const namespace = props.namespace || params?.ns || params?.name;\n  return (\n    <MultiListPage\n      {...props}\n      namespace={namespace}\n      resources={[\n        {\n          kind: referenceForModel(ImageManifestVulnModel),\n          namespace,\n          namespaced: true,\n          prop: 'imageManifestVuln',\n        },\n      ]}\n      flatten={(resources) => _.get(resources.imageManifestVuln, 'data', [])}\n      title={t('container-security~Image Manifest Vulnerabilities')}\n      textFilter=\"image-name\"\n      canCreate={false}\n      showTitle={showTitle}\n      nameFilterPlaceholder={t('container-security~Search by image name...')}\n      hideNameLabelFilters={hideNameLabelFilters}\n      ListComponent={ImageManifestVulnList}\n    />\n  );\n};\n\nexport const ProjectImageManifestVulnListPage: React.FC<ImageManifestVulnPageProps> = (props) => (\n  <ImageManifestVulnPage {...props} showTitle={false} hideNameLabelFilters={false} />\n);\n\nconst podKey = (pod: PodKind) => [pod.metadata.namespace, pod.metadata.name].join('/');\n\nexport const ContainerVulnerabilities: React.FC<ContainerVulnerabilitiesProps> = (props) => {\n  const { t } = useTranslation();\n  const vulnFor = (containerStatus: ContainerStatus) =>\n    _.get(props.imageManifestVuln, 'data', []).find(\n      (imv) =>\n        imv.status.affectedPods[podKey(props.pod)].some(\n          (id) => containerStatus.containerID === id,\n        ) || containerStatus.imageID.includes(imv.spec.manifest),\n    );\n\n  const withVuln = (\n    vuln: ImageManifestVuln,\n    exists: (vuln: ImageManifestVuln) => JSX.Element,\n    absent: () => JSX.Element,\n  ) => (vuln !== undefined ? exists(vuln) : absent());\n\n  return (\n    <div className=\"co-m-pane__body\">\n      <div className=\"co-m-table-grid co-m-table-grid--bordered\">\n        <div className=\"row co-m-table-grid__head\">\n          <div className=\"col-md-3\">{t('container-security~Container')}</div>\n          <div className=\"col-md-4\">{t('container-security~Image')}</div>\n          <div className=\"col-md-2\">\n            <Tooltip content=\"Results provided by Quay security scanner\">\n              <span>{t('container-security~Security scan')}</span>\n            </Tooltip>\n          </div>\n        </div>\n        <div className=\"co-m-table-grid__body\">\n          {props.pod.status.containerStatuses.map((status) => (\n            <div className=\"row\" key={status.containerID}>\n              <div className=\"col-md-3\">\n                <ContainerLink pod={props.pod} name={status.name} />\n              </div>\n              <div className=\"col-md-4 co-truncate co-nowrap co-select-to-copy\">\n                {props.pod.spec.containers.find((c) => c.name === status.name).image}\n              </div>\n              <div className=\"col-md-3\">\n                {props.loaded ? (\n                  withVuln(\n                    vulnFor(status),\n                    (vuln) => (\n                      <span style={{ display: 'flex', alignItems: 'center' }}>\n                        <ExclamationTriangleIcon\n                          color={priorityFor(_.get(vuln.status, 'highestSeverity')).color.value}\n                        />\n                        &nbsp;\n                        <ResourceLink\n                          kind={referenceForModel(ImageManifestVulnModel)}\n                          name={vuln.metadata.name}\n                          namespace={props.pod.metadata.namespace}\n                          displayName={`${totalFor(\n                            vulnPriority.findKey(\n                              ({ title }) => _.get(vuln.status, 'highestSeverity') === title,\n                            ),\n                          )(vuln)} ${vuln.status.highestSeverity}`}\n                          hideIcon\n                        />\n                      </span>\n                    ),\n                    () => (\n                      <span>\n                        <GreenCheckCircleIcon /> {t('container-security~No vulnerabilities found')}\n                      </span>\n                    ),\n                  )\n                ) : (\n                  <div>\n                    <Loading />\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ImageManifestVulnPodTab: React.FC<ImageManifestVulnPodTabProps> = (props) => {\n  const params = useParams();\n  return (\n    <Firehose\n      resources={[\n        {\n          isList: true,\n          kind: referenceForModel(ImageManifestVulnModel),\n          namespace: params.ns,\n          selector: {\n            matchLabels: { [podKey(props.obj)]: 'true' },\n          },\n          prop: 'imageManifestVuln',\n        },\n      ]}\n    >\n      {/* FIXME(alecmerdler): Hack because `Firehose` injects props without TypeScript knowing about it */}\n      <ContainerVulnerabilities pod={props.obj} {...(props as any)} />\n    </Firehose>\n  );\n};\n\nexport type ContainerVulnerabilitiesProps = {\n  loaded: boolean;\n  pod: PodKind;\n  imageManifestVuln: FirehoseResult<ImageManifestVuln[]>;\n};\n\nexport type ImageManifestVulnPageProps = {\n  namespace?: string;\n  hideNameLabelFilters?: boolean;\n  showTitle?: boolean;\n  selector?: { [key: string]: string };\n};\n\nexport type ImageManifestVulnListProps = {\n  data: ImageManifestVuln[];\n};\n\nexport type ImageManifestVulnDetailsProps = {\n  obj: ImageManifestVuln;\n};\n\nexport type ImageManifestVulnListTableHeaderProps = {};\n\nexport type AffectedPodsProps = {\n  obj: ImageManifestVuln;\n};\n\nexport type ImageManifestVulnPodTabProps = {\n  obj: PodKind;\n};\n\nImageManifestVulnPage.displayName = 'ImageManifestVulnPage';\nImageManifestVulnList.displayName = 'ImageManifestVulnList';\nAffectedPods.displayName = 'AffectedPods';\nImageManifestVulnPodTab.displayName = 'ImageManifestVulnPodTab';\nContainerVulnerabilities.displayName = 'ContainerVulnerabilities';\n","import { Vulnerability } from '../types';\n\nexport enum VulnerabilitiesType {\n  allVulnerabilities = 'All vulnerabilities',\n  appDependency = 'App dependency',\n  baseImage = 'Base image',\n}\n\nconst vulnerabilityMetadata = (vulnerability: Vulnerability) => {\n  if (!vulnerability?.metadata) return undefined;\n  try {\n    return JSON.parse(vulnerability.metadata);\n  } catch {\n    return vulnerability.metadata;\n  }\n};\n\nconst isSynkVuln = (vulnerability: Vulnerability) => {\n  const metadata = vulnerabilityMetadata(vulnerability);\n  return metadata?.UpdatedBy === 'CodeReadyAnalytics';\n};\n\nexport const getVulnerabilityType = (vulnerability: Vulnerability) =>\n  isSynkVuln(vulnerability) ? VulnerabilitiesType.appDependency : VulnerabilitiesType.baseImage;\n\nexport const getVulnerabilitySource = (vulnerability: Vulnerability) =>\n  isSynkVuln(vulnerability) ? 'Snyk' : 'Red Hat';\n\nexport const getFixableVulnerabilitiesCount = (vulnerabilities: Vulnerability[]) =>\n  vulnerabilities?.filter(\n    (vulnerability) => vulnerability.fixedby !== null || vulnerability.fixedby !== '',\n  ).length;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom-v5-compat';\nimport { RowFilter } from '@console/dynamic-plugin-sdk';\nimport { MultiListPage } from '@console/internal/components/factory';\nimport { FirehoseResourcesResult } from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { Priority, priorityFor } from '../const';\nimport { ImageManifestVulnModel } from '../models';\nimport { Feature, ImageManifestVuln, Vulnerability } from '../types';\nimport { getVulnerabilityType, VulnerabilitiesType } from './image-vulnerability-utils';\nimport ImageVulnerabilitiesTable from './ImageVulnerabilitiesTable';\n\ntype ImageVulnerabilitiesListProps = {\n  obj: ImageManifestVuln;\n};\n\ntype ImageVuln = {\n  feature: Feature;\n  vulnerability: Vulnerability;\n};\n\nconst ImageVulnerabilitiesList: React.FC<ImageVulnerabilitiesListProps> = (props) => {\n  const { t } = useTranslation();\n  const {\n    obj: {\n      metadata: { name },\n    },\n  } = props;\n  const { ns: namespace } = useParams();\n\n  const imageVulnerabilitiesRowFilters: RowFilter<ImageVuln>[] = [\n    {\n      filterGroupName: t('container-security~Type'),\n      items: [\n        { id: VulnerabilitiesType.appDependency, title: VulnerabilitiesType.appDependency },\n        { id: VulnerabilitiesType.baseImage, title: VulnerabilitiesType.baseImage },\n      ],\n      type: 'vulnerability-type',\n      reducer: (v) => getVulnerabilityType(v.vulnerability),\n      filter: (filter, vuln) =>\n        filter.selected?.includes(getVulnerabilityType(vuln.vulnerability)) ||\n        _.isEmpty(filter.selected),\n    },\n    {\n      filterGroupName: t('container-security~Severity'),\n      items: [\n        { id: Priority.Defcon1, title: Priority.Defcon1 },\n        { id: Priority.Critical, title: Priority.Critical },\n        { id: Priority.High, title: Priority.High },\n        { id: Priority.Medium, title: Priority.Medium },\n        { id: Priority.Low, title: Priority.Low },\n        { id: Priority.Negligible, title: Priority.Negligible },\n        { id: Priority.Unknown, title: Priority.Unknown },\n      ],\n      type: 'vulnerability-severity',\n      reducer: (v) => v.vulnerability.severity,\n      filter: (filter, vuln) =>\n        filter.selected?.includes(vuln.vulnerability.severity) || _.isEmpty(filter.selected),\n    },\n  ];\n\n  return (\n    <MultiListPage\n      {...props}\n      resources={[\n        {\n          kind: referenceForModel(ImageManifestVulnModel),\n          namespaced: true,\n          namespace,\n          name,\n          isList: false,\n          prop: 'imageVulnerabilities',\n          optional: true,\n        },\n      ]}\n      title={t('container-security~Vulnerabilities')}\n      flatten={(\n        resources: FirehoseResourcesResult<{ imageVulnerabilities: ImageManifestVuln }>,\n      ) => {\n        return _.sortBy(\n          _.flatten(\n            (resources?.imageVulnerabilities?.data?.spec?.features ?? []).map((feature) =>\n              (feature?.vulnerabilities ?? []).map((vulnerability) => ({ feature, vulnerability })),\n            ),\n          ),\n          (v: ImageVuln) => priorityFor(v?.vulnerability?.severity).index,\n        );\n      }}\n      namespace={namespace}\n      canCreate={false}\n      showTitle\n      textFilter=\"vulnerability\"\n      rowFilters={imageVulnerabilitiesRowFilters}\n      hideLabelFilter\n      ListComponent={ImageVulnerabilitiesTable}\n    />\n  );\n};\n\nexport default ImageVulnerabilitiesList;\n","import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\nimport { Table } from '@console/internal/components/factory';\nimport { ConsoleEmptyState } from '@console/internal/components/utils';\nimport { Feature, Vulnerability } from '../types';\nimport { getVulnerabilitySource, getVulnerabilityType } from './image-vulnerability-utils';\nimport ImageVulnerabilityRow, {\n  imageVulnerabilitiesTableColumnClasses,\n} from './ImageVulnerabilityRow';\n\ntype ImageVulnerabilitiesTableProps = {\n  features: Feature[];\n};\n\nconst getRowProps = (vulnerability: Vulnerability) => ({\n  id: vulnerability.name,\n});\n\nconst ImageVulnerabilitiesTable: React.FC<ImageVulnerabilitiesTableProps> = (props) => {\n  const { t } = useTranslation();\n  const EmptyMsg = () => (\n    <ConsoleEmptyState title={t('container-security~No Image vulnerabilities found')} />\n  );\n  const ImageVulnerabilitiesTableHeader = () => [\n    {\n      title: t('container-security~Name'),\n      transforms: [sortable],\n      sortField: 'vulnerability.name',\n      props: { className: imageVulnerabilitiesTableColumnClasses[0] },\n    },\n    {\n      title: t('container-security~Severity'),\n      transforms: [sortable],\n      sortField: 'vulnerability.severity',\n      props: { className: imageVulnerabilitiesTableColumnClasses[1] },\n    },\n    {\n      title: t('container-security~Package'),\n      transforms: [sortable],\n      sortField: 'feature.name',\n      props: { className: imageVulnerabilitiesTableColumnClasses[2] },\n    },\n    {\n      title: t('container-security~Type'),\n      transforms: [sortable],\n      sortFunc: 'vulnerabilityType',\n      props: { className: imageVulnerabilitiesTableColumnClasses[3] },\n    },\n    {\n      title: t('container-security~Source'),\n      transforms: [sortable],\n      sortFunc: 'vulnerabilitySource',\n      props: { className: imageVulnerabilitiesTableColumnClasses[4] },\n    },\n    {\n      title: t('container-security~Current version'),\n      transforms: [sortable],\n      sortField: 'feature.version',\n      props: { className: imageVulnerabilitiesTableColumnClasses[3] },\n    },\n    {\n      title: t('container-security~Fixed in version'),\n      transforms: [sortable],\n      sortField: 'vulnerability.fixedby',\n      props: { className: imageVulnerabilitiesTableColumnClasses[4] },\n    },\n  ];\n  return (\n    <Table\n      {...props}\n      customSorts={{\n        vulnerabilityType: (obj) => getVulnerabilityType(obj.vulnerability),\n        vulnerabilitySource: (obj) => getVulnerabilitySource(obj.vulnerability),\n      }}\n      aria-label={t('container-security~Vulnerabilities')}\n      Header={ImageVulnerabilitiesTableHeader}\n      Row={ImageVulnerabilityRow}\n      EmptyMsg={EmptyMsg}\n      virtualize\n      getRowProps={getRowProps}\n    />\n  );\n};\n\nexport default ImageVulnerabilitiesTable;\n","import * as React from 'react';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport * as classNames from 'classnames';\nimport { RowFunctionArgs, TableData } from '@console/internal/components/factory';\nimport { ExternalLink } from '@console/internal/components/utils';\nimport { priorityFor } from '../const';\nimport { Feature, Vulnerability } from '../types';\nimport { getVulnerabilitySource, getVulnerabilityType } from './image-vulnerability-utils';\n\ntype ImageVulnerabilityRowProps = {\n  vulnerability: Vulnerability;\n  feature: Feature;\n};\n\nexport const imageVulnerabilitiesTableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-md'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-md'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-xl'),\n];\n\nconst ImageVulnerabilityRow: React.FC<RowFunctionArgs<ImageVulnerabilityRowProps>> = (props) => {\n  const {\n    obj: { vulnerability, feature },\n  } = props;\n  return (\n    <>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[0]}>\n        <ExternalLink text={vulnerability.name} href={vulnerability.link} />\n      </TableData>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[1]}>\n        <ExclamationTriangleIcon color={priorityFor(vulnerability.severity).color.value} />\n        &nbsp;{vulnerability.severity}\n      </TableData>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[2]}>{feature.name}</TableData>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[3]}>\n        {getVulnerabilityType(vulnerability)}\n      </TableData>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[4]}>\n        {getVulnerabilitySource(vulnerability)}\n      </TableData>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[5]}>{feature.version}</TableData>\n      <TableData className={imageVulnerabilitiesTableColumnClasses[6]}>\n        {vulnerability.fixedby || '-'}\n      </TableData>\n    </>\n  );\n};\n\nexport default ImageVulnerabilityRow;\n","import * as React from 'react';\nimport { ChartDonut, ChartLabel } from '@patternfly/react-charts';\nimport { ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { ConsoleEmptyState } from '@console/internal/components/utils';\nimport { totalVulnFor, vulnPriority } from '../const';\nimport { ImageManifestVuln, Vulnerability } from '../types';\nimport {\n  getFixableVulnerabilitiesCount,\n  getVulnerabilityType,\n  VulnerabilitiesType,\n} from './image-vulnerability-utils';\n\nimport './ImageVulnerabilityTogggleGroup.scss';\n\ntype ImageVulnerabilityToggleGroupProps = {\n  obj: ImageManifestVuln;\n};\n\nconst ImageVulnerabilityToggleGroup: React.FC<ImageVulnerabilityToggleGroupProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  const features = obj?.spec?.features;\n  const [vulnerabilities, totalVulnCount] = React.useMemo(() => {\n    const vulns = _.flatten(features?.map((feature) => feature.vulnerabilities));\n    return [vulns, vulns.length];\n  }, [features]);\n  const [isSelected, setIsSelected] = React.useState(VulnerabilitiesType.allVulnerabilities);\n  const [totalSelectedVulnCount, setTotalSelectedVulnCount] = React.useState(totalVulnCount);\n  const [totalSelectedVuln, setTotalSelectedVuln] = React.useState<Vulnerability[]>(\n    vulnerabilities,\n  );\n  const handleItemClick = React.useCallback(\n    (event: React.MouseEvent<{ [id: string]: VulnerabilitiesType }>) => {\n      const { id } = event.currentTarget;\n      setIsSelected(id);\n      if (id === VulnerabilitiesType.allVulnerabilities) {\n        setTotalSelectedVulnCount(totalVulnCount);\n        setTotalSelectedVuln(vulnerabilities);\n      } else {\n        const v = _.filter(\n          vulnerabilities,\n          (vulnerability) => getVulnerabilityType(vulnerability) === id,\n        );\n        setTotalSelectedVulnCount(v.length);\n        setTotalSelectedVuln(v);\n      }\n    },\n    [vulnerabilities, totalVulnCount],\n  );\n\n  return (\n    <>\n      <ToggleGroup aria-label={t('container-security~Vulnerability type')}>\n        <ToggleGroupItem\n          buttonId={VulnerabilitiesType.allVulnerabilities}\n          isSelected={isSelected === VulnerabilitiesType.allVulnerabilities}\n          onChange={handleItemClick}\n          text={t('container-security~All vulnerabilities')}\n        />\n        <ToggleGroupItem\n          buttonId={VulnerabilitiesType.appDependency}\n          isSelected={isSelected === VulnerabilitiesType.appDependency}\n          onChange={handleItemClick}\n          text={t('container-security~App dependency')}\n        />\n        <ToggleGroupItem\n          buttonId={VulnerabilitiesType.baseImage}\n          isSelected={isSelected === VulnerabilitiesType.baseImage}\n          onChange={handleItemClick}\n          text={t('container-security~Base image')}\n        />\n      </ToggleGroup>\n      {totalSelectedVulnCount > 0 ? (\n        <div className=\"cs-imagevulnerability-details\">\n          <div className=\"cs-imagevulnerability-details__donut\">\n            <ChartDonut\n              colorScale={vulnPriority.map((priority) => priority.color.value).toArray()}\n              data={vulnPriority\n                .map((priority, key) => ({\n                  label: priority.title,\n                  x: priority.value,\n                  y: totalVulnFor(key)(totalSelectedVuln),\n                }))\n                .toArray()}\n              title={t('container-security~{{totalSelectedVulnCount, number}} total', {\n                totalSelectedVulnCount,\n              })}\n              titleComponent={\n                <ChartLabel style={{ fill: 'var(--pf-v5-global--Color--100)', fontSize: 24 }} />\n              }\n            />\n          </div>\n          <div className=\"cs-imagevulnerability-details__summary\">\n            <h3>\n              {t(\n                'container-security~Quay Security Scanner has detected {{totalSelectedVulnCount, number}} vulnerabilities.',\n                { totalSelectedVulnCount },\n              )}\n            </h3>\n            <h4 className=\"cs-imagevulnerability-details__details__summary--h4\">\n              {t(\n                'container-security~Patches are available for {{fixableVulnCount, number}} vulnerabilities.',\n                { fixableVulnCount: getFixableVulnerabilitiesCount(totalSelectedVuln) },\n              )}\n            </h4>\n            <div className=\"cs-imagevulnerability-details__summary-list\">\n              {vulnPriority\n                .map((v, k) =>\n                  totalVulnFor(k)(totalSelectedVuln) > 0 ? (\n                    <span\n                      className=\"cs-imagevulnerability-details__summary-list--title\"\n                      key={v.index}\n                    >\n                      <ExclamationTriangleIcon color={v.color.value} />{' '}\n                      <strong>{totalVulnFor(k)(totalSelectedVuln)}</strong>{' '}\n                      {t('container-security~{{title}} vulnerabilities.', { title: v.title })}\n                    </span>\n                  ) : null,\n                )\n                .toArray()}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"cs-imagevulnerability-details__empty-text\">\n          <ConsoleEmptyState\n            title={t('container-security~No {{isSelected}} vulnerabilities', {\n              isSelected: isSelected.toLowerCase(),\n            })}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ImageVulnerabilityToggleGroup;\n"],"sourceRoot":""}