{"version":3,"sources":["webpack:///./public/components/prometheus.jsx"],"names":["Edit","Delete","ModifyCount","factory","menuActions","tableColumnClasses","columnClass","PrometheusTableRow","obj","instance","metadata","spec","className","kind","name","namespace","title","uid","labels","version","selector","serviceMonitorSelector","actions","resource","PrometheusInstancesList","props","t","Header","sortField","transforms","Row","virtualize","PrometheusInstancesPage","ListComponent","canCreate"],"mappings":"6FAAA,uHASA,MAAM,KAAEA,EAAI,OAAEC,EAAM,YAAEC,GAAgB,IAAMC,QACtCC,EAAc,CAACF,EAAaF,EAAMC,GAElCI,EAAqB,CACzB,qBACA,qBACA,oDACA,mDACA,oDACA,IAAMC,aAGFC,EAAqB,EAAGC,IAAKC,MACjC,MAAM,SAAEC,EAAQ,KAAEC,GAASF,EAC3B,OACE,gCACE,gBAAC,IAAS,CAACG,UAAWP,EAAmB,IACvC,gBAAC,KAAY,CACXQ,KAAM,aAAkB,mBACxBC,KAAMJ,EAASI,KACfC,UAAWL,EAASK,UACpBC,MAAON,EAASO,OAGpB,gBAAC,IAAS,CAACL,UAAWP,EAAmB,IACvC,gBAAC,KAAY,CAACQ,KAAK,YAAYC,KAAMJ,EAASK,UAAWC,MAAON,EAASK,aAE3E,gBAAC,IAAS,CAACH,UAAWP,EAAmB,IACvC,gBAAC,IAAS,CAACQ,KAAM,kBAAgBA,KAAMK,OAAQR,EAASQ,UAE1D,gBAAC,IAAS,CAACN,UAAWP,EAAmB,IAAKM,EAAKQ,SACnD,gBAAC,IAAS,CAACP,UAAWP,EAAmB,IACvC,gBAAC,KAAQ,CACPe,SAAUT,EAAKU,uBACfR,KAAK,iBACLE,UAAWL,EAASK,aAGxB,gBAAC,IAAS,CAACH,UAAWP,EAAmB,IACvC,gBAAC,KAAa,CACZiB,QAASlB,EACTS,KAAM,aAAkB,mBACxBU,SAAUd,OAOde,EAA2BC,IAC/B,MAAM,EAAEC,GAAM,2BAyCd,OACE,gBAAC,IAAK,iBACAD,EAAK,cACGC,EAAE,wBACdC,OA3C0B,IACrB,CACL,CACEX,MAAOU,EAAE,eACTE,UAAW,gBACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWP,EAAmB,KAEzC,CACEW,MAAOU,EAAE,oBACTE,UAAW,qBACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWP,EAAmB,KAEzC,CACEW,MAAOU,EAAE,iBACTE,UAAW,kBACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWP,EAAmB,KAEzC,CACEW,MAAOU,EAAE,kBACTE,UAAW,eACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWP,EAAmB,KAEzC,CACEW,MAAOU,EAAE,mCACTE,UAAW,8BACXC,WAAY,CAAC,KACbJ,MAAO,CAAEb,UAAWP,EAAmB,KAEzC,CACEW,MAAO,GACPS,MAAO,CAAEb,UAAWP,EAAmB,MAUzCyB,IAAKvB,EACLwB,YAAU,MAKHC,EAA2BP,GACtC,gBAAC,IAAQ,iBACHA,EAAK,CACTQ,cAAeT,EACfU,WAAW,EACXrB,KAAM,aAAkB","file":"prometheus-chunk-2ffbd1b58c96dcae4726.min.js","sourcesContent":["import * as React from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { useTranslation } from 'react-i18next';\n\nimport { ListPage, Table, TableData } from './factory';\nimport { Kebab, LabelList, ResourceKebab, ResourceLink, Selector } from './utils';\nimport { PrometheusModel } from '../models';\nimport { referenceForModel } from '../module/k8s';\n\nconst { Edit, Delete, ModifyCount } = Kebab.factory;\nconst menuActions = [ModifyCount, Edit, Delete];\n\nconst tableColumnClasses = [\n  'pf-v5-u-w-25-on-xl',\n  'pf-v5-u-w-25-on-xl',\n  'pf-m-hidden pf-m-visible-on-md pf-v5-u-w-25-on-xl',\n  'pf-m-hidden pf-m-visible-on-lg pf-v5-u-w-8-on-xl',\n  'pf-m-hidden pf-m-visible-on-xl pf-v5-u-w-16-on-xl',\n  Kebab.columnClass,\n];\n\nconst PrometheusTableRow = ({ obj: instance }) => {\n  const { metadata, spec } = instance;\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink\n          kind={referenceForModel(PrometheusModel)}\n          name={metadata.name}\n          namespace={metadata.namespace}\n          title={metadata.uid}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[1]}>\n        <ResourceLink kind=\"Namespace\" name={metadata.namespace} title={metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <LabelList kind={PrometheusModel.kind} labels={metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>{spec.version}</TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector\n          selector={spec.serviceMonitorSelector}\n          kind=\"ServiceMonitor\"\n          namespace={metadata.namespace}\n        />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <ResourceKebab\n          actions={menuActions}\n          kind={referenceForModel(PrometheusModel)}\n          resource={instance}\n        />\n      </TableData>\n    </>\n  );\n};\n\nconst PrometheusInstancesList = (props) => {\n  const { t } = useTranslation();\n\n  const PrometheusTableHeader = () => {\n    return [\n      {\n        title: t('public~Name'),\n        sortField: 'metadata.name',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[0] },\n      },\n      {\n        title: t('public~Namespace'),\n        sortField: 'metadata.namespace',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[1] },\n      },\n      {\n        title: t('public~Labels'),\n        sortField: 'metadata.labels',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[2] },\n      },\n      {\n        title: t('public~Version'),\n        sortField: 'spec.version',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[3] },\n      },\n      {\n        title: t('public~Service monitor selector'),\n        sortField: 'spec.serviceMonitorSelector',\n        transforms: [sortable],\n        props: { className: tableColumnClasses[4] },\n      },\n      {\n        title: '',\n        props: { className: tableColumnClasses[5] },\n      },\n    ];\n  };\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~Promethesuses')}\n      Header={PrometheusTableHeader}\n      Row={PrometheusTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const PrometheusInstancesPage = (props) => (\n  <ListPage\n    {...props}\n    ListComponent={PrometheusInstancesList}\n    canCreate={true}\n    kind={referenceForModel(PrometheusModel)}\n  />\n);\n"],"sourceRoot":""}