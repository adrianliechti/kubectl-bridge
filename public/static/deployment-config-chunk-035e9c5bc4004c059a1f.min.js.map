{"version":3,"sources":["webpack:///./public/components/deployment-config.tsx","webpack:///./public/components/replication-controller.jsx","webpack:///./packages/console-shared/src/components/pod/PodRingSet.tsx","webpack:///./packages/console-app/src/actions/modify-health-checks.ts","webpack:///./packages/console-app/src/components/modals/resource-limits/index.ts","webpack:///./public/components/workload-table.tsx","webpack:///./packages/console-app/src/actions/edit-resource-limits.ts","webpack:///./packages/console-app/src/actions/modify-hpa.ts","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js"],"names":["ModifyCount","AddStorage","common","factory","menuActions","kind","obj","labelKey","callback","dc","req","apiVersion","name","metadata","latest","force","opts","ns","namespace","path","rollout","catch","err","error","message","accessReview","group","apiGroup","resource","plural","subresource","verb","spec","paused","getDeploymentConfigStatus","conditions","progressingFailure","type","reason","status","replicaFailure","availableReplicas","updatedReplicas","replicas","DeploymentConfigDetailsList","t","timeout","updatePeriod","interval","triggers","join","className","label","hideEmpty","strategy","count","maxUnavailable","rollingParams","maxSurge","minReadySeconds","DeploymentConfigDeprecationAlert","isInline","variant","title","href","deprecatedDeploymentConfig","text","additionalClassName","DeploymentConfigsDetails","model","key","uid","showPodSelector","showNodeSelector","showTolerations","containers","template","heading","EnvironmentPage","props","loader","then","c","envPath","pages","details","editYaml","nameKey","component","showTitle","selector","canCreate","pods","envEditor","rawEnvData","readOnly","events","DetailsActionMenu","kindObj","context","actions","options","loaded","DROPDOWN","DeploymentConfigsDetailsPage","customActionMenu","displayName","DeploymentConfigTableRow","DeploymentConfigTableHeader","DeploymentConfigsList","Header","Row","virtualize","DeploymentConfigsPage","createProps","to","ListComponent","helpText","environmentComponent","ReplicationControllerPods","showNodes","ReplicationControllersDetailsPage","getResourceStatus","annotations","replicationController","revision","phase","tableColumnClasses","columnClass","ReplicationControllerTableRow","columnID","statusReplicas","specReplicas","timestamp","creationTimestamp","ReplicationControllersList","sortField","transforms","id","sortFunc","ReplicationControllersPage","podData","loadError","resourceKind","deploymentData","inProgressDeploymentData","completedDeploymentData","current","previous","progressRC","completedRC","hasGutter","rc","isRollingOut","enableScaling","size","color","value","healthChecksAdded","container","readinessProbe","livenessProbe","startupProbe","healthChecksUrl","crd","AddHealthChecks","hidden","EditHealthChecks","resourceLimitsModal","m","WorkloadTableRow","customData","labels","WorkloadTableHeader","EditResourceLimits","hasHPAs","mapOfResources","Array","isArray","hpas","length","hpaRoute","shouldHideHPA","isOperatorBacked","csvs","isOperatorBackedWorkload","AddHorizontalPodAutoScaler","resources","EditHorizontalPodAutoScaler","DeleteHorizontalPodAutoScaler","workload","hpa","hideActionForHPAs","action","actionOptions","LongArrowAltRightIcon","height","width","svgPath","yOffset","xOffset","exports","__esModule","global_Color_200"],"mappings":"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","file":"deployment-config-chunk-035e9c5bc4004c059a1f.min.js","sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport {\n  Status,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n  LazyActionMenu,\n} from '@console/shared';\nimport { useTranslation } from 'react-i18next';\nimport PodRingSet from '@console/shared/src/components/pod/PodRingSet';\nimport { AddHealthChecks, EditHealthChecks } from '@console/app/src/actions/modify-health-checks';\nimport { EditResourceLimits } from '@console/app/src/actions/edit-resource-limits';\nimport {\n  AddHorizontalPodAutoScaler,\n  DeleteHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  hideActionForHPAs,\n} from '@console/app/src/actions/modify-hpa';\nimport {\n  k8sCreate,\n  K8sKind,\n  K8sResourceKind,\n  K8sResourceKindReference,\n  referenceForModel,\n  referenceFor,\n} from '../module/k8s';\nimport { errorModal } from './modals';\nimport { DeploymentConfigModel } from '../models';\nimport { Conditions } from './conditions';\nimport { ResourceEventStream } from './events';\nimport { VolumesTable } from './volumes-table';\nimport { DetailsPage, ListPage, Table, RowFunctionArgs } from './factory';\nimport {\n  AsyncComponent,\n  ContainerTable,\n  DetailsItem,\n  Kebab,\n  KebabAction,\n  ResourceSummary,\n  SectionHeading,\n  WorkloadPausedAlert,\n  getExtensionsKebabActionsForKind,\n  navFactory,\n  togglePaused,\n  RuntimeClass,\n  ExternalLink,\n  getDocumentationURL,\n  documentationURLs,\n  isManaged,\n} from './utils';\nimport { ReplicationControllersPage } from './replication-controller';\nimport { WorkloadTableRow, WorkloadTableHeader } from './workload-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\nimport { Alert } from '@patternfly/react-core';\n\nconst DeploymentConfigsReference: K8sResourceKindReference = 'DeploymentConfig';\n\nconst rollout = (dc: K8sResourceKind): Promise<K8sResourceKind> => {\n  const req = {\n    kind: 'DeploymentRequest',\n    apiVersion: 'apps.openshift.io/v1',\n    name: dc.metadata.name,\n    latest: true,\n    force: true,\n  };\n  const opts = {\n    name: dc.metadata.name,\n    ns: dc.metadata.namespace,\n    path: 'instantiate',\n  };\n  return k8sCreate(DeploymentConfigModel, req, opts);\n};\n\nconst RolloutAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Start rollout')\n  labelKey: 'public~Start rollout',\n  callback: () =>\n    rollout(obj).catch((err) => {\n      const error = err.message;\n      errorModal({ error });\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    subresource: 'instantiate',\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\nconst PauseAction: KebabAction = (kind: K8sKind, obj: K8sResourceKind) => ({\n  // t('public~Resume rollouts')\n  // t('public~Pause rollouts')\n  labelKey: obj.spec.paused ? 'public~Resume rollouts' : 'public~Pause rollouts',\n  callback: () => togglePaused(kind, obj).catch((err) => errorModal({ error: err.message })),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n\nconst { ModifyCount, AddStorage, common } = Kebab.factory;\n\nexport const menuActions: KebabAction[] = [\n  RolloutAction,\n  PauseAction,\n  hideActionForHPAs(ModifyCount),\n  AddHealthChecks,\n  AddHorizontalPodAutoScaler,\n  EditHorizontalPodAutoScaler,\n  AddStorage,\n  DeleteHorizontalPodAutoScaler,\n  EditResourceLimits,\n  ...getExtensionsKebabActionsForKind(DeploymentConfigModel),\n  EditHealthChecks,\n  ...common,\n];\n\nconst getDeploymentConfigStatus = (dc: K8sResourceKind): string => {\n  const conditions = _.get(dc, 'status.conditions');\n  const progressingFailure = _.some(conditions, {\n    type: 'Progressing',\n    reason: 'ProgressDeadlineExceeded',\n    status: 'False',\n  });\n  const replicaFailure = _.some(conditions, { type: 'ReplicaFailure', status: 'True' });\n  if (progressingFailure || replicaFailure) {\n    return 'Failed';\n  }\n\n  if (\n    dc.status.availableReplicas === dc.status.updatedReplicas &&\n    dc.spec.replicas === dc.status.availableReplicas\n  ) {\n    return 'Up to date';\n  }\n  return 'Updating';\n};\n\nexport const DeploymentConfigDetailsList = ({ dc }) => {\n  const { t } = useTranslation();\n  const timeout = _.get(dc, 'spec.strategy.rollingParams.timeoutSeconds');\n  const updatePeriod = _.get(dc, 'spec.strategy.rollingParams.updatePeriodSeconds');\n  const interval = _.get(dc, 'spec.strategy.rollingParams.intervalSeconds');\n  const triggers = _.map(dc.spec.triggers, 'type').join(', ');\n  return (\n    <dl className=\"co-m-pane__details\">\n      <DetailsItem label={t('public~Latest version')} obj={dc} path=\"status.latestVersion\" />\n      <DetailsItem label={t('public~Message')} obj={dc} path=\"status.details.message\" hideEmpty />\n      <DetailsItem label={t('public~Update strategy')} obj={dc} path=\"spec.strategy.type\" />\n      {dc.spec.strategy.type === 'Rolling' && (\n        <>\n          <DetailsItem\n            label={t('public~Timeout')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.timeoutSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: timeout })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Update period')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.updatePeriodSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: updatePeriod })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Interval')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.intervalSeconds\"\n            hideEmpty\n          >\n            {t('public~{{count}} second', { count: interval })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max unavailable')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxUnavailable\"\n          >\n            {t('public~{{maxUnavailable}} of {{count}} pod', {\n              maxUnavailable: dc.spec.strategy.rollingParams.maxUnavailable ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n          <DetailsItem\n            label={t('public~Max surge')}\n            obj={dc}\n            path=\"spec.strategy.rollingParams.maxSurge\"\n          >\n            {t('public~{{maxSurge}} greater than {{count}} pod', {\n              maxSurge: dc.spec.strategy.rollingParams.maxSurge ?? 1,\n              count: dc.spec.replicas,\n            })}\n          </DetailsItem>\n        </>\n      )}\n      <DetailsItem label={t('public~Min ready seconds')} obj={dc} path=\"spec.minReadySeconds\">\n        {dc.spec.minReadySeconds\n          ? t('public~{{count}} second', { count: dc.spec.minReadySeconds })\n          : t('public~Not configured')}\n      </DetailsItem>\n      <DetailsItem label={t('public~Triggers')} obj={dc} path=\"spec.triggers\" hideEmpty>\n        {triggers}\n      </DetailsItem>\n      <RuntimeClass obj={dc} />\n      <PodDisruptionBudgetField obj={dc} />\n    </dl>\n  );\n};\n\nexport const DeploymentConfigDeprecationAlert: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert\n      isInline\n      variant=\"info\"\n      title={t('public~DeploymentConfig is being deprecated with OpenShift 4.14')}\n    >\n      <p>\n        {t(\n          'public~Feature development of DeploymentConfigs will be deprecated in OpenShift Container Platform 4.14.',\n        )}\n      </p>\n      <p>\n        {t(\n          'public~DeploymentConfigs will continue to be supported for security and critical fixes, but you should migrate to Deployments wherever it is possible.',\n        )}\n      </p>\n      {!isManaged() && (\n        <ExternalLink\n          href={getDocumentationURL(documentationURLs.deprecatedDeploymentConfig)}\n          text={t('public~Learn more about Deployments')}\n          additionalClassName=\"pf-v5-u-mt-md\"\n        />\n      )}\n    </Alert>\n  );\n};\n\nexport const DeploymentConfigsDetails: React.FC<{ obj: K8sResourceKind }> = ({ obj: dc }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~DeploymentConfig details')} />\n        {dc.spec.paused && <WorkloadPausedAlert obj={dc} model={DeploymentConfigModel} />}\n        <PodRingSet key={dc.metadata.uid} obj={dc} path=\"/spec/replicas\" />\n        <div className=\"co-m-pane__body-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <ResourceSummary resource={dc} showPodSelector showNodeSelector showTolerations>\n                <dt>{t('public~Status')}</dt>\n                <dd>\n                  <Status status={getDeploymentConfigStatus(dc)} />\n                </dd>\n              </ResourceSummary>\n            </div>\n            <div className=\"col-sm-6\">\n              <DeploymentConfigDetailsList dc={dc} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Containers')} />\n        <ContainerTable containers={dc.spec.template.spec.containers} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <VolumesTable resource={dc} heading={t('public~Volumes')} />\n      </div>\n      <div className=\"co-m-pane__body\">\n        <SectionHeading text={t('public~Conditions')} />\n        <Conditions conditions={dc.status.conditions} />\n      </div>\n    </>\n  );\n};\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst ReplicationControllersTab: React.FC<ReplicationControllersTabProps> = ({ obj }) => {\n  const {\n    metadata: { namespace, name },\n  } = obj;\n\n  // Hide the create button to avoid confusion when showing replication controllers for an object.\n  return (\n    <ReplicationControllersPage\n      showTitle={false}\n      namespace={namespace}\n      selector={{\n        'openshift.io/deployment-config.name': name,\n      }}\n      canCreate={false}\n    />\n  );\n};\n// t('public~ReplicationControllers')\nconst pages = [\n  navFactory.details(DeploymentConfigsDetails),\n  navFactory.editYaml(),\n  {\n    href: 'replicationcontrollers',\n    nameKey: 'public~ReplicationControllers',\n    component: ReplicationControllersTab,\n  },\n  navFactory.pods(),\n  navFactory.envEditor(environmentComponent),\n  navFactory.events(ResourceEventStream),\n];\n\nconst DetailsActionMenu: React.FC<DetailsActionMenuProps> = ({ kindObj, obj }) => {\n  const resourceKind = referenceForModel(kindObj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <ActionServiceProvider context={context}>\n      {({ actions, options, loaded }) => {\n        return (\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        );\n      }}\n    </ActionServiceProvider>\n  );\n};\n\nexport const DeploymentConfigsDetailsPage: React.FC = (props) => {\n  const customActionMenu = (kindObj, obj) => {\n    return <DetailsActionMenu kindObj={kindObj} obj={obj} />;\n  };\n  return (\n    <DetailsPage\n      {...props}\n      kind={DeploymentConfigsReference}\n      customActionMenu={customActionMenu}\n      pages={pages}\n    >\n      <DeploymentConfigDeprecationAlert />\n      <br />\n    </DetailsPage>\n  );\n};\nDeploymentConfigsDetailsPage.displayName = 'DeploymentConfigsDetailsPage';\n\nconst kind = 'DeploymentConfig';\n\nconst DeploymentConfigTableRow: React.FC<RowFunctionArgs<K8sResourceKind>> = ({\n  obj,\n  ...props\n}) => {\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n  const customActionMenu = <LazyActionMenu context={context} />;\n  return <WorkloadTableRow obj={obj} customActionMenu={customActionMenu} kind={kind} {...props} />;\n};\n\nconst DeploymentConfigTableHeader = () => {\n  return WorkloadTableHeader();\n};\nDeploymentConfigTableHeader.displayName = 'DeploymentConfigTableHeader';\n\nexport const DeploymentConfigsList: React.FC = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~DeploymentConfigs')}\n      Header={DeploymentConfigTableHeader}\n      Row={DeploymentConfigTableRow}\n      virtualize\n    />\n  );\n};\nDeploymentConfigsList.displayName = 'DeploymentConfigsList';\n\nexport const DeploymentConfigsPage: React.FC<DeploymentConfigsPageProps> = (props) => {\n  const createProps = {\n    to: `/k8s/ns/${props.namespace || 'default'}/deploymentconfigs/~new/form`,\n  };\n  return (\n    <ListPage\n      kind={DeploymentConfigsReference}\n      ListComponent={DeploymentConfigsList}\n      createProps={createProps}\n      canCreate={true}\n      helpText={<DeploymentConfigDeprecationAlert />}\n      {...props}\n    />\n  );\n};\nDeploymentConfigsPage.displayName = 'DeploymentConfigsListPage';\n\ntype DetailsActionMenuProps = {\n  kindObj: K8sKind;\n  obj: K8sResourceKind;\n};\n\ntype ReplicationControllersTabProps = {\n  obj: K8sResourceKind;\n};\n\ntype DeploymentConfigsPageProps = {\n  filterLabel: string;\n  namespace: string;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash-es';\nimport * as classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { sortable } from '@patternfly/react-table';\nimport {\n  Status,\n  LazyActionMenu,\n  ActionServiceProvider,\n  ActionMenu,\n  ActionMenuVariant,\n} from '@console/shared';\nimport { ResourceEventStream } from './events';\nimport { DetailsPage, ListPage, Table, TableData } from './factory';\nimport {\n  ContainerTable,\n  navFactory,\n  SectionHeading,\n  ResourceSummary,\n  ResourcePodCount,\n  AsyncComponent,\n  Kebab,\n  ResourceLink,\n  resourcePath,\n  OwnerReferences,\n  Timestamp,\n  PodsComponent,\n  RuntimeClass,\n} from './utils';\nimport { referenceFor, referenceForModel } from '../module/k8s';\nimport { VolumesTable } from './volumes-table';\nimport { PodDisruptionBudgetField } from '@console/app/src/components/pdb/PodDisruptionBudgetField';\n\nconst EnvironmentPage = (props) => (\n  <AsyncComponent\n    loader={() => import('./environment.jsx').then((c) => c.EnvironmentPage)}\n    {...props}\n  />\n);\n\nconst envPath = ['spec', 'template', 'spec', 'containers'];\nconst environmentComponent = (props) => (\n  <EnvironmentPage\n    obj={props.obj}\n    rawEnvData={props.obj.spec.template.spec}\n    envPath={envPath}\n    readOnly={false}\n  />\n);\n\nconst { details, editYaml, pods, envEditor, events } = navFactory;\n\nconst ReplicationControllerPods = (props) => <PodsComponent {...props} showNodes />;\n\nexport const ReplicationControllersDetailsPage = (props) => {\n  const { t } = useTranslation();\n  const Details = ({ obj: replicationController }) => {\n    const revision = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment-config.latest-version',\n    ]);\n    const phase = _.get(replicationController, [\n      'metadata',\n      'annotations',\n      'openshift.io/deployment.phase',\n    ]);\n    return (\n      <>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~ReplicationController details')} />\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ResourceSummary\n                resource={replicationController}\n                showPodSelector\n                showNodeSelector\n                showTolerations\n              >\n                {revision && (\n                  <>\n                    <dt>{t('public~Deployment revision')}</dt>\n                    <dd>{revision}</dd>\n                  </>\n                )}\n              </ResourceSummary>\n            </div>\n            <div className=\"col-md-6\">\n              <dl className=\"co-m-pane__details\">\n                {phase && (\n                  <>\n                    <dt>{t('public~Phase')}</dt>\n                    <dd>\n                      <Status status={phase} />\n                    </dd>\n                  </>\n                )}\n                <ResourcePodCount resource={replicationController} />\n                <RuntimeClass obj={replicationController} />\n                <PodDisruptionBudgetField obj={replicationController} />\n              </dl>\n            </div>\n          </div>\n        </div>\n        <div className=\"co-m-pane__body\">\n          <SectionHeading text={t('public~Containers')} />\n          <ContainerTable containers={replicationController.spec.template.spec.containers} />\n        </div>\n        <div className=\"co-m-pane__body\">\n          <VolumesTable resource={replicationController} heading={t('public~Volumes')} />\n        </div>\n      </>\n    );\n  };\n\n  const customActionMenu = (kindObj, obj) => {\n    const resourceKind = referenceForModel(kindObj);\n    const context = { [resourceKind]: obj };\n    return (\n      <ActionServiceProvider context={context}>\n        {({ actions, options, loaded }) =>\n          loaded && (\n            <ActionMenu actions={actions} options={options} variant={ActionMenuVariant.DROPDOWN} />\n          )\n        }\n      </ActionServiceProvider>\n    );\n  };\n\n  return (\n    <DetailsPage\n      {...props}\n      getResourceStatus={(resource) =>\n        resource?.metadata?.annotations?.['openshift.io/deployment.phase'] || null\n      }\n      customActionMenu={customActionMenu}\n      pages={[\n        details(Details),\n        editYaml(),\n        pods(ReplicationControllerPods),\n        envEditor(environmentComponent),\n        events(ResourceEventStream),\n      ]}\n    />\n  );\n};\n\nconst kind = 'ReplicationController';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  'pf-m-hidden pf-m-visible-on-md',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-lg',\n  'pf-m-hidden pf-m-visible-on-xl',\n  Kebab.columnClass,\n];\n\nconst ReplicationControllerTableRow = ({ obj }) => {\n  const { t } = useTranslation();\n  const phase = obj?.metadata?.annotations?.['openshift.io/deployment.phase'];\n  const resourceKind = referenceFor(obj);\n  const context = { [resourceKind]: obj };\n\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <Status status={phase} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <OwnerReferences resource={obj} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData className={tableColumnClasses[6]}>\n        <LazyActionMenu context={context} />\n      </TableData>\n    </>\n  );\n};\n\nexport const ReplicationControllersList = (props) => {\n  const { t } = useTranslation();\n\n  const ReplicationControllerTableHeader = () => [\n    {\n      title: t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: t('public~Phase'),\n      sortField: 'metadata.annotations[\"openshift.io/deployment.phase\"]',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: t('public~Owner'),\n      sortField: 'metadata.ownerReferences[0].name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: t('public~Created'),\n      sortField: 'metadata.creationTimestamp',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[5] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[6] },\n    },\n  ];\n\n  return (\n    <Table\n      {...props}\n      aria-label={t('public~ReplicationControllers')}\n      Header={ReplicationControllerTableHeader}\n      Row={ReplicationControllerTableRow}\n      virtualize\n    />\n  );\n};\n\nexport const ReplicationControllersPage = (props) => {\n  const { canCreate = true } = props;\n  return (\n    <ListPage\n      canCreate={canCreate}\n      kind=\"ReplicationController\"\n      ListComponent={ReplicationControllersList}\n      {...props}\n    />\n  );\n};\n","import * as React from 'react';\nimport { Split, SplitItem, Bullseye, Icon } from '@patternfly/react-core';\nimport { LongArrowAltRightIcon } from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-right-icon';\nimport { global_Color_200 as color200 } from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport { LoadingInline } from '@console/internal/components/utils';\nimport { K8sResourceKind, modelFor } from '@console/internal/module/k8s';\nimport { usePodsWatcher } from '../../hooks';\nimport { getPodData } from '../../utils';\nimport PodRing from './PodRing';\n\ninterface PodRingSetProps {\n  obj: K8sResourceKind;\n  path: string;\n  impersonate?: string;\n}\n\nconst PodRingSet: React.FC<PodRingSetProps> = ({ obj, path }) => {\n  const { podData, loadError, loaded } = usePodsWatcher(obj);\n  const resourceKind = modelFor(obj?.kind);\n\n  const deploymentData = React.useMemo(() => {\n    return loaded && !loadError\n      ? getPodData({ ...podData, obj })\n      : { inProgressDeploymentData: null, completedDeploymentData: null };\n  }, [loadError, loaded, podData, obj]);\n\n  const current = podData?.current && podData?.current.obj;\n  const previous = podData?.previous && podData?.previous.obj;\n  const { inProgressDeploymentData, completedDeploymentData } = deploymentData;\n  const progressRC = inProgressDeploymentData && current;\n  const completedRC = !!inProgressDeploymentData && completedDeploymentData ? previous : current;\n\n  return loaded ? (\n    <Split hasGutter>\n      <SplitItem>\n        <PodRing\n          key={inProgressDeploymentData ? 'deploy' : 'notDeploy'}\n          pods={completedDeploymentData}\n          rc={podData?.isRollingOut ? completedRC : podData?.current?.obj}\n          resourceKind={resourceKind}\n          obj={obj}\n          path={path}\n          enableScaling={!podData?.isRollingOut}\n        />\n      </SplitItem>\n      {inProgressDeploymentData && (\n        <>\n          <SplitItem>\n            <Bullseye>\n              <Icon size=\"xl\">\n                <LongArrowAltRightIcon color={color200.value} />\n              </Icon>\n            </Bullseye>\n          </SplitItem>\n          <SplitItem>\n            <PodRing\n              pods={inProgressDeploymentData}\n              rc={progressRC}\n              resourceKind={resourceKind}\n              obj={obj}\n              path={path}\n              enableScaling={false}\n            />\n          </SplitItem>\n        </>\n      )}\n    </Split>\n  ) : (\n    <LoadingInline />\n  );\n};\n\nexport default PodRingSet;\n","import * as _ from 'lodash';\nimport { KebabOption } from '@console/internal/components/utils';\nimport { K8sKind, K8sResourceKind, referenceFor } from '@console/internal/module/k8s';\n\nconst healthChecksAdded = (resource: K8sResourceKind): boolean => {\n  const containers = resource?.spec?.template?.spec?.containers;\n  return _.every(\n    containers,\n    (container) => container.readinessProbe || container.livenessProbe || container.startupProbe,\n  );\n};\n\nconst healthChecksUrl = (model: K8sKind, obj: K8sResourceKind): string => {\n  const {\n    kind,\n    metadata: { name, namespace },\n  } = obj;\n  const resourceKind = model.crd ? referenceFor(obj) : kind;\n  const containers = obj?.spec?.template?.spec?.containers;\n  const containerName = containers?.[0]?.name;\n  return `/k8s/ns/${namespace}/${resourceKind}/${name}/containers/${containerName}/health-checks`;\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Add Health Checks')\n    labelKey: 'console-app~Add Health Checks',\n    hidden: healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'update',\n    },\n  };\n};\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHealthChecks = (model: K8sKind, obj: K8sResourceKind): KebabOption => {\n  return {\n    // t('console-app~Edit Health Checks')\n    labelKey: 'console-app~Edit Health Checks',\n    hidden: !healthChecksAdded(obj),\n    href: healthChecksUrl(model, obj),\n    accessReview: {\n      group: model.apiGroup,\n      resource: model.plural,\n      name: obj.metadata.name,\n      namespace: obj.metadata.namespace,\n      verb: 'get',\n    },\n  };\n};\n","export const resourceLimitsModal = (props) =>\n  import(\n    './ResourceLimitsModalLauncher' /* webpackChunkName: \"resource-limits-modal\" */\n  ).then((m) => m.resourceLimitsModal(props));\n","import * as React from 'react';\nimport * as classNames from 'classnames';\nimport { sortable } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom-v5-compat';\nimport { K8sResourceKind } from '../module/k8s';\nimport { TableData } from './factory';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport {\n  Kebab,\n  KebabAction,\n  LabelList,\n  ResourceKebab,\n  ResourceLink,\n  resourcePath,\n  Selector,\n} from './utils';\n\nconst tableColumnClasses = [\n  '',\n  '',\n  classNames('pf-m-hidden', 'pf-m-visible-on-sm', 'pf-v5-u-w-16-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  classNames('pf-m-hidden', 'pf-m-visible-on-lg'),\n  Kebab.columnClass,\n];\n\nexport const WorkloadTableRow: React.FC<WorkloadTableRowProps> = ({\n  obj,\n  kind,\n  menuActions,\n  customActionMenu,\n  customData,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <TableData className={tableColumnClasses[0]}>\n        <ResourceLink kind={kind} name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData\n        className={classNames(tableColumnClasses[1], 'co-break-word')}\n        columnID=\"namespace\"\n      >\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[2]}>\n        <Link\n          to={`${resourcePath(kind, obj.metadata.name, obj.metadata.namespace)}/pods`}\n          title=\"pods\"\n        >\n          {t('public~{{statusReplicas}} of {{specReplicas}} pods', {\n            statusReplicas: obj.status.replicas || 0,\n            specReplicas: obj.spec.replicas,\n          })}\n        </Link>\n      </TableData>\n      <TableData className={tableColumnClasses[3]}>\n        <LabelList kind={kind} labels={obj.metadata.labels} />\n      </TableData>\n      <TableData className={tableColumnClasses[4]}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData className={tableColumnClasses[5]}>\n        {customActionMenu || (\n          <ResourceKebab actions={menuActions} kind={kind} resource={obj} customData={customData} />\n        )}\n      </TableData>\n    </>\n  );\n};\nWorkloadTableRow.displayName = 'WorkloadTableRow';\ntype WorkloadTableRowProps = {\n  obj: K8sResourceKind;\n  kind: string;\n  menuActions?: KebabAction[];\n  customActionMenu?: React.ReactNode; // Renders a custom action menu.\n  customData?: { [key: string]: any };\n};\n\nexport const WorkloadTableHeader = () => {\n  return [\n    {\n      title: i18next.t('public~Name'),\n      sortField: 'metadata.name',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[0] },\n    },\n    {\n      title: i18next.t('public~Namespace'),\n      sortField: 'metadata.namespace',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[1] },\n      id: 'namespace',\n    },\n    {\n      title: i18next.t('public~Status'),\n      sortFunc: 'numReplicas',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[2] },\n    },\n    {\n      title: i18next.t('public~Labels'),\n      sortField: 'metadata.labels',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[3] },\n    },\n    {\n      title: i18next.t('public~Pod selector'),\n      sortField: 'spec.selector',\n      transforms: [sortable],\n      props: { className: tableColumnClasses[4] },\n    },\n    {\n      title: '',\n      props: { className: tableColumnClasses[5] },\n    },\n  ];\n};\nWorkloadTableHeader.displayName = 'WorkloadTableHeader';\n","import { KebabOption } from '@console/internal/components/utils';\nimport { K8sResourceKind, K8sKind } from '@console/internal/module/k8s';\nimport { resourceLimitsModal } from '../components/modals/resource-limits';\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditResourceLimits = (kind: K8sKind, obj: K8sResourceKind): KebabOption => ({\n  // t('console-app~Edit resource limits')\n  labelKey: 'console-app~Edit resource limits',\n  callback: () =>\n    resourceLimitsModal({\n      model: kind,\n      resource: obj,\n    }),\n  accessReview: {\n    group: kind.apiGroup,\n    resource: kind.plural,\n    name: obj.metadata.name,\n    namespace: obj.metadata.namespace,\n    verb: 'patch',\n  },\n});\n","import { KebabAction } from '@console/internal/components/utils';\nimport { HorizontalPodAutoscalerModel } from '@console/internal/models';\nimport {\n  HorizontalPodAutoscalerKind,\n  K8sKind,\n  K8sResourceCommon,\n  referenceForModel,\n} from '@console/internal/module/k8s';\nimport { isOperatorBackedService, deleteHPAModal, isHelmResource } from '@console/shared';\n\ntype RelatedResources = {\n  hpas?: HorizontalPodAutoscalerKind[];\n};\n\nconst hasHPAs = (mapOfResources: RelatedResources) =>\n  Array.isArray(mapOfResources?.hpas) && mapOfResources.hpas.length > 0;\n\nconst hpaRoute = ({ metadata: { name, namespace } }: K8sResourceCommon, kind: K8sKind) =>\n  `/workload-hpa/ns/${namespace}/${referenceForModel(kind)}/${name}`;\n\nconst isOperatorBackedWorkload = (\n  obj: K8sResourceCommon,\n  customData?: { [key: string]: any },\n): boolean => customData?.isOperatorBacked || isOperatorBackedService(obj, customData?.csvs);\n\nconst shouldHideHPA = (obj: K8sResourceCommon, customData?: { [key: string]: any }) =>\n  isHelmResource(obj) || isOperatorBackedWorkload(obj, customData);\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const AddHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Add HorizontalPodAutoscaler')\n  labelKey: 'console-app~Add HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'create',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const EditHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Edit HorizontalPodAutoscaler')\n  labelKey: 'console-app~Edit HorizontalPodAutoscaler',\n  href: hpaRoute(obj, kind),\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'update',\n  },\n});\n\n/** @deprecated - Moving to Extensible Action for Deployment resource, see @console/app/src/actions */\nexport const DeleteHorizontalPodAutoScaler: KebabAction = (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n  customData?: { [key: string]: any },\n) => ({\n  // t('console-app~Remove HorizontalPodAutoscaler')\n  labelKey: 'console-app~Remove HorizontalPodAutoscaler',\n  callback: () => {\n    deleteHPAModal({\n      workload: obj,\n      hpa: resources?.hpas?.[0],\n    });\n  },\n  hidden: !hasHPAs(resources) || shouldHideHPA(obj, customData),\n  accessReview: {\n    group: HorizontalPodAutoscalerModel.apiGroup,\n    resource: HorizontalPodAutoscalerModel.plural,\n    namespace: obj.metadata.namespace,\n    verb: 'delete',\n  },\n});\n\nexport const hideActionForHPAs = (action: KebabAction): KebabAction => (\n  kind: K8sKind,\n  obj: K8sResourceCommon,\n  resources: RelatedResources,\n) => {\n  const actionOptions = action(kind, obj);\n  return {\n    ...actionOptions,\n    hidden: hasHPAs(resources) || actionOptions.hidden,\n  };\n};\n","import { createIcon } from '../createIcon';\n\nexport const LongArrowAltRightIconConfig = {\n  name: 'LongArrowAltRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LongArrowAltRightIcon = createIcon(LongArrowAltRightIconConfig);\n\nexport default LongArrowAltRightIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-v5-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-v5-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;"],"sourceRoot":""}