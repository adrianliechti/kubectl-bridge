(window.webpackJsonp=window.webpackJsonp||[]).push([[212,207],{4411:function(e,a,t){"use strict";t.r(a),t.d(a,"machineReference",(function(){return R})),t.d(a,"MachineList",(function(){return w})),t.d(a,"MachinePage",(function(){return I})),t.d(a,"MachineDetailsPage",(function(){return L}));var l=t(0),c=t(54),n=t(18),s=t(7),i=t(15),r=t(13),m=t(10),o=t(8),d=t(972),u=t(6445),b=t(627),p=t(40),E=t(1202),v=t(1203),h=t(1204),N=t(770),f=t(5),g=t(409),j=t(108),O=t(334),M=t(633),y=t(1952),_=t(336);const{common:F}=f.F.factory,k=[...f.F.getExtensionsActionsForKind(m.MachineModel),...F],R=Object(o.Hb)(m.MachineModel),S=[{className:"",id:"name"},{className:"",id:"namespace"},{className:n("pf-m-hidden","pf-m-visible-on-sm"),id:"nodeRef"},{className:n("pf-m-hidden","pf-m-visible-on-md"),id:"phase"},{className:n("pf-m-hidden","pf-m-visible-on-lg"),id:"provider"},{className:n("pf-m-hidden","pf-m-visible-on-xl"),id:"region"},{className:n("pf-m-hidden","pf-m-visible-on-xl"),id:"avail"},{className:f.F.columnClass,id:""}],C=e=>{var a,t;return null===(t=null===(a=null==e?void 0:e.status)||void 0===a?void 0:a.providerStatus)||void 0===t?void 0:t.instanceState},D=({obj:e,activeColumnIDs:a})=>{const t=Object(i.Wc)(e),c=Object(i.Yc)(e),s=Object(i.bd)(e),r=C(e);return l.createElement(l.Fragment,null,l.createElement(O.TableData,Object.assign({},S[0],{className:n(S[0].className,"co-break-word"),activeColumnIDs:a}),l.createElement(f.hb,{kind:R,name:e.metadata.name,namespace:e.metadata.namespace})),l.createElement(O.TableData,Object.assign({},S[1],{className:n(S[1].className,"co-break-word"),activeColumnIDs:a}),l.createElement(f.hb,{kind:"Namespace",name:e.metadata.namespace})),l.createElement(O.TableData,Object.assign({},S[2],{activeColumnIDs:a}),t?l.createElement(f.V,{name:t}):"-"),l.createElement(O.TableData,Object.assign({},S[3],{activeColumnIDs:a}),l.createElement(i.cc,{status:Object(i.Xc)(e)})),l.createElement(O.TableData,Object.assign({},S[4],{activeColumnIDs:a}),null!=r?r:"-"),l.createElement(O.TableData,Object.assign({},S[5],{activeColumnIDs:a}),c||"-"),l.createElement(O.TableData,Object.assign({},S[6],{activeColumnIDs:a}),s||"-"),l.createElement(O.TableData,Object.assign({},S[7],{activeColumnIDs:a}),l.createElement(f.gb,{actions:k,kind:R,resource:e})))},T=({obj:e})=>{var a,t;const c=Object(i.Wc)(e),n=Object(i.Zc)(e),r=Object(i.Uc)(e),m=Object(i.Yc)(e),o=Object(i.bd)(e),b=C(e),{t:p}=Object(s.useTranslation)();return l.createElement(l.Fragment,null,l.createElement("div",{className:"co-m-pane__body"},l.createElement(f.ob,{text:p("public~Machine details")}),l.createElement("div",{className:"co-m-pane__body-group"},l.createElement("div",{className:"row"},l.createElement("div",{className:"col-sm-6"},l.createElement(f.lb,{resource:e})),l.createElement("div",{className:"col-sm-6"},l.createElement("dl",{className:"co-m-pane__details"},l.createElement(f.r,{label:p("public~Phase"),obj:e,path:"status.phase"},l.createElement(i.cc,{status:Object(i.Xc)(e)})),l.createElement(f.r,{label:p("public~Provider state"),obj:e,path:"status.providerStatus.instanceState"},b),c&&l.createElement(l.Fragment,null,l.createElement("dt",null,p("public~Node")),l.createElement("dd",null,l.createElement(f.V,{name:c}))),n&&l.createElement(l.Fragment,null,l.createElement("dt",null,p("public~Machine role")),l.createElement("dd",null,n)),r&&l.createElement(l.Fragment,null,l.createElement("dt",null,p("public~Instance type")),l.createElement("dd",null,r)),m&&l.createElement(l.Fragment,null,l.createElement("dt",null,p("public~Region")),l.createElement("dd",null,m)),o&&l.createElement(l.Fragment,null,l.createElement("dt",null,p("public~Availability zone")),l.createElement("dd",null,o)),l.createElement("dt",null,p("public~Machine addresses")),l.createElement("dd",null,l.createElement(u.a,{ips:Object(i.Tc)(e),expand:!0}))))))),l.createElement("div",{className:"co-m-pane__body"},l.createElement(f.ob,{text:p("public~Conditions")}),l.createElement(d.b,{conditions:null===(t=null===(a=e.status)||void 0===a?void 0:a.providerStatus)||void 0===t?void 0:t.conditions})))},w=e=>{const{t:a}=Object(s.useTranslation)(),t=l.useMemo(()=>[{title:a("public~Name"),sort:"metadata.name",transforms:[c.a],props:{className:S[0].className},id:S[0].id},{title:a("public~Namespace"),sort:"metadata.namespace",transforms:[c.a],props:{className:S[1].className},id:S[1].id},{title:a("public~Node"),sort:"status.nodeRef.name",transforms:[c.a],props:{className:S[2].className},id:S[2].id},{title:a("public~Phase"),sort:(e,a)=>e.sort(Object(M.a)(a,i.Xc)),transforms:[c.a],props:{className:S[3].className},id:S[3].id},{title:a("public~Provider state"),sort:"status.providerStatus.instanceState",transforms:[c.a],props:{className:S[4].className},id:S[4].id},{title:a("public~Region"),sort:"metadata.labels['machine.openshift.io/region']",transforms:[c.a],props:{className:S[5].className},id:S[5].id},{title:a("public~Availability zone"),sort:"metadata.labels['machine.openshift.io/zone']",transforms:[c.a],props:{className:S[6].className},id:S[6].id},{title:"",props:{className:S[7].className},id:S[7].id}],[a]),[n]=Object(y.useActiveColumns)({columns:t});return l.createElement(O.default,Object.assign({},e,{"aria-label":a("public~Machines"),label:a("public~Machines"),columns:n,Row:D}))},I=({selector:e,namespace:a,showTitle:t=!0,hideLabelFilter:c,hideNameLabelFilters:n,hideColumnManagement:i})=>{const{t:d}=Object(s.useTranslation)(),[u]=Object(b.a)(),[p,f,g]=Object(j.a)({kind:Object(o.Hb)(m.MachineModel),isList:!0,selector:e,namespace:a}),O=[{type:"name",filter:Object(_.d)(u).machine}],[M,y,F]=Object(h.useListPageFilter)(p,O);return l.createElement(l.Fragment,null,l.createElement(v.default,{title:t?d(m.MachineModel.labelPluralKey):void 0},l.createElement(N.default,{groupVersionKind:Object(o.Hb)(m.MachineModel)},d("public~Create machine"))),l.createElement(r.n,null,l.createElement(E.default,{data:M,loaded:f,onFilterChange:F,hideNameLabelFilters:n,hideLabelFilter:c,hideColumnManagement:i}),l.createElement(w,{data:y,unfilteredData:p,loaded:f,loadError:g})))},L=e=>l.createElement(p.a,Object.assign({},e,{kind:R,menuActions:k,pages:[f.mc.details(T),f.mc.editYaml(),f.mc.events(g.ResourceEventStream)],getResourceStatus:i.Xc}))},4502:function(e,a,t){"use strict";t.r(a),t.d(a,"editCountAction",(function(){return D})),t.d(a,"getDesiredReplicas",(function(){return L})),t.d(a,"getReadyReplicas",(function(){return A})),t.d(a,"getAvailableReplicas",(function(){return P})),t.d(a,"MachineCounts",(function(){return x})),t.d(a,"MachineTabPage",(function(){return H})),t.d(a,"MachineSetList",(function(){return z})),t.d(a,"MachineSetPage",(function(){return G})),t.d(a,"MachineSetDetailsPage",(function(){return V}));var l=t(0),c=t(489),n=t(14),s=t(54),i=t(18),r=t(15),m=t(108),o=t(13),d=t(19),u=t(88),b=t(615),p=t(7),E=t(10),v=t(8),h=t(4411),N=t(131),f=t(40),g=t(334),j=t(633),O=t(1202),M=t(1203),y=t(1204),_=t(770),F=t(5),k=t(409);const R={isList:!0,kind:Object(v.Hb)(E.MachineModel)},S={isList:!0,kind:E.NodeModel.kind,namespaced:!1},C=(e,a)=>Object(N.l)({resourceKind:e,resource:a,titleKey:"public~Edit Machine count",messageKey:"public~{{resourceKind}} maintain the proper number of healthy machines.",messageVariables:{resourceKind:e.labelPlural}}),D=(e,a)=>({labelKey:"public~Edit Machine count",callback:()=>C(e,a),accessReview:{group:e.apiGroup,resource:e.plural,name:a.metadata.name,namespace:a.metadata.namespace,verb:"patch"}}),T=[D,(e,a)=>({labelKey:"public~Create MachineAutoscaler",callback:()=>Object(N.j)({machineSet:a,cancel:c.a,close:c.a}),accessReview:{group:E.MachineAutoscalerModel.apiGroup,resource:E.MachineAutoscalerModel.plural,namespace:a.metadata.namespace,verb:"create"}}),...F.F.getExtensionsActionsForKind(E.MachineSetModel),...F.F.factory.common],w=Object(v.Hb)(E.MachineModel),I=Object(v.Hb)(E.MachineSetModel),L=e=>{var a,t;return null!==(t=null===(a=null==e?void 0:e.spec)||void 0===a?void 0:a.replicas)&&void 0!==t?t:1},A=e=>{var a;return(null===(a=null==e?void 0:e.status)||void 0===a?void 0:a.readyReplicas)||0},P=e=>{var a;return(null===(a=null==e?void 0:e.status)||void 0===a?void 0:a.availableReplicas)||0},K=[{className:"",id:"name"},{className:"",id:"namespace"},{className:i("pf-m-hidden","pf-m-visible-on-md"),id:"machines"},{className:i("pf-m-hidden","pf-m-visible-on-lg"),id:"instanceType"},{className:i("pf-m-hidden","pf-m-visible-on-lg"),id:"cpu"},{className:i("pf-m-hidden","pf-m-visible-on-lg"),id:"memory"},{className:F.F.columnClass,id:""}],x=({resourceKind:e,resource:a})=>{const t=L(a),c=(null===(s=null==(n=a)?void 0:n.status)||void 0===s?void 0:s.replicas)||0;var n,s;const i=A(a),r=P(a),m=Object(F.Dc)({group:e.apiGroup,resource:e.plural,verb:"patch",name:a.metadata.name,namespace:a.metadata.namespace}),{t:o}=Object(p.useTranslation)(),E=`${t}  ${o("public~machine",{count:t})}`;return l.createElement("div",{className:"co-m-pane__body-group"},l.createElement("div",{className:"co-detail-table"},l.createElement("div",{className:"co-detail-table__row row"},l.createElement("div",{className:"co-detail-table__section"},l.createElement("dl",{className:"co-m-pane__details"},l.createElement("dt",{className:"co-detail-table__section-header"},o("public~Desired count")),l.createElement("dd",null,m?l.createElement(d.a,{variant:"link",type:"button",isInline:!0,onClick:t=>{t.preventDefault(),C(e,a)}},E,l.createElement(b.a,{className:"co-icon-space-l pf-v5-c-button-icon--plain"})):E))),l.createElement("div",{className:"co-detail-table__section"},l.createElement("dl",{className:"co-m-pane__details"},l.createElement("dt",{className:"co-detail-table__section-header"},o("public~Current count")),l.createElement("dd",null,l.createElement(u.a,{content:o("public~The most recently observed number of replicas.")},l.createElement("span",null,o("public~{{replicas}} machine",{replicas:c,count:c})))))),l.createElement("div",{className:"co-detail-table__section"},l.createElement("dl",{className:"co-m-pane__details"},l.createElement("dt",{className:"co-detail-table__section-header"},o("public~Ready count")),l.createElement("dd",null,l.createElement(u.a,{content:o("public~The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is ready.")},l.createElement("span",null,o("public~{{readyReplicas}} machine",{readyReplicas:i,count:i})))))),l.createElement("div",{className:"co-detail-table__section co-detail-table__section--last"},l.createElement("dl",{className:"co-m-pane__details"},l.createElement("dt",{className:"co-detail-table__section-header"},o("public~Available count")),l.createElement("dd",null,l.createElement(u.a,{content:o("public~The number of available replicas (ready for at least minReadySeconds) for this MachineSet.")},l.createElement("span",null,o("public~{{availableReplicas}} machine",{availableReplicas:r,count:r})))))))))},H=({obj:e})=>l.createElement(h.MachinePage,{namespace:e.metadata.namespace,showTitle:!1,selector:e.spec.selector}),$=({obj:e})=>{var a;const t=Object(r.Zc)(e),{availabilityZone:c,region:n}=Object(r.Sc)(e),s=Object(r.ad)(e),{t:i}=Object(p.useTranslation)();return l.createElement(l.Fragment,null,l.createElement("div",{className:"co-m-pane__body"},l.createElement(F.ob,{text:i("public~MachineSet details")}),l.createElement(x,{resourceKind:E.MachineSetModel,resource:e}),l.createElement("div",{className:"row"},l.createElement("div",{className:"col-md-6"},l.createElement(F.lb,{resource:e},l.createElement("dt",null,i("public~Selector")),l.createElement("dd",null,l.createElement(F.pb,{kind:w,selector:null===(a=e.spec)||void 0===a?void 0:a.selector,namespace:e.metadata.namespace})),l.createElement("dt",null,i("public~Instance type")),l.createElement("dd",null,s||"-"),t&&l.createElement(l.Fragment,null,l.createElement("dt",null,i("public~Machine role")),l.createElement("dd",null,t)),n&&l.createElement(l.Fragment,null,l.createElement("dt",null,i("public~Region")),l.createElement("dd",null,n)),c&&l.createElement(l.Fragment,null,l.createElement("dt",null,i("public~Availability zone")),l.createElement("dd",null,c)))))))},z=e=>{const{t:a}=Object(p.useTranslation)(),[t]=Object(m.a)(R),[c]=Object(m.a)(S),o=l.useCallback(e=>{var a,l,n,s,i;const r=null===(a=null!=t?t:[])||void 0===a?void 0:a.find(a=>new v.e(e.spec.selector).matches(a)),m=(null!=c?c:[]).find(e=>{var a,t;return r&&(null===(t=null===(a=r.status)||void 0===a?void 0:a.nodeRef)||void 0===t?void 0:t.uid)===e.metadata.uid}),{cpu:o,memory:d}=null!==(n=null===(l=null==m?void 0:m.status)||void 0===l?void 0:l.capacity)&&void 0!==n?n:{};return{cpu:null!==(s=Object(F.Ib)(o))&&void 0!==s?s:0,memory:Object(F.Nb)(null!==(i=Object(F.Ib)(d))&&void 0!==i?i:0)}},[t,c]),d=l.useMemo(()=>[{title:a("public~Name"),sort:"metadata.name",transforms:[s.a],props:{className:K[0].className},id:K[0].id},{title:a("public~Namespace"),sort:"metadata.namespace",transforms:[s.a],props:{className:K[1].className},id:K[1].id},{title:a("public~Machines"),sort:"status.readyReplicas",transforms:[s.a],props:{className:K[2].className},id:K[2].id},{title:a("public~Instance type"),sort:(e,a)=>e.sort(Object(j.a)(a,r.ad)),transforms:[s.a],props:{className:K[3].className},id:K[3].id},{title:a("public~CPU"),sort:(e,a)=>e.sort(Object(j.a)(a,e=>o(e).cpu)),transforms:[s.a],props:{className:K[4].className},id:K[4].id},{title:a("public~Memory"),sort:(e,a)=>e.sort(Object(j.a)(a,e=>o(e).memory)),transforms:[s.a],props:{className:K[5].className},id:K[5].id},{title:"",props:{className:K[6].className},id:K[6].id}],[o,a]);return l.createElement(g.default,Object.assign({},e,{"aria-label":a("public~MachineSets"),label:a("public~MachineSets"),columns:d,Row:({obj:e})=>{const{cpu:t,memory:c}=o(e),s=A(e),m=L(e),d=Object(r.ad)(e);return l.createElement(l.Fragment,null,l.createElement(f.k,Object.assign({},K[0]),l.createElement(F.hb,{kind:I,name:e.metadata.name,namespace:e.metadata.namespace})),l.createElement(f.k,Object.assign({},K[1],{className:i(K[1].className,"co-break-word")}),l.createElement(F.hb,{kind:"Namespace",name:e.metadata.namespace})),l.createElement(f.k,Object.assign({},K[2]),l.createElement(n.Link,{to:Object(F.tc)(I,e.metadata.name,e.metadata.namespace)+"/machines"},a("public~{{readyReplicas}} of {{count}} machine",{readyReplicas:s,count:m}))),l.createElement(f.k,Object.assign({},K[3]),d||"-"),l.createElement(f.k,Object.assign({},K[4]),a("public~{{count}} core",{count:t})),l.createElement(f.k,Object.assign({},K[5]),a("public~{{memory}} GiB",{memory:c})),l.createElement(f.k,Object.assign({},K[6]),l.createElement(F.gb,{actions:T,kind:I,resource:e})))}}))},G=({namespace:e,selector:a,showTitle:t=!0,hideLabelFilter:c,hideNameLabelFilters:n,hideColumnManagement:s})=>{const[i,r,d]=Object(m.a)({isList:!0,kind:Object(v.Hb)(E.MachineSetModel),selector:a,namespace:e}),[u,b,h]=Object(y.useListPageFilter)(i),{t:N}=Object(p.useTranslation)();return l.createElement(l.Fragment,null,l.createElement(M.default,{title:t?N("public~MachineSets"):void 0},l.createElement(_.default,{groupVersionKind:Object(v.Hb)(E.MachineSetModel)},N("public~Create MachineSet"))),l.createElement(o.n,null,l.createElement(O.default,{data:u,loaded:r,onFilterChange:h,hideNameLabelFilters:n,hideLabelFilter:c,hideColumnManagement:s}),l.createElement(z,{data:b,unfilteredData:i,loaded:r,loadError:d})))},V=e=>l.createElement(f.a,Object.assign({},e,{menuActions:T,kind:I,pages:[F.mc.details($),F.mc.editYaml(),F.mc.machines(H),F.mc.events(k.ResourceEventStream)]}))},6445:function(e,a,t){"use strict";var l=t(0),c=t(461),n=t(15);a.a=({ips:e,expand:a=!1})=>l.createElement(n.F,null,c.a(e,["type"]).map(({type:e,address:t})=>t&&(a||"InternalIP"===e)&&l.createElement(n.G,{key:`{${e}/${t}`,title:e.replace(/([a-z])([A-Z])/g,"$1 $2")},t)))}}]);
//# sourceMappingURL=machine-set-chunk-49c7a25be9b2197cba4b.min.js.map