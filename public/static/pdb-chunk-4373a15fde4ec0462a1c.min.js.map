{"version":3,"sources":["webpack:///./packages/console-app/src/components/pdb/PDBList.tsx","webpack:///./packages/console-app/src/components/pdb/PDBTableRow.tsx","webpack:///./packages/console-app/src/components/pdb/PDBDetailsPage.tsx","webpack:///./packages/console-app/src/components/pdb/PDBPage.tsx","webpack:///./packages/console-app/src/components/pdb/pdb-table-columns.tsx"],"names":["props","t","columns","label","Row","common","factory","menuActions","getExtensionsActionsForKind","obj","activeColumnIDs","isPDBViolated","kind","name","metadata","namespace","selector","spec","maxUnavailable","minAvailable","status","disruptionsAllowed","content","timestamp","creationTimestamp","actions","resource","PodDisruptionBudgetDetails","className","text","showPodSelector","path","PodDisruptionBudgetDetailsPage","pages","details","editYaml","pods","PodDisruptionBudgetsPage","showTitle","resources","loaded","loadError","groupVersionKind","group","apiGroup","version","apiVersion","isList","namespaced","data","filteredData","onFilterChange","resourceKind","accessReview","title","labelPluralKey","undefined","createAccessReview","unfilteredData","tableColumnInfo","id","columnClass","getPDBTableColumns","sort","transforms"],"mappings":"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","file":"pdb-chunk-4373a15fde4ec0462a1c.min.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useActiveColumns } from '@console/internal/components/factory/Table/active-columns-hook';\nimport VirtualizedTable from '@console/internal/components/factory/Table/VirtualizedTable';\nimport { getPDBTableColumns } from './pdb-table-columns';\nimport PodDisruptionBudgetTableRow from './PDBTableRow';\nimport { PodDisruptionBudgetKind } from './types';\n\nconst PodDisruptionBudgetList: React.FC<PodDisruptionBudgetsListProps> = (props) => {\n  const { t } = useTranslation();\n  const [columns] = useActiveColumns({ columns: getPDBTableColumns() });\n\n  return (\n    <VirtualizedTable<PodDisruptionBudgetKind>\n      {...props}\n      aria-label={t('console-app~PodDisruptionBudgets')}\n      label={t('console-app~PodDisruptionBudgets')}\n      columns={columns}\n      Row={PodDisruptionBudgetTableRow}\n    />\n  );\n};\n\nexport default PodDisruptionBudgetList;\n\ntype PodDisruptionBudgetsListProps = {\n  data: PodDisruptionBudgetKind[];\n  unfilteredData: PodDisruptionBudgetKind[];\n  loaded: boolean;\n  loadError: any;\n};\n","import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { RowProps, YellowExclamationTriangleIcon } from '@console/dynamic-plugin-sdk';\nimport { TableData } from '@console/internal/components/factory/Table/VirtualizedTable';\nimport {\n  Kebab,\n  ResourceLink,\n  Timestamp,\n  ResourceKebab,\n  Selector,\n} from '@console/internal/components/utils';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PodDisruptionBudgetModel } from '../../models';\nimport { tableColumnInfo } from './pdb-table-columns';\nimport { PodDisruptionBudgetKind } from './types';\nimport { isDisruptionViolated } from './utils/get-pdb-resources';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(PodDisruptionBudgetModel), ...common];\n\nconst PodDisruptionBudgetTableRow: React.FC<RowProps<PodDisruptionBudgetKind>> = ({\n  obj,\n  activeColumnIDs,\n}) => {\n  const { t } = useTranslation();\n  const isPDBViolated = isDisruptionViolated(obj);\n  return (\n    <>\n      <TableData {...tableColumnInfo[0]} activeColumnIDs={activeColumnIDs}>\n        <ResourceLink\n          kind={referenceForModel(PodDisruptionBudgetModel)}\n          name={obj.metadata.name}\n          namespace={obj.metadata.namespace}\n        />\n      </TableData>\n      <TableData {...tableColumnInfo[1]} activeColumnIDs={activeColumnIDs}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n      <TableData {...tableColumnInfo[2]} activeColumnIDs={activeColumnIDs}>\n        <Selector selector={obj.spec.selector} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData {...tableColumnInfo[3]} activeColumnIDs={activeColumnIDs}>\n        {_.isNil(obj.spec.maxUnavailable) && _.isNil(obj.spec.minAvailable)\n          ? '-'\n          : _.isNil(obj.spec.maxUnavailable)\n          ? `${t('console-app~Min available')} ${obj.spec.minAvailable}`\n          : `${t('console-app~Max unavailable')} ${obj.spec.maxUnavailable}`}\n      </TableData>\n      <TableData {...tableColumnInfo[4]} activeColumnIDs={activeColumnIDs}>\n        <>\n          {obj.status.disruptionsAllowed}{' '}\n          {isPDBViolated && (\n            <Tooltip content={t('console-app~Disruption not allowed')}>\n              <YellowExclamationTriangleIcon />\n            </Tooltip>\n          )}\n        </>\n      </TableData>\n      <TableData {...tableColumnInfo[5]} activeColumnIDs={activeColumnIDs}>\n        <Timestamp timestamp={obj.metadata.creationTimestamp} />\n      </TableData>\n      <TableData {...tableColumnInfo[6]} activeColumnIDs={activeColumnIDs}>\n        <ResourceKebab actions={menuActions} kind={obj.kind} resource={obj} />\n      </TableData>\n    </>\n  );\n};\n\nexport default PodDisruptionBudgetTableRow;\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { DetailsPage } from '@console/internal/components/factory';\nimport {\n  Kebab,\n  ResourceSummary,\n  SectionHeading,\n  navFactory,\n  DetailsItem,\n} from '@console/internal/components/utils';\nimport { PodDisruptionBudgetModel } from '../../models';\nimport { PodDisruptionBudgetKind } from './types';\n\nconst { common } = Kebab.factory;\nconst menuActions = [...Kebab.getExtensionsActionsForKind(PodDisruptionBudgetModel), ...common];\n\nconst PodDisruptionBudgetDetails: React.FC<PodDisruptionBudgetDetailsProps> = ({ obj }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"co-m-pane__body\">\n      <SectionHeading text={t('console-app~PodDisruptionBudget details')} />\n      <div className=\"co-m-pane__body-group\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <ResourceSummary resource={obj} showPodSelector />\n          </div>\n          <div className=\"col-sm-6\">\n            <dl className=\"co-m-pane__details\">\n              <DetailsItem\n                label={\n                  !_.isNil(obj.spec.minAvailable)\n                    ? t('console-app~Min available')\n                    : t('console-app~Max unavailable')\n                }\n                obj={obj}\n                path={!_.isNil(obj.spec.minAvailable) ? 'spec.minAvailable' : 'spec.maxUnavailable'}\n              >\n                {!_.isNil(obj.spec.minAvailable) ? obj.spec.minAvailable : obj.spec.maxUnavailable}\n              </DetailsItem>\n              <DetailsItem\n                label={t('console-app~Allowed disruption')}\n                obj={obj}\n                path=\"status.disruptionsAllowed\"\n              >\n                {obj.status.disruptionsAllowed}\n              </DetailsItem>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const PodDisruptionBudgetDetailsPage: React.FC<PodDisruptionBudgetDetailsPageProps> = (\n  props,\n) => (\n  <DetailsPage\n    {...props}\n    kind={props.kind}\n    menuActions={menuActions}\n    pages={[\n      navFactory.details(PodDisruptionBudgetDetails),\n      navFactory.editYaml(),\n      navFactory.pods(),\n    ]}\n  />\n);\n\nexport type PodDisruptionBudgetDetailsPageProps = {\n  match: any;\n  kind: string;\n};\nexport type PodDisruptionBudgetDetailsProps = {\n  obj: PodDisruptionBudgetKind;\n};\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListPageBody } from '@console/dynamic-plugin-sdk';\nimport { useListPageFilter } from '@console/internal/components/factory/ListPage/filter-hook';\nimport ListPageCreate from '@console/internal/components/factory/ListPage/ListPageCreate';\nimport ListPageFilter from '@console/internal/components/factory/ListPage/ListPageFilter';\nimport ListPageHeader from '@console/internal/components/factory/ListPage/ListPageHeader';\nimport { useK8sWatchResource } from '@console/internal/components/utils/k8s-watch-hook';\nimport { referenceForModel } from '@console/internal/module/k8s';\nimport { PodDisruptionBudgetModel } from '../../models';\nimport PodDisruptionBudgetList from './PDBList';\nimport { PodDisruptionBudgetKind } from './types';\n\nexport const PodDisruptionBudgetsPage: React.FC<PodDisruptionBudgetsPageProps> = ({\n  namespace,\n  showTitle = true,\n}) => {\n  const { t } = useTranslation();\n  const [resources, loaded, loadError] = useK8sWatchResource<PodDisruptionBudgetKind[]>({\n    groupVersionKind: {\n      group: PodDisruptionBudgetModel.apiGroup,\n      kind: PodDisruptionBudgetModel.kind,\n      version: PodDisruptionBudgetModel.apiVersion,\n    },\n    isList: true,\n    namespaced: true,\n    namespace,\n  });\n\n  const [data, filteredData, onFilterChange] = useListPageFilter(resources);\n  const resourceKind = referenceForModel(PodDisruptionBudgetModel);\n  const accessReview = {\n    groupVersionKind: resourceKind,\n    namespace: namespace || 'default',\n  };\n  return (\n    <>\n      <ListPageHeader title={showTitle ? t(PodDisruptionBudgetModel.labelPluralKey) : undefined}>\n        <ListPageCreate groupVersionKind={resourceKind} createAccessReview={accessReview}>\n          {t('console-app~Create PodDiscruptionBudget')}\n        </ListPageCreate>\n      </ListPageHeader>\n      <ListPageBody>\n        <ListPageFilter data={data} loaded={loaded} onFilterChange={onFilterChange} />\n        <PodDisruptionBudgetList\n          data={filteredData}\n          unfilteredData={resources}\n          loaded={loaded}\n          loadError={loadError}\n        />\n      </ListPageBody>\n    </>\n  );\n};\n\ntype PodDisruptionBudgetsPageProps = {\n  namespace: string;\n  showTitle?: boolean;\n};\n","import { sortable } from '@patternfly/react-table';\nimport * as classNames from 'classnames';\nimport i18next from 'i18next';\nimport { TableColumn } from '@console/dynamic-plugin-sdk';\nimport { Kebab } from '@console/internal/components/utils';\nimport { PodDisruptionBudgetKind } from './types';\n\nexport const tableColumnInfo = [\n  { className: '', id: 'name' },\n  { className: '', id: 'namespace' },\n  { className: classNames('pf-m-hidden', 'pf-m-visible-on-sm'), id: 'selector' },\n  { className: classNames('pf-m-hidden', 'pf-m-visible-on-md'), id: 'minAvailable' },\n  { className: classNames('pf-m-hidden', 'pf-m-visible-on-lg'), id: 'disruptionsAllowed' },\n  { className: classNames('pf-m-hidden', 'pf-m-visible-on-xl'), id: 'creationTimestamp' },\n  { className: Kebab.columnClass, id: '' },\n];\n\nexport const getPDBTableColumns = (): TableColumn<PodDisruptionBudgetKind>[] => [\n  {\n    title: i18next.t('console-app~Name'),\n    sort: 'metadata.name',\n    transforms: [sortable],\n    props: { className: tableColumnInfo[0].className },\n    id: tableColumnInfo[0].id,\n  },\n  {\n    title: i18next.t('console-app~Namespace'),\n    sort: 'metadata.namespace',\n    transforms: [sortable],\n    props: { className: tableColumnInfo[1].className },\n    id: tableColumnInfo[1].id,\n  },\n  {\n    title: i18next.t('console-app~Selector'),\n    sort: 'spec.selector',\n    transforms: [sortable],\n    props: { className: tableColumnInfo[2].className },\n    id: tableColumnInfo[2].id,\n  },\n  {\n    title: i18next.t('console-app~Availability'),\n    sort: 'spec.minAvailable',\n    transforms: [sortable],\n    props: { className: tableColumnInfo[3].className },\n    id: tableColumnInfo[3].id,\n  },\n  {\n    title: i18next.t('console-app~Allowed disruptions'),\n    sort: 'status.disruptionsAllowed',\n    transforms: [sortable],\n    props: { className: tableColumnInfo[4].className },\n    id: tableColumnInfo[4].id,\n  },\n  {\n    title: i18next.t('console-app~Created'),\n    sort: 'metadata.creationTimestamp',\n    transforms: [sortable],\n    props: { className: tableColumnInfo[5].className },\n    id: tableColumnInfo[5].id,\n  },\n  {\n    title: '',\n    props: { className: tableColumnInfo[6].className },\n    id: tableColumnInfo[6].id,\n  },\n];\n"],"sourceRoot":""}